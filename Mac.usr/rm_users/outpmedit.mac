import RMInter, PaymInter, BankInter, OprInter;
import oralib; //Jushmanov 2014-02-20 C-19151

var PaymentObj:RsbPayment;

macro ExecuteStep( doc, first, KindDoc )

   array FlgRM;       // Массив флагов для R-макета
   array FlgCP;       // для SWIFT


   FlgRM[PNRMPM_SHIFR]          = 1;
   FlgRM[PNRMPM_PACK]           = 1;

   if (PaymentObj.PayerFIID != 0)
      FlgCP[PNCPPM_NAMER ]         = 1;
      FlgCP[PNCPPM_DETAILS]        = 1;
      FlgCP[PNCPPM_ADDITIONALINFO] = 1;
      FlgCP[PNCPPM_ACCOUNTR]       = 1;
   end;

   if (PM_ProcessPanel(PaymentObj, 1, null, FlgRM, FlgCP))
      return 1;
   end;

   return 0;

end;


//Jushmanov 2014-02-20 C-19151
macro PostStepAction( message,      /* 1 - выполнение шага; 2 - откат шага;   */
                      errTrn,       /* статус выполнения шага. 0 - ошибки нет */
                      FirstDoc,     /* указатель на первичный документ        */
                      ID_Oper,      /* внутренний идентификатор операции      */
                      Number_Step,  /* Номер шага операции (из настроек)      */
                      KindOper,     /* номер вида операции                    */
                      KindDoc,      /* номер вида первичного документа        */
                      KindStep,     /* вид шага операции                      */
                      ID_Step )     /* внутренний идентификатор шага операции */
    private var logquery;

    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(ID_Oper) != V_INTEGER) and (valtype(ID_Oper) != V_STRING)) ID_Oper = 0; end;
        if ((valtype(ID_Step) != V_INTEGER) and (valtype(id_Step) != V_STRING)) ID_Step = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + ID_Oper + " AND t_id_step = " + ID_Step;
        ExecSQL(logquery, null, false);
    end;
    
    return 0;
end;