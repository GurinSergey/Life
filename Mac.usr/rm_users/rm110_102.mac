//-----------------------------------------------------------------------------
// Блок     : 29000 - "Позиционирование"
// Шаг      : 10    - "Позиционирование"
// Описание : Макрос шага
//-----------------------------------------------------------------------------
import InsCarryDoc, PaymInter, PTInter, OprInter, BankInter, 
       "rmtools.mac", "cbctuncs.mac", "wlglobal.mac", "cbsttls.mac", "pm_common.mac", pm_setst, "pmcarfun.mac","pm_tools.mac";

var PaymentObj:RsbPayment;

record Corschem(corschem);/*корсхема до позиционирования*/
record OutProp(pmprop);/*исходящее свойство платежа после позиционирования*/

private macro IsUnfinAcc( FIID, Account ):bool
  var select = " select 1 " +
                 " from dmcaccdoc_dbt doc, dmccateg_dbt cat " +
                " where doc.t_Chapter = 1 " +
                  " and doc.t_Currency = :FIID " +
                  " and doc.t_Account = :Account " +
                  " and doc.t_CatID  = cat.t_ID " +
                  " and cat.t_Number = 103 ";

  var params = makeArray( SQLParam( "FIID", FIID ), 
                          SQLParam( "Account", Account ) );
  var rs = execSQLselect( select, params, TRUE );
  
  if( rs and rs.moveNext() )
    return true;
  else
    return false;
  end;
end;

macro ПолучитьПроводкуПоКорсчету(PaymentID, rs:@RsdRecordset)

   var cmd = RSDCommand("select   distinct pmd.t_autokey, " +
                        "         nvl (ad.t_iapplicationkind, adv.t_iapplicationkind) t_appkind, " +
                        "         nvl (ad.t_applicationkey, adv.t_applicationkey) t_appkey, " +
                        "         nvl (ad.t_date_carry, adv.t_date_carry) t_date, " +
                        "         nvl (ad.t_chapter, adv.t_chapter) t_chapter, " +
                        "         nvl (ad.t_code_currency, adv.t_code_currency) t_payerfiid, " +
                        "         nvl (ad.t_sum, adv.t_sum) t_payeramount, " +
                        "         nvl (ad.t_account_payer, adv.t_account_payer) t_payeraccount, " +
                        "         nvl (ad.t_code_currency, adv.t_code_currency) t_receiverfiid, " +
                        "         nvl (ad.t_sum, adv.t_sum) t_receiveramount, " +
                        "         nvl (ad.t_account_receiver, adv.t_account_receiver) t_receiveraccount, " +
                        "         nvl (ad.t_department, adv.t_department) t_department " +
                        "  from   dpmdocs_dbt pmd, " +
                        "         darhdoc_dbt ad, " +
                        "         darhdoc$_dbt adv, " +
                        "         dpmprop_dbt pmpr, " +
                        "         dcorschem_dbt cor " +
                        " where       pmd.t_paymentid = ? " +
                        "         and ad.t_applicationkey(+) = pmd.t_applicationkey " +
                        "         and adv.t_applicationkey(+) = pmd.t_applicationkey " +
                        "         and adv.t_iapplicationkind(+) = pmd.t_applicationkind " +
                        "         and pmpr.t_paymentid = pmd.t_paymentid " +
                        "         and pmpr.t_corschem = cor.t_number " +
                        "         and ( (ad.t_account_payer = cor.t_account or ad.t_account_receiver = cor.t_account) " +
                        "              or (adv.t_account_payer = cor.t_account or adv.t_account_receiver = cor.t_account)) ");

   cmd.addparam("pmid", RSDBP_IN, paymentid);
   rs = RSDRecordset(cmd);

   return rs.movenext();

end;


//-----------------------------------------------------------------------------
// Выполнение шага
//-----------------------------------------------------------------------------
macro ExecuteStep( doc, first )

  var DKFlag:string = "";
  
  // Счета
  var accUncs     /*:string = ""*/,
      AccountCarry:string = "";
  var stat = 0;
  var СуществуетПроводка:bool=false;
  var rs:RsdRecordset;  
  var AccountUnclosed;
  // Проводка
  var paymtr:RsbPaymTransaction = PaymentObj.MakeTransaction();

  // Для поиска корсхемы
  record cors(corschem);

  if((PaymentObj.OutCorschem == OutProp.Corschem) and (PaymentObj.OutTransferDate == OutProp.TransferDate))
    if(GetOprStatus(OPR_PAYM_DO) == OPR_PM_ST_POS)
      return УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_DISCHARGE);
    end;
    if(ПлатежЗачисленНаСНР(PaymentObj))
      PaymentObj.ValueDate = {curdate};
      SetOprDate(29000000, {curdate});
    end;
    if( IsCarryPlanDocs() )
      if ( not CarryPlanDocuments(PaymentObj.PaymentID) )
        MsgBox("Ошибка при помещении планируемой проводки в проведенные");
        return 1;
      end;
    end;
    return 0;
  end;

  if( PaymentObj.DocKind == DLDOC_MULTYPM )
    MemoryError( 6235 ); //PM_MSG_REPOSITMULTY_NOTALLOW
    DisplayError();
    return 1;
  end;
  
  if( (PaymentObj.DbFlag == SET_CHAR) and ( PaymentObj.StartDepartment != PaymentObj.Department ) )
    MsgBox("Дебетовые документы разрешено перепозиционировать только в начальном филиале");
    return 1;
  end;

//Seleznev - не факт что проводка по корсчету всегда последняя
//  if(ПолучитьВсеПроводки(PaymentObj.PaymentID,@rs) and rs.moveLast())
  if(ПолучитьПроводкуПоКорсчету(PaymentObj.PaymentID,@rs))
    
    if( ((rs.value("t_ReceiverAccount") == Corschem.Account) and (PaymentObj.DbFlag == UNSET_CHAR)) OR
        ((rs.value("t_PayerAccount") == Corschem.Account) and (PaymentObj.DbFlag == SET_CHAR))
      )
      if( ((PaymentObj.DbFlag == UNSET_CHAR) AND (DeleteCarryOnAccount( PaymentObj, PRT_Credit, rs.value("t_ReceiverFIID"), rs.value("t_ReceiverAccount") ))) OR
          ((PaymentObj.DbFlag == SET_CHAR) AND (DeleteCarryOnAccount( PaymentObj, PRT_Debet, rs.value("t_PayerFIID"), rs.value("t_PayerAccount") )))
        )
        msgbox("Ошибка при удалении балансовых проводок");
        return 1;
      end;
            
      if( PM_FindBalanceInReg_117( "PS\\REQOPENACC\\Счета клиентов", rs.value("t_PayerAccount"), 1 )) 
        if( PaymentObj.MakeReserve( rs.value("t_PayerAccount"), CHAPT1, PaymentObj.PayerFIID, PaymentObj.PayerAmount, {curdate} ) != 0 )
          msgbox( "Ошибка при формировании претензии к счету " + rs.value("t_PayerAccount") );
          return 1;
        end;
      end;
    end;
  end;
         
  PaymentObj.ValueDate = {curdate};
  SetOprDate(29000000, {curdate});
  if(УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_ENTER))
    MsgBox( "Возникла ошибка при смене статусов операции платежа" );
    return 1;
  end;
             
  //Если изменилась исходящая корхема платежа
  if((PaymentObj.OutCorschem != OutProp.Corschem) or (PaymentObj.OutCorschemFIID != OutProp.PayFIID))
    if( НайтиКорсхему(OutProp.Corschem, OutProp.PayFIID, cors))
      MsgBox("Не найдена исходящая корсхема");
      return 1;
    end;
         
    if( cors.Department != Corschem.Department ) //Если корсхема в другом узле ТС
      if(УстановитьСтатусыПлатежа( OPR_PAYM_CABS, OPR_PM_ST_MFR_NO ))
        MsgBox( "Возникла ошибка при смене статусов операции платежа" );
        return 1;
      end;            
    end ;

  end;


  if(GetOprStatus(OPR_PAYM_DIRECT) != OPR_PM_ST_DIR_OUT)
    if(УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_OUT))
      MsgBox( "Возникла ошибка при смене статусов операции платежа" );
      return 1;
    end;   
  end;
 
  if( IsCarryPlanDocs() )
    if ( not CarryPlanDocuments(PaymentObj.PaymentID) )
      MsgBox("Ошибка при помещении планируемой проводки в проведенные");
      return 1;
    end;
  end;            



  return 0;
end;
