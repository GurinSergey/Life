/**
 * RS-Bank 6.0                                            R-Style Software Lab
 *
 * File Name   : main_natBalance.mac
 * Description : Выпуск рублевого баланса
 * Comment     :
 * @since      : 28.05.2010
 * @author     : Shestakov Dmitry
 * @version    : 6.00.020.30
 */
//26.05.2014 I-00488713 DPN Временное решение.

import NatBalanceCalculator;
import NatControlBalanceController;
import NatBalancePrint;
import ofstream;

import natBalanceData;

private var printOfstream;
private var controlOfstream;

/**
 *  Отчет.
 */
macro produceReport(departmentId, organizationStructure, issueMode,
                    planNumber, chapterNumber,
                    periodKind, dateIn, dateOut,
                    reportForm, dimension, usingCoverAccounts, transFiId, needPartTotals,
                    needSpodTurnTotals, needApostrophes, needZeroAccounts, needEverydayReport)

    /*инициализация параметров для балансового отчета*/
	//if (dimension == 7)     //26.05.2014 I-00488713 DPN Временное решение. Неправильное заполнение (или очерёдность заполнения) параметров макропроцедуры. 
                             //Вн.код, жду ответа разработки.
	if (usingCoverAccounts == 7)
		SetGlobalParameter ("dimension_asv", 0);
	else
		SetGlobalParameter ("dimension_asv", 2);
	end;

	/*DAI заглушка для R-525451*/
	needEverydayReport = GetTrue(False,"Выводить с разбивкой за каждый день?");

    natBalanceParameters(
                    departmentId, organizationStructure, issueMode,
                    planNumber, chapterNumber,
                    periodKind, dateIn, dateOut,
                    reportForm, dimension, usingCoverAccounts, transFiId, needPartTotals,
                    needSpodTurnTotals, needApostrophes, needZeroAccounts, needEverydayReport
                        );

    /* Контроль открытых опердней */
    var opd = RepOperdaysOpened(natBalanceParameters().getDepartmentList(),
                                natBalanceParameters().getDateIn(),
                                natBalanceParameters().getDateOut());
    if (not opd.shouldContinue())
        exit(1);
    end;

    printOfstream = TOfstream("nat_balance");
    controlOfstream = TOfstream("ctrl_balance");

    var natBalancePrint;
    var natControlBalanceController = TControlBalanceController(controlOfstream);

    var m_dateOut = natBalanceParameters().getDateOut();

    begAction(1000, "Выпускается отчет. Ждите...");

    if (natBalanceParameters().getIsPrintEveryDay() == true)

        natBalanceParameters().setDateOut(natBalanceParameters().getDateIn());

        while (natBalanceParameters().getDateOut() <= m_dateOut)
            TBalanceCalculator().calculate();

            natBalancePrint = TNatBalancePrint(printOfstream);
            natBalancePrint.execute();
            natControlBalanceController.control();

            natBalanceParameters().setDateIn(natBalanceParameters().getDateIn() + 1);
            natBalanceParameters().setDateOut(natBalanceParameters().getDateOut() + 1);
        end;

    else

        TBalanceCalculator().calculate();
        natBalancePrint = TNatBalancePrint(printOfstream);
        natBalancePrint.execute();
        natControlBalanceController.control();

    end;

    endAction();

    return true;
end;

macro showReport()

    controlOfstream.show();
    printOfstream.show();

end;

macro saveReport(reportName, controlName)

    controlOfstream.save(controlName);
    printOfstream.save(reportName);

end;

macro batchProduce(reportName, controlName,
                   departmentId, organizationStructure, issueMode, planNumber, chapterNumber, periodKind, dateIn, dateOut, reportForm,
                   dimension, usingCoverAccounts, transFiId, needPartTotals, needSpodTurnTotals, needApostrophes, needZeroAccounts,
                   needEverydayReport)

//    var dialogFlag = setDialogFlag(0);

    produceReport(departmentId, organizationStructure, issueMode, planNumber, chapterNumber, periodKind, dateIn, dateOut, reportForm,
                  dimension, usingCoverAccounts, transFiId, needPartTotals, needSpodTurnTotals, needApostrophes, needZeroAccounts,
                  needEverydayReport);

    saveReport(reportName, controlName);
	GetGlobalParameter ("dimension_asv", true);
//    setDialogFlag(dialogFlag);

end;
