/*───────────────────────────────────────────────────────────────────────────┐
  RS-Bank 5.1                                            R-Style Software Lab
  Файл подсистемы "Отчёты ГКБО"

  Общие функции для выписок по валютным лицевым счетам

File Name   : acv.mac
CREATED: June 23,1999
Programmer  : LCh
MODIFICATIONS:
  29.12.00 Мол. Имя файла протокола формируется теперь функцией GetTxtFileName()
  17.07.2001 - Sal. SCR 22458.  Введен макрос ПечататьДваСтолбца( Вкл ).
  25.05.2005 - BugZ SCR 68015.  Нормальный вывод вышестоящих организаций.
└───────────────────────────────────────────────────────────────────────────*/
import BankInter, rep_lib, lib_path, ocp, CTInter, globals, lib_lang;
import PTInter, cb_sql, lib_str;

record doc( arhdoc );
record doc_inf( "docinfo.rec" );

FILE party(party );              /* Справочник субъектов*/

Const  С_основанием   = 1,
       Без_основания  = 2,
       Отметка_сторно = 3;

/*================= Настройка ===================*/

/*      УчетСчетаОВП      = TRUE;*/

var  Псевдографика,
     ПечатьВДваСтолбца = TRUE, 
     Учет_Покрытия_В_ДПД;

     getRegistryValue( "REPORT\\ACV\\ПСЕВДОГРАФИКА", V_BOOL, Псевдографика, NULL );
       /* Учет проводок по счету покрытия при определении ДПД */
     getRegistryValue( "REPORT\\ACV\\УЧЕТ ПОКРЫТИЯ В ДПД", V_BOOL, Учет_Покрытия_В_ДПД, NULL );
      
              /* Массив исключений для рублевых документов главы 1 к сделкам */
              /* (мультивалютным проводкам). */
              /* В массив можно вставить номера бал.счетов разных порядков  */
              /* ( 61306, 61306.01, 61306.02 и т. д.) или только маски      */
              /* бал.счетов ( 61306 для всех указанных выше счетов )        */
array  БалДляПроверки1;
       БалДляПроверки1(0) = "61306";
       БалДляПроверки1(1) = "61406";
       БалДляПроверки1(2) = "61307";
       БалДляПроверки1(3) = "61407";
       БалДляПроверки1(4) = "61308";
       БалДляПроверки1(5) = "61408";

/*===============================================*/

file  Файл1 () txt;
file  Файл2 () txt;


var  Основание = Без_основания,
     ЕстьПротокол = FALSE,
     Протокол= GetTxtFileName( "tmp");

var   NameFile1 = GetTxtFileName( "tmp1"),
      NameFile2 = GetTxtFileName( "tmp2"),
      ЕстьФайл1 = FALSE,
      ЕстьФайл2 = FALSE,
      ПервыйПоГлаве = TRUE,
      WideMax,    Wide;
  var /*Name,*/ err;


/*======= Функции для вывода отчета в две колонки ===========*/

macro MakeLenStr( str, len )
 var   l = strlen(str);
   if   ( l < len ) return  str + mkstr( " ", len - l );
   elif ( l > len ) return  substr( str, len );
   else return str;
   end;
end;

macro НапечататьРазделитель( )
  if ( Псевдографика )
    print( mkstr( "─", Wide ) );
    if ( ЕстьФайл2 )
      print( "   "+mkstr( "─", Wide ) );
    end;
  else
    print( mkstr( "-", Wide ) );
    if ( ЕстьФайл2 )
      print( "   "+mkstr( "-", Wide ) );
    end;
  end;
    println("");
end;


macro НапечататьПорцию( )

  if ( not ПечатьВДваСтолбца )  return; end;

  if ( not ЕстьФайл1 and not  ЕстьФайл2 )    return; end;

  SetOutPut( NULL, TRUE );

  if ( ПервыйПоГлаве )
      НапечататьРазделитель( ); ПервыйПоГлаве = FALSE;
  end;

  if ( ЕстьФайл1 and not open( Файл1, NameFile1 ) )
    exit( 0, "Не открыт временный файл " + NameFile1 );
  end;

  if ( ЕстьФайл2 and not open( Файл2, NameFile2 ) )
    exit( 0, "Не открыт временный файл " + NameFile2 );
  end;


  if ( ЕстьФайл1 )
    while( next(Файл1) )  /* пока есть строки в 1-м */
     print( MakeLenStr( Файл1.str, Wide ) );
     if ( ЕстьФайл2 and next(Файл2) )
       print( "   "+ Файл2.str );
     end;
     println( "" );
    end;
  end;

  if ( ЕстьФайл2 )
     while( next(Файл2) )  /* пока есть строки в 2-м */
       print( mkstr( " ", Wide ) );
       println( "   "+Файл2.str );
     end;
  end;

  НапечататьРазделитель( );

  if ( ЕстьФайл1 )   close( Файл1 ); ЕстьФайл1 = FALSE; end;
  if ( ЕстьФайл2 )   close( Файл2 ); ЕстьФайл2 = FALSE; end;

end;

macro ПереключитьВывод()
   if ( not ПечатьВДваСтолбца )  return; end;
   if ( ЕстьФайл1 and ЕстьФайл2 )   /* Заполнены оба буфера */
      НапечататьПорцию( );
   end;
   if ( not ЕстьФайл1 )             /* не заполнен 1-й */
      SetOutPut( NameFile1, FALSE );
      ЕстьФайл1 = TRUE;
   else
      SetOutPut( NameFile2, FALSE );
      ЕстьФайл2 = TRUE;
   end;
end;

macro КонецГлавы( )
   if ( not ПечатьВДваСтолбца )  return; end;
   НапечататьПорцию( );
end;

/*===============================================*/

MACRO ВышестоящиеОрганизации( Дата )
 var Superior, pt, sep, bik = "БИК:";

 ПереключитьВывод();
 party.PartyID = {OurBank};
 getEQ( party );
 Superior = readNoteForObject( OBJTYPE_PARTY, UniID( party, OBJTYPE_PARTY ), 21, Дата );

 [
 ];
 if(( Superior == "") or ( ValType( Superior ) == V_UNDEF ))
   [ ########################################################### #### ############
   ]( {Name_Bank}:c:w, bik:w, {MFO_Bank}:l:w );
 else
   sep = index( Superior, "|");
   while(sep)
      [ ########################################################### #### ############
      ]  (substr( Superior, 1, sep-1 ):c:w, bik:w, {MFO_Bank}:l:w );
      Superior = substr( Superior, sep + 1 );
      sep = index( Superior, "|");
   end;
   [ ########################################################### #### ############
   ]  ( Superior:c:w, bik:w, {MFO_Bank}:l:w );
 end;

END;

/*===============================================*/

MACRO ЗаголовокГлавы( Глава )
  ПервыйПоГлаве = TRUE;
  ПечатьБезКопеек( Глава );
[
 Глава     #
]( НазваниеГлавы( Глава ) );
  if ( not ПечатьВДваСтолбца )
     НапечататьРазделитель( );
  end;
END;

MACRO ЗаголовокГлавы_ПГ( Глава )
  ПервыйПоГлаве = TRUE;
  ПечатьБезКопеек( Глава );
[
 Глава     #
]( НазваниеГлавы( Глава ) );
  if ( not ПечатьВДваСтолбца )
     НапечататьРазделитель( );
  end;
END;

/*===============================================*/
macro ПрерываниеПользователя()
  SetOutPut( NULL, TRUE );
  println( "Выпуск отчета прерван пользователем" );
end;

macro ПечатьОснования( flag )
  if ( (flag == С_основанием  ) or
       (flag == Без_основания ) or 
       (flag == Отметка_сторно ) )
    Основание = flag;
  else
    Основание = Без_основания;
  end;

  if ( Основание != Без_основания )
    Wide = WideMax;
  end;
end;

macro ПечатьАпостр()
   Апострофы = TRUE;
end;

macro ПечататьДваСтолбца( Вкл )
   if ( Вкл )
      ПечатьВДваСтолбца = TRUE;
   else
      ПечатьВДваСтолбца = FALSE;
   end;
end;

macro PutSum( Sum )
  if ( Апострофы )  return string( Sum:a );  /* Печатать с апострофами */
  else              return string( Sum );
  end;
end;

macro PutAccF( Acc )
   return string( Acc:f );
end;


macro ПечатьОшибки( НомерОш, Дата, Счет, НомерДок, СчетКор, Сумма,
                    НомерСд, ДатаНачала, ДатаКонца )
   var str, NameFile;
   if ( ЕстьПротокол )
     NameFile = SetOutPut( Протокол, TRUE );
   else
     ЕстьПротокол = TRUE;
     NameFile = SetOutPut( Протокол, FALSE );
     if ( ДатаНачала != ДатаКонца )
       str = "Выписка по лицевым счетам за период с "+string(ДатаНачала)+ " по "+string(ДатаКонца);
     else
       str = "Выписка по лицевым счетам за дату "+string(Дата);
     end;
     println( str );
   end;

   str = "Лицевой счет: "+PrAccount(Счет);
   println( str );

   if ( ДатаНачала != ДатаКонца )
         str = "Дата "+string(Дата) + "; ";
   else  str = "";
   end;

   if   ( НомерОш == 1 )
     str = str + "№ док. - "+string(НомерДок)+ "; кор.счет "+PrAccount(СчетКор) +"; сумма "+PutSum(Сумма)+" Документ не привязан к мультивалютной проводке";
   elif ( НомерОш == 2 )
     str = str + "№ сделки - "+string(НомерСд)+ "; № док. - "+string(НомерДок)+"; кор.счет "+PrAccount(СчетКор) +"; сумма "+PutSum(Сумма)+" Найдено более одного счета, корреспондирующего с исходным в данной сделке, БС которого не входит в массив исключений";
   elif ( НомерОш == 3 )
     str = str + "№ док. - "+string(НомерДок)+ "; кор.счет "+PrAccount(СчетКор) +"; сумма "+PutSum(Сумма)+" Невозможно определить документ рублевого покрытия";
   end;
   println( str );
   SetOutPut( NameFile, TRUE );
end;

MACRO  БылиОшибки( )
   if ( ЕстьПротокол )
     MsgBox("Были обнаружены ошибки.Подробнее - см.файл:", Протокол );
   end;
end;

MACRO  ПроверкаБал( Глава, БалСчет )
   if ( Глава == 1 )
       return СчетИзМассива( БалСчет, БалДляПроверки1 );
/*   elif ( Глава == 3 )
       return СчетИзМассива( БалСчет, БалДляПроверки3 );
*/
   else return FALSE;
   end;
END;


macro ПечатьВыпискиПоСчету( Глава, БалСчет, ЛицСчет, ТипСчета ) 
/* Возвращаем FALSE, если не надо печатать */
/*  не показывать (SHOW_OCP = NO) и счет имеет тип TA_OCP */
/*  if ( not УчетСчетаОВП  and ПроверкаОВП( Глава, БалСчет ) )*/
/* 27.02.2001 Kasatsky */
  if ( not FlagOfPrintAccountsOCP and IsAccOCPFromType(ТипСчета) )
       return FALSE;
  else return TRUE;
  end;
end;


macro УчетПокрытия_в_ДПД()
  return Учет_Покрытия_В_ДПД;
end;


macro СформироватьОснование( ОснованиеДок, ДатаИспр, НомерИспр)
  if ( Основание == Отметка_сторно )
    if ( ( ДатаИспр != null ) and (ДатаИспр != date(0,0,0) ) )
         return  string("Сторнировано ",ДатаИспр:f," № ",НомерИспр );
    else return "";
    end;
  elif ( Основание == С_основанием )
    if ( ( ДатаИспр != null ) and (ДатаИспр != date(0,0,0) ) )
         return  string("Сторнировано ",ДатаИспр:f," № ",НомерИспр," ",ОснованиеДок);
    else return ОснованиеДок;
    end;
  end;
  return "";
end;

ReplaceMacro( "PrAccount", "PutAccF" );
/*==========================================*/

/*eof*/
