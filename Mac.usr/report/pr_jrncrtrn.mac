/**
 *  RS-Bank 6.0                   
 *
 *  File Name   : pr_jrncrtrn.mac                                   January 24, 2007
 *  Programmer  : 
 *  Description : Журнал исправительных оборотов.
 *  Comment     : 
 *  Modify      : Ivkina 24.01.2007
 */

IMPORT OprInter,FIInter,CTInter,"treport.mac", BankInter, oralib, cb_sql, "prpm.mac", globals;
import Reporting;
import rep_lib;
//------------------------------------------------------------------------------
private var ALLCURRENCY = -2;   /* Все ин. валюты */

/*ширина полей таблицы*/
var widthDate   = 10;
var widthNumb   = 5;
var widthType   = 12;
var widthCur    = 6;
var widthDebet  = 30;
var widthCredit = 30;
var widthSum    = 14;
var widthSumRur = 19;
var widthReason = 30;

/*общая ширина отчета*/
var width = 2 + widthDate  + 2 + widthNumb   + 2 + widthType + 2 + widthCur    + 
            2 + widthDebet + 2 + widthCredit + 2 + widthSum  + 2 + widthSumRur + 2 + widthReason + 2;
//------------------------------------------------------------------------------
private macro PrintHeadOfLog1(Dep_Number, OrgStructure, First_Date, Second_Date, FIID)

  var fininsrtString = "";

  printBankHeader(Dep_Number, OrgStructure, width);
  println();
  println(StrAlign("Журнал", width, STR_ALIGN_CENTER));
  println(StrAlign("исправительных оборотов", width, STR_ALIGN_CENTER));
  if(FIID != ALLFININSTR)
    if(FIID != ALLCURRENCY)
      fininsrtString = ПолучитьКодФинИн(FIID) + " (" + ПолучитьИмяФинИн(FIID) + ") ";
    end;
    println(StrAlign("в валюте " + fininsrtString, width, STR_ALIGN_CENTER));
  end;
  println(StrAlign("за период с " + string(First_Date:f) + " по " + string(Second_Date:f), width, STR_ALIGN_CENTER));
  println();
end;

//-------------------------------------------------
PRIVATE MACRO PrintHeadCages1(Report1 : CTableReport)

  Report1.AddColumn("Дата",               widthDate   );  
  Report1.AddColumn("№ док",              widthNumb   );  
  Report1.AddColumn("Вид оборотов",       widthType   );  
  Report1.AddColumn("Валюта",             widthCur    );
  Report1.AddColumn("Дебет",              widthDebet  );
  Report1.AddColumn("Кредит",             widthCredit );
  Report1.AddColumn("Сумма в валюте",     widthSum    );
  Report1.AddColumn("Эквивалент в рублях",widthSumRur );
  Report1.AddColumn("Основание",          widthReason );
  Report1.PrintHead;               

END;

//-----------------------------------------------------------------
PRIVATE MACRO PrintOneLogHead1(Report : CTableReport, rs, Chapter)

  var  chapt;

  chapt = TRsbDataset( "SELECT T_SYMBOL,T_NAME FROM DOBCHAPTR_DBT WHERE T_CHAPTER = "+Chapter);
  IF(chapt.moveNext)
[Глава ##### #########################](Chapter,chapt.value(1));
  ELSE
[Глава #################];
  END;
END;

//-----------------------------------------------------
PRIVATE MACRO PrintOneDoc1(Report : CTableReport, rs, flag)

    record Document(arhdoc);
    var  cur,cur_cmd;
    var  SumR : moneyl;
    var  ID;
    var  count;
    var  FIID_num = 4;
    var rateDate;
    
    rateDate = sqlDate2date(rs.value(15));
    rateDate = ternary(strlen(trim(string(ratedate))) != 0, ratedate, sqlDate2date(rs.value(8)));

    cur = TRsbDataset( "SELECT T_FI_CODE FROM DFININSTR_DBT WHERE T_FIID = "+string(rs.value(FIID_num)));
    
    if (flag==1) Report.PrintSeparator(TRUE);end;
    
    if(cur.moveNext)
        if(int(rs.value(FIID_num)) != NATCUR)
            ConvSum( SumR , rs.value(5), rateDate, int(rs.value(FIID_num)) );
            Report.PrintStringTransferByWord(sqlDate2date(rs.value(8)),rs.value(11),rs.value(12),
                cur.value(0),string(rs.value(6):f),string(rs.value(7):f),rs.value(5),SumR,rs.value(10));  
        else
/*SDA
            Report.PrintStringTransferByWord(sqlDate2date(rs.value(8)),rs.value(11),rs.value(12),
                cur.value(0),string(rs.value(6):f),string(rs.value(7):f),rs.value(5),"",rs.value(10));  
*/
            Report.PrintStringTransferByWord(sqlDate2date(rs.value(8)),rs.value(11),rs.value(12),
                cur.value(0),string(rs.value(6):f),string(rs.value(7):f),rs.value(5),rs.value(5),rs.value(10));  
        end;
    else
        if(int(FIID_num) != NATCUR)                                              
            ConvSum( SumR , rs.value(5), rateDate, int(rs.value(FIID_num)) );
            Report.PrintStringTransferByWord(sqlDate2date(rs.value(8)),rs.value(11),rs.value(12),
                "",string(rs.value(6):f),string(rs.value(7):f),rs.value(5),SumR,rs.value(10));  
        else
/*SDA
            Report.PrintStringTransferByWord(sqlDate2date(rs.value(8)),rs.value(11),rs.value(12),
                "",string(rs.value(6):f),string(rs.value(7):f),rs.value(5),"",rs.value(10));  
*/
            Report.PrintStringTransferByWord(sqlDate2date(rs.value(8)),rs.value(11),rs.value(12),
                "",string(rs.value(6):f),string(rs.value(7):f),rs.value(5),rs.value(5),rs.value(10));  

        end;
    end;
END;

//---------------------------------------------------
PRIVATE MACRO PrintLogPodval1(Report : CTableReport)
  println();
  println("Главный бухгалтер________________________ /                             /");
  println();
  println("Бухгалтер        ________________________ /                             /");
END;
//-----------------------------------------------------
MACRO CorReport2(DprtID, OrgStructure, IssueMode, Chapter, FIID, First_Date, Second_Date, Correct_Kind)

    var rs , cmd , strcmd, strcmd_cb_doc = "", strcmd_multydoc = "" ;
    var Report1=CTableReport( 0, FALSE, FALSE);
    var Chapter_ = 0, Dep_ = -1, FIID_ = -1;
    var Chapter_new, Dep_new, FIID_new;
    var Count_ispr, Count_err;
    var NextRecord;
    var SumMoney : moneyl;
    var wherecond = "";
    var flag;
    var departmentList;
    var branchFilter; 
    var accountFilter;
    
    var i;
    var correctKindSign   = arrCreate("S", "И", "К", "N");
    var correctKindSqlStr = TArray();
    var allCorrectKindSignsStr = "";

    departmentList = RepDepartmentList(OrgStructure, IssueMode, DprtID);
    branchFilter   = RepBranchFieldFilter(departmentList);
    accountFilter  = RepAccountFilter(departmentList, PRIV_GET_ACCOUNT_DATA_FOR_REPORTS);
    
    i = 0;
    while (i < correctKindSign.size)
        correctKindSqlStr[i] = "'%" + correctKindSign[i] + "%'";
        allCorrectKindSignsStr = allCorrectKindSignsStr + correctKindSign[i];
        i = i + 1;
    end;

    /* Контроль опердней */
    if(RepOperdaysOpened( departmentList, First_Date, Second_Date ).ShouldContinue == false)
        exit(1);
    end;

    strcmd = "TRUNCATE TABLE DISPR_DOCS_TMP;";
    execSQL(strcmd);
    strcmd = "TRUNCATE TABLE DOPR_DOCS_TMP;";
    execSQL(strcmd);
    
    strcmd_cb_doc = "pm.t_DocKind = "+string(DLDOC_MEMORIALORDER)+" ";
    strcmd_cb_doc = strcmd_cb_doc + "AND pm.t_DocumentID = d.t_DocumentID ";
    strcmd_cb_doc = strcmd_cb_doc + "AND pm.t_Purpose = "+string(PM_PURP_MEMORDER)+" ";
    strcmd_cb_doc = strcmd_cb_doc + "AND rm.t_PaymentID = pm.t_PaymentID ";
    strcmd_cb_doc = strcmd_cb_doc + "AND pm.t_ValueDate >= TO_DATE('"+string(First_Date)+"','DD.MM.YYYY') ";
    strcmd_cb_doc = strcmd_cb_doc + "AND pm.t_ValueDate <= TO_DATE('"+string(Second_Date)+"','DD.MM.YYYY') ";
    strcmd_cb_doc = strcmd_cb_doc + "AND" + BranchFilter.GetAsSqlString("pm.t_Department");
    
    strcmd_multydoc = "pm.t_DocKind = "+string(CB_MULTYDOC)+" ";
    strcmd_multydoc = strcmd_multydoc + "AND pm.t_DocumentID = d.t_AutoKey ";
    strcmd_multydoc = strcmd_multydoc + "AND pm.t_Purpose = "+string(PM_PURP_MULTYDOC)+" ";
    strcmd_multydoc = strcmd_multydoc + "AND rm.t_PaymentID = pm.t_PaymentID ";
    strcmd_multydoc = strcmd_multydoc + "AND pm.t_ValueDate >= TO_DATE('"+string(First_Date)+"','DD.MM.YYYY') ";
    strcmd_multydoc = strcmd_multydoc + "AND pm.t_ValueDate <= TO_DATE('"+string(Second_Date)+"','DD.MM.YYYY') ";
    strcmd_multydoc = strcmd_multydoc + "AND" + BranchFilter.GetAsSqlString("pm.t_Department");
    

    IF (FIID == ALLCURRENCY)
        strcmd_cb_doc = strcmd_cb_doc + "AND d.T_CODE_CURRENCY != "+string(NATCUR)+" ";
        strcmd_multydoc = strcmd_multydoc + "AND (pm.t_FIID != "+string(NATCUR)+" AND pm.t_PayFIID != "+string(NATCUR)+") ";
    ELIF (FIID != ALLFININSTR)
        strcmd_cb_doc = strcmd_cb_doc + "AND d.T_CODE_CURRENCY = "+string(FIID)+" ";
        strcmd_multydoc = strcmd_multydoc + "AND (pm.t_FIID = "+string(FIID)+" OR pm.t_PayFIID = "+string(FIID)+") ";
    END;
    
    IF (Chapter > 0)
        strcmd_cb_doc = strcmd_cb_doc + "AND d.T_CHAPTER = "+string(Chapter)+" ";
        strcmd_multydoc = strcmd_multydoc + "AND d.T_CHAPTER = "+string(Chapter)+" ";
    END;
    
    /* фильтр по типу исправительного документа */
    if (Correct_Kind == 1)
        strcmd_cb_doc   = strcmd_cb_doc   + "AND REGEXP_LIKE(d.T_TYPEDOCUMENT, '[" + allCorrectKindSignsStr + "]', 'c')";
        strcmd_multydoc = strcmd_multydoc + "AND REGEXP_LIKE(d.T_TYPE_DOCUMENT, '[" + allCorrectKindSignsStr + "]', 'c')";
    else
        strcmd_cb_doc =   strcmd_cb_doc   + "AND (d.T_TYPEDOCUMENT LIKE "  + correctKindSqlStr[Correct_Kind-2] + ") ";
        strcmd_multydoc = strcmd_multydoc + "AND (d.T_TYPE_DOCUMENT LIKE " + correctKindSqlStr[Correct_Kind-2] + ") ";
    end;


    strcmd = "INSERT INTO DISPR_DOCS_TMP SELECT d.T_DOCUMENTID, "+DLDOC_MEMORIALORDER+", d.T_OPER, d.T_CHAPTER, d.T_CODE_CURRENCY T_FIID_FROM, pm.t_Amount, pm.t_PayerAccount, pm.t_ReceiverAccount, pm.t_ValueDate, pm.t_Department, substr(rm.t_Ground,1,210), rm.t_Number, d.T_TYPEDOCUMENT, acc1.T_BALANCE, acc2.T_BALANCE, i.t_rateDate "+
             " FROM DCB_DOC_DBT d, DACCISPR_DBT i, DACCOUNT_DBT acc1, DACCOUNT_DBT acc2, DPMPAYM_DBT pm, DPMRMPROP_DBT rm "+
             " WHERE "+strcmd_cb_doc+
             " AND d.T_DOCUMENTID  = i.T_DOCUMENTID AND i.T_DOCKIND = "+DLDOC_MEMORIALORDER+
             " AND d.T_CODE_CURRENCY = "+NATCUR+
             " AND ( " + AccountFilter.GetAsSqlString("acc1")+            
             "      OR " + AccountFilter.GetAsSqlString("acc2")+" ) "+ 
             " AND acc1.T_CHAPTER = d.T_CHAPTER AND acc1.T_ACCOUNT = pm.t_PayerAccount "+
             " AND acc2.T_CHAPTER = d.T_CHAPTER AND acc2.T_ACCOUNT = pm.t_ReceiverAccount;";

    execSQL(strcmd);
    
    strcmd = "INSERT INTO DISPR_DOCS_TMP SELECT d.T_DOCUMENTID, "+DLDOC_MEMORIALORDER+", d.T_OPER, d.T_CHAPTER, d.T_CODE_CURRENCY T_FIID_FROM, pm.t_Amount, pm.t_PayerAccount, pm.t_ReceiverAccount, pm.t_ValueDate, pm.t_Department, substr(rm.t_Ground,1,210), rm.t_Number, d.T_TYPEDOCUMENT, acc$1.T_BALANCE, acc$2.T_BALANCE, i.t_rateDate "+
             " FROM DCB_DOC_DBT d, DACCISPR_DBT i, DACCOUNT_DBT acc$1, DACCOUNT_DBT acc$2, DPMPAYM_DBT pm, DPMRMPROP_DBT rm "+
             " WHERE "+strcmd_cb_doc+
             " AND d.T_DOCUMENTID = i.T_DOCUMENTID AND i.T_DOCKIND = "+DLDOC_MEMORIALORDER+
             " AND NOT (d.T_CODE_CURRENCY = "+NATCUR+") "+
             " AND ( " + AccountFilter.GetAsSqlString("acc$1")+            
             "      OR " + AccountFilter.GetAsSqlString("acc$2")+" ) "+ 
             " AND acc$1.T_CHAPTER = d.T_CHAPTER AND acc$1.T_ACCOUNT = pm.t_PayerAccount AND acc$1.T_CODE_CURRENCY = d.T_CODE_CURRENCY "+
             " AND acc$2.T_CHAPTER = d.T_CHAPTER AND acc$2.T_ACCOUNT = pm.t_ReceiverAccount AND acc$2.T_CODE_CURRENCY = d.T_CODE_CURRENCY;";
    execSQL(strcmd);
    
/*SDA 04.01.2012 - для самодельных исправительных Пойдем! С Новым Годом*/
/*substr(rm.t_Ground,1,210) - ограничение размерности поля DISPR_DOCS_TMP */
    strcmd = "INSERT INTO DISPR_DOCS_TMP SELECT d.T_DOCUMENTID, "+DLDOC_MEMORIALORDER+", d.T_OPER, d.T_CHAPTER, d.T_CODE_CURRENCY T_FIID_FROM, pm.t_Amount, pm.t_PayerAccount, pm.t_ReceiverAccount, pm.t_ValueDate, pm.t_Department, substr(rm.t_Ground,1,210), rm.t_Number, d.T_TYPEDOCUMENT, acc1.T_BALANCE, acc2.T_BALANCE, pm.t_ValueDate "+
             " FROM DCB_DOC_DBT d,  DACCOUNT_DBT acc1, DACCOUNT_DBT acc2, DPMPAYM_DBT pm, DPMRMPROP_DBT rm "+
             " WHERE "+strcmd_cb_doc+

             " AND d.T_DOCUMENTID  not in (select i.T_DOCUMENTID from DACCISPR_DBT i where  i.T_DOCKIND = "+DLDOC_MEMORIALORDER+") " +

             " AND d.T_CODE_CURRENCY = "+NATCUR+
             " AND ( " + AccountFilter.GetAsSqlString("acc1")+            
             "      OR " + AccountFilter.GetAsSqlString("acc2")+" ) "+ 
             " AND acc1.T_CHAPTER = d.T_CHAPTER AND acc1.T_ACCOUNT = pm.t_PayerAccount "+
             " AND acc2.T_CHAPTER = d.T_CHAPTER AND acc2.T_ACCOUNT = pm.t_ReceiverAccount;";

     execSQL(strcmd);

    /* ACCOUNT_PAYER - валютный, ACCOUNT_RECEIVER - валютный */
    strcmd = "INSERT INTO DISPR_DOCS_TMP SELECT d.T_AUTOKEY T_DOCUMENTID, "+CB_MULTYDOC+" T_DOCKIND, d.T_OPER, d.T_CHAPTER, pm.t_FIID, pm.t_Amount T_SUM, pm.t_PayerAccount T_ACCOUNT_PAYER, pm.t_ReceiverAccount T_ACCOUNT_RECEIVER, pm.t_ValueDate T_DATE_CARRY, pm.t_Department, substr(rm.t_Ground,1,210), rm.t_Number, d.T_TYPE_DOCUMENT, acc$1.T_BALANCE, acc$2.T_BALANCE, i.t_rateDate "+
             " FROM DMULTYDOC_DBT d, DACCISPR_DBT i, DACCOUNT_DBT acc$1, DACCOUNT_DBT acc$2, DPMPAYM_DBT pm, DPMRMPROP_DBT rm "+
             " WHERE "+strcmd_multydoc+
             " AND NOT (pm.t_FIID = "+NATCUR+") AND NOT (pm.t_PayFIID = "+NATCUR+") "+
             " AND d.T_AUTOKEY = i.T_DOCUMENTID AND i.T_DOCKIND = "+CB_MULTYDOC+
             " AND ( " + AccountFilter.GetAsSqlString("acc$1")+            
             "      OR " + AccountFilter.GetAsSqlString("acc$2")+" ) "+ 
             " AND acc$1.T_CHAPTER = d.T_CHAPTER AND acc$1.T_ACCOUNT = pm.t_PayerAccount AND acc$1.T_CODE_CURRENCY = pm.t_FIID "+
             " AND acc$2.T_CHAPTER = d.T_CHAPTER AND acc$2.T_ACCOUNT = pm.t_ReceiverAccount AND acc$2.T_CODE_CURRENCY = pm.t_PayFIID; ";
    execSQL(strcmd);
    
    /* ACCOUNT_PAYER - валютный, ACCOUNT_RECEIVER - рублевый */
    strcmd = "INSERT INTO DISPR_DOCS_TMP SELECT d.T_AUTOKEY T_DOCUMENTID, "+CB_MULTYDOC+" T_DOCKIND, d.T_OPER, d.T_CHAPTER, pm.t_FIID, pm.t_Amount T_SUM, pm.t_PayerAccount T_ACCOUNT_PAYER, pm.t_ReceiverAccount T_ACCOUNT_RECEIVER, pm.t_ValueDate T_DATE_CARRY, pm.t_Department, substr(rm.t_Ground,1,210), rm.t_Number, d.T_TYPE_DOCUMENT, acc$1.T_BALANCE, acc2.T_BALANCE, i.t_rateDate "+
             " FROM DMULTYDOC_DBT d, DACCISPR_DBT i, DACCOUNT_DBT acc$1, DACCOUNT_DBT acc2, DPMPAYM_DBT pm, DPMRMPROP_DBT rm "+
             " WHERE "+strcmd_multydoc+
             " AND NOT (pm.t_FIID = "+NATCUR+") AND pm.t_PayFIID = "+NATCUR+
             " AND d.T_AUTOKEY = i.T_DOCUMENTID AND i.T_DOCKIND = "+CB_MULTYDOC+
             " AND ( " + AccountFilter.GetAsSqlString("acc$1")+            
             "      OR " + AccountFilter.GetAsSqlString("acc2")+" ) "+ 
             " AND acc$1.T_CHAPTER = d.T_CHAPTER AND acc$1.T_ACCOUNT = pm.t_PayerAccount AND acc$1.T_CODE_CURRENCY = pm.t_FIID "+
             " AND acc2.T_CHAPTER = d.T_CHAPTER AND acc2.T_ACCOUNT = pm.t_ReceiverAccount AND acc2.T_CODE_CURRENCY = pm.t_PayFIID ;";
    execSQL(strcmd);
    
    /* ACCOUNT_PAYER - рублевый, ACCOUNT_RECEIVER - валютный */
    strcmd = "INSERT INTO DISPR_DOCS_TMP SELECT d.T_AUTOKEY T_DOCUMENTID, "+CB_MULTYDOC+" T_DOCKIND, d.T_OPER, d.T_CHAPTER, pm.t_PayFIID T_FIID_FROM, pm.t_PayAmount T_SUM, pm.t_PayerAccount T_ACCOUNT_PAYER, pm.t_ReceiverAccount T_ACCOUNT_RECEIVER, pm.t_ValueDate T_DATE_CARRY, pm.t_Department, substr(rm.t_Ground,1,210), rm.t_Number, d.T_TYPE_DOCUMENT, acc1.T_BALANCE, acc$2.T_BALANCE, i.t_rateDate "+
             " FROM DMULTYDOC_DBT d, DACCISPR_DBT i, DACCOUNT_DBT acc1, DACCOUNT_DBT acc$2, DPMPAYM_DBT pm, DPMRMPROP_DBT rm "+
             " WHERE "+strcmd_multydoc+
             " AND pm.t_FIID = "+NATCUR+" AND NOT (pm.t_PayFIID = "+NATCUR+") "+
             " AND d.T_AUTOKEY = i.T_DOCUMENTID AND i.T_DOCKIND = "+CB_MULTYDOC+
             " AND ( " + AccountFilter.GetAsSqlString("acc1")+            
             "      OR " + AccountFilter.GetAsSqlString("acc$2")+" ) "+ 
             " AND acc1.T_CHAPTER = d.T_CHAPTER AND acc1.T_ACCOUNT = pm.t_PayerAccount AND acc1.T_CODE_CURRENCY = pm.t_FIID "+
             " AND acc$2.T_CHAPTER = d.T_CHAPTER AND acc$2.T_ACCOUNT = pm.t_ReceiverAccount AND acc$2.T_CODE_CURRENCY = pm.t_PayFIID;";
    execSQL(strcmd);
    
    /* ACCOUNT_PAYER - рублевый, ACCOUNT_RECEIVER - рублевый */
    strcmd = "INSERT INTO DISPR_DOCS_TMP SELECT d.T_AUTOKEY T_DOCUMENTID, "+CB_MULTYDOC+" T_DOCKIND, d.T_OPER, d.T_CHAPTER, pm.t_PayFIID T_FIID_FROM, pm.t_PayAmount T_SUM, pm.t_PayerAccount T_ACCOUNT_PAYER, pm.t_ReceiverAccount T_ACCOUNT_RECEIVER, pm.t_ValueDate T_DATE_CARRY, pm.t_Department, substr(rm.t_Ground,1,210), rm.t_Number, d.T_TYPE_DOCUMENT, acc1.T_BALANCE, acc2.T_BALANCE, i.t_rateDate "+
             " FROM DMULTYDOC_DBT d, DACCISPR_DBT i, DACCOUNT_DBT acc1, DACCOUNT_DBT acc2, DPMPAYM_DBT pm, DPMRMPROP_DBT rm "+
             " WHERE "+strcmd_multydoc+
             " AND pm.t_FIID = "+NATCUR+" AND pm.t_PayFIID = "+NATCUR+
             " AND d.T_AUTOKEY = i.T_DOCUMENTID AND i.T_DOCKIND = "+CB_MULTYDOC+
             " AND ( " + AccountFilter.GetAsSqlString("acc1")+            
             "      OR " + AccountFilter.GetAsSqlString("acc2")+" ) "+ 
             " AND acc1.T_CHAPTER = d.T_CHAPTER AND acc1.T_ACCOUNT = pm.t_PayerAccount "+
             " AND acc2.T_CHAPTER = d.T_CHAPTER AND acc2.T_ACCOUNT = pm.t_ReceiverAccount;";
    execSQL(strcmd);

    rs = TRsbDataset("SELECT * FROM DISPR_DOCS_TMP ORDER BY T_CHAPTER,T_FIID_FROM,T_DATE_CARRY,T_NUMB_DOCUMENT");
    
    PrintHeadOfLog1(DprtID, OrgStructure, First_Date, Second_Date, FIID);
    
    NextRecord = rs.moveNext;
    flag=1;
    if(NextRecord)
        
        Chapter_new = int(rs.value(3));
        FIID_new = int(rs.value(4));
        
        Chapter_ = Chapter_new;
        FIID_ = FIID_new;
        
        PrintOneLogHead1(Report1, rs, Chapter_);
        PrintHeadCages1(Report1);
        PrintOneDoc1(Report1, rs, flag);
        
        
        NextRecord = rs.moveNext;
        while( NextRecord )
            Chapter_new = int(rs.value(3));
            FIID_new = int(rs.value(4));
            if( (Chapter_ != Chapter_new) OR
                (FIID_ != FIID_new) )
                Report1.PrintBottom;
                IF(Chapter_ != Chapter_new)
                    PrintOneLogHead1(Report1, rs, Chapter_new);
                ELSE
                END;
                
                Report1.PrintHead;
                flag=0;
                Chapter_ = Chapter_new;
                FIID_ = FIID_new;
            end;
            PrintOneDoc1(Report1,rs,flag);
            flag=1;
            NextRecord = rs.moveNext;
        end;
        Report1.PrintBottom;
        PrintLogPodval1(Report1);
    else
        println(StrAlign("Нет данных для отчета", width, STR_ALIGN_CENTER));
    end;
END;
