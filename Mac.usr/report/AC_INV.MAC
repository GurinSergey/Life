/*----------------------------------------------------------------------*-

 File Name    : ac_inv.mac                                April, 15, 1997
 Programmer   : Чепелева Л.

 Description  : Инвентарная опись лицевых счетов

 Comment      : Только открытые на текущую дату лицевые счета
 Modifications: 2.02.98 Стасевич
                Возможность выпуска отчета по всем главам
               24.05.98 LCh - вызов из выполняемого модуля функции
               ИнвВедомость( Филиал, Глава, Дата, ПоГруппеОперов, Опер, БалСчет,
               Сортировка, ИтогиГлав, Нулевые, Закрытые, Апострофы)
  08.08.2001 - Sal.
    "По всем главам" означает по 1, 2, 3, 4, 5.
    + Проверка исключена ли глава из официального учета.
  04.07.2005 BugZ SCR 67395 Фильтрация по ТС/РС.
  04.07.2005 ABP Контроль открытых опердней
  03.11.2006 Ivkina Объединние рублей и валюты
  22.10.2014 R-465854-2 dpn Адаптация под 31-й патч
------------------------------------------------------------------------*/
import BankInter, ReportInter, globals, ocp, CTInter, Календарь;
import Reporting;
import RsbDataSet, cb_sql;
import acv;
import rep_lib;
debugbreak;
/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/
private CONST END_LINE          = "\n";
private CONST SET_CHAR          = "X";


private CONST NATCUR      =  0,
              ALLFININSTR = -1,
              ALLCURRENCY = -2;
const
  ACC_ALL          = 1, /* Все счета */
  ACC_CUR_ONLY     = 2, /* Только счета рублевого покрытия */
  ACC_ROUBLE_ONLY  = 3; /* Без счетов рублевого покрытия */

/* Виды сортировки */
private CONST SORT_DPRT  = "1", // По подразделениям
              SORT_OPER  = "2", // По операционистам
              SORT_CLNT  = "3", // По клиентам
              SORT_ACNT  = "5", // По счетам
              SORT_FICOD = "7", // По коду валюты
              SORT_CHAP  = "9", // По главам счетов
              SORT_MAKET = "A"; // По системному макету

/* Возвращаемые значения */
private CONST WELLDONE         = 0,
              ERROR            = 1;


/* Организационная структура */
private CONST REP_ORGSTRUCTURE_TERRITORIAL = 1,
              REP_ORGSTRUCTURE_REGIONAL    = 2;


/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/
macro BoolToInt( b )
  if( b )
    return 1;
  end;
  return 0;
end;
/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/
/* Класс с параметрами отчета */
private CLASS TInvInfo
(
  pNumDprt,
  pOrgStructure,
  pIssueMode,
  pNumPlan,
  pChapter,
  pCurrency,
  pDate,
  pOperOrGroup,
  pOper,
  pBalance,
  pPattern,
  piCurrency,
  pcSetRest,
  pcSetZero,
  pcSetClose,
  pcSetA,
  pExcludeOcp
)

  var Account, /* объект TRsbDataSet*/
      DepartmentList,
      AccountFilter,
      OcpAccountServer,
      NumDprt       =  pNumDprt,
      OrgStructure  =  pOrgStructure,
      IssueMode     =  pIssueMode,
      NumPlan       =  pNumPlan,
      Chapter       =  pChapter,
      Currency      =  pCurrency,
      DateRep       =  pDate,
      OperOrGroup   =  pOperOrGroup,
      Oper          =  pOper,
      Balance       =  pBalance,
      Pattern       =  pPattern,
      iCurrency     =  piCurrency,
      cSetRest      =  pcSetRest,
      cSetZero      =  pcSetZero,
      cSetClose     =  pcSetClose,
      cSetA         =  pcSetA,
      ExcludeOcp    =  pExcludeOcp;


  private macro Constructor()
    DepartmentList      = RepDepartmentList(OrgStructure, IssueMode, NumDprt);
    AccountFilter       = RepAccountFilter(DepartmentList);
    OcpAccountServer    = RepOcpAccountServer(Chapter, Currency, DepartmentList);
  end;

  Constructor();
end;
/*END Класс с параметрами отчета */
/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/
/* Инициализация ХП */
private MACRO InitPck(Info)
  var stat, cTypePerson, fo, lo, FlagAccess;
  var data;
  var l_typeperson = "УБНОАС"; /* Уровни доступа */

  if (Info.Oper == {oper})         /* Только свои счета */
    FlagAccess = false;
  else
    data = TRsbDataSet("SELECT t_ctypeperson ctype, t_groupoperfo fo, t_groupoperlo lo FROM dperson_dbt WHERE t_oper = " + {oper});
    stat = data.Next;
    if (stat)
      cTypePerson = data.ctype;
      fo          = data.fo;
      lo          = data.lo;
    else
      return ERROR;
    end;

    if ((cTypePerson == "А") or
        (cTypePerson == "У") or
        (cTypePerson == "Б"))
      FlagAccess = false;
    elif ((Info.Oper > 0) and (Info.Oper < fo) and (Info.Oper > lo))
      msgbox("Нет права доступа к счетам операциониста " + string(Info.Oper));
      return ERROR;
    else
      FlagAccess = false;
    end;
  end;

  if (FlagAccess)
    SQL_Execute("{ CALL rsb_rep_ac.set_operaccess("
        + {oper} + ", " + fo + ", " + lo + ", " + index(l_typeperson, cTypePerson) + 1
        + ", 'X', '') }");
  end;

  SQL_Execute( "{ CALL rsb_rep_ac.set_dat( " + GetSQLDate( Info.DateRep ) + ", " + GetSQLDate( Info.DateRep ) + " ) }" );

  return WELLDONE;
END;
/* END Инициализация ХП */
/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/
/* ОТБОР СЧЕТОВ И ПОДСЧЕТ ОСТАТКОВ */

/* Формирование условия на отбор счетов из daccblnc_dbt по маске (маскам) б\с */
private MACRO MakeAccBlncCond_Balance(AccBlncAlias, Info)

  var abCond = "",
      BlncMask = "";

  abCond = getChapterFilterSqlClause(Info.NumPlan, Info.Chapter, AccBlncAlias + ".t_chapter");

  if (Info.Balance != "")
    BlncMask = ConvertMaskToSQLFormat(Info.Balance, AccBlncAlias+".t_Balance"+Info.NumPlan);
  else
    BlncMask = AccBlncAlias+".t_Balance"+Info.NumPlan+" <> "+GetSQLString("");
  end;

  abCond = abCond + " AND " + BlncMask;

  return "("+abCond+")";

END;
/* END Формирование условия на отбор счетов из daccblnc_dbt по маске (маскам) б\с */

/* Условие WHERE */
MACRO MakeWhereSubQwery(Currency, AccBlncAlias, Info)

  var Where = "";

    Where = Where + Info.AccountFilter.GetAsSqlString("ac")                                                          +END_LINE;
    Where = Where + "AND " + MakeAccBlncCond_Balance(AccBlncAlias, Info)                                             +END_LINE;

  if(Info.ExcludeOcp == true)
    Where = Where + "AND NOT" + Info.OcpAccountServer.GetAsSqlString("ac")                                           +END_LINE;
  end;

    Where = Where + "AND ac.t_Account = "+AccBlncAlias+".t_Account"                                                  +END_LINE+
                    "AND ac.t_Chapter = "+AccBlncAlias+".t_Chapter"                                                  +END_LINE;

  /*Если задана конкретная валюта*/
  //if ((Currency != NATCUR) and (Currency != ALLCURRENCY)) //22.10.2014 R-465854-2 dpn В 31 или все валюты или конкретная
  if (Currency != ALLCURRENCY)
    Where = Where + "AND "+AccBlncAlias+".t_Code_Currency = "+Currency                                               +END_LINE+
                    "AND ac.t_Code_Currency = "+Currency                                                             +END_LINE;
  end;

  if (Currency != NATCUR)
    Where = Where + "AND ac.t_Code_Currency = "+AccBlncAlias+".t_Code_Currency"                                      +END_LINE;
  end;
 // 22.10.2014 R-465854-2 dpn В 31 нет покрытия
 // else 
 //   if((Info.iCurrency == ACC_ROUBLE_ONLY) OR (Info.Currency == ALLFININSTR))/*без покрытия, когда нац вал и без когда все вал*/
//    Where = Where + "AND INSTR(ac.t_Type_Account, 'П') = 0"                                                          +END_LINE;
//    elif(Info.iCurrency == ACC_CUR_ONLY) /*с покрытием*/
/*    Where = Where + "AND INSTR(ac.t_Type_Account, 'П') != 0"                                                         +END_LINE;
    end;
  end;*/

  if(Info.cSetRest)/*Входящие остатки*/
    Where = Where + "AND ac.t_Open_Date <   "+ GetSQLDate(Info.DateRep)                                              +END_LINE;
    if(Info.cSetClose == false)
    Where = Where + "AND (   ac.t_Close_Date >= "+ GetSQLDate(Info.DateRep)                                          +END_LINE+
                    "     OR ac.t_open_close != 'З' )"                                                               +END_LINE;
    end;
  else/*Исходящие остатки*/
    Where = Where + "AND ac.t_Open_Date <=  "+ GetSQLDate(Info.DateRep)                                              +END_LINE;
    if(Info.cSetClose == false)
    Where = Where + "AND (   ac.t_Close_Date >  "+ GetSQLDate(Info.DateRep)                                          +END_LINE+
                    "     OR ac.t_open_close != 'З' )"                                                               +END_LINE;
    end;
  end;

  /*Без нулевых остатков*/
  if(Info.cSetZero  == false)
    if(Info.cSetRest)/*Входящие остатки*/
    Where = Where + "AND rsi_rsb_account.resta(AC.T_ACCOUNT, " + GetSQLDate(Info.DateRep) + " - 1 , AC.T_CHAPTER, 0, AC.T_CODE_CURRENCY, 0) != 0"  +END_LINE; // 22.10.2014 R-465854-2 dpn Некорректно работала функция, заменил на другую
    else
    Where = Where + "AND rsi_rsb_account.resta(AC.T_ACCOUNT, " + GetSQLDate(Info.DateRep) + ", AC.T_CHAPTER, 0, AC.T_CODE_CURRENCY, 0) != 0"  +END_LINE; // 22.10.2014 R-465854-2 dpn Некорректно работала функция, заменил на другую
    end;
  end;

  if(Info.Oper != 0)
    Where = Where + "AND rsb_rep_ac.find_operingrp( ac.t_oper, "+Info.Oper+", "+BoolToInt(Info.OperOrGroup)+" ) = 0" +END_LINE;
  end;

    Where = Where + " AND rsb_rep_ac.chk_operaccess(ac.t_oper,ac.t_type_account) = 0"                                +END_LINE;

  return Where;
END;
/*END Условие WHERE */

/* Подзапрос, если есть какие-либо итоги для печати, иначе это текст запроса*/
MACRO MakeSubQuery(Currency, Info)

  var Select  = "SELECT ",
      From    = "FROM ",
      Where   = "WHERE ",
      CmdText = "";

  var AccBlncAlias = "ab";
  var ac, ab;

  // 22.10.2014 R-465854-2 dpn В 31 и валюта и рубли в одной таблице
    ac = "daccount_dbt ac";
    ab = "daccblnc_dbt "  + AccBlncAlias;

  Select = Select + "ac.t_sort sort, "                                                             +END_LINE+
                    "ac.t_client Client, "                                                         +END_LINE+
                    "ac.t_oper Oper, "                                                             +END_LINE+
                    "ab.t_chapter Chapter, "                                                       +END_LINE+
                    "ab.t_account ACCOUNT, "                                                       +END_LINE+
                    "ab.t_account ACCOUNT_TXT, "                                                   +END_LINE+
                    "ac.t_kind_account Kind_acc, "                                                 +END_LINE+
                    "ac.t_nameaccount NAME, "                                                      +END_LINE+
/*                    "rsb_rep_pt.get_ptshname (ac.t_client) PtName, "                               +END_LINE+*//*если так, то почемуто падает при сортировке вначале по клиету*/
                    " (SELECT t_shortname "                                                        +END_LINE+
                    " FROM dparty_dbt "                                                            +END_LINE+
                    " WHERE t_partyid = ac.t_client) PtName,"                                      +END_LINE+
                    "(SELECT t_fi_code "                                                           +END_LINE+
                    " FROM dfininstr_dbt "                                                         +END_LINE+
                    " WHERE t_fiid = ab.t_code_currency) FiCode,"                                  +END_LINE+
                    "ac.t_branch branch, "                                                         +END_LINE;
debugbreak;
  if(Info.cSetRest)/*Входящие остатки*/
 // Select = Select + "rsb_rep_ac.restin(ac.t_account,ac.t_code_currency,ac.t_chapter,0)  Rest,"     +END_LINE;  // 22.10.2014 R-465854-2 dpn Некорректно работала функция, заменил на другую
  Select = Select + " rsi_rsb_account.restac(AC.T_ACCOUNT,AC.T_CODE_CURRENCY, " + GetSQLDate(Info.DateRep) + " -1, AC.T_CHAPTER, 0,AC.T_CODE_CURRENCY) Rest, " + END_LINE;

  else
  //Select = Select + "rsb_rep_ac.restout(ac.t_account,ac.t_code_currency,ac.t_chapter,0) Rest,"     +END_LINE;  // 22.10.2014 R-465854-2 dpn Некорректно работала функция, заменил на другую
  Select = Select + " rsi_rsb_account.restac(AC.T_ACCOUNT,AC.T_CODE_CURRENCY, " + GetSQLDate(Info.DateRep) + ", AC.T_CHAPTER, 0,AC.T_CODE_CURRENCY) Rest, " + END_LINE;
  end;
debugbreak;
 // 22.10.2014 R-465854-2 dpn В 31 этого не нужно
//  if (Currency == NATCUR)
//    if(Info.cSetRest)/*Входящие остатки Покрытие*/
//    Select = Select + "rsb_rep_ac.restin(ac.t_account, 0,ac.t_chapter,0)  RestP"                   +END_LINE;
//    else
//    Select = Select + "rsb_rep_ac.restout(ac.t_account,0,ac.t_chapter,0)  RestP"                   +END_LINE;
//    end;
//  else
    if(Info.cSetRest)/*Входящие остатки Покрытие*/
    //Select = Select + "rsb_rep_ac.restin(ac.t_connect_account, ac.t_connect_currency, ac.t_connect_chapter, 0)  RestP"  +END_LINE;  // 22.10.2014 R-465854-2 dpn Некорректно работала функция, заменил на другую
    Select = Select + " rsi_rsb_account.resta(AC.T_ACCOUNT, " + GetSQLDate(Info.DateRep) + " -1, AC.T_CHAPTER, 0, AC.T_CODE_CURRENCY, 0) RestP" + END_LINE;
    else
    //Select = Select + "rsb_rep_ac.restout(ac.t_connect_account,ac.t_connect_currency, ac.t_connect_chapter, 0)  RestP" +END_LINE;  // 22.10.2014 R-465854-2 dpn Некорректно работала функция, заменил на другую
    Select = Select + " rsi_rsb_account.resta(AC.T_ACCOUNT, " + GetSQLDate(Info.DateRep) + ", AC.T_CHAPTER, 0, AC.T_CODE_CURRENCY, 0) RestP" + END_LINE;
    end;
// end;


  From = From + ac +", "+ ab  + END_LINE;

  Where = Where + MakeWhereSubQwery(Currency, AccBlncAlias, Info);

  CmdText = Select + From + Where + END_LINE;
  return CmdText;
END;
/*END Подзапрос*/

/*END отбор счетов и подсчет остатков*/
/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/
/* ГРУППИРОВКА С ПОДВЕДЕНИЕМ ИТОГОВ*/

/* SELECT */
private MACRO MakeSelect(Info)

  var NameText = "";
  var Select   = "";
  var temp = "(";
  var TotalText ="";
  var i = 0;
  var flag = 0;

  if(Info.Pattern.size == 0)
    NameText = "nvl(NAME,chr(1)) NAME"
  else

    while(i < Info.Pattern.size)
      if( (Info.Pattern[i] != REP_PATTERNSORT_ACCOUNT) AND (Info.Pattern[i] != REP_PATTERNSORT_SYSTEM_MAKET) )
        if( flag == 0)
          NameText = " case  " ;
          if(Info.Pattern[i] == REP_PATTERNSORT_DEPARTMENT)
            TotalText = "THEN 'Итого по подразделению'";
          elif (Info.Pattern[i] == REP_PATTERNSORT_OPER)
            TotalText = "THEN 'Итого по операционисту'";
          elif (Info.Pattern[i] == REP_PATTERNSORT_CLIENT)
            TotalText = "THEN 'Итого по клиенту'";
          elif (Info.Pattern[i] == REP_PATTERNSORT_CURRENCY)
            TotalText = "THEN 'Итого по коду валюты'";
          elif (Info.Pattern[i] == REP_PATTERNSORT_CHAPTER)
            TotalText = "THEN 'Итого по главе'||' '||chapter";
          end;
          flag = 1;
      else
        if (Info.Pattern[i] == REP_PATTERNSORT_DEPARTMENT)
          NameText = NameText + " WHEN "+ temp +" GROUPING (Branch) = 1) " + TotalText;
          TotalText = "THEN 'Итого по подразделению'";
          temp = " ( GROUPING (Branch) = 0 and"
        elif (Info.Pattern[i] == REP_PATTERNSORT_OPER)
          NameText = NameText + " WHEN "+ temp +" GROUPING (Oper) = 1) " + TotalText;
          TotalText = "THEN 'Итого по операционисту'";
          temp = " ( GROUPING (Oper) = 0 and"
        elif (Info.Pattern[i] == REP_PATTERNSORT_CLIENT)
          NameText = NameText + " WHEN "+ temp +" GROUPING (PtName) = 1)" + TotalText;
          TotalText = "THEN 'Итого по клиенту'";
          temp = " (GROUPING (PtName) = 0 and"
        elif (Info.Pattern[i] == REP_PATTERNSORT_CURRENCY)
          NameText = NameText + " WHEN "+ temp +" GROUPING (FiCode) = 1) " + TotalText;
          TotalText = "THEN 'Итого по коду валюты'";
          temp = " (GROUPING (FiCode) = 0 and"
        elif (Info.Pattern[i] == REP_PATTERNSORT_CHAPTER)
          NameText = NameText + " WHEN "+ temp +" GROUPING (Chapter) = 1) " + TotalText;
          TotalText = "THEN 'Итого по главе'||' '||chapter";
          temp = " (GROUPING (Chapter) = 0 and"
        end;
      end;
      end;
      i = i + 1;
    end;

    NameText = NameText + " WHEN  "+temp+ " GROUPING (name) = 1 )" + TotalText;

    NameText = NameText + " else ACCOUNT end ACCOUNT_TXT ";
  end;


  Select = Select + "SELECT sum(rest) Rest,"                                               +END_LINE+
                      " sum(restp) Restp,"                                                 +END_LINE+
                      " Chapter Chapter,"                                                  +END_LINE+
                        NameText                                                           +END_LINE+
                      " ,Kind_acc Kind_acc, "                                              +END_LINE+
                      " to_char(Oper) Oper, "                                              +END_LINE+
                      " Name Name,"                                                        +END_LINE+
                      " PtName PtName,"                                                    +END_LINE+
                      " FiCode FiCode,"                                                    +END_LINE+
                      " ACCOUNT ACCOUNT,"                                                  +END_LINE+
                      " Branch Branch,"                                                    +END_LINE+
                      " sort sort,"                                                        +END_LINE+
                      " CASE WHEN (   GROUPING (chapter)= 1 or GROUPING (account)= 1 "     +END_LINE+
                      "            or GROUPING (oper)   = 1 or GROUPING (name)   = 1 "     +END_LINE+
                      "            or GROUPING (ptname) = 1 or GROUPING (ficode) = 1)"     +END_LINE+
                      " THEN 1                                                       "     +END_LINE+
                      " ELSE 0                                                       "     +END_LINE+
                      " END Sort_Type"                                                     +END_LINE;

 return Select;

end;
/*END  SELECT */

/* GROUP BY ROLLUP для формирования итогов */
private MACRO MakeGroupByRollup(Info)
  var sortField     = "",
      GroupByRollup = "",
      having        = "",
      i             = 0;

  var temp = "123579A";

  while(i < Info.Pattern.Size)
    if( i == 0)
      GroupByRollup = "GROUP BY ROLLUP (";
      if   (Info.Pattern[i] == REP_PATTERNSORT_DEPARTMENT)
          having = "having grouping(Branch)= 0";
      elif (Info.Pattern[i] == REP_PATTERNSORT_OPER)
          having = "having grouping(Oper)= 0";
      elif (Info.Pattern[i] == REP_PATTERNSORT_CLIENT)
          having = "having grouping(PtName)= 0";
      elif (Info.Pattern[i] == REP_PATTERNSORT_CURRENCY)
          having = "having grouping(FiCode)= 0";
      elif (Info.Pattern[i] == REP_PATTERNSORT_CHAPTER)
          having = "having grouping(Chapter)= 0";
      end;
    end;

    if  (Info.Pattern[i] == REP_PATTERNSORT_DEPARTMENT)
      GroupByRollup = GroupByRollup + "("+sortField+"Branch, kind_acc), ";
      temp = StrSubst ( temp , SORT_DPRT, "");
    elif (Info.Pattern[i] == REP_PATTERNSORT_OPER)
      GroupByRollup = GroupByRollup + "("+sortField+"Oper, kind_acc), ";
      temp = StrSubst ( temp , SORT_OPER, "");
    elif (Info.Pattern[i] == REP_PATTERNSORT_CLIENT)
      GroupByRollup = GroupByRollup + "("+sortField+"PtName, kind_acc), ";
      temp = StrSubst ( temp , SORT_CLNT, "");
    elif (Info.Pattern[i] == REP_PATTERNSORT_CURRENCY)
      GroupByRollup = GroupByRollup + "("+sortField+"FiCode, kind_acc), ";
      temp = StrSubst ( temp , SORT_FICOD, "");
    elif (Info.Pattern[i] == REP_PATTERNSORT_CHAPTER)
      GroupByRollup = GroupByRollup + "("+sortField+"Chapter, kind_acc), ";
      temp = StrSubst ( temp , SORT_CHAP, "");
    end;

    i = i + 1;
  end;

  var temp1 = TArray();
  var j = 0;

  /*Разбивает длинную строку на несколько сегментов*/
  StrSplitTArray( temp, temp1, 1);

  GroupByRollup = GroupByRollup + " (NAME, kind_acc ";
  while(temp1(j))
    if   (temp1(j) == SORT_DPRT)
      GroupByRollup = GroupByRollup + ", Branch ";
    elif (temp1(j) == SORT_OPER)
      GroupByRollup = GroupByRollup + ", Oper ";
    elif (temp1(j) == SORT_CLNT)
      GroupByRollup = GroupByRollup + ", PtName ";
    elif (temp1(j) == SORT_FICOD)
      GroupByRollup = GroupByRollup + ", FiCode ";
    elif (temp1(j) == SORT_CHAP)
      GroupByRollup = GroupByRollup + ", Chapter ";
    elif (temp1(j) == SORT_ACNT)
      GroupByRollup = GroupByRollup + ", account ";
    elif (temp1(j) == SORT_MAKET)
      GroupByRollup = GroupByRollup + ", sort ";
    end;
    j = j + 1;
  end;

  if( j != 0 )
    GroupByRollup = GroupByRollup + ")";
  end;
  if( i != 0 )
    GroupByRollup = GroupByRollup + ")" + having;
  end;

  return GroupByRollup;
END;
/*END GROUP BY ROLLUP для формирования итогов */

/* ORDER BY */
private MACRO MakeOrderBy(Info)
  var OrderBy  = "",
      i        = 0;

  while(i < Info.Pattern.size)
    if( i == 0)
      OrderBy = "ORDER BY ";
    else
      OrderBy = OrderBy + " , ";
    end;

    if   (Info.Pattern[i] == REP_PATTERNSORT_DEPARTMENT)
      OrderBy = OrderBy + " Branch ";
    elif (Info.Pattern[i] == REP_PATTERNSORT_OPER)
      OrderBy = OrderBy + " Oper ";
    elif (Info.Pattern[i] == REP_PATTERNSORT_CLIENT)
      OrderBy = OrderBy + " PtName ";
    elif (Info.Pattern[i] == REP_PATTERNSORT_CURRENCY)
      OrderBy = OrderBy + " FiCode ";
    elif (Info.Pattern[i] == REP_PATTERNSORT_CHAPTER)
      OrderBy = OrderBy + " Chapter ";
    elif (Info.Pattern[i] == REP_PATTERNSORT_ACCOUNT)
      OrderBy = OrderBy + " account ";
    elif (Info.Pattern[i] == REP_PATTERNSORT_SYSTEM_MAKET)
      OrderBy = OrderBy + " sort ";
    end;
    i = i + 1;
  end;
  return OrderBy;
END;
/*END ORDER BY */

/*END группировка с подведением итогов*/
/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/
/*ФОРМИРОВАНИЕ ТЕКСТА ЗАПРОСА + ЕГО ВЫПОЛНЕНИЕ*/

MACRO  ExecuteQuery(Info)

  var CmdText  = "",
      SubQuery = "";

  if(Info.Currency == ALLFININSTR)
    /*  SubQuery = MakeSubQuery(NATCUR, Info);
      SubQuery = SubQuery + " UNION " + END_LINE;*/
      SubQuery = SubQuery + MakeSubQuery(ALLCURRENCY, Info);
  elif(Info.Currency == ALLCURRENCY)
      SubQuery = SubQuery + MakeSubQuery(ALLCURRENCY, Info);
  else
      SubQuery = MakeSubQuery(Info.Currency, Info);
  end;

  if (Info.Pattern.size == 0)

    CmdText = SubQuery + " ORDER BY account";

  elif( (Info.Pattern.size == 1) and ((Info.Pattern[0] == REP_PATTERNSORT_ACCOUNT) or (Info.Pattern[0] == REP_PATTERNSORT_SYSTEM_MAKET)))

    CmdText = SubQuery + MakeOrderBy(Info);

  else

    CmdText = MakeSelect(Info) + "FROM ("+SubQuery+")"       +END_LINE;

    if(Info.cSetZero  == false)
      CmdText = CmdText + "WHERE rest != 0"                  +END_LINE;
    end;

    CmdText = CmdText + MakeGroupByRollup(Info)              +END_LINE;

    CmdText = CmdText + MakeOrderBy(Info) + " , Sort_Type, kind_acc";
  end;

  Info.Account = TRsbDataSet(CmdText);

  Info.Account.SetFieldType("Rest", V_MONEY);
  Info.Account.SetFieldType("RestP", V_MONEY);
END;
/*END формирование текста запроса + его выполнение*/
/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/
/*МАКРОСЫ ПЕЧАТИ ОТЧЕТА*/

MACRO ШапкаОтчета( cSetRest, DateRep);
    println();
    println("Инвентарная опись лицевых счетов":c:127);
    if(cSetRest)
      println( ("на "+DateRep):c:127 );
    else
      println( ("за "+DateRep):c:127 );
    end;
    println();
END;


MACRO ШапкаТаблицы()
[ ];
[┌────────────────────────┬───┬────┬────────────────────────────────────────┬────┬─────────────────────┬─────────────────────┐];
[│ Номер лицевого счета   │Тип│Исп │   Название клиента/Название счета      │Вал │     Остаток         │Остаток в эквиваленте│];
[├────────────────────────┼───┼────┼────────────────────────────────────────┼────┼─────────────────────┼─────────────────────┤];
END;

MACRO ЗаголовокГлава( Chapter )
  var data = TRsbDataSet( "SELECT t_name name FROM dobchaptr_dbt WHERE t_chapter = " + Chapter );
  if( data.moveNext )
[│                                                                                                                           │
 │ Глава ###.  #                                                                                                             │
 │                                                                                                                           │]
(Chapter, data.name);
  end;
END;

MACRO ЗаголовокПодразделение(InvInfo:TInvInfo)

    var query;
    var departmentViewName;
    if (InvInfo.OrgStructure == REP_ORGSTRUCTURE_TERRITORIAL)
        departmentViewName = "drepdpdep_vw";
    elif (InvInfo.OrgStructure == REP_ORGSTRUCTURE_REGIONAL)
        departmentViewName = "drepdpreg_vw";
    else
        runError( "Ошибка программирования: неверные данные об организационной структуре" );
    end;

    query =        "SELECT rdp.t_codename, pt.t_shortname"
          + "\n" + "  FROM " + departmentViewName + " rdp,"
          + "\n" + "       dparty_dbt pt"
          + "\n" + " WHERE rdp.t_code = " + InvInfo.Account.Branch
          + "\n" + "   AND pt.t_partyid = rdp.t_partyid";

    var data = TRsbDataSet( query );
    data.setFieldType("t_codename", V_STRING);
    data.setFieldType("t_shortname", V_STRING);

    if( data.moveNext() )
[│                                                                                                                           │
 │ Подразделение ###     #                                                                                                   │
 │                                                                                                                           │]
(data.codename, data.shortname);
    end;

END;

MACRO Счет( ACCOUNT, Kind_acc, Oper, PtName, FiCode, Rest, NAME, RestP, Currency)

  if((FiCode==NULL)and((Currency==ALLFININSTR)or(Currency==ALLCURRENCY)))
    Rest = "─────────────────────";
  end;
  debugbreak;
  if( Currency == NATCUR )
    RestP = "";
  end;

[│########################│###│####│########################################│####│#####################│#####################│
 │                        │   │    │########################################│    │                     │                     │]
( ACCOUNT:w, Kind_acc, NVL(Oper,"────"), NVL(PtName,"────────────────────────────────────────"):w, NVL(FiCode,"────"),Rest:a, RestP:a,NVL(NAME,""):w );

END;


MACRO ПодвалТаблицы()
[└────────────────────────┴───┴────┴────────────────────────────────────────┴────┴─────────────────────┴─────────────────────┘];
END;


MACRO НетДанных( )
 println("Нет данных для отчета.");
END;
/*END макросы печати отчета*/
/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

       
MACRO  ИнвВедомость(
                    NumDprt,
                    OrgStructure,
                    IssueMode,
                    NumPlan,
                    Chapter,
                    Currency,
                    DateRep,
                    OperOrGroup,
                    Oper,
                    Balance,
                    Pattern,
                    iCurrency,
                    cSetRest,
                    cSetZero,
                    cSetClose,
                    cSetA,
                    ExcludeOcp
                   )
  debugbreak; 
 var Info = TInvInfo ( NumDprt, OrgStructure, IssueMode, NumPlan, Chapter, Currency, DateRep, OperOrGroup,
                        Oper, Balance, Pattern, iCurrency, iCurrency /*cSetRest*/, cSetZero, cSetClose, cSetA, ExcludeOcp);  // 22.10.2014 R-465854-2 dpn В 31 неправильная последовательность передачи параметров при инициализации графической формы

  /* Контроль открытых опердней */
  if (RepOperdaysOpened(Info.DepartmentList, Info.DateRep, Info.DateRep).ShouldContinue == false)
     exit(1);
  end;

  BegAction(1000, "Получение данных об остатках на лицевых счетах");
    if(InitPck(Info) == WELLDONE)
      ExecuteQuery(Info);
    end;
  EndAction();

  InitProgress(-1, "Выпуск отчета...", "Выпуск очета о средних оборотах");
    /* Шапка банка */
    PrintBankHeader(Info.NumDprt, Info.OrgStructure, 127);

    ШапкаОтчета(Info.cSetRest, Info.DateRep);

    var  Глава    = false;
    var  Подразд  = false;
    var  oldChapter = 0;
    var  oldBranch  = 0;

    if(index(Info.Pattern,"1") != 0)
      Подразд = true;
    end;
    if(index(Info.Pattern,"9") != 0)
      Глава = true;
    end;

    if(Info.Account.Next())
      ШапкаТаблицы(/*Name*/); // KS 29.10.2011
      if(Глава and (oldChapter != Info.Account.Chapter) and (Info.Account.Chapter != NULL))
         ЗаголовокГлава(Info.Account.Chapter);
         oldChapter = Info.Account.Chapter;
      end;
      if(Подразд and (oldBranch != Info.Account.Branch) and (Info.Account.Branch != NULL))
         ЗаголовокПодразделение(Info);
         oldBranch = Info.Account.Branch;
      end;
      Счет(Info.Account.ACCOUNT_TXT, Info.Account.Kind_acc, Info.Account.Oper, Info.Account.PtName, Info.Account.FiCode, Info.Account.Rest, Info.Account.NAME, Info.Account.RestP, Info.Currency);
      while(Info.Account.Next())
        if(Глава and (oldChapter != Info.Account.Chapter) and (Info.Account.Chapter != NULL))
           ЗаголовокГлава(Info.Account.Chapter);
           oldChapter = Info.Account.Chapter;
        end;
        if(Подразд and (oldBranch != Info.Account.Branch) and (Info.Account.Branch != NULL))
           ЗаголовокПодразделение(Info);
           oldBranch = Info.Account.Branch;
        end;
        Счет(Info.Account.ACCOUNT_TXT, Info.Account.Kind_acc, Info.Account.Oper, Info.Account.PtName, Info.Account.FiCode, Info.Account.Rest, Info.Account.NAME, Info.Account.RestP, Info.Currency);
      end;
      ПодвалТаблицы();
    else
      НетДанных();
    end;

  RemProgress();

END;