/**
 *  RS-Bank 6.0                                           R-Style Software Lab
 *
 *  File Name   : accnwork.mac                                   February 01, 2007
 *  Programmer  : Ivkina
 *  Description : Неработающие счета
 *  Comment     :
 *  Modify      :05.02.2013 Забрал привязку    dpartyown_dbt pw  dparty_dbt pt , они не были описаны в условие Where, в итоге имели декартовое произведение LAO 
 *              :04.02.2014 GSP адаптация под 2031
 */

import Reporting;
import rep_lib;
import Календарь;
import FIInter;
import cb_sql;

private const END_LINE    = "\n";
private const ALLCURRENCY = -2;  /* все ин валюты*/
private const TA_CORR     =  3;  /* Корреспондентский Счет */

private const JURIDIC = 1;
private const PHYSIC = 2;

/**
 *  Класс с выходными данными по счетам и клиентам
 */
private CLASS TClientAccount(
    pNCltBegYear,
    pNCltIn,
    pNCltOut,
    pNCltDateRep,
    pNAccBegYear,
    pNAccIn,
    pNAccOut,
    pNAccDateRep,
    pRestActive,
    pRrestPassive
)
    var nCltBegYear = pNCltBegYear;
    var nCltIn      = pNCltIn;
    var nCltOut     = pNCltOut;
    var nCltDateRep = pNCltDateRep;

    var nAccBegYear = pNAccBegYear;
    var nAccIn      = pNAccIn;
    var nAccOut     = pNAccOut;
    var nAccDateRep = pNAccDateRep;

    var restActive  = pRestActive;
    var restPassive = pRrestPassive;

    /**
     *  Добавление информации по клиентам
     */
    /* 13.09.2007 Malakhova 110389*/
    macro addClt(StartDate, FinishDate, Jan1, repDate)

        /*nCltBegYear = nCltBegYear + nCltDateRep + nCltOut - nCltIn;*/

        /*КЛИЕНТЫ НА НАЧАЛО ГОДА:*/
        /*Общее число клиентов, обслуживающихся в подразделении, на начало года.*/
        /*При этом дата окончания обслуживания больше даты, предшествующей дате начала года*/
        if ((startDate < Jan1) and ((FinishDate >= Jan1) or (FinishDate == "")))
            nCltBegYear = nCltBegYear + 1;
        end;

        /*КЛИЕНТЫ, ПРИНЯТЫЕ НА ОБСЛУЖИВАНИЕ С НАЧАЛА ГОДА:*/
        /*Отбираем только клиентов, для которых существует хотя бы одна дата в отчетном периоде,*/
        /* за которую все виды обслуживания, связанные с текущим подразделением, были закрыты*/
        if ((StartDate < repDate) and (StartDate >= Jan1))
            nCltIn = nCltIn + 1;
        end;

        /*КЛИЕНТЫ, ОБСЛУЖИВАЮЩИЕСЯ НА ОТЧЕТНУЮ ДАТУ:*/
        /*Число клиентов, обслуживающихся в подразделении, на отчетную дату*/
        /*При этом дата окончания обслуживания больше даты, предшествующей отчетной*/
        if ((StartDate < repDate) and ((FinishDate >= repDate) or (FinishDate == "")))
            nCltDateRep = nCltDateRep + 1;
        end;

        /*КЛИЕНТЫ, ВЫБЫВШИЕ С ОБСЛУЖИВАНИЯ:*/
        if ((FinishDate >= Jan1) and (FinishDate < repDate))
            nCltOut = nCltOut + 1;
        end;

        //if(FinishDate >= repDate)
        //   nCltDateRep = nCltDateRep + 1;
        //   nCltBegYear = nCltBegYear + 1;
        //end;
        //
        //if (StartDate >= Jan1 )
        //   nCltIn      = nCltIn      + 1;
        //   if (nCltBegYear != 0)
        //       nCltBegYear = nCltBegYear - 1;
        //   end;
        //end;
        //
        //if ((FinishDate >= Jan1) and (FinishDate <= repDate))
        //   nCltOut     = nCltOut     + 1;
        //   nCltBegYear = nCltBegYear + 1;
        //end;
    end;

    /**
     *  Добавление информации по счетам
     */
    macro addAcc( nAcIn, nAcOut, nAcDateRep, restAct, restPas)
        nAccIn      = nAccIn      + nAcIn;
        nAccOut     = nAccOut     + nAcOut;
        nAccDateRep = nAccDateRep + nAcDateRep;
        restActive  = restActive  - restAct;
        restPassive = restPassive + restPas;
        nAccBegYear = nAccBegYear + nAcDateRep + nAcOut - nAcIn;
    end;

    /**
     *  Приведение денежных величин к тысячам
     */
    macro  calcThousand()
        restActive  = restActive  / 1000.0;
        restPassive = restPassive / 1000.0;
    end;
end;

/**
 *  Класс с выходными данными по неработающим счетам за период времени
 */
private CLASS TAccountNoWork(
    pNMonth,
    pNAccount,
    pRestActive,
    pRestPassive,
    pNAccRestZero
)
    var nMonth       = pNMonth;
    var nAccount     = pNAccount;
    var restActive   = pRestActive;
    var restPassive  = pRestPassive;
    var nAccRestZero = pNAccRestZero;

    /**
     *  Добавление информации по счетам
     */
    macro Add(nAcc, restAct, restPas, nAcRestZero)
        nAccount     = nAccount     + nAcc;
        restActive   = restActive   - restAct;
        restPassive  = restPassive  + restPas;
        nAccRestZero = nAccRestZero + nAcRestZero;
    end;

    /**
     *  Приведение денежных величин к тысячам
     */
    macro calcThousand()
         restActive  = restActive  / 1000.0;
         restPassive = restPassive / 1000.0;
    end;
end;

/**
 *  Класс с выходными данными для отчета
 */
private CLASS TReport()

    var common            = TClientAccount(0, 0, 0, 0, 0, 0, 0, 0, $0, $0);
    var physicalPerson    = TClientAccount(0, 0, 0, 0, 0, 0, 0, 0, $0, $0);
/*Ип вынесем отдельно*/
    var employerPerson    = TClientAccount(0, 0, 0, 0, 0, 0, 0, 0, $0, $0);
    var juridicalPerson   = TClientAccount(0, 0, 0, 0, 0, 0, 0, 0, $0, $0);
    var bankCorrespondent = TClientAccount(0, 0, 0, 0, 0, 0, 0, 0, $0, $0);
    var privateAccount    = TClientAccount(0, 0, 0, 0, 0, 0, 0, 0, $0, $0);

    var accNoWork3  = TAccountNoWork( 3, 0, $0, $0, 0);
    var accNoWork6  = TAccountNoWork( 6, 0, $0, $0, 0);
    var accNoWork12 = TAccountNoWork(12, 0, $0, $0, 0);

    macro Обработать_клиента(client, dataReport)
        common.addClt(client.StartDate, client.FinishDate, dataReport.beginYear, dataReport.repDate);

        /*физ лица, являющиеся предпринимателями - это юр лица*/
        if ((client.legalform == PHYSIC) and (client.employer == 0))
            physicalPerson.addClt(client.StartDate, client.FinishDate, dataReport.beginYear, dataReport.repDate);
        /*ИП отделим*/
        elif ((client.legalform == 2/*ИП*/) and (client.employer == 1))
            employerPerson.addClt(client.StartDate, client.FinishDate, dataReport.beginYear, dataReport.repDate);
        else
            juridicalPerson.addClt(client.StartDate, client.FinishDate, dataReport.beginYear, dataReport.repDate);
        end;

        if(client.bankcorresp == 1)
            bankCorrespondent.addClt(client.StartDate, client.FinishDate, dataReport.beginYear, dataReport.repDate);
        end;
    end;


    macro Обработать_счета_клиента(client, clientAcc, dataReport)
        /*-------клиенты с закрытыми счетами------------*/
            /*  нет открытых счетов       есть закрытые счета */
            if ((clientAcc.op_n == 0) and (clientAcc.cl_n != 0))
                privateAccount.nCltDateRep = privateAccount.nCltDateRep + 1;
            end;
            /*   нет открытых в начале года                                          есть закрытые в нач года*/
            if (((clientAcc.op_n + clientAcc.op_n_out - clientAcc.op_n_in) == 0) and (clientAcc.cl_n_n != 0))
                privateAccount.nCltBegYear = privateAccount.nCltBegYear + 1;
            end;

            /*   нет открытых счетов         есть закрытые в период с нач года до отчетной даты*/
            if (((clientAcc.op_n) == 0) and (clientAcc.cl_n_in != 0))
                privateAccount.nCltIn = privateAccount.nCltIn + 1;
            end;

            privateAccount.nCltOut = privateAccount.nCltBegYear + privateAccount.nCltIn - privateAccount.nCltDateRep;
        /*-------------------*/

        privateAccount.nAccDateRep = privateAccount.nAccDateRep + clientAcc.cl_n;

        common.addAcc(clientAcc.op_n_in, clientAcc.op_n_out, clientAcc.op_n, clientAcc.op_a, clientAcc.op_p);

        if ((client.LegalForm == PHYSIC) and (client.employer == 0))
            physicalPerson.addAcc(clientAcc.op_n_in, clientAcc.op_n_out, clientAcc.op_n, clientAcc.op_a, clientAcc.op_p);
        /*ИП отделим*/
        elif ((client.LegalForm == 2) and (client.employer == 1))
            employerPerson.addAcc(clientAcc.op_n_in, clientAcc.op_n_out, clientAcc.op_n, clientAcc.op_a, clientAcc.op_p);
        else
            juridicalPerson.addAcc(clientAcc.op_n_in, clientAcc.op_n_out, clientAcc.op_n, clientAcc.op_a, clientAcc.op_p);
        end;

        bankCorrespondent.addAcc(clientAcc.opl_n_in, clientAcc.opl_n_out, clientAcc.opl_n, clientAcc.opl_a, clientAcc.opl_p);

        accNoWork3.add (clientAcc.op3_n,  clientAcc.op3_a,  clientAcc.op3_p,  clientAcc.op3_nz);
        accNoWork6.add (clientAcc.op6_n,  clientAcc.op6_a,  clientAcc.op6_p,  clientAcc.op6_nz);
        accNoWork12.add(clientAcc.op12_n, clientAcc.op12_a, clientAcc.op12_p, clientAcc.op12_nz);
    end;

    macro calculateThousand()
        common.calcThousand();
        juridicalPerson.calcThousand();
        employerPerson.calcThousand();
        physicalPerson.calcThousand();
        bankCorrespondent.calcThousand();
        privateAccount.calcThousand();
        accNoWork3.calcThousand();
        accNoWork6.calcThousand();
        accNoWork12.calcThousand();
    end;

    macro printAccountNoWork(dataInfo)
        var head;

        if (dataInfo.codeCurrency == NATCUR)
            head = "По рублевым операциям"
        elif (dataInfo.codeCurrency == ALLFININSTR)
            head = "По операциям"
        else
            head = "По валютным операциям"
        end;

        PrintBankHeader(dataInfo.dprtID, dataInfo.orgStructure, 122);
        println();

        /* 04.09.2007 Malakhova 110389*/
        /*Убрала вторую букву "л" в слове "Количество"*/
        [                                        СПРАВКА ПО ОБСЛУЖИВАЕМЫМ КЛИЕНТАМ И СЧЕТАМ
                                                              #

           #
          ┌────────────────────────────────────┬───────────────────────────────────────────┬─────────────────────────────────────┐
          │                                    │                Количество                 │            Сумма, тыс.руб.          │
          │                                    ├──────────┬─────────────────────┬──────────┼──────────────────┬──────────────────┤
          │                                    │    На    │    С начала  года   │    На    │                  │                  │
          │                                    │  начало  ├──────────┬──────────┤ отчетную │       Актив      │      Пассив      │
          │                                    │   года   │  Принято │  Выбыло  │   дату   │                  │                  │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │Число обслуживаемых клиентов, всего │ ######## │######### │######### │ ######## │ ################ │################# │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ В том числе:                       │          │          │          │          │                  │                  │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ юридических лиц                    │ ######## │######### │######### │ ######## │ ################ │################# │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ индивидуальных предпринимателей    │ ######## │######### │######### │ ######## │ ################ │################# │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ физических лиц                     │ ######## │######### │######### │ ######## │ ################ │################# │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ банков-корреспондентов (ЛОРО)      │ ######## │######### │######### │ ######## │ ################ │################# │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ имеющих только закрытые счета      │ ######## │######### │######### │ ######## │                0 │                0 │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │Число обслуживаемых счетов, всего   │ ######## │######### │######### │ ######## │ ################ │################# │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ В том числе:                       │          │          │          │          │                  │                  │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ юридических лиц                    │ ######## │######### │######### │ ######## │ ################ │################# │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ индивидуальных предпринимателей    │ ######## │######### │######### │ ######## │ ################ │################# │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ физических лиц                     │ ######## │######### │######### │ ######## │ ################ │################# │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ банков-корреспондентов (ЛОРО)      │ ######## │######### │######### │ ######## │ ################ │################# │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ не работающих более 3-х месяцев    │          │          │          │ ######## │ ################ │################# │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ из них с нулевым остатком          │          │          │          │ ######## │                0 │                0 │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ не работающих более 6-и месяцев    │          │          │          │ ######## │ ################ │################# │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ из них с нулевым остатком          │          │          │          │ ######## │                0 │                0 │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ не работающих более 1-го года      │          │          │          │ ######## │ ################ │################# │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │ из них с нулевым остатком          │          │          │          │ ######## │                0 │                0 │
          ├────────────────────────────────────┼──────────┼──────────┼──────────┼──────────┼──────────────────┼──────────────────┤
          │Число закрытых счетов, всего        │          │          │          │ ######## │                0 │                0 │
          └────────────────────────────────────┴──────────┴──────────┴──────────┴──────────┴──────────────────┴──────────────────┘
        ]
        (
            dataInfo.repDate:m:f,
            head,

            common.nCltBegYear:r, common.nCltIn:r, common.nCltOut:r, common.nCltDateRep:r, common.restActive:0:3:r, common.restPassive:0:3:r,

            juridicalPerson.nCltBegYear:r,   juridicalPerson.nCltIn:r,   juridicalPerson.nCltOut:r,   juridicalPerson.nCltDateRep:r,   juridicalPerson.restActive:0:3:r,   juridicalPerson.restPassive:0:3:r,
            /*ИП Выносим отдельно*/
            employerPerson.nCltBegYear:r,    employerPerson.nCltIn:r,    employerPerson.nCltOut:r,    employerPerson.nCltDateRep:r,    employerPerson.restActive:0:3:r,    employerPerson.restPassive:0:3:r, 
            physicalPerson.nCltBegYear:r,    physicalPerson.nCltIn:r,    physicalPerson.nCltOut:r,    physicalPerson.nCltDateRep:r,    physicalPerson.restActive:0:3:r,    physicalPerson.restPassive:0:3:r,
            bankCorrespondent.nCltBegYear:r, bankCorrespondent.nCltIn:r, bankCorrespondent.nCltOut:r, bankCorrespondent.nCltDateRep:r, bankCorrespondent.restActive:0:3:r, bankCorrespondent.restPassive:0:3:r,

            privateAccount.nCltBegYear:r,    privateAccount.nCltIn:r,    privateAccount.nCltOut:r,    privateAccount.nCltDateRep:r,

            common.nAccBegYear:r,            common.nAccIn:r,            common.nAccOut:r,            common.nAccDateRep:r,            common.restActive:0:3:r,            common.restPassive:0:3:r,
            juridicalPerson.nAccBegYear:r,   juridicalPerson.nAccIn:r,   juridicalPerson.nAccOut:r,   juridicalPerson.nAccDateRep:r,   juridicalPerson.restActive:0:3:r,   juridicalPerson.restPassive:0:3:r,
            /*ИП Выносим отдельно*/
            employerPerson.nAccBegYear:r,    employerPerson.nAccIn:r,    employerPerson.nAccOut:r,    employerPerson.nAccDateRep:r,    employerPerson.restActive:0:3:r,    employerPerson.restPassive:0:3:r, 
            physicalPerson.nAccBegYear:r,    physicalPerson.nAccIn:r,    physicalPerson.nAccOut:r,    physicalPerson.nAccDateRep:r,    physicalPerson.restActive:0:3:r,    physicalPerson.restPassive:0:3:r,
            bankCorrespondent.nAccBegYear:r, bankCorrespondent.nAccIn:r, bankCorrespondent.nAccOut:r, bankCorrespondent.nAccDateRep:r, bankCorrespondent.restActive:0:3:r, bankCorrespondent.restPassive:0:3:r,

            accNoWork3.nAccount:r,  accNoWork3.restActive:0:3:r,  accNoWork3.restPassive:0:3:r,   accNoWork3.nAccRestZero:r,
            accNoWork6.nAccount:r,  accNoWork6.restActive:0:3:r,  accNoWork6.restPassive:0:3:r,   accNoWork6.nAccRestZero:r,
            accNoWork12.nAccount:r, accNoWork12.restActive:0:3:r, accNoWork12.restPassive:0:3:r,  accNoWork12.nAccRestZero:r,

            privateAccount.nAccDateRep:r
        );
    end;
end;

/**
 * Класс с параметрами отчета
 */
private CLASS TDataReport
(
    pDprtID,
    pOrgStructure,
    pIssueMode,
    pNumPlan,
    pChapter,
    pCodeCurrency,
    pBalanceMask,
    pDate
)
    var departmentList;                        /**/
    var accountFilter;                         /*фильтр счетов*/
    var partyFilter;                           /*фильтр по субъектам*/
    var beginYear;                             /*дата начала текущего года*/
    var dprtID           = pDprtID;            /*номер узла ТС*/
    var orgStructure     = pOrgStructure;      /*структура*/
    var issueMode        = pIssueMode;         /*режим выпуска отчета*/
    var numPlan          = pNumPlan;           /*номер плана*/
    var chapter          = pChapter;           /*глава счетов*/
    var BalanceMask      = pBalanceMask;       /*маска балансового счета*/
    var codeCurrency     = pCodeCurrency;      /*код валюты*/
    var repDate          = pDate;              /*дата отчета*/

    private macro Constructor()
        departmentList = RepDepartmentList(orgStructure, issueMode, dprtID);
        accountFilter  = RepAccountFilter(departmentList);
        partyFilter    = RepPartyFilter(departmentList);

        var year;
        DateSplit(repDate, null, null, year);
        beginYear = date(1,1,year);
    end;

    Constructor();
end;

/**
 *  Текст запроса для формирования списка всех клиентов
 */
private macro makeTextQueryFromParty(dataInfo)

    var textCommand =
        "SELECT  DISTINCT(pw.t_partyid)                                  id,                    " +END_LINE+
        "        NVL(pt.t_name, '?')                                     name,                  " +END_LINE+
        "        pt.t_legalform                                          legalform,             " +END_LINE+
        "        NVL(( SELECT MIN(cl.t_startdate) FROM dclient_dbt cl                           " +END_LINE+
          " WHERE cl.t_partyid = pw.t_partyid                                                   " +END_LINE+
          " AND cl.t_startdate != TO_DATE('01.01.0001','DD.MM.YYYY')                            " +END_LINE+
        "             ), TO_DATE('01.01.0001','DD.MM.YYYY') )            startdate,             " +END_LINE+
        "        NVL(( SELECT MAX(cl.t_finishdate) FROM dclient_dbt cl                          " +END_LINE+
          " WHERE cl.t_partyid = pw.t_partyid                                                   " +END_LINE+
        "             ), TO_DATE('01.01.0001','DD.MM.YYYY') )            finishdate,            " +END_LINE+
        "        CASE                                                                           " +END_LINE+
        "            WHEN (    pt.t_legalform = 2                                               " +END_LINE+
        "                  and exists(select 1                                                  " +END_LINE+
        "                               from dpersn_dbt                                         " +END_LINE+
        "                              where T_PERSONID = pt.t_partyid and T_ISEMPLOYER = 'X')  " +END_LINE+
        "                  )                                                                    " +END_LINE+
        "            THEN 1                                                                     " +END_LINE+
        "            ELSE 0 END                                          employer,              " +END_LINE+

        "        NVL ( (select 1                                                                " +END_LINE+
        "                 from dpartyown_dbt pwb                                                " +END_LINE+
        "                where pwb.T_PARTYID = pt.t_partyid                                     " +END_LINE+
        "                  AND pwb.T_PARTYKIND = " + PTK_BANK + "), 0)    bankcorresp           " +END_LINE+
        " FROM dpartyown_dbt pw, dparty_dbt pt, daccount_dbt acc                                " +END_LINE+ // GSP мультиаккаунтинг
/*        if (dataInfo.codeCurrency == NATCUR)
            textCommand = textCommand + 
        " FROM dpartyown_dbt pw, dparty_dbt pt, daccount_dbt acc                                " +END_LINE;
        elif (dataInfo.codeCurrency > NATCUR)
            textCommand = textCommand + 
        " FROM dpartyown_dbt pw, dparty_dbt pt, daccount$_dbt acc                               " +END_LINE;
        else/*Вьюха не есть хорошо*/
            textCommand = textCommand + 
        " FROM dpartyown_dbt pw, dparty_dbt pt, daccounts_dbt acc                               " +END_LINE;
        end;
           textCommand = textCommand +*/
        " WHERE pw.t_partykind = " + PTK_CLIENT                                                   +END_LINE+
/*29.09.2010 Chesnokov D. Прибиваем дистрибутивный фильтр */
        "  AND pt.t_partyid = pw.t_partyid                                                      " +END_LINE+
        "  AND acc.t_client = pt.t_partyid                                                      " +END_LINE+
        "  AND acc.t_chapter = 1                                                                " +END_LINE;
/*Валюта*/
        if (dataInfo.codeCurrency == NATCUR)
            textCommand = textCommand + 
        "  AND acc.t_code_currency = 0                                                          " +END_LINE;
        elif (dataInfo.codeCurrency > NATCUR)
            textCommand = textCommand + 
        "  AND acc.t_code_currency = " + dataInfo.codeCurrency + "                              " +END_LINE;
        else
        
        end;
/*29.09.2010 Chesnokov D. Фильтр по террструктуре                    */
/*Если стоит головной филиал и режим Банк то печатаем по всему банку */
/*иначе выставляем фильтр по пришедшему из панели ВСП                */
        if ((dataInfo.IssueMode == 3) and (dataInfo.dprtID == 1))
        else
             textCommand = textCommand + 
        "  AND acc.t_branch = "+ dataInfo.dprtID +"                                             " +END_LINE;
        end;
/*Обработка масок балансовых счетов*/
        if (dataInfo.balanceMask != "")
            textCommand = textCommand + 
        "          AND (" + ConvertMaskToSQLFormat(dataInfo.balanceMask, "acc.t_balance") +")   " +END_LINE;
        end;
/*Обработка рублевых счетов*/
        if (dataInfo.codeCurrency <= NATCUR)
            textCommand = textCommand +                 
/*спорное место по покрытию, надо проверить*/
        "          AND INSTR(acc.t_Type_Account, 'П') = 0                                       " +END_LINE;
        end;
            textCommand = textCommand +  
        " ORDER BY id                                                                           " +END_LINE;

      return textCommand;
end;

/**
 * Текст запроса для формирования списка клиентов, у которых есть счета, по таблицам счетов.
 */
private macro makeTextQueryFromAccount(dataInfo)

    private macro makeTextChapterAndNumPlan(planNumber, chapterNumber)
        return   "(        bal.t_inumplan = " + planNumber
        + "\n" + " AND " + getChapterFilterSqlClause(planNumber, chapterNumber, "a.t_chapter")
        + "\n" + ")";
    end;

    /**
     * Текст для сбора информации по счетам неработающим n-месяцев
     */
    private macro makeTextReportReriod( repDate, nMonth, codeCurrency)
        var tableRest;
        var dateBegin = getSQLDate(DateAfterCalenMonths(repDate, -nMonth));
        var dateEnd   = getSQLDate(repDate);

//        if (codeCurrency == NATCUR)
            tableRest = "drestdate_dbt";
//        else
//            tableRest = "drestdat$_dbt";
//        end;

        /*проверка на существование проводок в течении последних nMonth*/
        var existMove =
            "                 ( SELECT *                               " +END_LINE+
            "                     FROM " + tableRest + "               " +END_LINE+
            "                    WHERE t_accountid = a.t_accountid     " +END_LINE+
            "                      AND t_restdate >= " + dateBegin     +END_LINE+
            "                      AND t_restdate <  " + dateEnd       +END_LINE+
            "                      AND (   t_debet != 0"                 +END_LINE+
            "                           OR t_credit != 0"                +END_LINE+
            "                          )"                                +END_LINE+
            "                 )                                        " +END_LINE;

        /*проверка, что счет был открыт в период dateBegin-dateEnd */
        var accOpen =
            "                      a.t_open_date < " + dateBegin + "   " +END_LINE+
            "              AND (   a.t_close_date >= " + dateEnd + "   " +END_LINE+
            "                   OR a.t_open_close = CHR (0)            " +END_LINE+
            "                  )                                       " +END_LINE;

        var textQuery =
            /*Число открытых счетов - СчНр3ОД*/
            " SUM (CASE                                                " +END_LINE+
            "          WHEN ( " + accOpen                                +END_LINE+

            "            AND NOT EXISTS " + existMove                    +END_LINE+
            "           )                                              " +END_LINE+
            "            THEN 1                                        " +END_LINE+
            "         ELSE 0                                           " +END_LINE+
            "      END                                                 " +END_LINE+
            "     ) op"+nMonth+"_n,                                    " +END_LINE+
            /*Число нулевых счетов - СчНр3НулОД*/
            " SUM                                                      " +END_LINE+
            "    (CASE                                                 " +END_LINE+
            "          WHEN ( " + accOpen                                +END_LINE+
            "             AND NOT EXISTS " + existMove                   +END_LINE+
            "             AND rsb_rep_ac.resta (a.t_account,           " +END_LINE+
            "                                  " + dateEnd + " - 1,    " +END_LINE+
            "                                   a.t_chapter,           " +END_LINE+
            "                                   0                      " +END_LINE+
            "                                  ) = 0                   " +END_LINE+
            "            )                                             " +END_LINE+
            "           THEN 1                                         " +END_LINE+
            "        ELSE 0                                            " +END_LINE+
            "     END                                                  " +END_LINE+
            "    ) op"+nMonth+"_nz,                                    " +END_LINE+
            /*Актив остатки - СчНр3А*/
            " SUM                                                      " +END_LINE+
            "    (CASE                                                 " +END_LINE+
            "          WHEN ( " + accOpen                                +END_LINE+
            "              AND a.t_kind_account = 'А'                  " +END_LINE+
            "              AND NOT EXISTS " + existMove                  +END_LINE+
            "               )                                          " +END_LINE+
            "           THEN rsb_rep_ac.resta (a.t_account,            " +END_LINE+
            "                                 " + dateEnd + " - 1,     " +END_LINE+
            "                                  a.t_chapter,            " +END_LINE+
            "                                  0                       " +END_LINE+
            "                                 )                        " +END_LINE+
            "        ELSE 0                                            " +END_LINE+
            "     END                                                  " +END_LINE+
            "    ) op"+nMonth+"_a,                                     " +END_LINE+
            /*Пассив остатки - СчНр3ОП*/
            " SUM                                                      " +END_LINE+
            "    (CASE                                                 " +END_LINE+
            "          WHEN ( " + accOpen                                +END_LINE+
            "              AND a.t_kind_account = 'П'                  " +END_LINE+
            "             AND NOT EXISTS " + existMove                   +END_LINE+
            "               )                                          " +END_LINE+
            "           THEN rsb_rep_ac.resta (a.t_account,            " +END_LINE+
            "                                 " + dateEnd + " - 1,     " +END_LINE+
            "                                  a.t_chapter,            " +END_LINE+
            "                                  0                       " +END_LINE+
            "            )                                             " +END_LINE+
            "        ELSE 0                                            " +END_LINE+
            "     END                                                  " +END_LINE+
            "    ) op"+nMonth+"_p                                      " +END_LINE;
        return textQuery;
    end;

    /**
     * Текс запроса для отбора сгруппированной информации по счетам клиентов
     */
    private macro makeTextQuery(codeCurrency)
        var textSelect;
        var textFrom;
        var textWhere;

        var repDateSQL = getSQLDate(dataInfo.repDate);
        var Jan1SQL    = getSQLDate(dataInfo.beginYear);

        var checkOpen =
                "                   a.t_open_date < " + repDateSQL + "                      " +END_LINE+
                "               AND (   a.t_close_date >= " + repDateSQL + "                " +END_LINE+
                "                    OR a.t_open_close = CHR (0)                            " +END_LINE+
                "                   )                                                       ";

        /* Список итоговых данных по счетам (группировка по ID клиента)*/
        textSelect =
                " SELECT  a.t_client id,                                                    " +END_LINE+
                /* Число закрытых счетов - всего - СчЗОД*/
                " SUM (CASE                                                                 " +END_LINE+
                "         WHEN (    a.t_open_close != CHR (0)                               " +END_LINE+
                "               AND a.t_close_date < " + repDateSQL + "                     " +END_LINE+
                "              )                                                            " +END_LINE+
                "            THEN 1                                                         " +END_LINE+
                "         ELSE 0                                                            " +END_LINE+
                "      END                                                                  " +END_LINE+
                "     ) cl_n,                                                               " +END_LINE+
                /* Число закрытых счетов в начале года*/
                " SUM (CASE                                                                 " +END_LINE+
                "         WHEN (    a.t_open_close != CHR (0)                               " +END_LINE+
                "               AND a.t_close_date < " + Jan1SQL + "                        " +END_LINE+
                "              )                                                            " +END_LINE+
                "            THEN 1                                                         " +END_LINE+
                "         ELSE 0                                                            " +END_LINE+
                "      END                                                                  " +END_LINE+
                "     ) cl_n_n,                                                             " +END_LINE+
                /* Число счетов, которые были закрыты в отчетный период*/
                " SUM (CASE                                                                 " +END_LINE+
                "         WHEN (    a.t_open_close != CHR (0)                               " +END_LINE+
                "               AND a.t_close_date >= " + Jan1SQL + "                       " +END_LINE+
                "               AND a.t_close_date < " + repDateSQL + "                     " +END_LINE+
                "              )                                                            " +END_LINE+
                "            THEN 1                                                         " +END_LINE+
                "         ELSE 0                                                            " +END_LINE+
                "      END                                                                  " +END_LINE+
                "     ) cl_n_in,                                                            " +END_LINE+
                /* Число открытых счетов - всего - СчетОД*/
                " SUM (CASE                                                                 " +END_LINE+
                "         WHEN ( " + checkOpen + "                                          " +END_LINE+
                "              )                                                            " +END_LINE+
                "            THEN 1                                                         " +END_LINE+
                "         ELSE 0                                                            " +END_LINE+
                "      END                                                                  " +END_LINE+
                "     ) op_n,                                                               " +END_LINE+
                /* Актив остатки открытых счетов - всего - СчетА*/
                " SUM (CASE                                                                 " +END_LINE+
                "         WHEN (   " + checkOpen + "                                        " +END_LINE+
                "               AND a.t_kind_account = 'А'                                  " +END_LINE+
                "              )                                                            " +END_LINE+
                "            THEN rsb_rep_ac.resta (a.t_account,                            " +END_LINE+
                "                                   " + repDateSQL + " -1,                  " +END_LINE+
                "                                   a.t_chapter,                            " +END_LINE+
                "                                   0                                       " +END_LINE+
                "                                  )                                        " +END_LINE+
                "         ELSE 0                                                            " +END_LINE+
                "      END                                                                  " +END_LINE+
                "     ) op_a,                                                               " +END_LINE+
                /* Пассив остатки открытых счетов - всего - СчетП*/
                " SUM (CASE                                                                 " +END_LINE+
                "         WHEN (   " + checkOpen + "                                        " +END_LINE+
                "               AND a.t_kind_account = 'П'                                  " +END_LINE+
                "              )                                                            " +END_LINE+
                "            THEN rsb_rep_ac.resta (a.t_account,                            " +END_LINE+
                "                                    " + repDateSQL + " -1,                 " +END_LINE+
                "                                   a.t_chapter,                            " +END_LINE+
                "                                   0                                       " +END_LINE+
                "                                  )                                        " +END_LINE+
                "         ELSE 0                                                            " +END_LINE+
                "      END                                                                  " +END_LINE+
                "     ) op_p,                                                               " +END_LINE+
                /* Прибыло счетов - всего - СчетПр*/
                "  SUM (CASE                                                                " +END_LINE+
                "          WHEN (    a.t_open_date >= " + Jan1SQL + "                       " +END_LINE+
                "                AND a.t_open_date < " + repDateSQL + "                     " +END_LINE+
                "               )                                                           " +END_LINE+
                "             THEN 1                                                        " +END_LINE+
                "          ELSE 0                                                           " +END_LINE+
                "       END                                                                 " +END_LINE+
                "      ) op_n_in,                                                           " +END_LINE+
                /* Убыло счетов - всего - СчетВ*/
                " SUM (CASE                                                                 " +END_LINE+
                "         WHEN (    a.t_close_date >= " + Jan1SQL + "                       " +END_LINE+
                "               AND a.t_close_date < " + repDateSQL + "                     " +END_LINE+
                "              )                                                            " +END_LINE+
                "            THEN 1                                                         " +END_LINE+
                "         ELSE 0                                                            " +END_LINE+
                "      END                                                                  " +END_LINE+
                "     ) op_n_out,                                                           " +END_LINE+
                /*  счета типа Лоро */
                /* Число открытых счетов Лоро-всего - СчетБКОД*/
                "  SUM (CASE                                                                " +END_LINE+
                "          WHEN (   " + checkOpen + "                                       " +END_LINE+
                "                AND INSTR (a.t_type_account, cnst.getta ("+TA_CORR+"))>0   " +END_LINE+
                "               )                                                           " +END_LINE+
                "             THEN 1                                                        " +END_LINE+
                "          ELSE 0                                                           " +END_LINE+
                "       END                                                                 " +END_LINE+
                "      ) opl_n,                                                             " +END_LINE+
                /* Актив остатки открытых счетов Лоро-всего - СчетБКА*/
                " SUM                                                                       " +END_LINE+
                "    (CASE                                                                  " +END_LINE+
                "        WHEN (   " + checkOpen + "                                         " +END_LINE+
                "              AND a.t_kind_account = 'А'                                   " +END_LINE+
                "              AND INSTR (a.t_type_account, cnst.getta ("+TA_CORR+")) > 0   " +END_LINE+
                "             )                                                             " +END_LINE+
                "           THEN rsb_rep_ac.resta (a.t_account,                             " +END_LINE+
                "                                  " + repDateSQL + " - 1,                  " +END_LINE+
                "                                  a.t_chapter,                             " +END_LINE+
                "                                  0                                        " +END_LINE+
                "                                 )                                         " +END_LINE+
                "        ELSE 0                                                             " +END_LINE+
                "     END                                                                   " +END_LINE+
                "    ) opl_a,                                                               " +END_LINE+
                /* Пассив остатки открытых счетов Лоро-всего - СчетБКП*/
                " SUM                                                                       " +END_LINE+
                "    (CASE                                                                  " +END_LINE+
                "        WHEN (   " + checkOpen + "                                         " +END_LINE+
                "              AND a.t_kind_account = 'П'                                   " +END_LINE+
                "              AND INSTR (a.t_type_account, cnst.getta ("+TA_CORR+")) > 0   " +END_LINE+
                "             )                                                             " +END_LINE+
                "           THEN rsb_rep_ac.resta (a.t_account,                             " +END_LINE+
                "                                   " + repDateSQL + " -1,                  " +END_LINE+
                "                                  a.t_chapter,                             " +END_LINE+
                "                                  0                                        " +END_LINE+
                "                                 )                                         " +END_LINE+
                "        ELSE 0                                                             " +END_LINE+
                "     END                                                                   " +END_LINE+
                "    ) opl_p,                                                               " +END_LINE+
                /* Прибыло счетов Лоро-всего - СчетБКПр*/
                " SUM (CASE                                                                 " +END_LINE+
                "         WHEN (    INSTR (a.t_type_account, cnst.getta ("+TA_CORR+")) > 0  " +END_LINE+
                "               AND a.t_open_date >= " + Jan1SQL + "                        " +END_LINE+
                "               AND a.t_open_date < " + repDateSQL + "                      " +END_LINE+
                "              )                                                            " +END_LINE+
                "            THEN 1                                                         " +END_LINE+
                "         ELSE 0                                                            " +END_LINE+
                "      END                                                                  " +END_LINE+
                "     ) opl_n_in,                                                           " +END_LINE+
                /* Убыло счетов Лоро-всего - СчетБКВ*/
                " SUM (CASE                                                                 " +END_LINE+
                "         WHEN (    INSTR (a.t_type_account, cnst.getta ("+TA_CORR+")) > 0  " +END_LINE+
                "               AND a.t_close_date >= " + Jan1SQL + "                       " +END_LINE+
                "               AND a.t_close_date <= " + repDateSQL + "                    " +END_LINE+
                "              )                                                            " +END_LINE+
                "            THEN 1                                                         " +END_LINE+
                "         ELSE 0                                                            " +END_LINE+
                "      END                                                                  " +END_LINE+
                "     ) opl_n_out,                                                          " +END_LINE+
                makeTextReportReriod(dataInfo.repDate, 3,  codeCurrency) + ",               " +END_LINE+
                makeTextReportReriod(dataInfo.repDate, 6,  codeCurrency) + ",               " +END_LINE+
                makeTextReportReriod(dataInfo.repDate, 12, codeCurrency)+ "                 " +END_LINE;

//        if (codeCurrency == NATCUR) 
            textFrom = 
                 "     FROM daccount_dbt a,                                                  " +END_LINE+
                 "          daccblnc_dbt ab,                                                 " +END_LINE+
                 "          dbalance_dbt bal                                                " +END_LINE;
               // 05.02.2013 LAO убрал то что не используется, вернее используется но не верно 
               //"          dpartyown_dbt pw,                                                " +END_LINE+
               //"          dparty_dbt pt                                                    " +END_LINE;
/*        elif (codeCurrency > NATCUR)
            textFrom = 
                 "     FROM daccount$_dbt a,                                                 " +END_LINE+
                 "          daccblnc$_dbt ab,                                                 " +END_LINE+
                 "          dbalance_dbt bal                                               " +END_LINE;
               //"          dpartyown_dbt pw,                                                " +END_LINE+
               //"          dparty_dbt pt                                                    " +END_LINE;
        else
            textFrom = 
                 "     FROM daccounts_dbt a,                                                 " +END_LINE+
                 "          daccblnc_dbt ab,                                                 " +END_LINE+
                 "          dbalance$_dbt bal                                               " +END_LINE;
               //"          dpartyown_dbt pw,                                                " +END_LINE+
               //"          dparty_dbt pt                                                    " +END_LINE;
        end;
*/
        textWhere =
                "     WHERE                                                                 " +END_LINE+
//                           dataInfo.partyFilter.GetAsSqlString("a.t_client",
//                                                                PTK_CLIENT,
//                                                                PTSK_ALL,
//                                                                dataInfo.beginYear,
//                                                                dataInfo.repDate)             +END_LINE+
//                
//                "          AND " + dataInfo.accountFilter.GetAsSqlString( "a" )               +END_LINE+
                "          /*AND*/ ab.t_account = a.t_account                                   " +END_LINE+
                "          AND ab.t_chapter = a.t_chapter                                   " +END_LINE;

        if (codeCurrency != NATCUR)
            textWhere = textWhere +
                "          AND ab.t_code_currency = a.t_code_currency                       " +END_LINE;
        end;

        textWhere = textWhere +
                "          AND bal.t_chapter = a.t_chapter                                  " +END_LINE+
                "          AND bal.t_balance = ab.t_balance" + dataInfo.numPlan               +END_LINE+
                "          AND bal.t_type_balance NOT LIKE '%T%'                            " +END_LINE;

        if (codeCurrency > NATCUR)
            textWhere = textWhere +
                "          AND a.t_code_currency  = " + codeCurrency                          +END_LINE;
        end;

        if (codeCurrency == NATCUR)
            textWhere = textWhere +
                "          AND INSTR(a.t_Type_Account, 'П') = 0                             " +END_LINE;
        end;

        textWhere = textWhere +
                "          AND ( " + makeTextChapterAndNumPlan(dataInfo.numPlan, dataInfo.chapter)+ " )"   +END_LINE;

        if (dataInfo.balanceMask != "")
            textWhere = textWhere +
                "          AND (" + ConvertMaskToSQLFormat(dataInfo.balanceMask, "bal.t_balance") +")"+END_LINE;
        end;

        textWhere = textWhere +
                "     GROUP BY a.t_client                                                      " +END_LINE;

        return textSelect + textFrom + textWhere;
    end;

    /*начало формирования текста запроса*/
    var textCommand = "";

    if (dataInfo.codeCurrency == NATCUR )
        textCommand = makeTextQuery(NATCUR, dataInfo.dprtID) +
                " ORDER BY id ";
    elif (dataInfo.codeCurrency == ALLCURRENCY)
        textCommand = makeTextQuery(ALLCURRENCY) +
                " ORDER BY id ";
    elif (dataInfo.codeCurrency == ALLFININSTR)
        textCommand = 
                "SELECT   ID ID, SUM (cl_n) cl_n, SUM (cl_n_n) cl_n_n, SUM (cl_n_in) cl_n_in,                                                                                       "+
                "                SUM (op_n)  op_n,  SUM (op_a)  op_a,  SUM (op_p)  op_p,  SUM (op_n_in)  op_n_in,  SUM (op_n_out)  op_n_out,  "+
                "                SUM (opl_n) opl_n, SUM (opl_a) opl_a, SUM (opl_p) opl_p, SUM (opl_n_in) opl_n_in, SUM (opl_n_out) opl_n_out, "+
                "                SUM (op3_n)  op3_n,  SUM (op3_nz)  op3_nz,  SUM (op3_a)  op3_a,  SUM (op3_p)  op3_p,                         "+
                "                SUM (op6_n)  op6_n,  SUM (op6_nz)  op6_nz,  SUM (op6_a)  op6_a,  SUM (op6_p)  op6_p,                         "+
                "                SUM (op12_n) op12_n, SUM (op12_nz) op12_nz, SUM (op12_a) op12_a, SUM (op12_p) op12_p                         "+
                "FROM ( " + makeTextQuery(NATCUR) + " UNION " + makeTextQuery(ALLCURRENCY) + " )                                             "+
                "GROUP BY ID                                                                                                                  "+
                "ORDER BY ID                                                                                                                  ";
    else
        textCommand = makeTextQuery(dataInfo.codeCurrency) +
                " ORDER BY id ";
    end;

    return textCommand;
end;

/**
 *
 */
private macro Принято_Выбыло(прин,выб, Jan1, repDate, StartDate, FinishDate)
    if (StartDate >= Jan1 )
        прин = прин + 1;
    end;

    if ((FinishDate >= Jan1) and (FinishDate <= repDate))
        выб = выб + 1;
    end;

    SetParm(0,прин);
    SetParm(1,выб);
end;

/**
 * Начало
 */
macro accountNoWork(dprtID, orgStructure, numPlan, issueMode, chapter, currency, balanceMask, repDate)

    var clientFromAccount;
    var clientFromParty;
    var PartyID  = 0;
    var ClientID = 0;
    var dataReport = TdataReport(dprtID, orgStructure, issueMode, numPlan, chapter, currency, balanceMask, repDate);

    var report = TReport();

    /* Контроль открытых опердней */
    var opd = RepOperdaysOpened(dataReport.departmentList, dataReport.repDate, dataReport.repDate);
    if (opd.ShouldContinue == false)
        exit(1);
    end;

    BegAction(1000, "Получение данных о клиентах", false);
        clientFromParty   = TRsbDataSet(makeTextQueryFromParty(dataReport));

        clientFromParty.SetFieldType("id"          , V_INTEGER);
        clientFromParty.SetFieldType("startdate"   , V_DATE);
        clientFromParty.SetFieldType("finishdate"  , V_DATE);
        clientFromParty.SetFieldType("bankcorresp" , V_INTEGER);
        clientFromParty.SetFieldType("legalform"   , V_INTEGER);
    EndAction();

    BegAction(1000, "Получение данных о счетах клиентов", false);
        clientFromAccount = TRsbDataSet(makeTextQueryFromAccount(dataReport));

        clientFromAccount.SetFieldType("id"       , V_INTEGER);
        clientFromAccount.SetFieldType("cl_n"     , V_INTEGER);
        clientFromAccount.SetFieldType("cl_n_n"   , V_INTEGER);
        clientFromAccount.SetFieldType("cl_n_in"  , V_INTEGER);
        clientFromAccount.SetFieldType("op_n"     , V_INTEGER);
        clientFromAccount.SetFieldType("op_a"     , V_MONEY);
        clientFromAccount.SetFieldType("op_p"     , V_MONEY);
        clientFromAccount.SetFieldType("op_n_in"  , V_INTEGER);
        clientFromAccount.SetFieldType("op_n_out" , V_INTEGER);
        clientFromAccount.SetFieldType("opl_n"    , V_INTEGER);
        clientFromAccount.SetFieldType("opl_a"    , V_MONEY);
        clientFromAccount.SetFieldType("opl_p"    , V_MONEY);
        clientFromAccount.SetFieldType("opl_n_in" , V_INTEGER);
        clientFromAccount.SetFieldType("opl_n_out", V_INTEGER);
        clientFromAccount.SetFieldType("op3_n"    , V_INTEGER);
        clientFromAccount.SetFieldType("op3_nz"   , V_INTEGER);
        clientFromAccount.SetFieldType("op3_a"    , V_MONEY);
        clientFromAccount.SetFieldType("op3_p"    , V_MONEY);
        clientFromAccount.SetFieldType("op6_n"    , V_INTEGER);
        clientFromAccount.SetFieldType("op6_nz"   , V_INTEGER);
        clientFromAccount.SetFieldType("op6_a"    , V_MONEY);
        clientFromAccount.SetFieldType("op6_p"    , V_MONEY);
        clientFromAccount.SetFieldType("op12_n"   , V_INTEGER);
        clientFromAccount.SetFieldType("op12_nz"  , V_INTEGER);
        clientFromAccount.SetFieldType("op12_a"   , V_MONEY);
        clientFromAccount.SetFieldType("op12_p"   , V_MONEY);
    EndAction();

    if (clientFromAccount.next())
        ClientID = clientFromAccount.id;
    end;

    while (clientFromParty.Next())  /* данные по клиентам */
        PartyID = clientFromParty.id;

        report.Обработать_клиента(clientFromParty, dataReport);

        /* нашли свой счет*/
        if (clientFromAccount and (PartyID == ClientID))
            report.Обработать_счета_клиента(clientFromParty, clientFromAccount, dataReport);
            if (clientFromAccount.next())
                ClientID = clientFromAccount.id;
            end;
        end;
    end;

    report.calculateThousand();

    report.printAccountNoWork(dataReport);
end;
