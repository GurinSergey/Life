/*──────────────────────────────────────────────────────────────────────────┐
  RS-Bank 6.0                                           R-Style Software Lab

  File Name   : pr_accstatement.mac                         January 10, 2006
  Programmer  : ABP
  Description : Выписки и справки по лицевым счетам
  Comment     : 
  Modify      : 04.10.2007 Malakhova SCR 110424 - Историзация кодов субъектов
              : 24.03.2008 Ivkina    SCR 119536 - Обработка проводок комиссий
              : 26.12.2011 Gurin     I-00133396 - Добавил определение 
                                                        формата поля
              : 01.02.2012 Glushin   I-00148568 - Убрал выведение лишних строк
                в расширенной текстовой форме
              : 06.02.2012 Glushin   R-36747-2 - Переписал расширенную выписку
                с учетом валюты эквивалента
              : 28.02.2012 Glushin   R-36747-4 - Увеличены размеры поля БИК 
                                                 и Наименование
              : 12.03.2012 vihrov I-00163737-2 не влезает наименование
              : 15.03.2012 LAO  Оптимизирован запрос makeMainQuery с проводками
              : 17.05.2012 KS I-00172012
              : 21.05.2012 KS I-00164496
              : 29.05.2012 vihrov  I-00200089-2
              : 01.06.2012 vihrov Tr-00275155
              : 27.06.2012 vihrov I-00192814-2 новую категорию добавил "все приложения = 7"
              : 23.07.2012 vihrov I-00219224-2
              : 18.09.2012 GSP по   I-00227451-2 убрал проверку валюты при 
                 просмотре категорий отказа от печати выписки
              : 07.11.2012    AAN  причесал малость макрос  
              : 30.01.2013  Бардак у вас тут, "причесал" нормально шапку с комментариями, Дима С, иногда и в шапке ставь комментарии
                Добавил хинт для запроса, а то он слетает на FullScan  LAO
              : 14.02.2013 AAN  I-00325927-2 проверка на содержимое строки была не коррктно сделано, из-за этого основание платежа не печаталось
              : 21.02.2013 AAN  I-00329228-2 тоже проверка строки, только когда в Ексель печатаем
              : 28.01.2013 AAN  C-16016 - теперь в примечании 7 на л\с храниться история наименований счёта, и выписка
                                          берёт название счёта оттуда, с учётом даты на которую было актуально назв. л\с
              : 28.02.2013 LAO добавил хинт + NO_PARALLEL   для запроса                             
              : 14.03.2013 Sokolov C-17499-6 Опимизировал вывод отчетов на основании предложений пользователей
              : 27.03.2013 AAN  R-171143-2   поправил функцию возвращающую названия счёта
              : 23.04.2013 AAN  I-00361027-2 
              : 21.05.2013 AAN  C-20028-6 по зявке от Карноуховой - печатать приложения с происхождением FineReader, если на счёте 
                                не стоит польз-й тип Ё (интернет-банк)
              : 05.07.2013 AAN  I-00394329-3   поправил БИК для обычной, расширенной и расширенной в Ексель
              : 24.07.2013 AAN  C-22055  создал спец. вид выписка для ЦБ по заявке от Журавлёвой, в нём проверяется кореспондирующий л/с,
                                если на нём польз. тип "Ю" то заменяем кор. л/с и основание из платежа на данные из проводки
              : 06.11.2013 AAN  I-00440422-2 У некоторых платежей основание пустое, из-за этого в Excel-выписки попадал Undefined, поборол это)))
└───────────────────────────────────────────────────────────────────────────*/
import Reporting, ReportInter, Календарь, FIInter, PTInter, CTInter, 
       PaymInter, OprInter, CurrInter, BankInter, WordIntf, lib_const;//, VBAconst;
import cb_sql, globals, lib_str, lib_lang, lib_arr,  rsexts;
import acv;
import RsbObjFactory;
import ofstream;
import rcw;
import param;
//Тихомиров. Параметры и импорт
import "fg_Life_parm.mac";//Sokolov C-17499-6 для определения наименования банка
import "pr_accstate.mac";
import lib_account;         // 24.07.2013 AAN  C-22055 макрос либ Олега, берут от туда с RSL_Account


private array exl, k;
private var dprts, curr, mon, rate, cmd_sql, rsd, accountmasksql,data, datoper, s, pg, tab, exst, f=0, j, page, flag, ex, ob, out;
var outputxa="pr_accstatea.xls",outputxa_2007="pr_accstatea_2007.xlsx";  // 01.06.2012 vihrov Tr-00275155 новые шаблоны
var outputxas="pr_accstateas.xls",outputxas_2007="pr_accstateas_2007.xlsx";
var outputx="pr_accstate.xls",outputx_2007="pr_accstate_2007.xlsx";
var outputxs="pr_accstates.xls",outputxs_2007="pr_accstates_2007.xlsx";
private var fulloutput, obBook, obsheet, str;
private var Fulloutputl, outl, outputl="accstate.lbr", acct, sqltab, info, rsdacc, cmdacc, accflag, flagprn, textname, docnum = 0, doctxt = 1, doctt= 1, flagpril, docsaccount, cmd8, rsd8;                    
var print_once, need_print, LD, WordApp, WordDoc, RegParam:string="", temppath, Templ, outputw="pr_accstate.dot";
var tbl, row, first_page, count_all_docs, sum_all_d, sum_all_k, sum_all_out; //str
var PageAutoNumber = False;
var Front = false, OvConnection;
GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
Fulloutputl = FindPath(outputl, outl);
private var dlg = TRecHandler("accstate", fulloutputl, TRUE); 

private var Flag_AccState_CB = false;       // 24.07.2013 AAN  C-22055 флаг спецвыписки для ЦБ
private var Flag_acc_is_carry = false;      // 24.07.2013 AAN  C-22055 флаг подмены кореспондирующего л\с из док-та на л\с из провода

// KS 19.04.2011 Объединю выписку разных банков в один макрос
var PRINT_BIC,PRINT_CASH,PRINT_CORRACC,PRINT_ONLY_CLIENTBANK,PRINT_OPER_ACC,PRINT_OVERDRAFT,PRINT_SEPARATOR,REPLACE_DOCKINDS,SOURCE_OF_NAME;
GetRegistryValue("PRBB\\REPORT\\ACCSTATEMENT\\PRINT_BIC",V_BOOL,PRINT_BIC,err);//
GetRegistryValue("PRBB\\REPORT\\ACCSTATEMENT\\PRINT_CASH",V_BOOL,PRINT_CASH,err);//
GetRegistryValue("PRBB\\REPORT\\ACCSTATEMENT\\PRINT_CORRACC",V_BOOL,PRINT_CORRACC,err);//
GetRegistryValue("PRBB\\REPORT\\ACCSTATEMENT\\PRINT_ONLY_CLIENTBANK",V_BOOL,PRINT_ONLY_CLIENTBANK,err);//
GetRegistryValue("PRBB\\REPORT\\ACCSTATEMENT\\PRINT_OPER_ACC",V_BOOL,PRINT_OPER_ACC,err);//
GetRegistryValue("PRBB\\REPORT\\ACCSTATEMENT\\PRINT_OVERDRAFT",V_BOOL,PRINT_OVERDRAFT,err);//
GetRegistryValue("PRBB\\REPORT\\ACCSTATEMENT\\PRINT_SEPARATOR",V_BOOL,PRINT_SEPARATOR,err);//
GetRegistryValue("PRBB\\REPORT\\ACCSTATEMENT\\REPLACE_DOCKINDS",V_STRING,REPLACE_DOCKINDS,err);
GetRegistryValue("PRBB\\REPORT\\ACCSTATEMENT\\SOURCE_OF_NAME",V_INTEGER,SOURCE_OF_NAME,err);

//  Sokolov 14.11.2012  ─Переменные для ведения статистики по видам отчетов
private var  strstat1, strstat2,  strstat3, sqlstat1, sqlstat2,sqlstat3, rsstat1, rsstat2, chetchik1;
private var kod_overdraft, otstup; //Sokolov C-17499-6 переменная для определения типа овердрафт на счете 
var fgBank = fg_life_subject({OurBank});

/*SDA - поправка на вертер - урегулирование теперь имеет ризалт карри 82*/
private const max_str = 50;

private CONST wSPOD   = 4,
              wDATE   = 10,
              wSHIFR  = 3,
              wNUMBD  = 10,
              wBIC    = 9,
              wACC    = 25,
              wSUMM   = 15,
              wGROUND = 50,
              wSTRNUM = 8;

private const TYPE_SPOD = strAlign("СПОД", wSPOD, STR_ALIGN_RIGHT);
private const TYPE_NOTSPOD = strAlign("", wSPOD, STR_ALIGN_RIGHT);

private CONST DBLPRN_DELIMITER_WIDTH = 4; /* кол-во пробелов между колонками при двойной печати */

private CONST END_LINE          = "\n";
private CONST SET_CHAR          = "X";
private CONST NOTFOUND          = "не найден";
private CONST EMPTY_STRING      = "";

private const EMPTY_STRING_ORACLE = getSqlString("");//StrFor(1);

private CONST TERRITORIAL = 1,
              REGIONAL    = 2;

private CONST BRANCH     = 1, /* Подразделение */
              DEPARTMENT = 2, /* Филиал */
              BANK       = 3; /* Банк */

private CONST RATETYPE_CB = 7;

private CONST DATASOURCE_ARH = 1,
              DATASOURCE_REV = 3; /* переоценка */

private CONST TA_RUB     = 6,
              TA_MULTIR  = 12,
              TA_ESTIM   = 4,
              TA_CORR    = 3;

private CONST ALLCURRENCY = -2,
              ALLFININSTR = -1,
              NATCUR      =  0;

private CONST ALLPARTY = -1;

private CONST ZeroDate = Date(0, 0, 0);

/* Возвращаемые значения */
private CONST WELLDONE         = 0,
              ERROR            = 1,
              NOACC            = 2,
              NODOC            = 3,
              OPERDAYNOTPASSED = 4;
/*
// Виды сортировки выписок 
private CONST ACC_SORT_DPRT  = "1", // По подразделениям
              ACC_SORT_OPER  = "2", // По операционистам
              ACC_SORT_CLNT  = "3", // По клиентам
              ACC_SORT_ACNT  = "5", // По счетам
              ACC_SORT_CHAP  = "9", // По главам счетов
              ACC_SORT_MAKET = "A"; // По системному макету
*/ 

// Формы выпуска выписок (печать приложений) 
private CONST ACC_FORMS_DEBIT   = 1, // дебетовыми
              ACC_FORMS_CREDIT  = 2, // кредитовыми
              ACC_FORMS_ALL     = 3, // всеми
              ACC_FORMS_NOTHING = 4; // без приложений

// Форматы выписки 
private CONST ACC_FORMATS_CLIENT = 1, // клиентский
              ACC_FORMATS_BANK   = 2; // внутрибанковский

// Не менять !!! 
private CONST DEBIT_C  = ACC_FORMS_DEBIT,
              CREDIT_C = ACC_FORMS_CREDIT;

// Индексы для массива с данными по печати первичек 
private CONST DS_DOC   = 0,
              DS_DK    = 1,
              DS_PAYM  = 2,
              DS_CARRY = 3,
              DS_CUR   = 4,
              DS_CBDOC = 5,
              DS_LAST  = 6; // всегда должен быть последним 

// формы печати первичек 
private CONST PRN_SKIP    = 0, // не печатать 
              PRN_RURPAYM = 1, // платеж
              PRN_CURPAYM = 2, // платеж
              PRN_MCARRY  = 3, // мультик
              PRN_RURMO   = 4, // мемордер
              PRN_CURMO   = 5, // мемордер
              PRN_BNKO    = 6; // банковский ордер

private var tempSortTableName = "drepaccst_tmp";
private VAR TempInserter;
private var cbAccountViewName = "";
private var cbCacheAccountViewName = "";

private VAR NAcc         = 0,
            NDoc         = 0,
            PRB          = TArray(),
            MaxWidth     = 0,
            DocKinds     = ArrCreate("01", "02", "05", "06", "09", "16", "17", "");

private VAR ObjectFactory = RsbObjectFactory();

// Sokolov к заявке I-00228765-2
var OnClient : Bool; 
private var textpoisk : string, cmd_textpoisk , resultat, schet_debet, schet_credit; // Sokolov 16.01.13 к заявке I-00228765-2

private macro showReport()
    return true;
end;

private macro CreateWordApplication()
    
    var startAX, WordApplication;
    if (isStandAlone())
        return ActiveX("Word.Application");
    else
        startAX = CreateObject("rsax", "TRsAxServer", "LoansAxServer", isStandalone());
        WordApplication = startAX.CreateComObject("Word.Application");
        WordApplication.Visible = false;
        return WordApplication;
    end;
end;

private macro ShowReportOnTerminal( WordApp, WordDoc )
    
    var DocFileName : string, TermFileName : string;
    DocFileName = SplitFile( GetTxtFileName("") );
    DocFileName = MergeFile( DocFileName, "statement_dfr_" + string(UserNumber), ".doc" );
    DocFileName = MergeFile( GetCurDir(), DocFileName );
    WordApp.visible = true; 
end;

// Значение типа V_BOOL в виде SQL-выражения с таким же значением 
private MACRO B2SQL(val)
    
    if (val == true)
        return "(1 = 1)";
    else
        return "(1 = 0)";
    end;
END;

// bool to int 
private MACRO B2I(val)
    
    if (val == true)
        return 1;
    else
        return 0;
    end;
END;

/* 
 * Проверка существования параметров переоценки для глав учета
 * @since   07.11.2007
 * @author  ABP
 * @version 6.00.020.27
 */
private class TRevaluationParametersChecker(parameters : Object)
    
    private var m_workingChaptersQuery;
        /* Точка входа  */ 
    macro execute()
        var workingChaptersDataset = TRsbDataset(m_workingChaptersQuery, RSDVAL_CLIENT, RSDVAL_STATIC);
        while (workingChaptersDataset.next())
            if ((workingChaptersDataset.unrealizedCatNumPlus == 0)  or
                (workingChaptersDataset.unrealizedCatNumMinus == 0) or
                (workingChaptersDataset.realizedCatNumPlus == 0)    or
                (workingChaptersDataset.realizedCatNumMinus == 0))
                msgBox("Не заданы параметры переоценки для главы " + workingChaptersDataset.chapter);
            end;
        end;
    end;

   /*
    * Конструктор
    * @param     parameters           параметры отчета
    */
    private macro constructor(parameters : Object)
        m_workingChaptersQuery =     " SELECT t_chapter,"
                             + "\n" + "       t_unrealizedCatNumPlus,"             
                             + "\n" + "       t_unrealizedCatNumMinus,"
                             + "\n" + "       t_realizedCatNumPlus,"
                             + "\n" + "       t_realizedCatNumMinus"
                             + "\n" + "  FROM dobchaptr_dbt chapter"
                             + "\n" + " WHERE " + parameters.getChapterFilterClause();
    end;

   constructor(parameters);

END;

/*
 * Формирование текстов SQL-запросов для механизма DocInfo по:
 * - рублевым или валютным проводкам по основному счету, 
 * - рублевым проводкам переоценки, 
 * - проводкам курсовой разницы МВП в корреспонденции со счетом покрытия или клиентским счетом МВП
 * - проводкам курсовой разницы МВП в корреспонденции со счетом курсовых разниц
 * 
 * @since   07.11.2007
 * @author  ABP
 * @version 6.00.020.27
 */
private class TCacheQueryMaker(parameters : Object)
    
    private var m_parameters : Object;
    private var m_dateIn : String;
    private var m_dateOut : String;
    private var m_mainQuery : String;
    private var m_rateDifferenceQuery : String;
    private var m_fieldList : String;
    
    private macro createFieldsList()
        m_fieldList = m_parameters.docInfo.getFieldListAsString("document");//sqlGetFieldsString("darhdoc_dbt", "document");
    end;
    
    private macro getFieldList()
        return m_fieldList;
    end;
   
    private macro getDataSourceClause(currencyId)
        return ternary(currencyId == NATCUR, "darhdoc_dbt", "darhdoc$_dbt");
    end;
   
    private macro getChapterNumberFilterClause()
        return ternary(m_parameters.chapter == 0, "(1 = 1)", "account.t_chapter = " + m_parameters.chapter);
    end;
    
    private macro getCurrencyIdFilterClause(currencyId)
        return ternary(currencyId == ALLCURRENCY, "account.t_currency != " + NATCUR, "account.t_currency = " + currencyId);
    end;
    
    private macro getAccountDataSourceClause(subsystem)
        return ternary(subsystem == REP_SUBSYSTEMS_CB, cbCacheAccountViewName, tempSortTableName);
    end;
    
    private macro getCurrencyIdJoinClause(currencyId)
        return ternary(currencyId == NATCUR, "(1 = 1)", "account.t_currency = document.t_code_currency");
    end;
    
    private macro getSubsystemFilterClause(subsystem)
        return ternary(subsystem == REP_SUBSYSTEMS_CB, "(1 = 1)", "account.t_subsystem = " + REP_SUBSYSTEMS_CB);
    end;
    
    private macro makeMainQuery(currencyId)
        macro getQueryText(subsystem)
            var query;
            /*оптимизирован запрос, уменьшено время выполнения LAO */
            query =          "SELECT /*+ NO_MERGE(ACCOUNT)*/ " + getFieldList()
                    + "\n" + "  FROM " + getDataSourceClause(currencyId) + " document,"
                    + "\n" + "       " + getAccountDataSourceClause(subsystem) + " account"
                    + "\n" + " WHERE document.t_date_carry BETWEEN " + m_dateIn + " AND " + m_dateOut
                    + "\n" + "   AND " + getSubsystemFilterClause(subsystem)
                    + "\n" + "   AND account.t_chapter = document.t_chapter"
                    + "\n" + "   AND " + getCurrencyIdJoinClause(currencyId)
                    + "\n" + "   AND account.t_acc IN (document.t_account_payer, document.t_account_receiver)";
            return query;
        end;
        var query;
        if (m_parameters.subsystem == REP_SUBSYSTEMS_ALL)
            query =                getQueryText(REP_SUBSYSTEMS_LOANS);
            query = query + "\n" + "UNION ALL";
            query = query + "\n" + getQueryText(REP_SUBSYSTEMS_CB);
        else
            query = getQueryText(m_parameters.subsystem);
        end;
        return "(" + query + ")";
    end;
    
    private macro makeRevaluationQuery(currencyId)
        macro getQueryText(subsystem)
            var query;
            query =          "SELECT " + getFieldList()
                    + "\n" + "  FROM darhdoc_dbt document,"
                    + "\n" + "   " + getAccountDataSourceClause(subsystem) + " account"
                    + "\n" + " WHERE document.t_date_carry BETWEEN " + m_dateIn + " AND " + m_dateOut
                    /*+ "\n" + "   AND document.t_result_carry = " + DELTARATE*/
                    /*SDA - поправка на вертер - урегулирование теперь имеет ризалт карри 82*/
                    + "\n" + "   AND (document.t_result_carry IN (" + DELTARATE + ", 82 ))"
                    + "\n" + "   AND " + getSubsystemFilterClause(subsystem)
                    + "\n" + "   AND account.t_connChapter = document.t_chapter"
                    + "\n" + "   AND account.t_connAcc IN (document.t_account_payer, document.t_account_receiver)";
            return query;
        end;
        
        var query;
        if (m_parameters.subsystem == REP_SUBSYSTEMS_ALL)
            query =                getQueryText(REP_SUBSYSTEMS_LOANS);
            query = query + "\n" + "UNION ALL";
            query = query + "\n" + getQueryText(REP_SUBSYSTEMS_CB);
        else
            query = getQueryText(m_parameters.subsystem);
        end;
        return "(" + query + ")";
    end;

    private macro makeRateDifferenceQuery(curencyId)
        macro getQueryText(subsystem)
            var query;
            query =          "SELECT " + getFieldList()
                    + "\n" + "  FROM darhdoc_dbt document,"
                    + "\n" + "   " + getAccountDataSourceClause(subsystem) + " account,"
                    + "\n" + "       mcaccount mcaccdoc"
                    + "\n" + " WHERE document.t_date_carry BETWEEN " + m_dateIn + " AND " + m_dateOut
                    + "\n" + "   AND document.t_result_carry = " + RUBCARRY
                    + "\n" + "   AND " + getSubsystemFilterClause(subsystem)
                    + "\n" + "   AND document.t_connAppKind = " + CB_MULTYDOC
                    + "\n" + "   AND account.t_connChapter = document.t_chapter"
                    + "\n" + "   AND document.t_chapter = mcaccdoc.t_chapter"
                    + "\n" + "   AND (   (    account.t_connAcc = document.t_account_payer"
                    + "\n" + "            AND document.t_account_receiver = mcaccdoc.t_account"
                    + "\n" + "           )"
                    + "\n" + "        OR (    account.t_connAcc = document.t_account_receiver"
                    + "\n" + "            AND document.t_account_payer = mcaccdoc.t_account"
                    + "\n" + "           )"
                    + "\n" + "       )"
                    + "\n" + "   AND mcaccdoc.t_activateDate BETWEEN " + getSqlDate(zeroDate) + " AND document.t_date_carry"
                    + "\n" + "   AND (   mcaccdoc.t_disablingDate BETWEEN document.t_date_carry AND TO_DATE('31.12.9999', 'DD.MM.YYYY')"
                    + "\n" + "        OR mcaccdoc.t_disablingDate = " + getSqlDate(zeroDate)
                    + "\n" + "       )";
            return query;
        end;
      
        var query;
        query =          "WITH mcaccount AS"
                + "\n" + "(SELECT DISTINCT mcaccdoc.t_account       t_account,"
                + "\n" + "                 mcaccdoc.t_chapter       t_chapter,"
                + "\n" + "                 mcaccdoc.t_activateDate  t_activateDate,"
                + "\n" + "                 mcaccdoc.t_disablingDate t_disablingDate"
                + "\n" + "   FROM dmcaccdoc_dbt mcaccdoc,"
                + "\n" + "        dobchaptr_dbt chapter"
                + "\n" + "  WHERE " + m_parameters.getChapterFilterClause("chapter")
                + "\n" + "    AND mcaccdoc.t_chapter = chapter.t_chapter"
                + "\n" + "    AND mcaccdoc.t_catNum IN (chapter.t_unrealizedCatNumPlus, chapter.t_unrealizedCatNumMinus,"
                + "\n" + "                              chapter.t_realizedCatNumPlus, chapter.t_realizedCatNumMinus)"
                + "\n" + ")";
        if (m_parameters.subsystem == REP_SUBSYSTEMS_ALL)
            query = query + "\n" + getQueryText(REP_SUBSYSTEMS_LOANS);
            query = query + "\n" + "UNION ALL";
            query = query + "\n" + getQueryText(REP_SUBSYSTEMS_CB);
        else
            query = query + "\n" + getQueryText(m_parameters.subsystem);
        end;
        return query;
    END;
    
    private macro make()
        if (m_parameters.currency == ALLFININSTR)
            m_mainQuery = makeMainQuery(NATCUR) + "\n" + "UNION ALL" + "\n" + makeMainQuery(ALLCURRENCY);
            if (m_parameters.natcurEquivalent)
                m_mainQuery = m_mainQuery + "\n" + "UNION ALL" + "\n" + makeRevaluationQuery(ALLCURRENCY);
            end;
            if (m_parameters.natcurEquivalent)
                m_rateDifferenceQuery = makeRateDifferenceQuery(ALLCURRENCY);
            end;
        elif (m_parameters.currency == ALLCURRENCY)
            m_mainQuery = makeMainQuery(ALLCURRENCY);
            if (m_parameters.natcurEquivalent)
                m_mainQuery = m_mainQuery + "\n" + "UNION ALL" + "\n" + makeRevaluationQuery(ALLCURRENCY);
            end;
            if (m_parameters.natcurEquivalent)
                m_rateDifferenceQuery = makeRateDifferenceQuery(ALLCURRENCY);
            end;
        else
            m_mainQuery = makeMainQuery(m_parameters.currency);
            if (m_parameters.natcurEquivalent and (m_parameters.currency != NATCUR))
                m_mainQuery = m_mainQuery + "\n" + "UNION ALL" + "\n" + makeRevaluationQuery(m_parameters.currency);
            end;
            if (m_parameters.natcurEquivalent and (m_parameters.currency != NATCUR))
                m_rateDifferenceQuery = makeRateDifferenceQuery(m_parameters.currency);
            end;
        end;
    END;
    
   /*
    * Получить текст запроса для основных проводок
    * @returns текст запроса для основных проводок
    */
    macro getMainQuery()
        return m_mainQuery;
    end;
    
   /*
    * Получить текст запроса для проводок курсовых разниц МВП
    * @returns текст запроса для проводок курсовых разниц МВП
    */
    macro getRateDifferenceQuery()
        return m_rateDifferenceQuery;
    end;
    
   /*
    * Конструктор. При вызове формирует тексты запросов
    * @param     parameters           параметры отчета
    */
    private macro constructor(parameters : Object)
        m_parameters = parameters;
        m_dateIn = getSqlDate(m_parameters.dateIn);
        m_dateOut = getSqlDate(m_parameters.dateOut);
        m_mainQuery = "";
        m_rateDifferenceQuery = "";
        createFieldsList();
        make();
    end;
    
    constructor(parameters);

END;  // class TCacheQueryMaker(parameters : Object)

/*
 * Формирование текстов SQL-запросов для печати проводок
 * @since   12.11.2007
 * @author  ABP
 * @version 6.00.020.27
 */
private class TDocumentQueryMaker(parameters : Object)
    
    private const CARRY_TYPE_MAIN            = 0;
    private const CARRY_TYPE_RATE_DIFFERENCE = 1;
    private const CARRY_TYPE_REVALUATION     = 2;
    private var m_parameters : Object;
    private var m_dateIn : String;
    private var m_dateOut : String;
    private var m_mainAccount : String;
    private var m_connectAccount : String;
    private var m_needEquivalent : Bool;
    private var m_query : Object;
    
    private macro addParameter(name, value)
        m_query.addParam(name, RSDBP_IN, value);
        return "?";
    end;
    
    private macro getEquivalentClause()
    
        var query = "";
        var correspondingAccountFilerClause;
        if (not m_needEquivalent)
            query = "0";
        else
            query = "   CASE "
            + "\n" + "  WHEN document.t_connAppKind != " + CB_MULTYDOC
            + "\n" + "      THEN (SELECT equivalent.t_sum"
            + "\n" + "              FROM darhdoc_dbt equivalent"
            + "\n" + "             WHERE equivalent.t_connAppKind = document.t_iApplicationKind"
            + "\n" + "               AND equivalent.t_connAppKey = document.t_applicationKey"
            + "\n" + "           )"
            + "\n" + "  ELSE (SELECT equivalent.t_sum"
            + "\n" + "          FROM darhdoc_dbt equivalent"
            + "\n" + "         WHERE equivalent.t_connAppKind = document.t_connAppKind"
            + "\n" + "           AND equivalent.t_connAppKey = document.t_connAppKey"
            + "\n" + "           AND NOT EXISTS (SELECT 1"
            + "\n" + "                             FROM dmcaccdoc_dbt mcaccdoc,"
            + "\n" + "                                  dobchaptr_dbt chapter"
            + "\n" + "                            WHERE chapter.t_chapter = equivalent.t_chapter"
            + "\n" + "                              AND mcaccdoc.t_chapter = chapter.t_chapter"
            + "\n" + "                              AND mcaccdoc.t_account IN (equivalent.t_account_payer,"
            + "\n" + "                                                         equivalent.t_account_receiver"
            + "\n" + "                                                        )"
            + "\n" + "                              AND mcaccdoc.t_catNum IN (chapter.t_unrealizedCatNumPlus,"
            + "\n" + "                                                        chapter.t_unrealizedCatNumMinus,"
            + "\n" + "                                                        chapter.t_realizedCatNumPlus,"
            + "\n" + "                                                        chapter.t_realizedCatNumMinus"
            + "\n" + "                                                       )"
            + "\n" + "                          )"
            + "\n" + "       )"
            + "\n" + " END";
        end;
        return query;
    end;
    
    private macro getCommissionAccountProcessing(fieldSelectDoc : String, fieldSelectPayment : String) : String
        var text;
        if (m_parameters.docOnlyData == true)
            text = " " + fieldSelectDoc + " ";
        else
            if (m_parameters.commissionIncomeAccounts == "") 
                text = " " + fieldSelectPayment + " ";
            else
                text =   " CASE"
                + "\n" + "     WHEN (" + convertMaskToSQLFormat(m_parameters.commissionIncomeAccounts, "document.t_account_payer") + ")"
                + "\n" + "       OR (" + convertMaskToSQLFormat(m_parameters.commissionIncomeAccounts, "document.t_account_receiver") + ")"
                + "\n" + "         THEN " + fieldSelectDoc
                + "\n" + "     ELSE " + fieldSelectPayment
                + "\n" + "  END ";
            end;
        end;
        return text;
    end;
    
    private macro getCorrespondingAccountClause(isDebit)
        return ternary(isDebit,
                       // счет плательщика равен основному счету выписки
                       getCommissionAccountProcessing("document.t_account_receiver", "documentInfo.t_receiverAccount"),
                       getCommissionAccountProcessing("document.t_account_payer", "documentInfo.t_payerAccount")
                      );
    end;
    
    private macro makeMainQuery()
        
        macro getSelectClause(isDebit)
            var query;
            query =          "SELECT NVL(documentInfo.t_paymentId, 0)                                      paymentId,"
                    + "\n" + "       NVL(documentInfo.t_carryId, 0)                                        carryId,"
                    + "\n" + "   " + getCorrespondingAccountClause(isDebit) + "                            account,"
                    + "\n" + "   " + ternary(isDebit, DEBIT_C, CREDIT_C) + "                               dk,"
                    + "\n" + "   " + ternary(isDebit, "document.t_sum", "0") + "                           sumDebit,"
                    + "\n" + "   " + ternary(isDebit, "0", "document.t_sum") + "                           sumCredit,"
                    + "\n" + "   " + ternary(isDebit, "NVL(" + getEquivalentClause() + ", 0)", 0) + "      sumDebitEq," 
                    + "\n" + "   " + ternary(isDebit, 0, "NVL(" + getEquivalentClause() + ", 0)") + "      sumCreditEq," 
                    + "\n" + "       documentInfo.t_payerBankCode                                          payerBankCode,"
                    + "\n" + "       documentInfo.t_payerCodeKind                                          payerCodeKind,"
                    + "\n" + "       documentInfo.t_receiverBankCode                                       receiverBankCode,"
                    + "\n" + "       documentInfo.t_receiverCodeKind                                       receiverCodeKind,"
                    + "\n" + "       document.t_shifr_oper                                                 shifr_oper,"
                    + "\n" + "       document.t_typeDocument                                               typeDocument,"
                    + "\n" + "       INSTR(document.t_typeDocument, 'З')                                   isSpod,"
                    + "\n" + "       CASE"
                    + "\n" + "           WHEN documentInfo.t_paymentId IS NULL"
                    + "\n" + "           THEN 1"
                    + "\n" + "           WHEN (SELECT COUNT(pmprop.t_paymentId)"
                    + "\n" + "                   FROM dpmprop_dbt pmprop,"
                    + "\n" + "                        dpmpaym_dbt payment"
                    + "\n" + "                  WHERE pmprop.t_paymentId = documentInfo.t_paymentId"
                    + "\n" + "                    AND pmprop.t_corschem = -1"
                    + "\n" + "                    AND payment.t_paymentId = pmprop.t_paymentId"
                    + "\n" + "                    AND payment.t_startDepartment = payment.t_endDepartment"
                    + "\n" + "                ) = 2"
                    + "\n" + "           THEN 1"
                    + "\n" + "           ELSE 0"
                    + "\n" + "       END                                                                   isInternalDocument,"
                    + "\n" + "       documentInfo.t_code_currency                                          code_currency,"
                    + "\n" + "       documentInfo.t_autokey                                                autokey,"
                    + "\n" +         getCommissionAccountProcessing("document.t_ground", 
                                                                    "documentInfo.t_ground") + "           ground,"
                    + "\n" +         getCommissionAccountProcessing("document.t_numb_document", 
                                                                    "documentInfo.t_numb_document") + "    numb_document,"
                    + "\n" + "       documentInfo.t_date_carry                                             date_carry,"
                    + "\n" + "       documentInfo.t_receiverAccount                                        receiverAccount,"
                    + "\n" + "       documentInfo.t_payerAccount                                           payerAccount,"
                    + "\n" + "       documentinfo.t_payerCorrAcc                                           payerCorrAcc,"
                    + "\n" + "       documentinfo.t_receiverCorrAcc                                        receiverCorrAcc,"
                    
                    + "\n" + "   " + m_parameters.getDocumentInfoTableFieldList() + ","
                    + "\n" + "   " + m_parameters.getDocumentTableFieldList() + ","
                    + "\n" + "   " + CARRY_TYPE_MAIN + "                                                   carryType,"
                    + "\n" + "   " + ternary(isDebit, "document.t_sum", "0") + "                           sumDebit_sort,"
                    + "\n" + "   " + ternary(isDebit, "0", "document.t_sum") + "                           sumCredit_sort,"
                    + "\n" + "       document.t_date_carry                                                 dateCarry_sort,"
                    + "\n" + "       CASE"
                    + "\n" + "           WHEN document.t_connAppKind = " + CB_MULTYDOC
                    + "\n" + "               THEN document.t_connAppKind || document.t_connAppKey"
                    + "\n" + "           ELSE document.t_iApplicationKind || document.t_ApplicationKey"
                    + "\n" + "       END                                                                   documentKey";
            return query;
        end;
        
        macro getCurrencyIdFilterClause(partName)
            var clause;
            if (m_parameters.account.currency != NATCUR)
                clause = "document.t_code_currency = " + addParameter("mainAccountCurrencyId_" + partName, m_parameters.account.currency);
            else
                clause = "(1 = 1)";
            end;
            return clause;
        end;
        
        macro getCurrencyIdJoinClause(partName)
            var clause;
            if (m_parameters.account.currency != NATCUR)
                clause = "document.t_code_currency = documentInfo.t_code_currency";
            else
                clause = "documentInfo.t_code_currency = " + addParameter("documentInfoCurrencyId_" + partName, NATCUR);
            end;
            return clause;
        end;
        
        var query;
        var dataSourceClause = ternary(m_parameters.account.currency == NATCUR, "darhdoc_dbt", "darhdoc$_dbt");
        var currencyIdFilterClause;
        var currencyIdJoinClause;
        query =          getSelectClause(true)
                + "\n" + "  FROM " + dataSourceClause + " document,"
                + "\n" + "       " + m_parameters.docInfo.getCacheTableName() + " documentInfo"
                + "\n" + " WHERE document.t_autokey = documentInfo.t_autokey"
                + "\n" + "   AND " + getCurrencyIdJoinClause("debit")
                + "\n" + "   AND document.t_account_payer = " + addParameter("mainAccount_debit", m_mainAccount)
                + "\n" + "   AND document.t_chapter = " + addParameter("chapter_debit", m_parameters.account.chapter)
                + "\n" + "   AND " + getCurrencyIdFilterClause("debit")
                + "\n" + "   AND document.t_date_carry BETWEEN " + addParameter("dateIn_debit", m_dateIn)+ " AND " + addParameter("dateOut_debit", m_dateOut)
                + "\n" + " UNION ALL"
                + "\n" + getSelectClause(false)
                + "\n" + "  FROM " + dataSourceClause + " document,"
                + "\n" + "       " + m_parameters.docInfo.getCacheTableName() + " documentInfo"
                + "\n" + " WHERE document.t_autokey = documentInfo.t_autokey"
                + "\n" + "   AND " + getCurrencyIdJoinClause("credit")
                + "\n" + "   AND document.t_account_receiver = " + addParameter("mainAccount_credit", m_mainAccount)
                + "\n" + "   AND document.t_chapter = " + addParameter("chapter_credit", m_parameters.account.chapter)
                + "\n" + "   AND " + getCurrencyIdFilterClause("credit")
                + "\n" + "   AND document.t_date_carry BETWEEN " + addParameter("dateIn_credit", m_dateIn) + " AND " + addParameter("dateOut_credit", m_dateOut);
        return "(" + query + ")";
    end; //private macro makeMainQuery(
    
    private macro makeRateDifferenceQuery()
        
        macro getSelectClause(isDebit)
            var query;
            query =          "SELECT 0                                                                  paymentId,"
                    + "\n" + "       0                                                                  carryId,"
                    + "\n" + "   " + getCorrespondingAccountClause(isDebit) + "                         account,"
                    + "\n" + "   " + ternary(isDebit, DEBIT_C, CREDIT_C) + "                            dk,"
                    + "\n" + "       0                                                                  sumDebit,"
                    + "\n" + "       0                                                                  sumCredit,"
                    + "\n" + "   " + ternary(isDebit, "document.t_sum", "0") + "                        sumDebitEq,"
                    + "\n" + "   " + ternary(isDebit, "0", "document.t_sum") + "                        sumCreditEq,"
                    + "\n" + "   " + getSqlString({MFO_Bank}) + "                                       payerBankCode,"
                    + "\n" + "   " + PTCK_BIC + "                                                       payerCodeKind,"
                    + "\n" + "   " + getSqlString({MFO_Bank}) + "                                       receiverBankCode,"
                    + "\n" + "   " + PTCK_BIC + "                                                       receiverCodeKind,"
                    + "\n" + "       document.t_shifr_oper                                              shifr_oper,"
                    + "\n" + "       document.t_typeDocument                                            typeDocument,"
                    + "\n" + "       INSTR(document.t_typeDocument, 'З')                                isSpod,"
                    + "\n" + "       1                                                                  isInternalDocument,"
                    + "\n" + "       documentInfo.t_code_currency                                       code_currency,"
                    + "\n" + "       documentInfo.t_autokey                                             autokey,"
                    + "\n" +         getCommissionAccountProcessing("document.t_ground", 
                                                                    "documentInfo.t_ground") + "        ground,"
                    + "\n" +         getCommissionAccountProcessing("document.t_numb_document", 
                                                                    "documentInfo.t_numb_document") + " numb_document,"
                    + "\n" + "       documentInfo.t_date_carry                                          date_carry,"
                    + "\n" + "       documentInfo.t_receiverAccount                                     receiverAccount,"
                    + "\n" + "       documentInfo.t_payerAccount                                        payerAccount,"
                    + "\n" + "   " + getSqlString({CORAC_Bank}) + "                                     payerCorrAcc,"
                    + "\n" + "   " + getSqlString({CORAC_Bank}) + "                                     receiverCorrAcc,"
                    + "\n" + "   " + m_parameters.getDocumentInfoTableFieldList() + ","
                    + "\n" + "   " + m_parameters.getDocumentTableFieldList() + ","
                    + "\n" + "   " + CARRY_TYPE_RATE_DIFFERENCE + "                                     carryType,"
                    + "\n" + "       0                                                                  sumDebit_sort,"
                    + "\n" + "       0                                                                  sumCredit_sort,"
                    + "\n" + "       document.t_date_carry                                              dateCarry_sort,"
                    + "\n" + "       document.t_connAppKind || document.t_connAppKey                    documentKey";
            return query;
        end;
        
        var query = "";
        query =        getSelectClause(true)
           + "\n" + "  FROM darhdoc_dbt document,"
           + "\n" + "       " + m_parameters.docInfoRateDifference.getCacheTableName() + " documentInfo"
           + "\n" + " WHERE document.t_autokey = documentInfo.t_autokey"
           + "\n" + "   AND documentInfo.t_code_currency = " + addParameter("rateDiff_documentInfoCurrencyId_debit", NATCUR)
           + "\n" + "   AND document.t_account_payer = " + addParameter("rateDiff_connectAccount_debit", m_connectAccount)
           + "\n" + "   AND document.t_chapter = " + addParameter("rateDiff_connectChapter_debit", m_parameters.account.connChapter)
           + "\n" + "   AND document.t_date_carry BETWEEN " + addParameter("rateDiff_dateIn_debit", m_dateIn)+ " AND " + addParameter("rateDiff_dateOut_debit", m_dateOut)
           + "\n" + "   AND document.t_result_carry = " + addParameter("rateDiff_result_carry_arhcarry_debit", RUBCARRY)
           + "\n" + " UNION ALL"
           + "\n" + getSelectClause(false)
           + "\n" + "  FROM darhdoc_dbt document,"
           + "\n" + "       " + m_parameters.docInfoRateDifference.getCacheTableName() + " documentInfo"
           + "\n" + " WHERE document.t_autokey = documentInfo.t_autokey"
           + "\n" + "   AND documentInfo.t_code_currency = " + addParameter("rateDiff_documentInfoCurrencyId_credit", NATCUR)
           + "\n" + "   AND document.t_account_receiver = " + addParameter("rateDiff_connectAccount_credit", m_connectAccount)
           + "\n" + "   AND document.t_chapter = " + addParameter("rateDiff_connectChapter_credit", m_parameters.account.connChapter)
           + "\n" + "   AND document.t_date_carry BETWEEN " + addParameter("rateDiff_dateIn_credit", m_dateIn)+ " AND " + addParameter("rateDiff_dateOut_credit", m_dateOut)
           + "\n" + "   AND document.t_result_carry = " + addParameter("rateDiff_result_carry_arhcarry_credit", RUBCARRY);
        return "(" + query + ")";
    end;
    
    private macro makeRevaluationQuery()
        macro getSelectClause(isDebit)
            var query;
            query =          "SELECT 0                                                                  paymentId,"
                    + "\n" + "       0                                                                  carryId,"
                    + "\n" + "   " + getCorrespondingAccountClause(isDebit) + "                         account,"
                    + "\n" + "   " + ternary(isDebit, DEBIT_C, CREDIT_C) + "                            dk,"
                    + "\n" + "       0                                                                  sumDebit,"
                    + "\n" + "       0                                                                  sumCredit,"
                    + "\n" + "   " + ternary(isDebit, "document.t_sum", "0") + "                        sumDebitEq,"
                    + "\n" + "   " + ternary(isDebit, "0", "document.t_sum") + "                        sumCreditEq,"
                    + "\n" + "   " + getSqlString({MFO_Bank}) + "                                       payerBankCode,"
                    + "\n" + "   " + PTCK_BIC + "                                                       payerCodeKind,"
                    + "\n" + "   " + getSqlString({MFO_Bank}) + "                                       receiverBankCode,"
                    + "\n" + "   " + PTCK_BIC + "                                                       receiverCodeKind,"
                    + "\n" + "       document.t_shifr_oper                                              shifr_oper,"
                    + "\n" + "       document.t_typeDocument                                            typeDocument,"
                    + "\n" + "       INSTR(document.t_typeDocument, 'З')                                isSpod,"
                    + "\n" + "       1                                                                  isInternalDocument,"
                    + "\n" + "       documentInfo.t_code_currency                                       code_currency,"
                    + "\n" + "       documentInfo.t_autokey                                             autokey,"
                    + "\n" +         getCommissionAccountProcessing("document.t_ground", 
                                                                    "documentInfo.t_ground") + "        ground,"
                    + "\n" +         getCommissionAccountProcessing("document.t_numb_document", 
                                                                    "documentInfo.t_numb_document") + " numb_document,"
                    + "\n" + "       documentInfo.t_date_carry                                          date_carry,"
                    + "\n" + "       documentInfo.t_receiverAccount                                     receiverAccount,"
                    + "\n" + "       documentInfo.t_payerAccount                                        payerAccount,"
                    + "\n" + "   " + getSqlString({CORAC_Bank}) + "                                     payerCorrAcc,"
                    + "\n" + "   " + getSqlString({CORAC_Bank}) + "                                     receiverCorrAcc,"
                    + "\n" + "   " + m_parameters.getDocumentInfoTableFieldList() + ","
                    + "\n" + "   " + m_parameters.getDocumentTableFieldList() + ","
                    + "\n" + "   " + CARRY_TYPE_REVALUATION + "                                         carryType,"
                    + "\n" + "       NULL                                                               sumDebit_sort,"
                    + "\n" + "       NULL                                                               sumCredit_sort,"
                    + "\n" + "       document.t_date_carry                                              dateCarry_sort,"
                    + "\n" + "       document.t_iApplicationKind || document.t_ApplicationKey           documentKey";
            return query;
        end;
        
        var query = "";
        query =          getSelectClause(true)
                + "\n" + "  FROM darhdoc_dbt document,"
                + "\n" + "       " + m_parameters.docInfo.getCacheTableName() + " documentInfo"
                + "\n" + " WHERE document.t_autokey = documentInfo.t_autokey"
                + "\n" + "   AND documentInfo.t_code_currency = " + addParameter("reval_documentInfoCurrencyId_debit", NATCUR)
                + "\n" + "   AND document.t_account_payer = " + addParameter("reval_connectAccount_debit", m_connectAccount)
                + "\n" + "   AND document.t_chapter = " + addParameter("reval_connectChapter_debit", m_parameters.account.connChapter)
                + "\n" + "   AND document.t_date_carry BETWEEN " + addParameter("reval_dateIn_debit", m_dateIn)+ " AND " + addParameter("reval_dateOut_debit", m_dateOut)
        /*                + "\n" + "   AND document.t_result_carry = " + addParameter("reval_result_carry_arhcarry_debit", DELTARATE)*/
        /*SDA - поправка на вертер - урегулирование теперь имеет ризалт карри 82*/
                + "\n" + "   AND document.t_result_carry IN ("+DELTARATE+", 82 )"
                + "\n" + " UNION ALL"
                + "\n" + getSelectClause(false)
                + "\n" + "  FROM darhdoc_dbt document,"
                + "\n" + "       " + m_parameters.docInfo.getCacheTableName() + " documentInfo"
                + "\n" + " WHERE document.t_autokey = documentInfo.t_autokey"
                + "\n" + "   AND documentInfo.t_code_currency = " + addParameter("reval_documentInfoCurrencyId_credit", NATCUR)
                + "\n" + "   AND document.t_account_receiver = " + addParameter("reval_connectAccount_credit", m_connectAccount)
                + "\n" + "   AND document.t_chapter = " + addParameter("reval_connectChapter_credit", m_parameters.account.connChapter)
                + "\n" + "   AND document.t_date_carry BETWEEN " + addParameter("reval_dateIn_credit", m_dateIn)+ " AND " + addParameter("reval_dateOut_credit", m_dateOut)
        /*                + "\n" + "   AND document.t_result_carry = " + addParameter("reval_result_carry_arhcarry_credit", DELTARATE);*/
        /*SDA - поправка на вертер - урегулирование теперь имеет ризалт карри 82*/
                  + "\n" + "   AND document.t_result_carry IN ("+DELTARATE+ ", 82)";
        return "(" + query + ")";
    end;
    
    private macro make()
        var query = "";
        if (not m_needEquivalent)
            query = makeMainQuery()
            + "\n" + "ORDER BY doc_date_carry, sumCredit, sumDebit";
        else
            query =          "SELECT accountDocument.*,"
                    + "\n" + "       FIRST_VALUE(accountDocument.dateCarry_sort)"
                    + "\n" + "       OVER (PARTITION BY accountDocument.documentKey"
                    + "\n" + "                 ORDER BY accountDocument.carryType)               t_key_dateCarry,"
                    + "\n" + "       FIRST_VALUE(accountDocument.sumDebit_sort)"
                    + "\n" + "       OVER (PARTITION BY accountDocument.documentKey"
                    + "\n" + "             ORDER BY accountDocument.carryType)                   t_key_sumDebit,"
                    + "\n" + "       FIRST_VALUE(accountDocument.sumCredit_sort)"
                    + "\n" + "       OVER (PARTITION BY accountDocument.documentKey"
                    + "\n" + "                 ORDER BY accountDocument.carryType)               t_key_sumCredit,"
                    + "\n" + "       accountDocument.documentKey                                 t_key_documentKey,"
                    + "\n" + "       accountDocument.carryType                                   t_key_carryType"
                    + "\n" + "  FROM (" + makeMainQuery()
                    + "\n" + "        UNION"
                    + "\n" + "        " + makeRateDifferenceQuery()
                    + "\n" + "        UNION"
                    + "\n" + "        " + makeRevaluationQuery()
                    + "\n" + "       ) accountDocument"
                    + "\n" + " ORDER BY t_key_dateCarry,"
                    + "\n" + "          t_key_sumDebit NULLS LAST,"
                    + "\n" + "          t_key_sumCredit NULLS LAST,"
                    + "\n" + "          t_key_documentKey,"
                    + "\n" + "          t_key_carryType";
        end;
        m_query.cmdText = query;
    end;
    
   /*
    * Получить RsdCommand запроса для отбора проводок
    * @returns RsdCommand запроса для отбора проводок
    */
    macro getQuery()
        return m_query;
    end;

    /**
     * Конструктор. При вызове формирует текст запроса
     * 
     * @param     parameters           параметры отчета
     */
    private macro constructor(parameters : Object)
        
        m_parameters = parameters;
        m_dateIn = m_parameters.dateIn;
        m_dateOut = m_parameters.dateOut;
        m_mainAccount = m_parameters.account.acc;
        m_connectAccount = m_parameters.account.connAcc;
        m_needEquivalent = (m_parameters.account.currency != NATCUR) and (m_parameters.natcurEquivalent);
        m_query = RsdCommand(rslDefCon);
        m_query.nullConversion = true;
        make();
    end;
   
   constructor(parameters);
END;     // class TDocumentQueryMaker(parameters : Object)

/* Класс с параметрами отчета */
private CLASS TAccStatementInfo
    (
      pDprtID,
      pOrgStructure,
      pIssueMode,
      pNumPlanArray,
      pChapter,
      pCurrency,
      pDateIn,
      pDateOut,
      pClient,
      pOper,
      pBalanceMask,
      pAccountMask,
      pKindSort,
      pOutForm,
      pAlg,
      pSubsystem,
      pPrGround,
      pDblPrint,
      pDocOnlyData,
      pNatCurEquivalent,
      pSPODTurnsTotal,
      pcSetA,
      pcSetZTurn,
      pcSetCr,
      pcEveryDayOfPrd,
      pcSetExcludeRevalue,
      pExcludeOcp,
      pAccountType,
      pAccountUserType
    )
    private var OldDateIn = Date(0,0,0), OldDateOut = Date(0,0,0), OldCurrency = NATCUR;
    
    private var Rate_In  = TRecHandler("ratedef.dbt"),
                Rate_Out = TRecHandler("ratedef.dbt"),;
    
    private var m_documentTableFieldList : String;
    
    private var m_documentInfoTableFieldList : String;
    
    private var m_bankHeaderBuffer : TArray;
    
    var commissionIncomeAccounts : String;
    
    var OcpAccountServer;
    
    var DocInfo;
    var docInfoRateDifference;
    
    var pr_multycar  = TBFile("multycar.dbt", "bank.def"),
        pr_documentr = TBFile("arhdoc.dbt", "bank.def"),
        pr_documentc = TBFile("arhdoc$.dbt", "bank.def");
    
    var pr_pmpaym   = TRecHandler("pmpaym.dbt",   "bank.def"),
        pr_debit    = TRecHandler("pmprop.dbt",   "bank.def"),
        pr_credit   = TRecHandler("pmprop.dbt",   "bank.def"),
        pr_pmrmprop = TRecHandler("pmrmprop.dbt", "bank.def");
    
    var Account, /* объект TRsbDataSet*/
        DepartmentList,
        AccountFilter,
        BranchAndDprtFilter,
        RateIn,
        RateOut,
        CurrentFormat,
        StatementLineNumber,
        DprtID             = pDprtID,
        OrgStructure       = pOrgStructure,
        IssueMode          = pIssueMode,
        NumPlanArray       = pNumPlanArray,
        Chapter            = pChapter,
        Currency           = pCurrency,
        DateIn             = pDateIn,
        DateOut            = pDateOut,
        Client             = pClient,
        Oper               = pOper,
        BalanceMask        = pBalanceMask,
        AccountMask        = pAccountMask,
        KindSort           = pKindSort,
        OutForm            = pOutForm,
        Format             = pAlg,
        Subsystem          = pSubsystem,
        PrGround           = pPrGround,
        DblPrint           = pDblPrint,
        DocOnlyData        = pDocOnlyData,
        NatCurEquivalent   = pNatCurEquivalent,
        SPODTurnsTotal     = pSPODTurnsTotal,
        cSetA              = pcSetA,
        cSetZTurn          = pcSetZTurn,
        cSetCr             = pcSetCr,
        cEveryDayOfPrd     = pcEveryDayOfPrd,
        cSetExcludeRevalue = pcSetExcludeRevalue,
        ExcludeOcp         = pExcludeOcp,
        AccountType        = pAccountType,
        AccountUserType    = pAccountUserType;
    var needEquivalent = false;
    
    const ACC_FORMATS_BANK_EMPTY_LINES1 =       strAlign("", wSPOD, STR_ALIGN_RIGHT)
                                        + "│" + strAlign("", wSTRNUM, STR_ALIGN_RIGHT)
                                        + "│" + strAlign("", wDATE, STR_ALIGN_RIGHT)
                                        + "│" + strAlign("", wSHIFR, STR_ALIGN_RIGHT)
                                        + "│" + strAlign("", wNUMBD, STR_ALIGN_RIGHT);
    const ACC_FORMATS_BANK_EMPTY_LINES2 = "│" + strAlign("", wACC, STR_ALIGN_CENTER)
                                        + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT)
                                        + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT);
    var ACC_FORMATS_BANK_EMPTY_LINES3;
    
    const ACC_FORMATS_CLIENT_EMPTY_LINES1 = strAlign("", wSPOD, STR_ALIGN_RIGHT)
                                    + "│" + strAlign("", wDATE, STR_ALIGN_RIGHT)
                                    + "│" + strAlign("", wSHIFR, STR_ALIGN_RIGHT)
                                    + "│" + strAlign("", wNUMBD, STR_ALIGN_RIGHT);
    var ACC_FORMATS_CLIENT_EMPTY_LINES2;
    var ACC_FORMATS_CLIENT_EMPTY_LINES3 = "│" + strAlign("", wACC, STR_ALIGN_RIGHT)
                                        + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT)
                                        + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT);
    if (PRINT_BIC)
        ACC_FORMATS_CLIENT_EMPTY_LINES3 = "│" + strAlign("", wBIC, STR_ALIGN_RIGHT)+
                                            ACC_FORMATS_CLIENT_EMPTY_LINES3;
    end;
    
    var ACC_FORMATS_CLIENT_EMPTY_LINES4;
    
    macro get_acc_name_note(account_num)                                    //28.01.2013 AAN  C-16016
        var querr = rsdcommand( " SELECT NOTE.T_DATE, " +                   // получаем из примечания 7 историю названий счёта
                                "        NOTE.T_VALIDTODATE, " +
                                "        ACC.T_ACCOUNT, " +
                                "        UTL_RAW.cast_to_varchar2 (t_text) t_name_ac " +
                                "   FROM dnotetext_dbt note, daccount_dbt acc " +
                                "  WHERE note.t_objecttype = 4 AND note.t_notekind = 7 " +
                                "    AND note.t_documentid = rsb_rep_ac.makeaccountid (TO_CHAR (ACC.T_ACCOUNT), 0, 1, NULL) " +
                                "    AND ACC.T_ACCOUNT = '" + account_num + "'" +
                                "    order by NOTE.T_VALIDTODATE DESC" );
        var rez = rsdrecordset(querr);
        return rez;
    end; 
    
    private macro RateAsString(dat, Rate)
        var strRate = "";
        if (ПолучитьЗначениеКурса(Rate, dat) != 0)
            Rate.rec.Rate = 0;
        end;
        ПолучитьСтрокуЗначенияКурса(Rate, 0, strRate);
        if (Rate.rec.Scale != 1)
            if (Rate.rec.IsInverse != "") 
                strRate = string(Rate.rec.Scale) + "/" + strRate;
            else
                strRate = strRate + "/" + string(Rate.rec.Scale);
            end;
        elif (Rate.rec.IsInverse != "") 
            strRate = string(Rate.rec.Scale) + "/" + strRate;
        end;
        return strRate;
    end;
    
    macro getChapterFilterClause(alias)
        defaultParm(alias, "");
        alias = ternary(alias != "", alias + ".", alias);
        return ternary(chapter, alias + "t_chapter = " + chapter, alias + "t_excludeFromFormalAcnt != " + getSqlString(SET_CHAR));
    end;
    
    macro getDocumentTableFieldList()
        return m_documentTableFieldList;
    end;
    
    macro getDocumentInfoTableFieldList()
        return m_documentInfoTableFieldList;
    end;
    
    macro printBankHeader(width, buffer)
        var i;
        i = 0;
        while (i < m_bankHeaderBuffer.size)
            buffer[buffer.size] = strAlign(m_bankHeaderBuffer[i], width, STR_ALIGN_CENTER);
            i = i + 1;
        end;
        return buffer;
    end;
    
    private macro Constructor()
        var stat = 0;
        var i;
        DepartmentList        = RepDepartmentList(OrgStructure, IssueMode, DprtID);
        AccountFilter         = RepAccountFilter(DepartmentList, PRIV_GET_ACCOUNT_DATA_FOR_REPORTS);
        BranchAndDprtFilter   = RepBranchAndDepartmentFieldFilter(DepartmentList);
        OcpAccountServer      = RepOcpAccountServer(/*NumPlanArray,*/ Chapter, Currency, DepartmentList);
        DocInfo               = RepDocInfoServer(PTCK_ALL, B2I(DocOnlyData));
        docInfoRateDifference = RepDocInfoServer(PTCK_ALL, B2I(true));
        //Апострофы = cSetA;
        m_documentTableFieldList = getSqlFldList("arhdoc.dbt", null, "document", "doc_");
        m_documentInfoTableFieldList = getSqlFldList("docinfo.rec", null, "documentInfo", "docInf_");
        getRegistryValue("REPORT/ВЫПИСКА/СЧЕТА ПРОВОДОК КОМИССИИ", V_STRING, commissionIncomeAccounts, stat);
        if (stat != 0)
            commissionIncomeAccounts = "";
        else
            commissionIncomeAccounts = trim(commissionIncomeAccounts);
        end;
        m_bankHeaderBuffer = TArray();
        printBankHeaderBuf(dprtId, orgStructure, 256, m_bankHeaderBuffer);
        i = 0;
        while (i < m_bankHeaderBuffer.size)
            m_bankHeaderBuffer[i] = trim(m_bankHeaderBuffer[i]);
            i = i + 1;
        end;
    end;
    
    /* Фильтр по маске б\с, главе, номеру плана. Так же фильтр технических счетов */
    macro AccountFilterMaskBalance(Subsystem, AccBlncAlias)
        DefaultParm(AccBlncAlias, "");
        const ChapterField = Ternary((Subsystem == REP_SUBSYSTEMS_LOANS), "chapter", AccBlncAlias+".t_Chapter");
        /* Фильтр по номеру плана */
        
        macro FilterMaskBalance(BalanceMask, NumPlan)
            const BalanceField = Ternary((Subsystem == REP_SUBSYSTEMS_LOANS), "balance", AccBlncAlias+".t_Balance"+NumPlan);
            if (BalanceMask != "")
                if (Subsystem == REP_SUBSYSTEMS_LOANS)
                    BalanceMask = BalanceField + " = $RsbMask("+GetSqlString(BalanceMask)+")";
                else
                    BalanceMask = "(" + ConvertMaskToSQLFormat(BalanceMask, BalanceField) + ")";
                end;
            else
                if (Subsystem == REP_SUBSYSTEMS_LOANS)
                    BalanceMask = BalanceField + " != ''";
                else
                    BalanceMask = BalanceField+" <> "+GetSQLString("");
                end;
            end;
            if (Subsystem == REP_SUBSYSTEMS_CB)
                BalanceMask = BalanceMask + "       AND balance.t_iNumPlan = " + NumPlan
                                          + "\n" + "AND balance.t_balance = " + BalanceField
                                          + "\n" + "AND balance.t_chapter = " + ChapterField
                                          + "\n" + "AND LENGTH(TRANSLATE('|' || balance.t_type_balance, '|' || 'Т', '|')) != LENGTH(balance.t_type_balance)";
            end;
            return BalanceMask;
        end;
        
        var abCond = "",
        BlncMask = "";
        var qChapter = "SELECT t_Chapter FROM dobchaptr_dbt WHERE"; 
        qChapter = qChapter + " " + getChapterFilterClause();
        var wrkChapters = TRsbDataSet(qChapter, RSDVAL_CLIENT, RSDVAL_STATIC);
        if (wrkChapters.First())
            BlncMask = FilterMaskBalance(BalanceMask, NumPlanArray/*[wrkChapters.Chapter-1]*/);
            abCond = abCond + "("+ChapterField+" = "+wrkChapters.Chapter+" AND "+BlncMask+")";
            while(wrkChapters.Next())
                BlncMask = FilterMaskBalance(BalanceMask, NumPlanArray[wrkChapters.Chapter-1]);
                abCond = abCond + " OR ("+ChapterField+" = "+wrkChapters.Chapter+" AND "+BlncMask+")";
            end;
        else
            println("Нет данных для отчета");
            return B2SQL(false);
        end;
        return "( "+abCond+" )";
    end;
    
    private macro GetLoansAccountFilter()
        var AccountFilter = "",
            AccountFilterDate,
            AccountFilterClient,
            AccountFilterOper,
            AccountFilterMaskAcc,
            AccountFilterCurrency,
            AccountFilterTS;
        AccountFilterClient = "(   (((AccountType = 'С') OR (AccountType = 'З') OR (AccountType = 'Л'))  " +
                            " AND ClientId = "+Client+")                                               " +
                            "  OR (BranchPartyId = "+Client+") )                                       " ;
        // Фильтр по операционисту
        AccountFilterOper = "(OperNumber = " + Oper + ")";
        
        // Фильтр по маске л/с
        AccountFilterMaskAcc = "(acc = $RsbMask(" + getsqlString(AccountMask) + "))";
        
        // Фильтр по валюте
        AccountFilterCurrency = ternary(currency == ALLCURRENCY, "(currency != " + NATCUR + ")", "(currency = " + Currency + ")");
        
        // Фильтр по узлам ТС
        AccountFilterTS = "(" + BranchAndDprtFilter.getAsSqlString("department", "branch") + ")";
        
        // Формируем фильтр
        AccountFilter = AccountFilter + AccountFilterTS;
        
        if (Client != ALLPARTY)
            AccountFilter = AccountFilter + " AND " + AccountFilterClient;
        end;
        if (Oper != 0)
            AccountFilter = AccountFilter + " AND " + AccountFilterOper;
        end;
        if (AccountMask != "")
            AccountFilter = AccountFilter + " AND " + AccountFilterMaskAcc;
        end;
        if (Currency != ALLFININSTR)
            AccountFilter = AccountFilter + " AND " + AccountFilterCurrency;
        end;
        AccountFilter = AccountFilter + " AND " + AccountFilterMaskBalance(REP_SUBSYSTEMS_LOANS);
        return AccountFilter;
    end;
    
    macro createLoansAccount()
        var LoansAccount;
        LoansAccount = ObjectFactory.GetObject("RepLnsAccSt");
        LoansAccount.SetParmValue("BeginDate", DateIn);
        LoansAccount.SetParmValue("EndDate", DateOut);
        LoansAccount.SetFilter(GetLoansAccountFilter());
        return LoansAccount;
    end;
    
    macro DPD()
        return Ternary(NVL(Account.DPD, "") == ZeroDate, "", string(Account.DPD:f));
    end;
    
    macro DPD_R()
        return Ternary(NVL(Account.DPD_R, "") == ZeroDate, "", string(Account.DPD_R:f));
    end;
    
    macro INN()
        return NVL(Account.INN, "");
    end;
    
    macro Next()
        var retVal;
        if (Account.Next())
            if ((Account.Currency != NATCUR) and ((OldDateIn != DateIn) or (OldDateOut != DateOut) or (OldCurrency != Account.Currency)))
                if (not ПолучитьКурс(Rate_In, NATCUR, Account.Currency, RATETYPE_CB))
                    Copy(Rate_Out, Rate_In);
                    RateIn  = RateAsString(DateIn-1, Rate_In); // KS 18.03.2011 Курс ВХОДЯЩИЙ
                    RateOut = RateAsString(DateOut, Rate_Out);
                    OldDateIn   = DateIn; 
                    OldDateOut  = DateOut;
                    OldCurrency = Account.Currency;
                else
                    RateIn  = NOTFOUND;
                    RateOut = NOTFOUND;
                end;
            end;
            
            /* Определяем формат выписки для текущего счета */
            if (Account.InitialSubsystem == REP_SUBSYSTEMS_LOANS)
                CurrentFormat = ACC_FORMATS_BANK;
            else
                CurrentFormat = Format;
            end;
            StatementLineNumber = 0;
            retVal = true;
        else
            retVal = false;
        end;
        needEquivalent = NatCurEquivalent and (Account.Currency != NATCUR) and (Account.InitialSubsystem == REP_SUBSYSTEMS_CB);
        if (currentFormat == ACC_FORMATS_BANK)
            if (needEquivalent)
                ACC_FORMATS_BANK_EMPTY_LINES3 = "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT)
                                            + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT);
            else
                ACC_FORMATS_BANK_EMPTY_LINES3 = "";
            end;
        else
            if ( (Account.Currency == NATCUR) and ( (OutForm == ACC_FORMS_NOTHING) and (PRINT_CORRACC) ) ) // KS 22.03.2011 Убрать корсчет для обычной выписки без приложений
                ACC_FORMATS_CLIENT_EMPTY_LINES2 = "│" + strAlign("", wACC, STR_ALIGN_RIGHT);
            else
                ACC_FORMATS_CLIENT_EMPTY_LINES2 = "";
            end;
            if (needEquivalent)
                ACC_FORMATS_CLIENT_EMPTY_LINES4 = "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT)
                                                + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT);
            else
                ACC_FORMATS_CLIENT_EMPTY_LINES4 = "";
            end;
        end;
        return retVal;
    end;
    
    macro DebugPrint()
        println(Account.Acc:25, Account.AccName:50, Account.NameClnt:30, 
                Account.Oper:25, Account.CurrencyName:20, Account.RestIn:20, 
                Account.RestInEq:20, Account.RestOut:20, Account.RestOutEq:20, RateIn:15:r, 
                RateOut:15:r, Account.TypeAccount:10:r);
    end;
    
    Constructor();
END;              //  CLASS TAccStatementInfo

/**
 * Элемент кеша ИД идентификаторов субъектов-банков
 * @author ABP
 * @since v.6.20.029.154
 */
private class TPartyIdCachedDataElement(_code : String, _key : Integer, _partyId : Integer)
    var partyId : Integer = _partyId;
    var key : Integer = _key;
    var code : String = _code;
end;

/* Коркин И.Н Чтоб не вылетало при не заполненных кодах банка */
macro checkSpecval(val)
    if (valtype(val) == 26)
        return null;
    else
        return val;
    end;
end;

/**
 * Кэширующий ИД идентификаторов субъектов-банков.
 * Кеширует идентификатор субъекта.
 * @version 1.0
 * @author ABP
 * @since v.6.20.029.154
 */
private class TPartyIdCachedData()
    
    private var m_cache : TArray;
    private var m_queryText : String;
    private var m_fillCommand : Object;
    
    private macro add(code : String, key : Integer, codeKind : Integer, requiredDate : Date, isEmptyAtKey : Bool) : Object
        var value : Object;
        m_fillCommand.value("code") = code;
        m_fillCommand.value("codeKind") = codeKind;
        m_fillCommand.value("date") = NULL;//requiredDate;// В пакете чтоб отбирал не по старшей дате, а по статусу 0
        m_fillCommand.execute();
        value = TPartyIdCachedDataElement(code, key, nvl(checkSpecval(m_fillCommand.value("partyId")), {SelfId}));
        if (isEmptyAtKey)
            m_cache(key) = TArray();
            m_cache(key).(0) = value;
        else
            m_cache(key).(m_cache(key).size) = value;
        end;
        return value;
    end;
    
    /**
    * Получить элемент кеша
    * @param partyId Идентификатор субъекта
    * @return объект класса TPartyCachedDataElement или null
    */
    macro get(code : String, codeKind : Integer, requiredDate : Date) : Object
        var i,size;
        var key : Integer = int(string(codeKind, int(requiredDate)));
        var result = m_cache(key);
        if (result == null)
            return add(code, key, codeKind, requiredDate, true);
        else
            i = 0;
            size = result.size;
            while ((i < size) and (result(i).code != code))
                i = i + 1;
            end;
            if (i < size)
                return result(i);
            else
                return add(code, key, codeKind, requiredDate, false);
            end;
        end;
    end;
    
    /**
    * Получить цифровой код фин. инструмента по ISO
    * @param fiId Идентификатор фин. инструмента
    * @return цифровой код фин. инструмента по ISO
    */
    macro getPartyId(code : String, codeKind : Integer, requiredDate : Date) : Integer
        return get(code, codeKind, requiredDate).partyId;
    end;
    
    private macro constructor()
        m_cache = TArray();
        m_fillCommand = RsdCommand(rslDefCon);
        m_fillCommand.nullConversion = true;
        var queryText = "BEGIN ? := rsb_rep_pt.get_partyIdByCode(?,?,?); END;";
        m_fillCommand.cmdText = queryText;
        m_fillCommand.addParam("partyId", RSDBP_RETVAL, V_INTEGER);
        m_fillCommand.addParam("codeKind", RSDBP_IN, 0);
        m_fillCommand.addParam("code", RSDBP_IN, "");
        m_fillCommand.addParam("date", RSDBP_IN, Date());
    end;
    constructor();
    
END;           // class TPartyIdCachedData()

/*
 * Элемент кеша ИД субъектов-банков
 * @author ABP
 * @since v.6.20.029.154
 */
private class TPartyCachedDataElement(_partyId : Integer, _isResident : Bool)
    var partyId : Integer = _partyId;
    var isResident : Bool = _isResident;
end;

/*
 * Кэширующий ИД субъектов-банков.
 * Кеширует признак резидентности.
 * @version 1.0
 * @author ABP
 * @since v.6.20.029.154
 */
private class TPartyCachedData()
    
    private var m_cache : TArray;
    private var m_queryText : String;
    private var m_fillCommand : Object;

    private macro add(partyId : Integer) : Object
        var value : Object;
        m_fillCommand.value("partyId") = partyId;
        m_fillCommand.execute();
        var dataSet = TRsbDataset(m_fillCommand);
        if (dataSet.next())
            value = TPartyCachedDataElement(partyId, dataSet.notResident != SET_CHAR);
            m_cache(partyId) = value;
            return value;
        else
            return null;
        end;
    end;
    
    /*
     * Получить элемент кеша
     * @param partyId Идентификатор субъекта
     * @return объект класса TPartyCachedDataElement или null
     */
    macro get(partyId : Integer) : Object
        var result = m_cache(partyId);
        if (result == null)
            return add(partyId);
        else
            return result;
        end;
    end;
    
    /*
     * Получить цифровой код фин. инструмента по ISO
     * @param fiId Идентификатор фин. инструмента
     * @return цифровой код фин. инструмента по ISO
     */
    macro getResidentFlag(partyId : Integer) : Bool
        return get(partyId).isResident;
    end;

    private macro constructor()
        m_cache = TArray();
        m_fillCommand = RsdCommand(rslDefCon);
        m_fillCommand.nullConversion = true;
        var queryText = "SELECT party.t_notResident t_notResident"
               + "\n" + "  FROM dparty_dbt party"
               + "\n" + " WHERE party.t_partyId = ?";
        m_fillCommand.cmdText = queryText;
        m_fillCommand.addParam("partyId", RSDBP_IN, 0);
    end;
    constructor();
END;           //    class TPartyCachedData()

private var partyIdCachedData = TPartyIdCachedData();
private var partyCachedData = TPartyCachedData();

/* Класс проводки */
private CLASS TDocument(pOrgStructure)
    //TAM 14.10.11 I-00101393-2
    var PayerBankID, ReceiverBankID;
    private var OrgStructure = pOrgStructure,
                Subsystem, InitialSubsystem, CurrentFormat,
                DocumentCb = TRecHandler("arhdoc.dbt");
    private var m_isCbDocument;
    private var m_departmentsDatasetName = ternary(pOrgStructure == TERRITORIAL, "dRepDpDep_vw", "dRepDpReg_vw");
    var DocStorage, /* данные для печати приложений */
        DataSet, /* объект TRsbDataSet или RepLnsDocumentSt */
        OverallDocs,
        
        AllSumDebit,
        AllSumCredit,
        AllSumDebitEq,
        AllSumCreditEq,
        
        AllSumDebitSPOD,
        AllSumCreditSPOD,
        AllSumDebitSPODEq,
        AllSumCreditSPODEq,
        
        DocT = "";
    
    macro Constructor(CmdText, AccInfo)
        var LoansDocumentFilter = "",
            LoansDocumentFilterDate,
            LoansDocumentFilterAccount;

        Subsystem        = AccInfo.Account.Subsystem;        /* подсистема-источник данных */
        InitialSubsystem = AccInfo.Account.InitialSubsystem; /* подсистема-источник счета  */
        CurrentFormat    = AccInfo.CurrentFormat;            /* формат выписки для текущего счета */
        
        if (Subsystem == REP_SUBSYSTEMS_LOANS)
            LoansDocumentFilterAccount = "( AccID = "+int(AccInfo.Account.AccId)+" )";
            LoansDocumentFilterDate    = "( (Date_Carry >= @(BeginDate)) AND (Date_Carry <= @(EndDate)) )";
            LoansDocumentFilter = LoansDocumentFilter + LoansDocumentFilterAccount + " AND " + LoansDocumentFilterDate;
            
            DataSet = ObjectFactory.GetObject("RepLnsDocumentSt");
            DataSet.SetParmValue("BeginDate", AccInfo.DateIn);
            DataSet.SetParmValue("EndDate", AccInfo.DateOut);
            DataSet.SetFilter(LoansDocumentFilter);
            DataSet.ApplyFilter();
        else
            DataSet = TRsbDataset(CmdText);
            DataSet.SetFieldType("Date_Carry",  V_DATE);
            DataSet.SetFieldType("SumDebit",    V_MONEY);
            DataSet.SetFieldType("SumCredit",   V_MONEY);
            DataSet.SetFieldType("SumDebitEq",  V_MONEY);
            DataSet.SetFieldType("SumCreditEq", V_MONEY);
        end;
        
        OverallDocs = 0;
        AllSumDebit    = $0;
        AllSumCredit   = $0;
        AllSumDebitEq  = $0;
        AllSumCreditEq = $0;
        
        AllSumDebitSPOD    = $0;
        AllSumCreditSPOD   = $0;
        AllSumDebitSPODEq  = $0;
        AllSumCreditSPODEq = $0;
        
        DocStorage = TArray();
    end;
    
    private macro CheckDocumentCb()
        if (m_isCbDocument == null)
            m_isCbDocument = ((DocumentCb.rec.Date_Carry == DataSet.Date_Carry)   and
                              (DocumentCb.rec.Sum == DataSet.CarrySum)            and
                              (DocumentCb.rec.Account_Payer == DataSet.Debit)     and
                              (DocumentCb.rec.Account_Receiver == DataSet.Credit));
        end;
        return m_isCbDocument;
    end;
    
    private macro GetIDs()
        payerBankID = partyIdCachedData.getPartyId(DataSet.PayerBankCode, DataSet.PayerCodeKind, DataSet.Date_Carry);
        receiverBankID = partyIdCachedData.getPartyId(DataSet.ReceiverBankCode, DataSet.ReceiverCodeKind, DataSet.Date_Carry);
    end;
    
    /* 31.10.2006 ABP SCR 94026. Получение корректного корреспондирующего счета */
    macro GetCorrectCbCorrespondingAccount(isDebit)
        if ( Flag_AccState_CB and Flag_acc_is_carry )    //  24.07.2013 AAN  C-22055 добавил этот блок для спец выписки
            var sql_acc_receiver_arhdoc = (" SELECT  arh.t_account_receiver, arh.t_ground                   " + 
                                           " FROM    dpmpaym_dbt paym, darhdoc_dbt arh, dpmdocs_dbt docs    " +
                                           " WHERE   PAYM.t_paymentid = " + DataSet.paymentid + "       " +
                                           "   AND   arh.t_AutoKey = " + DataSet.docInf_AutoKey + 
                                           "   AND   docs.T_PAYMENTID = paym.T_PAYMENTID                    " +
                                           "   and   arh.T_APPLICATIONKEY = docs.T_APPLICATIONKEY           " +
                                           "   and ARH.T_IAPPLICATIONKIND = DOCS.T_APPLICATIONKIND          " 
                                           );
            var acc_receiver_CB = rsdrecordset(sql_acc_receiver_arhdoc);
            if(acc_receiver_CB.movenext())
                dataset.ground = acc_receiver_CB.value("t_ground");          // заменяем основание из платежа на основание из проводки
                return acc_receiver_CB.value("t_account_receiver");
            else
                msgbox(" Не найдена проводка по платежу! ");
            end;
        else    //  24.07.2013 AAN  C-22055 а вот так было раньше, и так работает если выписка обычного вида
            var correctCbCorrespondingAccount = "";
            var ds, query, queryText;
            
            if ((isDebit) and (DataSet.ReceiverAccount != ""))
                return DataSet.ReceiverAccount;
            end;
            if ((not isDebit) and (DataSet.PayerAccount != ""))
                return DataSet.PayerAccount;
            end;
            /* Чтоб лишний раз БД не дергать*/
            if (DataSet.PaymentId != 0)
                //30.01.2013 Слетает план запроса, добавил хинт LAO
                queryText =  "SELECT /*+ index(pmdoc dpmdocs_dbt_idx0) */ doc.t_account_payer    AS t_payerAccount,"
                    + "\n" + "       doc.t_account_receiver AS t_receiverAccount"
                    + "\n" + "  FROM " + ternary((DataSet.Code_Currency==NATCUR), "darhdoc_dbt", "darhdoc$_dbt") + " doc,"
                    + "\n" + "       dpmdocs_dbt pmdoc"
                    + "\n" + " WHERE pmdoc.t_PaymentId = ?"
                    + "\n" + "   AND pmdoc.t_LinkKindId = 1"
                    + "\n" + "   AND pmdoc.t_ApplicationKey = doc.t_ApplicationKey"
                    + "\n" + "   AND pmdoc.t_ApplicationKind = doc.t_iApplicationKind";
                query = RsdCommand(rslDefCon, queryText);
                query.addParam("paymentId", RSDBP_IN, DataSet.PaymentId);
                query.nullConversion = true;
                ds = TRsbDataset(query);
                if (ds.next())
                    if (isDebit)
                        correctCbCorrespondingAccount = nvl(ds.receiverAccount, "");
                    else
                        correctCbCorrespondingAccount = nvl(ds.payerAccount, "");
                    end;
                    if (ds.next())
                        correctCbCorrespondingAccount = "";
                    end;
                else
                    correctCbCorrespondingAccount = "";
                end;
            else
                correctCbCorrespondingAccount = "";
            end;
            return correctCbCorrespondingAccount;
        end;
    end;
    
    private macro GetCorrectLoansCorrespondingAccount()
        if(CheckDocumentCb())
            if (DataSet.DK == DEBIT_C)
                return DocumentCb.rec.Account_Payer;
            else
                return DocumentCb.rec.Account_Receiver;
            end;
        elif(DataSet.Account != "")
            return DataSet.Account;
        else
            if (DataSet.DK == DEBIT_C)
                return DocumentCb.rec.Account_Payer;
            else
                return DocumentCb.rec.Account_Receiver;
            end;
        end;
    end;
    
    macro CorrBankAcc()
        if (dataSet.isInternalDocument == 0)
            if (PayerBankID == {OurBank})
                if (DataSet.ReceiverCorrAcc == NULL)
                    return EMPTY_STRING;//NOTFOUND;
                else
                    return DataSet.ReceiverCorrAcc;
                end;
            else
                if (DataSet.PayerCorrAcc == NULL)
                    return EMPTY_STRING;//NOTFOUND;
                else
                    return DataSet.PayerCorrAcc;
                end;
            end;
        else
            return EMPTY_STRING;
        end;
    end;
    
    macro BIC()
        var err, code;
        if (dataSet.isInternalDocument == 0)
            if (PayerBankID == {OurBank})
                // KS 17.05.2012 I-00172012 В 30ке перепутано docInf_ReceiverBic и docInf_PayerBic.
                //               А иногда и неперепутано. Поэтому делаю так
                // BEGIN 05.07.2013 AAN  I-00394329-3
                /*if (DataSet.docInf_PayerBic != {MFO_BANK})
                    DataSet.docInf_ReceiverBic   = DataSet.docInf_PayerBic;
                    DataSet.docInf_ReceiverSwift = DataSet.docInf_PayerSwift;
                end;*/
                if (dataset.docinf_Payerbankcode != {MFO_BANK})
                    dataset.docinf_receiverbankcode  = dataset.docinf_Payerbankcode;
                    DataSet.docInf_ReceiverSwift     = DataSet.docInf_PayerSwift;
                end;
                // END 05.07.2013 AAN  I-00394329-3
                // KS 17.05.2012 I-00172012 End
                
                if (partyCachedData.getResidentFlag(ReceiverBankID))            
                    /* 151 code = repGetPartyCode(ReceiverBankID, PTCK_BIC, DataSet.Date_Carry, err, 1);*/
                    // code = nvl(DataSet.docInf_ReceiverBic, EMPTY_STRING);    // 05.07.2013 AAN  I-00394329-3
                    code = nvl(dataset.docinf_receiverbankcode, EMPTY_STRING);
                else /*Если банк-корреспондент является нерезидентом*/
                    /* 151 code = repGetPartyCode(ReceiverBankID, PTCK_SWIFT, DataSet.Date_Carry, err, 1);*/            
                    code = nvl(DataSet.docInf_ReceiverSwift, EMPTY_STRING);
                end;
            else
                // KS 17.05.2012 I-00172012 В 30ке перепутано docInf_ReceiverBic и docInf_PayerBic.
                //               А иногда и неперепутано. Поэтому делаю так
                
                // BEGIN 05.07.2013 AAN  I-00394329-3
                /*if (DataSet.docInf_PayerBic == {MFO_BANK})
                    DataSet.docInf_PayerBic   = DataSet.docInf_ReceiverBic;
                    DataSet.docInf_PayerSwift = DataSet.docInf_ReceiverSwift;
                end;*/
                if (dataset.docinf_Payerbankcode == {MFO_BANK})
                    dataset.docinf_Payerbankcode   = dataset.docinf_receiverbankcode;
                    DataSet.docInf_PayerSwift = DataSet.docInf_ReceiverSwift;
                end;
                //  END 05.07.2013 AAN  I-00394329-3
                
                // KS 17.05.2012 I-00172012 End
                if (partyCachedData.getResidentFlag(PayerBankID))
                    // code = nvl(DataSet.docInf_PayerBic, EMPTY_STRING);   // 05.07.2013 AAN  I-00394329-3
                    code = nvl(dataset.docinf_Payerbankcode, EMPTY_STRING);
                else
                    code = nvl(DataSet.docInf_PayerSwift, EMPTY_STRING);
                end;
            end;
        else
            code = EMPTY_STRING;/*Если проводка внутренняя, то поле отчета "БИК" не заполняется*/
        end;
        return code;
    end;
    
    macro Shifr_Oper()
        if (Subsystem == REP_SUBSYSTEMS_CB)
            return DataSet.Shifr_Oper;
        else
            return DocumentCb.rec.Shifr_Oper;
        end;
    end;
    
    macro Numb_Document()
        if (Subsystem == REP_SUBSYSTEMS_CB)
            return DataSet.Numb_Document;
        else
            return DocumentCb.rec.Numb_Document;
        end;
    end;
    
    macro Ground()
        if (Subsystem == REP_SUBSYSTEMS_CB)
            return DataSet.Ground;
        else
            if (CheckDocumentCb())
                return DocumentCb.rec.Ground;
            else
                return DataSet.Ground;
            end;
        end;
    end;
    
    macro SumDebit()
        if (Subsystem == REP_SUBSYSTEMS_CB)
            return DataSet.SumDebit;
        else
            if (CheckDocumentCb())
                if (DataSet.DK == DEBIT_C)
                    return DocumentCb.rec.Sum;
                else
                    return $0;
                end;
            else
                return DataSet.SumDebit;
            end;
        end;
    end;
    
    macro SumCredit()
        if (Subsystem == REP_SUBSYSTEMS_CB)
            return DataSet.SumCredit;
        else
            if (CheckDocumentCb())
                if (DataSet.DK == CREDIT_C)
                    return DocumentCb.rec.Sum;
                else
                    return $0;
                end;
            else
                return DataSet.SumCredit;
            end;
        end;
    end;
    
    macro SumDebitEq()
        return DataSet.SumDebitEq;
    end;
    
    macro SumCreditEq()
        return DataSet.SumCreditEq; 
    end;
    
    macro Account()
        if (Subsystem == REP_SUBSYSTEMS_CB)
            return GetCorrectCbCorrespondingAccount(DataSet.DK == DEBIT_C);
        else
            return GetCorrectLoansCorrespondingAccount();
        end;
    end;
    
    macro Next()
        var DataSourceName, DocKind, DocCmdText, ds, ExistsOneDocumentCb, query;
        if (DataSet.Next())
            if (CurrentFormat == ACC_FORMATS_CLIENT) /* нужно только в клиентской форме выписки */
                GetIDs();
            else
                /* нужно только при сборе данных по документам Loans (аналитика счета ведется в Loans) */
                if (Subsystem == REP_SUBSYSTEMS_LOANS)
                    if (DataSet.Code_Currency == NATCUR)
                        DataSourceName = "darhdoc_dbt";
                        DocKind = DLDOC_CARRY;
                    else
                        DataSourceName = "darhdoc$_dbt";
                        DocKind = DLDOC_CARRYC;
                    end;
                    DocCmdText = "SELECT doc.*"
                        + "\n" + "  FROM doprdocs_dbt odoc,"
                        + "\n" + "   " + DataSourceName + " doc"
                        + "\n" + " WHERE odoc.t_Id_Operation = ?"
                        + "\n" + "   AND odoc.t_DocKind = ?"
                        + "\n" + "   AND odoc.t_DocumentId != ?"
                        + "\n" + "   AND doc.t_ApplicationKey = SUBSTR(odoc.t_DocumentId, 6)"
                        + "\n" + "   AND doc.t_iApplicationKind = TO_NUMBER(SUBSTR(odoc.t_DocumentId, 1, 5))";
                    query = RsdCommand(rslDefCon, DocCmdText);
                    query.addParam("outDocumentId", RSDBP_IN, DataSet.OutDocID);
                    query.addParam("documentKind", RSDBP_IN, DocKind);
                    query.addParam("emptyStringCode", RSDBP_IN, EMPTY_STRING_ORACLE);
                    query.nullConversion = true;
                    ds = TRsbDataset(query);
                    if (ds.Next())
                        ds.GetRecord().CopyTo(DocumentCb.rec);
                        DocumentCb.rec.AUTOKEY          = 0;
                        DocumentCb.rec.IAPPLICATIONKIND = 0; 
                        DocumentCb.rec.APPLICATIONKEY   = ""; 
                        DocumentCb.rec.SHIFR_OPER       = Shifr_Oper; 
                        DocumentCb.rec.NUMB_DOCUMENT    = Numb_Document; 
                        DocumentCb.rec.GROUND           = Ground; 
                        ExistsOneDocumentCb = true;
                        if (ds.Next())
                            ExistsOneDocumentCb = false;
                        end;
                    else
                        ExistsOneDocumentCb = false;
                    end;
                    
                    if (not ExistsOneDocumentCb)
                        DocumentCb.rec.AUTOKEY             = DataSet.Autokey;
                        DocumentCb.rec.CHAPTER             = DataSet.Chapter;
                        DocumentCb.rec.CODE_CURRENCY       = DataSet.Code_Currency;
                        DocumentCb.rec.ACCOUNT_PAYER       = DataSet.Debit; 
                        DocumentCb.rec.ACCOUNT_RECEIVER    = DataSet.Credit; 
                        DocumentCb.rec.SUM                 = DataSet.CarrySum; 
                        DocumentCb.rec.DATE_CARRY          = DataSet.Date_Carry; 
                        DocumentCb.rec.DATE_VALUE          = DataSet.Date_Carry; 
                        DocumentCb.rec.IAPPLICATIONKIND    = 0; 
                        DocumentCb.rec.APPLICATIONKEY      = ""; 
                        DocumentCb.rec.RESULT_CARRY        = 1; 
                        DocumentCb.rec.NUMBER_PACK         = 0; 
                        DocumentCb.rec.OPER                = DataSet.OperNumber; 
                        DocumentCb.rec.DEPARTMENT          = DataSet.Department; 
                        DocumentCb.rec.KIND_OPER           = "1"; 
                        DocumentCb.rec.SHIFR_OPER          = "09"; 
                        DocumentCb.rec.CONNAPPKIND         = 0; 
                        DocumentCb.rec.CONNAPPKEY          = ""; 
                        DocumentCb.rec.NUMB_DOCUMENT       = ""; 
                        DocumentCb.rec.GROUND              = DataSet.Ground; 
                        DocumentCb.rec.TYPEDOCUMENT        = ""; 
                        DocumentCb.rec.USERTYPEDOCUMENT    = ""; 
                        DocumentCb.rec.USERFIELD1          = ""; 
                        DocumentCb.rec.USERFIELD2          = ""; 
                        DocumentCb.rec.USERFIELD3          = ""; 
                        DocumentCb.rec.USERFIELD4          = ""; 
                        DocumentCb.rec.CARRYACNT           = 1; 
                        DocumentCb.rec.CREDITSTATUS        = 0; 
                        DocumentCb.rec.NU_STATUS           = 0; 
                        DocumentCb.rec.NU_KIND             = 0; 
                        DocumentCb.rec.NU_STARTDATE        = Date(0,0,0); 
                        DocumentCb.rec.NU_ENDDATE          = Date(0,0,0); 
                        DocumentCb.rec.NU_ACKDATE          = Date(0,0,0); 
                        DocumentCb.rec.FU_IAPPLICATIONKIND = 0; 
                        DocumentCb.rec.FU_APPLICATIONKEY   = ""; 
                        DocumentCb.rec.PRIORITY            = 0; 
                        DocumentCb.rec.MINPHASE            = 0; 
                        DocumentCb.rec.MAXPHASE            = 0; 
                        DocumentCb.rec.STATE               = 0; 
                        DocumentCb.rec.SYSTEMDATE          = Date(0,0,0); 
                        DocumentCb.rec.SYSTEMTIME          = Time(0,0,0); 
                        DocumentCb.rec.CHECKSUM            = "";
                    end;
                end;
            end;
            OverallDocs = OverallDocs+1;
            AllSumDebit    = AllSumDebit+SumDebit;
            AllSumCredit   = AllSumCredit+SumCredit;
            AllSumDebitEq  = AllSumDebitEq+SumDebitEq;
            AllSumCreditEq = AllSumCreditEq+SumCreditEq;
            if (Subsystem == REP_SUBSYSTEMS_CB)
                //if (DataSet.isSpod > 0) //29.05.2012 vihrov  I-00200089-2
                if ((valtype(DataSet.isspod) != V_UNDEF) and (DataSet.isSpod > 0)) //29.05.2012 vihrov  I-00200089-2. (а то ошибка undefined - integer)
                    DocT = TYPE_SPOD;
                    AllSumDebitSPOD    = AllSumDebitSPOD+SumDebit;
                    AllSumCreditSPOD   = AllSumCreditSPOD+SumCredit;
                    AllSumDebitSPODEq  = AllSumDebitSPODEq+SumDebitEq;
                    AllSumCreditSPODEq = AllSumCreditSPODEq+SumCreditEq;
                else
                    DocT = TYPE_NOTSPOD;
                end;
            else
                DocT = TYPE_NOTSPOD;
            end;
            if (Subsystem == REP_SUBSYSTEMS_CB)
                DocStorage[DocStorage.Size] = ArrCreate(DataSet.Autokey, 
                                                        DataSet.DK, 
                                                        DataSet.PaymentID,
                                                        DataSet.CarryID,
                                                        DataSet.Code_Currency
                                                        );
            else
                DocStorage[DocStorage.Size] = ArrCreate(DataSet.Autokey, 
                                                        DataSet.DK, 
                                                        DataSet.PaymentID,
                                                        DataSet.CarryID,
                                                        DataSet.Code_Currency,
                                                        DocumentCb
                                                        );
            end;
            m_isCbDocument = null;
            return true;
        end;
        return false;
    end;

END;        //    CLASS TDocument(pOrgStructure)

/************************************************************************************************************************/
/*****************************************************  ПЕЧАТЬ  *********************************************************/
/*****************************************************  НАЧАЛО  *********************************************************/
/************************************************************************************************************************/
private MACRO PRB_AddH_Empty(i)
  PRB[i+0] = string("");
  PRB[i+1] = string("");
  PRB[i+2] = string("");
  PRB[i+3] = string("");
  PRB[i+4] = string("");
END;

private MACRO PRB_AddH_StrNum(i)
  PRB[i+0] = PRB[i+0]+("    ┌────────");
  PRB[i+1] = PRB[i+1]+("    │  Номер ");
  PRB[i+2] = PRB[i+2]+("    │ строки ");
  PRB[i+3] = PRB[i+3]+("    │        ");
  PRB[i+4] = PRB[i+4]+("    ├────────");
END;

private MACRO PRB_AddH_DateCarryBank(i)
  PRB[i+0] = PRB[i+0]+("┬──────────");
  PRB[i+1] = PRB[i+1]+("│   Дата   ");
  PRB[i+2] = PRB[i+2]+("│ проводки ");
  PRB[i+3] = PRB[i+3]+("│          ");
  PRB[i+4] = PRB[i+4]+("┼──────────");
END;

private MACRO PRB_AddH_AccountBank(i)
  PRB[i+0] = PRB[i+0]+("┬─────────────────────────");
  PRB[i+1] = PRB[i+1]+("│           Счет          ");
  PRB[i+2] = PRB[i+2]+("│ плательщика/получателя  ");
  PRB[i+3] = PRB[i+3]+("│                         ");
  PRB[i+4] = PRB[i+4]+("┼─────────────────────────");
END;

private MACRO PRB_AddH_GroundBank(i)
  PRB[i+0] = PRB[i+0]+("┬──────────────────────────────────────────────────");
  PRB[i+1] = PRB[i+1]+("│                                                  ");
  PRB[i+2] = PRB[i+2]+("│               Содержание операции                ");
  PRB[i+3] = PRB[i+3]+("│                                                  ");
  PRB[i+4] = PRB[i+4]+("┼──────────────────────────────────────────────────");
END;

private MACRO PRB_AddH_DateCarry(i)
  PRB[i+0] = PRB[i+0]+("    ┌──────────");
  PRB[i+1] = PRB[i+1]+("    │   Дата   ");
  PRB[i+2] = PRB[i+2]+("    │ проводки ");
  PRB[i+3] = PRB[i+3]+("    │          ");
  PRB[i+4] = PRB[i+4]+("    ├──────────");
END;

private MACRO PRB_AddH_ShifrOper(i)
    PRB[i+0] = PRB[i+0]+("┬───");
    PRB[i+1] = PRB[i+1]+("│Вид");
    PRB[i+2] = PRB[i+2]+("│оп.");
    PRB[i+3] = PRB[i+3]+("│   ");
    PRB[i+4] = PRB[i+4]+("┼───");
    
    /* distr  
    PRB[i+0] = PRB[i+0]+("┬──────");
    PRB[i+1] = PRB[i+1]+("│ Вид  ");
    PRB[i+2] = PRB[i+2]+("│опера-");
    PRB[i+3] = PRB[i+3]+("│ ции  ");
    PRB[i+4] = PRB[i+4]+("┼──────");
    */
    if (flag == 2)
        obSheet.Range("B"+(i-1)+":B"+(i)).mergecells = true;
        obSheet.Range("A"+(i-1)+":A"+(i)).mergecells = true;
        obSheet.Cells(i-1,1).wraptext = true;
        obSheet.Cells(i-1,1).Value = "Дата операции";
        obSheet.Cells(i-1,2).Value = "РО";
    end;
    
    if ((flag == 3) or (flag == 4))
        s = 0;
        exst = 0;
        while (s < asize(k))
            exst = exst + k(s);
            s = s + 1;
        end;
        if (exst == 0)
            exst = exst + i - 7;
        else
            exst = exst + 10;
        end;
        obSheet.Range("A" + (exst-1) + ":A" + (exst + 1)).mergecells = true;
        obSheet.Cells(exst-1,1).wraptext = true;
        obSheet.Cells(exst-1,1).Value = "Дата операции";
        if (curr)
            obSheet.Range("B" + (exst-1) + ":B" + (exst+1)).mergecells = true;
            obSheet.Cells(exst-1,2).wraptext = true;
            obSheet.Cells(exst-1,2).Value = "Дата валютирования";
        end;
    end;
    tab = exst;

END;        //    MACRO PRB_AddH_ShifrOper(i)

private MACRO PRB_AddH_NumbDocument(i)
    if ((flag != 1) and (flag != 2))
        PRB[i+0] = PRB[i+0]+("┬──────────");
        PRB[i+1] = PRB[i+1]+("│  Номер   ");
        PRB[i+2] = PRB[i+2]+("│документа ");
        PRB[i+3] = PRB[i+3]+("│ клиента  ");
        PRB[i+4] = PRB[i+4]+("┼──────────");
    else
        PRB[i+0] = PRB[i+0]+("┬──────────");
        PRB[i+1] = PRB[i+1]+("│  №       ");
        PRB[i+2] = PRB[i+2]+("│  док.    ");
        PRB[i+3] = PRB[i+3]+("│          ");
        PRB[i+4] = PRB[i+4]+("┼──────────");
    end;
    if (flag == 2)
        obSheet.Range("C"+(i-1)+":C"+(i)).mergecells = true;
        obSheet.Cells(i-1,3).Value = "Номер док.";
    end;
    if ((flag == 3) or (flag == 4))
        s = 0;
        exst = 0;
        while (s < asize(k))
            exst = exst + k(s);
            s = s + 1;
        end;
        if (exst == 0)
            exst = exst + i - 7;
        else
            exst = exst + 10;
        end;
        if (not curr)
            obSheet.Range("B"+(exst-1)+":B"+(exst+1)).mergecells = true;
            obSheet.Cells(exst-1,2).wraptext = true;
            obSheet.Cells(exst-1,2).Value = "Номер документа";
        else
            obSheet.Range("C"+(exst-1)+":C"+(exst+1)).mergecells = true;
            obSheet.Cells(exst-1,3).wraptext = true;
            obSheet.Cells(exst-1,3).Value = "Номер документа";
        end;
    end;
END;        //    MACRO PRB_AddH_NumbDocument(i)
    
private MACRO PRB_AddH_Account(i, Caption)
    if ((flag!=1) and (flag!=2))
        PRB[i+0] = PRB[i+0]+("┬─────────────────────────");
        PRB[i+1] = PRB[i+1]+("│                         ");
        PRB[i+2] = PRB[i+2]+("│")+StrAlign(Caption, wACC, STR_ALIGN_CENTER);
        PRB[i+3] = PRB[i+3]+("│                         ");
        PRB[i+4] = PRB[i+4]+("┼─────────────────────────");
    end;
END;
    
private MACRO PRB_AddH_BIC(i)
    if ((flag!=1) and (flag!=2))
        if (PRINT_BIC)
            PRB[i+0] = PRB[i+0]+("┬─────────");
            PRB[i+1] = PRB[i+1]+("│         ");
            PRB[i+2] = PRB[i+2]+("│   БИК   ");
            PRB[i+3] = PRB[i+3]+("│         ");
            PRB[i+4] = PRB[i+4]+("┼─────────");
        end;
    else
        if (not curr)
            PRB[i+0] = PRB[i+0]+("┬──────────────────────────────────────────────────────────────────────────────────────────────────────────");
            PRB[i+1] = PRB[i+1]+("│ Контрагент                                                                                               ");
            PRB[i+2] = PRB[i+2]+("├────────────┬──────────────────────────────┬─────────────────────┬────────────────────────────────────────");
            PRB[i+3] = PRB[i+3]+("│   БИК      │   Наименование банка         │    Счет             │               Наименование             ");
            PRB[i+4] = PRB[i+4]+("┼────────────┼──────────────────────────────┼─────────────────────┼────────────────────────────────────────");     // 28.02.2012 Glushin   R-36747-4 - Увеличены размеры поля БИК и Наименование
        else
            PRB[i+0] = PRB[i+0]+("┬──────────────────────────────────────────────────────────────────────────────────────────────────────────");
            PRB[i+1] = PRB[i+1]+("│ Корреспондент                                                                                            ");
            PRB[i+2] = PRB[i+2]+("├────────────┬──────────────────────────────┬─────────────────────┬────────────────────────────────────────");
            PRB[i+3] = PRB[i+3]+("│   БИК      │   Наименование банка         │    Счет             │               Наименование             ");
            PRB[i+4] = PRB[i+4]+("┼────────────┼──────────────────────────────┼─────────────────────┼────────────────────────────────────────");
        end;
    end;
    if (flag == 2)
        obSheet.Range("D"+(i-1)+":G"+(i-1)).mergecells = true;
        obSheet.Cells(i,5).Value = "Наименование банка";
        if (not curr)
            obSheet.Cells(i-1,4).Value = "Контрагент";
        else
            obSheet.Cells(i-1,4).Value = "Корреспондент";
        end;
        obSheet.Cells(i,6).Value = "Счет";
        obSheet.Cells(i,4).Value = "БИК";
        obSheet.Cells(i,7).Value = "Наименование";
    end;
    if ((flag == 3) or (flag == 4))
        s = 0;
        exst = 0;
        while (s < asize(k))
            exst = exst + k(s);
            s = s + 1;
        end;
        if (exst == 0)
            exst = exst + i - 7;
        else
            exst = exst + 10;
        end;
        if (not curr)
            obSheet.Range("C"+(exst-1)+":e"+(exst-1)).mergecells = true;
            obSheet.Range("C"+(exst-1)+":e"+(exst-1)).horizontalalignment = 3;
            obSheet.Cells(exst-1,3).Value = "Корреспондент";
            obSheet.Cells(exst,3).Value = "Наименование, ИНН";
            obSheet.Cells(exst,4).Value = "Номер счета";
            obSheet.Cells(exst,5).Value = "Наименование банка, БИК";
            obSheet.Range("C"+(exst)+":C"+(exst+1)).mergecells = true;
            obSheet.Range("D"+(exst)+":D"+(exst+1)).mergecells = true;
            obSheet.Range("E"+(exst)+":E"+(exst+1)).mergecells = true;
        else
            obSheet.Range("D"+(exst-1)+":f"+(exst-1)).mergecells = true;
            obSheet.Range("D"+(exst-1)+":f"+(exst-1)).horizontalalignment = 3;
            obSheet.Cells(exst-1,4).Value = "Контрагент";
            obSheet.Cells(exst,4).Value = "Наименование, ИНН";
            obSheet.Cells(exst,5).Value = "Номер счета";
            obSheet.Cells(exst,6).Value = "Наименование банка, БИК";
            obSheet.Range("D"+(exst)+":D"+(exst+1)).mergecells = true;
            obSheet.Range("E"+(exst)+":E"+(exst+1)).mergecells = true;
            obSheet.Range("F"+(exst)+":F"+(exst+1)).mergecells = true;
        end;
    end;
END;        //    MACRO PRB_AddH_BIC(i)
    
private MACRO PRB_AddH_Summ(i, Caption)
    if ((flag == 1) or (flag == 2))
        PRB[i+0] = PRB[i+0]+("┬───────────────");
        PRB[i+1] = PRB[i+1]+("│")+StrAlign(Caption, wSUMM, STR_ALIGN_CENTER);       //Глушин С.П по R-36747-2 добавил выбор валюты в заголовке  
        PRB[i+2] = PRB[i+2]+("│    (Д-дебет,  ");
        PRB[i+3] = PRB[i+3]+("│    К-кредит)  ");
        PRB[i+4] = PRB[i+4]+("┼───────────────");
    else
        PRB[i+0] = PRB[i+0]+("┬───────────────────────────────");
        PRB[i+1] = PRB[i+1]+("│")+StrAlign(Caption, wSUMM*2+1, STR_ALIGN_CENTER);
        PRB[i+2] = PRB[i+2]+("├───────────────┬───────────────");
        PRB[i+3] = PRB[i+3]+("│      Дебет    │     Кредит    ");
        PRB[i+4] = PRB[i+4]+("┼───────────────┼───────────────");
    end;
    if (flag == 2)
        if (curr == 0)
            obSheet.Range("H"+(i-1)+":H"+(i)).mergecells = true;
            obSheet.Cells(i-1,8).wraptext = true;
            obSheet.Cells(i-1,8).Value = "Сумма (Д-дебет, К-кредит)";
        else
            obSheet.Range("H"+(i-1)+":H"+(i)).mergecells = true;
            obSheet.Cells(i-1,8).wraptext = true;
            obSheet.Cells(i-1,8).Value = "Сумма (Д-дебет, К-кредит)";
            obSheet.Range("I"+(i-1)+":I"+(i)).mergecells = true;
            obSheet.Cells(i-1,9).wraptext = true;
            obSheet.Cells(i-1,9).Value = "Рублевый эквивалент";
        end;
    end;
    if ((flag == 3) or (flag == 4))
        s = 0;
        exst = 0;
        while (s < asize(k))
            exst = exst + k(s);
            s = s + 1;
        end;
        if (exst == 0)
            exst = exst + i - 7;
        else
            exst = exst + 10;
        end;
        if (curr == 0)
            obSheet.Range("F"+(exst-1)+":F"+(exst+1)).mergecells = true;
            obSheet.Cells(exst-1,6).Value = "Дебет";
            obSheet.Range("G"+(exst-1)+":G"+(exst+1)).mergecells = true;
            obSheet.Cells(exst-1,7).Value = "Кредит";
        else
            obSheet.Range("G"+(exst-1)+":G"+(exst+1)).mergecells = true;
            obSheet.Cells(exst-1,7).Value = "Дебет";
            obSheet.Range("H"+(exst-1)+":H"+(exst+1)).mergecells = true;
            obSheet.Cells(exst-1,8).Value = "Кредит";
            obSheet.Range("I"+(exst-1)+":I"+(exst+1)).mergecells = true;
            obSheet.Cells(exst-1,9).Value = "Рублевый эквивалент";
        end;
    end;
END;        //    MACRO PRB_AddH_Summ(i, Caption)

private MACRO PRB_AddH_Ground(i, PrGround)
    if (flag == 2)
        if (curr == 0)
            obSheet.Range("I"+(i-1)+":I"+(i)).mergecells = true;
            obSheet.Cells(i-1,9).Value = "Основание";
        else
            obSheet.Range("J"+(i-1)+":J"+(i)).mergecells = true;
            obSheet.Cells(i-1,10).Value = "Основание";
        end;
    end;
    if (PrGround)
        PRB[i+0] = PRB[i+0]+("┬──────────────────────────────────────────────────┐");
        PRB[i+1] = PRB[i+1]+("│                                                  │");
        PRB[i+2] = PRB[i+2]+("│                   Основание                      │");
        PRB[i+3] = PRB[i+3]+("│                                                  │");
        PRB[i+4] = PRB[i+4]+("┼──────────────────────────────────────────────────┤");
    else
        PRB[i+0] = PRB[i+0]+("┐");
        PRB[i+1] = PRB[i+1]+("│");
        PRB[i+2] = PRB[i+2]+("┤");
        PRB[i+3] = PRB[i+3]+("│");
        PRB[i+4] = PRB[i+4]+("┤");
    end;
    if ((flag == 3) or (flag == 4))
        s = 0;
        exst = 0;
        while (s < asize(k))
            exst = exst + k(s);
            s = s + 1;
        end;
        if (exst == 0)
            exst = exst + i - 7;
        else
            exst = exst+10;
        end;
        if ( curr == 0)
            obSheet.Range("H"+(exst-1)+":H"+(exst+1)).mergecells=true;
            obSheet.Cells(exst-1,8).Value="Назначение платежа";
        else
            obSheet.Range("j"+(exst-1)+":j"+(exst+1)).mergecells=true;
            obSheet.Cells(exst-1,10).Value="Назначение платежа";
        end;
    end;
END;           //    MACRO PRB_AddH_Ground(i, PrGround)

private MACRO PRB_AddF_Empty(i)
    PRB[i+0] = "";
END;

private MACRO PRB_AddF_StrNum(i)
    if ((flag != 1) and (flag != 2))
        PRB[i+0] = PRB[i+0]+("    └────────");
    end;
END;

private MACRO PRB_AddF_DateCarryBank(i)
    if ((flag != 1) and (flag != 2))
        PRB[i+0] = PRB[i+0]+("┴──────────");
    end;
END;

private MACRO PRB_AddF_AccountBank(i)
    if ((flag != 1) and (flag != 2))
        PRB[i+0] = PRB[i+0]+("┴─────────────────────────");
    end;
END;

private MACRO PRB_AddF_GroundBank(i)
    if ((flag != 1) and (flag != 2))
        PRB[i+0] = PRB[i+0]+("┴──────────────────────────────────────────────────");
    end;
END;

private MACRO PRB_AddF_DateCarry(i)
    if ((flag != 1) and (flag != 2))
        PRB[i+0] = PRB[i+0]+("    └──────────");
    end;
END;

private MACRO PRB_AddF_ShifrOper(i)
    if ((flag != 1) and (flag != 2))
        PRB[i+0] = PRB[i+0]+("┴───");
    end;
END;

private MACRO PRB_AddF_NumbDocument(i)
    if ((flag != 1) and (flag != 2))
        PRB[i+0] = PRB[i+0]+("┴──────────");
    end;
END;

private MACRO PRB_AddF_Account(i)
    if ((flag != 1) and (flag != 2))
        PRB[i+0] = PRB[i+0]+("┴─────────────────────────");
    end;
END;

private MACRO PRB_AddF_BIC(i)
    if ((flag != 1) and (flag != 2) and (PRINT_BIC))
        PRB[i+0] = PRB[i+0]+("┴─────────");
    end;
END;

private MACRO PRB_AddF_Summ(i)
    if ((flag != 1) and (flag != 2))
        PRB[i+0] = PRB[i+0]+("┴───────────────┴───────────────");
    end;
END;

private MACRO PRB_AddF_Ground(i, PrGround)
    if (PrGround)
        if ((flag != 1) and (flag != 2))
            PRB[i+0] = PRB[i+0]+("┴──────────────────────────────────────────────────┘");
        else
            if (flag == 1)
                PRB[i+0] = PRB[i+0]+("    └──────────┴───┴──────────┴────────────┴──────────────────────────────┴─────────────────────┴────────────────────────────────────────┴");
            else
                PRB[i+0] = PRB[i+0]+("    └──────────┴───┴──────────┴────────────┴──────────────────────────────┴─────────────────────┴────────────────────────────────────────┴───────────────┴──────────────────────────────────────────────────┘");
            end;
        end;
    else
        PRB[i+0] = PRB[i+0]+("┘");
    end;
END;
    
private MACRO PRB_AddF_GroundEq1(i, NatCurEquivalent)
    if ((flag == 1) and (NatCurEquivalent))
        PRB[i+0] = PRB[i+0]+("───────────────┴───────────────┴──────────────────────────────────────────────────┘");        //Глушин С.П. по R-36747-2 
    else
        PRB[i+0] = PRB[i+0]+("───────────────┴──────────────────────────────────────────────────┘");
    end;
END;

private MACRO PRB_AddL_Empty(i)
    if ((flag != 1) and (flag != 2))
        PRB[i+0] = "";
    else
        PRB[i+0] = "    ";
    end;
END;

private MACRO PRB_AddL(i, str, align, width)
    PRB[i+0] = PRB[i+0]+"│"+StrAlign(str, align, width);
END;

private MACRO PRB_AddL_SPOD(i, str)
    PRB[i+0] = PRB[i+0]+StrAlign(str, wSPOD, STR_ALIGN_RIGHT);
END;

private MACRO PRB_AddL_Ground(i, str)
    PRB[i+0] = PRB[i+0]+"│"+StrAlign(str, wGROUND);
END;

private MACRO PRB_AddL_Close(i)
    PRB[i+0] = PRB[i+0]+"│";
END;

private macro flushPrint(accInfo)
    var i = 0;
    while(i < PRB.Size)
        print(PRB[i]);
        if (AccInfo.DblPrint == true)
            print(MkStr(" ", MaxWidth-strlen(PRB[i])+DBLPRN_DELIMITER_WIDTH));
            print(PRB[i]);
        end;
        println();
        i = i+1;
    end;
    PRB.Size = 0;
END;

private macro printHeader(accInfo)
    var str, Width, DpdStr, i = 0;
    
    if (AccInfo.CurrentFormat == ACC_FORMATS_BANK)
        Width = wSPOD + wSTRNUM + wDATE + wSHIFR + wNUMBD + wACC + wSUMM*4 + wGROUND + 11;
    else
        Width = wSPOD + wDATE + wSHIFR + wNUMBD + wBIC + wACC + wSUMM*4 + wGROUND + 11;
    end;
    if (AccInfo.PrGround == false)
        Width = Width - wGROUND - 1;
    end;
    if ((AccInfo.Account.Currency == NATCUR) or (AccInfo.NatCurEquivalent == false) or (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_LOANS))
        Width = Width - wSUMM*2 - 2;
    end;
    if (AccInfo.CurrentFormat == ACC_FORMATS_CLIENT)
        if ((AccInfo.Account.Currency == NATCUR) and
            ((AccInfo.OutForm == ACC_FORMS_NOTHING) and (PRINT_CORRACC) ) ) // KS 22.03.2011 Убрать корсчет для обычной выписки без приложений
            Width = Width + wACC + 1;
        end;
    end;
    if (MaxWidth < Width)
        MaxWidth = Width; 
    end;
    /* Разделитель */
    if ( PRINT_SEPARATOR ) // KS 18.04.2011
        PRB[i] = "(3R(s0p16.67h8.5v0s0b3T&l1O&l8D&l1X&a17L";
        i = i + 1;
    end;
    PRB[i] = (StrAlign("─", MaxWidth, STR_ALIGN_CENTER, "─")); 
    i = i + 1;
    
    if (print_once)
        if (f == 5)
            WordDoc.Bookmarks("Date_begin").Range.Text  =  AccInfo.DateIn;
            WordDoc.Bookmarks("Date_end").Range.Text    =  LD;
            WordDoc.Bookmarks("Acc_num").Range.Text     =  AccInfo.Account.Acc;
            WordDoc.Bookmarks("Inn").Range.Text         =  accinfo.account.inn;
            WordDoc.Bookmarks("Acc_name").Range.Text    =  AccInfo.Account.AccName;
            WordDoc.Bookmarks("Client_name").Range.Text =  AccInfo.Account.NameClnt;
            WordDoc.Bookmarks("Inn_c").Range.Text       =  AccInfo.INN;
            WordDoc.Bookmarks("Fin_instr").Range.Text   =  AccInfo.Account.CurrencyName;
            WordDoc.Bookmarks("sum_kind_in").Range.Text =  АП(AccInfo.Account.RestIn, AccInfo.Account.Kind_Account);
            WordDoc.Bookmarks("sum_in").Range.Text      =  PrSum(abs(AccInfo.Account.RestIn));
        end;
        /* Шапка банка */
        prb = accInfo.printBankHeader(width, prb);
        i = PRB.Size;
        j = 0;
        while (i < j)
            j = j + 1;
        end;
        PRB[i] = "";
        i = i + 1;
        /* Шапка счета */
        PRB[i] = (StrAlign(string("Выписка за период: c ", AccInfo.DateIn:f, " по ", LD:f), Width, STR_ALIGN_CENTER)); 
        i = i + 1;
        PRB[i] = ""; 
        i = i + 1;
        /*distr  PRB[i] = (StrAlign(string("Лицевой счет: ", AccInfo.Account.Acc:f), Width, STR_ALIGN_LEFT)); i=i+1;*/
        PRB[i] = (StrAlign(string("Лицевой счет: ", AccInfo.Account.Acc:f, ",          ИНН:",accinfo.account.inn), Width, STR_ALIGN_LEFT)); 
        i = i + 1;
        PRB[i] = (StrAlign(string("Название: ", AccInfo.Account.AccName), Width, STR_ALIGN_LEFT)); 
        i = i + 1;
        PRB[i] = "";
        i = i + 1;
        PRB[i] = (StrAlign(string("Клиент: ", AccInfo.Account.NameClnt), Width, STR_ALIGN_LEFT)); 
        i = i + 1;
        PRB[i] = (StrAlign(string("ИНН: ", AccInfo.INN), Width, STR_ALIGN_LEFT)); 
        i = i + 1;
        PRB[i] = "";
        i = i + 1;
        if ((flag != 2) and (flag != 1))
            /* EVG Вывод операциониста по счёту убран по просьбе Елены Паньковой.
            PRB[i] = (StrAlign(string("Операционист++: ", AccInfo.Account.Oper), Width, STR_ALIGN_LEFT)); i=i+1; */
        else
            datoper = trsbdataset(string("select t_oper from dperson_dbt where t_name='",AccInfo.Account.Oper,"'"));
            if (datoper.movenext())
                PRB[i] = (StrAlign(string("Отв.исп.: ", datoper.oper), Width, STR_ALIGN_LEFT));
                i = i + 1;
            else
                PRB[i] = (StrAlign(string("Отв.исп.: ", ""), Width, STR_ALIGN_LEFT));
                i = i + 1;
            end;
        end;
        if ((AccInfo.Account.Currency == NATCUR) and (index(AccInfo.Account.TypeAccount, "П") > 0) 
            and (AccInfo.OcpAccountServer.IsSuitable(AccInfo.Account.Chapter,
                                                     AccInfo.Account.Currency,
                                                     AccInfo.Account.Acc,
                                                     AccInfo.Account.Branch)))
            DpdStr = "";
        else
            DpdStr = AccInfo.DPD;
        end;
        PRB[i] = (StrAlign(string("Дата последней операции по счету: ", DpdStr), Width, STR_ALIGN_LEFT)); i=i+1;
        if (flag<2)  
            if ((AccInfo.NatCurEquivalent == true) and (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB))
                if (AccInfo.OcpAccountServer.IsSuitable(AccInfo.Account.Chapter,
                                                        AccInfo.Account.Currency, 
                                                        AccInfo.Account.Acc,
                                                        AccInfo.Account.Branch)
                                                        )
                    DpdStr = "";
                else
                    DpdStr = AccInfo.DPD_R;
                end;
                PRB[i] = (StrAlign(string("Дата последней операции по счету в нац. валюте: ", DpdStr), Width, STR_ALIGN_LEFT));
                i = i + 1;
            end;
        end;
        //PRB[i] = ""; i=i+1;
        if ((AccInfo.Account.Currency == NATCUR) or ((AccInfo.Account.Currency != NATCUR) and (AccInfo.NatCurEquivalent == false)) 
             or (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_LOANS))
            PRB[i] = (StrAlign(string(AccInfo.Account.CurrencyName), Width, STR_ALIGN_LEFT));
        else
            str = AccInfo.Account.CurrencyName;
            PRB[i] = string(str, StrAlign(string("Курс ЦБ: ", AccInfo.RateIn), Width-strlen(str)-1, STR_ALIGN_RIGHT));
        end;
        i = i + 1;
        //PRB[i] = ""; i=i+1;
        str = "Входящий остаток "+АП(AccInfo.Account.RestIn, AccInfo.Account.Kind_Account);
        PRB[i] = string(str, "    ", PrSum(abs(AccInfo.Account.RestIn)));
        i = i + 1;
        if ((AccInfo.Account.Currency != NATCUR) and (AccInfo.NatCurEquivalent == true) and 
            (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB))
            str = "Входящий остаток "+АП(AccInfo.Account.RestInEq, AccInfo.Account.Kind_Account)+" эквивалент";
            PRB[i] = string(str, "    ", PrSum(abs(AccInfo.Account.RestInEq))); i=i+1;
        end;
    else 
        if (need_print)
            /* Шапка банка */
            prb = accInfo.printBankHeader(width, prb);
            i = PRB.Size;
            //korkin
            if (flag == 2)
                if (f == 0)
                    i = PRB.Size;
                else
                    i = f + 3 + 5;
                end;
            end;
            if (flag == 2)
                obSheet.Cells(i,1).Value = PRB[i-1];
            end;
            j = 0;
            while (i < j)
                j = j + 1;
            end;
            PRB[i] = "";
            i = i + 1;
            
            /* Шапка счета */
            PRB[i] = (StrAlign(string("Выписка за период: c ", AccInfo.DateIn:f, " по ", AccInfo.DateOut:f), Width, STR_ALIGN_LEFT));
            i = i + 1;
            if (flag == 2)
                obSheet.Cells(i,1).Value = PRB[i-1];
            end;
            if ((flag == 3) or (flag == 4))
                s = 0;
                exst = 0;
                while (s < asize(k))
                    exst = exst + k(s);
                    s = s + 1;
                end;
                exst = exst + 6;
                page = 1;
                obSheet.Cells(exst,2).Value = string("Выписка за период: c ", AccInfo.DateIn:f, " по ", AccInfo.DateOut:f);
            end;
            PRB[i] = "";
            i = i + 1;
            /*distr  PRB[i] = (StrAlign(string("Лицевой счет: ", AccInfo.Account.Acc:f), Width, STR_ALIGN_LEFT)); i=i+1;*/
            if ((flag == 2) or (flag == 1))
                PRB[i] = (StrAlign(string("Наименование счета: ", AccInfo.Account.AccName), Width, STR_ALIGN_LEFT));
                i = i + 1;
                if (flag == 2)
                    obSheet.Cells(i,1).Value = PRB[i-1];
                end;
            end;
            if ((flag == 3) or (flag == 4))
                s = 0;
                exst = 0;
                while (s < asize(k))
                    exst = exst + k(s);
                    s = s + 1;
                end;
                exst = exst + 3;
                obSheet.Cells(exst,2).Value = AccInfo.Account.AccName;
            end;
            PRB[i] = (StrAlign(string("Лицевой счет: ", AccInfo.Account.Acc:f, ",          ИНН:",accinfo.account.inn), Width, STR_ALIGN_LEFT));
            i = i + 1;
            if (flag == 2)
                obSheet.Cells(i,1).Value = PRB[i-1];
            end;
            if ((flag == 3) or (flag == 4))
                s = 0;
                exst = 0;
                while (s < asize(k))
                    exst = exst + k(s);
                    s = s + 1;
                end;
                exst = exst + 4;
                obSheet.Cells(exst,2).Value = string("р/счет № ", AccInfo.Account.Acc:f);
                obSheet.Cells(exst,5).Value = string("валюта счета:",AccInfo.Account.currencyname );
            end;
            if ((flag != 2) and (flag != 1))
                PRB[i] = (StrAlign(string("Название: ", AccInfo.Account.AccName), Width, STR_ALIGN_LEFT));
                i = i + 1;
            end;
            PRB[i] = "";
            i = i + 1;
            if (flag == 2)
                obSheet.Cells(i,1).Value = PRB[i-1];
            end;
            if((flag != 2) and (flag != 1))
                PRB[i] = (StrAlign(string("Клиент: ", AccInfo.Account.NameClnt), Width, STR_ALIGN_LEFT));
                i = i + 1;
            end;
            if((flag != 2) and (flag != 1))
                PRB[i] = (StrAlign(string("ИНН: ", AccInfo.INN), Width, STR_ALIGN_LEFT));
                i = i + 1;
            end;
            PRB[i] = "";
            i = i + 1;
            if (flag == 2)
                obSheet.Cells(i,1).Value = PRB[i-1];
            end;
            if ((flag != 2) and (flag != 1))
                /* EVG Вывод операциониста по счёту убран по просьбе Елены Паньковой.*/
                /* Tikh Вывод операциониста по счёту вернул для Экспресс-Волги*/
                if (PRINT_OPER_ACC)
                   PRB[i] = (StrAlign(string("Операционист: ", AccInfo.Account.Oper), Width, STR_ALIGN_LEFT));
                   i=i+1;
                end;
            else
                datoper = trsbdataset(string("select t_oper from dperson_dbt where t_name='",AccInfo.Account.Oper,"'"));
                if (datoper.movenext())
                   PRB[i] = (StrAlign(string("Отв.исп.: ", datoper.oper), Width, STR_ALIGN_LEFT));
                   i = i + 1;
                else
                   PRB[i] = (StrAlign(string("Отв.исп.: ", ""), Width, STR_ALIGN_LEFT));
                   i = i + 1;
                end;
            end;
            if (flag == 2)
               obSheet.Cells((i-2),1).Value=string("Отв.исп.: ", datoper.oper);
            end;
            if ((AccInfo.Account.Currency == NATCUR) 
                 and (index(AccInfo.Account.TypeAccount, "П") > 0)
                 and (AccInfo.OcpAccountServer.IsSuitable(AccInfo.Account.Chapter,
                                                          AccInfo.Account.Currency,
                                                          AccInfo.Account.Acc /*, AccInfo.Account.Branch */))
                ) 
                DpdStr = "";
            else
                DpdStr = AccInfo.DPD;
            end;
            PRB[i] = (StrAlign(string("Дата последней операции по счету: ", DpdStr), Width, STR_ALIGN_LEFT));
            i = i  +1;
            if ((flag == 3) or (flag == 4))
                s = 0;
                exst = 0;
                while (s < asize(k))
                    exst = exst + k(s);
                    s = s + 1;
                end;
                exst = exst + 5;
                obSheet.Cells(exst,6).Value = string("Дата последней операции: ", AccInfo.DPD);
                if (curr > 0)
                    obSheet.Cells(exst+1,6).Value = string("Курс ", AccInfo.rateout, " на ",AccInfo.DateOut:f );
                end;
            end;
            
            if (flag == 2)
                obSheet.RANGE("A"+i+":E"+i).mergecells = true;
                obSheet.Cells(i,1).Value = string("Дата последней операции по счету: ", AccInfo.DPD);
                if (curr > 0)
                    obSheet.RANGE("H"+i+":I"+i).mergecells = true;
                    obSheet.Cells(i,8).Value = string("Курс ", AccInfo.rateout, " на ",AccInfo.DateOut:f );
                end;
            end;
            if (flag < 2)
                if ((AccInfo.NatCurEquivalent == true) and (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB))
                    if (AccInfo.OcpAccountServer.IsSuitable(AccInfo.Account.Chapter,
                                                            AccInfo.Account.Currency,
                                                            AccInfo.Account.Acc/*, AccInfo.Account.Branch*/)
                        )
                        DpdStr = "";
                    else
                        DpdStr = AccInfo.DPD_R;
                    end;
                    PRB[i] = (StrAlign(string("Дата последней операции по счету в нац. валюте: ", DpdStr), Width, STR_ALIGN_LEFT));
                    i = i + 1;
                end;
            end;
            PRB[i] = "";
            i = i + 1;
            if ((AccInfo.Account.Currency == NATCUR) 
                 or((AccInfo.Account.Currency != NATCUR) and (AccInfo.NatCurEquivalent == false))
                 or(AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_LOANS)
               )
                PRB[i] = (StrAlign(string(AccInfo.Account.CurrencyName), Width, STR_ALIGN_LEFT));
            else
                str = AccInfo.Account.CurrencyName;
                PRB[i] = string(str, StrAlign(string("Курс ЦБ: ", AccInfo.RateIn), Width-strlen(str)-1, STR_ALIGN_RIGHT));
            end;
            i = i + 1;
            PRB[i] = ""; 
            i = i + 1;
            str = "Входящий остаток "+АП(AccInfo.Account.RestIn, AccInfo.Account.Kind_Account);
            PRB[i] = string(str, "    ", PrSum(abs(AccInfo.Account.RestIn)));
            i = i + 1;
            if (flag == 2)
                if (curr == 0)
                    obSheet.Cells(i-2,1).Value = PRB[i-1];
                else
                    obSheet.Cells(i-2,1).Value = string(PRB[i-1], "(Рублевый эквивалент ",AccInfo.Account.RestInEQ,")");
                end;
            end;
            if ((flag == 3) or (flag == 4))
                s = 0;
                exst = 0;
                while (s < asize(k))
                    exst = exst + k(s);
                    s = s + 1;
                end;
                exst = exst + 8;
                if (curr == 0)
                   obSheet.Cells(exst, 2).Value = string( "Входящий остаток: ",PrSum(abs(AccInfo.Account.RestIn)));
                else
                   //obSheet.Cells(exst,2).Value=string( "Входящий остаток: ",PrSum(abs(AccInfo.Account.RestIn)), " (Рублевый эквивалент: ",abs(AccInfo.Account.RestInEQ),")");
                   ConvSum(rate, money(AccInfo.Account.RestIn), AccInfo.DateOut, AccInfo.Account.currency, NATCUR, 7);
                   obSheet.Cells(exst,2).Value = string( "Входящий остаток: ",PrSum(abs(AccInfo.Account.RestIn)), " (Рублевый эквивалент: ", rate, ")");
                end;
            end;
            if (flag < 2)
               if ((AccInfo.Account.Currency != NATCUR) 
                    and (AccInfo.NatCurEquivalent == true)
                    and (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB)
                  )
                    str = "Входящий остаток "+АП(AccInfo.Account.RestInEq, AccInfo.Account.Kind_Account) + " эквивалент";
                    PRB[i] = string(str, "    ", PrSum(abs(AccInfo.Account.RestInEq)));
                    i = i + 1;
                    if (flag == 2)
                        if (curr == 0)
                            obSheet.Cells(i,1).Value = PRB[i-1];
                        else
                            obSheet.Cells(i,1).Value = string(PRB[i-1], "Рублевый эквивалент ",AccInfo.Account.RestInEq);
                        end;
                    end;
                end;
            end;
        else 
            if ((AccInfo.Account.Currency == NATCUR) 
                and (index(AccInfo.Account.TypeAccount, "П") > 0)
                and (AccInfo.OcpAccountServer.IsSuitable(AccInfo.Account.Chapter,
                                                         AccInfo.Account.Currency,
                                                         AccInfo.Account.Acc,
                                                         AccInfo.Account.Branch))
                )
                DpdStr = "";
            else
                DpdStr = AccInfo.DPD;
            end;
            PRB[i] = (StrAlign(string("Дата последней операции по счету: ", DpdStr), Width, STR_ALIGN_LEFT));
            i = i + 1;
            if ((flag == 3) or (flag == 4))
                s = 0;
                exst = 0;
                while (s < asize(k))
                    exst = exst + k(s);
                    s = s + 1;
                end;
                exst = exst + 5;
                obSheet.Cells(exst,6).Value = string("Дата последней операции: ", AccInfo.DPD);
                if (curr > 0)
                    obSheet.Cells(exst+1,6).Value = string("Курс ", AccInfo.rateout, " на ",AccInfo.DateOut:f );
                end;
            end;
            if (flag == 2)
                obSheet.RANGE("A"+i+":E"+i).mergecells = true;
                obSheet.Cells(i,1).Value = string("Дата последней операции по счету: ", AccInfo.DPD);
                if (curr > 0)
                    obSheet.RANGE("H"+i+":I"+i).mergecells = true;
                    obSheet.Cells(i,8).Value = string("Курс ", AccInfo.rateout, " на ",AccInfo.DateOut:f );
                end;
            end;
            if (flag < 2)
               if ((AccInfo.NatCurEquivalent == true) and (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB))
                   if (AccInfo.OcpAccountServer.IsSuitable(AccInfo.Account.Chapter,
                                                           AccInfo.Account.Currency, 
                                                           AccInfo.Account.Acc,
                                                           AccInfo.Account.Branch)
                       )
                       DpdStr = "";
                   else
                       DpdStr = AccInfo.DPD_R;
                   end;
                   PRB[i] = (StrAlign(string("Дата последней операции по счету в нац. валюте: ", DpdStr), Width, STR_ALIGN_LEFT));
                   i = i + 1;
               end;
            end;
            //PRB[i] = ""; i=i+1;
            if ((AccInfo.Account.Currency == NATCUR)
                or ((AccInfo.Account.Currency != NATCUR) and (AccInfo.NatCurEquivalent == false))
                or (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_LOANS)
               )
                PRB[i] = (StrAlign(string(AccInfo.Account.CurrencyName), Width, STR_ALIGN_LEFT));
            else
                str = AccInfo.Account.CurrencyName;
                PRB[i] = string(str, StrAlign(string("Курс ЦБ: ", AccInfo.RateIn), Width-strlen(str)-1, STR_ALIGN_RIGHT));
            end;
            i = i + 1;
            str = "Входящий остаток "+АП(AccInfo.Account.RestIn, AccInfo.Account.Kind_Account);
            PRB[i] = string(str, "    ", PrSum(abs(AccInfo.Account.RestIn)));
            i = i  +1;
            if (flag == 2)
                if (curr == 0)
                    obSheet.Cells(i-2,1).Value = PRB[i-1];
                else
                    obSheet.Cells(i-2,1).Value = string(PRB[i-1], "(Рублевый эквивалент ",AccInfo.Account.RestInEQ,")");
                end;
            end;
            if ((flag == 3) or (flag == 4))
                s = 0;
                exst = 0;
                while (s < asize(k))
                    exst = exst + k(s);
                    s = s + 1;
                end;
                exst = exst + 8;
                if (curr == 0)
                    obSheet.Cells(exst,2).Value=string( "Входящий остаток: ",PrSum(abs(AccInfo.Account.RestIn)));
                else
                    //obSheet.Cells(exst,2).Value=string( "Входящий остаток: ",PrSum(abs(AccInfo.Account.RestIn)), " (Рублевый эквивалент: ",abs(AccInfo.Account.RestInEQ),")");
                    ConvSum(rate, money(AccInfo.Account.RestIn), AccInfo.DateOut, AccInfo.Account.currency, NATCUR, 7);
                    obSheet.Cells(exst,2).Value = string( "Входящий остаток: ",PrSum(abs(AccInfo.Account.RestIn)), " (Рублевый эквивалент: ",rate,")");
                end;
            end;
            if (flag<2)
                if ((AccInfo.Account.Currency != NATCUR)
                    and (AccInfo.NatCurEquivalent == true)
                    and (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB)
                    )
                    str = "Входящий остаток "+АП(AccInfo.Account.RestInEq, AccInfo.Account.Kind_Account)+" эквивалент";
                    PRB[i] = string(str, "    ", PrSum(abs(AccInfo.Account.RestInEq)));
                    i = i + 1;
                end;
            end;
        end;
    end;   //if (print_once)
   
    /* Шапка таблицы */
    PRB_AddH_Empty(i);
    if (AccInfo.CurrentFormat == ACC_FORMATS_BANK)
        PRB_AddH_StrNum(i);
        PRB_AddH_DateCarryBank(i);
        PRB_AddH_ShifrOper(i);
        PRB_AddH_NumbDocument(i);
        if (AccInfo.PrGround)
            PRB_AddH_GroundBank(i);
        end;
        PRB_AddH_AccountBank(i);
        if (AccInfo.Account.Currency == NATCUR)
            PRB_AddH_Summ(i, "Рубли");
        else
            if ((AccInfo.NatCurEquivalent == true) and (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB))
                PRB_AddH_Summ(i, "Валюта");
                PRB_AddH_Summ(i, "Рубли");
            else
                PRB_AddH_Summ(i, "Валюта");
            end;
        end;
        /* закрывашка таблицы справа */
        PRB_AddH_Ground(i, false);
    else
        PRB_AddH_DateCarry(i);
        PRB_AddH_ShifrOper(i);
        PRB_AddH_NumbDocument(i);
        if ((AccInfo.Account.Currency == NATCUR) and ((AccInfo.OutForm == ACC_FORMS_NOTHING) and (PRINT_CORRACC))) // KS 22.03.2011 Убрать корсчет для обычной выписки без приложенийУбрать корсчет для обычной выписки без приложений
            PRB_AddH_Account(i, "Корреспондентский счет");
        end;
        PRB_AddH_BIC(i);
        PRB_AddH_Account(i, "Номер cчета");
        if (AccInfo.Account.Currency == NATCUR)
            PRB_AddH_Summ(i, "Рубли");
        else
            if ((AccInfo.NatCurEquivalent == true) and (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB))
                PRB_AddH_Summ(i, "Валюта");
                PRB_AddH_Summ(i, "Рубли");
            else
                PRB_AddH_Summ(i, "Валюта");
            end;
        end;
        PRB_AddH_Ground(i, AccInfo.PrGround);
    end;
    //korkin
    if ((flag == 2) and (f != 0))
        f = f + 21;
    end;
    if (flag <= 1)
        FlushPrint(AccInfo);
    end;

END;        //    macro printHeader(accInfo)

private macro printFooter(accInfo, docs)
    var Width,str, str1, i, ov_rs, quest = false;
    var v_proc1= 0, v_proc2= 0, v_proc3= 0, v_proc4= 0, v_proc5= 0, v_proc6= 0, v_proc7= 0, v_proc8= 0, v_proc9= 0, v_proc10= 0;
    if (AccInfo.CurrentFormat == ACC_FORMATS_BANK)
        Width = wSPOD + wSTRNUM + wDATE + wSHIFR + wNUMBD + wGROUND + wACC + wSUMM*4 + 11;
    else
        Width = wSPOD + wDATE + wSHIFR + wNUMBD + wBIC + wACC + wSUMM*4 + wGROUND + 11;
    end;
    if (AccInfo.PrGround == false)
        Width = Width - wGROUND - 1;
    end;
    if ((AccInfo.Account.Currency == NATCUR)
        or (AccInfo.NatCurEquivalent == false)
        or (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_LOANS)
        )
        Width = Width - wSUMM*2 - 2;
    end;
    if (AccInfo.CurrentFormat == ACC_FORMATS_CLIENT)
        if ((AccInfo.Account.Currency == NATCUR) and ((AccInfo.OutForm == ACC_FORMS_NOTHING) and (PRINT_CORRACC) ) ) // KS 22.03.2011 Убрать корсчет для обычной выписки без приложений
            Width = Width + wACC + 1;
        end;
    end;
    /* Подвал таблицы */
    i = PRB.Size;
    PRB_AddF_Empty(i);
    if (AccInfo.CurrentFormat == ACC_FORMATS_BANK)
        PRB_AddF_StrNum(i);
        PRB_AddF_DateCarryBank(i);
        PRB_AddF_ShifrOper(i);
        PRB_AddF_NumbDocument(i);
        if(AccInfo.PrGround)
            PRB_AddF_GroundBank(i);
        end;
        PRB_AddF_AccountBank(i);
        PRB_AddF_Summ(i);
        if ((AccInfo.NatCurEquivalent == true) and (AccInfo.Account.Currency != NATCUR) and (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB))
            PRB_AddF_Summ(i);
        end;
        /* закрывашка таблицы справа */
        PRB_AddF_Ground(i, false);
    else
        PRB_AddF_DateCarry(i);
        PRB_AddF_ShifrOper(i);
        PRB_AddF_NumbDocument(i);
        if ((AccInfo.Account.Currency == NATCUR) and ((AccInfo.OutForm == ACC_FORMS_NOTHING) and (PRINT_CORRACC) ) ) // KS 22.03.2011 Убрать корсчет для обычной выписки без приложений
            PRB_AddF_Account(i);
        end;
        PRB_AddF_BIC(i);
        PRB_AddF_Account(i);
        PRB_AddF_Summ(i);
        if ((AccInfo.NatCurEquivalent == true) and (AccInfo.Account.Currency != NATCUR) and (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB))
            PRB_AddF_Summ(i);
        end;
        PRB_AddF_Ground(i, AccInfo.PrGround);
    end;
    i = PRB.Size;
    /* Подвал счета */
    if ((flag!=2) and (flag!=1))
        PRB[i] = (StrAlign(string("Всего документов: ", Docs.OverallDocs), Width, STR_ALIGN_LEFT));
        i = i + 1;
    end;
    if ((flag != 2) and (flag != 1))
        str = "Итого обороты:";
        str1 = StrAlign(PrSum(Docs.AllSumDebit), wSUMM+1, STR_ALIGN_RIGHT) + StrAlign(PrSum(Docs.AllSumCredit), wSUMM+1, STR_ALIGN_RIGHT);
    elif (flag == 2)
        str = "Итого оборотов по дебету:";
        str1 = StrAlign(PrSum(Docs.AllSumDebit), wSUMM+1, STR_ALIGN_RIGHT); 
        PRB[i] = string(str, PrSum(Docs.AllSumDebit));
        i = i + 1;
        str = "Итого оборотов по кредиту:";
        str1 =  StrAlign(PrSum(Docs.AllSumCredit), wSUMM+1, STR_ALIGN_RIGHT);
        PRB[i] = string(str, PrSum(Docs.AllSumCredit));
        obSheet.Cells(f+3,1).Value=string("Итого оборотов по дебету: ",PrSum(Docs.AllSumDebit));
        obSheet.Cells(f+4,1).Value=string("Итого оборотов по кредиту: ", PrSum(Docs.AllSumCredit));
    elif (flag == 1)
        str = "Итого оборотов по дебету:";
        str1 = StrAlign(PrSum(Docs.AllSumDebit), wSUMM+1, STR_ALIGN_RIGHT); 
        PRB[i] = string(str, PrSum(Docs.AllSumDebit));
        i = i + 1;
        if (AccInfo.NatCurEquivalent == true)
            str = "Итого оборотов по дебету эквивалент:";
            str1 = StrAlign(PrSum(Docs.AllSumDebitEq), wSUMM+1, STR_ALIGN_RIGHT);    //Глушин С.П. по R-36747-2 добавлено выведение сумм оборотов в ВЭ
            PRB[i] = string(str, PrSum(Docs.AllSumDebitEq));
            i = i + 1;
        end;
        str = "Итого оборотов по кредиту:";
        str1 =  StrAlign(PrSum(Docs.AllSumCredit), wSUMM+1, STR_ALIGN_RIGHT);
        PRB[i] = string(str, PrSum(Docs.AllSumCredit));
        if (AccInfo.NatCurEquivalent == true)
            i = i + 1;
            str = "Итого оборотов по кредиту эквивалент:";
            str1 = StrAlign(PrSum(Docs.AllSumCreditEq), wSUMM+1, STR_ALIGN_RIGHT);
            PRB[i] = string(str, PrSum(Docs.AllSumCreditEq));
        end;
    end; 
    if ((flag == 3) or (flag == 4))
        if (not curr)
            obSheet.Cells(f+3,4).Value = "Итого: ";
            obSheet.Cells(f+3,6).Value = PrSum(Docs.AllSumDebit);
            obSheet.Cells(f+3,7).Value = PrSum(Docs.AllSumCredit);
        else
            obSheet.Cells(f+2,4).Value = "Итого: ";
            obSheet.Cells(f+2,7).Value = PrSum(Docs.AllSumDebit);
            obSheet.Cells(f+2,8).Value = PrSum(Docs.AllSumCredit);
        end;
    end;
    if ((AccInfo.NatCurEquivalent == true) and (AccInfo.Account.Currency != NATCUR) and (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB))
        str1 = str1 + StrAlign(PrSum(Docs.AllSumDebitEq),  wSUMM+1, STR_ALIGN_RIGHT)
                    + StrAlign(PrSum(Docs.AllSumCreditEq), wSUMM+1, STR_ALIGN_RIGHT);
    end;
    if (AccInfo.PrGround == true)
        if (AccInfo.CurrentFormat == ACC_FORMATS_BANK)
            if ((flag!=1) and (flag!=2))
                PRB[i] = string(str, StrAlign(str1, Width-strlen(str)-1, STR_ALIGN_RIGHT));
            end;
        else
            if ((flag!=1) and (flag!=2))
                /* EVG 31/05/2011 Скорректировал, иначе итоги уезжают далеко вправо.
                PRB[i] = string(str, StrAlign(str1, Width-strlen(str)-2-wGROUND, STR_ALIGN_RIGHT));*/
                PRB[i] = string(str, StrAlign(str1, Width-strlen(str)-16-wGROUND, STR_ALIGN_RIGHT));
            end;
        end;
    else
        PRB[i] = string(str, StrAlign(str1, Width-strlen(str)-1-13, STR_ALIGN_RIGHT));
    end;
    i = i + 1;
    if ((index(AccInfo.Account.TypeAccount, "З") > 0) and (AccInfo.SPODTurnsTotal == true))
        str = "В том числе СПОД:";
        str1 = StrAlign(PrSum(Docs.AllSumDebitSPOD), wSUMM+1, STR_ALIGN_RIGHT) + StrAlign(PrSum(Docs.AllSumCreditSPOD), wSUMM+1, STR_ALIGN_RIGHT);
        if ((AccInfo.NatCurEquivalent == true) and (AccInfo.Account.Currency != NATCUR) and (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB))
            str1 = str1 + StrAlign(PrSum(Docs.AllSumDebitSPODEq),  wSUMM+1, STR_ALIGN_RIGHT)
                        + StrAlign(PrSum(Docs.AllSumCreditSPODEq), wSUMM+1, STR_ALIGN_RIGHT);
        end;
        if (AccInfo.PrGround == true)  
            if (AccInfo.CurrentFormat == ACC_FORMATS_BANK)
                PRB[i] = string(str, StrAlign(str1, Width-strlen(str)-1, STR_ALIGN_RIGHT));
            else
                PRB[i] = string(str, StrAlign(str1, Width-strlen(str)-2-wGROUND, STR_ALIGN_RIGHT));
                if (flag == 2)
                    obSheet.Cells(f+5,6).Value = PRB[i];
                    f = f + 1;
                end;
            end;
        else
            PRB[i] = string(str, StrAlign(str1, Width-strlen(str)-1, STR_ALIGN_RIGHT));
            if (flag == 2)
                obSheet.Cells(f+5,6).Value = PRB[i];
                f = f + 1;
            end; 
        end;
        i = i + 1;
    end;
    str = "Исходящий остаток: "+АП(AccInfo.Account.RestOut, AccInfo.Account.Kind_Account);
    PRB[i] = string(str, "    ", PrSum(abs(AccInfo.Account.RestOut))); i=i+1;
    if (flag<2)
        if ((AccInfo.NatCurEquivalent == true) and (AccInfo.Account.Currency != NATCUR) and (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB))
            str = "Исходящий остаток "+АП(AccInfo.Account.RestOutEq, AccInfo.Account.Kind_Account)+" эквивалент: ";
            PRB[i] = string(str, StrAlign(PrSum(abs(AccInfo.Account.RestOutEq)), Width-strlen(str)-1, STR_ALIGN_left)); i=i+1;      //Глушин С.П. изменил на STR_ALIGN_left
            if (flag==2)
                obSheet.Cells(f+5,1).Value= PRB[i-1];
            end;
        end;
    end;
    if (flag == 2)
        k(asize(k)) = i;
    end;
    if ((AccInfo.Account.Currency != NATCUR) and (AccInfo.NatCurEquivalent == true) and (AccInfo.Account.InitialSubsystem == REP_SUBSYSTEMS_CB))
        PRB[i] = (StrAlign(string("Курс ЦБ: ", AccInfo.RateOut), Width-1, STR_ALIGN_RIGHT));
    end;
    if (flag == 2)
        if (curr == 0)
            obSheet.Cells(f+5,1).Value = string(str," ",PrSum(abs(AccInfo.Account.RestOut)));
        else
            ConvSum(rate, money(AccInfo.Account.RestOut), AccInfo.DateOut, AccInfo.Account.currency,NATCUR, 7);
            obSheet.Cells(f+5,1).Value = string(str, " ", PrSum(abs(AccInfo.Account.RestOut)), "(Рублевый эквивалент ",Rate,")");
            //obSheet.Cells(f+5,1).Value= string(str," ",PrSum(abs(AccInfo.Account.RestOut)),"(Рублевый эквивалент ",AccInfo.Account.RestOutEQ,")");
            obsheet.pagesetup.zoom = 70;
            //obSheet.Cells(i,1).Value=string(PRB[i-1], "Рублевый эквивалент ",AccInfo.Account.RestInEq*rate);
        end;
    end; 
    
    /*151*/
    if ((flag == 4) or (flag == 3))
        s = 0;
        exst = 0;
        while (s < asize(k))
            exst = exst + k(s);
            s = s + 1;
        end;
        if (exst == 0)
            exst = 1;
        end;
        if (curr == 0)
            obSheet.Range("A"+(tab-1)+":h"+(f)).Borders.Weight = 2;
            obSheet.Range("A"+(tab-1)+":h"+(tab)).interior.color = 4035000;
            obsheet.pagesetup.zoom = 80;
            if (not PageAutoNumber)
                if ((obSheet.Range(string("A"+(exst)+":a"+(f+5))).height>610))
                  if ((fgBank.is_NBS) or (fgBank.is_GO))
                    obSheet.Cells(f+1,1).pagebreak = true;
                    obSheet.RANGE("A"+(f+1)+":h"+(f+1)).mergecells = true;
                    obSheet.RANGE("A"+(f+1)+":h"+(f+1)).horizontalalignment = 4;
                    page = page + 1;
                    obSheet.Cells(f+1,1).Value=string("Страница ",page);
                  else
                    obSheet.Range("A"+(f)+":h"+(f)).EntireRow.Insert;
                    obSheet.Cells(f,1).pagebreak = true; //sokolov C-17499-6 изменил f+1 на f для переноса строки с данными на след страницу
                    obSheet.RANGE("A"+(f)+":h"+(f)).mergecells = true;
                    obSheet.RANGE("A"+(f)+":h"+(f)).horizontalalignment = 4;
                    page = page + 1;
                    obSheet.Cells(f,1).Value=string("Страница ",page);
                  end;//
                    f = f + 2;
                    if (exst == 1)
                        exst = 0;
                    end;
                    k(asize(k)) = f - exst;
                end;
            end;
        else
            obSheet.Range("A"+(tab-1)+":j"+(f)).Borders.Weight = 2;
            obSheet.Range("A"+(tab-1)+":j"+(tab)).interior.color = 4035000;
            obsheet.pagesetup.zoom = 67;
            if (not PageAutoNumber)
                if ((obSheet.Range(string("A"+(exst)+":a"+(f+5))).height>610))
                  if ((fgBank.is_NBS) or (fgBank.is_GO))
                    obSheet.Cells(f+1,1).pagebreak = true;
                    obSheet.RANGE("A"+(f+1)+":j"+(f+1)).mergecells = true;
                    obSheet.RANGE("A"+(f+1)+":j"+(f+1)).horizontalalignment = 4;
                    page = page + 1;
                    obSheet.Cells(f+1,1).Value = string("Страница ",page);
                  else
                    obSheet.Range("A"+(f)+":h"+(f)).EntireRow.Insert;
                    obSheet.Cells(f,1).pagebreak = true;//sokolov C-17499-6 изменил f+1 на f для переноса строки с данными на след страницу
                    obSheet.RANGE("A"+(f)+":j"+(f)).mergecells = true;
                    obSheet.RANGE("A"+(f)+":j"+(f)).horizontalalignment = 4;
                    page = page + 1;
                    obSheet.Cells(f,1).Value = string("Страница ",page);//sokolov
                  end;
                    f = f + 2;
                    if (exst == 1)
                        exst = 0;
                    end;
                    k(asize(k)) = f - exst;
                end;
            end;
        end;
        //Думаю что так
        s = 0;
        exst = 0;
        while (s < asize(k))
            exst = exst + k(s);
            s = s + 1;
        end;
        if (exst == 0)
            exst = 1;
        end;
        obSheet.Cells(f+4,4).Value = str;
        if (curr == 0)
            obSheet.Cells(f+4,5).Value = PrSum(abs(AccInfo.Account.RestOut));
        else
            obSheet.RANGE("E"+(f+4) +":f"+(f+4)).mergecells = true;
            obSheet.Cells(f+4,5).Value = string(PrSum(abs(AccInfo.Account.RestOut))," (Рублевый эквивалент ",abs(AccInfo.Account.RestOutEQ),")");
        end;
        kod_overdraft =   index(AccInfo.Account.t_typeAccount,"О");//sokolov C-17499-6
        if (not curr) 
            if (not PageAutoNumber)
             debugbreak;
             if ( (kod_overdraft != 0) or ((fgBank.is_NBS) or (fgBank.is_GO)) )//Sokolov C-17499-6
                otstup = 20;
             else
                otstup = 9;
             end;
                if ((obSheet.Range(string("A"+(exst)+":a"+(f+otstup))).height>610))
                    if ((fgBank.is_NBS) or (fgBank.is_GO))
                        obSheet.Cells(f+6,1).pagebreak = true;
                        obSheet.RANGE("A"+(f+6)+":h"+(f+6)).mergecells = true;
                        obSheet.RANGE("A"+(f+6)+":h"+(f+6)).horizontalalignment = 4;
                        page = page + 1;
                        obSheet.Cells(f+6,1).Value = string("Страница ",page);
                    else
                        obSheet.Range("A"+(f)+":h"+(f)).EntireRow.Insert;
                        obSheet.Cells(f,1).pagebreak = true;  //Sokolov C-17499-6 изменил значение (f вместо f+6)
                        obSheet.RANGE("A"+(f)+":h"+(f)).mergecells = true;
                        obSheet.RANGE("A"+(f)+":h"+(f)).horizontalalignment = 4;
                        page = page + 1;
                        obSheet.Cells(f,1).Value = string("Страница ",page);
                        f = f +1; 
                    end;//Sokolov C-17499-6
                    s = 0;
                    exst = 0;
                    while (s < asize(k))
                        exst = exst + k(s);
                        s = s + 1;
                    end;
                    if (exst == 1)
                        exst = 0;
                    end;
                    k(asize(k)) = f - exst;
                end;
            end;
            
            if ( (kod_overdraft != 0) or ((fgBank.is_NBS) or (fgBank.is_GO)) )   //Sokolov C-17499-6  
                if ( (front) or (not PRINT_OVERDRAFT) )
                    obSheet.Range("A"+(f+8)+":e"+(f+8)).mergecells = true;
                    obSheet.Cells(f+8,1).HorizontalAlignment = 3;
                    obSheet.Cells(f+8,1).Value= "Информация об овердрафте по счету";
                    obSheet.Range("A"+(f+9)+":c"+(f+9)).mergecells = true;
                    obSheet.Range("A"+(f+10)+":c"+(f+10)).mergecells = true;
                    obSheet.Range("A"+(f+11)+":c"+(f+11)).mergecells = true;
                    obSheet.Range("A"+(f+12)+":c"+(f+12)).mergecells = true;
                    obSheet.Range("A"+(f+13)+":c"+(f+13)).mergecells = true;
                    obSheet.Range("A"+(f+14)+":c"+(f+14)).mergecells = true;
                    obSheet.Range("d"+(f+9)+":e"+(f+9)).mergecells = true;
                    obSheet.Range("d"+(f+10)+":e"+(f+10)).mergecells = true;
                    obSheet.Range("d"+(f+11)+":e"+(f+11)).mergecells = true;
                    obSheet.Range("d"+(f+12)+":e"+(f+12)).mergecells = true;
                    obSheet.Range("d"+(f+13)+":e"+(f+13)).mergecells = true;
                    obSheet.Range("d"+(f+14)+":e"+(f+14)).mergecells = true;
                end;
                v_proc1 = proc1;
                v_proc2 = proc2;
                v_proc3 = proc3;
                v_proc4 = proc4;
                v_proc5 = proc5;
                v_proc6 = proc6;
                v_proc7 = proc7;
                v_proc8 = proc8;
                v_proc9 = proc9;
                v_proc10 = proc10;
                if(front)
                   ov_rs = getoverdraftdata(OvConnection,
                                            ПолучитьКодСубъекта(GetPartyByAccount(AccInfo.Account.Acc), 1),
                                            {MFO_BANK},
                                            1, 
                                            AccInfo.datein);
                end;
                if(ov_rs and front)
                    if(ov_rs.m_value[0] == 0)
                        v_proc1  = ov_rs.m_value[3];
                        v_proc2  = ov_rs.m_value[6];
                        v_proc3  = ov_rs.m_value[14];
                        v_proc4  = ov_rs.m_value[5];
                        v_proc5  = ov_rs.m_value[7];
                        v_proc6  = ov_rs.m_value[10];
                        v_proc7  = ov_rs.m_value[8];
                        v_proc8  = ov_rs.m_value[11];
                        v_proc9  = ov_rs.m_value[13];
                        v_proc10 = ov_rs.m_value[12];
                    end;
                end;
                if ( (front) or (not PRINT_OVERDRAFT) )
                    obSheet.Cells(f+9,1).Value = string("Лимит овердрафта: ",                v_proc1) ;
                    obSheet.Cells(f+10,1).Value = string("Тип овердрафта: ",                 v_proc2) ;
                    obSheet.Cells(f+11,1).Value = string("Ставка: ",                         v_proc3) ;
                    obSheet.Cells(f+12,1).Value = string("Доступный лимит: ",                v_proc4) ;
                    obSheet.Cells(f+9,4).Value = string("Текущая задолженность: ",           v_proc5) ;
                    obSheet.Cells(f+10,4).Value = string("% по текущей задолженности: ",     v_proc6) ;
                    obSheet.Cells(f+11,4).Value = string("Просроченная задолженность: ",     v_proc7) ;
                    obSheet.Cells(f+12,4).Value = string("% по просроченной задолженности: ",v_proc8) ;
                    obSheet.Cells(f+13,4).Value = string("Очередное погашение: сумма ",      v_proc9) ;
                    obSheet.Cells(f+14,4).Value = string("      гасить до: ",                v_proc10) ;
                    obSheet.Range("A"+(f+8)+":e"+(f+14)).Borders.Weight = 2;
                    obSheet.Range("A"+(f+8)+":e"+(f+14)).Font.size = 8;
                end;
            end; //Sokolov C-17499-6  
            ov_rs = null;
            data = trsbdataset("select sysdate as datatime from dual");
            data.movenext;
            if ( (fgBank.is_NBS) or (fgBank.is_GO) ) //Sokolov C-17499-6  для банков пойдем и НБС оставил по старому
                if (flag == 4)
                    obSheet.Range("A"+(f+16)+":e"+(f+18)).mergecells = true;
                    obSheet.Cells(f+16,1).HorizontalAlignment = 2;
                    obSheet.Cells(f+16,1).VerticalAlignment = 2;
                    obSheet.Cells(f+16,1).Value = info ;
                    obSheet.Range("A"+(f+16)+":e"+(f+18)).Borders.Weight = 2;
                    obSheet.Cells(f+19,8).font.size = 6;
                    obSheet.Cells(f+19,8).value = string("Выписка изготовлена ",data.datatime);
                else
                   obSheet.Cells(f+16,8).font.size = 6;
                   obSheet.Cells(f+16,8).value = string("Выписка изготовлена ",data.datatime);
                end;
            else
                if ( (kod_overdraft != 0) and ((front) or (not PRINT_OVERDRAFT)) )//Sokolov C-17499-6
                    if (flag == 4)
                        obSheet.Range("A"+(f+16)+":e"+(f+18)).mergecells = true;
                        obSheet.Cells(f+16,1).HorizontalAlignment = 2;
                        obSheet.Cells(f+16,1).VerticalAlignment = 2;
                        obSheet.Cells(f+16,1).Value = info ;
                        obSheet.Range("A"+(f+16)+":e"+(f+18)).Borders.Weight = 2;
                        obSheet.Cells(f+19,8).font.size = 6;
                        obSheet.Cells(f+19,8).HorizontalAlignment = 4;
                        obSheet.Cells(f+19,8).value = string("Выписка изготовлена ",data.datatime);
                    else
                       
                       obSheet.Cells(f+16,8).font.size = 6;
                       obSheet.Cells(f+16,8).HorizontalAlignment = 4;
                       obSheet.Cells(f+16,8).value = string("Выписка изготовлена ",data.datatime);
                    end;
                else //Sokolov C-17499-6
                    if (flag == 4)
                        obSheet.Range("A"+(f+7)+":e"+(f+9)).mergecells = true;
                        obSheet.Cells(f+7,1).HorizontalAlignment = 2;
                        obSheet.Cells(f+7,1).VerticalAlignment = 2;
                        obSheet.Cells(f+7,1).Value = info ;
                        obSheet.Range("A"+(f+7)+":e"+(f+9)).Borders.Weight = 2;
                        obSheet.Cells(f+10,8).font.size = 6;
                        obSheet.Cells(f+10,8).HorizontalAlignment = 4;
                        obSheet.Cells(f+10,8).value = string("Выписка изготовлена ",data.datatime);
                    else
                       
                       obSheet.Cells(f+7,8).font.size = 6;
                       obSheet.Cells(f+7,8).HorizontalAlignment = 4;
                       obSheet.Cells(f+7,8).value = string("Выписка изготовлена ",data.datatime);
                    end;
                end; 
            end;//Sokolov C-17499-6
            if (not PageAutoNumber)
                obSheet.Cells(f+20,1).pagebreak = true;
            end;
            f = f + 20;
            s = 0;
            exst = 0;
            while (s < asize(k))
                exst = exst + k(s);
                s = s + 1;
            end;
            k(asize(k)) = f - exst;
            f = f + 11;
            if (not PageAutoNumber)
                obSheet.Cells(tab-8,8).HorizontalAlignment = 4;
                obSheet.Cells(tab-7,8).HorizontalAlignment = 4;
                obSheet.Cells(tab-8,8).Value = string("Страница 1");
                obSheet.Cells(tab-7,8).Value = string("Всего страниц ",page);
                page = 1;
            end;
        else
            if ((obSheet.Range(string("A"+(exst)+":a"+(f+6))).height>610))
                obSheet.Cells(f+6,1).pagebreak = true;
                obSheet.RANGE("A"+(f+6)+":j"+(f+6)).mergecells = true;
                obSheet.RANGE("A"+(f+6)+":j"+(f+6)).horizontalalignment = 4;
                page = page + 1;
                obSheet.Cells(f+6,1).Value = string("Страница ",page);
                s = 0;
                exst = 0;
                while (s < asize(k))
                   exst = exst + k(s);
                   s = s + 1;
                end;
                if (exst == 1)
                   exst = 0;
                end;
                k(asize(k)) = f - exst;
            end;
            data = trsbdataset("select sysdate as datatime from dual");
            data.movenext;
            if (flag == 4)
                obSheet.Range("A"+(f+2)+":e"+(f+4)).mergecells = true;
                obSheet.Cells(f+2,1).HorizontalAlignment = 2;
                obSheet.Cells(f+2,1).VerticalAlignment = 2;
                obSheet.Cells(f+2,1).Value = info ;
                obSheet.Range("A"+(f+2)+":e"+(f+4)).Borders.Weight = 2;
                obSheet.Cells(f+5,8).font.size = 6;
                obSheet.Cells(f+5,8).HorizontalAlignment = 4;;
                obSheet.Cells(f+5,8).value = string("Выписка изготовлена ",data.datatime);
            else
                obSheet.Cells(f+5,8).font.size = 6;
                obSheet.Cells(f+5,8).HorizontalAlignment = 4;
                obSheet.Cells(f+5,8).value = string("Выписка изготовлена ",data.datatime);
            end;
            obSheet.Cells(f+6,1).pagebreak = true;
            f = f + 6;
            s = 0;
            exst = 0;
            while (s < asize(k))
                exst = exst + k(s);
                s = s + 1;
            end;
            k(asize(k)) = f - exst;
            f = f + 11;
            obSheet.Cells(tab-8,8).HorizontalAlignment = 4;
            obSheet.Cells(tab-7,8).HorizontalAlignment = 4;
            obSheet.Cells(tab-8,10).Value = string("Страница 1");
            obSheet.Cells(tab-7,10).Value = string("Всего страниц ",page);
            page = 1;
        end;
    end;
    if (flag <=1)
        FlushPrint(AccInfo);
        if (need_print)
            [];
        end;
    else
        PRB.Size = 0;
    end;

END;        //  private macro printFooter

// KS 23.08.2010 I-056427 РС 6 ГЭБ, ВЫПИСКИ
// Процедура поиска наименования счета
private MACRO НаименованиеСчета(PaymentID, Type, Acc, Name)             //28.01.2013 AAN C-16016 теперь процедура смотрит в примечание 7
    var Query, QueryAcc, Data, DataAcc, date;                                              // 27.03.2013 AAN  R-171143-2
    if( (PaymentID != NULL) and ( Acc != NULL ) and (type == 0) )                       // 27.03.2013 AAN  R-171143-2
        Query = RSDCommand(" select pp.t_valuedate from dpmpaym_dbt pp "+
                           "  where PP.T_PAYMENTID = " + PaymentID);
        Query.execute();
        Date = TRsbDataSet(Query);
        date.movenext();
        Query = RSDCommand(" SELECT   NOTE.T_DATE, " +
                           "          NOTE.T_VALIDTODATE, " +
                           "          ACC.T_ACCOUNT, " +
                           "          UTL_RAW.cast_to_varchar2 (t_text) t_name_ac " +
                           "  FROM  dnotetext_dbt note, daccount_dbt acc " +
                           "  WHERE note.t_objecttype = 4 AND note.t_notekind = 7 " +
                           "    AND note.t_documentid = rsb_rep_ac.makeaccountid (TO_CHAR (ACC.T_ACCOUNT), 0, 1, NULL) " +
                           "    AND ACC.T_ACCOUNT = '" + Acc + "'" +
                           "    AND to_date('" + substr(string(date.t_valuedate), 1, 10) + "', 'dd.mm.yyyy') BETWEEN NOTE.T_DATE AND NOTE.T_VALIDTODATE" );
        Query.execute();
        Data = TRsbDataSet(Query);
        if( Data.MoveNext() )
            return  Data.t_name_ac;
        end;
        // end AAN
        // если в примечании ничего нет то берём название счёта из платежа
        Query = RSDCommand(" SELECT p.t_payername name" +
                          "  FROM dpmrmprop_dbt p" +
                          "  WHERE p.t_paymentid = ?");
        Query.addParam("", RSDBP_IN, PaymentID);
        Query.execute();
        Data = TRsbDataSet(Query);
        if( Data.MoveNext() )
            return  Data.Name;
        end;
    elif( (PaymentID != NULL) and (type == 1) )                                // 27.03.2013 AAN  R-171143-2 BEGIN
        // Получатель
        Query = RSDCommand("  SELECT p.t_receivername name" +
                               "  FROM dpmrmprop_dbt p" +
                               "  WHERE p.t_paymentid = ?");
        Query.addParam("", RSDBP_IN, PaymentID);
        Query.execute();
        Data = TRsbDataSet(Query);
        if( Data.MoveNext() )
            return  Data.Name;
        end;                            // 27.03.2013 AAN  R-171143-2   END
    end;
    return Name;
    /*    AAN 
    Query = RSDCommand("select t_nameaccount name" +
                     "  from daccount_dbt" +
                     " where t_account = ?");
    Query.addParam("", RSDBP_IN, Acc);
    Query.execute();
    Data = TRsbDataSet(Query);
    if( Data.MoveNext() )
        return  Data.Name;
    end;
    // Если не найден, то возвращаем наименование одной из сторон
    return Name;*/
END;        // private MACRO НаименованиеСчета(PaymentID, Type, Acc, Name)

private var ground = TArray();

private macro printCarryDocument(accInfo, docs)
    
    var numb_document, i, str;
    var numb_document_length = strlen(docs.numb_document);
    if (numb_document_length > wNUMBD)
        numb_document = substr(docs.numb_document, numb_document_length - wNUMBD + 1);
    else
        numb_document = docs.numb_document;
    end;
    var linesQuantity;
    
    var user_type_acc = RSL_Account (docs.dataset.receiveraccount, docs.dataSet.code_currency);     //  24.07.2013 AAN  C-22055
    if( index(user_type_acc.rec.usertypeaccount, "Ю" ))                                         // проверяем л/с на польз. тип Ю
        Flag_acc_is_carry = true;
        docs.dataset.receiveraccount = docs.GetCorrectCbCorrespondingAccount(true);
        Flag_acc_is_carry = false;
    end;
        // END   24.07.2013 AAN  C-22055
    
    if((flag != 2) and (flag != 1))
        if ((accInfo.currentFormat == ACC_FORMATS_BANK) or accInfo.prGround)
            ground.size = 0;
            if (docs.ground != null)
                if (strlen(docs.ground) <= wGROUND)
                    ground[0] = docs.ground;
                else
                    ground = strTransferByWord(docs.ground, wGROUND);
                end;
            else
                ground[0] = "";
            end;
            linesQuantity = ground.size;
        else
            linesQuantity = 1;
        end;
    else
        //TAM 14.10.11 I-00101393-2
        //begin
        var linesCntName, linesCntGround, Name_info, query_1,query_2, data;
        var NameInfo: TArray;//массив для разбивки наименования на строки
        var AccBank = "";
        var errAn:integer;
        GetRegistryValue("PS\\REQOPENACC\\СЧЕТА БАНКА", V_STRING, AccBank, errAn);
        //Счета исключения из счетов банка
        var Excl_AccBank = "423*, 426*, 40820*, 40817*";
        //запрос для условно-клиентских счетов при отсутвии ИНН\КПП (16 код) у банка
        query_1 = RSDCommand("select PARTY.T_NAME" +
                             "  from dparty_dbt party" +
                            "  where party.t_partyid = ?");
        //запрос для условно-клиентских счетов при наличии ИНН\КПП у банка
        query_2 = RSDCommand("select PARTY.T_NAME, CODE.T_CODE" +
                             "  from dparty_dbt party, dobjcode_dbt code" +
                            "  where party.t_partyid = ? and" +
                                  "  party.t_partyid = code.t_objectid and" +
                                  "  code.t_objecttype =3 and code.t_codekind = 16");
        //колличество строк в разбивке по основанию
        if ((accInfo.currentFormat == ACC_FORMATS_BANK) or accInfo.prGround)
            ground.size = 0;
            if (docs.ground != null)
                if (strlen(docs.ground) <= wGROUND)
                    ground[0] = docs.ground;
                else
                    ground = strTransferByWord(docs.ground, wGROUND);
                end;
            else
                ground[0] = "";
            end;
            linesCntGround = ground.size;
        else
            linesCntGround = 1;
        end;
        //счет находится в плательщике
        if (docs.account == docs.dataset.payeraccount)
            //если это счет банка - то инфу формируем по банку
            if((not CompareStrWithMasks(AccBank,Docs.dataset.payeraccount)) and (CompareStrWithMasks(Excl_AccBank, Docs.dataset.payeraccount)))
                query_2.addParam("", RSDBP_IN, Docs.payerbankid);
                query_2.execute();
                data = TRsbDataSet(query_2);
                if (data.MoveNext())
                    Name_info = string (data.name, ", ИНН/КПП: ", data.code);
                else
                    query_1.addParam("", RSDBP_IN, Docs.payerbankid);
                    query_1.execute();
                    data = TRsbDataSet(query_1);
                    if(data.movenext())
                        Name_info = string (data.name);
                    end;
                end;
            //инфа по владельцу счета
            else
                if ((Docs.dataset.docinf_payerinn != "") and (Docs.dataset.docinf_payerinn != "000000000000"))
                    if(Index(Docs.dataset.docinf_payername, "ИП") == 0)//не ИП
                        //Name_info = string (Docs.dataset.docinf_payername,", ИНН/КПП: ", Docs.dataset.docinf_payerinn, "/", string(substr(Docs.dataset.docinf_payerinn,1,4),"01001"));    //28.01.2013 AAN C-16016
                        Name_info = string (Наименованиесчета(Docs.dataset.docinf_paymentid,0,Docs.Account,Docs.dataset.docinf_payername),
                                            ", ИНН/КПП: ", 
                                            Docs.dataset.docinf_payerinn, 
                                            "/", 
                                            string(substr(Docs.dataset.docinf_payerinn,1,4),"01001"));
                    else
                        //Name_info = string (Docs.dataset.docinf_payername,", ИНН/КПП: ", Docs.dataset.docinf_payerinn, "/", "0");        //28.01.2013 AAN C-16016
                        Name_info = string (Наименованиесчета(Docs.dataset.docinf_paymentid,0,Docs.Account,Docs.dataset.docinf_payername),
                                            ", ИНН/КПП: ", 
                                            Docs.dataset.docinf_payerinn, 
                                            "/", 
                                            "0");
                    end;
                else 
                    //Name_info = string (Docs.dataset.docinf_payername);          //28.01.2013 AAN C-16016
                    Name_info = string (Наименованиесчета(Docs.dataset.docinf_paymentid,0,Docs.Account,Docs.dataset.docinf_payername));
                end;
            end;
        //счет находится в получателе
        else
            //проверка на принадлежность счетов банка
            if((not CompareStrWithMasks(AccBank,Docs.dataset.receiveraccount)) and (CompareStrWithMasks(Excl_AccBank, Docs.dataset.receiveraccount)))
                query_2.addParam("", RSDBP_IN, Docs.receiverbankid);
                query_2.execute();
                data = TRsbDataSet(query_2);
                if (data.MoveNext())
                    Name_info = string (data.name, ", ИНН/КПП: ", data.code);
                else
                    query_1.addParam("", RSDBP_IN, Docs.receiverbankid);
                    query_1.execute();
                    data = TRsbDataSet(query_1);
                    if(data.movenext())
                        Name_info = string (data.name);
                    end;
                end;
            else 
                if ((Docs.dataset.docinf_receiverinn != "") and (Docs.dataset.docinf_receiverinn != "000000000000"))
                    if(Index(Docs.dataset.docinf_receivername, "ИП") ==0)//не ИП
                        //Name_info = string (Docs.dataset.docinf_receivername,", ИНН/КПП: ", Docs.dataset.docinf_receiverinn, "/", string(substr(Docs.dataset.docinf_receiverinn,4),"01001"));          //28.01.2013 AAN C-16016
                        Name_info = string (Наименованиесчета(Docs.dataset.docinf_paymentid, 1, Docs.Account, Docs.dataset.docinf_receivername),       // 23.04.2013 AAN  I-00361027-2
                                            ", ИНН/КПП: ", 
                                            Docs.dataset.docinf_receiverinn, 
                                            "/", 
                                            string(substr(Docs.dataset.docinf_receiverinn,4),"01001"));
                    else
                        //Name_info = string (Docs.dataset.docinf_receivername,", ИНН/КПП: ", Docs.dataset.docinf_receiverinn, "/","0");          //28.01.2013 AAN C-16016
                        Name_info = string (Наименованиесчета(Docs.dataset.docinf_paymentid, 1, Docs.Account, Docs.dataset.docinf_receivername),   // 23.04.2013 AAN  I-00361027-2
                                            ", ИНН/КПП: ",
                                            Docs.dataset.docinf_receiverinn,
                                            "/","0");
                    end;
                else
                    Name_info = string (Docs.dataset.docinf_receivername);          //28.01.2013 AAN C-16016
                    //Name_info = string (Наименованиесчета(Docs.dataset.docinf_paymentid,0,Docs.Account,Docs.dataset.docinf_payername));// 23.04.2013 AAN  I-00361027-2
                end;
            end;
        end;
        //сформированое наименование разбивам на строки
        if ((accInfo.currentFormat == ACC_FORMATS_BANK) or accInfo.prGround)
            if(Name_info != null)
                if(strlen(Name_info) <= 37)
                    NameInfo = strTransferByWord(Name_info,37);//Name_info;
                else
                    NameInfo = strTransferByWord(Name_info,37);
                end;
            else 
                NameInfo = strTransferByWord(" ",37);
            end;
            linesCntName = NameInfo.size;
        else 
            linesCntName = 1;
        end;
        //общее колво строк для записи
        var tm = 0;
        var delta = 0;
        //выбираем где больше строковая разбивка 
        if (linesCntGround > linesCntName)
                delta  = linesCntGround - linesCntName;
                for (tm, linesCntName, linesCntGround-1) 
                    NameInfo[tm] = "";
                end;
                linesQuantity = linesCntGround;
        elif (linesCntGround < linesCntName) 
            delta  = linesCntName - linesCntGround;
            for (tm, linesCntGround, linesCntName-1) 
                ground[tm] = "";
            end;
            linesQuantity = linesCntName;
        else 
            linesQuantity = linesCntName;
        end;
        //end TAM I-00101393-2 14.10.11
    end;
    
    accInfo.statementLineNumber = accInfo.statementLineNumber + 1;
    i = 0;
    
    while (i < linesQuantity)
        if (accInfo.currentFormat == ACC_FORMATS_BANK)
            if (i == 0)
                str =       strAlign(docs.docT, wSPOD, STR_ALIGN_RIGHT)
                    + "│" + strAlign(String(accInfo.statementLineNumber), wSTRNUM, STR_ALIGN_RIGHT)
                    + "│" + strAlign(String(docs.dataSet.date_carry:f), wDATE, STR_ALIGN_RIGHT)
                    + "│" + strAlign(docs.shifr_oper, wSHIFR, STR_ALIGN_RIGHT)
                    + "│" + strAlign(numb_document, wNUMBD, STR_ALIGN_RIGHT)
                    + "│" + strAlign(ground[i], wGROUND, STR_ALIGN_LEFT)
                    + "│" + strAlign(String(docs.account), wACC, STR_ALIGN_CENTER);
                    // Тихомиров. Доработка Для ПРББ
                if (Docs.SumDebit>0)
                    str = str + "│" + strAlign(prSum(docs.sumDebit), wSUMM, STR_ALIGN_RIGHT);
                else
                    str = str + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT);
                end;
                if (Docs.SumCredit>0)
                    str = str + "│" + strAlign(prSum(docs.sumCredit), wSUMM, STR_ALIGN_RIGHT);
                else
                    str = str + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT);
                end;
                if (accInfo.needEquivalent)
                    str = str + "│" + strAlign(prSum(docs.sumDebitEq), wSUMM, STR_ALIGN_RIGHT)
                              + "│" + strAlign(prSum(docs.sumCreditEq), wSUMM, STR_ALIGN_RIGHT);
                end;
            else
                str =       accInfo.ACC_FORMATS_BANK_EMPTY_LINES1
                    + "│" + strAlign(ground[i], wGROUND, STR_ALIGN_LEFT)
                          + accInfo.ACC_FORMATS_BANK_EMPTY_LINES2;
                if (accInfo.needEquivalent)
                    str = str + accInfo.ACC_FORMATS_BANK_EMPTY_LINES3;
                end;
            end;
            str = str + "│";
            if (accInfo.dblPrint)
                println(str, mkstr(" ", maxWidth - strlen(str) + DBLPRN_DELIMITER_WIDTH), str);
            else
                println(str);
            end;
        else
            if (flag == 0)
                if (i == 0)             
                    str =       strAlign(docs.docT, wSPOD, STR_ALIGN_RIGHT)
                          + "│" + strAlign(String(docs.dataSet.date_carry:f), wDATE, STR_ALIGN_RIGHT)
                          + "│" + strAlign(docs.shifr_oper, wSHIFR, STR_ALIGN_RIGHT)
                          + "│" + strAlign(numb_document, wNUMBD, STR_ALIGN_RIGHT);
                    if ( (accInfo.account.currency == NATCUR) and ( (AccInfo.OutForm == ACC_FORMS_NOTHING) and (PRINT_CORRACC) ) ) // KS 22.03.2011 Убрать корсчет для обычной выписки без приложений
                        str = str + "│" + strAlign(docs.corrBankAcc, wACC, STR_ALIGN_CENTER);
                    end;
                    if (PRINT_BIC)
                        str = str + "│" + strAlign(docs.Bic, wBIC, STR_ALIGN_RIGHT);
                    end;
                    str = str //+ "│" + strAlign(docs.Bic, wBIC, STR_ALIGN_RIGHT)
                                + "│" + strAlign(String(docs.account:f), wACC, STR_ALIGN_CENTER);
                    if (Docs.SumDebit>0)
                        str = str + "│" + strAlign(prSum(docs.sumDebit), wSUMM, STR_ALIGN_RIGHT);
                    else
                        str = str + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT);
                    end;
                    if (Docs.SumCredit>0)
                        str = str + "│" + strAlign(prSum(docs.sumCredit), wSUMM, STR_ALIGN_RIGHT);
                    else
                        str = str + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT);
                    end;
                    if (accInfo.needEquivalent)
                        str = str + "│" + strAlign(prSum(docs.sumDebitEq), wSUMM, STR_ALIGN_RIGHT)
                                  + "│" + strAlign(prSum(docs.sumCreditEq), wSUMM, STR_ALIGN_RIGHT);
                    end;
                    if (accInfo.prGround)
                        str = str + "│" + strAlign(ground[i], wGROUND, STR_ALIGN_LEFT);
                    end;
                else
                str = accInfo.ACC_FORMATS_CLIENT_EMPTY_LINES1
                    + accInfo.ACC_FORMATS_CLIENT_EMPTY_LINES2
                    + accInfo.ACC_FORMATS_CLIENT_EMPTY_LINES3
                    + accInfo.ACC_FORMATS_CLIENT_EMPTY_LINES4;
                if (accInfo.prGround)
                    str = str + "│" + strAlign(ground[i], wGROUND, STR_ALIGN_LEFT);
                end;
            end;
            str = str + "│";
            if (accInfo.dblPrint)
                println(str, mkstr(" ", maxWidth - strlen(str) + DBLPRN_DELIMITER_WIDTH), str);
            else
                println(str);
            end;
        end;
/********** 151 ***********/      /*расширенная выписка с учетом эквивалента (Глушин С.П. по R-36747-2)*/
        if (flag == 1)
            if (i == 0)             
                str =   strAlign("│", wSPOD + 1, STR_ALIGN_RIGHT)
                +       strAlign(String(docs.dataSet.date_carry:f), wDATE, STR_ALIGN_RIGHT)
                + "│" + strAlign(docs.shifr_oper, wSHIFR, STR_ALIGN_RIGHT)
                + "│" + strAlign(numb_document, wNUMBD, STR_ALIGN_RIGHT)
                + "│" + strAlign(docs.Bic, wBIC+3, STR_ALIGN_RIGHT);   //Глушин С.П по R-36747-2 добавил выбор валюты в заголовке
                if (docs.account==docs.dataset.payeraccount)
                    if (strlen(docs.bic) > 1)
                        str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_payerbankname), 1, 30), 30, STR_ALIGN_RIGHT);
                    else
                        str = str + "│" + strAlign("", 30, STR_ALIGN_RIGHT);                             
                    end;
                        str = str + "│" + strAlign(strsubst(string(PutAccF(Docs.dataset.payeraccount)), ".", ""), (wACC - 4), STR_ALIGN_RIGHT);                        
//                      str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_payername),1,40), 40, STR_ALIGN_RIGHT);
                        str = str + "│" + strAlign(nameinfo[i], 40, STR_ALIGN_RIGHT);  // vihrov 23.07.2012 I-00219224-2
                else
                    if (strlen(docs.bic) > 1)
                        str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_receiverbankname), 1, 30), 30, STR_ALIGN_RIGHT);
                    else
                        str = str + "│" + strAlign("", 30, STR_ALIGN_RIGHT);
                    end;
                    str = str + "│" + strAlign(strsubst(string(PutAccF(Docs.dataset.receiverAccount)), ".", ""), (wACC - 4), STR_ALIGN_RIGHT);
//                  str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_receivername),1,40), 40, STR_ALIGN_RIGHT);                        
                    str = str + "│" + strAlign(nameinfo[i], 40, STR_ALIGN_RIGHT); // vihrov 23.07.2012 I-00219224-2
                end;
                // Тихомиров. Доработка Для ПРББ                                
                if (Docs.SumDebit > 0)
                    str = str + "│" + strAlign(string(PrSum(Docs.SumDebit), "Д"), wSUMM, STR_ALIGN_RIGHT);
                elif (Docs.SumCredit > 0)                            
                    str = str + "│" + strAlign(string(PrSum(Docs.SumCredit), "К"), wSUMM, STR_ALIGN_RIGHT);
                else  
                    str = str + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT);
                end;
                if (accInfo.needEquivalent)
                    if (Docs.SumDebitEq > 0)
                        str = str + "│" + strAlign(string(prSum(docs.sumDebitEq), "Д"), wSUMM, STR_ALIGN_RIGHT);
                    elif (Docs.SumCreditEq > 0)
                        str = str + "│" + strAlign(string(prSum(docs.sumCreditEq), "К"), wSUMM, STR_ALIGN_RIGHT);
                    else
                        str = str + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT);
                    end;     
                end;
                if (accInfo.prGround)
                    str = str + "│" + strAlign(ground[i], wGROUND, STR_ALIGN_LEFT);
                end;
            else
                str =   strAlign("│", wSPOD + 1, STR_ALIGN_RIGHT)
                      + strAlign("",  wDATE,     STR_ALIGN_RIGHT)
                + "│" + strAlign("",  wSHIFR,    STR_ALIGN_RIGHT)
                + "│" + strAlign("",  wNUMBD,    STR_ALIGN_RIGHT)
                + "│" + strAlign("",  wBIC + 3,  STR_ALIGN_RIGHT);                                             
                if (strlen(docs.bic) > 1)
                    if (docs.account == docs.dataset.payeraccount)
                        str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_payerbankname), (30 * i + 1), 30), 30, STR_ALIGN_RIGHT);
                    else
                        str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_receiverbankname),(30 * i + 1), 30), 30, STR_ALIGN_RIGHT);
                    end;
                else
                    str = str + "│" + strAlign("", 30, STR_ALIGN_RIGHT);                       
                end;
                str = str + "│" + strAlign("", (wACC - 4), STR_ALIGN_RIGHT);
                if (docs.account == docs.dataset.payeraccount)
//                  str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_payername),(40*i+1),40), 40, STR_ALIGN_RIGHT);
                    str = str + "│" + strAlign(nameinfo[i], 40, STR_ALIGN_RIGHT); // vihrov 23.07.2012 I-00219224-2
                else
//                  str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_receivername),(40*i+1),40), 40, STR_ALIGN_RIGHT);
                    str = str + "│" + strAlign(nameinfo[i], 40, STR_ALIGN_RIGHT); // vihrov 23.07.2012 I-00219224-2
                end;
                str = str + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT);                    
                if (accInfo.needEquivalent)
                    str = str + "│" + strAlign("", wSUMM, STR_ALIGN_RIGHT);
                end;
                str = str + "│" + strAlign(ground[i], wGROUND, STR_ALIGN_LEFT);
            end;
            str = str + "│";
            if (accInfo.dblPrint)
                println(str, mkstr(" ", maxWidth - strlen(str) + DBLPRN_DELIMITER_WIDTH), str);
            else
                println(str);
            end;
         /*     // Печатаем расширенную
                 if (i == 0)             
                     /*PRB_AddL_Empty(i);
                     PRB_AddL(i, Ternary(j>0, "", string(Docs.DataSet.Date_Carry:f)), wDATE,   STR_ALIGN_RIGHT);
                     PRB_AddL(i, Ternary(j>0, "", string(Docs.Shifr_Oper)),           (wSHIFR),  STR_ALIGN_RIGHT);
                     PRB_AddL(i, Ternary(j>0, "", string(Numb_Document)),             wNUMBD,  STR_ALIGN_RIGHT);
                     PRB_AddL(i, Ternary(j>0, "", string(Docs.BIC)), wBIC, STR_ALIGN_RIGHT);*/

            str =       strAlign("│", wSPOD + 1, STR_ALIGN_RIGHT)
                      + strAlign(String(docs.dataSet.date_carry:f), wDATE, STR_ALIGN_RIGHT)
                + "│" + strAlign(docs.shifr_oper, wSHIFR, STR_ALIGN_RIGHT)
                + "│" + strAlign(numb_document, wNUMBD, STR_ALIGN_RIGHT)
                + "│" + strAlign(docs.Bic, wBIC, STR_ALIGN_RIGHT);
            if (docs.account == docs.dataset.payeraccount)
                if (strlen(docs.bic) > 1)
                    str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_payerbankname), 1, 30), 30, STR_ALIGN_RIGHT);
                    //      PRB_AddL(i, substr(string(Docs.dataset.docinf_payerbankname),(30*j+1),30), 30, STR_ALIGN_RIGHT);
                else
                    str = str + "│" + strAlign("", 30, STR_ALIGN_RIGHT);
                    //      PRB_AddL(i, "", 30, STR_ALIGN_RIGHT);
                end;
                str = str + "│" + strAlign(strsubst(string(PutAccF(Docs.dataset.payeraccount)), ".", ""), (wACC - 4), STR_ALIGN_RIGHT);
                //PRB_AddL(i, Ternary(j>0, "", strsubst(string(PutAccF(Docs.dataset.payeraccount)),".","")), (wACC-4),  STR_ALIGN_RIGHT);
                //TAM I-00101393-2 14.10.11
                str = str + "│" + strAlign(NameInfo[i], 37, STR_ALIGN_RIGHT);
                /*str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_payername," ИНН: ", Docs.dataset.docinf_payerinn, " \\КПП: ", string(substr(Docs.dataset.docinf_payerinn,1,4),"01001")),1,37), 37, STR_ALIGN_LEFT);*/
                //PRB_AddL(i, substr(string(Docs.dataset.docinf_payername),(37*j+1),37), 37,  STR_ALIGN_RIGHT);
            else
                if (strlen(docs.bic) > 1)
                    str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_receiverbankname), 1, 30), 30, STR_ALIGN_RIGHT);
                    //  PRB_AddL(i, substr(string(Docs.dataset.docinf_receiverbankname),(30*j+1),30), 30, STR_ALIGN_RIGHT);
                else
                    str = str + "│" + strAlign("", 30, STR_ALIGN_RIGHT);
                    //  PRB_AddL(i, "", 30, STR_ALIGN_RIGHT);
                end;
                str = str + "│" + strAlign(strsubst(string(PutAccF(Docs.dataset.receiverAccount)), ".", ""), (wACC - 4), STR_ALIGN_RIGHT);
                //TAM I-00101393-2 14.10.11
                str = str + "│" + strAlign(NameInfo[i], 37, STR_ALIGN_RIGHT);
                //str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_receivername),1,37), 37, STR_ALIGN_RIGHT);
                //PRB_AddL(i, Ternary(j>0, "", strsubst(string(PutAccF(Docs.dataset.receiverAccount)),".","")), (wACC-4),  STR_ALIGN_RIGHT);
                //PRB_AddL(i, substr(string(Docs.dataset.docinf_receivername),(37*j+1),37), 37,  STR_ALIGN_RIGHT);
            end;
            if (Docs.SumDebit > 0)
                str = str + "│" + strAlign(string(PrSum(Docs.SumDebit), "Д"), 11, STR_ALIGN_RIGHT);
                //PRB_AddL(i, Ternary(j>0, "", string(PrSum(Docs.SumDebit),"Д")),          11, STR_ALIGN_RIGHT);
            elif (Docs.SumCredit>0)
                str = str + "│" + strAlign(string(PrSum(Docs.SumCredit), "К"), 11, STR_ALIGN_RIGHT);
                //      PRB_AddL(i, Ternary(j>0, "", string(PrSum(Docs.SumCredit),"К")),          11, STR_ALIGN_RIGHT);
            end;  
            str = str + "│" + strAlign(ground[i], wGROUND, STR_ALIGN_LEFT);
        else
            str =   strAlign("│", wSPOD + 1, STR_ALIGN_RIGHT)
                  + strAlign("",  wDATE,     STR_ALIGN_RIGHT)
            + "│" + strAlign("",  wSHIFR,    STR_ALIGN_RIGHT)
            + "│" + strAlign("",  wNUMBD,    STR_ALIGN_RIGHT)
            + "│" + strAlign("",  wBIC,      STR_ALIGN_RIGHT);
            if (strlen(docs.bic) > 1)
                if (docs.account == docs.dataset.payeraccount)
                    str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_payerbankname), (30 * i + 1), 30), 30, STR_ALIGN_RIGHT);
                else
                    str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_receiverbankname),(30 * i + 1), 30), 30, STR_ALIGN_RIGHT);
                end;
                //      PRB_AddL(i, substr(string(Docs.dataset.docinf_payerbankname),(30*j+1),30), 30, STR_ALIGN_RIGHT);
            else
                str = str + "│" + strAlign("", 30, STR_ALIGN_RIGHT);
                //      PRB_AddL(i, "", 30, STR_ALIGN_RIGHT);
            end;
            str = str + "│" + strAlign("", (wACC - 4), STR_ALIGN_RIGHT);
            if (docs.account == docs.dataset.payeraccount)
                //TAM I-00101393-2 14.10.11
                str = str + "│" + strAlign(NameInfo[i], 37, STR_ALIGN_RIGHT);
                //str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_payername),(37*i+1),37), 37, STR_ALIGN_RIGHT);
            else
                //TAM I-00101393-2 14.10.11
                str = str + "│" + strAlign(NameInfo[i], 37, STR_ALIGN_RIGHT);
                //str = str + "│" + strAlign(substr(string(Docs.dataset.docinf_receivername),(37*i+1),37), 37, STR_ALIGN_RIGHT);
            end;
            str = str + "│" + strAlign("", 11, STR_ALIGN_RIGHT);
            str = str + "│" + strAlign(ground[i], wGROUND, STR_ALIGN_LEFT);
        end;
        str = str + "│";
        if (accInfo.dblPrint)
            println(str, mkstr(" ", maxWidth - strlen(str) + DBLPRN_DELIMITER_WIDTH), str);
        else
            println(str);
        end;   */
    end;
    if ((flag == 2) and (i == 0))
        if (not f)
            f = PRB.Size - 5;
        end;
        if (Ternary(j > 0, "", string(Docs.DataSet.Date_Carry:f))!="")
            f = f + 1;
        end;
        obSheet.Cells(f,1).Value        =   string(Docs.DataSet.Date_Carry:f);
        obSheet.Cells(f,2).Value        =   string(Docs.Shifr_Oper);
        obSheet.Cells(f,3).NumberFormat =   "@";                                          // Gurin S. N. некоректная выгрузка номеров док-ов
        obSheet.Cells(f,3).Value        =   string(Numb_Document);
        obSheet.Cells(f,6).Value        =   strsubst(string(PutAccF(Docs.Account)),".","");
        obSheet.Cells(f,7).wraptext     =   true;
        if (docs.account == docs.dataset.payeraccount)
            if (strlen(docs.bic) > 1)
                obSheet.Cells(f,5).Value = string(Docs.dataset.docinf_payerbankname);
            end;
            //TAM 08.09.11 По заявке I-00091977-2
            if (Docs.dataset.docinf_payerinn != "")
                obSheet.Cells(f,7).Value = string(//Docs.dataset.docinf_payername,
                                                  Наименованиесчета(Docs.dataset.docinf_paymentid, 0, Docs.Account, Docs.dataset.docinf_payername),       // 23.04.2013 AAN  I-00361027-2
                                                  ", ИНН/КПП: ", 
                                                  Docs.dataset.docinf_payerinn, 
                                                  "/", 
                                                  string(substr(Docs.dataset.docinf_payerinn,1,4), "01001")
                                                 );
            else
                obSheet.Cells(f,7).Value = string(Docs.dataset.docinf_payername);
            end;
        else
            if (strlen(docs.bic) > 1)
                obSheet.Cells(f,5).Value = string(Docs.dataset.docinf_receiverbankname);
            end;
            //TAM 08.09.11 По заявке I-00091977-2
            if (Docs.dataset.docinf_receiverinn != "")
                obSheet.Cells(f,7).Value = string(//Docs.dataset.docinf_receivername,
                                                Наименованиесчета(Docs.dataset.docinf_paymentid, 1, Docs.Account, Docs.dataset.docinf_receivername),       // 23.04.2013 AAN  I-00361027-2
                                                ", ИНН/КПП: ", 
                                                Docs.dataset.docinf_receiverinn, 
                                                "/", 
                                                string(substr(Docs.dataset.docinf_receiverinn,1,4),"01001")
                                                );
            else
                obSheet.Cells(f,7).Value = string(Docs.dataset.docinf_receivername);
            end;
            //obSheet.Cells(f,7).Value=string(Docs.dataset.docinf_receivername);
        end;
        obSheet.Cells(f,4).Value = string(Docs.bic);
        if (curr == 0)
            if (Docs.SumDebit > 0)
                obSheet.Cells(f,8).Value = string(PrSum(Docs.SumDebit),"Д");
            elif (Docs.SumCredit > 0)
                obSheet.Cells(f,8).Value = string(PrSum(Docs.SumCredit),"К");
            end;
            // 06.11.2013 AAN  I-00440422-2
            if ((Docs.ground == "") or (Docs.ground == null))   // если основание пустое( == "" или неопределено вообще Undefined)
                obSheet.Cells(f,9).Value = " ";
            else
                if (substr(string(Docs.ground), 1, 1) != "=") // KS 02.07.2010 I-045267 I-045048 Если в поле передавать текст, начинающийся на "=", то ошибка
                    obSheet.Cells(f,9).Value = string(Docs.ground);
                else
                    obSheet.Cells(f,9).Value = "=\"" + string(Docs.ground) + "\"";
                end;
            end;
        else
            if (Docs.SumDebit > 0)
                obSheet.Cells(f,8).Value = string(PrSum(Docs.SumDebit),"Д");
            elif (Docs.SumCredit > 0)
                obSheet.Cells(f,8).Value = string(PrSum(Docs.SumCredit),"К");
            end;
            if (Docs.SumDebitEQ > 0)
                obSheet.Cells(f,9).Value = string(money(Docs.SumDebitEQ),"Д");
            elif (Docs.SumCreditEQ > 0)
                obSheet.Cells(f,9).Value = string(money(Docs.SumCreditEQ),"К");
            end;
            if (substr(string(Docs.ground), 1, 1) != "=") // KS 02.07.2010 I-045267 I-045048 Если в поле передавать текст, начинающийся на "=", то ошибка
                //TAM 30.08.11 I-00090743-2 begin
                //if(Docs.ground == null)   // 06.11.2013 AAN  I-00440422-2
                if((Docs.ground == "") or (Docs.ground == null))     // Docs.ground сравнивать с NULL или с пустой строкой
                    obSheet.Cells(f,10).Value = string(Docs.dataset.doc_ground);
                else
                    obSheet.Cells(f,10).Value = string(Docs.ground);
                end;
                //TAM end
            else
                obSheet.Cells(f,10).Value = "=\"" + string(Docs.ground) + "\"";
            end;
        end;
    end;
    if (((flag == 3) or (flag == 4)) and (i == 0))
        s = 0;
        exst = 0;
        while (s < asize(k))
            exst = exst + k(s);
            s = s + 1;
        end;
        if (not f)
            /* EVG 15/06/2011 Чтобы строчка с первым документам не въезжала в шапку.
            f=exst+PRB.Size-11;*/
            f = exst + PRB.Size - 10;
        end;
        if (Ternary(j > 0, "", string(Docs.DataSet.Date_Carry:f))!="")
            f = f + 1;
            obSheet.Cells(f,1).Value = date(Docs.DataSet.Date_Carry:f);
            if (curr == 0)
                if (Docs.SumDebit > 0)
                    obSheet.Cells(f,6).Value = string(PrSum(Docs.SumDebit));
                elif (Docs.SumCredit > 0)
                    obSheet.Cells(f,7).Value = string(PrSum(Docs.SumCredit));
                end;
                if (substr(string(Docs.ground), 1, 1) != "=") // KS 02.07.2010 I-045267 I-045048 Если в поле передавать текст, начинающийся на "=", то ошибка
                    /* Коркин И.Н. I-089118 */
                    //if(Docs.ground == null)   // 06.11.2013 AAN  I-00440422-2
                    if((Docs.ground == "") or (Docs.ground == null))     // Docs.ground сравнивать с NULL или с пустой строкой
                        obSheet.Cells(f,8).Value = string(Docs.dataset.doc_ground);
                    else
                        obSheet.Cells(f,8).Value = string(Docs.ground);
                    end;
                else
                    obSheet.Cells(f,8).Value = "=\"" + string(Docs.ground) + "\"";
                end;
                obSheet.Cells(f,2).Value = string(Numb_Document);
                obSheet.Cells(f,4).Value = string(PutAccF(Docs.Account));
                if (docs.account == docs.dataset.payeraccount)
                    obSheet.Cells(f,5).Value = string(Docs.dataset.docinf_payerbankname, ", ",Docs.dataset.docinf_payerbankcode);
                    //TAM I-00065886-2 12.09.11
                    obSheet.Cells(f,3).Value = string(strsubst(Docs.dataset.docinf_payername, "=", ""),", ",Docs.dataset.docinf_payerinn);
                    // KS 23.08.2010 I-056427 РС 6 ГЭБ, ВЫПИСКИ
                    //                        должно подтягивать наименование счета
                    if (SOURCE_OF_NAME == 0)
                        obSheet.Cells(f,3).Value = string(strsubst(НаименованиеСчета(
                                                                                    Docs.dataset.docinf_paymentid,
                                                                                    0,
                                                                                    Docs.Account,
                                                                                    Docs.dataset.docinf_payername),
                                                                    "=", ""),
                                                            ", ",
                                                            Docs.dataset.docinf_payerinn);
                    elif (SOURCE_OF_NAME == 1)
                        obSheet.Cells(f,3).Value=string(strsubst(Docs.dataset.docinf_payername,"=",""),", ",Docs.dataset.docinf_payerinn);
                    end;
                else
                    obSheet.Cells(f,5).Value=string(Docs.dataset.docinf_receiverbankname, ", ",Docs.dataset.docinf_receiverbankcode);
                    //TAM I-00065886-2 12.09.11
                    if (Docs.SumDebit > 0)
                        obSheet.Cells(f,3).Value=string(strsubst(Docs.dataset.docinf_receivername,"=",""), ", ",Docs.dataset.docinf_receiverinn);
                    end;
                    // KS 23.08.2010 I-056427 РС 6 ГЭБ, ВЫПИСКИ
                    //                        должно подтягивать наименование счета
                    if (SOURCE_OF_NAME == 0)
                        obSheet.Cells(f,3).Value=string(strsubst(НаименованиеСчета(
                                                                                    Docs.dataset.docinf_paymentid,
                                                                                    1,
                                                                                    Docs.Account,
                                                                                    Docs.dataset.docinf_receivername),
                                                                "=", ""),
                                                                ", ", Docs.dataset.docinf_receiverinn);
                    elif (SOURCE_OF_NAME == 1)
                        obSheet.Cells(f,3).Value = string(strsubst(Docs.dataset.docinf_receivername, "=", ""), ", ",Docs.dataset.docinf_receiverinn);
                    end;
                end;
            else
                obSheet.Cells(f,2).Value = date(Docs.DataSet.Date_carry:f); // Gurin S. N. Date_carry вместо doc_date_value
                if (Docs.SumDebit > 0)
                    obSheet.Cells(f,7).Value = string(PrSum(Docs.SumDebit));
                elif (Docs.SumCredit > 0)
                    obSheet.Cells(f,8).Value = string(PrSum(Docs.SumCredit));
                end;
                if (Docs.SumDebit > 0 )
                    ConvSum(rate,money(Docs.SumDebit),Docs.dataset.date_carry,curr,NATCUR,7);
                end;
                if (Docs.SumCredit > 0)
                    ConvSum(rate,(Docs.SumCredit),Docs.dataset.date_carry,curr,NATCUR,7);
                end;
                obSheet.Cells(f,9).Value = string(PrSum(rate));
                if (substr(string(Docs.ground), 1, 1) != "=") // KS 02.07.2010 I-045267 I-045048 Если в поле передавать текст, начинающийся на "=", то ошибка
                    /* Коркин И.Н. I-089118 */
                    //if(Docs.ground == null)   // 06.11.2013 AAN  I-00440422-2
                    if((Docs.ground == "") or (Docs.ground == null))     // Docs.ground сравнивать с NULL или с пустой строкой
                        obSheet.Cells(f,10).Value = string(Docs.dataset.doc_ground);
                    else
                        obSheet.Cells(f,10).Value = string(Docs.ground);
                    end;
                else
                    obSheet.Cells(f,10).Value = "=\"" + string(Docs.ground) + "\"";
                end;
                obSheet.Cells(f,3).Value = string(Numb_Document);
                if (index(Docs.Account,"ОВП") > 0)
                    cmd8 = rsdcommand("select * from ( " +
                                 " select decode(t_account_receiver, '" + AccInfo.Account.Acc + "', t_account_payer, t_account_receiver) as acc "+
                                 " from darhdoc_dbt where (t_Account_receiver = ? or t_account_payer = ?)  "+
                                 " and t_date_carry = ? and t_numb_document like '" + Numb_Document + "%'and t_sum <= ?  order by t_sum desc) where rownum = 1");
                    cmd8.addparam("acc", RSDBP_IN,AccInfo.Account.Acc);
                    cmd8.addparam("acc1", RSDBP_IN,AccInfo.Account.Acc);
                    cmd8.addparam("date", RSDBP_IN,Docs.dataset.date_carry);
                    cmd8.addparam("sum", RSDBP_IN,rate*2);
                    cmd8.execute();
                    rsd8 = rsdrecordset(cmd8);
                    if (rsd8.movenext())
                        DocsAccount = rsd8.value(0);
                    else
                        DocsAccount = Docs.Account;
                    end;
                else
                    DocsAccount = Docs.Account;
                end;
                obSheet.Cells(f,5).Value = string(PutAccF(DocsAccount));
                if (docs.account == docs.dataset.payeraccount)
                    obSheet.Cells(f,6).Value = string(Docs.dataset.docinf_payerbankname, ", ", Docs.dataset.docinf_payerbankcode);
                    //obSheet.Cells(f,4).Value=string(strsubst(Docs.dataset.docinf_payername,"=",""),", ",Docs.dataset.docinf_payerinn);
                    // KS 23.08.2010 I-056427 РС 6 ГЭБ, ВЫПИСКИ
                    //                        должно подтягивать наименование счета
                    if (SOURCE_OF_NAME == 0)
                        obSheet.Cells(f,4).Value = string(strsubst(НаименованиеСчета(Docs.dataset.docinf_paymentid,0,Docs.Account,Docs.dataset.docinf_payername),"=",""),", ",Docs.dataset.docinf_payerinn);
                    elif (SOURCE_OF_NAME == 1)
                        obSheet.Cells(f,4).Value=string(strsubst(Docs.dataset.docinf_payername,"=",""),", ",Docs.dataset.docinf_payerinn);
                    end;
                else
                    obSheet.Cells(f,6).Value=string(Docs.dataset.docinf_receiverbankname, ", ",Docs.dataset.docinf_receiverbankcode);
                    //obSheet.Cells(f,4).Value=string(strsubst(Docs.dataset.docinf_receivername,"=",""), ", ",Docs.dataset.docinf_receiverinn);
                    // KS 23.08.2010 I-056427 РС 6 ГЭБ, ВЫПИСКИ
                    //                        должно подтягивать наименование счета
                    if (SOURCE_OF_NAME == 0)
                        obSheet.Cells(f,4).Value = string(strsubst(НаименованиеСчета(Docs.dataset.docinf_paymentid,
                                                                                    1,
                                                                                    Docs.Account,
                                                                                    Docs.dataset.docinf_receivername), 
                                                                "=", ""),
                                                        ", ", Docs.dataset.docinf_receiverinn);
                    elif (SOURCE_OF_NAME == 1)
                        obSheet.Cells(f,4).Value = string(strsubst(Docs.dataset.docinf_receivername,"=",""), ", ",Docs.dataset.docinf_receiverinn);
                    end;
                end;
            end;
        end;
        if (exst == 0)
            exst = 1;
        end;
        //if (not curr)
        if (not PageAutoNumber)
            if ((obSheet.Range(string("A" + (exst) + ":a" + (f + 1))).height > 610))
                if ((fgBank.is_NBS) or (fgBank.is_GO))
                    obSheet.Cells(f + 1, 1).pagebreak = true;
                    obSheet.RANGE("A" + (f + 1) + ":h" + (f + 1)).mergecells = true;
                    obSheet.RANGE("A" + (f + 1) + ":h" + (f + 1)).horizontalalignment = 4;
                    page = page + 1;
                    obSheet.Cells(f + 1, 1).Value = string("Страница ", page);
                else
                    obSheet.Range("A" + (f) + ":h" + (f)).EntireRow.Insert;
                    obSheet.Cells(f,1).pagebreak = true;//sokolov C-17499-6 изменил f+1 на f для переноса строки с данными на след страницу
                    obSheet.RANGE("A" + (f) + ":h" + (f)).mergecells = true;
                    obSheet.RANGE("A" + (f) + ":h" + (f)).horizontalalignment = 4;
                    page = page + 1;
                    obSheet.Cells(f,1).Value = string("Страница ",page);
                end;
                f = f + 1;
                if (exst == 1)
                    exst = 0;
                end;
                k(asize(k)) = f - exst;
            end;
        end;
                /*
                else
                   if ((obSheet.Range(string("A"+(exst)+":a"+(f+1))).height>525))
                      obSheet.Cells(f+1,1).pagebreak= true;
                      obSheet.RANGE("A"+(f+1)+":j"+(f+1)).mergecells=true;
                      obSheet.RANGE("A"+(f+1)+":j"+(f+1)).horizontalalignment=4;
                      page=page+1;
                      obSheet.Cells(f+1,1).Value=string("Страница ",page);
                      f=f+1;
                      if (exst==1)
                         exst=0;
                      end;
                      k(asize(k))=f-exst;
                         end;
                end;
                */
    end;
/*********************/
end;

        i = i+1;

    end;
   
                  if (wordapp)
                  tbl = WordApp.ActiveDocument.Tables.item(1);
                  if( WordDoc )
                    tbl.Cell(row, 1).Range.Text  = Docs.DataSet.Date_Carry;
                    tbl.Cell(row, 2).Range.Text  = Docs.Shifr_Oper;
                    tbl.Cell(row, 3).Range.Text  = Numb_Document;
                    tbl.Cell(row, 4).Range.Text  = docs.corrBankAcc;
                    tbl.Cell(row, 5).Range.Text  = docs.account;
                    if (Docs.SumDebit>0)
                       tbl.Cell(row, 6).Range.Text = docs.sumDebit;
                    end;
                    if (Docs.SumCredit>0)
                       tbl.Cell(row, 7).Range.Text = docs.sumCredit;
                    end;
                    tbl.Cell(row, 8).Range.Text  = docs.ground;
                    tbl.Rows.Add();
                    str = str + ground.size;
                    //msgbox (ground.size);
                    if  ((str > max_str) and (first_page))
                       // tbl.Rows.item(row).select;
                       // WordApp.ActiveDocument.Bookmarks.Add("Break");
                       // WordApp.ActiveDocument.Bookmarks ("Break").Select;
                       // WordApp.Application.Selection.SelectRow;
                       // tbl.Cell(row, 1).Select;
                        WordApp.ActiveDocument.Bookmarks.Add("Break");
                        WordApp.ActiveDocument.Bookmarks ("Break").Select;
                        WordApp.Application.Selection.InsertBreak(2);
                        str = 10;
                        first_page = false;
                    end;
                   // end;
                    
                    row = row +1;
                   // end;
                  end; /*if( WordDoc )*/
              end;  /*(wordapp)*/
    

end;
/************************************************************************************************************************/
/*****************************************************  ПЕЧАТЬ  *********************************************************/
/***************************************************  ОКОНЧАНИЕ *********************************************************/
/************************************************************************************************************************/

/************************************************************************************************************************/
/************************************************  ОСНОВНЫЕ СЧЕТА  ******************************************************/
/*****************************************************  НАЧАЛО  *********************************************************/
/************************************************************************************************************************/

/* Инициализация ХП */
private MACRO InitPck(AccInfo)

  SQL_Execute("{ CALL rsb_rep_pt.set_selfid(" + {OurBank} + ") }");

  return WELLDONE;
END;

/* Условие WHERE для выборки основных счетов ГКБО */
private MACRO MakeAccWhere(Currency, AccBlncAlias, AccInfo, isCache)
  var Where = "";
  var accountType = "";
  Where = Where + AccInfo.AccountFilter.GetAsSqlString("ac")+END_LINE;
  if (AccInfo.ExcludeOcp == true)
    Where = Where + "AND NOT" + AccInfo.OcpAccountServer.GetAsSqlString("ac")+END_LINE;
  end;
  Where = Where + "AND "+AccInfo.AccountFilterMaskBalance(REP_SUBSYSTEMS_CB, AccBlncAlias)+END_LINE;
  if (AccInfo.AccountMask != "")
    Where = Where + " AND ("+ConvertMaskToSQLFormat(AccInfo.AccountMask, AccBlncAlias+".t_Account")+")"+END_LINE;
  end;
  Where = Where + "AND ac.t_Account = "+AccBlncAlias+".t_Account"+END_LINE+
                  "AND ac.t_Chapter = "+AccBlncAlias+".t_Chapter"+END_LINE;
  if( AccInfo.Oper != 0 )
    Where = Where + "AND ac.t_oper = "+AccInfo.Oper+END_LINE;
  end;
  if ((Currency != NATCUR) and (Currency != ALLCURRENCY))
    Where = Where + "AND "+AccBlncAlias+".t_Code_Currency = "+Currency+END_LINE+
                    "AND ac.t_Code_Currency = "+Currency+END_LINE;
  end;
  if (Currency != NATCUR)
    Where = Where + "AND ac.t_Code_Currency = "+AccBlncAlias+".t_Code_Currency"+END_LINE;
  end;
  Where = Where + "AND ac.t_Open_Date BETWEEN " + getSqlDate(ZeroDate) + " AND " + getSqlDate(AccInfo.DateOut) + END_LINE+
                  "AND (   ac.t_Close_Date BETWEEN " + getSqlDate(AccInfo.DateIn) + " AND " + getSqlDate(Date(31,12,9999)) + END_LINE+
                  "     OR ac.t_Close_Date = " + getSqlDate(ZeroDate) + END_LINE+
                  "    )"+END_LINE;
  if (AccInfo.Client > 0)
    Where = Where + "AND ac.t_Client = "+AccInfo.Client+END_LINE;
  end;
  if ((not AccInfo.cSetZTurn) and (not isCache))
    if (Currency == NATCUR)
      Where = Where + "AND EXISTS(SELECT 1" + END_LINE +
                      "             FROM darhdoc_dbt" + END_LINE +
                      "            WHERE t_chapter = ac.t_chapter" + END_LINE +
                      "              AND ac.t_account IN (t_account_payer, t_account_receiver)" + END_LINE +
                      "              AND t_date_carry BETWEEN " + getSqlDate(AccInfo.DateIn) + " AND " + getSqlDate(AccInfo.DateOut) + END_LINE +
                      "          )" + END_LINE;
    else
      if (AccInfo.NatCurEquivalent == true) /* Должны быть док. по счету или переоценка */
        if (AccInfo.cSetExcludeRevalue == true) /* Переоценка не учитывается, достаточно док. по счету */
          Where = Where + "AND EXISTS(SELECT 1" + END_LINE +
                          "      FROM darhdoc$_dbt" + END_LINE +
                          "     WHERE t_chapter = ac.t_chapter" + END_LINE +
                          "       AND t_code_currency = ac.t_code_currency" + END_LINE +
                          "       AND ac.t_account IN (t_account_payer, t_account_receiver)" + END_LINE +
                          "       AND t_date_carry BETWEEN " + getSqlDate(AccInfo.DateIn) + " AND " + getSqlDate(AccInfo.DateOut) + END_LINE +
                          "   )" + END_LINE;
        else /* переоценка считается "валютным" документом */
          Where = Where + "AND EXISTS(SELECT 1" + END_LINE +
                          "      FROM darhdoc$_dbt" + END_LINE +
                          "     WHERE t_chapter = ac.t_chapter" + END_LINE +
                          "       AND t_code_currency = ac.t_code_currency" + END_LINE +
                          "       AND ac.t_account IN (t_account_payer, t_account_receiver)" + END_LINE +
                          "       AND t_date_carry BETWEEN " + getSqlDate(AccInfo.DateIn) + " AND " + getSqlDate(AccInfo.DateOut) + END_LINE +
                          "     UNION ALL" + END_LINE +
                          "    SELECT 1" + END_LINE +
                          "      FROM darhdoc_dbt" + END_LINE +
                          "     WHERE t_chapter = ac.t_connect_chapter" + END_LINE +
                          "       AND ac.t_connect_account IN (t_account_payer, t_account_receiver)" + END_LINE +
                          "       AND t_date_carry BETWEEN " + getSqlDate(AccInfo.DateIn) + " AND " + getSqlDate(AccInfo.DateOut) + END_LINE +
/*                          "       AND t_result_carry = " + DELTARATE + END_LINE +*/
/*SDA - поправка на вертер - урегулирование теперь имеет ризалт карри 82*/
                          "   AND t_result_carry IN (" + DELTARATE +", 82 )" + END_LINE +
                          "   )" + END_LINE;
        end;
      else /* должны быть док. по счету, переоценку не проверяем */
        Where = Where + "AND EXISTS(SELECT 1" + END_LINE +
                        "      FROM darhdoc$_dbt" + END_LINE +
                        "     WHERE t_chapter = ac.t_chapter" + END_LINE +
                        "       AND t_code_currency = ac.t_code_currency" + END_LINE +
                        "       AND ac.t_account IN (t_account_payer, t_account_receiver)" + END_LINE +
                        "       AND t_date_carry BETWEEN " + getSqlDate(AccInfo.DateIn) + " AND " + getSqlDate(AccInfo.DateOut) + END_LINE +
                        "   )" + END_LINE;
      end;
    end;
  end;

  if (AccInfo.AccountType != "")
    Where = Where + "AND LENGTH(TRANSLATE('|' || ac.t_Type_Account, " + 
                    "                     '|' || " + getSqlString(AccInfo.AccountType) + ", " +
                    "                     '|')) = LENGTH(ac.t_Type_Account) - LENGTH(" + getSqlString(AccInfo.AccountType) + ") + 1 " + END_LINE;
  end;

  if (AccInfo.AccountUserType != "")
    Where = Where + "AND LENGTH(TRANSLATE('|' || ac.t_UserTypeAccount, " + 
                    "                     '|' || " + getSqlString(AccInfo.AccountUserType) + ", " +
                    "                     '|')) = LENGTH(ac.t_UserTypeAccount) - LENGTH(" + getSqlString(AccInfo.AccountUserType) + ") + 1 " + END_LINE;
  end;

  if (AccInfo.cSetCr)
    accountType = "К";
  end;

  accountType = accountType + "ПМН";
  Where = Where + "AND LENGTH(TRANSLATE('|' || ac.t_type_account, '|' || " + getSqlString(accountType)+ ", '|')) != LENGTH(ac.t_type_account)";

  Where = Where + END_LINE;

  return Where;
END;

/* ORDER BY для выборки основных счетов */
/*
private MACRO MakeAcOrderBy(AccInfo)
  var KindSort = TArray(),
      OrderBy = "",
      i = 0;
  // Разбивает длинную строку на несколько сегментов
  StrSplitTArray( AccInfo.KindSort, KindSort, 1);
    
  while(KindSort(i))
    if( i == 0)
      OrderBy = "ORDER BY ";
    else
      OrderBy = OrderBy + ", ";      
    end; 

    if   (KindSort(i) == ACC_SORT_DPRT)
      OrderBy = OrderBy + "t_department, t_branch ";
    elif (KindSort(i) == ACC_SORT_OPER)
      OrderBy = OrderBy + "t_oper ";
    elif (KindSort(i) == ACC_SORT_CLNT)
      OrderBy = OrderBy + "t_nameClnt ";
    elif (KindSort(i) == ACC_SORT_ACNT)
      OrderBy = OrderBy + "t_acc ";
    elif (KindSort(i) == ACC_SORT_CHAP)
      OrderBy = OrderBy + "t_chapter ";
    elif (KindSort(i) == ACC_SORT_MAKET)
      OrderBy = OrderBy + "t_sort ";
    end;

    i = i + 1;
  end;

// Тихомиров - сортировка для выписки
/*if ((flag==3) or (flag==4))
orderby="ORDER BY substr(acc,1,5), substr(acc,16,5), substr(acc,11,5)";
end;
*/
if ((flag==3) or (flag==4))
/*korkin for 154 t_acc */
orderby="ORDER BY substr(t_acc,16,5)";
end;

  return OrderBy;
END;
*/
/* ORDER BY для выборки основных счетов */
private macro MakeAcOrderBy(AccInfo)
  var orderBy = "";

  for (var i, accInfo.kindSort)

    if (i == REP_PATTERNSORT_DEPARTMENT)
      orderBy = orderBy + "," + "t_department, t_branch ";
    elif (i == REP_PATTERNSORT_OPER)
      orderBy = orderBy + "," + "t_oper ";
    elif (i == REP_PATTERNSORT_CLIENT)
      orderBy = orderBy + "," + "t_nameClnt ";
    elif (i == REP_PATTERNSORT_ACCOUNT)
      orderBy = orderBy + "," + "t_acc ";
    elif (i == REP_PATTERNSORT_CHAPTER)
      orderBy = orderBy + "," + "t_chapter ";
    elif (i == REP_PATTERNSORT_SYSTEM_MAKET)
      orderBy = orderBy + "," + "t_sort ";
    end;

  end;


if ((flag==3) or (flag==4))
/*korkin for 154 t_acc */
/*orderby="ORDER BY substr(t_acc,16,5)";*/
/*SDA*/
orderBy = orderBy + "," + "substr(t_acc,16,5)";
end;


  if (orderBy != "")
    orderBy = "ORDER BY " + substr(orderBy, 2);
  end;

  return orderBy;
end;



/* Формирование SQL-запроса для отбора основных счетов ГКБО */
private MACRO MakeAccountQuery(Currency, AccInfo, requiredDate, isCache)

  macro MakeRest(Currency, RestDate, Eq)
    var ac, ch, cur;

    if ((Currency == NATCUR) or (Eq == false))
      ac  = "ac.t_Account";
      ch  = "ac.t_Chapter";
      cur = "ac.t_Code_Currency";
    elif (Eq == true)
      ac  = "ac.t_Connect_Account";
      ch  = "ac.t_Connect_Chapter"; 
      cur = "ac.t_Connect_Currency";
    end;

    return "rsb_account.restall("+ac+", "+ch+", "+cur+", "+GetSQLDate(RestDate)+")";
  end;

  defaultParm(isCache, false);

  var Select;
  var From;
  var Where = "WHERE ", CmdText = "";
  var AccBlncAlias = "ab";
  var ac, ab, bal;
  var requiredDateString;

  if ((valType(requiredDate) != V_UNDEF) and ((requiredDate != NULL) or (requiredDate != date(0, 0, 0))))
       requiredDateString = ", " + string(getSqlDate(requiredDate));  
  else
       requiredDateString = "";
  end;

  /* EVG 13/12/2011 В 2030 нет таблицы dbalance$_dbt, поэтому
     для валюты тоже читается таблица dbalance_dbt. */
  bal = "dbalance_dbt balance";
  if (Currency == NATCUR)
    ac = "daccount_dbt ac";
    ab = "daccblnc_dbt " + AccBlncAlias;
    //bal = "dbalance_dbt balance";
  else
    ac = "daccount$_dbt ac";
    ab = "daccblnc$_dbt " + AccBlncAlias;
    //bal = "dbalance$_dbt balance";
  end;

  if (isCache)

      Select = "SELECT ac.t_account          accountNumber,"
      + "\n" + "       ac.t_chapter          chapterNumber,"
      + "\n" + "       ac.t_connect_account  connAcc,"
      + "\n" + "       ac.t_connect_chapter  connChapter,"
      + "\n" + "       ac.t_code_currency    curCode,"
      + "\n" + "   " + REP_SUBSYSTEMS_CB + " subsystem";

  else /*Добавлено substr из 151*/
      Select = "SELECT 0                                                                                AccId,"
      + "\n" + "       ac.t_Account                                                                     AccountNumber,"
      + "\n" + "       substr(ac.t_NameAccount, 1, 120)                                                                AccountName,"
      + "\n" + "       ac.t_Account                                                                     OdbAccount,"
      + "\n" + "       substr(rsb_rep_pt.get_ptshname(ac.t_Client), 1, 60)                                             ClientName," //12.03.2012 vihrov увеличил длину поля до 60 - стоько в таблице счетов. 20 не хватало I-00163737-2
      + "\n" + "       substr(rsb_rep_pt.get_PartyInn(ac.t_Client, 1" + requiredDateString + "), 1, 35)                ClientInn,"
      + "\n" + "       substr(rsb_rep_ac.get_opname(ac.t_Oper), 1, 35)                                                 OperName,"
      + "\n" + "       rsb_rep_ac.prevdatin(ac.t_Connect_Account, "+NATCUR+", ac.t_Connect_Chapter)     Dpd_R,"
      + "\n" + "       rsb_rep_ac.prevdatin(ac.t_Account, ac.t_Code_Currency, ac.t_Chapter)             Dpd,"
      + "\n" + "       substr(rsb_rep_fi.get_finame(ac.t_Code_Currency), 1, 25)                                        CurrencyName,"
      + "\n" + "   " + MakeRest(Currency, AccInfo.DateIn-1, false) + "                                  AccountInRest,"
      + "\n" + "   " + MakeRest(Currency, AccInfo.DateIn-1,  true) + "                                  AccountInRestEq,"
      + "\n" + "   " + MakeRest(Currency, AccInfo.DateOut,  false) + "                                  AccountOutRest,"
      + "\n" + "   " + MakeRest(Currency, AccInfo.DateOut,   true) + "                                  AccountOutRestEq,"
      + "\n" + "       ac.t_Type_Account                                                                TypeAccount,"
      + "\n" + "       ac.t_Chapter                                                                     ChapterNumber,"
      + "\n" + "       ac.t_Kind_Account                                                                KindAccount,"
      + "\n" + "       ac.t_Sort                                                                        Sort,"
      + "\n" + "       ac.t_Branch                                                                      Branch,"
      + "\n" + "       ac.t_Connect_Account                                                             ConnAcc,"
      + "\n" + "       ac.t_Connect_Chapter                                                             ConnChapter,"
      + "\n" + "       ac.t_Department                                                                  Department,"
      + "\n" + "       ac.t_Code_Currency                                                               CurCode,"
      + "\n" + "   " + REP_SUBSYSTEMS_CB + "                                                            subsystem,"
      + "\n" + "   " + REP_SUBSYSTEMS_CB + "                                                            initialSubsystem,"
      + "\n" + "       NULL                                                                             RevalDocsExist   "; // 12.11.2007 ABP deprecated
  end;

  From = "\n" + "FROM " + ac + ","
       + "\n" + "     " + ab + ","
       + "\n" + "     " + bal
       + "\n" + "";

  Where = Where + MakeAccWhere(Currency, AccBlncAlias, AccInfo, isCache);

  CmdText = Select + From + Where;
  return CmdText;

END;

private macro makeAccountQueryText(accInfo, requiredDate, isCache)

    var queryText = "";

    if (accInfo.currency == ALLFININSTR)

        queryText = makeAccountQuery(NATCUR, accInfo, requiredDate, isCache);
        queryText = queryText + "UNION ALL" + END_LINE;
        queryText = queryText + makeAccountQuery(ALLCURRENCY, accInfo, requiredDate, isCache);

    elif (accInfo.currency == ALLCURRENCY)

        queryText = makeAccountQuery(ALLCURRENCY, accInfo, requiredDate, isCache);

    else

        queryText = makeAccountQuery(accInfo.currency, accInfo, requiredDate, isCache);

    end;
    
    return queryText;

end;

/************************************************************************************************************************/
/************************************************  ОСНОВНЫЕ СЧЕТА  ******************************************************/
/**************************************************  ОКОНЧАНИЕ  *********************************************************/
/************************************************************************************************************************/

/* Обработка документов счета */
private MACRO ProcessDocuments(accInfo, docs)

    var query;
    var caption;
    var needFooter = false;
    var isContinue = false;

    if (accInfo.account.subsystem == REP_SUBSYSTEMS_CB)
      query = TDocumentQueryMaker(accInfo).getQuery();
    else
      query = ""; /* данные нужно собирать по документам RS-Loans */
    end;
    
    docs.constructor(query, accInfo);

    isContinue = docs.next();
    if (isContinue or accInfo.cSetZTurn)
        needFooter = true;
        printHeader(AccInfo);
    end;

    while (isContinue)
        NDoc = NDoc+1;
        printCarryDocument(accInfo, docs);
        isContinue = docs.next();

//Tikh

     if (flag ==1)
/*SDA 25.03.2012 - в топку сложности - пишите проще! меньше ошибок будет...
       PRB[prb.size] = ("    ├──────────┼───┼──────────┼─────────┼──────────────────────────────┼─────────────────────┼─────────────────────────────────────┼───────────┼──────────────────────────────────────────────────┤");
*/

[    ├──────────┼───┼──────────┼────────────┼──────────────────────────────┼─────────────────────┼────────────────────────────────────────┼───────────────┼──────────────────────────────────────────────────┤];
    end;

    end;
/* SDA - см. комментарий чуть выше.
     if (flag ==1)
     prb.size = prb.size-1;
     end;
*/
/*END  Glushin S.P. по заявке I-00148568-2 */
    if (needFooter)
        printFooter(accInfo, docs);
    end;

   if (f==5)
      count_all_docs = NDoc;
      sum_all_d = sum_all_d + Docs.AllSumDebit;
      sum_all_k = sum_all_k + Docs.AllSumCredit;
      sum_all_out = abs(AccInfo.Account.RestOut);
      
   end;
    
    
    if (WordDoc)
        if( IsStandAlone() )
          WordApp.Visible = TRUE;
        else
          ShowReportOnTerminal( WordApp, WordDoc );
        end; 
  end;

END;

/* Коркин И.Н. по заявке I-068817. Обработка документов счета, для случая когда по категории не печатать выписки */
private MACRO ProcessDocumentsNotPrint(accInfo, docs)

    var query;
    var caption;
    var needFooter = false;
    var isContinue = false;

    if (accInfo.account.subsystem == REP_SUBSYSTEMS_CB)
      query = TDocumentQueryMaker(accInfo).getQuery();
    else
      query = ""; /* данные нужно собирать по документам RS-Loans */
    end;
    
    docs.constructor(query, accInfo);

    isContinue = docs.next();
    while (isContinue)
        NDoc = NDoc+1;
        isContinue = docs.next();
    end;
 END;

/* Печать приложений */
private MACRO ProcessFDocs(AccInfo, Docs)
    var i = 0;

    macro FillDocumentBufferByLoansData(DocumentBuffer, DocStorage)
        if (DocStorage[DS_DOC] != 0)
            DocumentBuffer.rec.Autokey = DocStorage[DS_DOC];
            DocumentBuffer.GetEQ();
        else
            Copy(DocumentBuffer, DocStorage[DS_CBDOC]);
        end;
        return DocumentBuffer;
    end;

    macro FilterDocs(DocStorage, OutForm)
        return ((DocStorage[DS_DK] == OutForm) or (OutForm == ACC_FORMS_ALL));
    end;
    
    macro opername(id)
        var cmd = rsdcommand("select t_name from dperson_dbt where t_oper = ?");
        cmd.addparam("id", RSdBP_IN, id);
        cmd.execute();
        var rsd = rsdrecordset(cmd);
        if (rsd.movenext())
            return rsd.value(0);
        else
            return "";
        end;
    end;
    
    // KS 26.08.2010 I-056427 РС 6 ГЭБ, ВЫПИСКИ Определение шифра операции по проводке
    macro GetShifrOper(autokey)
        var cmd = rsdcommand("select t_shifr_oper from darhdoc_dbt where t_autokey = ?");
        cmd.addparam("id", RSdBP_IN, autokey);
        cmd.execute();
        var rsd = rsdrecordset(cmd);
        if (rsd.movenext())
            return rsd.value(0);
        else
            return "";
        end;
    end;
    
    macro GetPrnForm(DocStorage)
        /*SDA*/ testevent(1);
        var cmdcc, rsdcc;
        // KS 26.08.2010 I-056427 РС 6 ГЭБ, ВЫПИСКИ Шифр операции для проводки
        var ShifrOper;
        if (DocStorage[DS_PAYM] != 0)
            FindPayment(int(DocStorage[DS_PAYM]), 0, 0, 0, 0, true, 
                        AccInfo.pr_pmpaym, 
                        AccInfo.pr_debit, 
                        AccInfo.pr_credit, 
                        AccInfo.pr_pmrmprop);
            if (ArrFind(DocKinds, NVL(AccInfo.pr_pmrmprop.rec.ShifrOper, "")) == -1)
                return PRN_SKIP;
            end;
            /*151*/
            
            // AAN 21.05.2013  C-20028-6  begin
            
            var flag_us_type = false;
            var cmd_sel = rsdcommand("SELECT instr (t_usertypeaccount, 'Ё' ) FROM daccount_dbt WHERE t_account = '" + AccInfo.account.acc + "'");
            cmd_sel.execute();
            var rsd_sql = rsdrecordset(cmd_sel);
            if (rsd_sql.movenext())
                if( rsd_sql.value(0) == 0 )
                    flag_us_type = true;
                end;
            end;
            
            /*
            if ((AccInfo.pr_pmpaym.rec.origin == 6) or (AccInfo.pr_pmpaym.rec.origin == 2100)) // KS 14.12.2011 C-5692
                return PRN_SKIP;
            end;
            */
            if ( ((AccInfo.pr_pmpaym.rec.origin == 6) or (AccInfo.pr_pmpaym.rec.origin == 2100)) and ( flag_us_type == false )  ) // KS 14.12.2011 C-5692
                return PRN_SKIP;
            end;
            // AAN 21.05.2013  C-20028-6  END
            
            // KS 25.03.2011 ЭВ Irina K Ivanova исключть все DOCKIND =201 c Origin != Клиент банк
            if (( PRINT_ONLY_CLIENTBANK ) and ((AccInfo.pr_pmpaym.rec.DocKind == PS_CPORDER) or (AccInfo.pr_pmpaym.rec.DocKind == PS_PAYORDER)))
                if (AccInfo.pr_pmpaym.rec.DocKind == PS_CPORDER)
                    cmdcc = rsdcommand("select t_origin From dpscpord_dbt  where t_orderid = ?");
                else
                    cmdcc = rsdcommand("select t_origin From dpspayord_dbt where t_orderid = ?");
                end;
                cmdcc.addparam("", RSdBP_IN, AccInfo.pr_pmpaym.rec.paymentid);
                cmdcc.execute();
                rsdcc = rsdrecordset(cmdcc);
                if (rsdcc.movenext())
                    if ((rsdcc.value(0)  != 2) and (rsdcc.value(0)  != 14))
                        return PRN_SKIP;
                    end;
                end;
            end;
            // 05.01.2010 ABP Обработка банковского ордера по 2360-У
            if (accInfo.pr_pmrmprop.rec.shifrOper == "17")
                // 05.01.2010 ABP Если встретился клиентский платежный документ, то печатается только кредитовый,
                //                дебетовую платежку клиент сам в банк принес, она у него и так в печатном виде имеется.
                if (in(accInfo.pr_pmpaym.rec.docKind, PS_CPORDER, PS_PAYORDER))
                    if (docStorage[DS_DK] == CREDIT_C)
                        /*SDA return PRN_RURPAYM;*/
                        return PRN_BNKO;
                    else
                        return PRN_SKIP;
                    end;
                end;
                // 05.01.2010 ABP Во всех остальных случаях при наличии связанного с проводкой платежа вызываем печать платежного документа.
                //                Макрос РБ сам разберет, что именно нужно печатать.
                /*SDA         return PRN_RURPAYM;*/
                return PRN_BNKO;
            end;
            if ((DocStorage[DS_DK] == CREDIT_C) and (AccInfo.pr_pmpaym.rec.payerbankid != AccInfo.pr_pmpaym.rec.receiverbankid))
                cmdcc = rsdcommand("SELECT   COUNT (1) AS cnt                      "+
                                   "FROM   dobjatcor_dbt atcor, dobjattr_dbt attr  "+
                                   "WHERE       atcor.t_objecttype = 4             "+
                                   "AND atcor.t_groupid = 105                      "+
                                   "AND atcor.t_validtodate > to_date('"+{curdate}+"','dd.mm.yyyy') "+
                                   "AND attr.t_codelist IN (2)                     "+
                                   "AND atcor.t_groupid = attr.t_groupid           "+
                                   "AND attr.t_attrid = atcor.t_attrid             "+
                                   "AND attr.t_objecttype = atcor.t_objecttype     "+
                                   "AND atcor.t_object LIKE '%"+AccInfo.Account.Acc+"'");
                // cmdcc.addparam("date",RSDBP_IN,{curdate});
                //       cmdacc.addparam("acc",RSDBP_IN,AccInfo.Account.Acc);
                cmdcc.execute;
                rsdcc = rsdrecordset(cmdcc);
                if (rsdcc.movenext())
                    if (rsdcc.value(0) > 0)
                        return PRN_SKIP;
                    end;
                end;
            end;
            //       if (AccInfo.pr_pmpaym.rec.payerbankid != AccInfo.pr_pmpaym.rec.receiverbankid)
            // KS 27.03.2011 Какое-то странное для клиент-банка
            if ((AccInfo.pr_pmpaym.rec.DocKind == PS_CPORDER) or (AccInfo.pr_pmpaym.rec.DocKind == PS_PAYORDER))
                if (AccInfo.pr_pmpaym.rec.DocKind == PS_CPORDER)
                    cmdcc = rsdcommand("select t_origin From dpscpord_dbt  where t_orderid = ?");
                else
                    cmdcc = rsdcommand("select t_origin From dpspayord_dbt where t_orderid = ?");
                end;
                cmdcc.addparam("", RSdBP_IN, AccInfo.pr_pmpaym.rec.paymentid);
                cmdcc.execute();
                rsdcc = rsdrecordset(cmdcc);
                if (rsdcc.movenext())
                    if ((rsdcc.value(0)  == 2) or (rsdcc.value(0)  == 14))
                        cmdcc = rsdcommand("SELECT   COUNT (1) AS cnt                      "+
                                           "FROM   dobjatcor_dbt atcor, dobjattr_dbt attr  "+
                                           "WHERE       atcor.t_objecttype = 4             "+
                                           "AND atcor.t_groupid = 105                      "+
                                           "AND atcor.t_validtodate > to_date('"+{curdate}+"','dd.mm.yyyy') "+
                                           "AND attr.t_codelist IN (3)                     "+
                                           "AND atcor.t_groupid = attr.t_groupid           "+
                                           "AND attr.t_attrid = atcor.t_attrid             "+
                                           "AND attr.t_objecttype = atcor.t_objecttype     "+
                                           "AND atcor.t_object LIKE '%"+AccInfo.Account.Acc+"'");
                        // cmdcc.addparam("date",RSDBP_IN,{curdate});
                        // cmdacc.addparam("acc",RSDBP_IN,AccInfo.Account.Acc);
                        cmdcc.execute;
                        rsdcc = rsdrecordset(cmdcc);
                        if (rsdcc.movenext())
                            if (rsdcc.value(0) > 0)
                                return PRN_SKIP;
                            end;
                        end;
                    end;
                end;
            end;
            if (AccInfo.pr_pmpaym.rec.payerbankid == AccInfo.pr_pmpaym.rec.receiverbankid)
                cmdcc = rsdcommand("SELECT   COUNT (1) AS cnt                      "+
                                   "FROM   dobjatcor_dbt atcor, dobjattr_dbt attr  "+
                                   "WHERE       atcor.t_objecttype = 4             "+
                                   "AND atcor.t_groupid = 105                      "+
                                   "AND atcor.t_validtodate > ?                    "+
                                   "AND attr.t_codelist IN (1)                     "+
                                   "AND atcor.t_groupid = attr.t_groupid           "+
                                   "AND attr.t_attrid = atcor.t_attrid             "+
                                   "AND attr.t_objecttype = atcor.t_objecttype     "+
                                   "AND atcor.t_object LIKE '%"+AccInfo.Account.Acc+"'");
                cmdcc.addparam("date",RSDBP_IN,{curdate});
                // cmdacc.addparam("acc",RSDBP_IN,AccInfo.Account.Acc);
                cmdcc.execute;
                rsdcc = rsdrecordset(cmdcc);
                if (rsdcc.movenext())
                    if (rsdcc.value(0) > 0)
                        return PRN_SKIP;
                    end;
                end;
            end;



        if ((AccInfo.pr_pmpaym.rec.DocKind == PS_CPORDER) or (AccInfo.pr_pmpaym.rec.DocKind == PS_PAYORDER))
          if ((docStorage[DS_DK] == DEBIT_C)) // KS 27.04.2011
            if (AccInfo.pr_pmpaym.rec.DocKind == PS_CPORDER)
              cmdcc = rsdcommand("select t_origin From dpscpord_dbt  where t_orderid = ?");
              else
              cmdcc = rsdcommand("select t_origin From dpspayord_dbt where t_orderid = ?");
            end;
            cmdcc.addparam("", RSdBP_IN, AccInfo.pr_pmpaym.rec.paymentid);
            cmdcc.execute();
            rsdcc = rsdrecordset(cmdcc);
            if (rsdcc.movenext())
              if ((rsdcc.value(0)  == 1)or // Не печатаю ручной ввод и файнридер
                  (rsdcc.value(0)  == 6))
                  return PRN_SKIP;
              end;
          end;

          // 05.01.2010 ABP Во всех остальных случаях при наличии связанного с проводкой платежа вызываем печать платежного документа.
          //                Макрос РБ сам разберет, что именно нужно печатать.
          //return PRN_RURPAYM;

      end;
//        if (DocStorage[DS_DK] == CREDIT_C)
          if (AccInfo.pr_pmpaym.rec.DocKind == PS_CPORDER)
            return PRN_CURPAYM;
          else
            return PRN_RURPAYM;
          end;
//        else
//          return PRN_SKIP;
//        end;
      end;

      if (AccInfo.pr_pmpaym.rec.DocKind == CB_MULTYDOC)
/*SDA - пропускаем печать приложений по Фронтовым кассовым мультивалюткам 
         - все равно не работает из за особенностей вставки */
/*да и вообще, глупость приложения по фронтой кассе печатать */
       if (AccInfo.pr_pmpaym.rec.origin == 1700)
         return PRN_SKIP;
       end;
        return PRN_MCARRY;
      end;

      /* мемордер или документ ПЗО */
      if ((AccInfo.pr_pmpaym.rec.DocKind == DLDOC_MEMORIALORDER) or (NVL(AccInfo.pr_pmrmprop.rec.ShifrOper, "") == ""))
//        if (docStorage[DS_DK] == DEBIT_C) // KS 27.04.2011
//          return PRN_SKIP;
//        end;

        cmdcc = rsdcommand("SELECT   COUNT (1) AS cnt                      "+
                           "FROM   dobjatcor_dbt atcor, dobjattr_dbt attr  "+
                           "WHERE       atcor.t_objecttype = 4             "+
                           "AND atcor.t_groupid = 105                      "+
                           "AND atcor.t_validtodate > to_date('"+{curdate}+"','dd.mm.yyyy') "+
                           "AND attr.t_codelist IN (6)                     "+
                           "AND atcor.t_groupid = attr.t_groupid           "+
                           "AND attr.t_attrid = atcor.t_attrid             "+
                           "AND attr.t_objecttype = atcor.t_objecttype     "+
                           "AND atcor.t_object LIKE '%"+AccInfo.Account.Acc+"'");

        cmdcc.execute;
        rsdcc = rsdrecordset(cmdcc);
        if (rsdcc.movenext())
          if (rsdcc.value(0) > 0)
           return PRN_SKIP;
          end;
        end;

        if (DocStorage[DS_CUR] == NATCUR)
          return PRN_RURMO;
        else
          return PRN_CURMO;
        end;
      end;

      if (DocStorage[DS_CUR] == NATCUR)
        return PRN_RURPAYM;
      else
        return PRN_CURPAYM;
      end;
    end;

    if (DocStorage[DS_CARRY] != 0) /* Вряд ли сюда попадем. Для страховки. */
        return PRN_MCARRY;
    end;  

    // KS 26.08.2010 I-056427 РС 6 ГЭБ, ВЫПИСКИ 
    // Шифр 17 всё равно печатаем банковским ордером
    // Шифр 03 не печатаем
    ShifrOper = GetShifrOper(DocStorage[0]);
    if ( (ShifrOper=="03") and (not PRINT_CASH) )
        return PRN_SKIP;
    end;
    cmdcc = rsdcommand("SELECT   COUNT (1) AS cnt                      "+
                       "FROM   dobjatcor_dbt atcor, dobjattr_dbt attr  "+
                       "WHERE       atcor.t_objecttype = 4             "+
                       "AND atcor.t_groupid = 105                      "+
                       "AND atcor.t_validtodate > to_date('"+{curdate}+"','dd.mm.yyyy') "+
                       "AND attr.t_codelist IN (6)                     "+
                       "AND atcor.t_groupid = attr.t_groupid           "+
                       "AND attr.t_attrid = atcor.t_attrid             "+
                       "AND attr.t_objecttype = atcor.t_objecttype     "+
                       "AND atcor.t_object LIKE '%"+AccInfo.Account.Acc+"'");
    cmdcc.execute;
    rsdcc = rsdrecordset(cmdcc);
    if (rsdcc.movenext())
        if (rsdcc.value(0) > 0)
            return PRN_SKIP;
        end;
    end;
    if (DocStorage[DS_CUR] == NATCUR)
        return PRN_RURMO;
    else
        return PRN_CURMO;
    end;
end;
  
  // KS I-066878 Тестирование RS V6. Приложение к выписке по лиц.счетам. Город
  var town_bank="";
  RECORD addr ( adress );
                    
  if( НайтиЮридическийАдресСубъекта( {OurBank}, addr) )
    town_bank = addr.CodeDistrict + ". " + addr.District;
  end;
  
  while(i < Docs.DocStorage.Size)
    if (FilterDocs(Docs.DocStorage[i], AccInfo.OutForm) == false)
      i = i+1;
      continue;
    end;


    if (GetPrnForm(Docs.DocStorage[i]) == PRN_BNKO)
    
    //Sokolov по заявке I-00228765-2 Печать в банковском ордере наименования банка в счете 47423
    //LAO 28.02.2013 добавил + NO_PARALLEL
   schet_debet = AccInfo.pr_pmpaym.rec.payeraccount;
   schet_credit = AccInfo.pr_pmpaym.rec.receiveraccount;    
   textpoisk = "select count(0) from(SELECT /*+ NO_PARALLEL*/ distinct ac.t_client FROM daccount_dbt ac " +
               "WHERE ac.t_account = '" + schet_debet + "'" +
		 " OR ac.t_account = '" + schet_credit + "') tabl ";
   cmd_textpoisk = rsdcommand(textpoisk);
   resultat = RSDRecordSet(cmd_textpoisk);
   resultat.movenext;
   if(resultat.value(0) != 1)
      OnClient = false;
   else 
      OnClient = true;
   end; // end I-00228765-2

  if ( PRINT_SEPARATOR ) // KS 18.04.2011
            [(3R(s0p13.50h8.5v0s0b20T&l1X&l8D&l0O&a7L&12E];
  end;
//      println();
//      println(StrAlign("─", MaxWidth, STR_ALIGN_CENTER, "─"));

      ExecMacroFile("pr_accst_rpm", "PrintDoc", 1, AccInfo.pr_pmpaym, AccInfo.pr_debit, AccInfo.pr_credit, AccInfo.pr_pmrmprop);
/*SDA 07.02.2012 - для банковских ордеров штампик уже есть, вставляем только разрыв страницы */ 
      [];
    elif (GetPrnForm(Docs.DocStorage[i]) == PRN_RURPAYM)
            docnum = docnum+1;
  if ( PRINT_SEPARATOR ) // KS 18.04.2011
            [(3R(s0p13.50h8.5v0s0b20T&l1X&l8D&l0O&a7L&12E];
  end;
//      println();
//      println(StrAlign("─", MaxWidth, STR_ALIGN_CENTER, "─"));

      ExecMacroFile("pr_accst_rpm", "PrintDoc", 1, AccInfo.pr_pmpaym, AccInfo.pr_debit, AccInfo.pr_credit, AccInfo.pr_pmrmprop);


[                                   ┌────────────────────────────────┐
                                    │################################│
                                    │            ПРОВЕДЕНО           │
                                    │################################│
                                    │################################│
                                    │ #################БИК ######### │
                                    │ к/с ###########################│
                                    └────────────────────────────────┘                                    ]

//                  (date(Docs.DataSet.Date_Carry ):c:f,opername(Docs.DataSet.doc_oper):c);         //vihrov 20.08.2010
                    ({Name_Bank}:c, // KS 23.08.2010 I-056427 РС 6 ГЭБ, ВЫПИСКИ
                     date(accinfo.pr_pmpaym.rec.valuedate ):c:f, //vihrov 20.08.2010
//                     opername(Docs.DataSet.doc_oper):c,  // KS I-078903
                     opername(AccInfo.pr_pmpaym.rec.oper):c,    // KS I-078903 Операционист неверный
                     town_bank:c,   // KS 15.09.2010 I-066878 Тестирование RS V6. Приложение к выписке по лиц.счетам.
                     {mfo_bank}:c,
                     {corac_bank}:c);
    elif (GetPrnForm(Docs.DocStorage[i]) == PRN_CURPAYM)
            docnum = docnum+1;
      
  if ( PRINT_SEPARATOR ) // KS 18.04.2011      
            [(3R(s0p13.50h8.5v0s0b20T&l1X&l8D&l0O&a7L&12E];
  end;
//      println();
//      println(StrAlign("─", MaxWidth, STR_ALIGN_CENTER, "─"));
      ExecMacroFile("pr_accst_cpm", "PrintDoc", 1, AccInfo.pr_pmpaym, AccInfo.pr_debit, AccInfo.pr_credit, AccInfo.pr_pmrmprop);


[                                   ┌────────────────────────────────┐
                                    │################################│
                                    │            ПРОВЕДЕНО           │
                                    │################################│
                                    │################################│
                                    │ #################БИК ######### │
                                    │ к/с ###########################│
                                    └────────────────────────────────┘                                    ]

                  ({Name_Bank}:c, // KS 23.08.2010 I-056427 РС 6 ГЭБ, ВЫПИСКИ
                   date(Docs.DataSet.Date_Carry ):f:c,//opername(Docs.DataSet.doc_oper):c,
                   opername(AccInfo.pr_pmpaym.rec.oper):c, // KS I-078903 Операционист неверный
                   town_bank:c,   // KS 15.09.2010 I-066878 Тестирование RS V6. Приложение к выписке по лиц.счетам.
                   {mfo_bank}:c,
                   {corac_bank}:c);
    elif (GetPrnForm(Docs.DocStorage[i]) == PRN_MCARRY)

            docnum = docnum+1;
  if ( PRINT_SEPARATOR ) // KS 18.04.2011
            [(3R(s0p13.50h8.5v0s0b20T&l1X&l8D&l0O&a7L&12E];
  end;
//      println();
//      println(StrAlign("─", MaxWidth, STR_ALIGN_CENTER, "─"));
      AccInfo.pr_multycar.rec.CarryID = Docs.DocStorage[i][DS_CARRY];
      AccInfo.pr_multycar.GetEQ();
      ExecMacroFile("pr_accst_mcd", "PrintDoc", 1, AccInfo.pr_multycar);


[                                   ┌────────────────────────────────┐
                                    │################################│
                                    │            ПРОВЕДЕНО           │
                                    │################################│
                                    │################################│
                                    │ #################БИК ######### │
                                    │ к/с ###########################│
                                    └────────────────────────────────┘                                    ]

                  ({Name_Bank}:c, // KS 23.08.2010 I-056427 РС 6 ГЭБ, ВЫПИСКИ
                   date(Docs.DataSet.Date_Carry ):c:f,//opername(Docs.DataSet.doc_oper):c,
                   opername(AccInfo.pr_pmpaym.rec.oper):c, // KS I-078903 Операционист неверный
                   town_bank:c,   // KS 15.09.2010 I-066878 Тестирование RS V6. Приложение к выписке по лиц.счетам.
                   {mfo_bank}:c,
                   {corac_bank}:c);
    elif (GetPrnForm(Docs.DocStorage[i]) == PRN_RURMO)
//          [(3R(s0p16.67h8.5v0s0b3T&l1O&l8D&l1X&a17L];
            docnum = docnum+1;
  if ( PRINT_SEPARATOR ) // KS 18.04.2011
            [(3R(s0p13.50h8.5v0s0b4099T&a6L];
  end;
//          [(3R(s0p16.67h8.5v0s0b0T&l1X&l8D&l1O&a5L];
//      println();
//      println(StrAlign("─", MaxWidth, STR_ALIGN_CENTER, "─"));
      AccInfo.pr_documentr = FillDocumentBufferByLoansData(AccInfo.pr_documentr, Docs.DocStorage[i]);
      ExecMacroFile("pr_accst_rmo", "PrintDoc", 1, AccInfo.pr_documentr);
     /*SDA 05.03.2012 - для мемориальных ордеров штампик уже есть, вставляем только разрыв страницы */ 
      [];

    elif (GetPrnForm(Docs.DocStorage[i]) == PRN_CURMO)
//          [(3R(s0p16.67h8.5v0s0b3T&l1O&l8D&l1X&a17L];
            docnum = docnum+1;
  if ( PRINT_SEPARATOR ) // KS 18.04.2011
            [(3R(s0p13.50h8.5v0s0b4099T&a6L];
  end;
//         [(3R(s0p16.67h8.5v0s0b0T&l1X&l8D&l1O&a5L];
//      println();
//      println(StrAlign("─", MaxWidth, STR_ALIGN_CENTER, "─"));      
      AccInfo.pr_documentc = FillDocumentBufferByLoansData(AccInfo.pr_documentc, Docs.DocStorage[i]);
      ExecMacroFile("pr_accst_cmo", "PrintDoc", 1, AccInfo.pr_documentc);

[                                    ┌───────────────────────────┐
                                     │         ПРОВЕДЕНО         │
                                     │ ######################### │
                                     │ ######################### │
                                     └───────────────────────────┘                                      ]
                   (date(Docs.DataSet.Date_Carry):c:f,
                    {Name_Bank}:c // KS 23.08.2010 I-056427 РС 6 ГЭБ, ВЫПИСКИ
                   );
    end;
    i = i+1;
  end;
end;

private macro insertCbAccount(accountQueryText, cacheAccountQueryText)
    
    var commandText =        "CREATE OR REPLACE VIEW " + cbAccountViewName
                    + "\n" + "("
                    + "\n" + " t_accId,"
                    + "\n" + " t_acc,"
                    + "\n" + " t_accName,"
                    + "\n" + " t_odbAccount,"
                    + "\n" + " t_nameClnt,"
                    + "\n" + " t_inn,"
                    + "\n" + " t_oper,"
                    + "\n" + " t_dpd_r,"
                    + "\n" + " t_dpd,"
                    + "\n" + " t_currencyName,"
                    + "\n" + " t_restIn,"
                    + "\n" + " t_restInEq,"
                    + "\n" + " t_restOut,"
                    + "\n" + " t_restOutEq,"
                    + "\n" + " t_typeAccount,"
                    + "\n" + " t_chapter,"
                    + "\n" + " t_kind_account,"
                    + "\n" + " t_sort,"
                    + "\n" + " t_branch,"
                    + "\n" + " t_connAcc,"
                    + "\n" + " t_connChapter,"
                    + "\n" + " t_department,"
                    + "\n" + " t_currency,"
                    + "\n" + " t_subsystem,"
                    + "\n" + " t_initialSubsystem,"
                    + "\n" + " t_revalDocsExist"
                    + "\n" + ")"
                    + "\n" + "AS"
                    + "\n" + accountQueryText;

    sql_execute(commandText);

    commandText =        "CREATE OR REPLACE VIEW " + cbCacheAccountViewName
                + "\n" + "("
                + "\n" + " t_acc,"
                + "\n" + " t_chapter,"
                + "\n" + " t_connAcc,"
                + "\n" + " t_connChapter,"
                + "\n" + " t_currency,"
                + "\n" + " t_subsystem"
                + "\n" + ")"
                + "\n" + "AS"
                + "\n" + cacheAccountQueryText;

    sql_execute(commandText);

end;

private macro insertLoansAccount(accountObject)

    var specialFields = arrCreate("t_subsystem", "t_initialsubsystem");

    var mapper = TRsVoxMapper(tempSortTableName);

    var fields = TRsbDataset(         "SELECT cname"
                             + "\n" + "  FROM col"
                             + "\n" + " WHERE tname = " + getSqlString(strUpr(tempSortTableName))
                            );

    var fieldName;

    while (fields.next())
        fieldName = strLwr(fields.cname);
        if (arrFind(specialFields, fieldName) == -1)
            mapper.addLink(ternary(index(fieldName, "t_") == 1, substr(fieldName, 3), fieldName), fieldName);
        end;
    end;

    mapper.addLink("DECODE($(acc), $(odbAccount), " + REP_SUBSYSTEMS_CB + ", " + REP_SUBSYSTEMS_LOANS + ")", "t_subsystem");
    mapper.addLink(REP_SUBSYSTEMS_LOANS, "t_initialSubsystem");

    accountObject.toTable(mapper);

end;

private macro setCbAccountsViewName()
    var viewNumberDataSource = TRsbDataset("SELECT ddocinfo_rec_seq.nextval t_number FROM dual");

    viewNumberDataSource.setFieldType("t_number", V_INTEGER);

    if (viewNumberDataSource.next())
        cbAccountViewName = "drepaccstaccount_" + viewNumberDataSource.number;
    else
        exit(1);
    end;
end;

private macro setCacheCbAccountsViewName()
    var viewNumberDataSource = TRsbDataset("SELECT ddocinfo_rec_seq.nextval t_number FROM dual");

    viewNumberDataSource.setFieldType("t_number", V_INTEGER);

    if (viewNumberDataSource.next())
        cbCacheAccountViewName = "drepaccstaccount_" + viewNumberDataSource.number;
    else
        exit(1);
    end;
end;


// KS 21.05.2012 I-00164496
/*
	Функция создаёт объект Excel из шаблона (USERTEMPLSDIR)
		-	Крайне рекомендую использовать шаблоны в формате XLT или XLTX 
			(и НЕ ИСПОЛЬЗОВАТЬ в качестве шаблона XLS и XLSX)
*/

private macro openExcelWithTemplate(Templ)
	var out, RegParam;
        Templ = strsubst(Templ,".xls",".xlt");
	if (IsStandAlone()) // 2х звенка
		if ((ValType(ex)!=V_UNDEF) and (ex.Visible==False))
			ex = ActiveX("Excel.Application",NULL,false); 
		else
			ex = ActiveX("Excel.Application",NULL,true);        
		end;
	else                // 3х звенка
		ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
		ex = ob.CreateComObject ("Excel.Application");
	end; 

	GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,RegParam);

	var temppath = findpath(Templ,RegParam);
	if (not temppath)
		msgbox("Не найден шаблон!");
		exit();
	end;
	
	ex.visible = false;
	obBook = ex.Workbooks.open(temppath,false); 
	obSheet = obBook.ActiveSheet(); 	
end;
// KS 21.05.2012 End I-00164496

/* Основной макрос формирования выписки */
MACRO PrintAccountStatement
   (
     DprtID,
     OrgStructure,
     IssueMode,
     NumPlanArray,
     Chapter,
     Currency,
     DateIn,
     DateOut,
     Client,
     Oper,
     BalanceMask,
     AccountMask,
     KindSort,
     OutForm,
     Alg,
     Subsystem,
     PrGround,
     DblPrint,
     DocOnlyData,
     NatCurEquivalent,
     SPODTurnsTotal,
     cSetA,
     cSetZTurn,
     cSetCr,
     cEveryDayOfPrd,
     cSetExcludeRevalue,
     ExcludeOcp,
     AccountType,
     AccountUserType
    )
    /*Тихомиров Меню и обработка Excel*/
    subsystem = 2;
    flagprn = 0;
    textname = string(RANDOM(1000));
    array m;
    m(0)="Обычная";
    m(1)="Расширеная текстовая";
    m(2)="Расширеная Excel";
    m(3)="Excel на бланке";
    m(4)="Excel на бланке с дополнительной информацией";
    m(5)="Excel на бланке с доп. инф.(загрузка из Фронта)";
    m(6)="ДФР обычная";
    m(7)="ДФР Word";
    m(8)="Excel на бланке (без разбивки на страницы)";
    
    var RetVal = WELLDONE,
        DateInc, LastDate,
        AccInfo, CmdText,
        Docs,
        OldNDoc, AccCaption,
        LoansAccount;
    var accountQueryForDocInfo;
    var notProcessingAccountClause;
    var cacheQueryMaker;
    /*151*/
    var j, mn=menu(m,"Выберите формат выписки","Выберите формат выписки:");
    //subsystem=2;
    flag=0;
    if( MsgBoxEx(" Выписка к внешнему запросу ?", MB_NO + MB_YES, IND_NO) == IND_YES)    // 24.07.2013 AAN  C-22055 вызов меню, для выбора вида выписки
        Flag_AccState_CB = true;
    end;
    
    debugbreak;
   
    //Sokolov 14/11/2012 Статистика по видам отчетов
    strstat3 = "Select  count(t_oper) from dperson_dbt   where (t_name like ('%(RSSL)%') or t_name like ('%(RSTYLE)%'))   and t_oper = "+string({oper});
    sqlstat3 = rsdcommand(strstat3);
    rsstat2 = RSDRecordset(sqlstat3);
    rsstat2.movenext;
    If (rsstat2.value(0) < 1);  
        strstat1 = "select  USR_accstatement_stat_dbt.t_number_starts  from USR_accstatement_stat_dbt where t_num = "+string(mn);
        sqlstat1 = rsdcommand(strstat1);
        rsstat1 = RSDRecordset(sqlstat1);
        rsstat1.movenext;
        chetchik1 = rsstat1.value(0);
        //14.08.2013 LAO Ошибка pr_accstatement.mac в строке 5297[0]: неправильное приведение (SPECVAL + INTEGER), запрос может вернуть NULL
        if( ValType(chetchik1) == V_UNDEF )
         chetchik1=0;
        end; 
        chetchik1 = chetchik1 + 1;
        strstat2 = "update USR_accstatement_stat_dbt set t_number_starts =" + chetchik1+ ", t_oper = "+string({oper})+" where t_num = " + mn;
        sqlstat2 = rsdcommand(strstat2);
        sqlstat2.execute;
    end;  
    if (mn==1) 
        front = false;
        PrGround=true;
        DblPrint=false;
        NatCurEquivalent=false;           //Glushin
        SPODTurnsTotal=false;
        cSetA=false;
        cSetCr=true;
        //  cEveryDayOfPrd=false; SDA - 25.03.2012 - а просто научить пользователя не ставить крыжик?
        cSetExcludeRevalue=true;
        ExcludeOcp=true;
        flag=1;
        OutForm=4;
        Alg=1;
        need_print = true;
    elif (mn==0)
        front = false;
        flagprn = 1;
        need_print = true;
    elif (mn==2)
        front = false;
        PrGround=true;
        DblPrint=false;
        NatCurEquivalent=false;
        SPODTurnsTotal=false;
        cSetA=false;
        need_print = true;
        //  cSetCr=false;
        //korkin
        /*  if ({oper} != 10191)
          cEveryDayOfPrd=false;
        end;*/
        cSetExcludeRevalue=true;
        ExcludeOcp=true;
        flag=2;
        //OutForm=3;
        Alg=1;
        if (IsStandAlone()) // Двухзвенка
            if ((ValType(ex)!=V_UNDEF) and (ex.Visible==False))
                ex = ActiveX("Excel.Application",NULL,false); 
            else
                ex = ActiveX("Excel.Application",NULL,true);
            end;
        else // Трехзвенка
            ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
            ex = ob.CreateComObject ("Excel.Application");
        end;
        GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,out);
        if (currency==0)
            Fulloutput = ternary(int(ex.version) > 11,FindPath(outputxa_2007, out),FindPath(outputxa, out)); // 11 = 2003 ексель, кол-во строк на листе 65тыс макс.
            if (not Fulloutput)
                msgbox("Не найден шаблон " + outputxa);
                exit();
            end;
            curr= 0;
        else
            NatCurEquivalent=true;
            mon=1;
            mon=money(mon);
            curr=currency;
            //    Fulloutput = FindPath(outputxas, out); //01.06.2012 vihrov так было
            Fulloutput = ternary(int(ex.version) > 11,FindPath(outputxas_2007, out),FindPath(outputxas, out)); // 01.06.2012 vihrov 11 = 2003 ексель, кол-во строк на листе 65тыс макс.
            if (not fulloutput)
                msgbox("Не найдена шаблон " + outputxas);
                exit();
            end;
        end; 
        //fulloutput = strsubst(strlwr(getcurdir(false)),"\\obj","")+strsubst(fulloutput,"..","");
        //  obBook = ex.Workbooks.open(fulloutput,false); 
        obBook = ex.Workbooks.add(fulloutput); // 01.06.2012 vihrov 
        obSheet = obBook.ActiveSheet(); 
    elif ((mn==3) or (mn==8)) 
        if (mn==8)
            PageAutoNumber = True;
        end;
        if (REPLACE_DOCKINDS != "")
            //  DocKinds     = ArrCreate("01", "05", "09", "17", ""); //По просьбе Анастасии (ГЭБ) вн т. 4231
            DocKinds = TArray;
            var ind,i = 0;
            var val;
            REPLACE_DOCKINDS = StrSubst(REPLACE_DOCKINDS," ","") + ",";
            while( REPLACE_DOCKINDS != "" )
                ind = index(REPLACE_DOCKINDS,",");
                val = substr(REPLACE_DOCKINDS,1,ind-1);
                REPLACE_DOCKINDS = substr(REPLACE_DOCKINDS,ind+1,strlen(REPLACE_DOCKINDS)-ind);
                DocKinds[i] = val;
                i = i + 1;
            end;
            DocKinds[i] = "";
        end;
        front = false;
        cSetZTurn=false;
        PrGround=true;
        DblPrint=false;
        NatCurEquivalent=false;
        SPODTurnsTotal=false;
        cSetA=false;
        //DAI R-257980 при интерфейсном запуске из вн. отч. признак "исключить корсчет" значимый
        if (GetIdentProgram() != RSB_MOD_REP)
          cSetCr=true;
        end;
        cEveryDayOfPrd=false;
        cSetExcludeRevalue=true;
        ExcludeOcp=true;
        flag=3;
        //  OutForm=3;
        Alg=1;
        need_print = true;
        if (IsStandAlone()) // Двухзвенка
            if ((ValType(ex)!=V_UNDEF) and (ex.Visible==False))
                ex = ActiveX("Excel.Application",NULL,false); 
            else
                ex = ActiveX("Excel.Application",NULL,true);
            end;
        else // Трехзвенка
            ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
            ex = ob.CreateComObject ("Excel.Application");
        end; 
        GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,out);
        //Fulloutput = FindPath(outputx, out);                    
        if (currency==0)
            //    Fulloutput = FindPath(outputx, out);
            Fulloutput = ternary(int(ex.version) > 11,FindPath(outputx_2007, out),FindPath(outputx, out)); // 01.06.2012 vihrov 11 = 2003 ексель, кол-во строк на листе 65тыс макс.
            if (not fulloutput)
                msgbox("Не найдена шаблон " + outputx);
                exit();
            end;
            curr= 0;
        else
            NatCurEquivalent=false;
            mon=1;
            mon=money(mon);
            curr=currency;
            //    Fulloutput = FindPath(outputxs, out);
            Fulloutput = ternary(int(ex.version) > 11,FindPath(outputxs_2007, out),FindPath(outputxs, out)); // 01.06.2012 vihrov 11 = 2003 ексель, кол-во строк на листе 65тыс макс.
            if (not fulloutput)
               msgbox("Не найдена шаблон " + outputxs);
               exit();
            end;
        end; 
        //  obBook = ex.Workbooks.open(fulloutput,false); 
        obBook = ex.Workbooks.add(fulloutput); // 01.06.2012 vihrov
        obSheet = obBook.ActiveSheet(); 
    elif (mn==4)
      front = false;
      cSetZTurn=false;
      PrGround=true;
      DblPrint=false;
      NatCurEquivalent=false;
      SPODTurnsTotal=false;
      cSetA=false;
      cSetCr=true;
      cEveryDayOfPrd=false;
      cSetExcludeRevalue=true;
      ExcludeOcp=true;
      flag=4;
      //  OutForm=3;
      Alg=1;
      need_print = true;
      sqltab = "DECLARE \n"
         +  " v_err EXCEPTION; \n"
         +  " PRAGMA EXCEPTION_INIT( v_err, -955 );\n"
         + "BEGIN EXECUTE IMMEDIATE 'CREATE TABLE daccstate_dbt"
         + " (  T_number Number (10), " 
         + "   T_OPER NUMBER(5), " 
         + "   T_date date, " 
         +   " T_info VARCHAR2(120), " 
         +   " T_activ char(1 char) )';\n " 
         + "EXCEPTION WHEN v_err THEN NULL; \n"
         + "END; \n";
      SQL_Execute(sqltab,"Создание таблицы отчета", false);
      // info = GetNote(); // 10.04.2012 vihrov отключен лишний скроллинг с ненужными сообщениями
      if (IsStandAlone()) // Двухзвенка
         if ((ValType(ex)!=V_UNDEF) and (ex.Visible==False))
            ex = ActiveX("Excel.Application",NULL,false); 
         else
            ex = ActiveX("Excel.Application",NULL,true);
         end;
      else // Трехзвенка
         ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
         ex = ob.CreateComObject ("Excel.Application");
      end; 
      GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,out);
      //Fulloutput = FindPath(outputx, out);                    
      if (currency==0)
         //Fulloutput = FindPath(outputx, out);
         Fulloutput = ternary(int(ex.version) > 11,FindPath(outputx_2007, out),FindPath(outputx, out)); // 01.06.2012 vihrov 11 = 2003 ексель, кол-во строк на листе 65тыс макс.
         if (not fulloutput)
            msgbox("Не найдена шаблон " + outputx);
            exit();
         end;
         curr= 0;
      else
         NatCurEquivalent=false;
         mon=1;
         mon=money(mon);
         curr=currency;
         //Fulloutput = FindPath(outputxs, out);
         Fulloutput = ternary(int(ex.version) > 11,FindPath(outputxs_2007, out),FindPath(outputxs, out)); // 01.06.2012 vihrov 11 = 2003 ексель, кол-во строк на листе 65тыс макс.
         if (not fulloutput)
            msgbox("Не найдена шаблон " + outputxs);
            exit();
         end;
      end; 
      //obBook = ex.Workbooks.open(fulloutput,false); 
      obBook = ex.Workbooks.add(fulloutput); // 01.06.2012 vihrov
      obSheet = obBook.ActiveSheet(); 
   elif (mn==5)
      debugbreak;
      OvConnection = Connect2Over();
      front = true;
      cSetZTurn=false;
      PrGround=true;
      DblPrint=false;
      NatCurEquivalent=false;
      SPODTurnsTotal=false;
      cSetA=false;
      cSetCr=true;
      cEveryDayOfPrd=false;
      cSetExcludeRevalue=true;
      ExcludeOcp=true;
      flag=4;
      //  OutForm=3;
      Alg=1;
      need_print = true;
      sqltab = "DECLARE \n"
         +  " v_err EXCEPTION; \n"
         +  " PRAGMA EXCEPTION_INIT( v_err, -955 );\n"
         + "BEGIN EXECUTE IMMEDIATE 'CREATE TABLE daccstate_dbt"
         + " (  T_number Number (10), " 
         + "   T_OPER NUMBER(5), " 
         + "   T_date date, " 
         +   " T_info VARCHAR2(120), " 
         +   " T_activ char(1 char) )';\n " 
         + "EXCEPTION WHEN v_err THEN NULL; \n"
         + "END; \n";
      SQL_Execute(sqltab,"Создание таблицы отчета", false);
      // info = GetNote(); // 10.04.2012 vihrov отключен лишний скроллинг с ненужными сообщениями
      if (IsStandAlone()) // Двухзвенка
         if ((ValType(ex)!=V_UNDEF) and (ex.Visible==False))
            ex = ActiveX("Excel.Application",NULL,false); 
         else
            ex = ActiveX("Excel.Application",NULL,true);
         end;
      else // Трехзвенка
         ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
         ex = ob.CreateComObject ("Excel.Application");
      end; 
      GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,out);
      //Fulloutput = FindPath(outputx, out);                    
      if (currency==0)
         //Fulloutput = FindPath(outputx, out);
         Fulloutput = ternary(int(ex.version) > 11,FindPath(outputx_2007, out),FindPath(outputx, out)); // 01.06.2012 vihrov 11 = 2003 ексель, кол-во строк на листе 65тыс макс.
         if (not fulloutput)
            msgbox("Не найдена шаблон " + outputx);
            exit();
         end;
         curr= 0;
      else
         NatCurEquivalent=false;
         mon=1;
         mon=money(mon);
         curr=currency;
         //Fulloutput = FindPath(outputxs, out);
         Fulloutput = ternary(int(ex.version) > 11,FindPath(outputxs_2007, out),FindPath(outputxs, out)); // 01.06.2012 vihrov 11 = 2003 ексель, кол-во строк на листе 65тыс макс.
         if (not fulloutput)
            msgbox("Не найдена шаблон " + outputxs);
            exit();
         end;
      end; 
      /* Если осталось открытое соединение, закрываем */
      if (OvConnection and (OvConnection.State == 1) )
         OvConnection.Close();
      end;
      //obBook = ex.Workbooks.open(fulloutput,false); 
      obBook = ex.Workbooks.add(fulloutput); // 01.06.2012 vihrov
      obSheet = obBook.ActiveSheet(); 
   elif (mn==6) /*Tovpeko*/
      front = false;
      flagprn = 1;
      print_once = true;
      need_print = false;
      LD = DateOut;
   elif (mn==7) /*Tovpeko*/
      msgbox("Выписка в WORD формируется ПО_ВСЕМ_ДНЯМ периода В_ОДНОЙ таблице без разбивки по дням!!!");
      front = false;
      flagprn = 0;
      print_once = true;
      need_print = false;
      cEveryDayOfPrd=true;  //**//
      LD = DateOut;
      row = 2;
      f = 5;
      str = 27;
      first_page = true;
      count_all_docs = 0;
      sum_all_d = 0;
      sum_all_k = 0;
      sum_all_out = 0;
      GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,RegParam);
      Templ = "pr_accstate.dot";
      temppath = findpath(Templ,RegParam); 
      if (not temppath)
         msgbox("Не найдена LBR");
         exit();
      end;
      WordApp = CreateWordApplication();
      if (WordApp)
         WordDoc = WordApp.Documents.Add( temppath );
      end;
   elif (mn<0)
      return 0;
   end;

/*if ((currency!=0) and (mn>0) and (mn!=2))
msgbox ("Отчет в валюте не реализован");
return 0;
end;  
          debugbreak;
            if (flag > 1)
            setoutput(string("docs",{oper},".",textname),false);
            setoutput(null,true);
            end;
*/
   var hasInvalidLoansAccount = false;
   var invalidLoansAccountProtocol;
   AccInfo = TAccStatementInfo(DprtID, OrgStructure, IssueMode, NumPlanArray, Chapter, Currency, DateIn, DateOut, 
                              Client, Oper, BalanceMask, AccountMask, KindSort, OutForm, Alg, Subsystem, PrGround, 
                              DblPrint, DocOnlyData, NatCurEquivalent, SPODTurnsTotal, cSetA, cSetZTurn, cSetCr, 
                              cEveryDayOfPrd, cSetExcludeRevalue, ExcludeOcp, AccountType, AccountUserType);
  /* Контроль открытых опердней */
   if (RepOperdaysOpened(AccInfo.DepartmentList, AccInfo.DateIn, AccInfo.DateOut).ShouldContinue == false)
      RetVal = OPERDAYNOTPASSED;
   end;
   if ((accInfo.currency != NATCUR) and (accInfo.natcurEquivalent))
      TRevaluationParametersChecker(accInfo).execute();
   end;
   MaxWidth = wSPOD+wDATE+wSHIFR+wNUMBD+wBIC+wACC+wSUMM*4+wGROUND+11;
   if (not AccInfo.PrGround)
      MaxWidth = MaxWidth - wGROUND - 1;
   end;
   if (RetVal == WELLDONE)
      RetVal = InitPck(AccInfo);
   end;
/*Тихомиров Обработка введенного счета*/
   if ((flag==1) or(flag==2))
      j=0;
/*
    while (j<strlen(accountmask))
     j=j+1;                     
      if ((substr(AccountMask,j,1)!=1) and (substr(AccountMask,j,1)!=0) and (substr(AccountMask,j,1)!=2) and (substr(AccountMask,j,1)!=3)
       and (substr(AccountMask,j,1)!=4) and (substr(AccountMask,j,1)!=5) and (substr(AccountMask,j,1)!=6)  and (substr(AccountMask,j,1)!=7)
       and (substr(AccountMask,j,1)!=8) and (substr(AccountMask,j,1)!=9))
        if ((substr(AccountMask,j,1)!="?") and (substr(AccountMask,j,1)!="*"))
         msgbox("Укажите номер лицевого счета, по которому выпускается выписка, соответствующий заданным параметрам обора и правам доступа (Присутствуют недопустимые символы)");
         RetVal = 9;
        end;
      end;
    end;
    if (strlen(accountmask) == 0)
       accountmask = "*";
    end;
    accountmasksql = strsubst (strsubst(AccountMask, "*", "%"), "?", "_");
*/
    // KS 23.04.2011 Боже мой!! Почему не устроила convertMaskToSQLFormat? Из-за скорости?
      accountmasksql = convertMaskToSQLFormat(AccountMask, "t_account");
      if (accountmasksql=="")
         accountmasksql = "(1=1)";
      end;
      if (DprtID == 1)
         dprts = " AND t_department = ?";
      else
         dprts = " AND t_branch = ?";
      end;
      if (currency == 0)
         cmd_sql = rsdcommand("SELECT COUNT (ROWID) AS cnt "+
                              " FROM daccount_dbt "+
                     //        " WHERE t_account LIKE ? "+
                              " WHERE " + accountmasksql +
                              dprts);
      else
          cmd_sql = rsdcommand("SELECT COUNT (ROWID) AS cnt "+
              " FROM daccount$_dbt "+
      //        " WHERE t_account LIKE ? "+
              " WHERE " + accountmasksql +
              dprts);
      end;
      //    cmd_sql.addparam("Mask",RSDBP_IN,AccountMasksql);
      cmd_sql.addparam("Branch",RSDBP_IN,DprtID);    
      cmd_sql.execute();
      rsd = rsdrecordset(cmd_sql);
      if ((rsd.movenext()) and (rsd.value(0) < 1))
         msgbox("Укажите номер лицевого счета, по которому выпускается выписка, соответствующий заданным параметрам обора и правам доступа (Количество счетов "+int(rsd.value(0))+")");
         return 0;
      else
         flagprn=1;
      end;
   end;
// Флаг для печати одного счета
   if ((flag==3) or(flag==4))
      j=0;
/*
    while (j<strlen(accountmask))
     j=j+1;                     
      if ((substr(AccountMask,j,1)!=1) and (substr(AccountMask,j,1)!=0) and (substr(AccountMask,j,1)!=2) and (substr(AccountMask,j,1)!=3)
       and (substr(AccountMask,j,1)!=4) and (substr(AccountMask,j,1)!=5) and (substr(AccountMask,j,1)!=6)  and (substr(AccountMask,j,1)!=7)
       and (substr(AccountMask,j,1)!=8) and (substr(AccountMask,j,1)!=9))
        if ((substr(AccountMask,j,1)!="?") and (substr(AccountMask,j,1)!="*") and (substr(AccountMask,j,1)!=",") and (substr(AccountMask,j,1)!=" "))
         msgbox("Укажите номер лицевого счета, по которому выпускается выписка, соответствующий заданным параметрам обора и правам доступа (Присутствуют недопустимые символы)");
         RetVal = 9;
        end;
      end;
    end;
    accountmasksql = strsubst (strsubst(AccountMask, "*", "%"), "?", "_");
*/

      // KS 23.04.2011 Боже мой!! Почему не устроила convertMaskToSQLFormat? Из-за скорости?
      accountmasksql = convertMaskToSQLFormat(AccountMask, "t_account");
      if (accountmasksql=="")
         accountmasksql = "(1=1)";
      end;
      if (DprtID == 1)
         dprts = " AND t_department = ?";
      else
         dprts = " AND t_branch = ?";
      end;
      if (currency == 0)
          cmd_sql = rsdcommand("SELECT COUNT (ROWID) AS cnt "+
              " FROM daccount_dbt "+
      //        " WHERE t_account LIKE ? "+
              " WHERE " + accountmasksql +
              dprts);
      else
          cmd_sql = rsdcommand("SELECT COUNT (ROWID) AS cnt "+
              " FROM daccount$_dbt "+
      //        " WHERE t_account LIKE ? "+
              " WHERE " + accountmasksql +
              dprts);
      end;
      // cmd_sql.addparam("Mask",RSDBP_IN,AccountMasksql);
      cmd_sql.addparam("Branch",RSDBP_IN,DprtID);    
      cmd_sql.execute();
      rsd = rsdrecordset(cmd_sql);
      if ((rsd.movenext()) and (rsd.value(0) != 1))
      else
         flagprn = 1;
      end;
   end;
   if (RetVal == WELLDONE)
      LastDate = AccInfo.DateOut;
      if (AccInfo.cEveryDayOfPrd == true)
         DateInc = 1;
      else  
         DateInc = NDays(AccInfo.DateOut)-NDays(AccInfo.DateIn)+1;
      end;
      NAcc = 0;
      while(AccInfo.DateIn <= LastDate)
         AccInfo.DateOut = AccInfo.DateIn + DateInc-1;
         SQL_Execute("{ CALL rsb_rep_ac.set_dat(" + GetSQLDate(AccInfo.DateIn) + ", " + GetSQLDate(AccInfo.DateOut) + ") }");
         if ((accInfo.subsystem == REP_SUBSYSTEMS_ALL) or (accInfo.subsystem == REP_SUBSYSTEMS_LOANS))
            sql_truncate(tempSortTableName);
         end;
         Docs = TDocument(AccInfo.OrgStructure);
         if (accInfo.subsystem == REP_SUBSYSTEMS_CB)
             begAction(1000, "Получение данных о лицевых счетах ГКБО", false);
             cmdText = makeAccountQueryText(accInfo, dateOut);
             accountQueryForDocInfo = makeAccountQueryText(accInfo, dateOut, true);
             setCbAccountsViewName();
             setCacheCbAccountsViewName();
             insertCbAccount(cmdText, accountQueryForDocInfo);
             endAction();
         else
             begAction(1000, "Получение данных о лицевых счетах RS-Loans", false);
             loansAccount = accInfo.createLoansAccount();
             insertLoansAccount(loansAccount);
             endAction();
             // специальный вариант вставки данных из ГКБО с учетом обработанных счетов других подсистем
             begAction(1000, "Получение данных о лицевых счетах ГКБО", false);
             cmdText = makeAccountQueryText(accInfo, dateOut);
             accountQueryForDocInfo = makeAccountQueryText(accInfo, dateOut, true);
             notProcessingAccountClause = "";
             cmdText = cmdText + notProcessingAccountClause;
             accountQueryForDocInfo = accountQueryForDocInfo + notProcessingAccountClause;
             setCbAccountsViewName();
             setCacheCbAccountsViewName();
             insertCbAccount(cmdText, accountQueryForDocInfo);
             endAction();
         end;
         cacheQueryMaker = TCacheQueryMaker(accInfo);
         accInfo.docInfo.cacheInformation(cacheQueryMaker.getMainQuery());
         accInfo.docInfoRateDifference.cacheInformation(cacheQueryMaker.getRateDifferenceQuery());
         AccCaption = "Печать выписки за";
         if (AccInfo.DateIn == AccInfo.DateOut)
           AccCaption = AccCaption + " " + string(AccInfo.DateOut:f);
         else
           AccCaption = AccCaption + " период с " + string(AccInfo.DateIn:f) + " по " + string(AccInfo.DateOut:f);
         end;
         InitProgress(-1, "", AccCaption);
         if (accInfo.subsystem == REP_SUBSYSTEMS_ALL)
           cmdText = "SELECT " + sqlGetFieldsString(cbAccountViewName)
            + "\n" + "  FROM " + cbAccountViewName
            + "\n" + " UNION ALL "
            + "\n" + "SELECT " + sqlGetFieldsString(cbAccountViewName)
            + "\n" + "  FROM " + tempSortTableName
            + "\n" + "   WHERE t_acc <> t_odbAccount ";
         elif (accInfo.subsystem == REP_SUBSYSTEMS_CB)
           cmdText = "SELECT " + sqlGetFieldsString(cbAccountViewName)
            + "\n" + "  FROM " + cbAccountViewName
         else
           cmdText = "SELECT " + sqlGetFieldsString(tempSortTableName)
            + "\n" + "  FROM " + cbAccountViewName + " acc" 
            + "\n" + "  WHERE EXISTS (SELECT 1 FROM " + tempSortTableName + " accLoans WHERE accLoans.t_acc = acc.t_acc)"
            + "\n" + " UNION ALL "
            + "\n" + "SELECT " + sqlGetFieldsString(tempSortTableName)
            + "\n" + "  FROM " + tempSortTableName
            + "\n" + "  WHERE t_acc <> t_odbAccount";
         end;
         CmdText = CmdText
          + "\n" + "";
         CmdText = CmdText + MakeAcOrderBy(AccInfo);
         AccInfo.Account = TRsbDataSet(CmdText);
         AccInfo.Account.SetFieldType("DPD",       V_DATE);
         AccInfo.Account.SetFieldType("DPD_R",     V_DATE);
         AccInfo.Account.SetFieldType("Currency",  V_INTEGER);
         AccInfo.Account.SetFieldType("RestIn",    V_MONEY);
         AccInfo.Account.SetFieldType("RestInEq",  V_MONEY);
         AccInfo.Account.SetFieldType("RestOut",   V_MONEY);
         AccInfo.Account.SetFieldType("RestOutEq", V_MONEY);
         
         while(AccInfo.Next())
            //28.01.2013 AAN C-16016
            // для конкретного л/с получаем историю имён из примечания 7 и заталкиваем их попрядку
            // в AccInfo.account.accname чтобы потом из этого поля печатать
            var acc_name_note, str_ac_name = "", flag_skobki = true;
            acc_name_note = AccInfo.get_acc_name_note(AccInfo.Account.acc);         // получаем массив хранящий историю имён
            
            while(acc_name_note.movenext())
               if( acc_name_note.value("t_validtodate") < AccInfo.datein )          // если это имя стало неактуально до нач
                  continue;                                                         //  периода выписки то переходим к след наименованию
               end;
               if ( (acc_name_note.value("t_date") <= AccInfo.datein)               // 1) это единственное название для периода 
                    and (acc_name_note.value("t_validtodate") >= AccInfo.dateout))  // выписки
                  str_ac_name = acc_name_note.value("t_name_ac");
                  break;
               end;
               if( (acc_name_note.value("t_date") >= AccInfo.datein) 
                    and (acc_name_note.value("t_validtodate") >= AccInfo.dateout)) // 2) если назв последнее в периоде
                  str_ac_name = acc_name_note.value("t_name_ac");
                  continue;
               end;
               if( (acc_name_note.value("t_date") >= AccInfo.datein)                // 3) если назв входит 
                    and (acc_name_note.value("t_validtodate") <= AccInfo.dateout))  // в нутрь периода 
                  if( flag_skobki )
                     str_ac_name = str_ac_name + "      ( ";
                     flag_skobki = false;
                  end;
                  str_ac_name = str_ac_name +
                                "до" + substr(string ( acc_name_note.value("t_validtodate", null, V_DATE) +1 ), 1, 10) +
                                "  " +
                                acc_name_note.value("t_name_ac") + ", ";
                    continue;
               end;
               if( (acc_name_note.value("t_date") <= AccInfo.datein)                // 4) наизвание было актуально
                    and (acc_name_note.value("t_validtodate") <= AccInfo.dateout))  // в нутрь периода 
                  if( flag_skobki )
                     str_ac_name = str_ac_name + "      ( ";
                     flag_skobki = false;
                  end;
                  str_ac_name = str_ac_name +                                       // на начало периода выписки
                                "до" + substr(string( acc_name_note.value("t_validtodate", null, V_DATE) +1 ), 1, 10) +
                                "  " +
                                acc_name_note.value("t_name_ac");
               end;
            end;
            if( not flag_skobki )
               str_ac_name = str_ac_name + " ) ";
            end;
            AccInfo.account.accname = str_ac_name;
            AccInfo.account.t_accname = str_ac_name;
            
            // AND  28.01.2013 AAN C-16016
            
            accflag = 1;
            if (AccInfo.Account.currency)
               curr = AccInfo.Account.currency;
               //Fulloutput = FindPath(outputxas, out);
               /*var m_ex, m_ob;
               m_ob = CreateObject ("rsax","TRsAxServer","RsAxServer",IsStandAlone());
               m_ex = m_ob.CreateComObject ("Excel.Application", True);
               Fulloutput = ternary(int(m_ex.version) > 11,FindPath(outputxas_2007, out),FindPath(outputxas, out)); // 01.06.2012 vihrov 11 = 2003 ексель, кол-во строк на листе 65тыс макс.
                 */
            end; 
            NAcc = NAcc+1;
            OldNDoc = NDoc;
            if /*((not AccInfo.Account.currency) and*/ (not (flagprn))    //GSP по I-00227451-2 убрал проверку валюты (зачем она вообще была сделана?)
               // Тихомиров - проверка категории //Kozina изменен запрос, т к в ВУЗе неправильно определен attrid категории
               cmdacc = rsdcommand("SELECT   COUNT (1) AS cnt                      "+
                                   "FROM   dobjatcor_dbt atcor, dobjattr_dbt attr  "+
                                   "WHERE       atcor.t_objecttype = 4             "+
                                   "AND atcor.t_groupid = 105                      "+
                                   "AND atcor.t_validtodate > to_date('"+{curdate}+"','dd.mm.yyyy') "+
                                   "AND attr.t_codelist IN (4,5)                   "+
                                   " AND atcor.t_objecttype = attr.t_objecttype    " + //А.Киселев не учли связку с типом объекта 24.02.2011
                                   "AND atcor.t_groupid = attr.t_groupid           "+
                                   "AND attr.t_attrid = atcor.t_attrid             "+
                                   "AND atcor.t_object LIKE '%"+AccInfo.Account.Acc+"'");
                //cmdacc.addparam("date",RSDBP_IN,{curdate});
         //       cmdacc.addparam("acc",RSDBP_IN,AccInfo.Account.Acc);
                cmdacc.execute;
                rsdacc = rsdrecordset(cmdacc);
                if (rsdacc.movenext())
                  if (rsdacc.value(0) > 0)
                     accflag = 0;
                  end;
               end;
            end;
            flagpril = 1;
            Message("Обрабатывается л/с: "+AccInfo.Account.Acc);
            if ((AccInfo.Account.ODBAccount == "") and (AccInfo.Account.initialSubsystem == REP_SUBSYSTEMS_LOANS))
               if (not hasInvalidLoansAccount)
                  hasInvalidLoansAccount = true;
                  invalidLoansAccountProtocol = TOfstream("invalidLoansAccount");
                  invalidLoansAccountProtocol.setOutputFile();
                  println("Необработаны следующие счета RS-Loans:");
                  invalidLoansAccountProtocol.resetOutputFile();
               end;
               invalidLoansAccountProtocol.setOutputFile();
               println(AccInfo.Account.Acc);
               invalidLoansAccountProtocol.resetOutputFile();
            else
               /* Коркин И.Н. по заявке I-068817 */
               if (accflag)
                  ProcessDocuments(accInfo, docs);
               else
                  ProcessDocumentsNotPrint(accInfo, docs);
               end;
               if (AccInfo.OutForm != ACC_FORMS_NOTHING)
                  // Тихомиров - проверка категории //Kozina изменен запрос, т к в ВУЗе неправильно определен attrid категории
                  cmdacc = rsdcommand("SELECT   COUNT (1) AS cnt                      "+
                                "FROM   dobjatcor_dbt atcor, dobjattr_dbt attr  "+
                                "WHERE       atcor.t_objecttype = 4             "+
                                "AND atcor.t_groupid = 105                      "+
                                "AND atcor.t_validtodate > to_date('"+{curdate}+"','dd.mm.yyyy') "+
                                "AND attr.t_codelist IN (5,7)                     "+ //27.06.2012 vihrov I-00192814-2 новую категорию добавил "все приложения = 7"
                                " AND atcor.t_objecttype = attr.t_objecttype    " + //А.Киселев не учли связку с типом объекта 24.02.2011
                                "AND atcor.t_groupid = attr.t_groupid           "+
                                "AND attr.t_attrid = atcor.t_attrid             "+
                                "AND atcor.t_object LIKE '%"+AccInfo.Account.Acc+"'");       
                  //cmdacc.addparam("date",RSDBP_IN,{curdate});
                  //       cmdacc.addparam("acc",RSDBP_IN,AccInfo.Account.Acc);
                  cmdacc.execute;
                  rsdacc = rsdrecordset(cmdacc);
                  if (rsdacc.movenext())
                     if (rsdacc.value(0) > 0)
                        flagpril = 0;
                     end;
                  end;
                  if (flagpril)
                     ProcessFDocs(AccInfo, Docs);
                  end;
               end;
            end;
            UseProgress(NAcc);
         end;
         RemProgress();
         AccInfo.DateIn = AccInfo.DateIn+DateInc;
         if (cbAccountViewName != "")
            sql_execute("DROP VIEW " + cbAccountViewName);
            sql_execute("DROP VIEW " + cbCacheAccountViewName);
         end;
         /*151*/
         if (flag==2)
            if (not f)
               f = 16;
            end;
            if (curr == 0)
               obSheet.Range("A15:i"+(f)).Borders.Weight=2;
               obSheet.Range("A15:i16").interior.color=4035000;
            else
               obSheet.Range("A15:j"+(f)).Borders.Weight=2;
               obSheet.Range("A15:j16").interior.color=4035000;
            end;
            Ex.visible = true;
         end;
         if ((flag==3) or (flag==4))
            Ex.visible = true;
         end;
      end;
   end;

   if (f==5)
         WordDoc.Bookmarks("Last_Operation").Range.Text     =  AccInfo.DateOut;
         WordDoc.Bookmarks("Amount").Range.Text        =  count_all_docs;
         WordDoc.Bookmarks("Sum_d").Range.Text         =  sum_all_d;
         WordDoc.Bookmarks("Sum_k").Range.Text         =  sum_all_k;
         WordDoc.Bookmarks("sum_kind_out").Range.Text  =  АП(AccInfo.Account.RestOut, AccInfo.Account.Kind_Account);
         WordDoc.Bookmarks("Sum_out").Range.Text       =  sum_all_out;
   end;

  if ((NDoc == 0) and (NAcc != 0) and (not AccInfo.cSetZTurn) and (RetVal == WELLDONE))
    RetVal = NODOC;
  end;

  if ((NAcc == 0) and (RetVal == WELLDONE))
    RetVal = NOACC;
  end;

/*  if (hasInvalidLoansAccount)
    invalidLoansAccountProtocol.setOutputFile();
    println("");
    println("Неверно заданы счета ОДБ!!!");
    println("");
    println("Нажмите <Esc> для продолжения");
    invalidLoansAccountProtocol.resetOutputFile();
    invalidLoansAccountProtocol.show();
  end;
*/  
  return RetVal;
END;
