/*───────────────────────────────────────────────────────────────────────────┐
  Книга регистрации открытых счетов - печать

  File Name     : bk_opacc_print.mac
  Call functions: PrintAccRegBook
  Call from     : bk_opacc.mac

DESCRIPTION: Для нормальной работы макроса необходимо установить
             константы, определяющие параметры вашего принтера
             а также некоторые поля отчета.
└───────────────────────────────────────────────────────────────────────────*/
import CTInter, globals, RsbDataSet, cb_sql, RsbDataSet, ofstream;

import Common; // KS I-059324 Функции определения типов счетов

/*******************************************************************************
Константы и переменные, необходимые для работы макроса
*******************************************************************************/
private var   ПечатьНомераСтраницы:bool = TRUE;

var     NumStrForAccsHeader    = 10.;           /* Количество строк на заголовок страниц, содержащих данные по счетам */
const   NumStrForAccsHeaderOwn = 7.;            /* -//- по внутрибанковским операциям  */

var     NumStrForAccsBottom    = 4.;           /* Количество строк на подвал страниц, содержащих данные по счетам */
const   NumStrForAccsBottomOwn = 6.;            /* -//- по внутрибанковским операциям  */

const   NumStrForTitulHeader   = 17.;           /* Количество строк на заголовок титульной части */
const   NumStrOnPage           = 84.;           /* Кол-во строк на странице */
var     Comments               = "";            /* Комментарии */

var     НомерСтраницы = 0;
var     FlagMes = true;                         /* Флаг, отвечающий за вывод однотипных сообщений */

var     tempStorageFileName = "bk_opacc_buf";  /* промежуточный файл вывода страница со счетами клиентов */

private var Params;                             /* Параметры формы, задаваемые в панели */

private const TempTableName = "dbk_opacc_tmp";  /* имя врем. таблицы */
private FILE AccountFile( account );            /* Справочник л/с*/
private FILE BalanceFile( balance );            /* Справочник б/с*/
private FILE Party( party );                    /* Справочник субъектов*/

var AccSort,errAccSort; // KS 21.11.2011 Сортировка счетов
GetRegistryValue( "PRBB\\REPORT\\BK_OPACC\\СОРТИРОВКА СЧЕТОВ", V_INTEGER, AccSort, errAccSort);
/****************************************************************************/

MACRO PrintNumberStr()
    if( ПечатьНомераСтраницы )
        НомерСтраницы = НомерСтраницы + 1;
[                                                           #
]( ( "- " + string( НомерСтраницы ) + " -" ):c );
    end;
END;

MACRO PutDate( dat )
  var str = string( dat:m);
  if ( substr(str, 1, 1) == " " )
    return "\"0" + substr(str, 2, 1) + "\"" + substr(str, 3);
  else
    return "\"" + substr(str, 1, 2) + "\"" + substr(str, 3);
  end;
END;

/* Формирует строку в зависимости от диапзона дат */
MACRO GetPeriodString( )
    if( Params.ReportKind == RegBookOnDate )
        return PutDate( Params.BeginDate+1 );
    else
        return "период с " + PutDate( Params.BeginDate ) + " по " + PutDate( Params.EndDate );
    end;
END; /* GetPeriodString */

/**********************************************************************
okrugl- округляет до целого в большую сторону
**********************************************************************/
macro okrugl (source)
    var result = Int(source);
    if (result < source)
        result = result+1;
    end;
    return result;
end;

/**********************************************************************
опись счетов
**********************************************************************/
class ReportToc()
    var clnBal;
    var bnkBal;

    var clnBalQuantity;
    var bnkBalQuantity;

    var clnBalStartPage;
    var bnkBalStartPage;

    var НомерСтроки;

    var numAllRec;
    var openAccs;
    var closedAccs;
    var lastPage;

    macro size()
        var plus = 0;
        if ((params.accountType == ВсеСчета) AND (clnBal.size > 0) AND (bnkBal.size > 0)) plus = 1; end;
        return clnBal.size + bnkBal.size + plus;
    end;
    
    macro add(_accountType, _balance, _quantity, _startPage)
        if ((_accountType == СчетаКлиентов) or (ФормаОтчета == true))
            clnBal[clnBal.size] = _balance;
            clnBalQuantity[_balance]   = _quantity;
            clnBalStartPage[_balance]  = _startPage;
        elif ((_accountType == СчетаБанка) and (ФормаОтчета == false))
            bnkBal[bnkBal.size] = _balance;
            bnkBalQuantity[_balance]   = _quantity;
            bnkBalStartPage[_balance]  = _startPage;
        end;
    end;

    macro addSummary(_numAllRec, _openAccs, _closedAccs)
        numAllRec = numAllRec + _numAllRec;
        openAccs = openAccs + _openAccs;
        closedAccs = closedAccs + _closedAccs;
    end;
    
    macro setBalancePage(_accountType, _balance, _startPage)
        if ((_accountType == СчетаКлиентов) or (ФормаОтчета == true))
            clnBalStartPage[_balance] = _startPage;
        elif ((_accountType == СчетаБанка) and (ФормаОтчета == false))
            bnkBalStartPage[_balance] = _startPage;
        end;
    end;

    macro saveLastRepPage()
        lastPage = НомерСтраницы;
    end;

    macro getTitlePagesNum()
        return okrugl(double(NumStrForTitulHeader + size()) / NumStrOnPage);
    end;

    macro printList()
        var i = 0;

        while (i < clnBal.size)
            if (НомерСтроки > NumStrOnPage)
                println ("\f");
                PrintNumberStr();
                НомерСтроки = 1;
            end;
            if (ПечатьНомераСтраницы)
                [#############  количество счетов #         №стр #]
                (clnBal[i], clnBalQuantity[clnBal[i]]:l, clnBalStartPage[clnBal[i]]:l);
            else
                [#############  количество счетов #]
                (clnBal[i], clnBalQuantity[clnBal[i]]:l);
            end;
            НомерСтроки = НомерСтроки + 1;
            i = i + 1;
        end;

        if ((params.accountType == ВсеСчета) AND (clnBal.size > 0) AND (bnkBal.size > 0))
            println();
            НомерСтроки = НомерСтроки + 1;
        end;

        i = 0;
        while (i < bnkBal.size)
            if (НомерСтроки > NumStrOnPage)
                println ("\f");
                PrintNumberStr();
                НомерСтроки = 1;
            end;
            if (ПечатьНомераСтраницы)
                [#############  количество счетов #         №стр #]
                (bnkBal[i], bnkBalQuantity[bnkBal[i]]:l, bnkBalStartPage[bnkBal[i]]:l);
            else
                [#############  количество счетов #]
                (bnkBal[i], bnkBalQuantity[bnkBal[i]]:l);
            end;
            НомерСтроки = НомерСтроки + 1;
            i = i + 1;
        end;

    end;

    /* печать заголовка отчета */
    macro printTitle()
        var str:string = GetPeriodString(), sep;;

        if (Params.ReportKind == RegBookOnDate)
            str = "на " + str;
        else
            str = "за " + str;
        end;

        PrintNumberStr();

        if ((Params.accountType == СчетаБанка) and (ФормаОтчета == true))
[   К Н И Г А   Р Е Г И С Т Р А Ц И И    О Т К Р Ы Т Ы Х    С Ч Е Т О В   П О   В Н У Т Р И Б А Н К О В С К И М   О П Е Р А Ц И Я М
######################################################################################################################################](str:c);
        elif( ( errAccSort == 0 ) and ( AccSort == 1 ) and (params.accountType == ВсеСчета)) // KS 21.11.2011 Сортировка счетов
[                                К Н И Г А   Р Е Г И С Т Р А Ц И И    О Т К Р Ы Т Ы Х    С Ч Е Т О В
####################################################################################################################################](str:c);
        else
[                       К Н И Г А   Р Е Г И С Т Р А Ц И И    О Т К Р Ы Т Ы Х    С Ч Е Т О В   К Л И Е Н Т О В
####################################################################################################################################](str:c);
        end;

        printLn();
        printLn("Сдана в архив ", string(PutDate(Params.ArchDate)));
        printLn();
        printLn({Name_Book}," ___________________ ", {FIO_Book});
        printLn();
        printLn("Опись.");
        printLn();

        НомерСтроки = НомерСтроки + 9;

        printList();

        if ((НомерСтроки + 8) > (NumStrOnPage + 1))
            println ("\f");
            НомерСтроки = 1;
            PrintNumberStr();
        end;

        var str1 = "Итого по состоянию на " + PutDate(Params.EndDate+1) +
                   " имеется "+ 
                   String( NumAllRec - ClosedAccs) +
                   " открытых счетов. "; 
        var str2 = "открыто счетов: " + String(OpenAccs)    + ",";
        var str3 = "закрыто счетов: " + String(ClosedAccs)  + ".";

[──────────────────────────────────────────────────────
Итого          количество листов #

#

#
#
#](string(lastPage), str1, "За " +GetPeriodString(),str2,str3);

       println ("\f");

    END; /* of macro PrintTitul */

    macro constructorReportToc()
        var clientBalances;
        var bankBalances;

        НомерСтроки = 1;

        NumAllRec = 0;
        OpenAccs = 0;
        ClosedAccs = 0;
        lastPage = 0;

        clnBal = TArray();
        bnkBal = TArray();

        clnBalQuantity = TArray();
        bnkBalQuantity = TArray();

        clnBalStartPage = TArray();
        bnkBalStartPage = TArray();

        // KS 21.11.2011 Сортировка счетов
       if( ( errAccSort == 0 ) and ( AccSort == 1 ) and (params.accountType == ВсеСчета))

              bankBalances = TRsbDataSet(
                           "   SELECT t_Balance Balance, t_accountType accountType, count(*) AccNum"
                  + "\n" + "     FROM " + TempTableName
                  + "\n" + "    WHERE t_accountType in (" + СчетаБанка + "," + СчетаКлиентов + ")"
                  + "\n" + " GROUP BY t_Balance, t_accountType"
                  + "\n" + " ORDER BY t_balance"
                                          );
              while (bankBalances.next())
                  add(bankBalances.accountType, bankBalances.Balance, Int(bankBalances.AccNum), 0);
              end;

        else // KS 21.11.2011 Сортировка счетов - Окончание

          if ((Params.AccountType == ВсеСчета) OR (Params.AccountType == СчетаКлиентов))
              clientBalances = TRsbDataSet(
                           "   SELECT t_Balance Balance, count(*) AccNum"
                  + "\n" + "     FROM " + TempTableName
                  + "\n" + "    WHERE t_accountType = " + СчетаКлиентов
                  + "\n" + " GROUP BY t_Balance"
                  + "\n" + " ORDER BY t_balance"
                                         );
              while (clientBalances.next())
                  add(СчетаКлиентов, clientBalances.Balance, Int(clientBalances.AccNum), 0);
              end;
          end;

          if ((Params.AccountType == ВсеСчета) OR (Params.AccountType == СчетаБанка))
              bankBalances = TRsbDataSet(
                           "   SELECT t_Balance Balance, count(*) AccNum"
                  + "\n" + "     FROM " + TempTableName
                  + "\n" + "    WHERE t_accountType = " + СчетаБанка
                  + "\n" + " GROUP BY t_Balance"
                  + "\n" + " ORDER BY t_balance"
                                        );
              while (bankBalances.next())
                  add(СчетаБанка, bankBalances.Balance, Int(bankBalances.AccNum), 0);
              end;
          end;

        end;

    end;

    constructorReportToc();
end;

class PrintForm(accountType_, _toc)

    var dataSet;

    var NumPageForTitul;
    var NBlnc;
    var AllNAcc;
    var OpenAccs;
    var ClosedAccs;
    var НомерСтроки;
    var TempFile;
    var NumAllRec;
    var accountType;
    var Balance;
    var IsFirstBalance;
    var NumStrPrinted;
    var NumStrForRecords;
    var CloseDate;
    var Client_Name;


    var bankAccountNameStrLen;
    var openGroundStrLen;
    var closeGroundStrLen;
    var commentStrLen;

    var contractNumberStrLen;
    var clientNameStrLen;
    var clientAccountNameStrLen;
    var extractPeriodStrLen;

    var toc;

    /* Печатает шапку */
    MACRO PrintHeader()
        var str:string = GetPeriodString(), sep;;

        if (Params.ReportKind == RegBookOnDate)
            str = "на " + str;
        else
            str = "за " + str;
        end;

        PrintNumberStr();

        if ((accountType == СчетаБанка) and (ФормаОтчета == false))
[   К Н И Г А   Р Е Г И С Т Р А Ц И И    О Т К Р Ы Т Ы Х    С Ч Е Т О В   П О   В Н У Т Р И Б А Н К О В С К И М   О П Е Р А Ц И Я М
######################################################################################################################################](str:c);
        elif ((accountType == СчетаКлиентов) or (формаОтчета == true))
[                       К Н И Г А   Р Е Г И С Т Р А Ц И И    О Т К Р Ы Т Ы Х    С Ч Е Т О В   К Л И Е Н Т О В
####################################################################################################################################](str:c);
        end;


    END; /* PrintHeader */

    /******************************************************************************
    макрос PrintRecordTitul - печатает запись на титульный лист
    ******************************************************************************/
    macro PrintRecordTitul (Balance, NAcc)
        var NumPage;

        НомерСтроки = НомерСтроки + 1;
        if ( НомерСтроки > NumStrOnPage )
            println ("\f");
            НомерСтроки = 1;
            PrintNumberStr();
        end;
[#############  количество счетов #         №стр #](Balance,NAcc:l, "-");

        return TRUE;
    end; /* of PrintRecordTitul */

    /* Подсчитывает количество балансовых счетов, всего счетов etc. */
    MACRO CountNumbers( )
        /* Кол-во балансовых счетов (NBlnc) */
        var data = TRsbDataSet( "SELECT count( DISTINCT t_Balance ) Count FROM " + " ( " + dataSet + " )  ");
        data.MoveNext( );
        NBlnc = int( data.Count );

        /* Подсчитываем число всего счетов в отчете */
        data = TRsbDataSet( "SELECT count( * ) Count FROM " + " ( " + dataSet + " ) " );
        data.MoveNext( );
        NumAllRec = AllNAcc = int( data.Count );

        /* Подсчитываем число открытых за заданный период счетов */
        data = TRsbDataSet( "SELECT count( * ) Count FROM " + " ( " + dataSet + " ) " 
            + " WHERE t_Open_Date BETWEEN " + GetSQLDate( Params.BeginDate ) + " AND " + GetSQLDate( Params.EndDate )
        );
        data.MoveNext( );
        OpenAccs = int( data.Count );

        /* Подсчитываем число закрытых за заданный период счетов (из выбранных!) */
        data = TRsbDataSet( "SELECT count( * ) Count FROM " + " ( " + dataSet + " ) " 
            + " WHERE t_Close_Date BETWEEN " + GetSQLDate( Params.BeginDate ) + " AND " + GetSQLDate( Params.EndDate )
        );
        data.MoveNext( );
        ClosedAccs = int( data.Count );

        if (accountType == СчетаБанка)
            NumStrForAccsHeader = NumStrForAccsHeaderOwn;
            NumStrForAccsBottom = NumStrForAccsBottomOwn;
        end;

        НомерСтроки = 0;
        toc.addSummary(numAllRec, openAccs, closedAccs);

        if(NumAllRec == 0)
            return false;
        else
            return true;
        end;
    END; /* CountNumbers */

    /* Подсчитывает количество лицевых счетов на балансовых и печатает записи на титульном листе */
    MACRO PrintBodyTitul()

        var accblnc = TRsbDataSet(
            "SELECT t_Balance, count(*) AccNum, t_Name_Account"
          + " FROM " + " ( " + dataSet + " ) "
          + " GROUP BY t_Balance, t_Name_Account"
          + " ORDER BY t_Balance"
        );

        /* Используем NBlnc - считаем, что CountNumbers уже отработала. */
        InitProgress( NBlnc, "Обработка балансовых счетов и печать титульного листа" );
        var i = 0;
        while( accblnc.MoveNext( ) )
            UseProgress( i = i + 1 );
            PrintRecordTitul( accblnc.Balance, int( accblnc.AccNum ) );
        end; 
        RemProgress();
        return TRUE;
    END; /* PrintBodyTitul */

    /******************************************************
    macro PrintHeaderTitul - печать шапки на титульном листе
    ******************************************************/
    macro PrintHeaderTitul()
        PrintHeader();
        if((accountType != СчетаБанка) or (ФормаОтчета == true))

            /*//16 Jan 07 Tue 17:04:36 Malakhova Irina*/
            printLn();
            printLn("Сдана в архив ", string(PutDate(Params.ArchDate)));
            printLn();
            printLn({Name_Book}," ___________________ ", {FIO_Book});
            printLn();
            printLn("Опись.");
            printLn();

            НомерСтроки = НомерСтроки + 10;
        end;
    end; /* of macro PrintHeaderTitul */

    /* Печатает заключения на титульном листе */
    MACRO PrintBottomTitul()

       if ( (НомерСтроки + 8) > NumStrOnPage )
           println ("\f");
           НомерСтроки = 1;
           PrintNumberStr();
       end;

       var str1 = "Итого по состоянию на " + PutDate(Params.EndDate+1) +
                  " имеется "+ 
                  String( NumAllRec - ClosedAccs) +
                  " открытых счетов. "; 
       var str2 = "открыто счетов: " + String(OpenAccs)    + ",";
       var str3 = "закрыто счетов: " + String(ClosedAccs)  + ".";

       if(accountType != СчетаБанка)
[──────────────────────────────────────────────────────
Итого          количество листов #

#

#
#
#]("-", str1, "За " +GetPeriodString(),str2,str3);
       end;
       println ("\f");
       Return True;
    END; /* PrintBottomTitul */

    /******************************************************************************
    macro PrintTitul - печатает титульный лист
    ******************************************************************************/
    MACRO PrintTitul()

        /* Начало операторов PrintTitul*/
        if (not CountNumbers()) return FALSE; end;

        PrintHeaderTitul();
        if(accountType != СчетаБанка)
            PrintBodyTitul();
        end;
        PrintBottomTitul();

        return TRUE;
    END; /* of macro PrintTitul */
    
    /************************************************
    macro PrintHeaderAccs - печатает заголовок страницы со счетами
    ************************************************/
    macro PrintHeaderAccs ()

        PrintNumberStr();
[Балансовый счет #

](TempFile.Balance + " \"" + TempFile.Name_Account + "\"");

        if ( (accountType == СчетаБанка) and (ФормаОтчета == false) )
[┌──────────┬─────────────────────────┬───────────────────────────────────┬────────────────────────────────────────┬──────────┬─────────────────────────────────────────┬────────────────────┐
 │ Дата     │                         │                                   │                                        │ Дата     │                                         │                    │
 │ открытия │   Номер счета           │        Наименование счета         │        Основание открытия счета        │ закрытия │         Основание закрытия счета        │   Примечание       │
 │ счета    │                         │                                   │                                        │ счета    │                                         │                    │
 ├──────────┼─────────────────────────┼───────────────────────────────────┼────────────────────────────────────────┼──────────┼─────────────────────────────────────────┼────────────────────┤
 │    1     │            2            │                3                  │                   4                    │     5    │                     6                   │          7         │
 ├──────────┼─────────────────────────┼───────────────────────────────────┼────────────────────────────────────────┼──────────┼─────────────────────────────────────────┼────────────────────┤];
        else
            /*//01 Aug 07 Wed 10:23:10 Malakhova Irina 110772*/
            /*Добавила колонку с датой сообщения налоговым органам о закрытии счета*/
            if( Params.NeedPrintFunds )
[┌──────────┬────────────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬───────────────────────────────────────┬────────────────────┬────────────┬────────────┬────────────┬────────────┬──────────┬────────────┬────────────────────┐
 │ Дата     │ Дата и номер договора              │ Номер лицевого счета    │ Наименование клиента                  │ Наименование (цель) счета             │ Порядок и          │ Дата       │ Пенсионный │Фонд обяза- │ Госкомстат │ Дата     │ Дата       │   Примечание       │
 │ открытия │ об открытии счета                  │                         │                                       │                                       │ периодичность      │ сообщения  │ фонд       │тельного    │            │ закрытия │ сообщения  │                    │
 │ счета    ├──────────┬─────────────────────────┤                         │                                       │                                       │ выдачи выписок     │ налоговым  │            │медицинского│            │ счета    │ налоговым  │                    │
 │          │ Дата     │ № договора              │                         │                                       │                                       │ по счету           │ органам об │            │страхования │            │          │ органам о  │                    │
 │          │          │                         │                         │                                       │                                       │                    │ открытии   │            │            │            │          │ закрытии   │                    │
 │          │          │                         │                         │                                       │                                       │                    │ счета      │            │            │            │          │ счета      │                    │
 ├──────────┼──────────┼─────────────────────────┼─────────────────────────┼───────────────────────────────────────┼───────────────────────────────────────┼────────────────────┼────────────┼────────────┼────────────┼────────────┼──────────┼────────────┼────────────────────┤]
            else
[┌──────────┬────────────────────────────────────┬─────────────────────────┬───────────────────────────────────────┬───────────────────────────────────────┬────────────────────┬────────────┬──────────┬────────────┬────────────────────┐
 │ Дата     │ Дата и номер договора              │ Номер лицевого счета    │ Наименование клиента                  │ Наименование (цель) счета             │ Порядок и          │ Дата       │ Дата     │ Дата       │   Примечание       │
 │ открытия │ об открытии счета                  │                         │                                       │                                       │ периодичность      │ сообщения  │ закрытия │ сообщения  │                    │
 │ счета    ├──────────┬─────────────────────────┤                         │                                       │                                       │ выдачи выписок     │ налоговым  │ счета    │ налоговым  │                    │
 │          │ Дата     │ № договора              │                         │                                       │                                       │ по счету           │ органам об │          │ органам о  │                    │
 │          │          │                         │                         │                                       │                                       │                    │ открытии   │          │ закрытии   │                    │
 │          │          │                         │                         │                                       │                                       │                    │ счета      │          │ счета      │                    │
 ├──────────┼──────────┼─────────────────────────┼─────────────────────────┼───────────────────────────────────────┼───────────────────────────────────────┼────────────────────┼────────────┼──────────┼────────────┼────────────────────┤]
            end;
        end;
    end; /* of macro PrintHeaderAccs */

    /*************************************************
    macro PrintBottomAccs - печатает заключение на страницах со счетами
    *************************************************/
    macro PrintBottomAccs ()
        if ( (accountType == СчетаБанка) and (ФормаОтчета == false)  )
[└──────────┴─────────────────────────┴───────────────────────────────────┴────────────────────────────────────────┴──────────┴─────────────────────────────────────────┴────────────────────┘];
            /*//16 Jan 07 Tue 17:13:16 Malakhova Irina*/
            printLn();
            printLn("Сдана в архив ", string(PutDate(Params.ArchDate)));
            printLn();
            printLn({Name_Book}," ___________________ ", {FIO_Book});
            printLn();
        else
            if( Params.NeedPrintFunds )
[└──────────┴──────────┴─────────────────────────┴─────────────────────────┴───────────────────────────────────────┴───────────────────────────────────────┴────────────────────┴────────────┴────────────┴────────────┴────────────┴──────────┴────────────┴────────────────────┘];
            else
[└──────────┴──────────┴─────────────────────────┴─────────────────────────┴───────────────────────────────────────┴───────────────────────────────────────┴────────────────────┴────────────┴──────────┴────────────┴────────────────────┘];
            end;
            /*//16 Jan 07 Tue 17:14:56 Malakhova Irina*/            
            printLn();
            printLn({Name_Book}," ___________________ ", {FIO_Book});
            printLn();
         end;
            println ("\f");
    end; /* of macro PrintBottomAccs */   

    /*************************************************
    macro fillClientName - получение имени клиента (дополнительно
                           для подсчета занимаемых им строк)
    *************************************************/
    macro fillClientName()

        if (accountType == СчетаКлиентов)

            Party.PartyID = int(TempFile.Client);
/*            if (accountForPrint = "47423810330000048275")
					Party.PartyID=520936;
            elif (valtype(TempFile.Client) == V_UNDEF)
            	Party.PartyID=3045;
            else
            	Party.PartyID=int(TempFile.Client);
            end;
*/

            if (Party.PartyID == {OurBank}) 
                Party.PartyID = {OurBank};
            end;

            if (GetEQ(Party))
                Client_Name=Party.Name;
            else 
                Client_Name="Неизвестно";
            end;
        end;

    end; /* of macro fillClientName */   

    /**********************************************************************
    macro calculateNecessaryRows - подсчет строк, необходимых лоя вывода всех
                             регалий счета с переносом по словам длинных строк
    **********************************************************************/
    macro calculateNecessaryRows() : Integer
        var rows;
        var maxRows = 1;
        var longStr;
        var longStrBrake;

        var printedRows = TArray;

        if (accountType == СчетаКлиентов)
            fillClientName();

            longStr =      arrCreate(TempFile.ContractNumber, Client_Name,
                                     TempFile.NameAccount, TempFile.ExtractPeriod, Comments);

            longStrBrake = arrCreate(contractNumberStrLen, clientNameStrLen,
                                     clientAccountNameStrLen, extractPeriodStrLen, commentStrLen);
        else

            longStr =      arrCreate(TempFile.NameAccount,  TempFile.OpenGround, TempFile.CloseGround,  Comments);
            longStrBrake = arrCreate(bankAccountNameStrLen, openGroundStrLen,    closeGroundStrLen,     commentStrLen);
        end;

        var i = 0;
        while (i < longStr.size)

            printedRows = strSplit2(longStr[i], longStrBrake[i]);

            rows = printedRows.size;

            if (maxRows < rows) maxRows = rows; end;

            i = i + 1;

        end;

        return maxRows;
    end;

    /*************************************************
    macro PrintRecordAccs - печатает запись на страницах со счетами
    *************************************************/
    macro PrintRecordAccs ()
        var Reg_Date1, Reg_Date2,Reg_Date3,Reg_Date4/*,GiveOrder*/;
        var Reg_Date5;
        var accountForPrint; /* 16.10.2007 Malakhova 114925*/
        private var short_account_name:string=""; // KS I-059324 Переделать "Наименование (цель) счета"
        private var types = ""; // KS 02.09.2010 I-059324 Буквенный код типа счета
        private var i = 1; // KS 06.09.2010 Итератор
        private var typesNoNeedIsExists = false;  // KS 06.09.2010 Встретились ли типы, по которым не надо выводить дату

        if (TempFile.backOffice == REP_SUBSYSTEMS_RETAIL)
            accountForPrint = substr(TempFile.Account, 1, 20);
        else
            accountForPrint = TempFile.Account;
        end;

        if (TempFile.Close_Date>Params.EndDate)
            CloseDate="";//string(Date(0,0,0):f);
        else
            CloseDate=string(date(TempFile.Close_Date):f);
        end;
        
        Reg_Date1 = Reg_Date2 = Reg_Date3 = Reg_Date4 = Reg_Date5 = "";
        
        if ( (accountType == СчетаБанка) and (ФормаОтчета == false)  )
[│##########│#########################│###################################│########################################│##########│#########################################│####################│
]          (TempFile.Open_Date:f:c,
            accountForPrint,
            TempFile.NameAccount:w,
            TempFile.OpenGround:w,                         // при изменении длины строк
            CloseDate:c,                                   // необходимо пересчитать
            TempFile.CloseGround:w,                        // константы clientAccountNameStrLen
            Comments:w );                                  // и иже сней.
            
        else
        	   Party.PartyID=int(TempFile.Client);
/*            if (accountForPrint = "47423810330000048275")
					Party.PartyID=520936;
            elif (valtype(TempFile.Client) == V_UNDEF)
            	Party.PartyID=3045;
            	accountForPrint = accountForPrint + "++"
            else
            	Party.PartyID=int(TempFile.Client);
            end;       */
            if ( Party.PartyID == {OurBank} )
                Party.PartyID = {OurBank};
            end;
            if (not GetEQ (Party))
                if(FlagMes)
                    GetTrue(FlagMes,"Отсутствует информация о клиенте счета №" + TempFile.Account + "\nВыводить далее подобные сообщения?");
                end;
                Client_Name="Неизвестно";
            else 
                Client_Name=Party.Name;
            end;
            
            if (accountType == СчетаКлиентов)
                    Reg_Date1 = GetTaxMsgDate(TempFile, Party, OPEN_DATE);
                    Reg_Date5 = GetTaxMsgDate(TempFile, Party, CLOSE_DATE);


            end;

            // KS I-059324 Переделать "Наименование (цель) счета"
            short_account_name= GetAccountTypeNameByAccountPrior( TempFile.Account,TempFile.chapter, TempFile.code_currency, typesPrior, types, 0); // KS 17.08.2010-02.09.2010 I-059324 Признаки V6, определяющие вид счета считать первичными: "Ч", "L", "Y", "Я", "Б", "К", "И"
            if ((index(typesPrior, types)==0)or(types=="")) // KS 02.09.2010 I-059324 Eсли признак не первичный, то брать наименование
              short_account_name = GetAccountName( TempFile.Account,TempFile.chapter, TempFile.code_currency);
            end;
            // KS 06.09.2010 I-064156 При формировании отчета "Ведомость открытых счетов" счета, имеющие признаки L (накопительные), Y (транзитные) в поле "Тип счета" должны иметь строку "Не требуется". 
            if ((accountType == СчетаКлиентов)or // KS Обработка дат сообщений
                (CompareStrWithMasks( МаскаСчетовКлиентов, substr(TempFile.Account,1,5)) == 0))
              while ((i <= strlen(types)) and (not typesNoNeedIsExists))
                 if (index(typesNoNeed,substr(types,i,1)))
                   typesNoNeedIsExists = true;
                 end;
                 i = i + 1;      
              end;
              if ((CompareStrWithMasks(nalMask, TempFile.Account)) or // KS 02.09.2010 I-059324 Для этих счетов надо выводить дату сообщения в налоговые органы, для остальных - нет
                  (typesNoNeedIsExists) )                             // KS 06.09.2010 I-064156 При формировании отчета "Ведомость открытых счетов" счета, имеющие признаки L (накопительные), Y (транзитные) в поле "Тип счета" должны иметь строку "Не требуется". 
                Reg_Date1 = Reg_Date5 = "Не требуется";
              else // KS 02.09.2010 I-059324 Если даты не заполнены, то берём даты открытия и закрытия
                if ((Reg_Date1=="") and (TempFile.Open_Date!=""))
                  Reg_Date1 = tempFile.Open_Date;
                end;
                if ((Reg_Date5=="") and (CloseDate!=""))
                  Reg_Date5 = CloseDate;
                end;
              end;
            else
                Reg_Date1 = Reg_Date5 = "Не требуется";
            end;
    
            // KS 02.09.2010 I-059324 Вычисляем примечание
            Comments = GetAccountTypeNameByAccountPrior( TempFile.Account,TempFile.chapter, TempFile.code_currency, typesPrior, types, 1); // KS 17.08.2010-02.09.2010 I-059324 Признаки V6, определяющие вид счета считать вторичными - все кроме: "Ч", "L", "Y", "Я", "Б", "К", "И"
            if (types != "")
              Comments = "";
            end;

            // KS 31.01.2012 C-8638
            if (StrLen(TempFile.ExtractPeriod)==0)
              TempFile.ExtractPeriod = "по провед. опер";
            end;

            /*//01 Aug 07 Wed 10:23:27 Malakhova Irina 110772*/
            /*Добавила колонку с датой сообщения налоговым органам о закрытии счета*/
            if( Params.NeedPrintFunds )
[│##########│##########│#########################│#########################│#######################################│#######################################│####################│############│############│############│############│##########│############│####################│]
               (TempFile.Open_Date:f:c,
                TempFile.ContractDate:f:c,
                TempFile.ContractNumber:w,
                accountForPrint,
                Client_Name:w,
                short_account_name:w,
                nvl(TempFile.ExtractPeriod,"",TempFile.ExtractPeriod):w,
                Reg_Date1:c, Reg_Date2:c, Reg_Date3:c, Reg_Date4:c,
                CloseDate:c,
                Reg_Date5:c,
                Comments:w);
            else
            	/* Коркин И.Н  В базе до октября 2009 даты плохие */
            	if ((string(TempFile.ContractNumber) != "") /*and (string(date(TempFile.ContractDate)) == "")*/ )
            		TempFile.ContractDate = TempFile.Open_Date;
            	end;
            /*	if (string(closedate) == "")
            		closedate = Reg_Date5; 
            	end;    */
               if (TempFile.Close_Date>Params.EndDate)
            		Reg_Date5 = "";	
               end;
// KS 02.09.2010 I-059324 реализовал выше
/*
            	if ((substr(accountForPrint,1,5) != "40802") and (substr(accountForPrint,1,5) != "40807") and (substr(accountForPrint,1,5) != "40821")
            	and CompareStrWithMasks("401-407",substr(accountForPrint,1,3))!=0)
            		Reg_Date5 = "";	
            		Reg_Date1 = "";
            	end;
*/
[│##########│##########│#########################│#########################│#######################################│#######################################│####################│############│##########│############│####################│]
               (TempFile.Open_Date:f:c,
                TempFile.ContractDate:f:c,
                TempFile.ContractNumber:w,
                accountForPrint,       
                Client_Name:w,
                short_account_name:w,
                nvl(TempFile.ExtractPeriod,"",TempFile.ExtractPeriod):w,
                Reg_Date1:c,
                CloseDate:c,
                Reg_Date5:c,
                Comments:w);
            end;
        end;
        NumStrPrinted = NumStrPrinted + calculateNecessaryRows();
        return TRUE;

    end; /* of macro PrintRecordAccs */


    /*******************************************************************************
    macro PrintAccs - печатает страницы со счетами
    *******************************************************************************/
    macro PrintAccs()

        /*-----> Начало выполнения PrintAccs */
        IsFirstBalance   = TRUE;
        NumStrPrinted    = 0;
        NumStrForRecords = NumStrOnPage-NumStrForAccsHeader-NumStrForAccsBottom;

        var Ind;
        /*23 Mar 07 Malakhova Irina 103782*/
        InitProgress(-1," ~CtrlBreak~ Прекратить","Печатаются данные по открытым счетам");

        //   Rewind(TempFile);
        Ind = 0;
        while(TempFile.next())
            UseProgress(Ind = Ind + 1);
            if (IsFirstBalance)
                IsFirstBalance = FALSE;
                Balance        = TempFile.Balance;
                PrintHeaderAccs();
                PrintRecordAccs();
                toc.setBalancePage(accountType, balance, НомерСтраницы);
            elif (TempFile.Balance == Balance)
                if((NumStrPrinted + calculateNecessaryRows()) <= NumStrForRecords)
                    PrintRecordAccs();
                else 
                    PrintBottomAccs();
                    NumStrPrinted = 0;
                    PrintHeaderAccs();
                    PrintRecordAccs();
                end;
            else 
                PrintBottomAccs();
                NumStrPrinted = 0;
                Balance = TempFile.Balance;
                PrintHeaderAccs();
                PrintRecordAccs();
                toc.setBalancePage(accountType, balance, НомерСтраницы);
            end;
        end;
        RemProgress();
    end;

    /* конструктор */
    macro constructorPrintForm(accountType_, _toc)

        // KS 21.11.2011 Сортировка счетов
        if( ( errAccSort == 0 ) and ( AccSort == 1 ) and (accountType_ == ВсеСчета))
          dataSet =    "   SELECT *"
              + "\n" + "     FROM " + TempTableName
//              + "\n" + "    WHERE t_accountType = " + accountType_
              + "\n" + " ORDER BY t_balance, t_account";
        else // KS 21.11.2011 Сортировка счетов - Окончание
          dataSet =    "   SELECT *"
              + "\n" + "     FROM " + TempTableName
              + "\n" + "    WHERE t_accountType = " + accountType_
              + "\n" + " ORDER BY t_balance, t_account";
        end;

        toc = _toc;
    
        AllNAcc     = 0;
        OpenAccs    = 0;
        ClosedAccs  = 0;
        НомерСтроки = 0;
        NumAllRec   = 0;
        accountType = accountType_;
    
        bankAccountNameStrLen = 35;   // длина строки вывода наименования счета банка (см. строку вывода)
        openGroundStrLen = 40;        // длина строки вывода основания открытия счета (см. строку вывода)
        closeGroundStrLen = 41;       // длина строки вывода основания закрытия счета (см. строку вывода)
        commentStrLen = 20;           // длина строки вывода коментария (см. строку вывода)

        contractNumberStrLen = 25;    // длина строки вывода контракта (см. строку вывода)
        clientNameStrLen = 39;        // длина строки вывода имени клиента (см. строку вывода)
        clientAccountNameStrLen = 39; // длина строки вывода наименования счета клиента (см. строку вывода)
        extractPeriodStrLen = 20;     // длина строки вывода имени клиента (см. строку выво

        TempFile = TRsbDataSet(dataSet);
    
        TempFile.setFieldType("T_OPEN_DATE", V_DATE);
        TempFile.setFieldType("T_CLOSE_DATE", V_DATE);
        TempFile.setFieldType("T_TAXMSGOPENDATE", V_DATE);
        TempFile.setFieldType("T_TAXMSGCLOSEDATE", V_DATE);
        TempFile.setFieldType("T_CONTRACTDATE", V_DATE);
    end;

    constructorPrintForm(accountType_, _toc);
end;


private MACRO Initialize()
    macro InitializePrintPageNumber()
        var stat, TypeVal, keyPath ="REPORT\\КНИГА РЕГИСТРАЦИИ\\ПЕЧАТЬ НОМЕРА СТРАНИЦЫ";
        
        TypeVal=GetRegistryValue(keyPath, V_BOOL,  ПечатьНомераСтраницы, stat);
        if ((stat != 0) or (TypeVal != V_BOOL))
            MsgBox( "Не определен параметр печати " , keyPath, " в настройках банка" );
        else
            if (ПечатьНомераСтраницы == false)
                numStrOnPage = numStrOnPage + 1;
            end;
        end;

    end;

    InitializePrintPageNumber();

END;


macro flushReport()

    FILE storage() txt;

    var storageTxtFileName = getTxtFileName(tempStorageFileName);

    if ((existFile(storageTxtFileName, 0)) AND (open(storage, storageTxtFileName)))

        while(next(storage))
            printLn(storage.str);
        end;

        close(storage);
    else
        msgbox("Не найден файл: |", storageTxtFileName);
    end;
end;

/****************************************************************************/
/*                                Точка входа                               */
/****************************************************************************/
MACRO PrintAccRegBook( parameters )

    Params = parameters;
    Initialize();
    var result;
    var form;
    var toc = ReportToc(); //опись счетов
    debugbreak;
    /*временный файл с частями отчета без номеров страниц*/
    var reportTempStorage = TOfstream(tempStorageFileName);
    reportTempStorage.setOutputFile();

    НомерСтраницы = toc.getTitlePagesNum();

    // KS 21.11.2011 Сортировка счетов
    if( ( errAccSort == 0 ) and ( AccSort == 1 ) and (params.accountType == ВсеСчета))

          form = printForm(ВсеСчета, toc);

//          result = form.printTitul();
          result = form.countNumbers();

          if(result)
              form.printAccs();
              form.printBottomAccs();
          end;

    else

      if ((params.accountType == ВсеСчета) OR (params.accountType == СчетаКлиентов))

          form = printForm(СчетаКлиентов, toc);
        
          result = form.countNumbers();

          if (result)
              form.printAccs();
              form.printBottomAccs();
          end;
      end;

      if ((params.accountType == ВсеСчета) OR (params.accountType == СчетаБанка))

          form = printForm(СчетаБанка, toc);

          if (params.accountType == ВсеСчета)
              result = form.printTitul();
          else
              result = form.countNumbers();
          end;

          if(result)
              form.printAccs();
              form.printBottomAccs();
          end;
      end;

    end;

    reportTempStorage.resetOutputFile();

    toc.saveLastRepPage(); // общее число страниц отчета
    НомерСтраницы = 0;

    if(result)
        toc.printTitle();
        flushReport();
    end;

    delFile(reportTempStorage.getFileName());

    return result;
END;
