/**
 * Module:  TbsData.mac
 * Purpose: Declaration of the class TBalanceData
 * Comment: Данныe по балансу.
 * @since   01.08.2009
 * @author  Shestakov Dmitry
 * @version 6.00.020.29
 */

 //18.07.2012 vihrov
 //10.022014 DPN R-326546-2 Адаптация к 31-му патчу

import RsbDataSet;
import rep_lib;
import cb_sql;

/**
 * Данныe по балансу.
 */
class TTbsData()

    private const TBS_COVER_ALL = 1; // Учет рублей и покрытия
    private const TBS_COVER_CUR = 2; // Учет покрытия
    private const TBS_COVER_RUB = 3; // Учет рублей

    /**
     * Инициализация пакета для получения символа ОПУ.
     */
    macro initializeOpuPackage()
        var number = null;
        getRegistryValue("REPTREG/REP_GROUPS/ФОРМА 102/ЧИСЛО ЗНАКОВ СИМВОЛА В СЧЕТЕ", V_INTEGER, number, null);
        sql_execute("CALL rcb_opu.setSymbolDefinitionKind(" + nvl(number, 0) + ")");
    end;

    /**
     * Получение символа ОПУ (если по нему задана сортировка) для счетов открытых на БС 706 и 707.
     */
    macro opuSymbol() : String
        var sortPattern = tbsParameters().getSortPattern();
        var field =         "                         '' AS t_opuSymbol                     ";
        var i = 0;

        while(i < sortPattern.size())
            if (sortPattern(i) == REP_PATTERNSORT_OPU_SYMBOL)
                field =     "                         CASE                                  "
                   + "\n" + "                          WHEN (SUBSTR(blaccr.t_balance, 0, 3) = '706' OR SUBSTR(blaccr.t_balance, 0, 3) = '707')"
                   + "\n" + "                            THEN rcb_opu.getAccountSymbol(blaccr.t_balance,"
                   + "\n" + "                                                          blaccr.t_account,"
                   + "\n" + "                                                          (TO_CHAR(blaccr.t_chapter, 'FM0x') ||"
                   + "\n" + "                                                           TO_CHAR(blaccr.t_code_currency, 'FM0xxxxxx') ||"
                   + "\n" + "                                                           blaccr.t_account"
                   + "\n" + "                                                          )    "
                   + "\n" + "                                                         )     "
                   + "\n" + "                          ELSE ''                              "
                   + "\n" + "                         END t_opuSymbol                       ";
            end;
            i = i + 1;
        end;

        return field;
    end;

    /**
     * Список полей сортировки счетов.
     */
    macro accountsSortOder() : String
        var sortPattern = tbsParameters().getSortPattern();
        var orderBy = "";
        var i = 0;
        while(i < sortPattern.size())
            if   (sortPattern(i) == REP_PATTERNSORT_ACCOUNT)        /*Сортировка по номеру счета*/
                orderBy = orderBy + ",\n" + "         account";
            elif (sortPattern(i) == REP_PATTERNSORT_SYSTEM_MAKET)   /*Сортировка по системному макету*/
                orderBy = orderBy + ",\n" + "         sort";
            elif (sortPattern(i) == REP_PATTERNSORT_DEPARTMENT)     /*Сортировка по подразделению*/
                orderBy = orderBy + ",\n" + "         department";
            elif (sortPattern(i) == REP_PATTERNSORT_OPU_SYMBOL)     /*Сортировка по символам ОПУ*/
                orderBy = orderBy + ",\n" + "         opuSymbol";

            elif (sortPattern(i) == 100)  						   /*Сортировка по аморт. группе. классификатор 1739, значение 100 справочника 2902 */
                orderBy = orderBy + ",\n" + "         substr(account,15,2) "; //18.07.2012 vihrov
            end;
            i = i + 1;
        end;

        return orderBy;
    end;

    /**
     * Получить агрегированные данные отчета.
     */
    macro getReportDataSet() : Object
        var queryText         = "";
        var titleCurrencyText = "";
        var accountText       = "";
        var selectText        = "";
        var fromText          = "";
        var whereText         = "";
        var groupText         = "";
        var orderText         = "";

        var carriedDocumentDataSource;
        var plannedDocumentDataSource;

        var groupingCurrencyId;

        if (tbsParameters().getFiId() == NATCUR)
            groupingCurrencyId = String(NATCUR);
            if ((tbsParameters().getChapter() != 5) and (tbsParameters().getChapter() != 0))
                carriedDocumentDataSource = "daccount_dbt";
                plannedDocumentDataSource = "(SELECT pblnc.* FROM dpartblnc_dbt pblnc)";
            else
                if ((tbsParameters().getNatcurRepAccounts() == TBS_COVER_ALL) or (tbsParameters().getChapter() == 0))
                    carriedDocumentDataSource = "daccounts_view";
                    plannedDocumentDataSource = "(SELECT pblnc.* FROM dpartblnc_dbt pblnc)";
                elif (tbsParameters().getNatcurRepAccounts() == TBS_COVER_CUR)
                    carriedDocumentDataSource = "daccount_dbt";   //10.022014 DPN R-326546-2 Адаптация к 31-му патчу
                    plannedDocumentDataSource = "(SELECT pblnc.* FROM dpartblnc_dbt pblnc)";
                else
                    carriedDocumentDataSource = "daccount_dbt";
                    plannedDocumentDataSource = "(SELECT pblnc.* FROM dpartblnc_dbt pblnc)";
                end;
            end;
        else
            groupingCurrencyId = "blaccr.t_code_currency";
            carriedDocumentDataSource = "daccount_dbt";  //10.022014 DPN R-326546-2 Адаптация к 31-му патчу
            plannedDocumentDataSource = "(SELECT pblnc.* FROM dpartblnc_dbt pblnc)";
        end;

        initializeOpuPackage();

        titleCurrencyText = "CASE                                                                       "
              + "\n" +      "    WHEN ((GROUPING (accounts.t_currencyId) = 0)                           "
                     +      ternary(tbsParameters().getTotalsLevel() == ACC_SUM_OSV_SECT,
                                    " AND (GROUPING (accounts.t_part) = 1)                              ",
                                    ternary(tbsParameters().getTotalsLevel() == ACC_SUM_OSV_BAL21,
                                            " AND (GROUPING (accounts.t_balance1) = 1)                  ",
                                            ternary(tbsParameters().getTotalsLevel() == ACC_SUM_OSV_BAL2,
                                                    " AND (GROUPING (accounts.t_balance) = 1)           ",
                                                    ""
                                                   )
                                           )
                                   )
              + "\n" +      "        )                                                                  "
              + "\n" +      "    THEN (SELECT (   t_fi_code                                             "
              + "\n" +      "                  || ' '                                                   "
              + "\n" +      "                  || t_name                                                "
              + "\n" +      "                  || ' курс от '                                           "
              + "\n" +      "                  || ' '                                                   "
              + "\n" +      "                  || t_inputdate                                           "
              + "\n" +      "                  || ' '                                                   "
              + "\n" +      "                  || to_char(t_rate/10000, '999999D9999')                  "
              + "\n" +      "                 )                                            currencytext "
              + "\n" +      "          FROM rate                                                        "
              + "\n" +      "         WHERE rate.t_fiid = accounts.t_currencyId)                        "
              + "\n" +      "   ELSE ' '                                                                "
              + "\n" +      "END                                                                        ";

        accountText =       "CASE                                                                       "
                     +      ternary(tbsParameters().getTotalsLevel() >= ACC_SUM_OSV_BAL21,
                "\n" +      "   WHEN (GROUPING (accounts.t_balance) = 1)                               "
              + "\n" +      "      THEN 'Итого для БС ' || t_balance1                                   ", "")

              + "\n" +      "   WHEN (GROUPING (accounts.t_account) = 1)                                "
              + "\n" +      "      THEN 'Итого для БС ' || accounts.t_balance                                    "
              + "\n" +      "   ELSE accounts.t_account                                                            "
              + "\n" +      "END                                                                        ";

        selectText =        "WITH rateHist AS (SELECT MAX (t_sinceDate) OVER (PARTITION BY t_rateId) t_maxDate,  "
              + "\n" +      "                         t_rateId,                                                  "
              + "\n" +      "                         t_rate,                                                    "
              + "\n" +      "                         t_sinceDate                                                "
              + "\n" +      "                    FROM (SELECT t_rateId, t_rate,                                  "
              + "\n" +      "                                 TO_DATE(TO_CHAR(t_sinceDate,'DD.MM.YYYY') || ' ' || to_char(t_inputTime,'HH24:MI:SS'),'DD.MM.YYYY HH24:MI:SS') t_sinceDate  "
              + "\n" +      "                            FROM dratehist_dbt rateHist                          "
              + "\n" +      "                           UNION ALL                                             "
              + "\n" +      "                          SELECT t_rateId, t_rate, to_date(to_char(t_sinceDate,'DD.MM.YYYY') || ' 23:59:59','DD.MM.YYYY HH24:MI:SS') t_sinceDate             "
              + "\n" +      "                            FROM drateDef_dbt                                  "
              + "\n" +      "                         )                                  "
              + "\n" +      "                   WHERE t_sinceDate <= to_date(to_char(" + getSqlDate(tbsParameters().getDateOut()) + ",'DD.MM.YYYY') || '23:59:59','DD.MM.YYYY HH24:MI:SS')),"
              + "\n" +      "     ratesId  AS (SELECT t_rate,                                                    "
              + "\n" +      "                         t_maxDate AS t_inputDate,                                  "
              + "\n" +      "                         (SELECT t_otherFi                                          "
              + "\n" +      "                            FROM drateDef_dbt                                       "
              + "\n" +      "                           WHERE t_rateId = rateHist.t_rateId                       "
              + "\n" +      "                             AND t_isDominant = 'X'                                 "
              + "\n" +      "                             AND t_fiid = " + NATCUR
              + "\n" +      "                         ) t_fiId                                                   "
              + "\n" +      "                    FROM rateHist                                                   "
              + "\n" +      "                   WHERE t_sinceDate = t_maxDate),                                  "
              + "\n" +      "     rate     AS (SELECT finInstr.t_fi_code, finInstr.t_name, finInstr.t_fiId,      "
              + "\n" +      "                         ratesId.t_rate, to_char(ratesId.t_inputDate,'DD.MM.YYYY') t_inputDate "
              + "\n" +      "                    FROM dfinInstr_dbt finInstr,                                    "
              + "\n" +      "                         ratesId                                                    "
              + "\n" +      "                   WHERE ratesId.t_fiId = finInstr.t_fiId),                         "
              + "\n" +      "     accounts AS (SELECT blaccr.*,                                   "
              + "\n" +      "                     " + groupingCurrencyId + "        t_currencyId, "
              + "\n" +      "                         SUBSTR(t_balance, 0, 3)       t_balance1,   "
              + "\n" +      "                     " + tbsParameters().getPlan() + " t_numPlan,    "
                     +                                opuSymbol()
              + "\n" +      "                    FROM dblaccr_tmp blaccr "
              + "\n" +      "                   WHERE (1=1)"
                     +      ternary(tbsParameters().getIsExcludeZeroTurns(),
                            ternary((tbsParameters().getFiId() != NATCUR),
                            //and  tbsParameters().getIsNeedRealCover(),       //10.022014 DPN R-326546-2 Адаптация к 31-му патчу
                "\n" +      "                         AND (   blaccr.t__ds   != 0           "
              + "\n" +      "                              OR blaccr.t__ds_r != 0           "
              + "\n" +      "                              OR blaccr.t__ks   != 0           "
              + "\n" +      "                              OR blaccr.t__ks_r != 0 )         ",

                "\n" +      "                         AND (   blaccr.t__ds   != 0           "
              + "\n" +      "                              OR blaccr.t__ks   != 0 )         "), "")
                     +      ternary(tbsParameters().getIsExcludeZeroRests(),
                            ternary((tbsParameters().getFiId() != NATCUR),
                            //and tbsParameters().getIsNeedRealCover(),   //10.022014 DPN R-326546-2 Адаптация к 31-му патчу
                "\n" +      "                         AND (   blaccr.t_ias   != 0           "
              + "\n" +      "                              OR blaccr.t_ias_r != 0           "
              + "\n" +      "                              OR blaccr.t_ips   != 0           "
              + "\n" +      "                              OR blaccr.t_ips_r != 0           "
              + "\n" +      "                              OR blaccr.t_oas   != 0           "
              + "\n" +      "                              OR blaccr.t_oas_r != 0           "
              + "\n" +      "                              OR blaccr.t_ops   != 0           "
              + "\n" +      "                              OR blaccr.t_ops_r != 0 )         ",

                "\n" +      "                         AND (   blaccr.t_ias   != 0           "
              + "\n" +      "                              OR blaccr.t_ips   != 0           "
              + "\n" +      "                              OR blaccr.t_oas   != 0           "
              + "\n" +      "                              OR blaccr.t_ops   != 0 )         "), "")
              + "\n" +      "                  )                                            "
              + "\n" +      "SELECT                                                         "
              + "\n" +      "       GROUPING (accounts.t_currencyId) isCurrencyItog,        "

                     +      ternary(tbsParameters().getTotalsLevel() == ACC_SUM_OSV_SECT,
                "\n" +      "       GROUPING (accounts.t_part)          isPartItog,         ",
                            ternary(tbsParameters().getTotalsLevel() == ACC_SUM_OSV_BAL21,
                "\n" +      "       GROUPING (accounts.t_balance1)      isPartItog,         ",
                            ternary(tbsParameters().getTotalsLevel() == ACC_SUM_OSV_BAL2,
                "\n" +      "       GROUPING (accounts.t_balance)       isPartItog,         ", "")))

                     +      ternary(tbsParameters().getTotalsLevel() >= ACC_SUM_OSV_BAL21,
                "\n" +      "       GROUPING (accounts.t_balance1)      isBalance1Itog,     ",
                            ternary(tbsParameters().getTotalsLevel() == ACC_SUM_OSV_BAL2,
                "\n" +      "       GROUPING (accounts.t_balance)       isBalance1Itog,     ", ""))

              + "\n" +      "       GROUPING (accounts.t_balance)       isBalance2Itog,     "
              + "\n" +      "       GROUPING (accounts.t_account)       isAccount,          "
              + "\n" +      "       --                                                      "
              + "\n" +      "       accounts.t_chapter                  chapter,            "
              + "\n" +      "       accounts.t_currencyId               currency,           "
              + "\n" +              titleCurrencyText + "               titleCurrency,      "

                     +      ternary(tbsParameters().getTotalsLevel() == ACC_SUM_OSV_SECT,
                "\n" +      "       accounts.t_part                     part,               "
              + "\n" +      "       initcap(partblnc.t_name_part)       partName,           ", "")

                     +      ternary(tbsParameters().getTotalsLevel() >= ACC_SUM_OSV_BAL21,
                "\n" +      "       accounts.t_balance1                 balance1,           ", "")

                     +      ternary(tbsParameters().getTotalsLevel() >= ACC_SUM_OSV_BAL2,
                "\n" +      "       accounts.t_balance                  balance2,           ", "")

              + "\n" +      "       --                                                      "
              + "\n" +              accountText + "                     account,            "
              + "\n" +      "       NVL((SELECT t_nameAccount                               "
              + "\n" +      "              FROM " + carriedDocumentDataSource
              + "\n" +      "             WHERE t_account = accounts.t_account              "
              + "\n" +      "               AND t_chapter = accounts.t_chapter              "
              + "\n" +      "               AND t_code_currency = accounts.t_code_currency  "
              + "\n" +      "           ), CHR(1)                                           "
              + "\n" +      "          )                                accountName,        "
              + "\n" +      "       NVL((SELECT t_codeName                                  "
              + "\n" +      "              FROM dRepDpDep_vw                                "
              + "\n" +      "             WHERE t_code = accounts.t_department              "
              + "\n" +      "           ), CHR(1)                                           "
              + "\n" +      "          )                                department,         "
              + "\n" +      "       accounts.t_sort                     sort,               "
              + "\n" +      "       accounts.t_opuSymbol                opuSymbol,          "
              + "\n" +      "       --                                                      "
              + "\n" +      "       SUM (accounts.t_ias)                inActiveRest,       "
              + "\n" +      "       SUM (accounts.t_ias_r)              inActiveRestR,      "
              + "\n" +      "       SUM (accounts.t_ips)                inPassiveRest,      "
              + "\n" +      "       SUM (accounts.t_ips_r)              inPassiveRestR,     "
              + "\n" +      "       --                                                      "
              + "\n" +      "       SUM (accounts.t__ds)                debet,              "
              + "\n" +      "       SUM (accounts.t__ds_r)              debetR,             "
              + "\n" +      "       SUM (accounts.t__ks)                credit,             "
              + "\n" +      "       SUM (accounts.t__ks_r)              creditR,            "
              + "\n" +      "       --                                                      "
              + "\n" +      "       SUM (accounts.t_oas)                outActiveRest,      "
              + "\n" +      "       SUM (accounts.t_oas_r)              outActiveRestR,     "
              + "\n" +      "       SUM (accounts.t_ops)                outPassiveRest,     "
              + "\n" +      "       SUM (accounts.t_ops_r)              outPassiveRestR,    "
              + "\n" +      "       --                                                      "
              + "\n" +      "       SUM (accounts.t_fds)                debetSpod,          "
              + "\n" +      "       SUM (accounts.t_fds_r)              debetSpodR,         "
              + "\n" +      "       SUM (accounts.t_fks)                creditSpod,         "
              + "\n" +      "       SUM (accounts.t_fks_r)              creditSpodR         ";

        fromText =          "FROM accounts                                                  "
                     +      ternary(tbsParameters().getTotalsLevel() == ACC_SUM_OSV_SECT,
                "\n" +      ", " + plannedDocumentDataSource + " partblnc                   ", "");

        whereText =         ternary(tbsParameters().getTotalsLevel() == ACC_SUM_OSV_SECT,
                "\n" +      "WHERE partblnc.t_chapter    = accounts.t_chapter               "
              + "\n" +      "  AND partblnc.t_inumPlan   = accounts.t_numPlan               "
              + "\n" +      "  AND partblnc.t_part       = accounts.t_part                  ", "");

        groupText =         "GROUP BY ROLLUP ( accounts.t_chapter,                          "
              + "\n" +      "                  accounts.t_currencyId,                       "
                     +      ternary(tbsParameters().getTotalsLevel() == ACC_SUM_OSV_SECT,
                "\n" +      "                  (accounts.t_part, partblnc.t_name_part),     ", "")
                     +      ternary(tbsParameters().getTotalsLevel() >= ACC_SUM_OSV_BAL21,
                "\n" +      "                  accounts.t_balance1,                         ", "")
              + "\n" +      "                  accounts.t_balance,                          "

              + "\n" +      "                  (accounts.t_account,                         "
              + "\n" +      "                   accounts.t_sort,                            "
              + "\n" +      "                   accounts.t_code_currency,                   "
              + "\n" +      "                   accounts.t_department,                      "
              + "\n" +      "                   accounts.t_opuSymbol)                       "
              + "\n" +      "                )                                              ";

        orderText =         "ORDER BY chapter,                                              "
              + "\n" +      "         isCurrencyItog DESC,                                  "
              + "\n" +      "         currency,                                             "
                     +      ternary(tbsParameters().getTotalsLevel() == ACC_SUM_OSV_SECT,
                "\n" +      "         isPartItog DESC,                                      "
              + "\n" +      "         part,                                                 ", "")
                     +      ternary(tbsParameters().getTotalsLevel() >= ACC_SUM_OSV_BAL21,
                "\n" +      "         isBalance1Itog DESC,                                  "
              + "\n" +      "         balance1,                                             ", "")
              + "\n" +      "         isBalance2Itog DESC,                                  "
              + "\n" +      "         balance2,                                             "
              + "\n" +      "         isAccount DESC"
                     +                accountsSortOder();

        queryText = selectText + fromText + whereText + groupText + orderText;

        var dataSet = TRsbDataSet(queryText);
        dataSet.SetFieldType("inActiveRest",   V_MONEY);
        dataSet.SetFieldType("inActiveRestR",  V_MONEY);
        dataSet.SetFieldType("inPassiveRest",  V_MONEY);
        dataSet.SetFieldType("inPassiveRestR", V_MONEY);
        dataSet.SetFieldType("debet",          V_MONEY);
        dataSet.SetFieldType("debetR",         V_MONEY);
        dataSet.SetFieldType("credit",         V_MONEY);
        dataSet.SetFieldType("creditR",        V_MONEY);
        dataSet.SetFieldType("outActiveRest",  V_MONEY);
        dataSet.SetFieldType("outActiveRestR", V_MONEY);
        dataSet.SetFieldType("outPassiveRest", V_MONEY);
        dataSet.SetFieldType("outPassiveRestR",V_MONEY);
        dataSet.SetFieldType("debetSpod",      V_MONEY);
        dataSet.SetFieldType("debetSpodR",     V_MONEY);
        dataSet.SetFieldType("creditSpod",     V_MONEY);
        dataSet.SetFieldType("creditSpodR",    V_MONEY);

        return dataSet;
    end;

    /**
     * Конструктор.
     */
    private macro constructor()
    end;

    constructor();
end;
