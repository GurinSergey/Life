/**
 *  RS-Bank 6.0
 *
 *  File Name   : pr_crtrn.mac
 *  Programmer  :
 *  Description : Отчет по исправительным оборотам.
 *  Comment     :
 *  Modify      : Ivkina 24.01.2007
 */

IMPORT OprInter,FIInter,CTInter,"treport.mac", BankInter, oralib, cb_sql, "prpm.mac", globals;
import Reporting;
import rep_lib;

FILE cb_doc   ("cb_doc.dbt");
FILE multydoc ("multydoc.dbt");

var blockSum = TArray();
var blockSumR = TArray();

var blockCount = TArray();
var SumAll : moneyl;
var CountAll;

private var ALLCURRENCY = -2;   /* Все ин. валюты */

/*ширина полей таблицы*/
var widthSign   = 7;
var widthDate   = 10;
var widthNumb   = 11;
var widthType   = 3;
var widthCur    = 3;
var widthDebet  = 23;
var widthCredit = 23;
var widthSum    = 10;
var widthSumRur = 15;
var widthReason = 22;
var widthOper   = 5;
var widthSost   = 20;
/*общая ширина отчета*/
var width = 2 + widthSign   + 2 + widthDate + 2 + widthNumb   + 2 + widthType   + 2 +  widthCur + 2 + widthDebet +
            2 + widthCredit + 2 + widthSum  + 2 + widthSumRur + 2 + widthReason + 2 + widthOper + 2 + widthSost + 2;

var correctKindSign   = arrCreate("S", "И", "К", "N");
var correctKindString = arrCreate("сторнирующих (S)",   "исправительных (И)",
                                  "корректирующих (К)", "новых корректирующих (N)");
//------------------------------------------------------
PRIVATE macro PrintHeadOfReport1(Dep_Number, OrgStructure, First_Date, Second_Date)
  printBankHeader(Dep_Number, OrgStructure, width);
  println();
  println(StrAlign("Отчет по исправительным оборотам", width, STR_ALIGN_CENTER));
  println(StrAlign("за период с " + string(First_Date:f) + " по " + string(Second_Date:f), width, STR_ALIGN_CENTER));
  println();
end;
//--------------------------------------------
macro PrintOneBlokCages1(Report1:CTableReport)       

[┌──────────────────┬────┬──────────────────────────────────────────────────────────────────────┬───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬────┐
 │ Распоряжение     │Исп.│            Реквизиты ошибочной проводки                              │       Реквизиты исправительной проводки                                                                                           │    │
 ├──────────────────┼────┼──────────┬──────────┬────────────────────┬────────────┬──────────────┼──────┬──────────┬────────────────────┬────────────────────┬────────────┬───────────────┬──────────────────────────────────────────┤Тип │
 │  №        Дата   │    │    №     │   Дата   │        Дт\Кт       │ Сумма вал  │  Сумма руб   │№Докум│   Дата   │       Дебет        │       Кредит       │  Сумма вал │   Сумма руб   │                  Основание               │Корр│
 ├───────┬──────────┼────┼──────────┼──────────┼────────────────────┼────────────┼──────────────┼──────┼──────────┼────────────────────┼────────────────────┼────────────┼───────────────┼──────────────────────────────────────────┼────┤];

/*
  Report1.AddColumn("Дата распоряжения",   widthDate  );
  Report1.AddColumn("Опер",     	   widthOper  , AL_RIGHT);
  Report1.AddColumn("№ документа",         widthNumb  );
  Report1.AddColumn("Дата",                widthDate  );
  Report1.AddColumn("Дебет",               widthDebet );
  Report1.AddColumn("Кредит",              widthCredit);
  Report1.AddColumn("Сумма в валюте",      widthSum   , AL_RIGHT);
  Report1.AddColumn("Сумма в рублях",      widthSumRur, AL_RIGHT);
  Report1.AddColumn("№ документа",         widthNumb  );
  Report1.AddColumn("Дата",                widthDate  );
  Report1.AddColumn("Дебет",               widthDebet );
  Report1.AddColumn("Кредит",              widthCredit);
  Report1.AddColumn("Валюта",              widthCur   );
  Report1.AddColumn("Сумма в валюте",      widthSum   , AL_RIGHT);
  Report1.AddColumn("Сумма в рублях",      widthSumRur, AL_RIGHT);
  Report1.AddColumn("Основание",           widthReason);
  Report1.AddColumn("Тип",                 widthType  );
  Report1.AddColumn("Статус документа",              widthSost  );
  Report1.PrintHead;
*/
/* дистрибутив
  Report1.AddColumn("Признак",             widthSign  );
  Report1.AddColumn("Дата документа",      widthDate  );
  Report1.AddColumn("№ документа",         widthNumb  );
  Report1.AddColumn("Тип",                 widthType  );
  Report1.AddColumn("Валюта",              widthCur   );
  Report1.AddColumn("Дебет",               widthDebet );
  Report1.AddColumn("Кредит",              widthCredit);
  Report1.AddColumn("Сумма в валюте",      widthSum   , AL_RIGHT);
  Report1.AddColumn("Эквивалент в рублях", widthSumRur, AL_RIGHT);
  Report1.AddColumn("Основание",           widthReason);
  Report1.AddColumn("№ операциониста",     widthOper  , AL_RIGHT);
  Report1.PrintHead;
 */
end;
//----------------------------------------------------
MACRO PrintOneBlokHead1(Report : CTableReport, Chapter, FIID)

  var  dp;
  var  chapt;
  var  cur;

  chapt = TRsbDataset( "SELECT T_SYMBOL,T_NAME FROM DOBCHAPTR_DBT WHERE T_CHAPTER = "+Chapter);
  IF(chapt.moveNext)
  [Глава #### ###################](chapt.value(0),chapt.value(1));
  ELSE
    [Глава ######################################];
  END;

  cur = TRsbDataset( "SELECT T_FI_CODE,T_NAME FROM DFININSTR_DBT WHERE T_FIID = "+FIID);
  if(cur.moveNext)
  [Валюта #### ##################################################](cur.value(0),cur.value(1));
  else
[Валюта ################## ###########];
  end;
END;
//-------------------------------------------------------------------------
PRIVATE MACRO PrintOneOperation1(Report : CTableReport, rs, ratedate)

    var cur;
    var currencyStr = "";
    var SumR : moneyl;
    var SumRStr = "";
    var acutalRateDate : date;

    var zerodate = Date("01.01.0001");

    acutalRateDate = ternary(strlen(trim(string(ratedate))) != 0, ratedate, sqlDate2date(rs.value(7)));

    Report.PrintSeparator(TRUE);

    cur = TRsbDataset("SELECT T_FI_CODE FROM DFININSTR_DBT WHERE T_FIID = " + rs.value(3));
    if (cur.moveNext)
        currencyStr = string(cur.value(0));
    end;

    if (int(rs.value(3)) != NATCUR)
        ConvSum(SumR , rs.value(6), acutalRateDate, int(rs.value(3)));
        SumRStr = string(SumR);
        SumRStr = string(SumR);
    end;

[│       │          │    │          │          │                    │            │              │      │          │####################│####################│############│###############│##########################################│####│]
(string(rs.value(4):f), string(rs.value(5):f), rs.value(6), SumRStr, rs.value(16), rs.value(17));
    
//    Report.PrintStringTransferByWord( "", "", "", "", "", "", "", "", "", "", string(rs.value(4):f), string(rs.value(5):f), currencyStr, rs.value(6), SumRStr, rs.value(16), rs.value(17));
/* дистрибутив
    Report.PrintStringTransferByWord("V", "", "", rs.value(17), currencyStr, string(rs.value(4):f),
        string(rs.value(5):f), rs.value(6), SumRStr, rs.value(16), rs.value(11));  
*/
END;
//-------------------------------------------------------------------
PRIVATE MACRO PrintIsprDocument1(Report : CTableReport, rs, Type)

    var cur;
    var currencyStr = "";
    var SumR : moneyl;
    var SumRStr = "";
    var FIID_num;
    var docDate : date;

    Report.PrintSeparator(TRUE);

    docDate = sqlDate2date(rs.value(20));

    /* если T_FIID_FROM == NATCUR (номер поля - 4) то валюта: T_FIID_TO (номер поля - 5) */
    if(Int(rs.value(4)) == NATCUR)
        FIID_num = 5;
    else
        FIID_num = 4;
    end;

    cur = TRsbDataset("SELECT T_FI_CODE FROM DFININSTR_DBT WHERE T_FIID = " + rs.value(4));
    if (cur.moveNext)
        currencyStr = string(cur.value(0));
    end;

    if (int(rs.value(4)) != NATCUR)
        ConvSum(SumR , rs.value(6+(FIID_num-4)), docDate, int(rs.value(FIID_num)));
        SumRStr = string(SumR);
    end;
[│#######│          │####│##########│##########│####################│############│##############│      │          │                    │                    │            │               │                                          │    │
 │       │          │    │          │          │####################│            │              │      │          │                    │                    │            │               │                                          │    │
 ├───────┼──────────┼────┼──────────┼──────────┼────────────────────┼────────────┼──────────────┼──────┼──────────┼────────────────────┼────────────────────┼────────────┼───────────────┼──────────────────────────────────────────┼────┤ ]
( "",  rs.value(30), rs.value(23), docDate, string(rs.value(9):f), rs.value(6+(FIID_num-4)), SumRStr, string(rs.value(10):f) );

//    Report.PrintStringTransferByWord( " ", rs.value(30), rs.value(23), docDate, string(rs.value(9):f), string(rs.value(10):f), rs.value(6+(FIID_num-4)), SumRStr ); 
/* дистрибутив
    Report.PrintStringTransferByWord("Ошиб.", docDate, rs.value(23), rs.value(33), currencyStr,
        string(rs.value(9):f), string(rs.value(10):f), rs.value(6+(FIID_num-4)), SumRStr,
        rs.value(25), rs.value(30));  
*/
END;
//-----------------------------------------------------
PRIVATE MACRO PrintOneBlok1(Report : CTableReport, rs, Show_Op,flag) // rs имеет формат DISPR_DOCS_TMP

    record Document(arhdoc);
    var strcmd;
    var cur;
    var currencyStr : string;
    var ispr;
    var sdoc;
    var scarry;
    var mcarry;
    var carry;
    var opr;
    var SumR : moneyl;
    var SumRStr : string;
    var ID;
    var count;
    var docDate;
    var rateDate;
    var carryGround;

    var stat = 0;

    if (flag==1) Report.PrintSeparator(TRUE); end;

    docDate = sqlDate2date(rs.value(8));
    rateDate = sqlDate2date(rs.value(15));

/* исправляющий документ -------------------------------------------------------------------------*/

    cur = TRsbDataset("SELECT t_fi_code FROM dfininstr_dbt WHERE t_fiid = " + rs.value(4));
    if (cur.moveNext)
        currencyStr = string(cur.fi_code);
    else
        currencyStr = "";
    end;

    if (int(rs.value(4)) != NATCUR)
        ConvSum(SumR , rs.value(5), rateDate, int(rs.value(4)));
        SumRStr = string(SumR);
    else
        SumRStr = "";
    end;
[│#######│##########│    │          │          │                    │            │              │######│##########│####################│####################│############│###############│##########################################│####│]
(rs.value(11), docDate, substr(rs.value(11), 8, 3), docDate, string(rs.value(6):f), string(rs.value(7):f), rs.value(5), SumRStr, rs.value(10):w, rs.value(12) );

//    Report.PrintStringTransferByWord( docDate, " ", " ", " ", " ", " ", " ", " ", substr(rs.value(11),8,3), docDate, string(rs.value(6):f), string(rs.value(7):f), currencyStr, rs.value(5), SumRStr, rs.value(10), rs.value(12)); 
/* дистрибутив
    Report.PrintStringTransferByWord("Испр.", docDate, rs.value(11), rs.value(12), currencyStr,
        string(rs.value(6):f), string(rs.value(7):f), rs.value(5), SumRStr, rs.value(10), rs.value(2));
*/
    
/* проводки исправляющего документа --------------------------------------------------------------*/

    if (Show_Op == true)
        strcmd = "TRUNCATE TABLE DOPR_DOCS_TMP;";
        execSQL(strcmd);

        if (Int(rs.value(1)) == DLDOC_MEMORIALORDER)

            cb_doc.DocumentID = Int(rs.value(0));

            if (GetEQ(cb_doc))

                ID = UniID(cb_doc, 0, DLDOC_MEMORIALORDER);
                opr = TRsbDataset("SELECT * FROM DOPROPER_DBT WHERE T_DOCKIND = " + Int(rs.value(1)) + " AND T_DOCUMENTID = '"+ID+"'");

                if (opr.moveNext)

                    ClearRecord(Document);
                    count = 0;

                    while(GetDocsByOperStep(Document,Int(opr.value(0)),0) == true)

                        if(Document.Result_Carry != RUBCARRY)

                            carryGround = ternary((strLen(trim(Document.GROUND)) == strLen(trim(rs.value(10)))) AND
                                                  (index(Document.GROUND, rs.value(10)) == 1),
                                                  "", Document.GROUND);
                            strcmd = "INSERT INTO DOPR_DOCS_TMP " +
                                "(T_KIND_OF_DOC,T_AUTOKEY,T_CHAPTER,T_CODE_CURRENCY,T_ACCOUNT_PAYER,T_ACCOUNT_RECEIVER,T_SUM,T_DATE_CARRY,T_DATE_VALUE,T_IAPPLICATIONKIND,T_APPLICATIONKEY,T_OPER,T_DEPARTMENT,T_CONNAPPKIND,T_CONNAPPKEY,T_NUMB_DOCUMENT,T_GROUND,T_TYPEDOCUMENT) " +
                                "VALUES("+count+","+Document.AUTOKEY+","+Document.CHAPTER+","+Document.CODE_CURRENCY+",'"+Document.ACCOUNT_PAYER+"','"+Document.ACCOUNT_RECEIVER+"',"+Document.SUM+",TO_DATE('"+string(Document.DATE_CARRY)+"','DD.MM.YYYY'),TO_DATE('"+string(Document.DATE_CARRY)+"','DD.MM.YYYY'),"+Document.IAPPLICATIONKIND+",'"+Document.APPLICATIONKEY+"',"+Document.OPER+","+Document.DEPARTMENT+","+Document.CONNAPPKIND+",'"+Document.CONNAPPKEY+"','"+Document.NUMB_DOCUMENT+"','"+carryGround+"','"+Document.TYPEDOCUMENT+"');";
                            execSQL(strcmd);
                            count = count+1;
                        end;
                    end;
                end;
            end;
        else
            multydoc.AutoKey = Int(rs.value(0));

            if (GetEQ(multydoc))

                ID = UniID(multydoc,0,CB_MULTYDOC);
                opr = TRsbDataset( "SELECT * FROM DOPROPER_DBT WHERE T_DOCKIND = " + Int(rs.value(1)) + " AND T_DOCUMENTID = '"+ID+"'");

                if (opr.moveNext)

                    ClearRecord(Document);
                    count = 0;

                    while (GetDocsByOperStep(Document,Int(opr.value(0)),0) == true)

                        carryGround = ternary((strLen(trim(Document.GROUND)) == strLen(trim(rs.value(10)))) AND
                                              (index(Document.GROUND, rs.value(10)) == 1),
                                              "", Document.GROUND);
                        strcmd = "INSERT INTO DOPR_DOCS_TMP " +
                            "(T_KIND_OF_DOC,T_AUTOKEY,T_CHAPTER,T_CODE_CURRENCY,T_ACCOUNT_PAYER,T_ACCOUNT_RECEIVER,T_SUM,T_DATE_CARRY,T_DATE_VALUE,T_IAPPLICATIONKIND,T_APPLICATIONKEY,T_OPER,T_DEPARTMENT,T_CONNAPPKIND,T_CONNAPPKEY,T_NUMB_DOCUMENT,T_GROUND,T_TYPEDOCUMENT) " +
                            "VALUES("+string(count)+","+string(Document.AUTOKEY)+","+string(Document.CHAPTER)+","+string(Document.CODE_CURRENCY)+",'"+string(Document.ACCOUNT_PAYER)+"','"+string(Document.ACCOUNT_RECEIVER)+"',"+string(Document.SUM)+",TO_DATE('"+string(Document.DATE_CARRY)+"','DD.MM.YYYY'),TO_DATE('"+string(Document.DATE_CARRY)+"','DD.MM.YYYY'),"+string(Document.IAPPLICATIONKIND)+",'"+string(Document.APPLICATIONKEY)+"',"+string(Document.OPER)+","+string(Document.DEPARTMENT)+","+string(Document.CONNAPPKIND)+",'"+string(Document.CONNAPPKEY)+"','"+string(Document.NUMB_DOCUMENT)+"','"+carryGround+"','"+string(Document.TYPEDOCUMENT)+"');";
                        execSQL(strcmd);
                        count = count+1;
                    end;
                end;
            end;
        end;

        /* вывод всех проводок по данному документу */
        strcmd =     "SELECT T_KIND_OF_DOC,T_AUTOKEY,T_CHAPTER,T_CODE_CURRENCY,T_ACCOUNT_PAYER,T_ACCOUNT_RECEIVER,"
            + "\n" + "       T_SUM,T_DATE_CARRY,T_DATE_VALUE,T_IAPPLICATIONKIND,T_APPLICATIONKEY,T_OPER,"
            + "\n" + "       T_DEPARTMENT,T_CONNAPPKIND,T_CONNAPPKEY,T_NUMB_DOCUMENT,T_GROUND,"
            + "\n" + "       DECODE(T_TYPEDOCUMENT,chr(1),' ',NULL,' ',T_TYPEDOCUMENT)"
            + "\n" + "  FROM DOPR_DOCS_TMP";
        carry = TRsbDataset(strcmd);

        while(carry.moveNext)
          PrintOneOperation1(Report, carry, rateDate);
        end;
    end;

/* исправленный документ -------------------------------------------------------------------------*/

    ispr = TRsbDataset( "SELECT * FROM DACCISPR_DBT WHERE T_DOCKIND = "+Int(rs.value(1))+" AND T_DOCUMENTID = "+Int(rs.value(0)));
    if(ispr.moveNext)
    //получена запись с проводкой и, возможно, документом

        strcmd =     "SELECT T_CARRYID,T_METHODID,T_IAPPLICATIONKIND,T_APPLICATIONKEY,T_FIID_FROM,T_FIID_TO,"
            + "\n" + "       T_AMOUNT_FROM,T_AMOUNT_TO,T_CHAPTER,T_ACCOUNT_FROM,T_ACCOUNT_TO,T_ACCOCP_FROM,"
            + "\n" + "       T_ACCOCP_TO,T_ACCOUNT1,T_ACCOUNT2,T_ACCOUNT3,T_ACCOUNT4,T_COMMENT,T_PAYMENTIDR,"
            + "\n" + "       T_PAYMENTIDC,T_DATE,T_DATE,T_DATE_DOCUMENT,T_NUMB_DOCUMENT,T_NUMBER_PACK,"
            + "\n" + "       T_GROUND,T_DEPARTMENT,T_PAYMENTTPR,T_PAYMENTTPC,T_SHIFROPER,T_OPER,T_KIND_OPER,"
            + "\n" + "       T_FORCEMOVE,DECODE(T_TYPE_DOCUMENT,chr(1),' ',T_TYPE_DOCUMENT) T_TYPE_DOCUMENT"
            + "\n" + "  FROM DMULTYCAR_DBT"
            + "\n" + " WHERE T_IAPPLICATIONKIND = " + Int(ispr.value(2)) + " AND"
            + "\n" + "       T_APPLICATIONKEY = '" + string(ispr.value(3)) + "'";
        mcarry = TRsbDataset(strcmd);
        if(mcarry.moveNext)
            /* проводка мультивалютная */
            PrintIsprDocument1(Report, mcarry, 1);

            /* проводки исправленной мультивалютной проводки ---------------------------------------*/
            if(Show_Op == true)
                strcmd = "TRUNCATE TABLE DOPR_DOCS_TMP;";
                execSQL(strcmd);
                strcmd =     "INSERT INTO DOPR_DOCS_TMP"
                    + "\n" + "SELECT 3 T_KIND_OF_DOC, T_AUTOKEY,T_CHAPTER,T_CODE_CURRENCY,T_ACCOUNT_PAYER,"
                    + "\n" + "       T_ACCOUNT_RECEIVER,T_SUM,T_DATE_CARRY,T_DATE_CARRY,T_IAPPLICATIONKIND,"
                    + "\n" + "       T_APPLICATIONKEY,T_OPER,T_DEPARTMENT,T_CONNAPPKIND,T_CONNAPPKEY,"
                    + "\n" + "       T_NUMB_DOCUMENT,"
                    + "\n" + "       (CASE"
                    + "\n" + "           WHEN TRIM(T_GROUND) = '" + trim(string(mcarry.value(25))) + "' THEN ' '"
                    + "\n" + "           ELSE T_GROUND"
                    + "\n" + "       END) t_grnd,"
                    + "\n" + "       DECODE (T_TYPEDOCUMENT,chr(1),' ',NULL,' ',"
                    + "\n" + "       T_TYPEDOCUMENT)"
                    + "\n" + "  FROM DARHDOC_DBT"
                    + "\n" + " WHERE T_CONNAPPKIND = " + Int(ispr.value(2)) + " AND"
                    + "\n" + "       T_CONNAPPKEY = '" + string(ispr.value(3)) + "';";
                execSQL(strcmd);
                strcmd =     "INSERT INTO DOPR_DOCS_TMP"
                    + "\n" + "SELECT 4 T_KIND_OF_DOC, T_AUTOKEY,T_CHAPTER,T_CODE_CURRENCY,T_ACCOUNT_PAYER,"
                    + "\n" + "       T_ACCOUNT_RECEIVER,T_SUM,T_DATE_CARRY,T_DATE_CARRY,T_IAPPLICATIONKIND,"
                    + "\n" + "       T_APPLICATIONKEY,T_OPER,T_DEPARTMENT,T_CONNAPPKIND,T_CONNAPPKEY,"
                    + "\n" + "       T_NUMB_DOCUMENT,"
                    + "\n" + "       (CASE"
                    + "\n" + "           WHEN TRIM(T_GROUND) = '" + trim(string(mcarry.value(25))) + "' THEN ' '"
                    + "\n" + "           ELSE T_GROUND"
                    + "\n" + "       END) t_grnd,"
                    + "\n" + "       DECODE (T_TYPEDOCUMENT,chr(1),' ',NULL,' ',"
                    + "\n" + "       T_TYPEDOCUMENT)"
                    + "\n" + "  FROM DARHDOC$_DBT"
                    + "\n" + " WHERE T_CONNAPPKIND = " + Int(ispr.value(2)) + " AND"
                    + "\n" + "       T_CONNAPPKEY = '" + string(ispr.value(3)) + "';";
                execSQL(strcmd);

                strcmd =     "SELECT T_KIND_OF_DOC,T_AUTOKEY,T_CHAPTER,T_CODE_CURRENCY,T_ACCOUNT_PAYER,T_ACCOUNT_RECEIVER,"
                    + "\n" + "       T_SUM,T_DATE_CARRY,T_DATE_VALUE,T_IAPPLICATIONKIND,T_APPLICATIONKEY,T_OPER,"
                    + "\n" + "       T_DEPARTMENT,T_CONNAPPKIND,T_CONNAPPKEY,T_NUMB_DOCUMENT,T_GROUND,"
                    + "\n" + "       DECODE(T_TYPEDOCUMENT,chr(1),' ',NULL,' ',T_TYPEDOCUMENT)"
                    + "\n" + "  FROM DOPR_DOCS_TMP";

                opr = TRsbDataset(strcmd);
                while(opr.moveNext)
                    PrintOneOperation1(Report, opr, "");
                end;
            end;
        else
            /* проводка не мультивалютная */
            var memDocWasPrinted = false;

            if (int(ispr.srcDocKind) == DLDOC_MEMORIALORDER)
            /* ордер */

                strcmd =     "     SELECT cb.t_code_currency, pm.t_Amount, pm.t_ValueDate,"
                    + "\n" + "       rm.t_Number, cb.t_typedocument, pm.t_PayerAccount,"
                    + "\n" + "       pm.t_ReceiverAccount, rm.t_Ground, cb.t_oper"
                    + "\n" + "       FROM dcb_doc_dbt cb"
                    + "\n" + " INNER JOIN dpmpaym_dbt pm"
                    + "\n" + "            ON pm.t_documentid = cb.t_documentid"
                    + "\n" + " INNER JOIN dpmrmprop_dbt rm"
                    + "\n" + "            ON rm.t_paymentid = pm.t_paymentid"
                    + "\n" + " WHERE cb.t_documentid = " + int(ispr.srcDocumentId);
                sdoc = TRsbDataset(strcmd);

                if(sdoc.next)

                    report.printSeparator(TRUE);

                    cur = TRsbDataset("SELECT t_fi_code FROM dfininstr_dbt WHERE t_fiid = " + sdoc.code_currency);
                    if (cur.moveNext)
                        currencyStr = string(cur.fi_code);
                    else
                        currencyStr = "";
                    end;

                    if (sdoc.code_currency != NATCUR)
                        convSum(sumR, sdoc.amount, sqlDate2date(sdoc.valueDate), sdoc.code_currency );
                        sumRStr = string(sumR);
                    else
                        sumRStr = "";
                    end;


[│#######│          │####│##########│##########│####################│############│##############│      │          │                    │                    │            │               │                                          │    │
 │       │          │    │          │          │####################│            │              │      │          │                    │                    │            │               │                                          │    │
 ├───────┼──────────┼────┼──────────┼──────────┼────────────────────┼────────────┼──────────────┼──────┼──────────┼────────────────────┼────────────────────┼────────────┼───────────────┼──────────────────────────────────────────┼────┤ ]
( "",  sdoc.value(8), sdoc.value(3), string(sqlDate2date(sdoc.value(2)):f), string(sdoc.value(5):f), sdoc.value(1), SumRStr, string(sdoc.value(6):f));

//                    report.printStringTransferByWord("Ошиб.", string(sqlDate2date(sdoc.valueDate):f),
//                        sdoc.number, sdoc.typeDocument, currencyStr, string(sdoc.payerAccount:f),
//                        string(sdoc.receiverAccount:f), sdoc.amount, sumRStr, sdoc.ground, sdoc.oper);

                    memDocWasPrinted = true;

                    /* проводки исправленного ордера ---------------------------------------------*/
                    if (show_op == true)
                        strcmd = "TRUNCATE TABLE dopr_docs_tmp;";
                        execSQL(strcmd);

                        cb_doc.documentId = Int(ispr.srcDocumentId);

                        if (getEq(cb_doc))

                            id = uniId(cb_doc, 0, DLDOC_MEMORIALORDER);
                            opr = TRsbDataset("SELECT * FROM doproper_dbt WHERE t_dockind = " + int(ispr.srcDocKind) + " AND t_documentid = '" + id + "'");

                            if (opr.moveNext)

                                clearRecord(document);
                                count = 0;

                                while(getDocsByOperStep(document,Int(opr.value(0)),0) == true)

                                    if(document.result_carry != RUBCARRY)

                                        carryGround = ternary((strLen(trim(document.ground)) == strLen(trim(sdoc.ground))) and
                                                              (index(document.ground, sdoc.ground) == 1),
                                                              "", document.ground);
                                        strcmd = "INSERT INTO dopr_docs_tmp " +
                                            "(t_kind_of_doc,t_autokey,t_chapter,t_code_currency,t_account_payer,t_account_receiver,t_sum,t_date_carry,t_date_value,t_iapplicationkind,t_applicationkey,t_oper,t_department,t_connappkind,t_connappkey,t_numb_document,t_ground,t_typedocument) " +
                                            "VALUES(" + count + "," + document.autokey + "," + document.chapter + "," + document.code_currency + ",'" + document.account_payer + "','" +
                                                        document.account_receiver + "'," + document.sum + ",TO_DATE('" + string(document.date_carry) + "','DD.MM.YYYY'),TO_DATE('" +
                                                        string(document.date_carry) + "','DD.MM.YYYY')," + document.iApplicationKind + ",'" + document.applicationKey + "'," +
                                                        document.oper + "," + document.department + "," + document.connappKind + ",'" + document.connappKey + "','" +
                                                        document.numb_document + "','" + carryGround + "','" + document.typeDocument + "');";
                                        execSQL(strcmd);
                                        count = count+1;
                                    end;
                                end;
                            end;
                        end;

                        /* вывод всех проводок по данному документу */
                        strcmd =     "SELECT t_kind_of_doc,t_autokey,t_chapter,t_code_currency,t_account_payer,t_account_receiver,"
                            + "\n" + "       t_sum,t_date_carry,t_date_value,t_iapplicationkind,t_applicationkey,t_oper,"
                            + "\n" + "       t_department,t_connappkind,t_connappkey,t_numb_document,t_ground,"
                            + "\n" + "       DECODE(t_typedocument,CHR(1),' ',NULL,' ',t_typedocument)"
                            + "\n" + "  FROM dopr_docs_tmp";
                        carry = TRsbDataset(strcmd);

                        while(carry.moveNext)
                          printOneOperation1(report, carry, "");
                        end;
                    end;
                end;
            end;

            if (not memDocWasPrinted)
            /* проводка */

                strcmd =     "SELECT t_code_currency,t_sum,t_date_carry,t_numb_document,t_typedocument,"
                    + "\n" + "       t_account_payer,t_account_receiver,t_ground,t_oper"
                    + "\n" + "  FROM darhdoc_dbt"
                    + "\n" + " WHERE t_iapplicationkind = " + int(ispr.iApplicationKind) + " AND"
                    + "\n" + "       t_applicationkey = '" + string(ispr.applicationKey) + "'"
                    + "\n" + "UNION ALL"
                    + "\n" + "SELECT t_code_currency,t_sum,t_date_carry,t_numb_document,t_typedocument,"
                    + "\n" + "       t_account_payer,t_account_receiver,t_ground,t_oper"
                    + "\n" + "  FROM darhdoc$_dbt"
                    + "\n" + " WHERE t_iapplicationkind = " + int(ispr.iApplicationKind) + " AND"
                    + "\n" + "       t_applicationkey = '" + string(ispr.applicationKey) + "'";
                scarry = TRsbDataset(strcmd);

                if (scarry.next)

                    report.printSeparator(TRUE);

                    cur = TRsbDataset("SELECT t_fi_code FROM dfininstr_dbt WHERE t_fiid = " + scarry.code_currency);
                    if (cur.moveNext)
                        currencyStr = string(cur.fi_code);
                    else
                        currencyStr = "";
                    end;

                    if (scarry.code_currency != NATCUR)
                        convSum(sumR, scarry.sum, scarry.date_carry, scarry.code_currency);
                        sumRStr = string(SumR);
                    else
                    SumRStr = "";
                end;
[│#######│          │####│##########│##########│####################│############│##############│      │          │                    │                    │            │               │                                          │    │
 │       │          │    │          │          │####################│            │              │      │          │                    │                    │            │               │                                          │    │
 ├───────┼──────────┼────┼──────────┼──────────┼────────────────────┼────────────┼──────────────┼──────┼──────────┼────────────────────┼────────────────────┼────────────┼───────────────┼──────────────────────────────────────────┼────┤ ]
( "",  scarry.value(8), scarry.value(3), string(sqlDate2date(scarry.value(2)):f), string(scarry.value(5):f), scarry.value(1), SumRStr, string(scarry.value(6):f));

//                    report.printStringTransferByWord("Ошиб. V", string(sqlDate2date(scarry.date_carry):f),
//                        "", scarry.typedocument, currencyStr, string(scarry.account_payer:f),
//                        string(scarry.account_receiver:f), scarry.sum, SumRStr, scarry.ground, scarry.oper);
                end;
            end;
        end;
    end;

END;
//------------------------------------------------------------
PRIVATE MACRO SplitMoney( Sum : money, Sum_Rub : @string, Sum_Kop : @string )

  Sum_Rub = substr( string( Sum ), 1, index( string(Sum), ".") - 1);
  Sum_Kop = substr( string( Sum ),    index( string(Sum), ".") + 1);

END;
//--------------------------------------------------------------------------
PRIVATE MACRO PrintOneBlokPodval1(Report : CTableReport, FIID)
    var cur;
    var FI_Code   = "";
    var Sum_Rub;
    var Sum_Kop;
    var i;

    /*Поменяла в select'е T_FI_CODE на T_CCY*/
    /*//11 Dec 06 Mon 16:57:37 Malakhova Irina*/
    cur = TRsbDataset( "SELECT T_CCY FROM DFININSTR_DBT WHERE T_FIID = "+string(FIID));
    if(cur.moveNext)
        FI_Code = string(cur.value(0));
    end;

    i = 0;
    println();
    while (i < correctKindSign.size)

        if (blockCount[i] != 0)

            SplitMoney( blockSumR[i], @Sum_Rub, @Sum_Kop );

            PrintLn("Итого ", correctKindString[i], " документов ", blockCount[i], " на сумму ",
                    blockSum[i], " ", FI_Code, "  ", Sum_Rub, " рублей ", Sum_Kop, " копеек");
        end;
        i = i + 1;
    end;

    SumAll = SumAll + blockSumR[i];
    CountAll = CountAll + blockCount[i];

    SplitMoney( blockSumR[i], @Sum_Rub, @Sum_Kop );
    PrintLn("ВСЕГО исправляющих документов ", blockCount[i], " на сумму ",
                                                    Sum_Rub, " рублей ", Sum_Kop, " копеек");
    println();
END;
//--------------------------------------------------------------------------
PRIVATE MACRO PrintPodval1(Report : CTableReport)
  var Sum_Rub,Sum_Kop;

  SplitMoney( SumAll, @Sum_Rub, @Sum_Kop );

  /*11 Dec 06 Mon 17:18:39 Malakhova Irina*/
  PrintLn("ВСЕГО по отчету исправляющих документов ", countAll, " на сумму ",
                                                      Sum_Rub, " рублей ", Sum_Kop, " копеек");
  println();
  println();
  println("Главный бухгалтер________________________ /                             /");
  println();
  println("Бухгалтер        ________________________ /                             /");

END;
//-------------------------------------------------------------------
MACRO CorReport1(Dep_Number,
                 OrgStructure,
                 IssueMode,
                 Chapter,
                 FIID,
                 First_Date,
                 Second_Date,
                 Oper,
                 BalanceAccount,
                 Account,
                 Correct_Kind,
                 Show_Op)

    var  rs , cmd , strcmd, strcmd_cb_doc = "", strcmd_multydoc = "" ;
    var  Report1 = CTableReport(0, FALSE, FALSE);
    var  Chapter_ = 0, FIID_ = -1;
    var  Chapter_new, FIID_new;
    var  rateDate : Date;
    var  sumRub = Money(0);
    var  NextRecord;

    var  wherecond = "";
    var  flag;
    var  PRB = TArray();
    var  departmentList;
    var  accountFilter;
    var  branchFilter;

    var i;
    var correctKindSqlStr = TArray();
    var allCorrectKindSignsStr = "";
    var moreThenOneBlock = false;

    var counter  = 0; /* счетчик строк   */
    var countStr = 0; /* счетчик страниц */

    i = 0;
    while (i < correctKindSign.size)
        correctKindSqlStr[i] = "'%" + correctKindSign[i] + "%'";
        allCorrectKindSignsStr = allCorrectKindSignsStr + correctKindSign[i];
        i = i + 1;
    end;

    departmentList = RepDepartmentList(OrgStructure, IssueMode, Dep_Number);
    branchFilter   = RepBranchFieldFilter(departmentList);
    accountFilter  = RepAccountFilter(departmentList, PRIV_GET_ACCOUNT_DATA_FOR_REPORTS);

    /* Контроль опердней */
    if(RepOperdaysOpened( departmentList, First_Date, Second_Date ).ShouldContinue == false)
      exit(1);
    end;

/* фильтры */
    strcmd = "TRUNCATE TABLE DISPR_DOCS_TMP;";
    execSQL(strcmd);
    strcmd = "TRUNCATE TABLE DOPR_DOCS_TMP;";
    execSQL(strcmd);

    strcmd_cb_doc = "pm.t_DocKind = "+string(DLDOC_MEMORIALORDER)
           + "\n" + "       AND pm.t_DocumentID = d.t_DocumentID"
           + "\n" + "       AND pm.t_Purpose = " + string(PM_PURP_MEMORDER)
           + "\n" + "       AND rm.t_PaymentID = pm.t_PaymentID"
           + "\n" + "       AND pm.t_ValueDate >= TO_DATE('" + string(First_Date) + "','DD.MM.YYYY')"
           + "\n" + "       AND pm.t_ValueDate <= TO_DATE('" + string(Second_Date) + "','DD.MM.YYYY')"
           + "\n" + "       AND " + BranchFilter.GetAsSqlString("pm.t_Department")
           + "\n" + "       AND d.T_DOCUMENTID = i.T_DOCUMENTID AND i.T_DOCKIND = " + DLDOC_MEMORIALORDER;

    strcmd_multydoc = "pm.t_DocKind = " + string(CB_MULTYDOC)
             + "\n" + "       AND pm.t_DocumentID = d.t_AutoKey"
             + "\n" + "       AND pm.t_Purpose = " + string(PM_PURP_MULTYDOC)
             + "\n" + "       AND rm.t_PaymentID = pm.t_PaymentID"
             + "\n" + "       AND pm.t_ValueDate >= TO_DATE('" + string(First_Date) + "','DD.MM.YYYY')"
             + "\n" + "       AND pm.t_ValueDate <= TO_DATE('" + string(Second_Date)  +"','DD.MM.YYYY')"
             + "\n" + "       AND " + BranchFilter.GetAsSqlString("pm.t_Department")
             + "\n" + "       AND d.T_AUTOKEY = i.T_DOCUMENTID AND i.T_DOCKIND = " + CB_MULTYDOC;

    IF(FIID == ALLCURRENCY)
        strcmd_cb_doc = strcmd_cb_doc + "\n" +
            "       AND d.T_CODE_CURRENCY != " + string(NATCUR);
        strcmd_multydoc = strcmd_multydoc + "\n" +
            "       AND (pm.t_FIID != " + string(NATCUR) + " AND pm.t_PayFIID != " + string(NATCUR)+")";

    ELIF(FIID != ALLFININSTR)
        strcmd_cb_doc = strcmd_cb_doc + "\n" +
            "       AND d.T_CODE_CURRENCY = " + string(FIID);
        strcmd_multydoc = strcmd_multydoc + "\n" +
            "       AND (pm.t_FIID = " + string(FIID) + " OR pm.t_PayFIID = " + string(FIID)+")";

    END;

    IF(Chapter > 0)
        strcmd_cb_doc = strcmd_cb_doc + "\n" +
            "       AND d.T_CHAPTER = " + string(Chapter);
        strcmd_multydoc = strcmd_multydoc + "\n" +
            "       AND d.T_CHAPTER = " + string(Chapter);
    END;

    /* фильтр по маске лицевого счета */
    IF(Account != "")
        strcmd_cb_doc = strcmd_cb_doc + "\n" +
            "       AND ((" + ConvertMaskToSQLFormat(Account, "pm.t_PayerAccount") + ")" + " OR " +
                        "(" + ConvertMaskToSQLFormat(Account, "pm.t_ReceiverAccount") + "))";
        strcmd_multydoc = strcmd_multydoc + "\n" +
            "       AND ((" + ConvertMaskToSQLFormat(Account, "pm.t_PayerAccount") + ")" + " OR " +
                        "(" + ConvertMaskToSQLFormat(Account, "pm.t_ReceiverAccount") + "))";
    END;

    /* фильтр по маске балансового счета */
    IF(BalanceAccount != "")
        wherecond = "((" + ConvertMaskToSQLFormat(BalanceAccount, "T_BALANCE_FROM") + ")" + " OR " +
                     "(" + ConvertMaskToSQLFormat(BalanceAccount, "T_BALANCE_TO") + "))";
    END;

    /* фильтр по типу исправительного документа */
    if (Correct_Kind == 1)
        strcmd_cb_doc   = strcmd_cb_doc + "\n" +
            "       AND REGEXP_LIKE(d.T_TYPEDOCUMENT, '[" + allCorrectKindSignsStr + "]', 'c')";
        strcmd_multydoc = strcmd_multydoc + "\n" +
            "       AND REGEXP_LIKE(d.T_TYPE_DOCUMENT, '[" + allCorrectKindSignsStr + "]', 'c')";
    else
        strcmd_cb_doc =   strcmd_cb_doc + "\n" +
            "       AND (d.T_TYPEDOCUMENT LIKE "  + correctKindSqlStr[Correct_Kind-2] + ")";
        strcmd_multydoc = strcmd_multydoc + "\n" +
            "       AND (d.T_TYPE_DOCUMENT LIKE " + correctKindSqlStr[Correct_Kind-2] + ")";
    end;

    IF(Oper != 0)
        strcmd_cb_doc = strcmd_cb_doc + "\n" +
            "       AND d.T_OPER = '" + Oper + "'";
        strcmd_multydoc = strcmd_multydoc + "\n" +
            "       AND d.T_OPER = '" + Oper + "'";
    END;

    strcmd_cb_doc = strcmd_cb_doc
        + "\n" + "       AND acc1.T_CHAPTER = d.T_CHAPTER AND acc1.T_ACCOUNT = pm.t_PayerAccount"
        + "\n" + "       AND acc2.T_CHAPTER = d.T_CHAPTER AND acc2.T_ACCOUNT = pm.t_ReceiverAccount"
        + "\n" + "       AND ("   + AccountFilter.GetAsSqlString("acc1")
        + "\n" + "           OR " + AccountFilter.GetAsSqlString("acc2") + ")";

    strcmd_multydoc = strcmd_multydoc
        + "\n" + "       AND acc1.T_CHAPTER = d.T_CHAPTER AND acc1.T_ACCOUNT = pm.t_PayerAccount"
        + "\n" + "       AND acc2.T_CHAPTER = d.T_CHAPTER AND acc2.T_ACCOUNT = pm.t_ReceiverAccount"
        + "\n" + "       AND ( "  + AccountFilter.GetAsSqlString("acc1")
        + "\n" + "           OR " + AccountFilter.GetAsSqlString("acc2") + ")";

// KS 17.01.2011 I-115081 Отчет по исправительным оборотам
//               Поле t_Ground ограничи 210 символами, т.к. временная таблица позволяет 210
//               На экран выводиться всё равно только три десятка символов - на внешнем виде это никак не скажется
/* заполнение временной таблицы DISPR_DOCS_TMP */
    strcmd =     "INSERT INTO DISPR_DOCS_TMP SELECT d.T_DOCUMENTID, " + DLDOC_MEMORIALORDER + ", d.T_OPER, d.T_CHAPTER, d.T_CODE_CURRENCY T_FIID_FROM, pm.t_Amount, pm.t_PayerAccount, pm.t_ReceiverAccount, pm.t_ValueDate, pm.t_Department, substr(rm.t_Ground,1,210), rm.t_Number, d.T_TYPEDOCUMENT, acc1.T_BALANCE, acc2.T_BALANCE, i.t_rateDate"
        + "\n" + "FROM DCB_DOC_DBT d, DACCISPR_DBT i, DACCOUNT_DBT acc1, DACCOUNT_DBT acc2, DPMPAYM_DBT pm, DPMRMPROP_DBT rm"
        + "\n" + " WHERE " + strcmd_cb_doc
        + "\n" + "       AND d.T_CODE_CURRENCY = " + NATCUR + ";";
    execSQL(strcmd);

    strcmd =     "INSERT INTO DISPR_DOCS_TMP SELECT d.T_DOCUMENTID, " + DLDOC_MEMORIALORDER + ", d.T_OPER, d.T_CHAPTER, d.T_CODE_CURRENCY T_FIID_FROM, pm.t_Amount, pm.t_PayerAccount, pm.t_ReceiverAccount, pm.t_ValueDate, pm.t_Department, substr(rm.t_Ground,1,210), rm.t_Number, d.T_TYPEDOCUMENT, acc1.T_BALANCE, acc2.T_BALANCE, i.t_rateDate"
        + "\n" + "FROM DCB_DOC_DBT d, DACCISPR_DBT i, DACCOUNT_DBT acc1, DACCOUNT_DBT acc2, DPMPAYM_DBT pm, DPMRMPROP_DBT rm"
        + "\n" + " WHERE " + strcmd_cb_doc
        + "\n" + "       AND NOT (d.T_CODE_CURRENCY = " + NATCUR + ")"
        + "\n" + "       AND acc1.T_CODE_CURRENCY = d.T_CODE_CURRENCY"
        + "\n" + "       AND acc2.T_CODE_CURRENCY = d.T_CODE_CURRENCY;";
    execSQL(strcmd);

    /* ACCOUNT_PAYER - валютный, ACCOUNT_RECEIVER - валютный */
    strcmd =     "INSERT INTO DISPR_DOCS_TMP SELECT d.T_AUTOKEY T_DOCUMENTID, " + CB_MULTYDOC + " T_DOCKIND, d.T_OPER, d.T_CHAPTER, pm.t_FIID, pm.t_Amount T_SUM, pm.t_PayerAccount T_ACCOUNT_PAYER, pm.t_ReceiverAccount T_ACCOUNT_RECEIVER, pm.t_ValueDate T_DATE_CARRY, pm.t_Department, substr(rm.t_Ground,1,210), rm.t_Number, d.T_TYPE_DOCUMENT, acc1.T_BALANCE, acc2.T_BALANCE, i.t_rateDate"
        + "\n" + "FROM DMULTYDOC_DBT d, DACCISPR_DBT i, DACCOUNT_DBT acc1, DACCOUNT_DBT acc2, DPMPAYM_DBT pm, DPMRMPROP_DBT rm"
        + "\n" + " WHERE " + strcmd_multydoc
        + "\n" + "       AND NOT (pm.t_FIID = " + NATCUR + ") AND NOT (pm.t_PayFIID = " + NATCUR + ")"
        + "\n" + "       AND acc1.T_CODE_CURRENCY = pm.t_FIID"
        + "\n" + "       AND acc2.T_CODE_CURRENCY = pm.t_PayFIID;";
    execSQL(strcmd);

    /* ACCOUNT_PAYER - валютный, ACCOUNT_RECEIVER - рублевый */
    strcmd =     "INSERT INTO DISPR_DOCS_TMP SELECT d.T_AUTOKEY T_DOCUMENTID, " + CB_MULTYDOC + " T_DOCKIND, d.T_OPER, d.T_CHAPTER, pm.t_FIID, pm.t_Amount T_SUM, pm.t_PayerAccount T_ACCOUNT_PAYER, pm.t_ReceiverAccount T_ACCOUNT_RECEIVER, pm.t_ValueDate T_DATE_CARRY, pm.t_Department, substr(rm.t_Ground,1,210), rm.t_Number, d.T_TYPE_DOCUMENT, acc1.T_BALANCE, acc2.T_BALANCE, i.t_rateDate"
        + "\n" + "FROM DMULTYDOC_DBT d, DACCISPR_DBT i, DACCOUNT_DBT acc1, DACCOUNT_DBT acc2, DPMPAYM_DBT pm, DPMRMPROP_DBT rm"
        + "\n" + " WHERE " + strcmd_multydoc
        + "\n" + "       AND NOT (pm.t_FIID = " + NATCUR + ") AND pm.t_PayFIID = " + NATCUR
        + "\n" + "       AND acc1.T_CODE_CURRENCY = pm.t_FIID"
        + "\n" + "       AND acc2.T_CODE_CURRENCY = pm.t_PayFIID;";
    execSQL(strcmd);

    /* ACCOUNT_PAYER - рублевый, ACCOUNT_RECEIVER - валютный */
    strcmd =     "INSERT INTO DISPR_DOCS_TMP SELECT d.T_AUTOKEY T_DOCUMENTID, " + CB_MULTYDOC + " T_DOCKIND, d.T_OPER, d.T_CHAPTER, pm.t_PayFIID T_FIID_FROM, pm.t_PayAmount T_SUM, pm.t_PayerAccount T_ACCOUNT_PAYER, pm.t_ReceiverAccount T_ACCOUNT_RECEIVER, pm.t_ValueDate T_DATE_CARRY, pm.t_Department, substr(rm.t_Ground,1,210), rm.t_Number, d.T_TYPE_DOCUMENT, acc1.T_BALANCE, acc2.T_BALANCE, i.t_rateDate"
        + "\n" + "FROM DMULTYDOC_DBT d, DACCISPR_DBT i, DACCOUNT_DBT acc1, DACCOUNT_DBT acc2, DPMPAYM_DBT pm, DPMRMPROP_DBT rm"
        + "\n" + " WHERE " + strcmd_multydoc
        + "\n" + "       AND pm.t_FIID = " + NATCUR + " AND NOT (pm.t_PayFIID = " + NATCUR + ")"
        + "\n" + "       AND acc1.T_CODE_CURRENCY = pm.t_FIID"
        + "\n" + "       AND acc2.T_CODE_CURRENCY = pm.t_PayFIID;";
    execSQL(strcmd);

    /* ACCOUNT_PAYER - рублевый, ACCOUNT_RECEIVER - рублевый */
    strcmd =     "INSERT INTO DISPR_DOCS_TMP SELECT d.T_AUTOKEY T_DOCUMENTID, " + CB_MULTYDOC + " T_DOCKIND, d.T_OPER, d.T_CHAPTER, pm.t_PayFIID T_FIID_FROM, pm.t_PayAmount T_SUM, pm.t_PayerAccount T_ACCOUNT_PAYER, pm.t_ReceiverAccount T_ACCOUNT_RECEIVER, pm.t_ValueDate T_DATE_CARRY, pm.t_Department, substr(rm.t_Ground,1,210), rm.t_Number, d.T_TYPE_DOCUMENT, acc1.T_BALANCE, acc2.T_BALANCE, i.t_rateDate"
        + "\n" + "FROM DMULTYDOC_DBT d, DACCISPR_DBT i, DACCOUNT_DBT acc1, DACCOUNT_DBT acc2, DPMPAYM_DBT pm, DPMRMPROP_DBT rm"
        + "\n" + " WHERE " + strcmd_multydoc
        + "\n" + "       AND pm.t_FIID = " + NATCUR + " AND pm.t_PayFIID = " + NATCUR;
    execSQL(strcmd);

/* получение данных из таблицы DISPR_DOCS_TMP */
    IF(wherecond == "")
        rs = TRsbDataset("  SELECT *"
                + "\n" + "    FROM DISPR_DOCS_TMP"
                + "\n" + "ORDER BY T_DEPARTMENT,T_CHAPTER,T_FIID_FROM,T_DATE_CARRY,T_NUMB_DOCUMENT");
    ELSE
        rs = TRsbDataset("  SELECT *"
                + "\n" + "    FROM DISPR_DOCS_TMP"
                + "\n" + "   WHERE " + wherecond
                + "\n" + "ORDER BY T_DEPARTMENT,T_CHAPTER,T_FIID_FROM,T_DATE_CARRY,T_NUMB_DOCUMENT");
    END;                                        // wherecond - фильтр по маске балансового счета

    rs.SetFieldType("t_date_carry", V_DATE);
    rs.SetFieldType("t_ratedate", V_DATE);

    PrintHeadOfReport1(Dep_Number, OrgStructure, First_Date, Second_Date);

    NextRecord = rs.moveNext;

/* вывод */
    if(NextRecord)

        Chapter_new = int(rs.value(3)); // T_CHAPTER
        FIID_new    = int(rs.value(4)); // T_FIID_FROM

        Chapter_ = Chapter_new;
        FIID_    = FIID_new;

        rateDate = sqlDate2date(rs.value(15)); // T_RATEDATE
        rateDate = ternary(strlen(trim(string(ratedate))) != 0, ratedate, sqlDate2date(rs.value(8))); // T_DATE_CARRY

        i = 0;
        while (i < correctKindSign.size)
            if (index(rs.value(12), correctKindSign[i]) != 0)
                blockSum[i] = Money(rs.value(5));
                ConvSum( blockSumR[i], Money(rs.value(5)), ratedate, FIID_new );
                blockCount[i] = 1;
            else
                blockSum[i] = Money(0);
                blockSumR[i] = Money(0);
                blockCount[i] = 0;
            end;
            i = i + 1;
        end;

        blockSum[i] = Money(rs.value(5));
        ConvSum( blockSumR[i], blockSum[i], ratedate, FIID_new );
        blockCount[i] = 1;
//
        SumAll = Money(0);
        CountAll = 0;

        PrintOneBlokHead1(Report1, Chapter_, FIID_);
        PrintOneBlokCages1(Report1);
        PrintOneBlok1(Report1, rs, Show_Op, 0);

        flag=1;
        NextRecord = rs.moveNext;

        if(NextRecord)
            while( NextRecord )

		/* счетчик строк, нумерация страниц и перевод на новую страницу */
		counter = counter + 1;
		if (counter == 10)
			countStr = countStr + 1;		/*прибавляем номер страницы*/
			println( " ") ;				/*переводим на новую строку*/
			println( " ") ;				/*переводим на новую строку*/
			println( "Стр. " + countStr) ; 		/*печатаем номер страницы*/
			println( "") ;				/*переводим на новую страницу*/
			println( " ") ;				/*переводим на новую строку*/
			PrintOneBlokCages1();			/*печатаем шапку отчета на новой странице*/
			counter = 0;				/*сбрасываем счетчик строк*/
		end;
                /* end счетчик строк */

                Chapter_new = int(rs.value(3)); // T_CHAPTER
                FIID_new    = int(rs.value(4)); // T_FIID_FROM

                rateDate = sqlDate2date(rs.value(15)); // T_RATEDATE
                rateDate = ternary(strlen(trim(string(ratedate))) != 0, ratedate, sqlDate2date(rs.value(8))); // T_DATE_CARRY

                if( (Chapter_ != Chapter_new) OR (FIID_ != FIID_new) )

                    Report1.PrintBottom;

                    PrintOneBlokPodval1(Report1, FIID_);

                    PrintOneBlokHead1(Report1, Chapter_new, FIID_new);

		    PrintOneBlokCages1(Report1); // шапка отчета перед валютой
//                    Report1.PrintHead;

                    flag=0;
                    Chapter_ = Chapter_new;
                    FIID_ = FIID_new;

                    /* Обнуление сумм и счетчика по блоку */
                    i = 0;
                    while (i < (correctKindSign.size + 1))
                        blockSum[i] = Money(0);
                        blockSumR[i] = Money(0);
                        blockCount[i] = 0;
                        i = i + 1;
                    end;

                    moreThenOneBlock = true;

                end;

                PrintOneBlok1(Report1,rs,Show_Op,flag);

                flag=1;
                i = 0;
                while (i < correctKindSign.size)
                    if (index(rs.value(12), correctKindSign[i]) != 0)

                        blockSum[i] = blockSum[i] + Money(rs.value(5));
                        ConvSum( @sumRub, Money(rs.value(5)), ratedate, FIID_new );
                        blockSumR[i] = blockSumR[i] + sumRub;
                        blockCount[i] = blockCount[i] + 1;
                    end;
                    i = i + 1;
                end;

                blockSum[i] = blockSum[i] + Money(rs.value(5));
                ConvSum( @sumRub, Money(rs.value(5)), ratedate, FIID_new );
                blockSumR[i] = blockSumR[i] + sumRub;
                blockCount[i] = blockCount[i] + 1;

                NextRecord = rs.moveNext;

                if(NextRecord != true)

                    Report1.PrintBottom;
                    PrintOneBlokPodval1(Report1, FIID_);
                end;
            end;
        else

            Report1.PrintBottom;
            PrintOneBlokPodval1(Report1, FIID_); // T_DATE_CARRY
        end;

        if (moreThenOneBlock)
            PrintPodval1(Report1);
        end;
    else

        println(StrAlign("Нет данных для отчета", width, STR_ALIGN_CENTER));
    end;
    return true;
END;
