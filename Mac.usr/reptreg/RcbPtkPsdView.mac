import lib_exp;
import lib_str;
import rcbZone;
import param; 

FILE m_outFile() txt append;

/**
 * Представление экспорта форм в ПТК ПСД.
 */

class TPtkPsdView(fileExtension : String, reportDate : Date, encoding : String)

    private const DELIMETER = "\t";

    private var EOL         = "$empty$";

    /**
     * Имя файла экспорта.
     */
    private var m_name             = "";
    /**
     * Дата отчета.
     */
    private var m_reportDate       = reportDate;
    /**
     * Расширение файла(обычно номер формы).
     */
    private var m_fileExtension    = fileExtension;
    /**
     * Число выгруженных строк.
     */
    private var m_rowsCount        = 0;
    /**
     * Дата отчета в формате "DD.MM.YY"
     */
    private var m_stringReportDate = "";
    /**
     * Поток вывода до начала печати экспорта.
     */
    private var m_oldOutput;

    /**
     * Бик банка.
     */
    private var m_bic;         

    /**
    * Кодировка файла: rsoem (по умолчанию), rsansi
    */
    private var m_encoding = encoding;

    /**
     * Установка даты для использования в файле экспорта
     */
    macro setDate(needFullDate)
        var day;
        var month;
        var year;

        DateSplit(m_reportDate, day, month, year);

        if (needFullDate)
            m_stringReportDate =  strLpad(string(day),   2, "0") + "."
                                + strLpad(string(month), 2, "0") + "."
                                + strLpad(string(year),  4, "0");
        else
            m_stringReportDate =  strLpad(string(day),   2, "0") + "."
                                + strLpad(string(month), 2, "0") + "."
                                + substr(string(year), 3);
        end;
    end;

    local macro constructorTRcbPtkPsdView()
        var bic;

        setDate(true);

        m_name = получитьКаталогЭкспорта() + "\\" + strSubst(m_stringReportDate, ".", "")
                                                 + "PtkPsd" 
                                                 + "." + m_fileExtension;

        bic = repGetPartyCode(TZone().party().rec.partyId, PTCK_BIC, m_reportDate);       
        m_bic = subStr(bic, strBrk(bic, "123456789"));

        if ((m_encoding == "") or (m_encoding == null))
            m_encoding = "rsoem";
        end;
    end;        

    macro setOutputFile(isContinue : Bool)
        if (isContinue != true)
            DelFile(m_name);
        end;

        Open(m_outFile, m_name, m_encoding);
    end;

    macro resetOutputFile()
        Close (m_outFile);
    end;

    macro getFileName()
        return m_name;
    end;

    macro getRowsCount() : Integer
        return m_rowsCount;
    end;
    /*метод не рекомендуемый к использованию,вместо него следует использовать метод printRow*/
    macro printString(appCode, rowCode, columnCode, value)
        insert(m_outFile, m_bic +                      DELIMETER
                        + String(m_stringReportDate) + DELIMETER
                        + appCode +                    DELIMETER
                        + rowCode +                    DELIMETER
                        + columnCode +                 DELIMETER
                        + value +                      DELIMETER
                        + EOL);

        m_rowsCount = m_rowsCount + 1;
    end;

    private macro printRowFromArray(pool : TArray)
        var str = "";
        var i = 0;

        while (i < pool.size) 
            str = str + pool[i] + DELIMETER;
            i = i + 1;
        end;

        Insert(m_outFile, m_bic + DELIMETER + String(m_stringReportDate) + DELIMETER + str + EOL);

        m_rowsCount = m_rowsCount + 1;
    end;

    macro printRow(printValue)
        var i    : Integer = 1;
        var pool = TArray;
        var value;
        
        if (valType(printValue) == valType(TArray))
            pool = printValue;
        else
            while(getParm(i, value))
                pool[pool.size] = value;
                i = i + 1;
            end;
        end;

        printRowFromArray(pool);
    end;

    macro destructor()
        if (m_oldOutput != m_name)
            resetOutputFile();
        end;
    end;

    /* EVG Метод возвращает имя файла на терминале */
    macro getFileName_Term( termDir )
       var termFileName = termDir + "\\" + strSubst(m_stringReportDate, ".", "")
                                        + "PtkPsd" 
                                        + "." + m_fileExtension;
       return termFileName;
    end;

    constructorTRcbPtkPsdView();
end;