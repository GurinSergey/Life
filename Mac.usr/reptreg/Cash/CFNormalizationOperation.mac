
/**
* Класс TNormalizationOperation и его наследники.
// KS 12.12.2013 Перенос пользовательских доработок в 31ю сборку
*/

import ReportNormalizer;
import ReportLinearRelation;

import repException;

import CFNormalizationProtocolView;
import CFOkatoCodesBuilder;
import CFOkatoPart;
import CFReport;
import CFSymbol;
import balanceAttribute;

private const ACCOUNT_PERMISSIBLE_DESICIONS = 30000;

private macro toNodeCode(symbol : TSymbol)
    return symbol.getOkatoCode() + "$" + symbol.getCode();
end;

private class TValue()
    var exact  = 0;
    var scaled = 0;
end;


macro getLinearRelation(type)
    if (rcbApplication.currentReport.normalizationAlgorithm == RCB_NA_SM)
        return RcbLinearRelation(type);
    elif(rcbApplication.currentReport.normalizationAlgorithm == RCB_NA_MMB)
        return ReportLinearRelation(type);
    end;
end;

macro getNormalizer(multiplier)
    var normalizer;
    if (rcbApplication.currentReport.normalizationAlgorithm == RCB_NA_SM)
        return RcbNormalizer(multiplier);
    elif(rcbApplication.currentReport.normalizationAlgorithm == RCB_NA_MMB)
        normalizer = ReportNormalizer(multiplier);

        normalizer.setIsOptimalDecision(false);
        normalizer.setMaxNumberOfDecision(ACCOUNT_PERMISSIBLE_DESICIONS);

        return normalizer
    end;
end;

macro getSymbolCompositeValue(rcbReport, symbolCode, okatoCode)

    var okatoKeyValue : RcbKeyValue;
    var symbolKeyValue : RcbKeyValue;
    var okatoCompositeValue : RcbcompositeValue;
    var symbolCompositeValue : RcbcompositeValue;

    /*получить ссылку на значение атрибута (RcbAttributeValue) текущего отчета "Символы"*/
    var attributeValue = rcbReport.AttributeValue("Символы");

    /*получить ссылку на составное значение (RcbCompositeValue),соответствующиее коду ОКАТО*/
    okatoKeyValue = attributeValue.attribute.structure.key.createKeyValue();
    okatoKeyValue.fieldValue("Код ОКАТО") = okatoCode;
    okatoKeyValue.fieldValue("Код символа") = "";

    okatoCompositeValue = attributeValue.findValue(okatoKeyValue);
    /*eсли ссылка нулевая, то создать соответствующее составное значение*/
    if (okatoCompositeValue == NULL)
        okatoCompositeValue = attributeValue.addValue(okatoKeyValue);
    end;

    /*в найденном составном значении получить ссылку на составное значение,соответствующее символу.*/
    symbolKeyValue = okatoCompositeValue.createKeyValue();
    symbolKeyValue.fieldValue("Код символа") = symbolCode;
    symbolCompositeValue = okatoCompositeValue.findValue(symbolKeyValue);
    /*если ссылка нулевая, то создать соответствующее составное значение*/
    if (symbolCompositeValue == NULL)
        symbolCompositeValue = okatoCompositeValue.addValue(symbolKeyValue);
    end;

    return symbolCompositeValue;
end;

/**
* Операция нормализации.
*/
class TNormalizationOperation()

    private var m_report = null;

    /**
    * Нормализовать отчет.
    */
    private macro normalize(report : TReport)
        throw(TPureVirtualMethodCallException("TNormalizationOperation::normalize"));
    end;

    private macro showProtocol()
        var protocol = TSummaryProtocolView();

        var protocolDescription = "ПРОТОКОЛ ПРОЦЕДУРЫ НОРМАЛИЗАЦИИ";

        protocol.add(TProtocolView(protocolDescription));

        protocol.show();
    end;

    /**
    * Выполнить нормализацию.
    */
    macro execute()
        normalize(m_report);

        showProtocol();
    end;

    macro constructor()
        var okatoCodes = okatoCodesBuilderInstance().getSortedOkatoCodes();
        m_report = objectFactoryInstance().createReport(rcbApplication.currentReport, okatoCodes);
    end;

    constructor();
end;

/**
* Операция нормализации по 1881-У.
*/
class (TNormalizationOperation) TNormalizationOperation1881()

    initTNormalizationOperation();

    private class TAddOkatoPart(normalizer, okatoPart : TOkatoPart)
        private var m_normalizer = normalizer;
        private var m_okatoPart  = okatoPart;

        private var m_node0239 = null;
        private var m_node0232 = null;
        private var m_node35   = null;
        private var m_node4077 = null;
        private var m_node4062 = null;
        private var m_node70   = null;
        private var m_nodes    = TArray;

        private var m_balanceRcbReport  = m_okatoPart.getReport().getBalanceRcbReport();
        private var m_previousRcbReport = m_okatoPart.getReport().getPreviousRcbReport();

        private macro replaceValue35()

            var previousSymbol70 = null;
            var balanceAttibute;
            var b20202NatCurA, b20206NatCurA, b20207NatCurA, b20202NatCurD, b20206NatCurD, b20207NatCurD, b20202NatCurC, b20206NatCurC, b20207NatCurC;

            if (m_previousRcbReport.isCalculated())

                previousSymbol70 = getSymbolCompositeValue(m_previousRcbReport, "70", m_okatoPart.getOkatoCode());

                if ((previousSymbol70 != null) and (previousSymbol70.fieldValue("Значение").isDefined()))
                    m_node35.scaled = previousSymbol70.fieldValue("Значение").scaled;
                else
                    m_node35.scaled = 0;
                end;

            elif (m_balanceRcbReport.isCalculated() and (m_okatoPart.getOkatoCode() == m_okatoPart.getReport().getTotalPart().getOkatoCode()))

                balanceAttibute = TBalanceAttribute("БАЛАНС", m_balanceRcbReport);
                balanceAttibute.getBalanceAttribute(1, "20202", false);

                b20202NatCurA = NVL(balanceAttibute.getInRestNatCurActive(), TValue()).scaled;
                b20202NatCurD = NVL(balanceAttibute.getDebetNatCur(), TValue()).scaled;
                b20202NatCurC = NVL(balanceAttibute.getCreditNatCur(), TValue()).scaled;

                balanceAttibute.getBalanceAttribute(1, "20206", false);

                b20206NatCurA = NVL(balanceAttibute.getInRestNatCurActive(), TValue()).scaled;
                b20206NatCurD = NVL(balanceAttibute.getDebetNatCur(), TValue()).scaled;
                b20206NatCurC = NVL(balanceAttibute.getCreditNatCur(), TValue()).scaled;

                balanceAttibute.getBalanceAttribute(1, "20207", false);

                b20207NatCurA = NVL(balanceAttibute.getInRestNatCurActive(), TValue()).scaled;
                b20207NatCurD = NVL(balanceAttibute.getDebetNatCur(), TValue()).scaled;
                b20207NatCurC = NVL(balanceAttibute.getCreditNatCur(), TValue()).scaled;

                m_node35.scaled = b20202NatCurA + b20206NatCurA + b20207NatCurA - b20202NatCurD - b20206NatCurD - b20207NatCurD + b20202NatCurC + b20206NatCurC + b20207NatCurC;

            end;

//            m_node35.exclude(); /*механизм не отрабатывал, переписано R-259872-2*/

/*GSP*/ var relation = getLinearRelation(RCB_RS_EQUAL);

            relation.lhs.plus(m_node35);
            relation.rhs.plus(m_node35.scaled);

            m_normalizer.addRelation(relation);

        end;

        private macro addBalanceIdentity()
            var relation = null;

            if (m_node0239.exact == m_node4077.exact)
                relation = getLinearRelation(RCB_RS_EQUAL);

                relation.lhs.plus(m_node0239);
                relation.rhs.plus(m_node4077);

                m_normalizer.addRelation(relation);
            end;
        end;

/*
* Если есть хотя бы одно неокругленное значение символа прихода или расхода не равное нулю, то
* должно быть хотя бы одно округленное значение символа прихода или расхода не равное нулю.
*/
        private macro addNotIsNull()
            var i = 0;
            var n = m_nodes.size();
            var relation = getLinearRelation(RCB_RS_GREATER_OR_EQUAL);
            var existNotZero = false;

            while (i < n)
                if (m_nodes[i].exact != 0)
                    if (m_nodes[i].exact > 0)
                        relation.lhs.plus(m_nodes[i]);
                    else
                        relation.lhs.minus(m_nodes[i]);
                    end;
                    existNotZero = true;
                end;
                i = i + 1;
            end;

            if (existNotZero == true)
                relation.rhs.plus(1.00);
                m_normalizer.addRelation(relation);
            end;
        end;

        private macro addNode(parent, symbol)
            var node = parent.addNode(toNodeCode(symbol));

            if (rcbApplication.currentReport.normalizationAlgorithm == RCB_NA_SM)
                node.exact = symbol.getValue().exact;
            elif(rcbApplication.currentReport.normalizationAlgorithm == RCB_NA_MMB)
                node.setExact(symbol.getValue().exact);
            end;
            node.recalculateScaled();
            return node;
        end;

        macro execute()
            m_node0239 = addNode(m_normalizer, m_okatoPart.getSymbol("02-39"));
            m_node0232 = addNode(m_node0239,   m_okatoPart.getSymbol("02-32"));
            m_node35   = addNode(m_node0239,   m_okatoPart.getSymbol("35"));
            m_node4077 = addNode(m_normalizer, m_okatoPart.getSymbol("40-77"));
            m_node4062 = addNode(m_node4077,   m_okatoPart.getSymbol("40-62"));
            m_node70   = addNode(m_node4077,   m_okatoPart.getSymbol("70"));

            m_nodes[0] = addNode(m_node0239, m_okatoPart.getSymbol("33"));
            m_nodes[1] = addNode(m_node0239, m_okatoPart.getSymbol("37"));
            m_nodes[2] = addNode(m_node0239, m_okatoPart.getSymbol("39"));

            m_nodes[3]  = addNode(m_node0232, m_okatoPart.getSymbol("02"));
            m_nodes[4]  = addNode(m_node0232, m_okatoPart.getSymbol("03"));
            m_nodes[5]  = addNode(m_node0232, m_okatoPart.getSymbol("11"));
            m_nodes[6]  = addNode(m_node0232, m_okatoPart.getSymbol("12"));
            m_nodes[7]  = addNode(m_node0232, m_okatoPart.getSymbol("13"));
            m_nodes[8]  = addNode(m_node0232, m_okatoPart.getSymbol("14"));
            m_nodes[9]  = addNode(m_node0232, m_okatoPart.getSymbol("15"));
            m_nodes[10] = addNode(m_node0232, m_okatoPart.getSymbol("16"));
            m_nodes[11] = addNode(m_node0232, m_okatoPart.getSymbol("17"));
            m_nodes[12] = addNode(m_node0232, m_okatoPart.getSymbol("19"));
            m_nodes[13] = addNode(m_node0232, m_okatoPart.getSymbol("20"));
            m_nodes[14] = addNode(m_node0232, m_okatoPart.getSymbol("21"));
            m_nodes[15] = addNode(m_node0232, m_okatoPart.getSymbol("22"));
            m_nodes[16] = addNode(m_node0232, m_okatoPart.getSymbol("23"));
            m_nodes[17] = addNode(m_node0232, m_okatoPart.getSymbol("30"));
            m_nodes[18] = addNode(m_node0232, m_okatoPart.getSymbol("31"));
            m_nodes[19] = addNode(m_node0232, m_okatoPart.getSymbol("32"));

            m_nodes[20] = addNode(m_node4077, m_okatoPart.getSymbol("72"));
            m_nodes[21] = addNode(m_node4077, m_okatoPart.getSymbol("75"));
            m_nodes[22] = addNode(m_node4077, m_okatoPart.getSymbol("77"));

            m_nodes[23] = addNode(m_node4062, m_okatoPart.getSymbol("40"));
            m_nodes[24] = addNode(m_node4062, m_okatoPart.getSymbol("41"));
            m_nodes[25] = addNode(m_node4062, m_okatoPart.getSymbol("42"));
            m_nodes[26] = addNode(m_node4062, m_okatoPart.getSymbol("46"));
            m_nodes[27] = addNode(m_node4062, m_okatoPart.getSymbol("47"));
            m_nodes[28] = addNode(m_node4062, m_okatoPart.getSymbol("50"));
            m_nodes[29] = addNode(m_node4062, m_okatoPart.getSymbol("51"));
            m_nodes[30] = addNode(m_node4062, m_okatoPart.getSymbol("53"));
            m_nodes[31] = addNode(m_node4062, m_okatoPart.getSymbol("54"));
            m_nodes[32] = addNode(m_node4062, m_okatoPart.getSymbol("55"));
            m_nodes[33] = addNode(m_node4062, m_okatoPart.getSymbol("56"));
            m_nodes[34] = addNode(m_node4062, m_okatoPart.getSymbol("57"));
            m_nodes[35] = addNode(m_node4062, m_okatoPart.getSymbol("58"));
            m_nodes[36] = addNode(m_node4062, m_okatoPart.getSymbol("59"));
            m_nodes[37] = addNode(m_node4062, m_okatoPart.getSymbol("60"));
            m_nodes[38] = addNode(m_node4062, m_okatoPart.getSymbol("61"));
            m_nodes[39] = addNode(m_node4062, m_okatoPart.getSymbol("62"));

            addNotIsNull();
            replaceValue35();
            addBalanceIdentity();
        end;

        /*для TAddTotalOkatoPart*/
        private macro replaceValue70()
            var balanceAttibute;
            var b20202NatCurA, b20206NatCurA, b20207NatCurA;

            if (m_balanceRcbReport.isCalculated() and (m_okatoPart.getOkatoCode() == m_okatoPart.getReport().getTotalPart().getOkatoCode()))
                balanceAttibute = TBalanceAttribute("БАЛАНС", m_balanceRcbReport);

                balanceAttibute.getBalanceAttribute(1, "20202", false);

                b20202NatCurA = NVL(balanceAttibute.getInRestNatCurActive(), TValue()).scaled;

                balanceAttibute.getBalanceAttribute(1, "20206", false);

                b20206NatCurA = NVL(balanceAttibute.getInRestNatCurActive(), TValue()).scaled;

                balanceAttibute.getBalanceAttribute(1, "20207", false);

                b20207NatCurA = NVL(balanceAttibute.getInRestNatCurActive(), TValue()).scaled;


                m_node70.scaled = b20202NatCurA + b20206NatCurA + b20207NatCurA;

            end;

            m_node70.exclude();
        end;

        /*для TAddTotalOkatoPart*/
        private macro replaceCashBalanceValue()
            var report = m_okatoPart.getReport();

            var balanceAttibute;
            var b20202NatCurD, b20206NatCurD, b20207NatCurD, b20202NatCurC, b20206NatCurC, b20207NatCurC;

            if (     (report.getServicePart().getSymbol("БсПр").getValue().exact == $0)
                and (report.getServicePart().getSymbol("БсРс").getValue().exact == $0))

                if (m_balanceRcbReport.isCalculated() and (m_okatoPart.getOkatoCode() == report.getTotalPart().getOkatoCode()))
                    balanceAttibute = TBalanceAttribute("БАЛАНС", m_balanceRcbReport);

                    balanceAttibute.getBalanceAttribute(1, "20202", false);

                    b20202NatCurD = NVL(balanceAttibute.getDebetNatCur(), TValue()).scaled;
                    b20202NatCurC = NVL(balanceAttibute.getCreditNatCur(), TValue()).scaled;

                    balanceAttibute.getBalanceAttribute(1, "20206", false);

                    b20206NatCurD = NVL(balanceAttibute.getDebetNatCur(), TValue()).scaled;
                    b20206NatCurC = NVL(balanceAttibute.getCreditNatCur(), TValue()).scaled;

                    balanceAttibute.getBalanceAttribute(1, "20207", false);

                    b20207NatCurD = NVL(balanceAttibute.getDebetNatCur(), TValue()).scaled;
                    b20207NatCurC = NVL(balanceAttibute.getCreditNatCur(), TValue()).scaled;

                    m_node0239.scaled = b20202NatCurD + b20206NatCurD + b20207NatCurD + NVL(m_node35, TValue()).scaled;

                    m_node4077.scaled = b20202NatCurC + b20206NatCurC + b20207NatCurC + NVL(m_node70, TValue()).scaled;

                end;

                m_node0239.exclude();
                m_node4077.exclude();
            end;
        end;

        /*для TAddTotalOkatoPart*/
        private macro addTotalRelation(symbolCode)
            var relation = null;

            var outsideDomainOkatoParts = m_okatoPart.getReport().getOutsideDomainOkatoParts();

            var i = 0;
            var n = outsideDomainOkatoParts.size();

            if (n > 0)
                relation = getLinearRelation(RCB_RS_LESS_OR_EQUAL);

                relation.rhs.plus(m_normalizer.node(toNodeCode(m_okatoPart.getSymbol(symbolCode))));

                while (i < n)
                    relation.lhs.plus(m_normalizer.node(toNodeCode(outsideDomainOkatoParts[i].getSymbol(symbolCode))));
                    i = i + 1;
                end;

                m_normalizer.addRelation(relation);
            end;
        end;
    end;

    private class (TAddOkatoPart) TAddTotalOkatoPart(normalizer, okatoPart : TOkatoPart)
        initTAddOkatoPart(normalizer, okatoPart);

        private macro addTotalRelations()
            addTotalRelation("02");
            addTotalRelation("03");
            addTotalRelation("11");
            addTotalRelation("12");
            addTotalRelation("13");
            addTotalRelation("14");
            addTotalRelation("15");
            addTotalRelation("16");
            addTotalRelation("17");
            addTotalRelation("19");
            addTotalRelation("20");
            addTotalRelation("21");
            addTotalRelation("22");
            addTotalRelation("23");
            addTotalRelation("30");
            addTotalRelation("31");
            addTotalRelation("32");

            addTotalRelation("02-32");

            addTotalRelation("33");
            addTotalRelation("35");
            addTotalRelation("37");
            addTotalRelation("39");

            addTotalRelation("02-39");

            addTotalRelation("40");
            addTotalRelation("41");
            addTotalRelation("42");
            addTotalRelation("46");
            addTotalRelation("47");
            addTotalRelation("50");
            addTotalRelation("51");
            addTotalRelation("53");
            addTotalRelation("54");
            addTotalRelation("55");
            addTotalRelation("56");
            addTotalRelation("57");
            addTotalRelation("58");
            addTotalRelation("59");
            addTotalRelation("60");
            addTotalRelation("61");
            addTotalRelation("62");

            addTotalRelation("40-62");

            addTotalRelation("70");
            addTotalRelation("72");
            addTotalRelation("75");
            addTotalRelation("77");

            addTotalRelation("40-77");
        end;

        macro execute()
            execute();

            replaceValue70();
            replaceCashBalanceValue();

            addTotalRelations();
        end;
    end;

    private var m_protocolView = null;

    private macro setScaledSymbolValue(normalizer, symbol)
        var symbolValue = symbol.getValue();

        symbolValue.scaled = double(normalizer.node(toNodeCode(symbol)).scaled);

        if (symbolValue.scaled != floor(double(symbolValue.exact) / symbol.getOkatoPart().getReport().getRcbReport().multiplier + 0.5))
            m_protocolView.printSymbol(symbol.getCode(), symbolValue.exact, symbolValue.scaled);
        end;
    end;

    private macro setScaledSymbolsValues(normalizer, okatoPart : TOkatoPart)
        m_protocolView.beginOkatoPart(okatoPart.getOkatoCode());

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("02"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("03"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("11"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("12"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("13"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("14"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("15"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("16"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("17"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("19"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("20"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("21"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("22"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("23"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("30"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("31"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("32"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("02-32"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("33"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("35"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("37"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("39"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("02-39"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("40"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("41"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("42"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("46"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("47"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("50"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("51"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("53"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("54"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("55"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("56"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("57"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("58"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("59"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("60"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("61"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("62"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("40-62"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("70"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("72"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("75"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("77"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("40-77"));

        m_protocolView.endOkatoPart();
    end;

    macro addOkatoPart(normalizer, okatoPart : TOkatoPart)
        return TAddOkatoPart(normalizer, okatoPart);
    end;

    macro addTotalOkatoPart(normalizer, okatoPart : TOkatoPart)
        return TAddTotalOkatoPart(normalizer, okatoPart);
    end;

    /**
    * Нормализовать отчет.
    */
    private macro normalize(report : TReport)
        var normalizer = getNormalizer(report.getRcbReport().multiplier);

        var i = 0;
        var n = report.getOutsideDomainOkatoParts().size();


        initProgress(-1, "Загрузка значений по ОКАТО", "Загрузка значений по ОКАТО");

        i = 0;
        while (i < n)
            addOkatoPart(normalizer, report.getOutsideDomainOkatoParts()[i]).execute();
            useprogress(i = i + 1);
        end;

        addTotalOkatoPart(normalizer, report.getTotalPart()).execute();
        remprogress();

        initProgress(-1, "Нормализация", "Нормализация");
        normalizer.normalize();
        remprogress();

        m_protocolView = TNormalizationProtocolView1881();

        m_protocolView.setProtocolOutput();

        m_protocolView.beginProtocol();

        if (normalizer.isNormalized())

            m_protocolView.printLine("Нормализация выполнена.");
            if(rcbApplication.currentReport.normalizationAlgorithm == RCB_NA_MMB)
                m_protocolView.printLine("лог-файл:" + normalizer.getLogFilePath());
            end;
            m_protocolView.printLine("");


            initProgress(-1, "Сохранение значений", "Сохранение значений");

            setScaledSymbolsValues(normalizer, report.getTotalPart());

            i = 0;
            while (i < n)
                setScaledSymbolsValues(normalizer, report.getOutsideDomainOkatoParts()[i]);
                useprogress(i = i + 1);
            end;

            remprogress();
            RcbApplication.TransactionManager.commit();
        else
            if(rcbApplication.currentReport.normalizationAlgorithm == RCB_NA_MMB)
                m_protocolView.printLine("Не удалось выполнить нормализацию (смотри лог-файл:" + normalizer.getLogFilePath() + ").");
            else
                m_protocolView.printLine("Не удалось провести нормализацию.");
            end;
        end;

        m_protocolView.endProtocol();

        m_protocolView.resetProtocolOutput();
    end;
end;


/**
* Операция нормализации по 2332-У.
*
* отличия от 1881У:
*                  удален   символ  03
*/
class (TNormalizationOperation1881) TNormalizationOperation2332()

    initTNormalizationOperation1881();

    private class (TAddOkatoPart) TAddOkatoPart2332(normalizer, okatoPart : TOkatoPart)
        initTAddOkatoPart(normalizer, okatoPart);

        macro execute()
            m_node0239 = addNode(m_normalizer, m_okatoPart.getSymbol("02-39"));
            m_node0232 = addNode(m_node0239,   m_okatoPart.getSymbol("02-32"));
            m_node35   = addNode(m_node0239,   m_okatoPart.getSymbol("35"));
            m_node4077 = addNode(m_normalizer, m_okatoPart.getSymbol("40-77"));
            m_node4062 = addNode(m_node4077,   m_okatoPart.getSymbol("40-62"));
            m_node70   = addNode(m_node4077,   m_okatoPart.getSymbol("70"));

            m_nodes[0]  = addNode(m_node0239, m_okatoPart.getSymbol("33"));
            m_nodes[1]  = addNode(m_node0239, m_okatoPart.getSymbol("37"));
            m_nodes[2]  = addNode(m_node0239, m_okatoPart.getSymbol("39"));

            m_nodes[3]  = addNode(m_node0232, m_okatoPart.getSymbol("02"));
            m_nodes[4]  = addNode(m_node0232, m_okatoPart.getSymbol("11"));
            m_nodes[5]  = addNode(m_node0232, m_okatoPart.getSymbol("12"));
            m_nodes[6]  = addNode(m_node0232, m_okatoPart.getSymbol("13"));
            m_nodes[7]  = addNode(m_node0232, m_okatoPart.getSymbol("14"));
            m_nodes[8]  = addNode(m_node0232, m_okatoPart.getSymbol("15"));
            m_nodes[9]  = addNode(m_node0232, m_okatoPart.getSymbol("16"));
            m_nodes[10] = addNode(m_node0232, m_okatoPart.getSymbol("17"));
            m_nodes[11] = addNode(m_node0232, m_okatoPart.getSymbol("19"));
            m_nodes[12] = addNode(m_node0232, m_okatoPart.getSymbol("20"));
            m_nodes[13] = addNode(m_node0232, m_okatoPart.getSymbol("21"));
            m_nodes[14] = addNode(m_node0232, m_okatoPart.getSymbol("22"));
            m_nodes[15] = addNode(m_node0232, m_okatoPart.getSymbol("23"));
            m_nodes[16] = addNode(m_node0232, m_okatoPart.getSymbol("30"));
            m_nodes[17] = addNode(m_node0232, m_okatoPart.getSymbol("31"));
            m_nodes[18] = addNode(m_node0232, m_okatoPart.getSymbol("32"));

            m_nodes[19] = addNode(m_node4077, m_okatoPart.getSymbol("72"));
            m_nodes[20] = addNode(m_node4077, m_okatoPart.getSymbol("75"));
            m_nodes[21] = addNode(m_node4077, m_okatoPart.getSymbol("77"));

            m_nodes[22] = addNode(m_node4062, m_okatoPart.getSymbol("40"));
            m_nodes[23] = addNode(m_node4062, m_okatoPart.getSymbol("41"));
            m_nodes[24] = addNode(m_node4062, m_okatoPart.getSymbol("42"));
            m_nodes[25] = addNode(m_node4062, m_okatoPart.getSymbol("46"));
            m_nodes[26] = addNode(m_node4062, m_okatoPart.getSymbol("47"));
            m_nodes[27] = addNode(m_node4062, m_okatoPart.getSymbol("50"));
            m_nodes[28] = addNode(m_node4062, m_okatoPart.getSymbol("51"));
            m_nodes[29] = addNode(m_node4062, m_okatoPart.getSymbol("53"));
            m_nodes[30] = addNode(m_node4062, m_okatoPart.getSymbol("54"));
            m_nodes[31] = addNode(m_node4062, m_okatoPart.getSymbol("55"));
            m_nodes[32] = addNode(m_node4062, m_okatoPart.getSymbol("56"));
            m_nodes[33] = addNode(m_node4062, m_okatoPart.getSymbol("57"));
            m_nodes[34] = addNode(m_node4062, m_okatoPart.getSymbol("58"));
            m_nodes[35] = addNode(m_node4062, m_okatoPart.getSymbol("59"));
            m_nodes[36] = addNode(m_node4062, m_okatoPart.getSymbol("60"));
            m_nodes[37] = addNode(m_node4062, m_okatoPart.getSymbol("61"));
            m_nodes[38] = addNode(m_node4062, m_okatoPart.getSymbol("62"));

            addNotIsNull();
            replaceValue35();
            addBalanceIdentity();
        end;
    end;

    private class (TAddOkatoPart2332) TAddTotalOkatoPart2332(normalizer, okatoPart : TOkatoPart)
        initTAddOkatoPart2332(normalizer, okatoPart);

        private macro addTotalRelations()
            addTotalRelation("02");
            addTotalRelation("11");
            addTotalRelation("12");
            addTotalRelation("13");
            addTotalRelation("14");
            addTotalRelation("15");
            addTotalRelation("16");
            addTotalRelation("17");
            addTotalRelation("19");
            addTotalRelation("20");
            addTotalRelation("21");
            addTotalRelation("22");
            addTotalRelation("23");
            addTotalRelation("30");
            addTotalRelation("31");
            addTotalRelation("32");

            addTotalRelation("02-32");

            addTotalRelation("33");
            addTotalRelation("35");
            addTotalRelation("37");
            addTotalRelation("39");

            addTotalRelation("02-39");

            addTotalRelation("40");
            addTotalRelation("41");
            addTotalRelation("42");
            addTotalRelation("46");
            addTotalRelation("47");
            addTotalRelation("50");
            addTotalRelation("51");
            addTotalRelation("53");
            addTotalRelation("54");
            addTotalRelation("55");
            addTotalRelation("56");
            addTotalRelation("57");
            addTotalRelation("58");
            addTotalRelation("59");
            addTotalRelation("60");
            addTotalRelation("61");
            addTotalRelation("62");

            addTotalRelation("40-62");

            addTotalRelation("70");
            addTotalRelation("72");
            addTotalRelation("75");
            addTotalRelation("77");

            addTotalRelation("40-77");
        end;

        macro execute()
            execute();

            replaceValue70();
            replaceCashBalanceValue();

            addTotalRelations();
        end;
    end;

    private macro setScaledSymbolsValues(normalizer, okatoPart : TOkatoPart)
        m_protocolView.beginOkatoPart(okatoPart.getOkatoCode());

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("02"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("11"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("12"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("13"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("14"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("15"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("16"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("17"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("19"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("20"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("21"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("22"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("23"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("30"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("31"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("32"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("02-32"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("33"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("35"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("37"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("39"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("02-39"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("40"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("41"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("42"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("46"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("47"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("50"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("51"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("53"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("54"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("55"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("56"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("57"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("58"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("59"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("60"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("61"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("62"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("40-62"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("70"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("72"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("75"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("77"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("40-77"));
        m_protocolView.endOkatoPart();
    end;

    macro addOkatoPart(normalizer, okatoPart : TOkatoPart)
        return TAddOkatoPart2332(normalizer, okatoPart);
    end;

    macro addTotalOkatoPart(normalizer, okatoPart : TOkatoPart)
        return TAddTotalOkatoPart2332(normalizer, okatoPart);
    end;


    private macro normalize(report : TReport)
        var normalizer = getNormalizer(report.getRcbReport().multiplier);

        var i = 0;
        var n = report.getOutsideDomainOkatoParts().size();


        initProgress(-1, "Загрузка значений по ОКАТО", "Загрузка значений по ОКАТО");

        i = 0;
        while (i < n)
            addOkatoPart(normalizer, report.getOutsideDomainOkatoParts()[i]).execute();
            useprogress(i = i + 1);
        end;

        addTotalOkatoPart(normalizer, report.getTotalPart()).execute();
        remprogress();

        initProgress(-1, "Нормализация", "Нормализация");
        normalizer.normalize();
        remprogress();

        m_protocolView = TNormalizationProtocolView2332();

        m_protocolView.setProtocolOutput();

        m_protocolView.beginProtocol();

        if (normalizer.isNormalized())

            m_protocolView.printLine("Нормализация выполнена.");
            if(rcbApplication.currentReport.normalizationAlgorithm == RCB_NA_MMB)
                m_protocolView.printLine("лог-файл:" + normalizer.getLogFilePath());
            end;
            m_protocolView.printLine("");


            initProgress(-1, "Сохранение значений", "Сохранение значений");

            setScaledSymbolsValues(normalizer, report.getTotalPart());

            i = 0;
            while (i < n)
                setScaledSymbolsValues(normalizer, report.getOutsideDomainOkatoParts()[i]);
                useprogress(i = i + 1);
            end;

            remprogress();
            RcbApplication.TransactionManager.commit();
        else
            if(rcbApplication.currentReport.normalizationAlgorithm == RCB_NA_MMB)
                m_protocolView.printLine("Не удалось выполнить нормализацию (смотри лог-файл:" + normalizer.getLogFilePath() + ").");
            else
                m_protocolView.printLine("Не удалось провести нормализацию.");
            end;
        end;

        m_protocolView.endProtocol();

        m_protocolView.resetProtocolOutput();
    end;
end;


/**
* Операция нормализации по 2539-У.
*
* отличия от 1881У:
*                  удален счет 20206
*/
class (TNormalizationOperation2332) TNormalizationOperation2539()

    initTNormalizationOperation2332();

    private class (TAddOkatoPart2332) TAddOkatoPart2539(normalizer, okatoPart : TOkatoPart)
        initTAddOkatoPart2332(normalizer, okatoPart);

        macro replaceValue35()
            var previousSymbol70 = null;
            var balanceAttibute;
            var b20202NatCurA, b20207NatCurA, b20202NatCurD, b20207NatCurD, b20202NatCurC, b20207NatCurC;
     debugbreak;
            if (m_previousRcbReport.isCalculated())

                previousSymbol70 = getSymbolCompositeValue(m_previousRcbReport, "70", m_okatoPart.getOkatoCode());

                if ((previousSymbol70 != null) and (previousSymbol70.fieldValue("Значение").isDefined()))
                    m_node35.scaled = previousSymbol70.fieldValue("Значение").scaled;
                else
                    m_node35.scaled = 0;
                end;

            elif (m_balanceRcbReport.isCalculated() and (m_okatoPart.getOkatoCode() == m_okatoPart.getReport().getTotalPart().getOkatoCode()))

                balanceAttibute = TBalanceAttribute("БАЛАНС", m_balanceRcbReport);
                balanceAttibute.getBalanceAttribute(1, "20202", false);

                b20202NatCurA = NVL(balanceAttibute.getInRestNatCurActive(), TValue()).scaled;
                b20202NatCurD = NVL(balanceAttibute.getDebetNatCur(), TValue()).scaled;
                b20202NatCurC = NVL(balanceAttibute.getCreditNatCur(), TValue()).scaled;

                balanceAttibute.getBalanceAttribute(1, "20207", false);

                b20207NatCurA = NVL(balanceAttibute.getInRestNatCurActive(), TValue()).scaled;
                b20207NatCurD = NVL(balanceAttibute.getDebetNatCur(), TValue()).scaled;
                b20207NatCurC = NVL(balanceAttibute.getCreditNatCur(), TValue()).scaled;

                m_node35.scaled = b20202NatCurA + b20207NatCurA - b20202NatCurD - b20207NatCurD + b20202NatCurC + b20207NatCurC;
            end;

           m_node35.exclude();
        end;
    end;


    private class (TAddOkatoPart2539) TAddTotalOkatoPart2539(normalizer, okatoPart : TOkatoPart)
        initTAddOkatoPart2539(normalizer, okatoPart);

        macro replaceValue70()
            var balanceAttibute;
            var b20202NatCurA, b20207NatCurA;

            if (m_balanceRcbReport.isCalculated() and (m_okatoPart.getOkatoCode() == m_okatoPart.getReport().getTotalPart().getOkatoCode()))
                balanceAttibute = TBalanceAttribute("БАЛАНС", m_balanceRcbReport);
                balanceAttibute.getBalanceAttribute(1, "20202", false);

                b20202NatCurA = NVL(balanceAttibute.getInRestNatCurActive(), TValue()).scaled;

                balanceAttibute.getBalanceAttribute(1, "20207", false);

                b20207NatCurA = NVL(balanceAttibute.getInRestNatCurActive(), TValue()).scaled;

                m_node70.scaled = b20202NatCurA + b20207NatCurA;

            end;

            m_node70.exclude();
        end;

        /*для TAddTotalOkatoPart*/
        private macro replaceCashBalanceValue()
            var report = m_okatoPart.getReport();
            var balanceAttibute;
            var b20202NatCurD, b20207NatCurD, b20202NatCurC, b20207NatCurC;

            if (     (report.getServicePart().getSymbol("БсПр").getValue().exact == $0)
                and (report.getServicePart().getSymbol("БсРс").getValue().exact == $0))

                if (m_balanceRcbReport.isCalculated() and (m_okatoPart.getOkatoCode() == report.getTotalPart().getOkatoCode()))

                    balanceAttibute = TBalanceAttribute("БАЛАНС", m_balanceRcbReport);
                    balanceAttibute.getBalanceAttribute(1, "20202", false);

                    b20202NatCurD = NVL(balanceAttibute.getDebetNatCur(), TValue()).scaled;
                    b20202NatCurC = NVL(balanceAttibute.getCreditNatCur(), TValue()).scaled;

                    balanceAttibute.getBalanceAttribute(1, "20207", false);

                    b20207NatCurD = NVL(balanceAttibute.getDebetNatCur(), TValue()).scaled;
                    b20207NatCurC = NVL(balanceAttibute.getCreditNatCur(), TValue()).scaled;

                    m_node0239.scaled = b20202NatCurD + b20207NatCurD + NVL(m_node35, TValue()).scaled;

                    m_node4077.scaled = b20202NatCurC + b20207NatCurC + NVL(m_node70, TValue()).scaled;

                end;

                m_node0239.exclude();
                m_node4077.exclude();
            end;
        end;

        private macro addTotalRelations()
             addTotalRelation("02");
             addTotalRelation("11");
             addTotalRelation("12");
             addTotalRelation("13");
             addTotalRelation("14");
             addTotalRelation("15");
             addTotalRelation("16");
             addTotalRelation("17");
             addTotalRelation("19");
             addTotalRelation("20");
             addTotalRelation("21");
             addTotalRelation("22");
             addTotalRelation("23");
             addTotalRelation("30");
             addTotalRelation("31");
             addTotalRelation("32");

             addTotalRelation("02-32");

             addTotalRelation("33");
             addTotalRelation("35");
             addTotalRelation("37");
             addTotalRelation("39");

             addTotalRelation("02-39");

             addTotalRelation("40");
             addTotalRelation("41");
             addTotalRelation("42");
             addTotalRelation("46");
             addTotalRelation("47");
             addTotalRelation("50");
             addTotalRelation("51");
             addTotalRelation("53");
             addTotalRelation("54");
             addTotalRelation("55");
             addTotalRelation("56");
             addTotalRelation("57");
             addTotalRelation("58");
             addTotalRelation("59");
             addTotalRelation("60");
             addTotalRelation("61");
             addTotalRelation("62");

             addTotalRelation("40-62");

             addTotalRelation("70");
             addTotalRelation("72");
             addTotalRelation("75");
             addTotalRelation("77");

             addTotalRelation("40-77");

         end;

         macro execute()
             execute();

             replaceValue70();
             replaceCashBalanceValue();

             addTotalRelations();
         end;
    end;

    macro addOkatoPart(normalizer, okatoPart : TOkatoPart)
        return TAddOkatoPart2539(normalizer, okatoPart);
    end;

    macro addTotalOkatoPart(normalizer, okatoPart : TOkatoPart)
        return TAddTotalOkatoPart2539(normalizer, okatoPart);
    end;

end;


/**
* Операция нормализации по 2627-У.
*
*/
class (TNormalizationOperation2539) TNormalizationOperation2627()

    initTNormalizationOperation2539();

    private class (TAddOkatoPart) TAddOkatoPart2627(normalizer, okatoPart : TOkatoPart)
        initTAddOkatoPart(normalizer, okatoPart);

        macro execute()
            m_node0239 = addNode(m_normalizer, m_okatoPart.getSymbol("02-39"));
            m_node0232 = addNode(m_node0239,   m_okatoPart.getSymbol("02-32"));
            m_node35   = addNode(m_node0239,   m_okatoPart.getSymbol("35"));
            m_node4077 = addNode(m_normalizer, m_okatoPart.getSymbol("40-77"));
            m_node4062 = addNode(m_node4077,   m_okatoPart.getSymbol("40-61"));
            m_node70   = addNode(m_node4077,   m_okatoPart.getSymbol("70"));

            m_nodes[0]  = addNode(m_node0239, m_okatoPart.getSymbol("33"));
            m_nodes[1]  = addNode(m_node0239, m_okatoPart.getSymbol("37"));
            m_nodes[2]  = addNode(m_node0239, m_okatoPart.getSymbol("39"));

            m_nodes[3]  = addNode(m_node0232, m_okatoPart.getSymbol("02"));
            m_nodes[4]  = addNode(m_node0232, m_okatoPart.getSymbol("11"));
            m_nodes[5]  = addNode(m_node0232, m_okatoPart.getSymbol("12"));
            m_nodes[6]  = addNode(m_node0232, m_okatoPart.getSymbol("13"));
            m_nodes[7]  = addNode(m_node0232, m_okatoPart.getSymbol("14"));
            m_nodes[8]  = addNode(m_node0232, m_okatoPart.getSymbol("15"));
            m_nodes[9]  = addNode(m_node0232, m_okatoPart.getSymbol("16"));
            m_nodes[10] = addNode(m_node0232, m_okatoPart.getSymbol("17"));
            m_nodes[11] = addNode(m_node0232, m_okatoPart.getSymbol("19"));
            m_nodes[12] = addNode(m_node0232, m_okatoPart.getSymbol("20"));
            m_nodes[13] = addNode(m_node0232, m_okatoPart.getSymbol("21"));
            m_nodes[14] = addNode(m_node0232, m_okatoPart.getSymbol("22"));
            m_nodes[15] = addNode(m_node0232, m_okatoPart.getSymbol("30"));
            m_nodes[16] = addNode(m_node0232, m_okatoPart.getSymbol("31"));
            m_nodes[17] = addNode(m_node0232, m_okatoPart.getSymbol("32"));

            m_nodes[18] = addNode(m_node4077, m_okatoPart.getSymbol("72"));
            m_nodes[19] = addNode(m_node4077, m_okatoPart.getSymbol("75"));
            m_nodes[20] = addNode(m_node4077, m_okatoPart.getSymbol("77"));

            m_nodes[21] = addNode(m_node4062, m_okatoPart.getSymbol("40"));
            m_nodes[22] = addNode(m_node4062, m_okatoPart.getSymbol("41"));
            m_nodes[23] = addNode(m_node4062, m_okatoPart.getSymbol("42"));
            m_nodes[24] = addNode(m_node4062, m_okatoPart.getSymbol("46"));
            m_nodes[25] = addNode(m_node4062, m_okatoPart.getSymbol("47"));
            m_nodes[26] = addNode(m_node4062, m_okatoPart.getSymbol("50"));
            m_nodes[27] = addNode(m_node4062, m_okatoPart.getSymbol("51"));
            m_nodes[28] = addNode(m_node4062, m_okatoPart.getSymbol("53"));
            m_nodes[29] = addNode(m_node4062, m_okatoPart.getSymbol("54"));
            m_nodes[30] = addNode(m_node4062, m_okatoPart.getSymbol("55"));
            m_nodes[31] = addNode(m_node4062, m_okatoPart.getSymbol("56"));
            m_nodes[32] = addNode(m_node4062, m_okatoPart.getSymbol("57"));
            m_nodes[33] = addNode(m_node4062, m_okatoPart.getSymbol("58"));
            m_nodes[34] = addNode(m_node4062, m_okatoPart.getSymbol("59"));
            m_nodes[35] = addNode(m_node4062, m_okatoPart.getSymbol("60"));
            m_nodes[36] = addNode(m_node4062, m_okatoPart.getSymbol("61"));

            addNotIsNull();
            replaceValue35();
            addBalanceIdentity();
        end;
    end;

    private class (TAddOkatoPart2627) TAddTotalOkatoPart2627(normalizer, okatoPart : TOkatoPart)
        initTAddOkatoPart2627(normalizer, okatoPart);

        private macro addTotalRelations()
            addTotalRelation("02");
            addTotalRelation("11");
            addTotalRelation("12");
            addTotalRelation("13");
            addTotalRelation("14");
            addTotalRelation("15");
            addTotalRelation("16");
            addTotalRelation("17");
            addTotalRelation("19");
            addTotalRelation("20");
            addTotalRelation("21");
            addTotalRelation("22");
            addTotalRelation("30");
            addTotalRelation("31");
            addTotalRelation("32");

            addTotalRelation("02-32");

            addTotalRelation("33");
            addTotalRelation("35");
            addTotalRelation("37");
            addTotalRelation("39");

            addTotalRelation("02-39");

            addTotalRelation("40");
            addTotalRelation("41");
            addTotalRelation("42");
            addTotalRelation("46");
            addTotalRelation("47");
            addTotalRelation("50");
            addTotalRelation("51");
            addTotalRelation("53");
            addTotalRelation("54");
            addTotalRelation("55");
            addTotalRelation("56");
            addTotalRelation("57");
            addTotalRelation("58");
            addTotalRelation("59");
            addTotalRelation("60");
            addTotalRelation("61");

            addTotalRelation("40-61");

            addTotalRelation("70");
            addTotalRelation("72");
            addTotalRelation("75");
            addTotalRelation("77");

            addTotalRelation("40-77");
        end;

        macro execute()
            execute();

            replaceValue70();
            replaceCashBalanceValue();

            addTotalRelations();
        end;
    end;

    private macro setScaledSymbolsValues(normalizer, okatoPart : TOkatoPart)
        m_protocolView.beginOkatoPart(okatoPart.getOkatoCode());

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("02"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("11"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("12"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("13"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("14"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("15"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("16"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("17"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("19"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("20"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("21"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("22"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("30"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("31"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("32"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("02-32"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("33"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("35"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("37"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("39"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("02-39"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("40"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("41"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("42"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("46"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("47"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("50"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("51"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("53"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("54"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("55"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("56"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("57"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("58"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("59"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("60"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("61"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("40-61"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("70"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("72"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("75"));
        setScaledSymbolValue(normalizer, okatoPart.getSymbol("77"));

        setScaledSymbolValue(normalizer, okatoPart.getSymbol("40-77"));
        m_protocolView.endOkatoPart();
    end;

    macro addOkatoPart(normalizer, okatoPart : TOkatoPart)
        return TAddOkatoPart2627(normalizer, okatoPart);
    end;

    macro addTotalOkatoPart(normalizer, okatoPart : TOkatoPart)
        return TAddTotalOkatoPart2627(normalizer, okatoPart);
    end;
end;