/*GSP 18.03.2014 Ю╔═╚╗╖═Ф╗О ╞╔Г═Б╗ ╒ ╙╝╞╔╘╙═Е */

import rcbimport;
import balanceAttribute;

import f101ExcelSignatureZone;

import rsexts;

/**
 * ┼╚═АА ╞Ю╔╓АБ═╒╚╔╜╗О ╝БГ╔Б╜╝╘ Д╝Ю╛К.
 */
class (RcbReportView)TF101ReportView(formName, formOkudCode, formPeriodicity, periodFormat)
    const ReportWidth = 174;
    private var m_isPrintZeroChapter5 : Bool;
    private var m_chapter : Integer;

    /**
     * ▓╝Г╜╝АБЛ ╓╚О ё╚═╒К └. 
     */
    private var m_precisionChapter5   : Integer;

    /**
     * █═АБЮ╝╘╙═ ╒╗╓═ ╞╔Г═Б╗. (0 - ╒А╔, 1 - ╞╝ ░▐▒, 2 - ╜╔╜Ц╚╔╒К╔) 
     */
    private const PRINT_REGPATH = "REPTREG/REP_GROUPS/BALANCE_ACCOUNTS/▐┘≈─▓° ■▌░▄⌡ 101";

    /**
     * ┌А╔ АГ╔Б═.
     */
    private const PRINT_KIND_ALL  = 0;

    /**
     * ▐╝ ░▐▒.
     */
    private const PRINT_KIND_BWP  = 1;

    /**
     * █╔╜Ц╚╔╒К╔.
     */
    private const PRINT_KIND_NOZ  = 2;

    /**
     * ┌╗╓ ╞╔Г═Б╗ АГ╔Б╝╒. (0 - ╒А╔, 1 - ╞╝ ░▐▒, 2 - ╜╔╜Ц╚╔╒К╔) 
     */
    private var   m_isPrintKind = PRINT_KIND_ALL;

    /**
     * ▐╝╚ЦГ╗БЛ ╒╗╓ ╞╔Г═Б╗ ╝БГ╔Б═.
     * @return ┤╜═Г╔╜╗╔ ╜═АБЮ╝╘╙╗. (0 - ╒А╔, 1 - ╞╝ ░▐▒, 2 - ╜╔╜Ц╚╔╒К╔)
     */
    private macro getPrintKind()
        var val_type = V_UNDEF,
            err_code = 0,
            val      = PRINT_KIND_ALL;
      
        val_type = GetRegistryValue( PRINT_REGPATH, V_INTEGER, val, err_code );
      
        if ( (err_code != 0) or (val_type != V_INTEGER) )
            MsgBox( "▌Х╗║╙═ ГБ╔╜╗О ╜═АБЮ╝╘╙╗|", PRINT_REGPATH );
            Exit(1);
        else
            if ( (val < PRINT_KIND_ALL) or (val > PRINT_KIND_NOZ) )
                MsgBox( "█╔╙╝ЮЮ╔╙Б╜╝╔ ╖╜═Г╔╜╗╔ ╜═АБЮ╝╘╙╗|", PRINT_REGPATH, "|║Ц╓ЦБ ╜═╞╔Г═Б═╜К ╒А╔ АГ╔Б═");
                val = PRINT_KIND_ALL;
            end;
        end;
    
        return val;
    end;

    private macro TReportViewConstructor(formName, formOkudCode, formPeriodicity, periodFormat)
        initRcbReportView(NVL(formName,        "▌│▌░▌▓█─÷ ┌┘└▌▄▌▒▓° ▐▌ ▒≈┘▓─▄ │⌠∙┐─▀▓┘░▒┼▌┐▌ ⌠≈┘▓─ ┼░┘└┬▓█▌┴ ▌░┐─█┬┤─√┬┬"),
                          NVL(formOkudCode,    "0409101"),
                          NVL(formPeriodicity, arrCreate(RCB_PK_HALFYEAR, RCB_PK_QUARTER, RCB_PK_MONTH, RCB_PK_DAY)),
                          NVL(periodFormat,    DATE_IN_PERIOD_FORMAT));

        setReportWidth(ReportWidth);
        m_isPrintZeroChapter5 = balanceParameters().getIsPrintZeroInChapter5();
        m_precisionChapter5   = balanceParameters().getPrecisionChapter5();
        m_isPrintKind  = getPrintKind();
    end;

    macro printTableHeader()
/*        [дддддбдддддддддддддддддддддддддддддддддддддддддрдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддрддддддддддддддддддддддддддддддддддддддддд©];
        [     Ё                                         ╨                              ▌║╝Ю╝БК ╖═ ╝БГ╔Б╜К╘ ╞╔Ю╗╝╓                           ╨                                         Ё];
        [█╝╛╔ЮЁ            ┌Е╝╓ОИ╗╔ ╝АБ═Б╙╗             гдддддддддддддддддддддддддддддддддддддддддбддддддддддддддддддддддддддддддддддддддддд╤            ┬АЕ╝╓ОИ╗╔ ╝АБ═Б╙╗            Ё];
        [АГ╔Б═Ё                                         ╨               ╞╝ ╓╔║╔БЦ                 Ё               ╞╝ ╙Ю╔╓╗БЦ                ╨                                         Ё];
        [╒Б╝- цдддддддддддддбдддддддддддддбдддддддддддддвдддддддддддддбдддддддддддддбдддддддддддддедддддддддддддбдддддддддддддбдддддддддддддвдддддддддддддбдддддддддддддбддддддддддддд╢];
        [Ю╝ё╝ Ё     ЮЦ║.    Ё   ╗╜.╒═╚.,  Ё    ╗Б╝ё╝    ╨     ЮЦ║.    Ё   ╗╜.╒═╚.,  Ё    ╗Б╝ё╝    Ё     ЮЦ║.    Ё   ╗╜.╒═╚.,  Ё    ╗Б╝ё╝    ╨     ЮЦ║.    Ё   ╗╜.╒═╚.,  Ё    ╗Б╝ё╝    Ё];
        [╞╝-  Ё             Ё    ╓Ю═ё.    Ё             ╨             Ё    ╓Ю═ё.    Ё             Ё             Ё    ╓Ю═ё.    Ё             ╨             Ё    ╓Ю═ё.    Ё             Ё];
        [ЮО╓╙═Ё             Ё   ╛╔Б═╚╚К   Ё             ╨             Ё   ╛╔Б═╚╚К   Ё             Ё             Ё   ╛╔Б═╚╚К   Ё             ╨             Ё   ╛╔Б═╚╚К   Ё             Ё];
        [дддддедддддддддддддедддддддддддддедддддддддддддвдддддддддддддедддддддддддддедддддддддддддедддддддддддддедддддддддддддедддддддддддддвдддддддддддддедддддддддддддеддддддддддддд╢];
        [  1  Ё      2      Ё      3      Ё      4      ╨      5      Ё      6      Ё      7      Ё      8      Ё      9      Ё     10      ╨      11     Ё     12      Ё     13      Ё];
        [дддддадддддддддддддадддддддддддддадддддддддддддпдддддддддддддадддддддддддддадддддддддддддадддддддддддддадддддддддддддадддддддддддддпдддддддддддддадддддддддддддаддддддддддддды];
*/
        [дддддбддддддддддддддддддддддддддддддддддддддддддддддддддддддрдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддрдддддддддддддддддддддддддддддддддддддддддддддддддддддд©];
        [     Ё                                                      ╨                                         ▌║╝Ю╝БК ╖═ ╝БГ╔Б╜К╘ ╞╔Ю╗╝╓                                          ╨                                                      Ё];
        [█╝╛╔ЮЁ                  ┌Е╝╓ОИ╗╔ ╝АБ═Б╙╗                    гддддддддддддддддддддддддддддддддддддддддддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддддддддддддд╤                  ┬АЕ╝╓ОИ╗╔ ╝АБ═Б╙╗                   Ё];
        [АГ╔Б═Ё                                                      ╨                        ╞╝ ╓╔║╔БЦ                     Ё                    ╞╝ ╙Ю╔╓╗БЦ                        ╨                                                      Ё];
        [╒Б╝- цдддддддддддддддддбдддддддддддддддддбддддддддддддддддддвдддддддддддддддддбдддддддддддддддддбддддддддддддддддддедддддддддддддддддбдддддддддддддддддбддддддддддддддддддвдддддддддддддддддбдддддддддддддддддбдддддддддддддддддд╢];
        [Ю╝ё╝ Ё       ЮЦ║.      Ё     ╗╜.╒═╚.,    Ё       ╗Б╝ё╝      ╨       ЮЦ║.      Ё     ╗╜.╒═╚.,    Ё       ╗Б╝ё╝      Ё       ЮЦ║.      Ё     ╗╜.╒═╚.,    Ё      ╗Б╝ё╝       ╨       ЮЦ║.      Ё     ╗╜.╒═╚.,    Ё       ╗Б╝ё╝      Ё];
        [╞╝-  Ё                 Ё      ╓Ю═ё.      Ё                  ╨                 Ё      ╓Ю═ё.      Ё                  Ё                 Ё      ╓Ю═ё.      Ё                  ╨                 Ё      ╓Ю═ё.      Ё                  Ё];
        [ЮО╓╙═Ё                 Ё     ╛╔Б═╚╚К     Ё                  ╨                 Ё     ╛╔Б═╚╚К     Ё                  Ё                 Ё     ╛╔Б═╚╚К     Ё                  ╨                 Ё     ╛╔Б═╚╚К     Ё                  Ё];
        [дддддедддддддддддддддддедддддддддддддддддеддддддддддддддддддвдддддддддддддддддедддддддддддддддддеддддддддддддддддддедддддддддддддддддедддддддддддддддддеддддддддддддддддддвдддддддддддддддддедддддддддддддддддедддддддддддддддддд╢];
        [  1  Ё        2        Ё        3        Ё         4        ╨        5        Ё        6        Ё         7        Ё        8        Ё        9        Ё       10         ╨        11       Ё       12        Ё        13        Ё];
        [дддддадддддддддддддддддадддддддддддддддддаддддддддддддддддддпдддддддддддддддддадддддддддддддддддаддддддддддддддддддадддддддддддддддддадддддддддддддддддаддддддддддддддддддпдддддддддддддддддадддддддддддддддддадддддддддддддддддды];

    end;

    macro printSeparator()
//        [дддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд];
        [дддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд];
    end;

    macro printChapterHeader(chapterName : String)
        var currentBeginPos = 1;
        var currentEndPos;
        var limit = StrLen(chapterName);
        var correction = 1;

        while (currentBeginPos <= limit)
            currentEndPos = StrBrk(substr(chapterName, currentBeginPos), "\n");
            if (currentEndPos == 0)
                currentEndPos = StrLen(substr(chapterName, currentBeginPos));
                correction = 0;
            end;
            PrintLn(strAlign(substr(chapterName, currentBeginPos, currentEndPos - correction), ReportWidth, STR_ALIGN_CENTER));
            currentBeginPos = currentBeginPos + currentEndPos;
        end;
    end;

    macro printTableString(balance, inRub, inCur, inItog, dtRub, dtCur, dtItog, ktRub, ktCur, ktItog, outRub, outCur, outItog)
        if ((m_chapter == 5) AND (m_isPrintZeroChapter5 != TRUE))
//            [##### ############# ############# ############# ############# ############# ############# ############# ############# ############# ############# ############# ############# ]
            [##### ################# ################# ################## ################# ################# ################## ################# ################# ################## ################# ################# ##################]
            ( balance, "",  "",  inItog:r:0:*,m_precisionChapter5,
                       "",  "",  dtItog:r:0:*,m_precisionChapter5,
                       "",  "",  ktItog:r:0:*,m_precisionChapter5,
                       "",  "",  outItog:r:0:*,m_precisionChapter5);
        elif (m_chapter == 5)
//            [##### ############# ############# ############# ############# ############# ############# ############# ############# ############# ############# ############# ############# ]
            [##### ################# ################# ################## ################# ################# ################## ################# ################# ################## ################# ################# ##################]
            ( balance, inRub :r:0:*,m_precisionChapter5, inCur :r:0:*,m_precisionChapter5, inItog :r:0:*,m_precisionChapter5,
                       dtRub :r:0:*,m_precisionChapter5, dtCur :r:0:*,m_precisionChapter5, dtItog :r:0:*,m_precisionChapter5,
                       ktRub :r:0:*,m_precisionChapter5, ktCur :r:0:*,m_precisionChapter5, ktItog :r:0:*,m_precisionChapter5,
                       outRub:r:0:*,m_precisionChapter5, outCur:r:0:*,m_precisionChapter5, outItog:r:0:*,m_precisionChapter5);
        else
//            [##### ############# ############# ############# ############# ############# ############# ############# ############# ############# ############# ############# ############# ]
            [##### ################# ################# ################## ################# ################# ################## ################# ################# ################## ################# ################# ##################]
            ( balance, inRub :r:0:2, inCur :r:0:2, inItog :r:0:2,
                       dtRub :r:0:2, dtCur :r:0:2, dtItog :r:0:2,
                       ktRub :r:0:2, ktCur :r:0:2, ktItog :r:0:2,
                       outRub:r:0:2, outCur:r:0:2, outItog:r:0:2);
        end;
    end;

    macro printActiveHeader()
        [ ─╙Б╗╒                                                                                                                                                                        ];
    end;

    macro printActiveBottom()
        printSeparator();

        [ ┬Б╝ё╝ ╞╝ ═╙Б╗╒Ц (║═╚═╜А)                                                                                                                                                     ];
    end;

    macro printPassiveHeader()
        [ ▐═АА╗╒                                                                                                                                                                       ];
    end;

    macro printPassiveBottom()
        printSeparator();

        [ ┬Б╝ё╝ ╞╝ ╞═АА╗╒Ц (║═╚═╜А)                                                                                                                                                    ];
    end;

    macro printTableBottom()

    end;

    macro getValue(value, chapter)
        if (value == NULL)
            return 0;
        end;
        if (chapter == 5)
            return value.exact;
        else
            return value.current;
        end;
    end;

    macro getValueAsString(value, chapter)
        if (value == NULL)
            return 0;
        end;
        if (chapter == 5)
            return value.exactAsString;
        else
            return value.currentAsString;
        end;
    end;

    /**
     * █Ц╚╔╒╝╔ ╖╜═Г╔╜╗╔ ╞╝ ─╙Б╗╒Ц 
     * @param value ▒БЦЮ╙БЦЮ╜═О ╞╔Ю╛╔╜╜═О TBalanceAttribute().
     * @param chapter ┐╚═╒═.
     * @return true, ╔А╚╗ ╒А╔ ╖╜═Г╔╜╗О ╜Ц╚╔╒К╔, ╗╜═Г╔ false.
     */
    macro isZeroActive(value, chapter)
        if ((getValue(value.getInRestNatCurActive(), chapter)  == 0) AND
            (getValue(value.getInRestCurActive(), chapter)     == 0) AND
            (getValue(value.getInRestActive(), chapter)        == 0) AND
            (getValue(value.getDebetNatCur(), chapter)         == 0) AND
            (getValue(value.getDebetCur(), chapter)            == 0) AND
            (getValue(value.getDebet(), chapter)               == 0) AND
            (getValue(value.getCreditNatCur(), chapter)        == 0) AND
            (getValue(value.getCreditCur(), chapter)           == 0) AND
            (getValue(value.getCredit(), chapter)              == 0) AND
            (getValue(value.getOutRestNatCurActive(), chapter) == 0) AND
            (getValue(value.getOutRestCurActive(), chapter)    == 0) AND
            (getValue(value.getOutRestActive(), chapter)       == 0))

            return true;
        end;
        return false;
    end;

    /**
     * █Ц╚╔╒╝╔ ╖╜═Г╔╜╗╔ ╞╝ ▐═АА╗╒Ц
     * @param value ▒БЦЮ╙БЦЮ╜═О ╞╔Ю╛╔╜╜═О TBalanceAttribute().
     * @param chapter ┐╚═╒═.
     * @return true, ╔А╚╗ ╒А╔ ╖╜═Г╔╜╗О ╜Ц╚╔╒К╔, ╗╜═Г╔ false.
     */
    macro isZeroPassive(value, chapter)
        if ((getValue(value.getInRestNatCurPassive(), chapter)  == 0) AND
            (getValue(value.getInRestCurPassive(), chapter)     == 0) AND
            (getValue(value.getInRestPassive(), chapter)        == 0) AND
            (getValue(value.getDebetNatCur(), chapter)          == 0) AND
            (getValue(value.getDebetCur(), chapter)             == 0) AND
            (getValue(value.getDebet(), chapter)                == 0) AND
            (getValue(value.getCreditNatCur(), chapter)         == 0) AND
            (getValue(value.getCreditCur(), chapter)            == 0) AND
            (getValue(value.getCredit(), chapter)               == 0) AND
            (getValue(value.getOutRestNatCurPassive(), chapter) == 0) AND
            (getValue(value.getOutRestCurPassive(), chapter)    == 0) AND
            (getValue(value.getOutRestPassive(), chapter)       == 0))

            return true;
        end;
        return false;
    end;

    macro printChapter(chapter, chapterName)
        var av = TBalanceAttribute("│─▀─█▒");
        var sIn, sInR, sInV, sD, sDr, sDv, sK, sKr, sKv, sOut, sOutR, sOutV;

        m_chapter = chapter;
        printChapterHeader(chapterName);

        av.createBalanceIterator(chapter, KIND_ACTIVE, false, false);
        av.sortIteratorByBalance();

        printActiveHeader();

        sIn = 0.00; sInR = 0; sInV = 0; sD = 0; sDr = 0; sDv = 0; sK = 0; sKr = 0; sKv = 0; sOut = 0; sOutR = 0; sOutV = 0;

        while (av.next())

            if (((m_isPrintKind == PRINT_KIND_BWP) AND (NOT av.isBwp())) OR
                ((m_isPrintKind == PRINT_KIND_NOZ) AND (isZeroActive(av, chapter))))
                continue;
            end;

/*            printTableString(av.getBalance(), getValue(av.getInRestNatCurActive(), chapter), getValue(av.getInRestCurActive(), chapter), getValue(av.getInRestActive(), chapter),
                                              getValue(av.getDebetNatCur(), chapter), getValue(av.getDebetCur(), chapter), getValue(av.getDebet(), chapter),
                                              getValue(av.getCreditNatCur(), chapter), getValue(av.getCreditCur(), chapter), getValue(av.getCredit(), chapter),
                                              getValue(av.getOutRestNatCurActive(), chapter), getValue(av.getOutRestCurActive(), chapter), getValue(av.getOutRestActive(), chapter));
*/
            printTableString(av.getBalance(), getValueAsString(av.getInRestNatCurActive(), chapter), getValueAsString(av.getInRestCurActive(), chapter), getValueAsString(av.getInRestActive(), chapter),
                                              getValueAsString(av.getDebetNatCur(), chapter), getValueAsString(av.getDebetCur(), chapter), getValueAsString(av.getDebet(), chapter),
                                              getValueAsString(av.getCreditNatCur(), chapter), getValueAsString(av.getCreditCur(), chapter), getValueAsString(av.getCredit(), chapter),
                                              getValueAsString(av.getOutRestNatCurActive(), chapter), getValueAsString(av.getOutRestCurActive(), chapter), getValueAsString(av.getOutRestActive(), chapter));

            sInR  = sInR  + getValue(av.getInRestNatCurActive(), chapter);
            sInV  = sInV  + getValue(av.getInRestCurActive(), chapter);
            sIn   = sIn   + getValue(av.getInRestActive(), chapter);
            sDr   = sDr   + getValue(av.getDebetNatCur(), chapter);
            sDv   = sDv   + getValue(av.getDebetCur(), chapter);
            sD    = sD    + getValue(av.getDebet(), chapter);
            sKr   = sKr   + getValue(av.getCreditNatCur(), chapter);
            sKv   = sKv   + getValue(av.getCreditCur(), chapter);
            sK    = sK    + getValue(av.getCredit(), chapter);
            sOutR = sOutR + getValue(av.getOutRestNatCurActive(), chapter);
            sOutV = sOutV + getValue(av.getOutRestCurActive(), chapter);
            sOut  = sOut  + getValue(av.getOutRestActive(), chapter);
        end;

        printActiveBottom();
//msgbox(sInR +",\n"+ sInV+",\n"+ sIn+",\n"+ sDr+",\n"+ sDv+",\n"+  sD+",\n"+ sKr+",\n"+ sKv+",\n"+ sK+",\n"+ sOutR+",\n"+ sOutV+",\n"+ sOut);
        printTableString("", sInR, sInV, sIn, sDr, sDv,  sD, sKr, sKv, sK, sOutR, sOutV, sOut);
        printSeparator();

        av.createBalanceIterator(chapter, KIND_PASSIVE, false, false);
        av.sortIteratorByBalance();

        printPassiveHeader();

        sIn = 0; sInR = 0; sInV = 0; sD = 0; sDr = 0; sDv = 0; sK = 0; sKr = 0; sKv = 0; sOut = 0; sOutR = 0; sOutV = 0;

        while (av.next())

            if (((m_isPrintKind == PRINT_KIND_BWP) AND (NOT av.isBwp())) OR
                ((m_isPrintKind == PRINT_KIND_NOZ) AND (isZeroPassive(av, chapter))))
                continue;
            end;

/*            printTableString(av.getBalance(), getValue(av.getInRestNatCurPassive(), chapter), getValue(av.getInRestCurPassive(), chapter), getValue(av.getInRestPassive(), chapter),
                                              getValue(av.getDebetNatCur(), chapter), getValue(av.getDebetCur(), chapter), getValue(av.getDebet(), chapter),
                                              getValue(av.getCreditNatCur(), chapter), getValue(av.getCreditCur(), chapter), getValue(av.getCredit(), chapter),
                                              getValue(av.getOutRestNatCurPassive(), chapter), getValue(av.getOutRestCurPassive(), chapter), getValue(av.getOutRestPassive(), chapter));
*/
           printTableString(av.getBalance(), getValueAsString(av.getInRestNatCurPassive(), chapter), getValueAsString(av.getInRestCurPassive(), chapter), getValueAsString(av.getInRestPassive(), chapter),
                                              getValueAsString(av.getDebetNatCur(), chapter), getValueAsString(av.getDebetCur(), chapter), getValueAsString(av.getDebet(), chapter),
                                              getValueAsString(av.getCreditNatCur(), chapter), getValueAsString(av.getCreditCur(), chapter), getValueAsString(av.getCredit(), chapter),
                                              getValueAsString(av.getOutRestNatCurPassive(), chapter), getValueAsString(av.getOutRestCurPassive(), chapter), getValueAsString(av.getOutRestPassive(), chapter));

            sInR  = sInR  + getValue(av.getInRestNatCurPassive(), chapter);
            sInV  = sInV  + getValue(av.getInRestCurPassive(), chapter);
            sIn   = sIn   + getValue(av.getInRestPassive(), chapter);
            sDr   = sDr   + getValue(av.getDebetNatCur(), chapter);
            sDv   = sDv   + getValue(av.getDebetCur(), chapter);
            sD    = sD    + getValue(av.getDebet(), chapter);
            sKr   = sKr   + getValue(av.getCreditNatCur(), chapter);
            sKv   = sKv   + getValue(av.getCreditCur(), chapter);
            sK    = sK    + getValue(av.getCredit(), chapter);
            sOutR = sOutR + getValue(av.getOutRestNatCurPassive(), chapter);
            sOutV = sOutV + getValue(av.getOutRestCurPassive(), chapter);
            sOut  = sOut  + getValue(av.getOutRestPassive(), chapter);

        end;

        printPassiveBottom();
        printTableString("", sInR, sInV, sIn, sDr, sDv,  sD, sKr, sKv, sK, sOutR, sOutV, sOut);
        printSeparator();


    end;

    TReportViewConstructor(formName, formOkudCode, formPeriodicity, periodFormat);
end;


class (TF101ReportView)TF101ReportViewExcel(formName, formOkudCode, formPeriodicity, periodFormat)

    private var
        /* ▐╔Ю╔Г╗А╚╔╜╗О ╓╚О ╙╝╚╚╔╙Ф╗╗ Borders */
        xlEdgeTop          = 8,
        xlEdgeBottom       = 9,
        xlEdgeRight        = 10,
        xlEdgeLeft         = 7,
        xlDiagonalDown     = 5,
        xlDiagonalUp       = 6,
        xlInsideVertical   = 11,
        xlInsideHorizontal = 12,

        /* ▓╝╚И╗╜═ ╚╗╜╗╘ */
        xlHairline = 1,     /* ▌Г╔╜Л Б╝╜╙═О */
        xlThin     = 2,     /* ▓╝╜╙═О */
        xlMedium   = -4138, /* █╝Ю╛═╚Л╜═О */
        xlThick    = 4,     /* ▓╝╚АБ═О */

        /* ┼╝╜АБ═╜БК ╒КЮ═╒╜╗╒═╜╗О */
        xlTop    = -4160,
        xlCenter = -4108,
        xlBottom = -4107,
        xlRight  = -4152,
        xlLeft   = -4131,

        /* Б╗╞ А╝ЕЮ═╜О╔╛╝ё╝ ╓╝╙Ц╛╔╜Б═ */
        xlWorkBookType_97_2003 = -4143;   //Excel 97-2003

    private var m_reportFileName : String;
    private var m_currentUseSystemSeparatorsValue;
    private var C_EE_EXCEL_NUMBER_FORMAT = "# ##0"; /* Ф╔╚╝Г╗А╚╔╜╜К╘ Д╝Ю╛═Б */
    private var EXCEL_ws = NULL;                    /* EXCEL worksheet */
    private var C_EE_EXCEL_POINT = ",";             /* Ю═╖╓╔╚╗Б╔╚Л ╓╚О ╓Ю╝║╜╝╘ Г═АБ╗ Г╗А╔╚ */
    private var m_rowCurrent     = 22;              // Б╔╙ЦИ═О АБЮ╝╙═ ╜═ ╚╗АБ╔
    var l_ob;                                       // ╝║Й╔╙Б Excel.Application
    var startAX;

    private macro TReportViewExcelConstructor(formName, formOkudCode, formPeriodicity, periodFormat)
        initTF101ReportView(formName, formOkudCode, formPeriodicity, periodFormat);
        m_precisionChapter5   = balanceParameters().getPrecisionChapter5();
    end;

    macro getUnitName(formDimension)
        var formUnit = "";

        if (formDimension == RCB_DIM_MILLION)
            formUnit = "╛╚╜. ЮЦ║.";
        elif (formDimension == RCB_DIM_NATIONAL)
            formUnit = "ЮЦ║.";
        elif (formDimension == RCB_DIM_ROUBLE)
            formUnit = "ЮЦ║.";
        elif (formDimension == RCB_DIM_THOUSAND)
            formUnit = "БКА. ЮЦ║.";
        end;

        return formUnit;
    end;

    macro defineFileName()
        var prefix = SubStr(getNamesZone().getOkudString(ReportWidth), strLen(getNamesZone().getOkudString(ReportWidth)) - 2);
        m_reportFileName = getNameLog(prefix, "xls");
    end;

    macro getReportFileName() : String
        defineFileName();
        return m_reportFileName;
    end;

    /* ▐Ю╔╝║Ю═╖╝╒═БЛ ╞ЦБЛ ╒ ╞╝╚╜К╘ */
    macro _processPath(p_path, path)
      var l_str, l_path, l_p;
          p_path = trim(p_path);

       if(substr(p_path, 1, 2 ) == "..") /* ААК╚╙═ ╜═ ╒КХ╔АБ╝ОИ╗╘ ╙═Б═╚╝ё */
            p_path = substr(p_path, 3);
            l_str  = path;
            l_path = "";
            l_p    = strbrk(l_str, "\\");
            while(l_p != 0)
                l_path = l_path + substr(l_str, 1, l_p - 1) + "\\";
                l_str  = substr(l_str, l_p + 1);
                l_p    = strbrk(l_str, "\\");
            end;
            return (substr(l_path, 1, strlen(l_path) - 1) + p_path);
       elif(substr(p_path, 1, 1) == ".") /* ААК╚╙═ ╜═ Б╔╙ЦИ╗╘ ╙═Б═╚╝ё */
            return (path + substr(p_path, 2));
       end;

       return path + "\\" + p_path;
    end;

    /*
          ▌Б╙ЮКБ╗╔ Х═║╚╝╜═ ╝БГ╔Б═ ╒ EXCEL
           p_name: Opt: ╞╝╚╜К╘ ╞ЦБЛ ╙ Д═╘╚Ц Х═║╚╝╜═: Def - C_EE_TEMPLATE_NAME
    */
    macro ee_EXCEL_template_init(p_excel_ob, p_name)
        var l_wb,
            l_line;

        l_wb     = p_excel_ob.Workbooks.Add(p_name);
        EXCEL_ws = l_wb.Sheets(1);
        p_excel_ob.Visible = TRUE;

        m_currentUseSystemSeparatorsValue = p_excel_ob.useSystemSeparators;
        p_excel_ob.useSystemSeparators = false;
        C_EE_EXCEL_POINT = p_excel_ob.application.DecimalSeparator;
    end;

    /*
      ┼╝╓ ╙╝╚╝╜╙╗ EXCEL ╞╝ ╜╝╛╔ЮЦ
       p_idx: Req: ╜╝╛╔Ю ╙╝╚╝╜╙╗ (╜Ц╛╔Ю═Ф╗О А 1)
    */
    macro ee_cl_code(p_idx)
     var l_s,
         s;

     p_idx = p_idx - 1; /* 0 == "A" */
     if(p_idx <= 25)
        return strfor(codefor("A") + p_idx);
     end;
     l_s = ee_cl_code(p_idx / 26 - 1);
     l_s = l_s + ee_cl_code(p_idx - (p_idx / 26) * 26);

     return s;
    end;

    /*
      ┼╝╓ ДЮ═ё╛╔╜Б═ Б═║╚╗ФК ╒ EXCEL - ╓╚О ╒К╖╝╒═ EXCEL-╞Ю╝Ф╔╓ЦЮ
       p_start_cl: Req: ╜╝╛╔Ю ╞╔Ю╒╝╘ ╙╝╚╝╜╙╗
       p_start_ln: Req: ╜╝╛╔Ю ╞╔Ю╒╝╘ АБЮ╝╙╗
       p_end_cl  : Req: ╜╝╛╔Ю ╞╝А╚╔╓╜╔╘ ╙╝╚╝╜╙╗
       p_end_ln  : Req: ╜╝╛╔Ю ╞╝А╚╔╓╜╔╘ АБЮ╝╙╗
    */
    macro ee_range_code(p_start_cl, p_start_ln, p_end_cl, p_end_ln)
        return string(ee_cl_code(p_start_cl), p_start_ln, ":", ee_cl_code(p_end_cl), p_end_ln);
    end;

    /*
      ⌠АБ═╜╝╒╗БЛ Д╝Ю╛═Б ╖═╓═╜╜╝ё╝ ДЮ═ё╛╔╜Б═ Б═║╚╗ФК EXCEL
       p_align : Req: ╙╝╓ ╒КЮ═╒╜╗╒═╜╗О  "l" ╗╚╗ "c" ╗╚╗ "r" (═╜═╚╝ё╗Г╜╝ RSL)
       p_points: Opt: ╙╝╚╗Г╔АБ╒╝ Б╝Г╔╙ ╞╝А╚╔ ╖═╞ОБ╝╘ -
                      ╓╚О Д╝Ю╛═Б╗Ю╝╒═╜╗О Г╗А╔╚: Def - 0
       p_s_cl, p_s_ln, p_e_cl, p_e_ln: Req: ╞═Ю═╛╔БЮК, ╝╞Ю╔╓╔╚ОНИ╗╔ ёЮ═╜╗ФК
                                            Д╝Ю╛═Б╗ЮЦ╔╛╝╘ ╝║╚═АБ╗ (╜═Г.╙╝╚╝╜╙═,
                                            ╜═Г. АБЮ╝╙═, ╙╝╜. ╙╝╚╝╜╙═ ╗ АБЮ╝╙═)
    */
    macro ee_EXCEL_set_cells_fmt(p_align, p_points, p_s_cl, p_s_ln, p_e_cl, p_e_ln)
        var l_r,
        l_NumberFormat;

        l_r = EXCEL_ws.Range(ee_range_code(p_s_cl, p_s_ln, p_e_cl, p_e_ln));

        p_align = strlwr(p_align);
        if (p_align == "r")
            l_r.HorizontalAlignment = xlRight;
        elif(p_align == "c")
            l_r.HorizontalAlignment = xlCenter;
        else
            l_r.HorizontalAlignment = xlLeft;
        end;

        if(valtype(p_points) != V_INTEGER)
            if(p_points=="txt")
                l_r.NumberFormat = "@";
            end;
            return;
        end;

        l_NumberFormat = C_EE_EXCEL_NUMBER_FORMAT;
        if(p_points > 0)
            l_NumberFormat = l_NumberFormat + C_EE_EXCEL_POINT + mkstr("0", p_points);
        end;
        l_r.NumberFormat = l_NumberFormat;
    end;

    /*
      ▐Ю╔╝║Ю═╖╝╒═╜╗╔ STRING -> DATE
       p_date: Req: ▒БЮ╝╙═ А ╓═Б╝╘
    */
    macro ee_str2date(p_date)
        var str_date = trim(p_Date),
            p,
            dd, mm, yy;

        p = strbrk(str_date, "-/.:");

        if(p == 0)
            return date(0,0,0);
        end;

        dd = int(substr(str_date, 1, p - 1));
        str_date = substr(str_date, p + 1, strlen(str_date) - p);
        p = strbrk(str_date, "-/.:" );

        if(p == 0 )
            return date(0,0,0 );
        end;

        mm = int(substr(str_date, 1, p - 1));
        str_date = substr(str_date, p + 1, strlen(str_date) - p);
        yy = int(str_date );

        return date(dd, mm, yy);
    end;

    /*
       ⌠АБ═╜╝╒╗БЛ Б╝Г╜╝АБЛ Г╗А╚═ ╒ ОГ╔╘╙╔ EXCEL
       x    : ╙╝╚╝╜╙═
       y    : АБЮ╝╙═
       prec : ╙╝╚╗Г╔АБ╒╝ Б╝Г╔╙ ╞╝А╚╔ ╖═╞ОБ╝╘
    */
    private macro ee_EXCEL_set_cell_prec(x, y, prec)
        var l_r,
            l_NumberFormat;

        l_r = EXCEL_ws.Cells(y, x);
        l_NumberFormat = C_EE_EXCEL_NUMBER_FORMAT;
        if (prec > 0)
            l_NumberFormat = l_NumberFormat + C_EE_EXCEL_POINT + mkstr("0", prec);
        end;
        l_r.NumberFormat = l_NumberFormat;
    end;

    /*
      ▐Ю╔╝║Ю═╖╝╒═БЛ STRING-╖╜═Г╔╜╗╔ ╙ ╖═╓═╜╜╝╛Ц ╒ ╙═Г╔АБ╒╔ ╞═Ю═╛╔БЮ═ Б╗╞Ц
       p_value: Req: АБЮ╝╙═ А╝╓╔Ю╕═И═О ╖╜═Г╔╜╗╔ ╓╚О ╞Ю╔╝║Ю═╖╝╒═╜╗О
       p_type:  Req: RSL-Б╗╞ ╖╜═Г╔╜╗О
    */
    macro ee_convtotype(p_value, p_type)
        p_type = int(p_type );

        if  (p_type == V_INTEGER)
            return int(p_value);
        elif ((p_type == V_MONEY  ) or
              (p_type == V_MONEYL ) or
              (p_type == V_DOUBLE ) or
              (p_type == V_DOUBLEL))
            return double(p_value);
        elif (p_type == V_DATE)
            return ee_str2date(p_value);
        end;

        return p_value;
    end;

    /*
       ┼╝╓ ОГ╔╘╙╗ Б═║╚╗ФК ╒ EXCEL - ╓╚О ╒К╖╝╒═ EXCEL-╞Ю╝Ф╔╓ЦЮ
        p_cl: Req: ╜╝╛╔Ю ╙╝╚╝╜╙╗
        p_ln: Req: ╜╝╛╔Ю АБЮ╝╙╗
    */
    macro ee_cell_code(p_cl, p_ln)
        return string(ee_cl_code(p_cl), p_ln);
    end;

    /*
      ▐╔Г═БЛ ╖╜═Г╔╜╗О ╒ ╖═╓═╜╜ЦН ОГ╔╘╙Ц Б═║╚╗ФК Excel
       p_value : Req: STRING-╖╜═Г╔╜╗╔
       p_type  : Req: RSL-Б╗╞ ╖╜═Г╔╜╗О
       p_column: Req: ╙╝╚╝╜╙═
       p_row   : Req: АБЮ╝╙═
    */
    macro ee_EXCEL_print_value(p_value, p_type, p_column, p_row)
        EXCEL_ws.Range(ee_cell_code(p_column, p_row)).FormulaR1C1 = ee_convtotype(p_value, p_type);
    end;

    macro setOutputFile()
        var path    = "",
            exlname = "";

        path = GetCurDir(false);
        exlname = "tmpl_101d.xls";

        /*┬И╔╛ Д═╘╚ Х═║╚╝╜═*/
        var pathXls = FindPath(exlname, NULL, "xls");

        if(pathXls == "" )
            msgbox("█╔ ╜═╘╓╔╜ Д═╘╚-Х═║╚╝╜ EXCEL ", + exlname, " ╒ ╙═Б═╚╝ё╔ ╛═╙Ю╝Д═╘╚╝╒ ╜═ А╔Ю╒╔Ю╔ ╞Ю╗╚╝╕╔╜╗╘.");
            return;
        end;

        if (isStandAlone())
            l_ob   = ActiveX("Excel.Application", NULL, TRUE);
            path = _processPath(pathXls, path);
        else
            if (startAX == null)
                startAX = CreateObject("rsax", "TRsAxServer", "ReportAxServer", isStandalone());
            end;
            l_ob = startAX.CreateComObject("Excel.Application");

            if(not copyFile(pathXls, "$" + exlname))
                msgbox("█╔╒╝╖╛╝╕╜╝ А╙╝╞╗Ю╝╒═БЛ Д═╘╚-Х═║╚╝╜ EXCEL ", exlname, ".");
                return;
            end;

            GetFileInfo("$" + exlname, null, null, null, path);

            if (strBrk(path, "$") == 1)
                path = subStr(path, 2);
            end;
        end;

        ee_EXCEL_template_init(l_ob, path);
        //l_ob.Workbooks.Activate();
    end;

    macro printLendingAgencyCodeZone()
    end;

    macro printNamesZone()
        //╒К╒╝╓╗╛ ╙╝╓ Д╝Ю╛К ╞╝ ▌┼⌠└
        ee_EXCEL_print_value(getNamesZone().getOkudString(ReportWidth), V_STRING, 13, 14);
        //╒К╒╝╓╗╛ ╞╔Ю╗╝╓╗Г╜╝АБЛ Д╝Ю╛К
        ee_EXCEL_print_value(getNamesZone().getFormPeriodicity(), V_STRING, 13, 15);
        //╒К╒╝╓╗╛ ╔╓╗╜╗ФК ╗╖╛╔Ю╔╜╗О
        ee_EXCEL_print_value(getUnitName(rcbApplication.currentReport.form.dimension), V_STRING, 13, 16);
        //╒К╒╝╓╗╛ ╓═БЦ Д╝Ю╛К
        ee_EXCEL_print_value(getNamesZone().getPeriodName(), V_STRING, 7, 11);
        //╒К╒╝╓╗╛ ╜═╖╒═╜╗╔ ║═╜╙═
        ee_EXCEL_print_value(getNamesZone().getLendingAgencyName(), V_STRING, 10, 12);
        //╒К╒╝╓╗╛ ╞╝ГБ╝╒К╘ ═╓Ю╔А ║═╜╙═
        ee_EXCEL_print_value(getNamesZone().getLendingAgencyPostalAdress(), V_STRING, 10, 13);
    end;

    macro printTableHeader()
    end;

    //╒К╒╝╓ ╖═ё╝╚╝╒╙═ Ю═╖╓╔╚═
    private macro printChapterHeader(ChapterName)
        ee_EXCEL_set_cells_fmt("c", "txt", 7, m_rowCurrent, 7, m_rowCurrent);
        ee_EXCEL_print_value(ChapterName, V_STRING, 7, m_rowCurrent);
        m_rowCurrent = m_rowCurrent + 1;
    end;

    private macro printActiveHeader(ChapterName)
        ee_EXCEL_set_cells_fmt("l", "txt", 1, m_rowCurrent, 1, m_rowCurrent);
        ee_EXCEL_print_value("─╙Б╗╒", V_STRING, 1, m_rowCurrent);
        m_rowCurrent = m_rowCurrent + 1;
    end;

    private macro printPassiveHeader(ChapterName)
        ee_EXCEL_set_cells_fmt("l", "txt", 1, m_rowCurrent, 1, m_rowCurrent);
        ee_EXCEL_print_value("▐═АА╗╒", V_STRING, 1, m_rowCurrent);
        m_rowCurrent = m_rowCurrent + 1;
    end;

    private macro printActiveBottom()
        //printSeparator();
        ee_EXCEL_set_cells_fmt("l", "txt", 1, m_rowCurrent, 1, m_rowCurrent);
        ee_EXCEL_print_value("┬Б╝ё╝ ╞╝ ═╙Б╗╒Ц (║═╚═╜А)", V_STRING, 1, m_rowCurrent);
        m_rowCurrent = m_rowCurrent + 1;
    end;

    private macro printPassiveBottom()
        //printSeparator();
        ee_EXCEL_set_cells_fmt("l", "txt", 1, m_rowCurrent, 1, m_rowCurrent);
        ee_EXCEL_print_value("┬Б╝ё╝ ╞╝ ╞═АА╗╒Ц (║═╚═╜А)", V_STRING, 1, m_rowCurrent);
        m_rowCurrent = m_rowCurrent + 1;
    end;

    private macro printTableString(balance, inRub, inCur, inItog, dtRub, dtCur, dtItog, ktRub, ktCur, ktItog, outRub, outCur, outItog)
        if (m_chapter == 5)
            if (m_isPrintZeroChapter5 != TRUE)
                ee_EXCEL_print_value(balance, V_STRING, 1,  m_rowCurrent);
                ee_EXCEL_set_cell_prec(4, m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(inItog,  V_MONEY,  4,  m_rowCurrent);
                ee_EXCEL_set_cell_prec(7, m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(dtItog,  V_MONEY,  7,  m_rowCurrent);
                ee_EXCEL_set_cell_prec(10, m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(ktItog,  V_MONEY,  10, m_rowCurrent);
                ee_EXCEL_set_cell_prec(13, m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(outItog, V_MONEY,  13, m_rowCurrent);
            else
                ee_EXCEL_print_value(balance, V_STRING, 1,  m_rowCurrent);
                ee_EXCEL_set_cell_prec(2,  m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(inRub,   V_MONEY,  2,  m_rowCurrent);
                ee_EXCEL_set_cell_prec(3,  m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(inCur,   V_MONEY,  3,  m_rowCurrent);
                ee_EXCEL_set_cell_prec(4,  m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(inItog,  V_MONEY,  4,  m_rowCurrent);
                ee_EXCEL_set_cell_prec(5,  m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(dtRub,   V_MONEY,  5,  m_rowCurrent);
                ee_EXCEL_set_cell_prec(6,  m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(dtCur,   V_MONEY,  6,  m_rowCurrent);
                ee_EXCEL_set_cell_prec(7,  m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(dtItog,  V_MONEY,  7,  m_rowCurrent);
                ee_EXCEL_set_cell_prec(8,  m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(ktRub,   V_MONEY,  8,  m_rowCurrent);
                ee_EXCEL_set_cell_prec(9,  m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(ktCur,   V_MONEY,  9,  m_rowCurrent);
                ee_EXCEL_set_cell_prec(10, m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(ktItog,  V_MONEY,  10, m_rowCurrent);
                ee_EXCEL_set_cell_prec(11, m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(outRub,  V_MONEY,  11, m_rowCurrent);
                ee_EXCEL_set_cell_prec(12, m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(outCur,  V_MONEY,  12, m_rowCurrent);
                ee_EXCEL_set_cell_prec(13, m_rowCurrent, m_precisionChapter5);
                ee_EXCEL_print_value(outItog, V_MONEY,  13, m_rowCurrent);
            end;

            m_rowCurrent = m_rowCurrent + 1;
            return;
        end;

        ee_EXCEL_print_value(balance, V_STRING, 1,  m_rowCurrent);
        ee_EXCEL_print_value(inRub,   V_MONEY,  2,  m_rowCurrent);
        ee_EXCEL_print_value(inCur,   V_MONEY,  3,  m_rowCurrent);
        ee_EXCEL_print_value(inItog,  V_MONEY,  4,  m_rowCurrent);
        ee_EXCEL_print_value(dtRub,   V_MONEY,  5,  m_rowCurrent);
        ee_EXCEL_print_value(dtCur,   V_MONEY,  6,  m_rowCurrent);
        ee_EXCEL_print_value(dtItog,  V_MONEY,  7,  m_rowCurrent);
        ee_EXCEL_print_value(ktRub,   V_MONEY,  8,  m_rowCurrent);
        ee_EXCEL_print_value(ktCur,   V_MONEY,  9,  m_rowCurrent);
        ee_EXCEL_print_value(ktItog,  V_MONEY,  10, m_rowCurrent);
        ee_EXCEL_print_value(outRub,  V_MONEY,  11, m_rowCurrent);
        ee_EXCEL_print_value(outCur,  V_MONEY,  12, m_rowCurrent);
        ee_EXCEL_print_value(outItog, V_MONEY,  13, m_rowCurrent);

        m_rowCurrent = m_rowCurrent + 1;
    end;

    macro printChapter(chapter, ChapterName)
        var av = TBalanceAttribute("│─▀─█▒");
        var sIn, sInR, sInV, sD, sDr, sDv, sK, sKr, sKv, sOut, sOutR, sOutV;

        m_chapter = chapter;
        printChapterHeader(chapterName);

        av.createBalanceIterator(chapter, KIND_ACTIVE, false, false);
        av.sortIteratorByBalance();

        printActiveHeader();

        sIn = 0; sInR = 0; sInV = 0; sD = 0; sDr = 0; sDv = 0; sK = 0; sKr = 0; sKv = 0; sOut = 0; sOutR = 0; sOutV = 0;

        while (av.next())

            if (((m_isPrintKind == PRINT_KIND_BWP) AND (NOT av.isBwp())) OR
                ((m_isPrintKind == PRINT_KIND_NOZ) AND (isZeroActive(av, chapter))))
                continue;
            end;

            printTableString(av.getBalance(), getValue(av.getInRestNatCurActive(), chapter), getValue(av.getInRestCurActive(), chapter), getValue(av.getInRestActive(), chapter),
                                              getValue(av.getDebetNatCur(), chapter), getValue(av.getDebetCur(), chapter), getValue(av.getDebet(), chapter),
                                              getValue(av.getCreditNatCur(), chapter), getValue(av.getCreditCur(), chapter), getValue(av.getCredit(), chapter),
                                              getValue(av.getOutRestNatCurActive(), chapter), getValue(av.getOutRestCurActive(), chapter), getValue(av.getOutRestActive(), chapter));

            sInR  = sInR  + getValue(av.getInRestNatCurActive(), chapter);
            sInV  = sInV  + getValue(av.getInRestCurActive(), chapter);
            sIn   = sIn   + getValue(av.getInRestActive(), chapter);
            sDr   = sDr   + getValue(av.getDebetNatCur(), chapter);
            sDv   = sDv   + getValue(av.getDebetCur(), chapter);
            sD    = sD    + getValue(av.getDebet(), chapter);
            sKr   = sKr   + getValue(av.getCreditNatCur(), chapter);
            sKv   = sKv   + getValue(av.getCreditCur(), chapter);
            sK    = sK    + getValue(av.getCredit(), chapter);
            sOutR = sOutR + getValue(av.getOutRestNatCurActive(), chapter);
            sOutV = sOutV + getValue(av.getOutRestCurActive(), chapter);
            sOut  = sOut  + getValue(av.getOutRestActive(), chapter);
        end;

        printActiveBottom();
        printTableString("", sInR, sInV, sIn, sDr, sDv,  sD, sKr, sKv, sK, sOutR, sOutV, sOut);
        //printSeparator();

        av.createBalanceIterator(chapter, KIND_PASSIVE, false, false);
        av.sortIteratorByBalance();

        printPassiveHeader();

        sIn = 0; sInR = 0; sInV = 0; sD = 0; sDr = 0; sDv = 0; sK = 0; sKr = 0; sKv = 0; sOut = 0; sOutR = 0; sOutV = 0;

        while (av.next())

            if (((m_isPrintKind == PRINT_KIND_BWP) AND (NOT av.isBwp())) OR
                ((m_isPrintKind == PRINT_KIND_NOZ) AND (isZeroPassive(av, chapter))))
                continue;
            end;

            printTableString(av.getBalance(), getValue(av.getInRestNatCurPassive(), chapter), getValue(av.getInRestCurPassive(), chapter), getValue(av.getInRestPassive(), chapter),
                                              getValue(av.getDebetNatCur(), chapter), getValue(av.getDebetCur(), chapter), getValue(av.getDebet(), chapter),
                                              getValue(av.getCreditNatCur(), chapter), getValue(av.getCreditCur(), chapter), getValue(av.getCredit(), chapter),
                                              getValue(av.getOutRestNatCurPassive(), chapter), getValue(av.getOutRestCurPassive(), chapter), getValue(av.getOutRestPassive(), chapter));

            sInR  = sInR  + getValue(av.getInRestNatCurPassive(), chapter);
            sInV  = sInV  + getValue(av.getInRestCurPassive(), chapter);
            sIn   = sIn   + getValue(av.getInRestPassive(), chapter);
            sDr   = sDr   + getValue(av.getDebetNatCur(), chapter);
            sDv   = sDv   + getValue(av.getDebetCur(), chapter);
            sD    = sD    + getValue(av.getDebet(), chapter);
            sKr   = sKr   + getValue(av.getCreditNatCur(), chapter);
            sKv   = sKv   + getValue(av.getCreditCur(), chapter);
            sK    = sK    + getValue(av.getCredit(), chapter);
            sOutR = sOutR + getValue(av.getOutRestNatCurPassive(), chapter);
            sOutV = sOutV + getValue(av.getOutRestCurPassive(), chapter);
            sOut  = sOut  + getValue(av.getOutRestPassive(), chapter);
        end;

        printPassiveBottom();
        printTableString("", sInR, sInV, sIn, sDr, sDv,  sD, sKr, sKv, sK, sOutR, sOutV, sOut);
        //printSeparator();

    end;

    macro printTableBottom()
        //msgbox("printTableBottom()");
    end;

    macro printSignatureZone()
        var signatureZone : TXlsSignatureZone_101;

        //╝БАБЦ╞
        m_rowCurrent = m_rowCurrent + 3;

        //╒К╒╝╓╗╛ ╞╔Ю╒╝╔ ╚╗Ф╝
        ee_EXCEL_set_cells_fmt("l", "txt", 1, m_rowCurrent, 1, m_rowCurrent);
        ee_EXCEL_print_value(signatureZone.getFirstPersonAppointment(), V_STRING, 1,  m_rowCurrent);
        m_rowCurrent = m_rowCurrent + 1;

        //╒К╒╝╓╗╛ ╒Б╝Ю╝╔ ╚╗Ф╝
        ee_EXCEL_set_cells_fmt("l", "txt", 1, m_rowCurrent, 1, m_rowCurrent);
        ee_EXCEL_print_value(signatureZone.getSecondPersonAppointment(), V_STRING, 1,  m_rowCurrent);
        m_rowCurrent = m_rowCurrent + 1;

        //╒К╒╝╓╗╛ "▄.▐."
        ee_EXCEL_set_cells_fmt("l", "txt", 1, m_rowCurrent, 2, m_rowCurrent);
        ee_EXCEL_print_value("▄.▐.", V_STRING, 1,  m_rowCurrent);
        m_rowCurrent = m_rowCurrent + 1;

        //╒К╒╝╓╗╛ ╗А╞╝╚╜╗Б╔╚О
        ee_EXCEL_set_cells_fmt("l", "txt", 1, m_rowCurrent, 1, m_rowCurrent);
        ee_EXCEL_set_cells_fmt("r", "txt", 3, m_rowCurrent, 2, m_rowCurrent);
        ee_EXCEL_print_value(signatureZone.getExecutorName(), V_STRING, 3,  m_rowCurrent);
        ee_EXCEL_print_value("┬А╞╝╚╜╗Б╔╚Л", V_STRING, 1,  m_rowCurrent);
        m_rowCurrent = m_rowCurrent + 1;

        //╒К╒╝╓╗╛ Б╔╚╔Д╝╜ ╗А╞╝╚╜╗Б╔╚О
        ee_EXCEL_set_cells_fmt("l", "txt", 1, m_rowCurrent, 2, m_rowCurrent);
        ee_EXCEL_print_value(signatureZone.getExecutorPhoneNumber(), V_STRING, 1,  m_rowCurrent);
        ee_EXCEL_print_value("Б╔╚╔Д╝╜:", V_STRING, 1,  m_rowCurrent);
        m_rowCurrent = m_rowCurrent + 1;

        //╒К╒╝╓╗╛ ╓═БЦ ╝БГ╔Б═
        ee_EXCEL_set_cells_fmt("l", "txt", 1, m_rowCurrent, 1, m_rowCurrent);
        ee_EXCEL_print_value(signatureZone.getDatePrintableReport, V_STRING, 1,  m_rowCurrent);
    end;

    macro show()
    end;

    macro resetOutputFile()
        var absPath : String = GetCurDir(false);
        var relPath : String = getReportFileName();
        var i : Integer;

        //╝╞Ю╔╓╔╚О╔╛ ═║А╝╚НБ╜К╘ ╞ЦБЛ ╙ Д═╘╚Ц ╝БГ╔Б═
        if (SubStr(relPath, 1, 3) == "..\\")
            relPath = SubStr(relPath, 4);
            i = StrLen(absPath);
            while (SubStr(absPath, i, 1) != "\\")
                i = i - 1;
            end;
            absPath = SubStr(absPath, 1, i) + relPath;
        else
            absPath = absPath + relPath;
        end;
        //Ц╓═╚О╔╛ АБ═ЮК╘ Д═╘╚

        l_ob.useSystemSeparators = m_currentUseSystemSeparatorsValue;
        RemoveFile(absPath);
    end;

    TReportViewExcelConstructor(formName, formOkudCode, formPeriodicity, periodFormat);
end;
