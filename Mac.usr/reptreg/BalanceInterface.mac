/**
 * Форма Балансовый отчет. Доступ к операциям формы.
 *
 * @since   07.03.2013
 * @author  Gromov
 * @version 6.00.020.31
 */
import ReptCBInter;
import RcbCoreInter;

import rcbimport;

//import balanceAttribute;

//import balanceGlobal;
import balanceObjectFactory;
import balanceCalculateProtocolView;
import balanceCalculateController;
import balanceKlikoExportController;
import applCalculation;
import balancePtkPsdExportController;
//import balancePtkPsdView;
//import balanceDataSourceFilters;
import balanceDataSource;
import appl7ReportView;
import appl8PrintController;
import appl8ReportView;
import appl13ReportView;
import balancePrintProtocolView;
import f101ReportView;
import balancePrintController;
/**
 *  Запуск операции расчета отчета
 */
macro executeCalculationOperation()
    const DESCRIPTION_LABEL = "-desc:";

    var descriptionLabelIndex = index(cmdArgs, DESCRIPTION_LABEL);

    if (descriptionLabelIndex == 0)
        return;
    end;

    var chapter = substr(cmdArgs, descriptionLabelIndex + strlen(DESCRIPTION_LABEL));

    objectFactoryInstance.createReportCalculateController(chapter).calculate();
end;

/**
 *  Запуск операции печати отчета
 */
macro executePrintOperation()
    const CHAPTER_LABEL = "-ch:";
    const REPORT_LABEL  = "-report:";

    var reportLabelIndex  = index(cmdArgs, REPORT_LABEL);
    var chapterLabelIndex = index(cmdArgs, CHAPTER_LABEL);

    if ((chapterLabelIndex == 0) or (reportLabelIndex == 0))
        return;
    end;

    var report  = SubStr(CmdArgs, reportLabelIndex  + StrLen(REPORT_LABEL));
    var chapter = SubStr(cmdArgs, chapterLabelIndex + strlen(CHAPTER_LABEL), 1);

    objectFactoryInstance.createReportPrintController(chapter, report).execute();
end;

/**
 *  Запуск операции печати приложения 8
 */
macro executePrintOperationAppl8()
    const CHAPTER_LABEL = "-ch:";

    var chapterLabelIndex = index(cmdArgs, CHAPTER_LABEL);

    if (chapterLabelIndex == 0)
        return;
    end;

    var chapter = SubStr(cmdArgs, chapterLabelIndex + strlen(CHAPTER_LABEL), 1);

    objectFactoryInstance.createApplication8PrintController(chapter).execute();
end;

/**
 *  Запуск операции экспорта в kliko.exe
 */
macro executeKlikoExportOperation()
    const DESCRIPTION_LABEL = "-desc:";
    const DAYLY_LABEL = "-dayly:";

    var daylyLabelIndex       = index(cmdArgs, DAYLY_LABEL);
    var descriptionLabelIndex = index(cmdArgs, DESCRIPTION_LABEL);

    if (daylyLabelIndex == 0) //or (descriptionLabelIndex == 0))
        return;
    end;

    var dayly   = ternary(SubStr(CmdArgs, daylyLabelIndex + StrLen(DAYLY_LABEL), 1) == "1", TRUE, FALSE);
    var chapter = SubStr(cmdArgs, descriptionLabelIndex + strlen(DESCRIPTION_LABEL));

    objectFactoryInstance.createKlikoExportController(dayly, chapter).execute();
end;

/**
 *  Запуск операции экспорта в ПТК ПСД
 */
macro executePtkPsdExportOperation()
    const AUTHORIZED_REPRESENTATIVE_LABEL = "-present:";

    var dayly = 0;
    var chapter;

    if (index(cmdArgs, AUTHORIZED_REPRESENTATIVE_LABEL) == 0)
        chapter = "0";
    else
        chapter = "УП";
    end;

    objectFactoryInstance.createPtkPsdExportController(dayly, chapter).execute();
end;

/**
 *  Расчет приложения 8
 */
macro executeAppl8CalculationOperation()
    objectFactoryInstance.createAppl8CalculationController().execute();
end;

/**
 *  Расчет приложения 13
 */
macro executeAppl13CalculationOperation()
    objectFactoryInstance.createAppl13CalculationController().execute();
end;

/*  GSP
 *  Корректировка сумм по 706-707 счетам
 */
macro executeCorrectAcc706_707()
    private const ROW_KIND = TRowKind();
    private const COLUMN_KIND = TColumnKind();

    var balanceAttribute = TBalanceAttribute("БАЛАНС");
    macro recalcSumEkv706_707(chapter, balanceNumber, columnKind)
       var currencyValue = balanceAttribute.getBalanceAttributeValue(chapter, balanceNumber, columnKind, ROW_KIND.CURRENCY);
       var roubleValue   = balanceAttribute.getBalanceAttributeValue(chapter, balanceNumber, columnKind, ROW_KIND.ROUBLE);

       roubleValue.exact = roubleValue.exact + currencyValue.exact;
       roubleValue.RecalculateScaled();
       currencyValue.exact = $0;
       currencyValue.RecalculateScaled();
    end;

    macro recalcOneSumEkv706_707(activ : bool)
        var i : Integer = 1;
        var value;
        while(getParm(i, value))
            if(activ)
               recalcSumEkv706_707(1,value,COLUMN_KIND.ACTIVE_OUT_REST);
               recalcSumEkv706_707(1,value,COLUMN_KIND.ACTIVE_IN_REST);
            else
               recalcSumEkv706_707(1,value,COLUMN_KIND.PASSIVE_OUT_REST);
               recalcSumEkv706_707(1,value,COLUMN_KIND.PASSIVE_IN_REST);
            end;
            recalcSumEkv706_707(1,value,COLUMN_KIND.DEBET);
            recalcSumEkv706_707(1,value,COLUMN_KIND.CREDIT);
            i = i + 1;
        end;
    end;
  
    /* для пассивных счетов */
    recalcOneSumEkv706_707(false, 70601, 70701, 70702);
    /* для активных счетов */
    recalcOneSumEkv706_707(true,  70606, 70706, 70707);

    RcbApplication.TransactionManager.commit();
end;

установитьФлагВозврата(OK_MACRO_FLAG);
exit(1);