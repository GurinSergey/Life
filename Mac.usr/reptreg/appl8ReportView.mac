/*
$Name:          appl8ReportView.mac
$Module:        Регламентируемая отчетность
$Description:   Класс представления отчетной формы для приложения 8.
*/
/*
 * Класс представления отчетной формы для приложения 8.
 *
 * @since   05.08.2013
 * @author  Konofeev R.R.
 * @version 6.020.31
 *
 */

import BankInter, ReptCBInter, PrnFrm, Календарь, globals, cy_find;
import lib_lang;
import rsexts;
import RcbCoreInter;
import rcb_date, RsbDataSet;
import rcbZone;

import param;
import rcbSignatureZone;

import balanceObjectFactory;

/**
 * Данные для печати подписей
 */
private class (TSignatureZone) TSignatureData()
    /**
     * Должность первого лица (из анкеты субъектов).
     */
    macro getFirstPersonAppointment() : String
        return m_firstPersonAppointment;
    end;

    /**
     * ФИО первого лица (из анкеты субъектов).
     */
    macro getFirstPersonName() : String
        return m_firstPersonName;
    end;

    /**
     * Должность второго лица (из анкеты субъектов).
     */
    macro getSecondPersonAppointment() : String
        return m_secondPersonAppointment;
    end;

    /**
     * ФИО второго лица (из анкеты субъектов).
     */
    macro getSecondPersonName() : String
        return m_secondPersonName;
    end;

    private macro constructorTSignatureData()
        initTSignatureZone();
    end;

    constructorTSignatureData();
end;

class (RcbReportView) TApplication8ReportView()

    /**
     * Настройка с каталогами макрофайлов
     */
    private const MACRO_REGPATH      = "BANK_INI/ОБЩИЕ ПАРАМЕТРЫ/ДИРЕКТОРИИ/MACRODIR";
    private const USER_MACRO_REGPATH = "BANK_INI/ОБЩИЕ ПАРАМЕТРЫ/ДИРЕКТОРИИ/USERMACRODIR";

    /**
     * Служебные символы
     */
    private const COMMENT_SIGN = "#";
    private const SERVICE_SIGN = ";";

    /**
     * Служебные тэги для создания рабочего шаблона
     */
    private const MASK_STR  = "MASK:";
    private const EXPR_STR  = "EXPR:";
    private const DATE1_STR = "DATE1:";
    private const DATE2_STR = "DATE2:";

    /**
     * Точность округления значений главы Д
     */
    private var m_precisionChapter5;
    getRegistryValue("REPTREG/REP_GROUPS/BALANCE_ACCOUNTS/ТОЧНОСТЬ ДЛЯ ГЛАВЫ Д", V_INTEGER,  m_precisionChapter5, null);

    /**
     * Настройка для печати приложения ( 0 - все счета, 1 - по РПС, 2 - только ненулевые )
     */
    private const PRINT_REGPATH = "REPTREG/REP_GROUPS/BALANCE_ACCOUNTS/ПЕЧАТЬ ФОРМЫ БАЛАНСОВЫЕ СЧЕТА";
    private const PRINT_ALL     = 0; /* все счета */
    private const PRINT_BWP     = 1; /* по РПС    */
    private const PRINT_NOZ     = 2; /* ненулевые */

    var printPril = true;
    var printNote = true;
    private var m_isPrintHead;
    private var m_isPrintNote;
    var currentIsInBwpStatus;   //используется при печати РПС для определения того, надо ли печатать итоги по балансовым второго порядка

    /**
     * Переменные приложения 8
     */
    private var m_iteratorApplication8;
    private class appl8Filter(rowId : Integer)
        var m_rowId = rowId;
        macro isSuitable(v)
            return (Int(v.fieldValue("row").current) == m_rowId);
        end;
    end;
    /**
     * Количество специальных переменных
     */
    //private var m_specialVariablesCount = 351;
    //Gurin S. 06.01.2015 Реальное количество переменных
    private var m_specialVariablesCount = 397;


    /**
     * Массив переменных по балансовым счетам
     */
    private var m_arrayVariables = TArray();

    /**
     * Массив масок - раздел, балансовый первого порядка, строка
     */
    private var m_arrayPrintMask = RcbArray();

    /**
     * Тип печати
     */
    private var m_printType = PRINT_ALL;

    /**
     * Текущая глава
     */
    private var m_currentChapter = 0;

    /* Есть ли в шаблоне поле с именем или индексом Field */
    macro isFieldTemplate( RepForm, Field )
        /* если поля нет, то генерится Runtime Error... */
        RepForm.Field(Field);
        return true;

        /* ...который перехватываем здесь */
        OnError(err);
        if ( err.Code != 40 )
            RunError();
        end;
        return false;
    end;

      /* Установить значение поля, если оно существует в шаблоне */
    macro setFieldTemplate( _repForm, _field, _value )
        if ( isFieldTemplate(_repForm,_field) )
            _repForm.Value(_field) = String(_value);
            return true;
        end;
        return false;
    end;

    macro initizializeFieldTemplate(_repForm, _value, _precision)
        _precision = NVL(_precision, 0);
        var m_precisionChapter5: String = "0";
        if (_precision > 0)
            m_precisionChapter5  = m_precisionChapter5 + ".";
        end;
        while (_precision > 0)
            m_precisionChapter5  = m_precisionChapter5 + "0";
            _precision = _precision - 1;
        end;
        if (strLen(_value) == 4)
            setFieldTemplate(_repForm, "Ис" + _value + "РуА", m_precisionChapter5);
            setFieldTemplate(_repForm, "Ис" + _value + "ПоА", m_precisionChapter5);
            setFieldTemplate(_repForm, "Ис" + _value + "__А", m_precisionChapter5);
            setFieldTemplate(_repForm, "Ис" + _value + "РуП", m_precisionChapter5);
            setFieldTemplate(_repForm, "Ис" + _value + "ПоП", m_precisionChapter5);
            setFieldTemplate(_repForm, "Ис" + _value + "__П", m_precisionChapter5);
        else
            setFieldTemplate(_repForm, "Бн" + _value + "РуА", m_precisionChapter5);
            setFieldTemplate(_repForm, "Бн" + _value + "ПоА", m_precisionChapter5);
            setFieldTemplate(_repForm, "Бн" + _value + "__А", m_precisionChapter5);
            setFieldTemplate(_repForm, "Бн" + _value + "РуП", m_precisionChapter5);
            setFieldTemplate(_repForm, "Бн" + _value + "ПоП", m_precisionChapter5);
            setFieldTemplate(_repForm, "Бн" + _value + "__П", m_precisionChapter5);

            setFieldTemplate(_repForm, "Бн" + _value + "Ру0", m_precisionChapter5);
            setFieldTemplate(_repForm, "Бн" + _value + "По0", m_precisionChapter5);
            setFieldTemplate(_repForm, "Бн" + _value + "__0", m_precisionChapter5);
            setFieldTemplate(_repForm, "Бн" + _value + "Ру0", m_precisionChapter5);
            setFieldTemplate(_repForm, "Бн" + _value + "По0", m_precisionChapter5);
            setFieldTemplate(_repForm, "Бн" + _value + "__0", m_precisionChapter5);
        end;

    end;

    /* Обработать специальные поля (шапка и подвал отчета) */
    macro PRB_SetExternNames( RepForm )

        var signatureData = TSignatureData();

        setFieldTemplate( RepForm, "Ext_NameBank",  nvl(TZone().party().rec.name, ""));
        setFieldTemplate( RepForm, "Ext_Name_Boss", signatureData.getFirstPersonAppointment());
        setFieldTemplate( RepForm, "Ext_FIO_Boss",  signatureData.getFirstPersonName());
        setFieldTemplate( RepForm, "Ext_Name_Book", signatureData.getSecondPersonAppointment());
        setFieldTemplate( RepForm, "Ext_FIO_Book",  signatureData.getSecondPersonName());
        setFieldTemplate( RepForm, "Ext_DateStr",   "на " + String(GetCorrectPrnRepDate():m) );
        setFieldTemplate( RepForm, "Ext_RepDate",   string(GetCorrectPrnRepDate():m) );

        if (RcbApplication().currentReport.context.isSummaryMode())
            setFieldTemplate( RepForm, "Ext_KindBalance", "Сводный баланс" );
        else
            setFieldTemplate( RepForm, "Ext_KindBalance", "Баланс" );
        end;
    end;

    /* Получить тип печати отчета */
    private macro getPrintKind()
        var val_type = V_UNDEF,
            err_code = 0,
            val      = PRINT_ALL;

        val_type = GetRegistryValue( PRINT_REGPATH, V_INTEGER, val, err_code );

        if ( (err_code != 0) or (val_type != V_INTEGER) )
            MsgBox( "Ошибка чтения настройки|", PRINT_REGPATH );
            Exit(1);
        else
            if ( (val < PRINT_ALL) or (val > PRINT_NOZ) )
                MsgBox( "Некорректное значение настройки|", PRINT_REGPATH, "|будут напечатаны все счета");
                val = PRINT_ALL;
            end;
        end;

        return val;
    end;

/*Балансовый счет входит в РПС*/
    private macro isBalanceInBwp(balance : String, chapter : Integer)
            var dataSet = TRsbDataSet("SELECT 1"
                + "\n" +              "  FROM dbalance_dbt"
                + "\n" +              " WHERE t_chapter = " + chapter
                + "\n" +              "   AND t_balance = " + getSqlString(balance)
                + "\n" +              "   AND t_bdIncludeBWP <= " + getSqlDate(rcbApplication.currentReport.context.period.endDate + 1)
                + "\n" +              "   AND t_bdExcludeBWP >= " + getSqlDate(rcbApplication.currentReport.context.period.beginDate));

            if (dataSet.moveNext())
                return true;
            end;

            return false;
        end;


    /* Получить массив каталогов с макрофайлами */
    private macro getMacroDirs(mdirs)
        var val_type = V_UNDEF,
            err_code = 0,
            val      = "",
            userPath = "",
            ind      = 0;
        ASize(mdirs,0);
        val_type = GetRegistryValue(MACRO_REGPATH, V_STRING, val, err_code );
        GetRegistryValue(USER_MACRO_REGPATH, V_STRING, userPath, null);
        if ( (err_code == 0) and (val_type == V_STRING) )
            val = nvl(userPath, "") + ";" + val;
            ind = Index(val,";");
            while ( ind > 0 )
                mdirs(ASize(mdirs)) = SubStr(val,1,ind-1);
                val = SubStr(val,ind+1);
                ind = Index(val,";");
            end;
            mdirs(ASize(mdirs)) = val;
        else
            MsgBox( "Ошибка чтения настройки|", MACRO_REGPATH );
            Exit(1);
        end;
    end;

    /* Преобразовать строку в дату */
    private macro getDateFromStr(str_date)
        var day  = 0,
            mon  = 0,
            year = 0;

        var ind = 0;

        str_date = Trim(str_date);

        ind      = StrBrk(str_date,".,-/\\");
        day      = Int( SubStr(str_date,1,ind) );
        str_date = SubStr(str_date,ind+1);
        ind      = StrBrk(str_date,".,-/\\");
        mon      = Int( SubStr(str_date,1,ind) );
        str_date = SubStr(str_date,ind+1);
        year     = Int( str_date );

        return Date(day,mon,year);
    end;

    /* Найти шаблон для печати */
    private macro getBaseTemplateName(templateName, reportDate: date )
        file ftpl() txt;
        array mdirs;
        var found = false;
        var stat  = true;
        var name  = "";
        var i     = 0;
        var idir  = 0;
        var ndirs = 0;
        var str   = "";
        var date1 = Date(31,12,9999);
        var date2 = Date( 0, 0,   0);
        var fileList = TDirList();
        /* Получаем список каталогов макрофайлов */
        getMacroDirs( mdirs );
        ndirs = ASize(mdirs);
        /* Пока не нашли - ищем в каждом каталоге */
        while( (idir < ndirs) and (not found) )
            i = 0;
            /* Пока не нашли и есть шаблоны в каталоге - открываем и проверяем */
            name = mdirs(idir) + "\\" + templateName + "_" + "*.tpl";
            fileList.list(name, "f");
            while( (i < fileList.count) and (not found) )
                date1 = Date(31,12,9999);
                date2 = Date( 0, 0,   0);
                name  = mdirs(idir) + "\\" + fileList.name(i);
                stat  = Open(ftpl, name);
                if ( stat )
                    /* Ищем период действия шаблона */
                    Rewind(ftpl);
                    while( stat and Next(ftpl) )
                        str = Trim(ftpl.Str);
                        if ( SubStr(str,1,1) == SERVICE_SIGN )
                            if ( Index(str,DATE1_STR) > 0 )
                                date1 = getDateFromStr( SubStr(str,Index(str,DATE1_STR)+StrLen(DATE1_STR)) );
                            end;
                            if ( Index(str,DATE2_STR) > 0 )
                                date2 = getDateFromStr( SubStr(str,Index(str,DATE2_STR)+StrLen(DATE2_STR)) );
                            end;
                        end;
                        stat = (date1 == Date(31,12,9999)) or (date2 == Date(0,0,0));
                    end;
                    Close( ftpl );
                    /* Подходит ли шаблон нам? */
                    stat = true;
                    if ( (date1 <= reportDate) and (reportDate <= date2) )
                        found = true;
                    end;
                end;
                i = i + 1;
            end;
            stat = true;
            idir = idir + 1;
        end;
        if ( not found )
            MsgBox("Не найден подходящий для печати шаблон");
            Exit(1);
        end;
        return name;
    end;

    private class TVariables(_row, _activeNatCur, _activeCur, _active, _passiveNatCur, _passiveCur, _passive)
        var row;
        var activeNatCur;
        var activeCur;
        var active;
        var passiveNatCur;
        var passiveCur;
        var passive;

        row           = _row;
        activeNatCur  = _activeNatCur;
        activeCur     = _activeCur;
        active        = _active;
        passiveNatCur = _passiveNatCur;
        passiveCur    = _passiveCur;
        passive       = _passive;
    end;

    /* Крутящийся индикатор в статус-строке */
    private class processIndic( mess )
        private var m_graphics  = TArray; /* массив крутящихся симолов -\|/ */
        private var m_size      = 0;      /* размер массива                 */
        private var m_cur_index = 0;      /* текущий индекс массива         */
        private var m_mess      = "";     /* сообщение в статус-строке      */

        /* Выполнить один поворот индикатора */
        macro Inc()
            Message( m_mess, " ", m_graphics(m_cur_index) );
            m_cur_index = m_cur_index + 1;
            if ( m_cur_index >= m_size )
                m_cur_index = 0;
            end;
        end;

        /* Инициализировать статус-строку */
        Macro Init( mess )
            m_mess = mess;
            Inc();
        End;

        /* Очистить статус-строку */
        Macro Done()
            Message("");
        End;

        /* Деструктор класса */
        Macro Destructor()
            Done();
        End;

        /* Конструктор класса */
        Init(mess);

        m_graphics(0) = "-";
        m_graphics(1) = "\\";
        m_graphics(2) = "|";
        m_graphics(3) = "/";

        m_size = m_graphics.Size();
    end;

    /**
     * Указать точность для значения.
     * Количество знаков после запятой считывается из настройки реестра для главы Д.
     * @param value Значение, для которого применяем точность.
     * @return Если глава Д, то значение с изменненной точность, иначе точность не меняется.
     */
    private macro changePrecision(value)
        if (valType(value) == V_UNDEF)
            value = 0;
        end;

        if ((m_currentChapter == 5) AND (value != ""))
            return execExp("String(" + value + ":0:" + m_precisionChapter5 + ")");
        else
            return value;
        end;
    end;

    /**
     * Проверить маску
     * @param mask балансовый первого порядка или номер раздела.
     * @return True, если маска найдена, иначе false.
     */
    private macro isFoundMask(mask: String)
        m_arrayPrintMask.moveFirst();
        if (strLen(mask) == 1)     /* note: раздел */
            while (m_arrayPrintMask.moveNext())
                if ((strLen(m_arrayPrintMask.getCurrentItem()) == 3) AND (subStr(m_arrayPrintMask.getCurrentItem(), 1, 1) == mask))
                    return true;
                end;
            end;
        elif (strLen(mask) == 3)   /* note: балансовый счет первого порядка */
            currentIsInBwpStatus = false;
            while (m_arrayPrintMask.moveNext())
                if ((strLen(m_arrayPrintMask.getCurrentItem()) == 5) AND (subStr(m_arrayPrintMask.getCurrentItem(), 1, 3) == mask))
                    currentIsInBwpStatus = true;    //считаем, что имеются входящие в РПС счета второго порядка, используется потом для печати итогов по РПС
                    return true;
                end;
            end;
        elif (strLen(mask) == 4)   /* note: строка */
            while (m_arrayPrintMask.moveNext())
                if (subStr(m_arrayPrintMask.getCurrentItem(), 1) == mask)
                    return true;
                end;
            end;
        elif (strLen(mask) == 5)
            while (m_arrayPrintMask.moveNext())
                if ((strLen(m_arrayPrintMask.getCurrentItem()) == 5) AND (subStr(m_arrayPrintMask.getCurrentItem(), 1, 5) == mask))
                    return true;
                end;
            end;
        end;
        return false;
    end;

    /**
     * Проверить переменную
     * @param m_iteratorApplication8 Итератор по переменным.
     * @return True, если одно из значений отлично от нуля, иначе false.
     */
    private macro haveDataVariable(m_iteratorApplication8)
        return ((m_iteratorApplication8.currentItem.fieldValue("activeNatCur").exact  != 0) or
                (m_iteratorApplication8.currentItem.fieldValue("activeCur").exact     != 0) or
                (m_iteratorApplication8.currentItem.fieldValue("active").exact        != 0) or
                (m_iteratorApplication8.currentItem.fieldValue("passiveNatCur").exact != 0) or
                (m_iteratorApplication8.currentItem.fieldValue("passiveCur").exact    != 0) or
                (m_iteratorApplication8.currentItem.fieldValue("passive").exact       != 0))
    end;

    /**
     * Проверить выражение
     * @param currentString Выражение для разбора
     * @return True, если печатаем, иначе false.
     */
    private macro getStatusMask(currentString, chapter)
         var lengthString;

        //печать всех счетов
        if (m_printType == PRINT_ALL)
            return true;
        end;

        //заголовки и строки, которые печаются всегда
        if ((currentString == "Бн") or (index(currentString, "Пв") > 0))
            return true;
        end;

        lengthString = strLen(currentString);

        if ((lengthString == 11) or (lengthString == 15))   /* note: диапазон счетов (например "Бн460-Бн473" или Бн98000-Бн98035 (используется в шаблоне 5-й главы)*/
            var balance1 = ternary(lengthString == 11, Int(subStr(currentString, 3, 3)), Int(subStr(currentString, 3, 5)));
            var balance2 = ternary(lengthString == 11, Int(subStr(currentString, 9, 3)), Int(subStr(currentString, 11, 5)));

            currentIsInBwpStatus = false;

            while (balance1 <= balance2)
                if (isFoundMask(balance1))
                    currentIsInBwpStatus = true; // есть входящие в РПС счета
                    return true;
                end;
                balance1 = balance1 + 1;
            end;
            return false;
        end;

        //итоговые строки
        if (m_printType == PRINT_BWP)
            if (index(currentString, "Ст") > 0)   //проверяем только при определении вхождения в РПС, проверка на ненулевые значения делается в printTemplate
                return currentIsInBwpStatus;
            end;
        end;

        return isFoundMask(subStr(currentString, 3));

    end;

    /**
     * Создать рабочий шаблон
     * @param templateName Имя базового шаблона.
     * @return Рабочий шаблон.
     */
    private macro getWorkTemplateName(templateName, chapter)
        var  indic    = ProcessIndic("Подготовка шаблона \"" + templateName + "\" к печати отчета...");
        file templateBase() txt write;
        file templateWork() txt;
        var workTemplateName      = getTxtFileName(templateName);
        var currentString         = "";
        var ind                   = 0;
        var isAppend              = false;

        if (not Open(templateWork,templateName))
            MsgBox("Ошибка открытия файла шаблона|" + templateName);
            Exit(1);
        end;

        if ( not Open(templateBase,WorkTemplateName) )
            MsgBox("Ошибка открытия файла шаблона|" + WorkTemplateName);
            Exit(1);
        end;

        /* Цикл по строкам шаблона */
        rewind(templateWork);
        while(next(templateWork))

            indic.inc();

            /* Комментарии пропускаем */
            if (subStr(templateWork.Str,1,1) != COMMENT_SIGN)

                currentString = Trim(templateWork.Str);


                /* Служебная ли строка?.. */
                if (Index(currentString,SERVICE_SIGN) > 0)
                    /* ...да - проверяем маску... */
                    ind = Index(currentString,MASK_STR);
                    if (ind > 0)
                        currentString = Trim(SubStr(currentString,ind+StrLen(MASK_STR)));
                        isAppend = getStatusMask(currentString, chapter);
                    end;
                    /* ...или выражение */
                    ind = Index(currentString,EXPR_STR);
                    if (ind > 0)
                        currentString = Trim(SubStr(currentString,ind+StrLen(EXPR_STR)));
                        if ((((index(currentString, "printPril") != 0) OR (index(currentString, "printNote") != 0)) AND (NOT m_isPrintHead))
                            OR ((index(currentString, "printNote") != 0) AND (NOT (m_isPrintNote))))
                            isAppend = false;
                        else
                            isAppend = true;
                        end;
                    end;
                else
                /* ...нет - в зависимости от предыдущего тэга вставляем в рабочий шаблон или пропускаем */
                    if (isAppend)
                        templateBase.Str = templateWork.Str;

                        if (not Insert(templateBase))
                            MsgBox("Ошибка вставки строки в шаблон");
                            Exit(1);
                        end;
                    end;
                end;
            end;

        end;

        return WorkTemplateName;
    end;

    /**
     * Напечатать отчет
     * @param chapter Глава
     * @param isPrintHead Флаг печати заголовка.
     */
    macro printTemplate(chapter, isPrintHead, isPrintNote)
        m_currentChapter = chapter;
        var reportDate       = ДатаОтчета;
        var templateName     = "prbl" + chapter;
        var baseTemplateName = getBaseTemplateName(templateName,reportDate);    /* note: найти базовый шаблон */
        var lengthRow;

        currentIsInBwpStatus = false;
        m_isPrintHead = isPrintHead;
        m_isPrintNote = isPrintNote;
        /* note: сформировать массив масок */
        var variables;
        m_iteratorApplication8.moveFirst();
        while (NOT m_iteratorApplication8.isDone)
            lengthRow = strLen(m_iteratorApplication8.currentItem.fieldValue("row").currentAsString);
            if ( (lengthRow == 3) OR    /* note: БС 1 порядка */
                 (lengthRow == 4) OR    /* note: строка */
                 (lengthRow == 5) )     /* note: БС 2 порядка */

                if ( (m_printType == PRINT_ALL) or
                    ((m_printType == PRINT_NOZ) and (haveDataVariable(m_iteratorApplication8))) or
                    ((m_printType == PRINT_BWP) and (((lengthRow != 4) and (isBalanceInBwp(m_iteratorApplication8.currentItem.fieldValue("row").currentAsString, chapter))) or (lengthRow == 4))) )

                m_arrayPrintMask.push_back(m_iteratorApplication8.currentItem.fieldValue("row").currentAsString);

                variables = TVariables(m_iteratorApplication8.currentItem.fieldValue("row").currentAsString,
                                       m_iteratorApplication8.currentItem.fieldValue("activeNatCur").exact,
                                       m_iteratorApplication8.currentItem.fieldValue("activeCur").exact,
                                       m_iteratorApplication8.currentItem.fieldValue("active").exact,
                                       m_iteratorApplication8.currentItem.fieldValue("passiveNatCur").exact,
                                       m_iteratorApplication8.currentItem.fieldValue("passiveCur").exact,
                                       m_iteratorApplication8.currentItem.fieldValue("passive").exact);
                m_arrayVariables(m_arrayVariables.size) = variables;
            end;

            end;
            m_iteratorApplication8.moveNext();
        end;

        var workTemplateName = getWorkTemplateName(baseTemplateName, chapter);           /* note: рабочий шаблон - готовый к печати */
        var repForm          = TRepForm(workTemplateName);

        PRB_SetExternNames(repForm);

        var currentPrecision = 0;
        if (chapter == 5)
            currentPrecision = m_precisionChapter5;   /* note: Глава Д */
        else
            currentPrecision = 2;
        end;

        //инициализация полей шаблона нулевыми значениями
        m_iteratorApplication8.moveFirst();
        while (NOT m_iteratorApplication8.isDone)
            initizializeFieldTemplate(repForm, m_iteratorApplication8.currentItem.fieldValue("row").currentAsString, currentPrecision);
            m_iteratorApplication8.moveNext();
        end;
        initizializeFieldTemplate(repForm, "61601", currentPrecision);
        var i = 0;
        while (i < m_specialVariablesCount)
            var str: String = i;
            if (strLen(str) == 1)
                str = "100" + i;
            elif (strLen(str) == 2)
                str = "10" + i;
            else
                str = "1" + i;
            end;
            initizializeFieldTemplate(repForm, str, currentPrecision);
            i = i + 1;
        end;

        i = 0;
        /* note: заполнение шаблона значениями */
        while (i < m_arrayVariables.size)
            if (strLen(m_arrayVariables(i).row) == 4)   /* note: строки */
                setFieldTemplate(repForm, "Ис" + m_arrayVariables(i).row + "РуА", changePrecision(m_arrayVariables(i).activeNatCur));
                setFieldTemplate(repForm, "Ис" + m_arrayVariables(i).row + "ПоА", changePrecision(m_arrayVariables(i).activeCur));
                setFieldTemplate(repForm, "Ис" + m_arrayVariables(i).row + "__А", changePrecision(m_arrayVariables(i).active));
                setFieldTemplate(repForm, "Ис" + m_arrayVariables(i).row + "РуП", changePrecision(m_arrayVariables(i).passiveNatCur));
                setFieldTemplate(repForm, "Ис" + m_arrayVariables(i).row + "ПоП", changePrecision(m_arrayVariables(i).passiveCur));
                setFieldTemplate(repForm, "Ис" + m_arrayVariables(i).row + "__П", changePrecision(m_arrayVariables(i).passive));
            else
                setFieldTemplate(repForm, "Бн" + m_arrayVariables(i).row + "РуА", changePrecision(m_arrayVariables(i).activeNatCur));
                setFieldTemplate(repForm, "Бн" + m_arrayVariables(i).row + "ПоА", changePrecision(m_arrayVariables(i).activeCur));
                setFieldTemplate(repForm, "Бн" + m_arrayVariables(i).row + "__А", changePrecision(m_arrayVariables(i).active));
                setFieldTemplate(repForm, "Бн" + m_arrayVariables(i).row + "РуП", changePrecision(m_arrayVariables(i).passiveNatCur));
                setFieldTemplate(repForm, "Бн" + m_arrayVariables(i).row + "ПоП", changePrecision(m_arrayVariables(i).passiveCur));
                setFieldTemplate(repForm, "Бн" + m_arrayVariables(i).row + "__П", changePrecision(m_arrayVariables(i).passive));

                /* note: счета с признаком 0 (без остатка) */
                setFieldTemplate(repForm, "Бн" + m_arrayVariables(i).row + "Ру0", changePrecision(m_arrayVariables(i).activeNatCur - m_arrayVariables(i).passiveNatCur));
                setFieldTemplate(repForm, "Бн" + m_arrayVariables(i).row + "По0", changePrecision(m_arrayVariables(i).activeCur    - m_arrayVariables(i).passiveCur));
                setFieldTemplate(repForm, "Бн" + m_arrayVariables(i).row + "__0", changePrecision(m_arrayVariables(i).active       - m_arrayVariables(i).passive));
            end;
            i = i + 1;
        end;

        /* note: печать шаблона */
        repForm.write();
    end;

    /**
     * Конструктор класса.
     */
    macro constructorTApplicaion8ReportView()
        initRcbReportView("", "", RCB_PK_PERIOD, DATE_IN_PERIOD_FORMAT);
        m_iteratorApplication8 = TBalanceAttribute("ПРИЛОЖЕНИЕ8").getCurrentValue().createValueIterator();
        m_iteratorApplication8.moveFirst();
        m_printType = getPrintKind;
    end;

    constructorTApplicaion8ReportView();
end;
