/* ──────────────────────────────────────────────────────────────────────────┐
   RS-Bank V6                                                 R-Style Softlab
   Файл подсистемы "Регламентированная отчетность"

   Форма 134. Нормализатор отчета.

   CREATED : 17.07.12 Ser.
└────────────────────────────────────────────────────────────────────────── */
class (ReportNormalizer) F134ReportNormalizer(protocolView, balanceRcbReport, auditedBalanceRcbReport)
    initReportNormalizer(1000.0);

    private var m_report           = objectFactoryInstance.createReport();
    private var m_rcbReport        = m_report.getRcbReport();

    private var m_parameters       = f134Parameters();

    private var m_protocolView     = protocolView;
    private var m_balanceRcbReport = balanceRcbReport;

    private var m_strings = RcbArray();

    private var isOPF_KO_AO;

    private var m_auditedBalanceRcbReport = auditedBalanceRcbReport;


    private class InfoString()
        var id;
        var name;
    end;

    private macro initializeNode(currentNode, id : String, value)

        var node = currentNode.addNode(id);

        node.setExact(value.exact);
        node.setScaled(value.scaled);

        return node;
    end;

    /*id   - номер строки
      name - название переменной в отчёте*/
    private macro initializeString(id,name)

        var attributeValue;
        var info = InfoString();

        info.id   = id;
        info.name = name;

        m_strings.push_back(info);

        attributeValue = m_report.getPart("1").getAttribute(name).getRcbValue();
        if (attributeValue.isUndefined)
            msgBox("Переменная " + name + " неопределена. Данные нормализовать не удалось.");
            установитьФлагВозврата( OK_MACRO_FLAG);
            exit(1);
        else
            initializeNode(this, id, attributeValue);
        end;
    end;

    private macro setBalanceNode(balance)

        if (m_balanceRcbReport == null)
            return null;
        end;

        var balanceNode;
        var name = "Бн" + balance + "__А";
        var value;
        var attributeValue = m_balanceRcbReport.attributeValue(name);

        if (attributeValue == null)
            name = "Бн" + balance + "__П";
            attributeValue = m_balanceRcbReport.attributeValue(name);
            if (attributeValue == null)
                m_protocolView.printLine("Исходящему остатку по счету " + balance + " присвоено нулевое значение, т.к. соответствующая переменная не найдена.");
                value = TValue();
                value.exact  = 0;
                value.scaled = 0;
                balanceNode = initializeNode(this, "Бн" + balance, value);
            else
                if (attributeValue.isUndefined())
                    m_protocolView.printLine("Переменная " + name + " не определена.");
                    return null;
                else
                    balanceNode = initializeNode(this, "Бн" + balance, attributeValue);
                end;
            end;
        else
            if (attributeValue.isUndefined())
                m_protocolView.printLine("Переменная " + name + " не определена.");
                return null;
            else
                balanceNode = initializeNode(this, "Бн" + balance, attributeValue);
            end;
        end;

        balanceNode.setDef(0.5);
        return balanceNode;
    end;

    private macro getBalanceNode(balance)

        var attributeValue;
        var name;
        var balanceNode;

        balanceNode = node("Бн" + balance);

        if (balanceNode == null)
            balanceNode = setBalanceNode(balance);
        end;

        return balanceNode;

    end;

    private macro setBalanceNodes()

        var balance;
        var i = 1;

        while(getParm(i, balance))
            if (getBalanceNode(balance) == null)
                return false;
            end;
            i = i + 1;
        end;

        return true;
    end;

    private macro logicControl(value)
        if (value < 0)
            return false;
        end;
        return true;
    end;

    private macro printInfoForString(name)
        if ((name == "104") or (name == "104.1"))
            m_protocolView.printLine("Т.к. отсутствует рассчитанный баланс на " + m_parameters.ДатаАудПодтв_ТекГ + " или не определена переменная баланса, то сходимость для строки " + name + " не обеспечена.");
        else
            m_protocolView.printLine("Т.к. отсутствует рассчитанный баланс за аналогичный период или не определена переменная баланса, то сходимость для строки " + name + " не обеспечена.");
        end;
    end;

    private macro printInfoForStrings(name)
        m_protocolView.printLine("Т.к. отсутствует рассчитанный баланс за аналогичный период или не определена переменная баланса, то сходимость для выражания " + name + " не обеспечена.");
    end;

    private macro calculateVariable()
        var value = 0;
        var balance;
        var i = 1;

        while(getParm(i, balance))
            value = value + getBalanceNode(balance).getExact();
            i = i + 1;
        end;
        return value;
    end;


    private macro isAllAccountsHaveTCCCategory(masks : String, filter : String)
        var dataSet        = NULL;

        if (filter == NULL)
            filter = "1 = 1";
        end;

        dataSet = TRsbDataSet("SELECT repaccount.t_account"
            + "\n" +          "  FROM drepaccount_vw repaccount"
            + "\n" +          " WHERE " + filter
            + "\n" +          "   AND " + convertMaskToSqlFormat(masks, "t_account"));


        while (dataSet.moveNext())
            return false;
        end;
        return true;
    end;

    private macro getCategoryFilter(category : String, condition : String, restDate : Date)

        if (restDate == null)
            restDate = m_rcbReport.context.period.endDate();
        end;

        return "rsb_rep_ac.checkObjAttrPresenceByNum(" + RCB_OBJTYPE_ACCOUNT + ","
                                                       + RCB_OBJGROUP_REPORT + ","
                                                       + getSqlString(category) + ","
                                                       + "rsb_rep_ac.makeAccountId(repaccount.t_account, repaccount.t_fiid, repaccount.t_chapter, NULL), "
                                                       + getSqlDate(restDate) + ")" + condition;
    end;


    private macro initialize()
        /*инициализируем все необходимые строки*/
        initializeString("000","EqК");
        initializeString("101","Eq2_1_1(2_1_2)");
        initializeString("102","Eq2_1_3(2_1_4)");
        initializeString("103","Eq2_1_5");
        initializeString("104","Eq2_1_6");
        initializeString("104.1","Eq2_1_6переоценка");
        initializeString("105","Eq2_1_7");
        initializeString("106","Eq2_1_11");
        initializeString("107","Eq2_1_12");
        initializeString("108","EqИстОсн");
        initializeString("109","Eq2_2_1");
        initializeString("110","Eq2_2_2(2_2_3)");
        initializeString("111","Eq2_2_4");
        initializeString("112","Eq2_2_5");
        initializeString("113","Eq2_2_6");
        initializeString("114","Eq2_2_8");
        initializeString("115","Eq2_2_9");
        initializeString("116","EqОсн");
        initializeString("201","Eq3_1");
        initializeString("202","Eq3_3");
        initializeString("203","Eq3_4");
        initializeString("203.1","Eq3_4переоценка");
        initializeString("204","Eq3_5");
        initializeString("205","Eq3_6");
        initializeString("206","Eq3_7");
        initializeString("207","Eq3_9");
        initializeString("208","Eq3_10");
        initializeString("209","EqИстДоп");
        initializeString("210","EqДоп");
        initializeString("301","Eq4_1");
        initializeString("302","Eq4_2");
        initializeString("303","Eq4_3");
        initializeString("304","Eq4_5");
        initializeString("305","Eq4_6");
        initializeString("400","EqПром");
        initializeString("501","Eq5_1");
        initializeString("502","Eq5_2");
        initializeString("503","Eq5_3");

        getRegistryValue("REPTREG\\REP_GROUPS\\COMMON\\ОПФ_КО_АО" , V_BOOL, isOPF_KO_AO, NULL);
    end;
    private macro setAuditedBalanceNode(balance)

        if (m_auditedBalanceRcbReport == null)
            return null;
        end;

        var balanceNode;
        var name = "Бн" + balance + "__А";
        var value;
        var attributeValue = m_auditedBalanceRcbReport.attributeValue(name);

        if (attributeValue == null)
            name = "Бн" + balance + "__П";
            attributeValue = m_auditedBalanceRcbReport.attributeValue(name);
            if (attributeValue == null)
                m_protocolView.printLine("Исходящему остатку по счету " + balance + " присвоено нулевое значение, т.к. соответствующая переменная не найдена.");
                value = TValue();
                value.exact  = 0;
                value.scaled = 0;
                balanceNode = initializeNode(this, "АБн" + balance, value);
            else
                if (attributeValue.isUndefined())
                    m_protocolView.printLine("Переменная " + name + " не определена.");
                    return null;
                else
                    balanceNode = initializeNode(this, "АБн" + balance, attributeValue);
                end;
            end;
        else
            if (attributeValue.isUndefined())
                m_protocolView.printLine("Переменная " + name + " не определена.");
                return null;
            else
                balanceNode = initializeNode(this, "АБн" + balance, attributeValue);
            end;
        end;

        balanceNode.setDef(0.5);
        return balanceNode;
    end;

    private macro getAuditedBalanceNode(balance)

        var attributeValue;
        var name;
        var balanceNode;

        balanceNode = node("АБн" + balance);

        if (balanceNode == null)
            balanceNode = setAuditedBalanceNode(balance);
        end;

        return balanceNode;

    end;

    private macro setAuditedBalanceNodes()

        var balance;
        var i = 1;

        while(getParm(i, balance))
            if (getAuditedBalanceNode(balance) == null)
                return false;
            end;
            i = i + 1;
        end;

        return true;
    end;

    private macro calculateVariableAudited()
        var value = 0;
        var balance;
        var i = 1;

        while(getParm(i, balance))
            value = value + getAuditedBalanceNode(balance).getExact();
            i = i + 1;
        end;
        return value;
    end;

    /*правило для строки 104*/
    private macro ruleForEq2_1_6_first()
        var relation = ReportLinearRelation(RCB_RS_EQUAL);
        var value = TValue();

        private macro makeRelation()
            relation.lhs.plus(node("104"));

            if (value.exact <= 0)
                value.exact = 0;
                value.scaled = 0;
                initializeNode(this, "104(Y-X)", value);
                relation.rhs.plus(node("104(Y-X)"));
            else
                relation.rhs.plus(getAuditedBalanceNode("10603"));
                relation.rhs.plus(getAuditedBalanceNode("70601"));
                relation.rhs.plus(getAuditedBalanceNode("70602"));
                relation.rhs.plus(getAuditedBalanceNode("70603"));
                relation.rhs.plus(getAuditedBalanceNode("70604"));
                relation.rhs.plus(getAuditedBalanceNode("70605"));
                relation.rhs.plus(getAuditedBalanceNode("61301"));
                relation.rhs.plus(getAuditedBalanceNode("61304"));

                relation.rhs.minus(getAuditedBalanceNode("10605"));
                relation.rhs.minus(getAuditedBalanceNode("70606"));
                relation.rhs.minus(getAuditedBalanceNode("70607"));
                relation.rhs.minus(getAuditedBalanceNode("70608"));
                relation.rhs.minus(getAuditedBalanceNode("70609"));
                relation.rhs.minus(getAuditedBalanceNode("70610"));
                relation.rhs.minus(getAuditedBalanceNode("70611"));
                relation.rhs.minus(getAuditedBalanceNode("70612"));
                relation.rhs.minus(getAuditedBalanceNode("50905"));
                relation.rhs.minus(getAuditedBalanceNode("61401"));
                relation.rhs.minus(getAuditedBalanceNode("61403"));
            end;

            addRelation(relation);
        end;

        if (m_parameters.ПрибыльТекущегоГодаПодтверждена)
            if (not RcbApplication().currentReport.context.isSummaryMode)
                if (setAuditedBalanceNodes("10605", "70606", "70607", "70608", "70609", "70610", "70611", "70612", "50905", "61401", "61403",
                                           "10603", "70601", "70602", "70603", "70604", "70605", "61301", "61304"))

                    /*считаем Y*/
                    value.exact = calculateVariableAudited("10603", "70601", "70602", "70603", "70604", "70605", "61301", "61304");
                    /*вычитаем X*/
                    value.exact = value.exact - calculateVariableAudited("10605", "70606", "70607", "70608", "70609", "70610", "70611", "70612", "50905", "61401", "61403");
                    var restsClause = (    (getAuditedBalanceNode("10605").exact + getAuditedBalanceNode("70607").exact + getAuditedBalanceNode("10603").exact + getAuditedBalanceNode("70602").exact ==0)
                                        or
                                           (isAllAccountsHaveTCCCategory("10605*,70607*,10603*,70602*",getCategoryFilter("ТСС", "= 0")))
                                      );
                    if (m_parameters.isEndDateLastDayInMonth)
                        if (restsClause)
                            makeRelation();
                        end;
                    else
                        if ((getAuditedBalanceNode("52503").exact == 0) and restsClause)
                            makeRelation();
                        end;
                    end;
                else
                    printInfoForString("104");
                    return;
                end;
            end;
        else
            value.exact = 0;
            value.scaled = 0;
            makeRelation();
        end;
        relation = null;
    end;

    /*правило для строки 104.1*/
    private macro ruleForEq2_1_6_second()
        var relation = ReportLinearRelation(RCB_RS_EQUAL);

        if (node("104").getExact() > 0.0)
            if (not RcbApplication().currentReport.context.isSummaryMode)
                if (setAuditedBalanceNodes("10605", "70607", "10603", "70602"))

                    if (    (getAuditedBalanceNode("10605").exact + getAuditedBalanceNode("70607").exact + getAuditedBalanceNode("10603").exact + getAuditedBalanceNode("70602").exact ==0)
                         or
                            (isAllAccountsHaveTCCCategory("10605*,70607*,10603*,70602*",getCategoryFilter("ТСС", "= 0")))
                       )
                        relation.lhs.plus(node("104.1"));
                        /*считаем Y*/
                        relation.rhs.plus(getAuditedBalanceNode("10603"));
                        relation.rhs.plus(getAuditedBalanceNode("70602"));
                        /*вычитаем X*/
                        relation.rhs.minus(getAuditedBalanceNode("10605"));
                        relation.rhs.minus(getAuditedBalanceNode("70607"));

                        addRelation(relation);
                    end;
                else
                    printInfoForString("104");
                    return;
                end;
            end;
        end;
        relation = null;
    end;

    /*правило для строки 106*/
    private macro ruleForEq2_1_11()
        var relation = ReportLinearRelation(RCB_RS_EQUAL);
        var value = TValue();

        private macro addX1minusY1toRight()
            relation.rhs.plus(getBalanceNode("70302"));
            relation.rhs.plus(getBalanceNode("70701"));
            relation.rhs.plus(getBalanceNode("70702"));
            relation.rhs.plus(getBalanceNode("70703"));
            relation.rhs.plus(getBalanceNode("70704"));
            relation.rhs.plus(getBalanceNode("70705"));
            relation.rhs.plus(getBalanceNode("70801"));

            relation.rhs.minus(getBalanceNode("70402"));
            relation.rhs.minus(getBalanceNode("70706"));
            relation.rhs.minus(getBalanceNode("70707"));
            relation.rhs.minus(getBalanceNode("70708"));
            relation.rhs.minus(getBalanceNode("70709"));
            relation.rhs.minus(getBalanceNode("70710"));
            relation.rhs.minus(getBalanceNode("70711"));
            relation.rhs.minus(getBalanceNode("70712"));
            relation.rhs.minus(getBalanceNode("70802"));
        end;

        private macro addXminusYtoRight()
            relation.rhs.plus(getBalanceNode("10801"));
            relation.rhs.minus(getBalanceNode("10901"));
            addX1minusY1toRight();
        end;

        private macro getEq2_1_6FromPrevReport()

            var day;
            var month;
            var year;
            var m_report = RcbApplication().currentReport;
            dateSplit(m_report.context.period.endDate, day, month, year);

            var dataSet = TRsbDataSet("SELECT *"
                + "\n" +          "      FROM (SELECT *"
                + "\n" +          "              FROM (SELECT *"
                + "\n" +          "                      FROM (SELECT rep.*,"
                + "\n" +          "                                   CASE"
                + "\n" +          "                                      WHEN rep.t_ikindperiod = 5"
                + "\n" +          "                                      THEN 1"
                + "\n" +          "                                      WHEN rep.t_ikindperiod = 1"
                + "\n" +          "                                      THEN 2"
                + "\n" +          "                                      ELSE 3"
                + "\n" +          "                                   END t_kindPeriod"
                + "\n" +          "                              FROM dcy_rdate_dbt rep"
                + "\n" +          "                             WHERE rep.t_organizationstructure = " + m_report.context.organizationStructure
                + "\n" +          "                               AND rep.t_issuemode = " + m_report.context.issueMode
                + "\n" +          "                               AND rep.t_issummary = " + ternary(m_report.context.isSummaryMode, "CHR(88)", "CHR(0)")
                + "\n" +          "                               AND rep.t_inumdprt = " + m_report.context.departmentCode
                + "\n" +          "                               AND rep.t_bdrepdate <= " + getSqlDate(date(31,12,year -1))
                + "\n" +          "                               AND rep.t_bdprevdate <> TO_DATE('01.01.0001')"
                + "\n" +          "                               AND rep.t_iformid = 135"
                + "\n" +          "                               AND rep.t_ccalculated = CHR(88))"
                + "\n" +          "                  ORDER BY t_bdrepdate DESC, t_kindPeriod)"
                + "\n" +          "                     WHERE rownum < 2) report,"
                + "\n" +          "           (SELECT *"
                + "\n" +          "              FROM dcy_varsd_dbt"
                + "\n" +          "             WHERE t_iformid = 135"
                + "\n" +          "               AND t_szvarname = 'Eq2_1_6') varsd,"
                + "\n" +          "           (SELECT *"
                + "\n" +          "              FROM dcy_mreal_dbt"
                + "\n" +          "             WHERE t_iformid = 135) varmean"
                + "\n" +          "     WHERE varmean.t_issummary = report.t_issummary"
                + "\n" +          "       AND varmean.t_organizationstructure = report.t_organizationstructure"
                + "\n" +          "       AND varmean.t_issuemode = report.t_issuemode"
                + "\n" +          "       AND varmean.t_inumdprt = report.t_inumdprt"
                + "\n" +          "       AND varmean.t_bdrepdate = report.t_bdrepdate"
                + "\n" +          "       AND varmean.t_bdprevdate = report.t_bdprevdate"
                + "\n" +          "       AND varmean.t_iformid = report.t_iformid"
                + "\n" +          "       AND varmean.t_ivarid = varsd.t_ivarid");

            if (dataSet.moveNext)
                m_protocolView.printLine("Значение переменной Eq2_1_6 взято из рассчитанного отчета за период " + String(date(dataSet.bdprevdate)) + " - " + String(date(dataSet.bdrepdate)) + ".");
                m_protocolView.printLine("Eq2_1_6(пред. период) = " + String(dataSet.mean1:0:2) + " руб.");
                println();
                return dataSet.mean1;
            else
                m_protocolView.printLine("Подходящий период не найден, или значение переменной Eq2_1_6 не определено. По умолчанию ей присвоено значение 0.");
                return 0;
            end;
        end;

        relation.lhs.plus(node("106"));

        if (node("106").getExact() == 0)
            value.exact = 0;
            value.scaled = 0;
            initializeNode(this, "106(ZERO)", value);
            relation.rhs.plus(node("106(ZERO)"));
            addRelation(relation);
        else
            value.exact = getEq2_1_6FromPrevReport();

            if (node("106").getExact() == value.exact)
                initializeNode(this, "106(B)", value);
                relation.rhs.plus(node("106(B)"));
                addRelation(relation);
            else
                if (not RcbApplication().currentReport.context.isSummaryMode)
                    if (setBalanceNodes("70302", "70701", "70702", "70703", "70704", "70705", "70801",
                                        "70402", "70706", "70707", "70708", "70709", "70710", "70711", "70712", "70802"))

                        if (    (getBalanceNode("70702").exact + getBalanceNode("70707").exact ==0)
                             or
                                (isAllAccountsHaveTCCCategory("70702*,70707*",getCategoryFilter("ТСС", "= 0")))
                           )
                            if (node("106").getExact() == m_report.getPart("1").getAttribute("Eq_Прибыль_пред_лет").getValue())
                                if (not setBalanceNodes("10801", "10901"))
                                    printInfoForString("207");
                                    return;
                                end;
                                /*считаем X*/
                                value.exact = calculateVariable("10801", "70302", "70701", "70702", "70703", "70704", "70705", "70801");
                                /*вычитаем Y*/
                                value.exact = value.exact - calculateVariable("10901", "70402", "70706", "70707", "70708", "70709", "70710", "70711", "70712", "70802");

                                if (value.exact > 0)
                                    addXminusYtoRight();
                                    addRelation(relation);
                                end;
                            elif (node("106").getExact() == m_report.getPart("1").getAttribute("Eq_Прибыль_прошл_года").getValue())
                                /*считаем X*/
                                value.exact = calculateVariable("70302", "70701", "70702", "70703", "70704", "70705", "70801");
                                /*вычитаем Y*/
                                value.exact = value.exact - calculateVariable("70402", "70706", "70707", "70708", "70709", "70710", "70711", "70712", "70802");

                                if (value.exact > 0)
                                    addX1minusY1toRight();
                                    addRelation(relation);
                                end;
                            end;
                        end;
                    else
                        printInfoForString("106");
                        return;
                    end;
                end;
            end;
        end;
        relation = null;
    end;

    /*правило для строки 108*/
    private macro ruleForEqИстОсн()
        var relation : ReportLinearRelation;

        relation = ReportLinearRelation(RCB_RS_EQUAL);
        relation.lhs.plus(node("108"));
        relation.rhs.plus(node("101"));
        relation.rhs.plus(node("102"));
        relation.rhs.plus(node("103"));
        relation.rhs.plus(node("104"));
        relation.rhs.plus(node("105"));
        relation.rhs.plus(node("106"));
        relation.rhs.plus(node("107"));

        addRelation(relation);
        relation = null;
    end;

    /*правило для строки 109*/
    private macro ruleForEq2_2_1()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("60701", "60901", "60905", "60903"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.lhs.plus(node("109"));
            relation.rhs.plus(getBalanceNode("60701"));
            relation.rhs.plus(getBalanceNode("60901"));
            relation.rhs.plus(getBalanceNode("60905"));
            relation.rhs.minus(getBalanceNode("60903"));
            addRelation(relation);
            relation = null;
        else
            printInfoForString("109");
        end;
    end;

    /*правило для строки 110*/
    private macro ruleForEq2_2_2_2_2_3()
        var relation : ReportLinearRelation;

        if (isOPF_KO_AO)
            if (setBalanceNodes("10501", "60323"))
                relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
                relation.lhs.plus(node("110"));
                relation.rhs.plus(getBalanceNode("10501"));
                relation.rhs.plus(getBalanceNode("60323"));
                addRelation(relation);
                relation = null;
            else
                printInfoForString("110");
            end;
        else
            if (setBalanceNodes("10502"))
                relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
                relation.lhs.plus(node("110"));
                relation.rhs.plus(getBalanceNode("10502"));
                addRelation(relation);
                relation = null;
            else
                printInfoForString("110");
            end;

        end;
    end;

    /*правило для строки 111*/
    private macro ruleForEq2_2_4()
        var relation = ReportLinearRelation(RCB_RS_EQUAL);
        var value = TValue();

        relation.lhs.plus(node("111"));

        if (node("111").getExact() == 0)

            value.exact = 0;
            value.scaled = 0;
            initializeNode(this, "111(Y-X)", value);
            relation.rhs.plus(node("111(Y-X)"));
            addRelation(relation);

        elif (node("111").getExact() == (m_report.getPart("1").getAttribute("Eq_Прибыль_прошл_года").getValue() - m_report.getPart("1").getAttribute("Eq_Прибыль_пред_лет").getValue()))

            if (setBalanceNodes("10901", "10801"))
                relation.rhs.plus(getBalanceNode("10901"));
                relation.rhs.minus(getBalanceNode("10801"));
                addRelation(relation);
            else
                printInfoForString("111");
            end;

        elif (node("111").getExact() == -m_report.getPart("1").getAttribute("Eq_Прибыль_пред_лет").getValue())
            if (not RcbApplication().currentReport.context.isSummaryMode)
                if (setBalanceNodes("10801", "70302", "70701", "70702", "70703", "70704", "70705", "70801",
                                           "10901", "70402", "70706", "70707", "70708", "70709", "70710", "70711", "70712", "70802"))

                    if (    (getBalanceNode("70702").exact + getBalanceNode("70707").exact ==0)
                         or
                            (isAllAccountsHaveTCCCategory("70702*,70707*",getCategoryFilter("ТСС", "= 0")))
                       )
                        /*считаем Y*/
                        value.exact = calculateVariable("10901", "70402", "70706", "70707", "70708", "70709", "70710", "70711", "70712", "70802");
                        /*вычитаем X*/
                        value.exact = value.exact - calculateVariable("10801", "70302", "70701", "70702", "70703", "70704", "70705", "70801");

                        if (value.exact > 0)
                            relation.rhs.plus(getBalanceNode("10901"));
                            relation.rhs.plus(getBalanceNode("70402"));
                            relation.rhs.plus(getBalanceNode("70706"));
                            relation.rhs.plus(getBalanceNode("70707"));
                            relation.rhs.plus(getBalanceNode("70708"));
                            relation.rhs.plus(getBalanceNode("70709"));
                            relation.rhs.plus(getBalanceNode("70710"));
                            relation.rhs.plus(getBalanceNode("70711"));
                            relation.rhs.plus(getBalanceNode("70712"));
                            relation.rhs.plus(getBalanceNode("70802"));

                            relation.rhs.minus(getBalanceNode("10801"));
                            relation.rhs.minus(getBalanceNode("70302"));
                            relation.rhs.minus(getBalanceNode("70701"));
                            relation.rhs.minus(getBalanceNode("70702"));
                            relation.rhs.minus(getBalanceNode("70703"));
                            relation.rhs.minus(getBalanceNode("70704"));
                            relation.rhs.minus(getBalanceNode("70705"));
                            relation.rhs.minus(getBalanceNode("70801"));

                            addRelation(relation);
                        end;
                    end;
                else
                    printInfoForString("111");
                    return;
                end;
            end;
        end;
        relation = null;
    end;

    /*правило для строки 112*/
    private macro ruleForEq2_2_5_first()
        var relation = ReportLinearRelation(RCB_RS_EQUAL);
        var value = TValue();

        relation.lhs.plus(node("112"));

        private macro checkNullRestOrCategoryTCC()
            if (not setBalanceNodes("10605", "70606", "70607", "70608", "70609", "70610", "70611", "70612", "50905", "61401", "61403",
                                    "10603", "70601", "70602", "70603", "70604", "70605", "61301", "61304"))
                printInfoForString("112");
                return;
            end;

            if (    (getBalanceNode("10605").exact + getBalanceNode("70607").exact + getBalanceNode("10603").exact + getBalanceNode("70602").exact ==0)
                 or
                    (isAllAccountsHaveTCCCategory("10605*,70607*,10603*,70602*",getCategoryFilter("ТСС", "= 0"))))

                /*считаем х*/
                value.exact = calculateVariable("10605", "70606", "70607", "70608", "70609", "70610", "70611", "70612", "50905", "61401", "61403");
                /*вычитаем у*/
                value.exact = value.exact - calculateVariable("10603", "70601", "70602", "70603", "70604", "70605", "61301", "61304");

                if (value.exact + node("104").getExact() > 0.0)
                    relation.rhs.plus(getBalanceNode("10605"));
                    relation.rhs.plus(getBalanceNode("70606"));
                    relation.rhs.plus(getBalanceNode("70607"));
                    relation.rhs.plus(getBalanceNode("70608"));
                    relation.rhs.plus(getBalanceNode("70609"));
                    relation.rhs.plus(getBalanceNode("70610"));
                    relation.rhs.plus(getBalanceNode("70611"));
                    relation.rhs.plus(getBalanceNode("70612"));
                    relation.rhs.plus(getBalanceNode("50905"));
                    relation.rhs.plus(getBalanceNode("61401"));
                    relation.rhs.plus(getBalanceNode("61403"));
                    relation.rhs.minus(getBalanceNode("10603"));
                    relation.rhs.minus(getBalanceNode("70601"));
                    relation.rhs.minus(getBalanceNode("70602"));
                    relation.rhs.minus(getBalanceNode("70603"));
                    relation.rhs.minus(getBalanceNode("70604"));
                    relation.rhs.minus(getBalanceNode("70605"));
                    relation.rhs.minus(getBalanceNode("61301"));
                    relation.rhs.minus(getBalanceNode("61304"));
                    relation.rhs.plus(node("104"));
                else
                    value.exact = 0;
                    value.scaled = 0;
                    initializeNode(this, "112(ZERO)", value);
                    relation.rhs.plus(node("112(ZERO)"));
                end;
                addRelation(relation);
            end;
        end;

        if (not RcbApplication().currentReport.context.isSummaryMode)
            if (m_parameters.isEndDateLastDayInMonth)
                checkNullRestOrCategoryTCC();
            else
                if (not setBalanceNodes("52503"))
                    printInfoForString("112");
                    return;
                end;

                if (getBalanceNode("52503").getExact() == 0.0)
                    checkNullRestOrCategoryTCC();
                end;
            end;
        end;

        relation = null;
    end;
    /*правило для строки 112.1*/
    private macro ruleForEq2_2_5_second()
        var relation = ReportLinearRelation(RCB_RS_EQUAL);

        if (not RcbApplication().currentReport.context.isSummaryMode)
            if (node("112").getExact() > 0.0)
                if (setBalanceNodes("10605", "70607", "10603", "70602"))

                    if (    (getBalanceNode("10605").exact + getBalanceNode("70607").exact + getBalanceNode("10603").exact + getBalanceNode("70602").exact ==0)
                         or
                            (isAllAccountsHaveTCCCategory("10605*,70607*,10603*,70602*",getCategoryFilter("ТСС", "= 0")))
                       )
                        relation.lhs.plus(node("112.1"));
                        relation.rhs.plus(getBalanceNode("10605"));
                        relation.rhs.plus(getBalanceNode("70607"));
                        relation.rhs.minus(getBalanceNode("10603"));
                        relation.rhs.minus(getBalanceNode("70602"));
                        relation.rhs.plus(node("104.1"));
                        addRelation(relation);
                    end;
                else
                    printInfoForString("112.1");
                    return;
                end;
            end;
        end;
        relation = null;
    end;

    /*правило для строки 113*/
    private macro ruleForEq2_2_6()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("50605", "50618", "50621", "50620", "50705", "50718", "50721", "50720",
                            "60101", "60102", "60103", "60104", "60201", "60202", "60203", "60204",
                            "47408"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.lhs.plus(node("113"));
            relation.rhs.plus(getBalanceNode("50605"));
            relation.rhs.plus(getBalanceNode("50618"));
            relation.rhs.plus(getBalanceNode("50621"));
            relation.rhs.minus(getBalanceNode("50620"));
            relation.rhs.plus(getBalanceNode("50705"));
            relation.rhs.plus(getBalanceNode("50718"));
            relation.rhs.plus(getBalanceNode("50721"));
            relation.rhs.minus(getBalanceNode("50720"));
            relation.rhs.plus(getBalanceNode("60101"));
            relation.rhs.plus(getBalanceNode("60102"));
            relation.rhs.plus(getBalanceNode("60103"));
            relation.rhs.plus(getBalanceNode("60104"));
            relation.rhs.plus(getBalanceNode("60201"));
            relation.rhs.plus(getBalanceNode("60202"));
            relation.rhs.plus(getBalanceNode("60203"));
            relation.rhs.plus(getBalanceNode("60204"));
            relation.rhs.plus(getBalanceNode("47408"));
            addRelation(relation);
            relation = null;
        else
            printInfoForString("113");
        end;
    end;

    /*правило для строки 116*/
    private macro ruleForEqОсн()
        var relation : ReportLinearRelation;

        relation = ReportLinearRelation(RCB_RS_EQUAL);
        relation.lhs.plus(node("116"));
        relation.rhs.plus(node("108"));
        relation.rhs.minus(node("109"));
        relation.rhs.minus(node("110"));
        relation.rhs.minus(node("111"));
        relation.rhs.minus(node("112"));
        relation.rhs.minus(node("113"));
        relation.rhs.minus(node("114"));
        relation.rhs.minus(node("115"));
        addRelation(relation);
        relation = null;
    end;

    /*правило для строки 202*/
    private macro ruleForEq3_3()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("107"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.lhs.plus(node("202"));
            relation.rhs.plus(getBalanceNode("107"));
            relation.rhs.minus(node("103"));
            relation.rhs.minus(node("105"));
            addRelation(relation);
            relation = null;
        else
            printInfoForString("202");
        end;
    end;

    /*правило для строки 203*/
    private macro ruleForEq3_4_first()
        var relation = ReportLinearRelation(RCB_RS_EQUAL);
        var value = TValue();

        relation.lhs.plus(node("203"));

        private macro checkNullRestOrCategoryTCC()
            if (not setBalanceNodes("10603", "70601", "70602", "70603", "70604", "70605", "61301", "61304",
                                    "10605", "70606", "70607", "70608", "70609", "70610", "70611", "70612", "50905", "61401", "61403"))
                printInfoForString("203");
                return;
            end;

            if (    (getBalanceNode("10605").exact + getBalanceNode("70607").exact + getBalanceNode("10603").exact + getBalanceNode("70602").exact ==0)
                 or
                    (isAllAccountsHaveTCCCategory("10605*,70607*,10603*,70602*",getCategoryFilter("ТСС", "= 0"))))

                /*считаем X*/
                value.exact = calculateVariable("10603", "70601", "70602", "70603", "70604", "70605", "61301", "61304");
                /*вычитаем Y*/
                value.exact = value.exact - calculateVariable("10605", "70606", "70607", "70608", "70609", "70610", "70611", "70612", "50905", "61401", "61403");

                if (value.exact - node("104").getExact() > 0.0)
                    relation.rhs.plus(getBalanceNode("10603"));
                    relation.rhs.plus(getBalanceNode("70601"));
                    relation.rhs.plus(getBalanceNode("70602"));
                    relation.rhs.plus(getBalanceNode("70603"));
                    relation.rhs.plus(getBalanceNode("70604"));
                    relation.rhs.plus(getBalanceNode("70605"));
                    relation.rhs.plus(getBalanceNode("61301"));
                    relation.rhs.plus(getBalanceNode("61304"));
                    relation.rhs.minus(getBalanceNode("10605"));
                    relation.rhs.minus(getBalanceNode("70606"));
                    relation.rhs.minus(getBalanceNode("70607"));
                    relation.rhs.minus(getBalanceNode("70608"));
                    relation.rhs.minus(getBalanceNode("70609"));
                    relation.rhs.minus(getBalanceNode("70610"));
                    relation.rhs.minus(getBalanceNode("70611"));
                    relation.rhs.minus(getBalanceNode("70612"));
                    relation.rhs.minus(getBalanceNode("50905"));
                    relation.rhs.minus(getBalanceNode("61401"));
                    relation.rhs.minus(getBalanceNode("61403"));
                    relation.rhs.minus(node("104"));
                else
                    value.exact = 0;
                    value.scaled = 0;
                    initializeNode(this, "203(ZERO)", value);
                    relation.rhs.plus(node("203(ZERO)"));
                end;
                addRelation(relation);
            end;
        end;

        if (not RcbApplication().currentReport.context.isSummaryMode)
            if (m_parameters.isEndDateLastDayInMonth)
                checkNullRestOrCategoryTCC();
            else
                if (not setBalanceNodes("52503"))
                    printInfoForString("203");
                    return;
                end;

                if (getBalanceNode("52503").getExact() == 0.0)
                    checkNullRestOrCategoryTCC();
                end;
            end;
        end;

        relation = null;
    end;

    /*правило для строки 203.1*/
    private macro ruleForEq3_4_second()
        var relation = ReportLinearRelation(RCB_RS_EQUAL);

        if (not RcbApplication().currentReport.context.isSummaryMode)
            if (node("203").getExact() > 0.0)
                if (setBalanceNodes("10605", "70607", "10603", "70602"))

                    if (    (getBalanceNode("10605").exact + getBalanceNode("70607").exact + getBalanceNode("10603").exact + getBalanceNode("70602").exact ==0)
                         or
                            (isAllAccountsHaveTCCCategory("10605*,70607*,10603*,70602*",getCategoryFilter("ТСС", "= 0")))
                       )
                        relation.lhs.plus(node("203.1"));
                        relation.rhs.plus(getBalanceNode("10603"));
                        relation.rhs.plus(getBalanceNode("70602"));
                        relation.rhs.minus(getBalanceNode("10605"));
                        relation.rhs.minus(getBalanceNode("70607"));
                        relation.rhs.minus(node("104.1"));
                        addRelation(relation);
                    end;
                else
                    printInfoForString("203.1");
                    return;
                end;
            end;
        end;
        relation = null;
    end;

    /*правило для строки 206*/
    private macro ruleForEq3_7()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("10207"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.lhs.plus(node("206"));
            relation.rhs.plus(getBalanceNode("10207"));
            addRelation(relation);
            relation = null;
        else
            printInfoForString("206");
        end;
    end;

    /*правило для строки 207*/
    private macro ruleForEq3_9()
        var relation = ReportLinearRelation(RCB_RS_EQUAL);
        var value = TValue();

        private macro addX1minusY1toRight()
            relation.rhs.plus(getBalanceNode("70302"));
            relation.rhs.plus(getBalanceNode("70701"));
            relation.rhs.plus(getBalanceNode("70702"));
            relation.rhs.plus(getBalanceNode("70703"));
            relation.rhs.plus(getBalanceNode("70704"));
            relation.rhs.plus(getBalanceNode("70705"));
            relation.rhs.plus(getBalanceNode("70801"));

            relation.rhs.minus(getBalanceNode("70402"));
            relation.rhs.minus(getBalanceNode("70706"));
            relation.rhs.minus(getBalanceNode("70707"));
            relation.rhs.minus(getBalanceNode("70708"));
            relation.rhs.minus(getBalanceNode("70709"));
            relation.rhs.minus(getBalanceNode("70710"));
            relation.rhs.minus(getBalanceNode("70711"));
            relation.rhs.minus(getBalanceNode("70712"));
            relation.rhs.minus(getBalanceNode("70802"));
        end;

        private macro addXminusYminus106toRight()
            relation.rhs.plus(getBalanceNode("10801"));
            relation.rhs.minus(getBalanceNode("10901"));
            relation.rhs.minus(node("106"));
            addX1minusY1toRight();
        end;

        relation.lhs.plus(node("207"));

        if (node("207").getExact() == 0)
            value.exact = 0;
            value.scaled = 0;
            initializeNode(this, "207(ZERO)", value);
            relation.rhs.plus(node("207(ZERO)"));
            addRelation(relation);
        else
            if (not RcbApplication().currentReport.context.isSummaryMode)
                if (setBalanceNodes("70302", "70701", "70702", "70703", "70704", "70705", "70801",
                                    "70402", "70706", "70707", "70708", "70709", "70710", "70711", "70712", "70802"))

                    if (    (getBalanceNode("70702").exact + getBalanceNode("70707").exact ==0)
                         or
                            (isAllAccountsHaveTCCCategory("70702*,70707*",getCategoryFilter("ТСС", "= 0")))
                       )
                        if (node("207").getExact() == (m_report.getPart("1").getAttribute("Eq_Прибыль_пред_лет").getValue() - node("106").getExact()))
                            if (not setBalanceNodes("10801", "10901"))
                                printInfoForString("207");
                                return;
                            end;

                            /*считаем X*/
                            value.exact = calculateVariable("10801", "70302", "70701", "70702", "70703", "70704", "70705", "70801");
                            /*вычитаем Y*/
                            value.exact = value.exact - calculateVariable("10901", "70402", "70706", "70707", "70708", "70709", "70710", "70711", "70712", "70802");
                            /*вычитаем строку 106*/
                            value.exact = value.exact - node("106").getExact();

                            if (value.exact > 0)
                                addXminusYminus106toRight();
                                addRelation(relation);
                            end;
                        elif (node("207").getExact() == m_report.getPart("1").getAttribute("Eq_Прибыль_прошл_года").getValue())
                            /*считаем X*/
                            value.exact = calculateVariable("70302", "70701", "70702", "70703", "70704", "70705", "70801");
                            /*вычитаем Y*/
                            value.exact = value.exact - calculateVariable("70402", "70706", "70707", "70708", "70709", "70710", "70711", "70712", "70802");

                            if (value.exact > 0)
                                addX1minusY1toRight();
                                addRelation(relation);
                            end;
                        end;
                    end;
                else
                    printInfoForString("207");
                    return;
                end;
            end;
        end;
        relation = null;
    end;

    /*правило для строки 400*/
    private macro ruleForEqПром()
        var relation : ReportLinearRelation;

        relation = ReportLinearRelation(RCB_RS_EQUAL);
        relation.lhs.plus(node("400"));
        relation.rhs.plus(node("116"));
        relation.rhs.plus(node("210"));
        relation.rhs.minus(node("301"));
        relation.rhs.minus(node("302"));
        relation.rhs.minus(node("303"));
        relation.rhs.minus(node("304"));
        relation.rhs.minus(node("305"));
        addRelation(relation);
        relation = null;
    end;


    /*правило для строки 210*/
    private macro ruleForEqДоп()
        var relation : ReportLinearRelation;
        relation = ReportLinearRelation(RCB_RS_EQUAL);
        relation.lhs.plus(node("210"));

        if (node("116").getExact() <= 0.0)
            relation.rhs.plus(0.0);
        else
            if (node("116").getExact() > node("209").getExact())
                relation.rhs.plus(node("209"));
            else
                relation.rhs.plus(node("116"));
            end;
        end;

        addRelation(relation);
        relation = null;
    end;

    /*правило для строки 204*/
    private macro ruleForEq3_5_2()
        var relation : ReportLinearRelation;

        if (node("116").getExact() > 0.0)
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.lhs.plus(node("204"));
            relation.rhs.plus(node("116"));
            addRelation(relation);
            relation = null;
        end;
    end;


    /*Правила из таблицы 1*/

    /*правило для строки 000*/
    private macro ruleForEqК()
        var relation : ReportLinearRelation;
        relation = ReportLinearRelation(RCB_RS_EQUAL);
        relation.lhs.plus(node("000"));
        relation.rhs.plus(node("400"));
        relation.rhs.minus(node("501"));
        relation.rhs.minus(node("502"));
        relation.rhs.minus(node("503"));
        addRelation(relation);
        //node("000").errorPriority = 0; --использовалось для сторого нормализатора
        relation = null;
    end;

    /*правило для строки 101*/
    private macro ruleForEq2_1_1_2_1_2()
        var relation : ReportLinearRelation;
        var balance;

        if (isOPF_KO_AO)
            balance = "10207";
        else
            balance = "10208";
        end;

        if (setBalanceNodes(balance))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.rhs.plus(getBalanceNode(balance));
            relation.lhs.plus(node("101"));
            addRelation(relation);
            relation = null;
        else
            printInfoForString("101");
        end;
    end;

    /*правило для строки 102*/
    private macro ruleForEq2_1_3_2_1_4()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("10602"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.rhs.plus(getBalanceNode("10602"));
            relation.lhs.plus(node("102"));
            addRelation(relation);
            relation = null;
        else
            printInfoForString("102");
        end;
    end;

    /*правило для строки 103*/
    private macro ruleForEq2_1_5()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("107"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.rhs.plus(getBalanceNode("107"));
            relation.lhs.plus(node("103"));
            addRelation(relation);
            relation = null;
        else
            printInfoForString("103");
        end;
    end;

    /*правило для строки 105*/
    private macro ruleForEq2_1_7()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("107"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.rhs.plus(getBalanceNode("107"));
            relation.lhs.plus(node("105"));
            addRelation(relation);
            relation = null;
        else
            printInfoForString("105");
        end;
    end;

    /*правило для строки 111*/
    private macro ruleForEq2_2_5()

        private macro checkNullRestOrCategoryTCC()
            var relation : ReportLinearRelation;
            var value = TValue();

            if (not setBalanceNodes("10605", "70606", "70607", "70608", "70609", "70610", "70611", "70612", "50905", "61401", "61403",
                                    "10603", "70601", "70602", "70603", "70604", "70605", "61301", "61304"))
                printInfoForString("111");
                return;
            end;

            /*считаем х*/
                value.exact = calculateVariable("10605", "70606", "70607", "70608", "70609", "70610", "70611", "70612", "50905", "61401", "61403");
                /*вычитаем у*/
                value.exact = value.exact - calculateVariable("10603", "70601", "70602", "70603", "70604", "70605", "61301", "61304");

            if (    (getBalanceNode("10605").exact + getBalanceNode("70607").exact + getBalanceNode("10603").exact + getBalanceNode("70602").exact ==0)
                 or
                    (isAllAccountsHaveTCCCategory("10605*,70607*,10603*,70602*",getCategoryFilter("ТСС", "= 0"))))

                relation = ReportLinearRelation(RCB_RS_EQUAL);
            else
                if (value.exact + node("104").getExact() > 0.0)
                    relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
                else
                    relation = ReportLinearRelation(RCB_RS_EQUAL);
                end;

            end;

            if (value.exact + node("104").getExact() > 0.0)
                relation.lhs.plus(node("111"));
                relation.rhs.plus(getBalanceNode("10605"));
                relation.rhs.plus(getBalanceNode("70606"));
                relation.rhs.plus(getBalanceNode("70607"));
                relation.rhs.plus(getBalanceNode("70608"));
                relation.rhs.plus(getBalanceNode("70609"));
                relation.rhs.plus(getBalanceNode("70610"));
                relation.rhs.plus(getBalanceNode("70611"));
                relation.rhs.plus(getBalanceNode("70612"));
                relation.rhs.plus(getBalanceNode("50905"));
                relation.rhs.plus(getBalanceNode("61401"));
                relation.rhs.plus(getBalanceNode("61403"));
                relation.rhs.minus(getBalanceNode("10603"));
                relation.rhs.minus(getBalanceNode("70601"));
                relation.rhs.minus(getBalanceNode("70602"));
                relation.rhs.minus(getBalanceNode("70603"));
                relation.rhs.minus(getBalanceNode("70604"));
                relation.rhs.minus(getBalanceNode("70605"));
                relation.rhs.minus(getBalanceNode("61301"));
                relation.rhs.minus(getBalanceNode("61304"));
                relation.rhs.plus(node("104"));
            else
                value.exact = 0;
                value.scaled = 0;
                initializeNode(this, "X-Y+104", value);
                relation.lhs.plus(node("111"));
                relation.rhs.plus(node("X-Y+104"));
            end;

            addRelation(relation);
            relation = null;
        end;

        private macro ruleIfKindMonth()
            checkNullRestOrCategoryTCC();
        end;

        private macro ruleIfKindNoMonth()
            var relation : ReportLinearRelation;
            var value = TValue();

            if (not setBalanceNodes("10605", "70606", "70607", "70608", "70609", "70610", "70611", "70612", "50905", "61401", "61403","52503",
                                    "10603", "70601", "70602", "70603", "70604", "70605", "61301", "61304"))
                printInfoForString("111");
                return;
            end;

            if (getBalanceNode("52503").getExact() == 0.0)
                checkNullRestOrCategoryTCC();
            else
                /*считаем х1*/
                value.exact = calculateVariable("10605", "70606", "70607", "70608", "70609", "70610", "70611", "70612", "50905", "61401", "61403", "52503");
                /*вычитаем у*/
                value.exact = value.exact - calculateVariable("10603", "70601", "70602", "70603", "70604", "70605", "61301", "61304");

                if (value.exact + node("104").getExact() > 0.0)
                    relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
                    relation.lhs.plus(node("111"));
                    relation.rhs.plus(getBalanceNode("10605"));
                    relation.rhs.plus(getBalanceNode("70606"));
                    relation.rhs.plus(getBalanceNode("70607"));
                    relation.rhs.plus(getBalanceNode("70608"));
                    relation.rhs.plus(getBalanceNode("70609"));
                    relation.rhs.plus(getBalanceNode("70610"));
                    relation.rhs.plus(getBalanceNode("70611"));
                    relation.rhs.plus(getBalanceNode("70612"));
                    relation.rhs.plus(getBalanceNode("50905"));
                    relation.rhs.plus(getBalanceNode("61401"));
                    relation.rhs.plus(getBalanceNode("61403"));
                    relation.rhs.plus(getBalanceNode("52503"));
                    relation.rhs.minus(getBalanceNode("10603"));
                    relation.rhs.minus(getBalanceNode("70601"));
                    relation.rhs.minus(getBalanceNode("70602"));
                    relation.rhs.minus(getBalanceNode("70603"));
                    relation.rhs.minus(getBalanceNode("70604"));
                    relation.rhs.minus(getBalanceNode("70605"));
                    relation.rhs.minus(getBalanceNode("61301"));
                    relation.rhs.minus(getBalanceNode("61304"));
                    relation.rhs.plus(node("104"));
                else
                    relation = ReportLinearRelation(RCB_RS_EQUAL);
                    value.exact = 0;
                    value.scaled = 0;
                    initializeNode(this, "X-Y+104", value);
                    relation.lhs.plus(node("111"));
                    relation.rhs.plus(node("X-Y+104"));
                end;

                addRelation(relation);
                relation = null;
            end;

        end;

        if (m_rcbReport.context.period.kind == RCB_PK_MONTH)
            ruleIfKindMonth();
        else
            ruleIfKindNoMonth();
        end;
    end;

    /*правило для строки 201*/
    private macro ruleForEq3_1()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("10601"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.lhs.plus(node("201"));
            relation.rhs.plus(getBalanceNode("10601"));
            addRelation(relation);
            relation = null;
        else
            printInfoForString("201");
        end;
    end;

    /*правило для строки 203*/
    private macro ruleForEq3_4()
    end;

    /*правило для строки 204*/
    private macro ruleForEq3_5_1()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("20313", "20314", "31309", "31409", "31509", "31609", "41107", "41207",
                            "41307", "41407", "41507", "41607", "41707", "41907", "42007", "42107",
                            "42207", "42507", "42807", "42907", "43007", "43107", "43207", "43307",
                            "43407", "43507", "43607", "43707", "43907", "44007", "52006"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.lhs.plus(node("204"));
            relation.rhs.plus(getBalanceNode("20313"));
            relation.rhs.plus(getBalanceNode("20314"));
            relation.rhs.plus(getBalanceNode("31309"));
            relation.rhs.plus(getBalanceNode("31409"));
            relation.rhs.plus(getBalanceNode("31509"));
            relation.rhs.plus(getBalanceNode("31609"));
            relation.rhs.plus(getBalanceNode("41107"));
            relation.rhs.plus(getBalanceNode("41207"));
            relation.rhs.plus(getBalanceNode("41307"));
            relation.rhs.plus(getBalanceNode("41407"));
            relation.rhs.plus(getBalanceNode("41507"));
            relation.rhs.plus(getBalanceNode("41607"));
            relation.rhs.plus(getBalanceNode("41707"));
            relation.rhs.plus(getBalanceNode("41807"));
            relation.rhs.plus(getBalanceNode("41907"));
            relation.rhs.plus(getBalanceNode("42007"));
            relation.rhs.plus(getBalanceNode("42107"));
            relation.rhs.plus(getBalanceNode("42207"));
            relation.rhs.plus(getBalanceNode("42507"));
            relation.rhs.plus(getBalanceNode("42807"));
            relation.rhs.plus(getBalanceNode("42907"));
            relation.rhs.plus(getBalanceNode("43007"));
            relation.rhs.plus(getBalanceNode("43107"));
            relation.rhs.plus(getBalanceNode("43207"));
            relation.rhs.plus(getBalanceNode("43307"));
            relation.rhs.plus(getBalanceNode("43407"));
            relation.rhs.plus(getBalanceNode("43507"));
            relation.rhs.plus(getBalanceNode("43607"));
            relation.rhs.plus(getBalanceNode("43707"));
            relation.rhs.plus(getBalanceNode("43807"));
            relation.rhs.plus(getBalanceNode("43907"));
            relation.rhs.plus(getBalanceNode("44007"));
            relation.rhs.plus(getBalanceNode("52006"));
            addRelation(relation);
            relation = null;
        else
            printInfoForString("204");
        end;
    end;

    /*правило для строки 205*/
    private macro ruleForEq3_6()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("102"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.lhs.plus(node("205"));
            relation.rhs.plus(getBalanceNode("102"));
            addRelation(relation);
            relation = null;
        else
            printInfoForString("205");
        end;
    end;

    /*правило для строки 209*/
    private macro ruleForEqИстДоп()
        var relation : ReportLinearRelation;

        relation = ReportLinearRelation(RCB_RS_EQUAL);
        relation.lhs.plus(node("209"));
        relation.rhs.plus(node("201"));
        relation.rhs.plus(node("202"));
        relation.rhs.plus(node("203"));
        relation.rhs.plus(node("204"));
        relation.rhs.plus(node("205"));
        relation.rhs.plus(node("206"));
        relation.rhs.plus(node("207"));
        relation.rhs.minus(node("208"));
        addRelation(relation);
        relation = null;

    end;

    /*правило для строки 304*/
    private macro ruleForEq4_5()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("47404", "47406", "47410", "47413", "47415", "47417", "47420", "60302",
                            "60306", "60308", "60310", "60347"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.lhs.plus(node("304"));
            relation.rhs.plus(getBalanceNode("47404"));
            relation.rhs.plus(getBalanceNode("47406"));
            relation.rhs.plus(getBalanceNode("47410"));
            relation.rhs.plus(getBalanceNode("47413"));
            relation.rhs.plus(getBalanceNode("47415"));
            relation.rhs.plus(getBalanceNode("47417"));
            relation.rhs.plus(getBalanceNode("47420"));
            relation.rhs.plus(getBalanceNode("60302"));
            relation.rhs.plus(getBalanceNode("60306"));
            relation.rhs.plus(getBalanceNode("60308"));
            relation.rhs.plus(getBalanceNode("60310"));
            relation.rhs.plus(getBalanceNode("60347"));
            addRelation(relation);
            relation = null;
        else
            printInfoForString("304");
        end;
    end;

    /*правило для строки 305*/
    private macro ruleForEq4_6()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("32009", "32209", "47802", "50106", "50107", "50110", "50207", "50208",
                            "50211", "50307", "50308", "50311"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.lhs.plus(node("305"));
            relation.rhs.plus(getBalanceNode("32009"));
            relation.rhs.plus(getBalanceNode("32209"));
            relation.rhs.plus(getBalanceNode("47802"));
            relation.rhs.plus(getBalanceNode("50106"));
            relation.rhs.plus(getBalanceNode("50107"));
            relation.rhs.plus(getBalanceNode("50110"));
            relation.rhs.plus(getBalanceNode("50207"));
            relation.rhs.plus(getBalanceNode("50208"));
            relation.rhs.plus(getBalanceNode("50211"));
            relation.rhs.plus(getBalanceNode("50307"));
            relation.rhs.plus(getBalanceNode("50308"));
            relation.rhs.plus(getBalanceNode("50311"));
            addRelation(relation);
            relation = null;
        else
            printInfoForString("305");
        end;
    end;

    /*Правила из таблицы 2*/

    /*правило для выражения  101+205+206*/
    private macro ruleForEq2_1_1_2_1_2AndEq3_6AndEq3_7()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("102"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.lhs.plus(node("101"));
            relation.lhs.plus(node("205"));
            relation.lhs.plus(node("206"));
            relation.rhs.plus(getBalanceNode("102"));
            addRelation(relation);
            relation = null;
        else
            printInfoForStrings("101+205+206");
        end;
    end;

    /*правило для выражения  103+105+202*/
    private macro ruleForEq2_1_5AndEq2_1_7AndEq3_3()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("107"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.lhs.plus(node("103"));
            relation.lhs.plus(node("105"));
            relation.lhs.plus(node("202"));
            relation.rhs.plus(getBalanceNode("107"));
            addRelation(relation);
            relation = null;
        else
            printInfoForStrings("103+105+202");
        end;
    end;

    /*правило для выражения  (104+106+203+207)-(110+111)*/
    private macro ruleForEq2_1_6AndEq2_1_11AndEq3_4AndEq3_9AndEq2_2_4AndEq2_2_5()
        var relation : ReportLinearRelation;

        if (setBalanceNodes("10603", "70601", "70602", "70603", "70604", "70605", "61301", "61304",
                            "10605", "70606", "70607", "70608", "70609", "70610", "70611", "70612",
                            "50905", "61401", "61403", "10801", "70302", "70701", "70702", "70703",
                            "70704", "70705", "70801", "10901", "70402", "70706", "70707", "70708",
                            "70709", "70710", "70711", "70712", "70802"))
            relation = ReportLinearRelation(RCB_RS_LESS_OR_EQUAL);
            relation.lhs.plus(node("104"));
            relation.lhs.plus(node("106"));
            relation.lhs.plus(node("203"));
            relation.lhs.plus(node("207"));
            relation.lhs.minus(node("110"));
            relation.lhs.minus(node("111"));
            relation.rhs.plus(getBalanceNode("10603"));
            relation.rhs.plus(getBalanceNode("70601"));
            relation.rhs.plus(getBalanceNode("70602"));
            relation.rhs.plus(getBalanceNode("70603"));
            relation.rhs.plus(getBalanceNode("70604"));
            relation.rhs.plus(getBalanceNode("70605"));
            relation.rhs.plus(getBalanceNode("61301"));
            relation.rhs.plus(getBalanceNode("61304"));
            relation.rhs.minus(getBalanceNode("10605"));
            relation.rhs.minus(getBalanceNode("70606"));
            relation.rhs.minus(getBalanceNode("70607"));
            relation.rhs.minus(getBalanceNode("70608"));
            relation.rhs.minus(getBalanceNode("70609"));
            relation.rhs.minus(getBalanceNode("70610"));
            relation.rhs.minus(getBalanceNode("70611"));
            relation.rhs.minus(getBalanceNode("70612"));
            relation.rhs.minus(getBalanceNode("50905"));
            relation.rhs.minus(getBalanceNode("61401"));
            relation.rhs.minus(getBalanceNode("61403"));
            relation.rhs.plus(getBalanceNode("10801"));
            relation.rhs.plus(getBalanceNode("70302"));
            relation.rhs.plus(getBalanceNode("70701"));
            relation.rhs.plus(getBalanceNode("70702"));
            relation.rhs.plus(getBalanceNode("70703"));
            relation.rhs.plus(getBalanceNode("70704"));
            relation.rhs.plus(getBalanceNode("70705"));
            relation.rhs.plus(getBalanceNode("70801"));
            relation.rhs.minus(getBalanceNode("10901"));
            relation.rhs.minus(getBalanceNode("70402"));
            relation.rhs.minus(getBalanceNode("70706"));
            relation.rhs.minus(getBalanceNode("70707"));
            relation.rhs.minus(getBalanceNode("70708"));
            relation.rhs.minus(getBalanceNode("70709"));
            relation.rhs.minus(getBalanceNode("70710"));
            relation.rhs.minus(getBalanceNode("70711"));
            relation.rhs.minus(getBalanceNode("70712"));
            relation.rhs.minus(getBalanceNode("70802"));
            addRelation(relation);
            relation = null;
        else
            printInfoForStrings("(104+106+203+207)-(110+111)");
        end;
    end;

    private macro addRules()
        /*000  */ ruleForEqК();
        /*101  */ ruleForEq2_1_1_2_1_2();
        /*102  */ ruleForEq2_1_3_2_1_4();
        /*103  */ ruleForEq2_1_5();

        /*104  */ ruleForEq2_1_6_first();
        /*104.1*/ ruleForEq2_1_6_second();

        /*105  */ ruleForEq2_1_7();

        /*106  */ ruleForEq2_1_11();

        /*108  */ ruleForEqИстОсн();
        /*109  */ ruleForEq2_2_1();
        /*110  */ ruleForEq2_2_2_2_2_3();

        /*111  */ ruleForEq2_2_4();

        /*112  */ ruleForEq2_2_5_first();

        /*112.1*/ ruleForEq2_2_5_second();

        /*113  */ ruleForEq2_2_6();
        /*116  */ ruleForEqОсн();
        /*201  */ ruleForEq3_1();

        /*202  */ ruleForEq3_3();

        /*203  */ ruleForEq3_4_first();

        /*203.1*/ ruleForEq3_4_second();

        /*204  */ ruleForEq3_5_1();
        /*205  */ ruleForEq3_6();

        /*206  */ ruleForEq3_7();
        /*207  */ ruleForEq3_9();

        /*209  */ ruleForEqИстДоп();
        /*304  */ ruleForEq4_5();
        /*305  */ ruleForEq4_6();
        /*400  */ ruleForEqПром();

        /*101+205+206*/ ruleForEq2_1_1_2_1_2AndEq3_6AndEq3_7();
        /*103+105+202*/ ruleForEq2_1_5AndEq2_1_7AndEq3_3();
        /*210        */ ruleForEqДоп();
        /*204        */ ruleForEq3_5_2();
    end;

    private macro save()

        var attributeValue;

        m_strings.moveFirst();

        while (m_strings.moveNext())
            if (    (m_strings.getCurrentItem().id != "000")
                and (m_strings.getCurrentItem().id != "116")
                and (m_strings.getCurrentItem().id != "400"))

                if (not logicControl(node(m_strings.getCurrentItem().id).scaled))
                    m_protocolView.printLine("│Строка " + m_strings.getCurrentItem().id + " не удовлетворяет условию логического контроля                                   │");
                end;
            end;

            attributeValue = m_report.getPart("1").getAttribute(m_strings.getCurrentItem().name).getRcbValue();
            attributeValue.scaled = node(m_strings.getCurrentItem().id).getScaled();
            m_protocolView.printString(m_strings.getCurrentItem().id, attributeValue.exact, attributeValue.scaled);
        end;

    end;

    macro normalize()
        initialize();

        addRules();

        normalize();

        if (isNormalized())
            save();
        else
            m_protocolView.printLine("Данные нормализовать не удалось.(смотри лог-файл:" + getLogFilePath() + ").");
        end;
    end;
end;
