//----------------------------------------------------------------------------
// Расшифровка ф.251 по строкам
// 
// 12.10.2011 - создание
//----------------------------------------------------------------------------

import globals,rsbdataset, rsexts;//,java;//,BankInter;

const LBR_NAME 				= "f251_det.lbr";
const LBRDIR_REESTR 		= "BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR";
const TEXTDIR_REESTR		= "BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR";
const NAME_PARAMETER		= "UPDIR";
const INI_FILE_PARAMETER	= "rsextt.ini";
const PANEL_NAME			= "detail";
const TMP_TERM_DIR			= "C:\\RSPAR";

var stroki = Tarray;
var upDir: string			= ""; //значение переменной из файла rsextt.ini

class CReestr()
	var fullPathForLbr	:string = "";
	var lbrDirectories	:string = "";
	
	macro getIniParameter(m_name:string, m_file: string): string;
		var m_text = GetIniString(m_name, m_file, false);
		if ( m_text == "")
	 		msgbox("не могу получить значение параметра " + m_name + "\n из файла " + m_file);
	 		exit(1);
	 	else
	 		return (m_text);
	  	end;
	end;

	macro chekReestrRead(m_name:string, m_status:integer, m_err:integer)
		if ((m_status == V_UNDEF) or (m_err != 0))
	    	msgbox("Ошибка получения значения настройки реестра " + m_name + " \n Процедура GetRegistryValue вернула код ошибки "+m_err);
    		exit(1);
		end;
	end;

	macro dayString(m_reestrName:string):string
		private var m_errCode			:integer = NULL;
		private var m_statusGetRegistry :integer = NULL;
	    private var m_zna4enie          :string  = NULL;
		if (m_reestrName == "")
			msgbox("При чтении реестра не задана строка реестра");
			exit(1)
		end;
		m_statusGetRegistry=GetRegistryValue(m_reestrName, V_STRING, m_zna4enie, m_errCode);
		chekReestrRead(m_reestrName, m_statusGetRegistry, m_errCode);
		return(m_zna4enie);
	end;
               
	macro naytiFaylo(m_nameFile:string, m_directories:string):string
		private var m_fullPath:string = NULL;
		var ee:string;
		m_fullPath = FindPath(m_nameFile,m_directories);
		if ((m_fullPath == "") or (m_fullPath == NULL))
			msgbox("Не найден файл " + m_nameFile + " \n Поиск производился в следующих директориях: " + m_directories);
			println("\n\n Пытаюсь определить имя сервера приложений, где запущен макрос... \n\n");
			run(getenv ("COMSPEC"),"/c set computername",">");
			println("\n\n Нажмите ESC для выхода");
			exit(0);
		end;
		return(m_fullPath);
	end;

	macro zapuskDialog: bool

		macro strokiVMassiv(q)
//			debugbreak;
			if (q.rec.p11 		== strfor(88)) stroki[stroki.size]="11";   end;
			if (q.rec.p111 		== strfor(88)) stroki[stroki.size]="111";  end;
			if (q.rec.p1111 	== strfor(88)) stroki[stroki.size]="1111"; end;
			if (q.rec.p11111 	== strfor(88)) stroki[stroki.size]="11111";end;
			if (q.rec.p12 		== strfor(88)) stroki[stroki.size]="129";   end; //129 - счета, 120 - остатки
			if (q.rec.p121 		== strfor(88)) stroki[stroki.size]="121";   end;
			if (q.rec.p122 		== strfor(88)) stroki[stroki.size]="122";   end;
			if (q.rec.p1221		== strfor(88)) stroki[stroki.size]="1221";   end;
			if (q.rec.p12211	== strfor(88)) stroki[stroki.size]="12211";   end;
			if (q.rec.p12212	== strfor(88)) stroki[stroki.size]="12212";   end;
			if (q.rec.p13 		== strfor(88)) stroki[stroki.size]="13";   end;

			if (q.rec.p211 		== strfor(88)) stroki[stroki.size]="211";   end;
			if (q.rec.p2111 	== strfor(88)) stroki[stroki.size]="2111";   end;
			if (q.rec.p21111	== strfor(88)) stroki[stroki.size]="21111";   end;
			if (q.rec.p212 		== strfor(88)) stroki[stroki.size]="212";   end;
			if (q.rec.p213 		== strfor(88)) stroki[stroki.size]="213";   end;
			if (q.rec.p214 		== strfor(88)) stroki[stroki.size]="214";   end;
			if (q.rec.p215 		== strfor(88)) stroki[stroki.size]="215";   end;
			if (q.rec.p216 		== strfor(88)) stroki[stroki.size]="216";   end;
			if (q.rec.p2161		== strfor(88)) stroki[stroki.size]="2161";   end;

			if (q.rec.p221		== strfor(88)) stroki[stroki.size]="221";   end;
			if (q.rec.p222		== strfor(88)) stroki[stroki.size]="222";   end;
			if (q.rec.p223		== strfor(88)) stroki[stroki.size]="223";   end;
			if (q.rec.p224		== strfor(88)) stroki[stroki.size]="224";   end;
			if (q.rec.p225		== strfor(88)) stroki[stroki.size]="225";   end;
			if (q.rec.p226		== strfor(88)) stroki[stroki.size]="226";   end;
			if (q.rec.p2261		== strfor(88)) stroki[stroki.size]="2261";   end;

			if (q.rec.p231		== strfor(88)) stroki[stroki.size]="231";   end;
			if (q.rec.p233		== strfor(88)) stroki[stroki.size]="233";   end;
			if (q.rec.p234		== strfor(88)) stroki[stroki.size]="234";   end;
			if (q.rec.p235		== strfor(88)) stroki[stroki.size]="235";   end;
			if (q.rec.p236		== strfor(88)) stroki[stroki.size]="236";   end;

			if (q.rec.p241		== strfor(88)) stroki[stroki.size]="241";   end;
			if (q.rec.p2411		== strfor(88)) stroki[stroki.size]="2411";   end;
			if (q.rec.p2412		== strfor(88)) stroki[stroki.size]="2412";   end;
			if (q.rec.p24121	== strfor(88)) stroki[stroki.size]="24121";   end;
			if (q.rec.p242		== strfor(88)) stroki[stroki.size]="242";   end;
			if (q.rec.p2421		== strfor(88)) stroki[stroki.size]="2421";   end;
			if (q.rec.p2422		== strfor(88)) stroki[stroki.size]="2422";   end;
			if (q.rec.p24221	== strfor(88)) stroki[stroki.size]="24221";   end;

			if (q.rec.p31		== strfor(88)) stroki[stroki.size]="31";   end;

			if (q.rec.p200		== strfor(88)) stroki[stroki.size]="200";   end;

		end;

  		macro dlgEvent(dlg, command, idPole, key)                              
			const KEY_F2	=316;                                                      
			const KEY_F3	=317;                                                      
			const KEY_F9	=323;                                                      
			const KEY_ESC	=27;                                                       
			const KEY_ENTER	=13;                                                       
			const KEY_SPACE	=32;                                                       
	                                                                               
			if (command == DLG_INIT)                                                     
				message("~F2~ продолжить,  ~ESC~ выход");                              
		    	UpdateFields(dlg);                                                     
		    end;                                                                       
		                                                                               
			if (command == DLG_KEY)                                                      
			    if (KEY == KEY_F9)                                                     
					return CM_ignore;                                                  
			    end; //if F9                                                           
			    if (KEY == KEY_ENTER)                                                  
		    		return CM_ignore;                                                  
			    end; //if enter                                                        
			    if (KEY == KEY_F3)                                                     
			      return CM_ignore;                                                    
			    end; //if F3                                                           
			    if (KEY == KEY_F2)
			    	strokiVMassiv(dlg);
			    	return CM_Save;
			    end; //if F2                                                           
		                                                                               
		    	if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p11"))      
				    dlg.rec.p11 = strfor (88 - codefor (dlg.rec.p11));              
				    return CM_DEFAULT;                                                 
		        end;                                                                   
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p111"))      
				    dlg.rec.p111 = strfor (88 - codefor (dlg.rec.p111));              
				    return CM_DEFAULT;                                                 
			    end;                                                                   
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p1111"))      
				    dlg.rec.p1111 = strfor (88 - codefor (dlg.rec.p1111));              
				    return CM_DEFAULT;                                                 
			    end;                                                                   
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p11111"))
				    dlg.rec.p11111 = strfor (88 - codefor (dlg.rec.p11111));
				    return CM_DEFAULT;                                                 
			    end;                                                                   
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p12"))      
				    dlg.rec.p12 = strfor (88 - codefor (dlg.rec.p12));              
				    return CM_DEFAULT;                                                 
			    end;                                                                   
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p121"))      
				    dlg.rec.p121 = strfor (88 - codefor (dlg.rec.p121));              
				    return CM_DEFAULT;                                                 
			    end;                                                                   
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p122"))      
				    dlg.rec.p122 = strfor (88 - codefor (dlg.rec.p122));              
				    return CM_DEFAULT;                                                 
			    end;                                                                   
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p1221"))      
				    dlg.rec.p1221 = strfor (88 - codefor (dlg.rec.p1221));              
				    return CM_DEFAULT;                                                 
			    end;                                                                   
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p12211"))      
				    dlg.rec.p12211 = strfor (88 - codefor (dlg.rec.p12211));              
				    return CM_DEFAULT;                                                 
			    end;                                                                   
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p12212"))      
				    dlg.rec.p12212 = strfor (88 - codefor (dlg.rec.p12212));              
				    return CM_DEFAULT;                                                 
			    end;                                                                   
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p13"))      
				    dlg.rec.p13 = strfor (88 - codefor (dlg.rec.p13));              
				    return CM_DEFAULT;                                                 
			    end;                                                                   

		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p211"))      
				    dlg.rec.p211 = strfor (88 - codefor (dlg.rec.p211));              
				    return CM_DEFAULT;                                                 
			    end;                                                                   
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p2111"))      
				    dlg.rec.p2111 = strfor (88 - codefor (dlg.rec.p2111));              
				    return CM_DEFAULT;                                                 
			    end;                                                                   
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p21111"))      
				    dlg.rec.p21111 = strfor (88 - codefor (dlg.rec.p21111));              
				    return CM_DEFAULT;                                                 
			    end;                                                                   
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p212"))
				    dlg.rec.p212 = strfor (88 - codefor (dlg.rec.p212));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p213"))
				    dlg.rec.p213 = strfor (88 - codefor (dlg.rec.p213));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p214"))
				    dlg.rec.p214 = strfor (88 - codefor (dlg.rec.p214));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p215"))
				    dlg.rec.p215 = strfor (88 - codefor (dlg.rec.p215));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p216"))
				    dlg.rec.p216 = strfor (88 - codefor (dlg.rec.p216));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p2161"))
				    dlg.rec.p2161 = strfor (88 - codefor (dlg.rec.p2161));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p221"))
				    dlg.rec.p221 = strfor (88 - codefor (dlg.rec.p221));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p222"))
				    dlg.rec.p222 = strfor (88 - codefor (dlg.rec.p222));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p223"))
				    dlg.rec.p223 = strfor (88 - codefor (dlg.rec.p223));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p224"))
				    dlg.rec.p224 = strfor (88 - codefor (dlg.rec.p224));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p225"))
				    dlg.rec.p225 = strfor (88 - codefor (dlg.rec.p225));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p226"))
				    dlg.rec.p226 = strfor (88 - codefor (dlg.rec.p226));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p2261"))
				    dlg.rec.p2261 = strfor (88 - codefor (dlg.rec.p2261));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p231"))
				    dlg.rec.p231 = strfor (88 - codefor (dlg.rec.p231));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p233"))
				    dlg.rec.p233 = strfor (88 - codefor (dlg.rec.p233));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p234"))
				    dlg.rec.p234 = strfor (88 - codefor (dlg.rec.p234));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p235"))
				    dlg.rec.p235 = strfor (88 - codefor (dlg.rec.p235));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p236"))
				    dlg.rec.p236 = strfor (88 - codefor (dlg.rec.p236));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p241"))
				    dlg.rec.p241 = strfor (88 - codefor (dlg.rec.p241));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p2411"))
				    dlg.rec.p2411 = strfor (88 - codefor (dlg.rec.p2411));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p2412"))
				    dlg.rec.p2412 = strfor (88 - codefor (dlg.rec.p2412));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p24121"))
				    dlg.rec.p24121 = strfor (88 - codefor (dlg.rec.p24121));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p242"))
				    dlg.rec.p242 = strfor (88 - codefor (dlg.rec.p242));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p2421"))
				    dlg.rec.p2421 = strfor (88 - codefor (dlg.rec.p2421));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p2422"))
				    dlg.rec.p2422 = strfor (88 - codefor (dlg.rec.p2422));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p24221"))
				    dlg.rec.p24221 = strfor (88 - codefor (dlg.rec.p24221));
				    return CM_DEFAULT;
			    end;
		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p31"))
				    dlg.rec.p31 = strfor (88 - codefor (dlg.rec.p31));
				    return CM_DEFAULT;
			    end;

		        if ((key == KEY_SPACE) and (trim(fldname(dlg, idPole)) == "p200"))
				    dlg.rec.p200 = strfor (88 - codefor (dlg.rec.p200));
				    return CM_DEFAULT;
			    end;

                                                                               
			    if (KEY==KEY_ESC)                                                      
					exit(1);                                                           
			    	return CM_CANCEL;                                                  
			    end; //if esc                                                          
			end; //if DLG_KEY                                                          
		end;                                                                           

		var dlg = TRecHandler(PANEL_NAME, fullPathForLbr, True);

		return rundialog(dlg, "dlgEvent")
	end;
end; //class CDayReestr

class CToExcel
	var ds = TRsbDataSet("select 2+3 from dual");
	var tempFileName:string = NULL;
	var tempFileNameBezPuti:string = NULL;
	var rstr: CReestr;
	const OPIS_C4ET=".          структура файла: счет,валюта.  Если валюта =1, то это рубли, если валюта равна 0 - это валюта";
	var ob, ex, obBook;

	macro createUniqueFile(s: string)
		tempFileName = rstr.dayString(TEXTDIR_REESTR);
		tempFileName 		= tempFileName+"\\f251_"+s+"__"+{oper}+"_"+date+"_"+time; 
		tempFileNameBezPuti = 				 "f251_"+s+"__"+{oper}+"_"+date+"_"+time; 
		tempFileName = StrSubst ( tempFileName, ".", "_" );
		tempFileName = StrSubst ( tempFileName, ":", "_" );
		tempFileName = StrSubst ( tempFileName, " ", "_" );
		tempFileName = tempFileName + ".txt";

		tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, ".", "_" );
		tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, ":", "_" );
		tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, " ", "_" );
		tempFileNameBezPuti = tempFileNameBezPuti + ".txt";
		if (substr(tempFileName,1,2) == "__")
			tempFileName=".."+substr(tempFileName,3)
		end;
//		aa.str="fggfgdfdrgergegergergerge4gegergergergerg";
//		insert(aa);
//		close(aa);
	end;

	macro setDataSet(s: string)
	    if (substr(s,1,1) == "1")
			ds = TRsbDataSet("select c4et, case when rubli=1 then '1' else '0' end rrub from usr_251_c4eta where stroka="+s);
		elif ((substr(s,1,1) == "2") or (substr(s,1,1) == "3"))
			ds = TRsbDataSet("select payer, receiver, ddata, summa, case when rubli=1 then '1' else '0' end rrub, osnov, shifr, vid from usr_251_prov where stroka="+s);
		end;
	end;

	macro outInFile(s: string);
		FILE aa () txt write;
		open(aa, tempFileName);
		aa.str="   пункт " + s + OPIS_C4ET;	
		if (s == "12211") 
			aa.str = "  пункт 1.2.2.1.1 = пункт 1.2.2.1 "; 
		elif (s == "12212")
			aa.str = "   пункт 1.2.2.1.2 принудительно = 0";
		elif (s == "2412")
			aa.str = "   пункт 2412 считается как разность между значениями в п 241 и данными проводками. \n ДАННЫЕ ПРОВОДКИ НУЖНО ВЫЧЕСТЬ ИЗ П. 2.4.1 ";
		elif (s == "2422")
			aa.str = "   пункт 2422 считается как разность между значениями в п 242 и данными проводками. \n ДАННЫЕ ПРОВОДКИ НУЖНО ВЫЧЕСТЬ ИЗ П. 2.4.2 ";
		end;
		aa.str = toansi(aa.str, true); insert(aa);
//		aa.str="<?xml version=\"1.0\" ?>"; insert(aa);
//		aa.str="<stroki>"; insert(aa);
		while (ds.moveNext())
			if (substr(s,1,1) == "1")
				aa.str = ds.c4et + ";" + ds.rrub; insert(aa);
			elif ((substr(s,1,1) == "2") or (substr(s,1,1) == "3"))
			    aa.str = ds.payer + ";" + ds.receiver + ";" + ds.ddata + ";" + ds.summa + ";" + ds.rrub + ";" + strsubst(strsubst(StrSubst(ds.osnov,";"," "),strfor(13),""),strfor(10),"")+";"+ds.shifr+";"+ds.vid; insert(aa);
			end;
		end;
//		aa.str="</stroki>"; insert(aa);
		close(aa);
	end;

	macro copyToMe()
//		getstring(tempFileNameBezPuti);
		private var m_path: string = "";
		m_path = "$" + TMP_TERM_DIR + "\\" + tempFileNameBezPuti;
		if (not CopyFile(tempFileNameBezPuti, m_path, TRUE))
			println ("не могу скопировать файл с сервера приложений на терминал.\n исходный файл: "+tempFileNameBezPuti+" \nфайл назначения: " + m_path);
		else 
//			getstring(m_path);
			if (not removeFile(tempFileNameBezPuti))
				msgbox("Не смог удалить файл "+tempFileNameBezPuti+" с сервера приложений. Ну да и бог с ним.");
			end;
		end;
	end;

	macro GoGoGo()
	    var path, temp;
		ob = CreateObject ("rsax","TRsAxServer","RsAxServer",IsStandAlone());
   		ex = ob.CreateComObject ("Excel.Application", True);
		obBook = ex.Workbooks.openText(TMP_TERM_DIR + "\\" + tempFileNameBezPuti);
//		obBook = ex.Workbooks.open("%temp%\\f251_10207_17_10_2011_20_15_42.txt");

	end;
end;



var reestr: CReestr;
var toExel: CToExcel;
var n:integer;

//msgbox(GetCurDir(not IsStandAlone ));

reestr.lbrDirectories = reestr.dayString(LBRDIR_REESTR);
reestr.fullPathForLbr = reestr.naytiFaylo(LBR_NAME, reestr.lbrDirectories);
//upDir = reestr.gxtetIniParameter(NAME_PARAMETER,INI_FILE_PARAMETER);
if (reestr.zapuskDialog)
	if (stroki.size > 0)
		for (n,0,stroki.size - 1)
			toExel.createUniqueFile(stroki[n]);
			toExel.setDataSet(stroki[n]);
			toExel.outInFile(stroki[n]);
			toExel.copyToMe();
			println(" файл скопирован в директорию C:\\RSPAR\\"+toExel.tempFileNameBezPuti);
		end;
	end;
//	toExel.GoGoGo();
//	println(dlg.rec.p11 + " \n" + dlg.rec.p111+ "\n"+dlg.rec.p1111)
//println(reestr.dlg.rec.p11);
else 
	
end;

