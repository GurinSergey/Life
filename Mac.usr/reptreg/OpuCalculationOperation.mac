/**
* Класс для расчета по 1881-У.
*/


//dpn 08.10.2014 R-468030-2 ╠хфыхээю ёўшЄрырё№ ЇюЁьр


class TCalculationOperation()

    macro getSymbolValueTable(accountValueView)
        if (accountValueView == null)
            accountValueView= " SELECT t_symbol AS t_symbol,                                             "
                + "\n" + "        SUM(t_roubleSymbolValue)  AS t_roubleValue,                       "
                + "\n" + "        SUM(t_currencySymbolValue) AS t_currencyValue                     "
                + "\n" + "   FROM DRCBOPUACCOUNTVALUE_VW                                            "
                + "\n" + "  GROUP BY t_symbol                                                       "
                + "\n" + " UNION ALL                                                                "
                + "\n" + " SELECT '28101' AS t_symbol,                                              "
                + "\n" + "        (SELECT SUM(t_sum) FROM drcbopusymbol28101document_vw) AS t_roubleValue,"
                + "\n" + "        0 AS t_currencyValue                                              "
                + "\n" + "   FROM DUAL                                                              ";
        end;

        return            " SELECT CASE t_symbol                                                                                   "
                + "\n" + "               WHEN '1' THEN '10000'                                                                   "
                + "\n" + "               WHEN '2' THEN '20000'                                                                   "
                + "\n" + "               ELSE t_symbol                                                                           "
                + "\n" + "           END AS t_symbol,                                                                            "
                + "\n" + "           t_roubleValue,                                                                              "
                + "\n" + "           t_currencyValue                                                                             "
                + "\n" + "      FROM (SELECT GROUPING(t_symbol1) t_isTotalItog,                                                  "
                + "\n" + "                   CASE                                                                                "
                + "\n" + "                       WHEN GROUPING(t_symbolP) = 1                                                    "
                + "\n" + "                           THEN t_symbol1                                                              "
                + "\n" + "                       WHEN GROUPING(t_symbol2) = 1                                                    "
                + "\n" + "                           THEN t_symbolP                                                              "
                + "\n" + "                       WHEN GROUPING(t_symbol3) = 1                                                    "
                + "\n" + "                           THEN t_symbol2                                                              "
                + "\n" + "                       WHEN GROUPING(t_symbol5) = 1                                                    "
                + "\n" + "                           THEN t_symbol3                                                              "
                + "\n" + "                       ELSE t_symbol5                                                                  "
                + "\n" + "                   END AS t_symbol,                                                                    "
                + "\n" + "                   SUM(t_roubleValue) AS t_roubleValue,                                                "
                + "\n" + "                   SUM(t_currencyValue) AS t_currencyValue,                                            "
                + "\n" + "                   t_symbol1,                                                                          "
                + "\n" + "                   t_symbol2,                                                                          "
                + "\n" + "                   t_symbol3,                                                                          "
                + "\n" + "                   t_symbol5,                                                                          "
                + "\n" + "                   t_symbolP                                                                           "
                + "\n" + "              FROM (SELECT substr(s.t_symbol, 1, 1) t_symbol1,                                         "
                + "\n" + "                           substr(s.t_symbol, 1, 2) t_symbol2,                                         "
                + "\n" + "                           substr(s.t_symbol, 1, 3) t_symbol3,                                         "
                + "\n" + "                           substr(s.t_symbol, 1, 5) t_symbol5,                                         "
                + "\n" + "                           CASE                                                                        "
                + "\n" + "                               WHEN substr(s.t_symbol, 1, 2) BETWEEN '11' AND '12'                     "
                + "\n" + "                                   THEN '1А'                                                           "
                + "\n" + "                               WHEN substr(s.t_symbol, 1, 2) BETWEEN '13' AND '16'                     "
                + "\n" + "                                   THEN '1Б'                                                           "
                + "\n" + "                               WHEN substr(s.t_symbol, 1, 2) BETWEEN '21' AND '22'                     "
                + "\n" + "                                   THEN '2А'                                                           "
                + "\n" + "                               WHEN substr(s.t_symbol, 1, 2) BETWEEN '23' AND '26'                     "
                + "\n" + "                                   THEN '2Б'                                                           "
                + "\n" + "                               WHEN substr(s.t_symbol, 1, 2) BETWEEN '27' AND '27'                     "
                + "\n" + "                                   THEN '2В'                                                           "
                + "\n" + "                               ELSE NULL                                                               "
                + "\n" + "                           END t_symbolP,                                                              "
                + "\n" + "                           NVL(t_roubleSymbolValue,   0) t_roubleValue,                                "
                + "\n" + "                           NVL(t_currencySymbolValue, 0) t_currencyValue                               "
                + "\n" + "                      FROM ("+accountValueView+") a,                                                   "
                + "\n" + "                            dOpuSymbol_vw s                                                            "
                + "\n" + "                     WHERE s.t_symbol = a.t_symbol(+))                                                 "
                + "\n" + "             GROUP BY ROLLUP(t_symbol1, t_symbolP, t_symbol2, t_symbol3, t_symbol5))                   "
                + "\n" + "     WHERE t_isTotalItog = 0                                                                           "
                + "\n" + "       AND t_symbol IS NOT NULL                                                                        "
                + "\n" + "     ORDER BY t_symbol1, t_symbolP, t_symbol2, t_symbol3, t_symbol5                                    ";
    end;


    macro getAdvisorySymbolValueTable(advisoryValueView)
        return           "SELECT NVL(s.t_symbol, '26000')    AS t_symbol,               "
                + "\n" + "       NVL(SUM (t_symbolvalue), 0) AS t_value                 "
                + "\n" + "  FROM " + advisoryValueView + " a ,                          "
                + "\n" + "        dRcbOpuAdvisorySymbol_vw s                            "
                + "\n" + " WHERE a.t_symbol(+) = s.t_symbol                             "
                + "\n" + " GROUP BY ROLLUP (s.t_symbol)                                 "
                + "\n" + " ORDER BY t_symbol                                            ";
    end;


    private var m_calculateTable      = getSymbolValueTable();
    private var m_calculationProtocol = TCalculationProtocol(null, "drcbopuaccountvalue_vw", "drcbopuadvisoryaccountvalue_vw");

    /**
    * Очистка данных.
    */
    /*private*/
    macro clear()
        sql_execute("TRUNCATE TABLE dfOpuDocument_tmp");
        sql_execute("TRUNCATE TABLE dfOpuAccount_tmp");
    end;

    /**
    * Кэшировать данных по л/с.
    */
    /*private */
    macro accountCache()
        var m_filter;

        if (rcbApplication.currentReport.form.name == "Приложение 4 со СПОД")  /*rep_data.getPeriodKind() = 7 Период = год, только для прил4*/
            var m_endDate = DateAfterCalenMonths(rcbApplication.currentReport.context.period.endDate, 12);

            m_filter = " (a.t_balance LIKE '706%' OR a.t_balance LIKE '707%')      "
                       " AND (a.t_openDate <= " + getSqlDate(m_endDate) +
                       "       and (    a.t_closeDate <  a.t_openDate              "
                       "             OR a.t_closeDate >= " + getSqlDate(rcbApplication.currentReport.context.period.beginDate) + ")) ";
        else
            m_filter = " a.t_balance LIKE '706%' AND a.t_isOpened = 1 ";
        end;

        sql_execute(      " INSERT INTO dfOpuAccount_tmp(t_balance,t_account,t_fiId,t_sort,t_openDate,t_closeDate,                                                                             "
                + "\n" + "                              t_name,t_inRest,t_outRest,t_symbol,t_isRouble, t_isForCurrency,t_isForAdvisory)                                                       "
                + "\n" + " SELECT t_balance,t_account,t_fiId,t_sort,t_openDate,t_closeDate,                                                                                                   "
                + "\n" + "        t_name,t_inCoverRest,t_outCoverRest,                                                                                                                        "
                + "\n" + "        a.t_opuSymbol t_symbol,                                                                                  "
                + "\n" + "        CASE                                                                                                                                                        "
                + "\n" + "            WHEN regexp_like(a.t_opuSymbol,                                                                      "
                + "\n" + "                             '^22101|^22201|^22203|^231|^241|^242|^25302|^262|^26305|^26306|^26307|^28101|^12201|^12401|^12403|^131|^151|^152|^16302|^16303|^16305|^17307|^27309') "
                + "\n" + "            THEN 1                                                                                                                                                  "
                + "\n" + "            ELSE 0                                                                                                                                                  "
                + "\n" + "            END t_isRouble,                                                                                                                                         "
                + "\n" + "        CASE                                                                                                                                                        "
                + "\n" + "            WHEN EXISTS(SELECT 1                                                                                                                                    "
                + "\n" + "                          FROM dobjatcor_dbt objatcor,                                                                                                              "
                + "\n" + "                               dobjattr_dbt  objattr                                                                                                                "
                + "\n" + "                         WHERE objatcor.t_objectType = 4                                                                                                            "
                + "\n" + "                           AND objatcor.t_groupId    = 1                                                                                                            "
                + "\n" + "                           AND objatcor.t_object     = a.t_objectId                                                                                                 "
                + "\n" + "                           AND objattr.t_objectType  = 4                                                                                                            "
                + "\n" + "                           AND objattr.t_groupId     = 1                                                                                                            "
                + "\n" + "                           AND objattr.t_attrId      = objatcor.t_attrId                                                                                            "
                + "\n" + "                           AND objattr.t_numInList   = 'V')                                                                                                         "
                + "\n" + "                THEN 1                                                                                                                                              "
                + "\n" + "            ELSE 0                                                                                                                                                  "
                + "\n" + "        END AS t_isForCurrency,                                                                                                                                     "
                + "\n" + "        CASE                                                                                                                                                        "
                + "\n" + "            WHEN EXISTS(SELECT 1                                                                                                                                    "
                + "\n" + "                          FROM dobjatcor_dbt objatcor,                                                                                                              "
                + "\n" + "                               dobjattr_dbt  objattr                                                                                                                "
                + "\n" + "                         WHERE objatcor.t_objectType = 4                                                                                                            "
                + "\n" + "                           AND objatcor.t_groupId    = 1                                                                                                            "
                + "\n" + "                           AND objatcor.t_object     = a.t_objectId                                                                                                 "
                + "\n" + "                           AND objattr.t_objectType  = 4                                                                                                            "
                + "\n" + "                           AND objattr.t_groupId     = 1                                                                                                            "
                + "\n" + "                           AND objattr.t_attrId      = objatcor.t_attrId                                                                                            "
                + "\n" + "                           AND objattr.t_numInList   = 'Бизнес'                                                                                                     "
                + "\n" + "                           AND rep_data.getEndDate() BETWEEN objatcor.t_validFromDate                                                                               "
                + "\n" + "                                                         AND objatcor.t_validToDate)                                                                                "
                + "\n" + "                THEN 1                                                                                                                                              "
                + "\n" + "            ELSE 0                                                                                                                                                  "
                + "\n" + "        END AS t_isForAdvisory                                                                                                                                      "
                + "\n" + "   FROM drepAccount_vw a                                                                                                                                            "
                + "\n" + "  WHERE a.t_chapter = 1                                                                                                                                             "
                + "\n" + "    AND " + m_filter);
    end;

    /**
    * Кэшировать данных по документам.
    */
    private macro documentCache()
        var m_filter;
        var m_endDate;

        if (rcbApplication.currentReport.form.name == "Приложение 4 со СПОД")  /*rep_data.getPeriodKind() = 7 Период = год, только для прил4*/
            m_endDate = DateAfterCalenMonths(rcbApplication.currentReport.context.period.endDate, 12);

            if (global.getCalculationKind() == CALCULATION_KIND_TURN)
                m_filter = " (   SUBSTR(t_debetAccount,  1, 3) IN ('706', '707')  "
                            "  OR SUBSTR(t_creditAccount, 1, 3) IN ('706', '707') )";
            else
                m_filter = " ( 	  SUBSTR(t_debetAccount,  1, 3) IN ('707')                                                "
                            "  OR  SUBSTR(t_creditAccount, 1, 3) IN ('707')                                                "
                            "  OR (SUBSTR(t_creditAccount, 1, 3) IN ('706') AND SUBSTR(t_debetAccount,  1, 3) IN ('303'))  "
                            "  OR (SUBSTR(t_creditAccount, 1, 3) IN ('303') AND SUBSTR(t_debetAccount,  1, 3) IN ('706')) )";
            end;
        else /*ОПУ*/
            m_endDate = rcbApplication.currentReport.context.period.endDate;

            if (global.getCalculationKind() == CALCULATION_KIND_TURN)
                m_filter = " (    SUBSTR(t_debetAccount,  1, 3) = '706'                "
                            "   OR SUBSTR(t_creditAccount, 1, 3) = '706' )              ";
            else
                m_filter = " (   (    SUBSTR(t_debetAccount,  1, 3) IN ('706')         "
                            "      and SUBSTR(t_creditAccount, 1, 3) IN ('707', '303')) "
                            "   OR                                                      "
                            "     (    SUBSTR(t_debetAccount,  1, 3) IN ('707', '303')  "
                            "      and SUBSTR(t_creditAccount, 1, 3) IN ('706'))        "
                            " )                                                         ";
            end;
        end;

        sql_execute(" INSERT /*+ append*/ INTO dfOpuDocument_tmp (t_debetBalance,t_creditBalance,t_debetAccount,t_creditAccount,"
            + "\n" + "                                       t_debetFiId,t_creditFiId,t_sum,t_date,                              "
            + "\n" + "                                       t_number,t_isSpod)                                                  "
            + "\n" + "        SELECT doc.t_debetBalance,                                                                         "
            + "\n" + "               doc.t_creditBalance,                                                                        "
            + "\n" + "               doc.t_debetAccount,                                                                         "
            + "\n" + "               doc.t_creditAccount,                                                                        "
            + "\n" + "               doc.t_debetFiId,                                                                            "
            + "\n" + "               doc.t_creditFiId,                                                                           "
            + "\n" + "               doc.t_inCoverSum AS t_sum,                                                                  "
            + "\n" + "               doc.t_date,                                                                                 "
            + "\n" + "               doc.t_number,                                                                               "
            + "\n" + "               doc.t_isSpod                                                                                "
            + "\n" + "          FROM dRepDocument_vw doc                                                                         "
            + "\n" + "         WHERE doc.t_chapter = 1                                                                           "
            + "\n" + "           AND t_date BETWEEN  " + getSqlDate(rcbApplication.currentReport.context.period.beginDate) + "                                         "
            + "\n" + "                          AND  " + getSqlDate(m_endDate) + "                                               "
            + "\n" + "                                                                                                           "
            + "\n" + "           AND " + m_filter);
    end;

    /**
    * Кэшировать данные.
    */
    macro cache()
        clear();
        accountCache();
        documentCache();
    end;

    macro calculationProtocol()
        return m_calculationProtocol;
    end;

    macro calculate()
        var attributeValue = rcbApplication.currentReport.attributeValue("Символы");
        var dataSource     = TRsbDataset("SELECT /*+ PARALLEL(8)*/ * FROM (" + m_calculateTable + ")"); //dpn 08.10.2014 R-468030-2

        var compositeValue = null;

        while (dataSource.next())
            compositeValue = attributeValue.addValue();

            compositeValue.fieldValue("code").exact          = dataSource.symbol;
            compositeValue.fieldValue("roubleValue").exact   = dataSource.roubleValue;
            compositeValue.fieldValue("currencyValue").exact = dataSource.currencyValue;
            compositeValue.fieldValue("totalValue").exact    = dataSource.roubleValue + dataSource.currencyValue;
        end;
    end;

    macro execute()
        global.initializePackages();
        cache();
        calculate();
        m_calculationProtocol.print();
        rcbApplication.transactionManager.commit();
    end;
end;

/**
* Класс для расчета по 2055-У.
*/
class (TCalculationOperation) TCalculationOperation2055()
    initTCalculationOperation();
    private var m_calculateAdvisoryTable  = getAdvisorySymbolValueTable("drcbOpuAdvisoryAccountValue_vw");

    private macro advisorySymbolCalculate()
        var attributeValue = rcbApplication.currentReport.attributeValue("AdvisorySymbol");
        var dataSource;
        var compositeValue = null;

        if (attributeValue) /*для Приложения 4 этой переменной нет, т.к. Справка не расчитывается*/
            dataSource = TRsbDataset(m_calculateAdvisoryTable);
            while (dataSource.next())
                compositeValue = attributeValue.addValue();

                compositeValue.fieldValue("code").exact  = dataSource.symbol;
                compositeValue.fieldValue("value").exact = dataSource.value;
            end;
        end;
    end;

    macro calculate()
        calculate();
        advisorySymbolCalculate();
    end;
end;

/**
* Класс для расчета по 2090-У.
*/
class (TCalculationOperation2055) TCalculationOperation2090()
    private macro initProtocolAndTableTurn()
        m_calculateTable         = getSymbolValueTable(
                                                " SELECT doc.t_symbol,                                                               "
                                        + "\n" + "        sum(doc.t_roubleSymbolValue)   t_roubleSymbolValue,                         "
                                        + "\n" + "        sum(doc.t_currencySymbolValue) t_currencySymbolValue                        "
                                        + "\n" + " FROM  drcbDocOpuValue2090_vw doc                                                   "
                                        + "\n" + " GROUP BY doc.t_symbol                                                              "
                                                );
        m_calculateAdvisoryTable = getAdvisorySymbolValueTable("drcbDocOpuAdvisoryValue2090_vw");
        m_calculationProtocol    = TCalculationProtocol2090(null, null, "drcbDocOpuValue2090_vw", null, "drcbDocOpuAdvisoryValue2090_vw");
    end;

    private macro initProtocolAndTableRest()
        m_calculateTable         = getSymbolValueTable(
                                                " SELECT a.t_symbol,                                                                 "
                                        + "\n" + "        sum(a.t_roubleSymbolValue)   t_roubleSymbolValue,                           "
                                        + "\n" + "        sum(a.t_currencySymbolValue) t_currencySymbolValue                          "
                                        + "\n" + " FROM  drcbAccOpuValue2090_vw a                                                 "
                                        + "\n" + " GROUP BY a.t_symbol                                                                "
                                                );
        m_calculateAdvisoryTable = getAdvisorySymbolValueTable("dRcbAccOpuAdvisoryValue2090_vw");
        m_calculationProtocol    = TCalculationProtocol2090(null, "drcbAccOpuValue2090_vw", null, "dRcbAccOpuAdvisoryValue2090_vw", null);
    end;

    initTCalculationOperation2055();
    if (global.getCalculationKind() == CALCULATION_KIND_REST)
        initProtocolAndTableRest();
    else
        initProtocolAndTableTurn();
    end;
end;


/**
* Класс для расчета по 2477-У.
*/
class (TCalculationOperation2090) TCalculationOperation2477()
    macro getSymbolValueTable(accountValueView)
        return            " SELECT CASE t_symbol                                                                                 "
                + "\n" + "               WHEN '1' THEN '10000'                                                                   "
                + "\n" + "               WHEN '2' THEN '20000'                                                                   "
                + "\n" + "               ELSE t_symbol                                                                           "
                + "\n" + "           END AS t_symbol,                                                                            "
                + "\n" + "           t_roubleValue,                                                                              "
                + "\n" + "           t_currencyValue                                                                             "
                + "\n" + "      FROM (SELECT GROUPING(t_symbol1) t_isTotalItog,                                                  "
                + "\n" + "                   CASE                                                                                "
                + "\n" + "                       WHEN GROUPING(t_symbolP) = 1                                                    "
                + "\n" + "                           THEN t_symbol1                                                              "
                + "\n" + "                       WHEN GROUPING(t_symbol2) = 1                                                    "
                + "\n" + "                           THEN t_symbolP                                                              "
                + "\n" + "                       WHEN GROUPING(t_symbol3) = 1                                                    "
                + "\n" + "                           THEN t_symbol2                                                              "
                + "\n" + "                       WHEN GROUPING(t_symbol5) = 1                                                    "
                + "\n" + "                           THEN t_symbol3                                                              "
                + "\n" + "                       ELSE t_symbol5                                                                  "
                + "\n" + "                   END AS t_symbol,                                                                    "
                + "\n" + "                   SUM(t_roubleValue) AS t_roubleValue,                                                "
                + "\n" + "                   SUM(t_currencyValue) AS t_currencyValue,                                            "
                + "\n" + "                   t_symbol1,                                                                          "
                + "\n" + "                   t_symbol2,                                                                          "
                + "\n" + "                   t_symbol3,                                                                          "
                + "\n" + "                   t_symbol5,                                                                          "
                + "\n" + "                   t_symbolP                                                                           "
                + "\n" + "              FROM (SELECT substr(s.t_symbol, 1, 1) t_symbol1,                                         "
                + "\n" + "                           substr(s.t_symbol, 1, 2) t_symbol2,                                         "
                + "\n" + "                           substr(s.t_symbol, 1, 3) t_symbol3,                                         "
                + "\n" + "                           substr(s.t_symbol, 1, 5) t_symbol5,                                         "
                + "\n" + "                           CASE                                                                        "
                + "\n" + "                               WHEN substr(s.t_symbol, 1, 2) BETWEEN '11' AND '12'                     "
                + "\n" + "                                   THEN '1А'                                                           "
                + "\n" + "                               WHEN substr(s.t_symbol, 1, 2) BETWEEN '13' AND '16'                     "
                + "\n" + "                                   THEN '1Б'                                                           "
                + "\n" + "                               WHEN substr(s.t_symbol, 1, 2) BETWEEN '17' AND '17'                     "
                + "\n" + "                                   THEN '1В'                                                           "
                + "\n" + "                               WHEN substr(s.t_symbol, 1, 2) BETWEEN '21' AND '22'                     "
                + "\n" + "                                   THEN '2А'                                                           "
                + "\n" + "                               WHEN substr(s.t_symbol, 1, 2) BETWEEN '23' AND '26'                     "
                + "\n" + "                                   THEN '2Б'                                                           "
                + "\n" + "                               WHEN substr(s.t_symbol, 1, 2) BETWEEN '27' AND '27'                     "
                + "\n" + "                                   THEN '2В'                                                           "
                + "\n" + "                               ELSE NULL                                                               "
                + "\n" + "                           END t_symbolP,                                                              "
                + "\n" + "                           NVL(t_roubleSymbolValue,   0) t_roubleValue,                                "
                + "\n" + "                           NVL(t_currencySymbolValue, 0) t_currencyValue                               "
                + "\n" + "                      FROM ("+accountValueView+") a,                                                   "
                + "\n" + "                            dOpuSymbol_vw s                                                            "
                + "\n" + "                     WHERE s.t_symbol = a.t_symbol(+))                                                 "
                + "\n" + "             GROUP BY ROLLUP(t_symbol1, t_symbolP, t_symbol2, t_symbol3, t_symbol5))                   "
                + "\n" + "     WHERE t_isTotalItog = 0                                                                           "
                + "\n" + "       AND t_symbol IS NOT NULL                                                                        "
                + "\n" + "     ORDER BY t_symbol1, t_symbolP, t_symbol2, t_symbol3, t_symbol5                                    ";
    end;

    initTCalculationOperation2090();
end;


class (TCalculationOperation2477) TCalculationOperation2654()
    private macro initProtocolAndTableTurn()
        m_calculateTable         = getSymbolValueTable(
                                                " SELECT doc.t_symbol,                                                                "
                                        + "\n" + "        sum(doc.t_roubleSymbolValue)   t_roubleSymbolValue,                         "
                                        + "\n" + "        sum(doc.t_currencySymbolValue) t_currencySymbolValue                        "
                                        + "\n" + " FROM  drcbDocOpuValue2654_vw doc                                                   "
                                        + "\n" + " GROUP BY doc.t_symbol                                                              "
                                                );
        m_calculateAdvisoryTable = getAdvisorySymbolValueTable("drcbDocOpuAdvisoryValue2090_vw");
        m_calculationProtocol    = TCalculationProtocol2090(null, null, "drcbDocOpuValue2654_vw", null, "drcbDocOpuAdvisoryValue2090_vw");
    end;

    private macro initProtocolAndTableRest()
        m_calculateTable         = getSymbolValueTable(
                                                " SELECT a.t_symbol,                                                                  "
                                        + "\n" + "        sum(a.t_roubleSymbolValue)   t_roubleSymbolValue,                           "
                                        + "\n" + "        sum(a.t_currencySymbolValue) t_currencySymbolValue                          "
                                        + "\n" + " FROM  drcbAccOpuValue2654_vw a                                                     "
                                        + "\n" + " GROUP BY a.t_symbol                                                                "
                                                );
        m_calculateAdvisoryTable = getAdvisorySymbolValueTable("dRcbAccOpuAdvisoryValue2090_vw");
        m_calculationProtocol    = TCalculationProtocol2090(null, "drcbAccOpuValue2654_vw", null, "dRcbAccOpuAdvisoryValue2090_vw", null);
    end;

    macro accountCache()
        var m_filter;

        if (rcbApplication.currentReport.form.name == "Приложение 4 со СПОД")  /*rep_data.getPeriodKind() = 7 Период = год, только для прил4*/
            var m_endDate = DateAfterCalenMonths(rcbApplication.currentReport.context.period.endDate, 12);

            m_filter = " (a.t_balance LIKE '706%' OR a.t_balance LIKE '707%')      "
                       " AND (a.t_openDate <= " + getSqlDate(m_endDate) +
                       "       and (    a.t_closeDate <  a.t_openDate              "
                       "             OR a.t_closeDate >= " + getSqlDate(rcbApplication.currentReport.context.period.beginDate) + ")) ";
        else
            m_filter = " a.t_balance LIKE '706%' AND a.t_isOpened = 1 ";
        end;

        sql_execute(     " INSERT INTO dfOpuAccount_tmp(t_balance,t_account,t_fiId,t_sort,t_openDate,t_closeDate,                                                                            "
                + "\n" + "                              t_name,t_inRest,t_outRest,t_symbol,t_isRouble, t_isForCurrency,t_isForAdvisory)                                                       "
                + "\n" + " SELECT t_balance,t_account,t_fiId,t_sort,t_openDate,t_closeDate,                                                                                                   "
                + "\n" + "        t_name,t_inCoverRest,t_outCoverRest,                                                                                                                        "
                + "\n" + "        a.t_opuSymbol t_symbol,                                                                                                                                     "
                + "\n" + "        CASE                                                                                                                                                        "
                + "\n" + "            WHEN regexp_like(a.t_opuSymbol,                                                                                                                         "
                + "\n" + "                             '^22101|^22201|^22203|^231|^241|^242|^25101|^25302|^262|^26305|^26306|^26307|^28101|^12201|^12401|^12403|^131|^151|^152|^16101|^16302|^16303|^16305|^17307|^27309') "
                + "\n" + "            THEN 1                                                                                                                                                  "
                + "\n" + "            ELSE 0                                                                                                                                                  "
                + "\n" + "            END t_isRouble,                                                                                                                                         "
                + "\n" + "        CASE                                                                                                                                                        "
                + "\n" + "            WHEN EXISTS(SELECT 1                                                                                                                                    "
                + "\n" + "                          FROM dobjatcor_dbt objatcor,                                                                                                              "
                + "\n" + "                               dobjattr_dbt  objattr                                                                                                                "
                + "\n" + "                         WHERE objatcor.t_objectType = 4                                                                                                            "
                + "\n" + "                           AND objatcor.t_groupId    = 1                                                                                                            "
                + "\n" + "                           AND objatcor.t_object     = a.t_objectId                                                                                                 "
                + "\n" + "                           AND objattr.t_objectType  = 4                                                                                                            "
                + "\n" + "                           AND objattr.t_groupId     = 1                                                                                                            "
                + "\n" + "                           AND objattr.t_attrId      = objatcor.t_attrId                                                                                            "
                + "\n" + "                           AND objattr.t_numInList   = 'V')                                                                                                         "
                + "\n" + "                THEN 1                                                                                                                                              "
                + "\n" + "            ELSE 0                                                                                                                                                  "
                + "\n" + "        END AS t_isForCurrency,                                                                                                                                     "
                + "\n" + "        CASE                                                                                                                                                        "
                + "\n" + "            WHEN EXISTS(SELECT 1                                                                                                                                    "
                + "\n" + "                          FROM dobjatcor_dbt objatcor,                                                                                                              "
                + "\n" + "                               dobjattr_dbt  objattr                                                                                                                "
                + "\n" + "                         WHERE objatcor.t_objectType = 4                                                                                                            "
                + "\n" + "                           AND objatcor.t_groupId    = 1                                                                                                            "
                + "\n" + "                           AND objatcor.t_object     = a.t_objectId                                                                                                 "
                + "\n" + "                           AND objattr.t_objectType  = 4                                                                                                            "
                + "\n" + "                           AND objattr.t_groupId     = 1                                                                                                            "
                + "\n" + "                           AND objattr.t_attrId      = objatcor.t_attrId                                                                                            "
                + "\n" + "                           AND objattr.t_numInList   = 'Бизнес'                                                                                                     "
                + "\n" + "                           AND rep_data.getEndDate() BETWEEN objatcor.t_validFromDate                                                                               "
                + "\n" + "                                                         AND objatcor.t_validToDate)                                                                                "
                + "\n" + "                THEN 1                                                                                                                                              "
                + "\n" + "            ELSE 0                                                                                                                                                  "
                + "\n" + "        END AS t_isForAdvisory                                                                                                                                      "
                + "\n" + "   FROM drepAccount_vw a                                                                                                                                            "
                + "\n" + "  WHERE a.t_chapter = 1                                                                                                                                             "
                + "\n" + "    AND " + m_filter);
    end;

    initTCalculationOperation2477();
end;

class (TCalculationOperation2654) TCalculationOperation2835()

    private macro initProtocolAndTableTurn()
        m_calculateTable         = getSymbolValueTable(
                                                " SELECT doc.t_symbol,                                                                "
                                        + "\n" + "        sum(doc.t_roubleSymbolValue)   t_roubleSymbolValue,                         "
                                        + "\n" + "        sum(doc.t_currencySymbolValue) t_currencySymbolValue                        "
                                        + "\n" + " FROM  drcbDocOpuValue2654_vw doc                                                   "
                                        + "\n" + " GROUP BY doc.t_symbol                                                              "
                                                );
       m_calculationProtocol    = TCalculationProtocol2835(null, null, "drcbDocOpuValue2654_vw", null, null /*"drcbDocOpuAdvisoryValue2090_vw"*/);
    end;

    private macro initProtocolAndTableRest()
        m_calculateTable         = getSymbolValueTable(
                                                " SELECT a.t_symbol,                                                                  "
                                        + "\n" + "        sum(a.t_roubleSymbolValue)   t_roubleSymbolValue,                           "
                                        + "\n" + "        sum(a.t_currencySymbolValue) t_currencySymbolValue                          "
                                        + "\n" + " FROM  drcbAccOpuValue2654_vw a                                                     "
                                        + "\n" + " GROUP BY a.t_symbol                                                                "
                                                );

        m_calculationProtocol    = TCalculationProtocol2835(null, "drcbAccOpuValue2654_vw", null, null/* "dRcbAccOpuAdvisoryValue2090_vw"*/, null);
    end;

    macro calculate()
        calculate();
        advisorySymbolCalculate();
    end;

    initTCalculationOperation2654();
end;

class (TCalculationOperation2835) TCalculationOperation385()

    private macro initProtocolAndTableTurn()
        m_calculateTable         = getSymbolValueTable(
                                                " SELECT doc.t_symbol,                                                                "
                                        + "\n" + "        sum(doc.t_roubleSymbolValue)   t_roubleSymbolValue,                         "
                                        + "\n" + "        sum(doc.t_currencySymbolValue) t_currencySymbolValue                        "
                                        + "\n" + " FROM  drcbDocOpuValue385_vw doc                                                    "
                                        + "\n" + " GROUP BY doc.t_symbol                                                              "
                                                );
       m_calculationProtocol    = TCalculationProtocol2835(null, null, "drcbDocOpuValue385_vw", null, null /*"drcbDocOpuAdvisoryValue2090_vw"*/);
    end;

    private macro initProtocolAndTableRest()
        m_calculateTable         = getSymbolValueTable(
                                                " SELECT a.t_symbol,                                                                  "
                                        + "\n" + "        sum(a.t_roubleSymbolValue)   t_roubleSymbolValue,                           "
                                        + "\n" + "        sum(a.t_currencySymbolValue) t_currencySymbolValue                          "
                                        + "\n" + " FROM  drcbAccOpuValue385_vw a                                                      "
                                        + "\n" + " GROUP BY a.t_symbol                                                                "
                                                );

        m_calculationProtocol    = TCalculationProtocol2835(null, "drcbAccOpuValue385_vw", null, null/* "dRcbAccOpuAdvisoryValue2090_vw"*/, null);
    end;

    initTCalculationOperation2835();
end;

class (TCalculationOperation385) TCalculationOperation3053()

    private macro initProtocolAndTableTurn()
        m_calculateTable         = getSymbolValueTable(
                                                " SELECT doc.t_symbol,                                                                "
                                        + "\n" + "        sum(doc.t_roubleSymbolValue)   t_roubleSymbolValue,                         "
                                        + "\n" + "        sum(doc.t_currencySymbolValue) t_currencySymbolValue                        "
                                        + "\n" + " FROM  drcbDocOpuValue3053_vw doc                                                   "
                                        + "\n" + " GROUP BY doc.t_symbol                                                              "
                                                );
       m_calculationProtocol    = TCalculationProtocol2835(null, null, "drcbDocOpuValue3053_vw", null, null );
    end;

    private macro initProtocolAndTableRest()
        m_calculateTable         = getSymbolValueTable(
                                                " SELECT a.t_symbol,                                                                  "
                                        + "\n" + "        sum(a.t_roubleSymbolValue)   t_roubleSymbolValue,                           "
                                        + "\n" + "        sum(a.t_currencySymbolValue) t_currencySymbolValue                          "
                                        + "\n" + " FROM  drcbAccOpuValue3053_vw a                                                     "
                                        + "\n" + " GROUP BY a.t_symbol                                                                "
                                                );

        m_calculationProtocol    = TCalculationProtocol2835(null, "drcbAccOpuValue3053_vw", null, null, null);
    end;

    initTCalculationOperation385();
end;

/**
* Класс для расчета СПОД.
*/
class TCalculationOperationSpod(calculationOperation)

    private var m_calculateSpodTable;

    if (global.getCalculationKind() == CALCULATION_KIND_REST)
        m_calculateSpodTable   = "drcbOpuSpodValue_vw";
    else
        m_calculateSpodTable   = "drcbDocOpuSpodValue_vw";
    end;

    private var m_calculationOperation = calculationOperation;
    private var m_calculateTable       = m_calculationOperation.getSymbolValueTable(m_calculateSpodTable);
    private var m_finalCalculate       = TCalculate32090();

    macro accountCache()
        m_calculationOperation.accountCache();
    end;

    macro clear()
        m_calculationOperation.clear();
    end;

    private macro createProtocolDataSource()
        var spodQweryText  =           " SELECT *                                                                         "
                                + "\n" + " FROM (SELECT GROUPING(t_account) AS t_isSymbolResult,                          "
                                + "\n" + "              t_symbol                   AS t_symbol,                           "
                                + "\n" + "              t_number                   AS t_number,                           "
                                + "\n" + "              t_isForCurrency            AS t_isForCurrency,                    "
                                + "\n" + "              t_account                  AS t_account,                          "
                                + "\n" + "              t_creditAccount            AS t_creditAccount,                    "
                                + "\n" + "              t_debetAccount             AS t_debetAccount,                     "
                                + "\n" + "              t_date                     AS t_date,                             "
                                + "\n" + "              SUM(t_roubleSymbolValue)   AS t_rubSum,                           "
                                + "\n" + "              SUM(t_currencySymbolValue) AS t_curSum,                           "
                                + "\n" + "              SUM(t_roubleSymbolValue + t_currencySymbolValue) AS t_sum         "
                                + "\n" + "       FROM "+m_calculateSpodTable+"                                            "
                                + "\n" + "       WHERE t_account IS NOT NULL                                              "
                                + "\n" + "       HAVING GROUPING(t_symbol) = 0                                            "
                                + "\n" + "       GROUP BY ROLLUP(t_symbol, (t_account, t_isForCurrency, t_number, t_creditAccount, t_debetAccount, t_date))) "
                                + "\n" + " ORDER BY t_symbol, t_isSymbolResult DESC,t_isForCurrency, t_account            ";


        var dataSource = TRsbDataSet(spodQweryText, RSDVAL_CLIENT, RSDVAL_STATIC);
        dataSource.setFieldType("date",   V_DATE);
        dataSource.setFieldType("rubSum", V_MONEY);
        dataSource.setFieldType("curSum", V_MONEY);
        dataSource.setFieldType("sum",    V_MONEY);
        dataSource.next();

        return dataSource;
    end;

    private macro calculate()
        var attributeSpodValue = rcbApplication.currentReport.attributeValue("СимволыСПОД");
        var dataSource         = TRsbDataset("SELECT * FROM (" + m_calculateTable + ")");

        var attributeValue    = rcbApplication.currentReport.attributeValue("Символы");
        var keyAttributeValue = attributeValue.createKeyValue();

        var compositeValue     = null;
        var compositeSpodValue = null;

        while (dataSource.next())
            if ((dataSource.roubleValue != 0) or (dataSource.currencyValue != 0))
                compositeSpodValue = attributeSpodValue.addValue();

                compositeSpodValue.fieldValue("code").exact          = dataSource.symbol;
                compositeSpodValue.fieldValue("roubleValue").exact   = dataSource.roubleValue;
                compositeSpodValue.fieldValue("currencyValue").exact = dataSource.currencyValue;
                compositeSpodValue.fieldValue("totalValue").exact    = dataSource.roubleValue + dataSource.currencyValue;

                keyAttributeValue.fieldValue("code") = dataSource.symbol;
                compositeValue = attributeValue.findValue(keyAttributeValue);

                compositeValue.fieldValue("roubleValue").exact   = compositeValue.fieldValue("roubleValue").exact   + dataSource.roubleValue;
                compositeValue.fieldValue("currencyValue").exact = compositeValue.fieldValue("currencyValue").exact + dataSource.currencyValue;
                compositeValue.fieldValue("totalValue").exact    = compositeValue.fieldValue("totalValue").exact    + dataSource.roubleValue + dataSource.currencyValue;
            end;
        end;
    end;

    macro execute()
        global.initializePackages();
        m_calculationOperation.cache();
        m_calculationOperation.calculate();
        rcbApplication.transactionManager.commit();
        calculate();
        m_calculationOperation.calculationProtocol().setSpodDataSet(createProtocolDataSource());
        m_calculationOperation.calculationProtocol().print();
        m_finalCalculate.execute();
        rcbApplication.transactionManager.commit();
    end;
end;


class (TCalculationOperationSpod) TCalculationOperationSpod2654(calculationOperation)
//    InitTCalculationOperationSpod(calculationOperation);

    if (global.getCalculationKind() == CALCULATION_KIND_REST)
        m_calculateSpodTable   = "drcbOpuSpodValue2654_vw";
    else
        m_calculateSpodTable   = "drcbDocOpuSpodValue2654_vw";
    end;

    m_calculationOperation = calculationOperation;
    m_calculateTable       = m_calculationOperation.getSymbolValueTable(m_calculateSpodTable);
    m_finalCalculate       = TCalculate32090();
end;
