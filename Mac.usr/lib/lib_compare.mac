// -------------------------------------------------------------------------------------------------
// @filename: lib_compare.mac
// @author  : 2013-01-06 zip_z. 
// @desc    : сравнение всего со всем
// @changes : 2013-01-08 zip_z. добавлены PCRE (regexp_instr, regexp_like, regexp_substr)
//          : 2013-09-27 zmp    добавлены RSL_LPAD и RSL_RPAD 
// -------------------------------------------------------------------------------------------------
import lib_sqltools, BankInter;

/*SDA 06.12.2013  для использования в дистрибутивных макросах, ранее выданных как хот-фикс*/
//Gurin S. 02.10.2014 I-00519387-2 переопределение ToDate
private macro ToDate( strYYYYMMDD ) 
  return date( int(substr(strYYYYMMDD, 9, 2)), int(substr(strYYYYMMDD, 6, 2)), int(substr(strYYYYMMDD, 1, 4)) );
end;

// @desc : Возвращает строку S, дополненную слева симолами A до числа символов N. Символ - наполнитель по умолчанию - пробел 
macro RSL_LPAD (S :string, N : integer, A : string):string
  if (isNull(A)) A = " "; end;
  var sql = execSQLSelect("SELECT LPAD(?, ?, ?) FROM DUAL", 
                          makeArray(SQLParam("", S), SQLParam("", N), SQLParam("", A)));
  if ((sql.moveNext()) and (sql.value(0) != NullVal)) return string(sql.value(0)) ; end;
  return "";
onError
  return "";
end;     

// @desc : Возвращает строку S, дополненную справа симолами A до числа символов N. Символ - наполнитель по умолчанию - пробел 
macro RSL_RPAD (S :string, N : integer, A : string):string
  if (isNull(A)) A = " "; end;
  var sql = execSQLSelect("SELECT RPAD(?, ?, ?) FROM DUAL", 
                          makeArray(SQLParam("", S), SQLParam("", N), SQLParam("", A)));
  if ((sql.moveNext()) and (sql.value(0) != NullVal)) return string(sql.value(0)) ; end;
  return "";
onError
    return "";
end;

// @desc : экранирование одинарных кавычек
macro PutDoubleQoute(str)
    return strsubst(string(str), "'", "''");
end;

// @desc    : подходит ли строка str по маске mask (true, если да)
macro stringEqMask( str:string, mask:string ):bool
    return ( CompareStrWithMasks( mask, str ) == 0 );
end;

// @desc  : выделение подстроки из строки str по маске pattern
// @return: V_STRING - выделенная подстрока или пустая строка, если pattern не совпал
// @bug   : устойчиво работает при nls_sort=russian, иначе на pattern = "[a-Z]" - ORA-12728: invalid range in regular expression
//          лечится либо установкой nls_sort либо костылями в виде "[a-zA-Z]" или "[[:alpha:]]", что немного не то
macro regexp_substr (str:string, pattern:string):string
    var retval = "";
    var sql = "select regexp_substr (:m_str, :m_pattern) re from dual";
    var parm = makeArray (SQLParam ("m_str", str), SQLParam ("m_pattern", pattern));
    sql = execSqlSelect (sql, parm);
    if ((sql.moveNext) and NotNull (sql.value ("re", null, V_STRING)))
        retval = sql.value ("re", null, V_STRING);
    end;
    return retval;
onerror 
    return retval;
end;

// @desc  : позиция первого вхождения маски pattern в строку str
// @return: V_INTEGER или 0, ежели ничего не найдено
// @bug   : устойчиво работает при nls_sort=russian, иначе на pattern = "[a-Z]" - ORA-12728: invalid range in regular expression
macro regexp_instr (str:string, pattern:string):integer
    var retval = 0;
    var sql = "select regexp_instr (:m_str, :m_pattern) re from dual";
    var parm = makeArray (SQLParam ("m_str", str), SQLParam ("m_pattern", pattern));
    sql = execSqlSelect (sql, parm);
    if ((sql.moveNext) and NotNull (sql.value ("re", null, V_INTEGER)))
        retval = sql.value ("re", null, V_INTEGER);
    end;
    return retval;
onerror 
    return retval;
end;

// @desc  : есть ли вхождение подстроки в строке str по маске pattern
// @return: V_BOOL - true, если да
// @bug   : устойчиво работает при nls_sort=russian, иначе на pattern = "[a-Z]" - ORA-12728: invalid range in regular expression
macro regexp_like (str:string, pattern:string):bool
    var retval = false;
    var sql = "with t as (select :m_str m_value from dual) select 1 re from t where regexp_like (m_value, :m_pattern)";
    var parm = makeArray (SQLParam ("m_str", str), SQLParam ("m_pattern", pattern));
    sql = execSqlSelect (sql, parm);
    if (sql.moveNext)
        retval = (sql.value ("re", null, V_INTEGER) == 1);
    end;
    return retval;
onerror 
    return retval;
end;
