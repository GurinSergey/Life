// -------------------------------------------------------------------------------------------------
// @filename: lib_fc_corporate.mac v.1
// @author  : 2012-12-20 zip_z. 
// @desc    : Общие функции для работы с корпоративными картами
// @changes : none
// -------------------------------------------------------------------------------------------------
import lib_sqltools;


/** состояния sms-оповещений (системный справочник 10002) **/
const FC_SMS_STATE_DISABLED = 0; // отключено
const FC_SMS_STATE_ENABLED  = 1; // включено

/** состояния корпоративных карт (системный справочник 10003) **/
const FC_STATE_NEW              = 1 ; // Новая                               
const FC_STATE_IS_MAKING        = 2 ; // На изготовлении                     
const FC_STATE_IS_MADE          = 3 ; // Изготовлена                         
const FC_STATE_SERVED           = 4 ; // Обслуживается                       
const FC_STATE_BLOCKED          = 5 ; // Заблокирована                       
const FC_STATE_STOLEN           = 6 ; // Украдена                            
const FC_STATE_LOST             = 7 ; // Утеряна                             
const FC_STATE_CLOSED           = 8 ; // Закрыта                             
const FC_STATE_REJECTED         = 9 ; // Отклонена                           
const FC_STATE_DONTMAKE         = 10; // Не изготавливать                    
const FC_STATE_TOBECLOSED       = 11; // К закрытию                          
const FC_STATE_NO_ACTIVATION    = 12; // Не активирована                     
const FC_STATE_WITHDRAW         = 13; // Изъять карту                        
const FC_STATE_CONTACT_ISSUER   = 14; // Необходимо связаться с эмитентом    
const FC_STATE_FRAUD            = 15; // Изъять, подозрение в мошенничестве  
const FC_STATE_NO_DT            = 16; // Без снятия                          
const FC_STATE_EXPIRED          = 17; // Истекла                             
const FC_STATE_PIN_BLOCKED      = 18; // PIN Блокировка                      


// @desc : подсчет базовой суммы комиссий 12.х для заданного partyid
// @param: partyid          V_INTEGER - ID субъекта
// @param: is_priority_pass V_BOOL    - учитывать ли карты PRIORITY PASS
macro Com_FC_GetBaseQuantity (partyid:integer, is_priority_pass:bool):integer
    var ret :integer = 0;
    var sql = " with t as (" +
              "     select --+index (c usr_front_cardinfo_idx0) leading (c)" +
              "              t_objectid, fc_name, c.date_begin, " +
              "              case when trunc ((add_months (date_begin, 12)), 'month') = trunc (sysdate, 'month') then 'X' else  '0'  end m_year1," +
              "              case when trunc ((add_months (date_begin, 24)), 'month') = trunc (sysdate, 'month') then 'X' else  '0'  end m_year2," +
              "              case when trunc ((add_months (date_begin, 36)), 'month') = trunc (sysdate, 'month') then 'X' else  '0'  end m_year3," +
              "              case when instr (upper (cardtype), 'PRIORITY PASS') > 0 then 'X' else  '0'  end m_priority_pass" +
              "       from usr_front_cardinfo c, dobjcode_dbt o " +
              "      where c.rs_code_client = o.t_code and t_state = 0 and o.t_objecttype = 3 and o.t_codekind = 1 and o.t_objectid = :m_oid and c.status = :m_status  " +
              "     ) " +
              "     select count (1) m_baseQuantity from t where 'X' in (m_year1, m_year2, m_year3) and m_priority_pass = :m_priority_pass ";

    var pp_state = ifThenElse(is_priority_pass, "X", "0");
    var params = makeArray (SQLParam ("m_oid"          , partyid         ), 
                            SQLParam ("m_status"       , FC_STATE_SERVED ), 
                            SQLParam ("m_priority_pass", pp_state        ));
    sql = execSqlSelect (sql, params, false);
    if (sql.moveNext ())
        ret = sql.value ("m_baseQuantity", null, V_INTEGER);
    end;
    
    return ret;
end;

// @desc: возвращает базовый запрос для скроллинга с информацией по картам
macro FC_GetSqlQuery ():string
    var sql = "SELECT  --+index (c usr_front_cardinfo_idx0) " + "\n" + 
              "       rs_code_client, p.t_partyid, fc_name, date_begin, date_end, cardkind_name, cardtype," + "\n" + 
              "       (SELECT t_name FROM dllvalues_dbt WHERE t_list = 10003 AND t_element = c.status) status," + "\n" + 
              "       (SELECT t_name FROM dllvalues_dbt WHERE t_list = 10002 AND t_element = c.sms)    sms," + "\n" + 
              "       p.t_name" + "\n" + 
              "    FROM usr_front_cardinfo c, dobjcode_dbt ok, dparty_dbt p" + "\n" + 
              "   WHERE c.rs_code_client = ok.t_code AND ok.t_codeKind(+) = 1 AND ok.t_ObjectType(+) = 3 AND ok.t_State = 0 AND ok.t_objectid = p.t_partyid ";
    return sql;
end;