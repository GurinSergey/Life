// -------------------------------------------------------------------------------------------------
// @filename: lib_windows_system.mac
// @author  : 2012-12-17 zip_z. 
// @desc    : библиотека процедур для работы с разными зверьми из операционной системы
// @changes : 2012-12-26 zip_z. (добавлены функции RSI_SelectFile, RSI_GetIPAddrArray)
//            2013-01-19 zip_z. (добавлена RSI_CheckPermission)
//            2013-02-20 Chesnokov D.S. По C-16548 если возвращаем массив IP, то делаем правильно
//            2013-03-14 zip_z. I-00339886 (проверяем наличие прав на создание COM WbemScripting.SWbemLocator)
// -------------------------------------------------------------------------------------------------

import rcw;

/** **/
private macro FSWbemServiceExecQuery (query:string, isRemote:bool)
    if (ValType (isRemote) == V_UNDEF) isRemote = true; end;
    const COM_OBJECT_NAME = "WbemScripting.SWbemLocator";
    
    var FSWbemLocator = CreateObject ("rsax", "TRsAxServer", "RsAxServer",  isRemote).CreateCOMObject (COM_OBJECT_NAME);
    var FSWbemService = FSWbemLocator.ConnectServer ();
    var ret = FSWbemService.ExecQuery (query).CreateEnum;
    
    if (not(IsEqClass("RCW\\TAxEnum", ret)))
        msgbox ("Нет прав на создание COM-объекта " + COM_OBJECT_NAME + ".|Обратитесь к системному администратору.");
    end;
    
    return ret;
end;


// @desc  : получение количества свободной оперативной памяти
// @param : isRemote:bool - true (на application server), false - на терминале пользователя
// @return: V_INTEGER или 0, если что-то пошло не так :)
macro RSI_GetFreeRamAmount (isRemote:bool):integer
    var FSWbemServiceQueryEnum = FSWbemServiceExecQuery ("SELECT FreePhysicalMemory FROM Win32_OperatingSystem", isRemote);
    var i;
    while (FSWbemServiceQueryEnum.Next)
        i = FSWbemServiceQueryEnum.Item;
        i = i.Properties_.CreateEnum;
        while (i.next)
            if (i.item.name == "FreePhysicalMemory")
                return int (i.item.value);
            end;
        end;
    end;
    return 0;
onError return 0;
end;

// @desc  : получение первого IP-адреса клиентского хоста (терминала)
// @return: TARRAY с айпишниками. Может быть вообще пустым
macro RSI_GetIPAddrArray ():TArray
    var i;
    var ret = TArray ();
    var FSWbemServiceQueryEnum = FSWbemServiceExecQuery ("Select IPAddress from Win32_NetworkAdapterConfiguration where IPEnabled=TRUE",  false);
    
    while (FSWbemServiceQueryEnum.Next)
        i = FSWbemServiceQueryEnum.Item;
        i = i.Properties_.CreateEnum;
        while (i.next)
            if (i.item.name == "IPAddress")
                ret(ret.Size()) = i.item.value;
            end;
        end;
    end;
    return ret;
onError return ret;
end;


// @desc   : окно выбора файла по маске c описанием maskDescription (по умолчанию - все файлы)
// @return : V_STRING имя файла или массив имен файлов (TARRAY) или пустая строка, если отказались от выбора файла
// @example: - одиночный выбор макросов
//              var files = RSI_SelectFile ("RSL Macro, *.mac");
//              msgbox (files);
//           - множественный выбор всех файлов
//              var files = RSI_SelectFile (null, true);
//              msgbox (join (files, ";"));
//       
macro RSI_SelectFile (maskDescription:string, multiSelect:bool):variant
    if (maskDescription == null) maskDescription = "Все файлы (*.*),*.*"; end;
    if (multiSelect == null)     multiSelect = false;                     end;
    
    var xl   = CreateObject ("rsax", "TRsAxServer", "RsBankAxServer", false).CreateComObject ("Excel.Application",true);
    var path = xl.application.GetOpenFileName (maskDescription, null, "Выберите файл для загрузки", null, MultiSelect);
    if (not path) path = ""; end;
    xl.quit ();
    return path;
end;

// @desc   : проверяем права доступа к папке path. Если showError = true, ругаемся. 
//           Прямые слэши использовать нельзя (увы). Проверятор запускается на машине пользователя от имени пользователя же.
// @return : V_BOOL (true - если права есть)
macro RSI_CheckPermission (path:string, showError:bool):bool
    var shell = CreateObject ("rsax", "TRsAxServer", "RsAxServer",  false).CreateCOMObject ("Shell.Application");
    var folder = shell.nameSpace (path);
    return (folder.items ().count () >= 0); // если удалось получить список файлов - значит доступ есть
onError
    if (showError) msgbox ("Отсутствуют права доступа для чтения папки |" + path); end;
    return false; // при ошибке не создаётся объект folder, доступа нет
end;