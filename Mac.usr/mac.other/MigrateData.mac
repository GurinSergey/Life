/*******************************************************************************************/
/* Процедуры экспорта/импорта пользовательских значений в XML-файлы для
 репликации/резервного сохранения с эталонного стенда ПРББ на стенды банков группы Лайф 
 Д.Савченко, С.Агеев. */
/*******************************************************************************************/
import oralib, likepy, globals , "Regtools.mac", RCW, rsexts;

/*13.03.2013 Chesnokov D.S. логгирование запуска для поиска неиспользуемых макросов*/
ExecmacroFile("lib_log.mac", "LogProcedure", "MigrateData.mac");

private var gOperList, FolderName, gNodes, gOper, gProgList;
private var _k= -1;

Macro UploadFileds ( node, sql )
    Var y = 2, p, val;

    while ( (y < parmcount) and GetParm (y, p) )

        if ( ValType (sql.value (p)) == 26 )
            val = ""; 
        else
            val = sql.value (p);
        end;
        node.SetAttribute (p, val);
        y = y + 1;
    end;
End;

Macro UploadFiledsParm ( node, sql )
    Var y = 2, p, val;

    while ( (y < parmcount) and GetParm (y, p) )

        if ( ValType (sql.value (p)) == 26 )
            val = ""; 
        else
            val = sql.value (p);
           if (valtype(val) == v_string )
            val = strsubst(val, strfor(1),"");
           // val = strsubst(val, "\n", "");
           end;
        end;
        node.SetAttribute (p, val);
        y = y + 1;
    end;
End;

//-----------------------------------------------------------------------------------------
/*выгрузка пользовательских модулей*/
Macro UploadDITEMUSER ( node, xml )
    Var sql = "select T_CIDENTPROGRAM,T_ICASEITEM,T_IKINDMETHOD,T_IKINDPROGRAM,T_IHELP,CHR(1) T_RESERVE,T_SZNAMEITEM,substr(t_parm,1) t_parm from DITEMUSER_DBT -- where T_CIDENTPROGRAM = 'Г'  and T_ICASEITEM= 23 ", mnode;
    BegAction (1, "Выгрузка", false);
    sql = ExecSqlSelect (sql);
    while ( sql.MoveNext () )
        mnode = xml.CreateElement ("DITEMUSER_DBT");

        node.appendChild(xml.createTextNode("\n "));
        ChangeAction ("Выгрузка DITEMUSER_DBT ");
        UploadFileds (mnode, sql,"T_CIDENTPROGRAM","T_ICASEITEM","T_IKINDMETHOD","T_IKINDPROGRAM","T_IHELP","T_RESERVE","T_SZNAMEITEM","T_PARM");
        node.AppendChild (mnode);
    end;
 EndAction ();
End;
/*******************************************************************************************/
/*ветки реестра */
Macro UploadRegparm ( node, xml )
    debugbreak;
    var params = makeArray( SQLParam (":1", ""), SQLParam (":2", "0"), SQLParam (":3", "1"));
    var err = execStoredfunc ("get_reg_tree", V_UNDEF, params);
    Var sql = "select * from reg_tree", mnode;
    BegAction (1, "Выгрузка", false);
    sql = ExecSqlSelect (sql);
    while ( sql.MoveNext () )

        mnode = xml.CreateElement ("DREGPARM_DBT");
        node.appendChild(xml.createTextNode("\n "));
        ChangeAction ("Выгрузка DREGPARM_DBT ");
        UploadFiledsParm (mnode, sql,"T_KEYID", "T_PARENTID", "T_NAME", "T_TYPE", "T_GLOBAL", "T_DESCRIPTION", "T_SECURITY", "T_PATH");
        node.AppendChild (mnode);
    end;
 EndAction ();
End;
/*******************************************************************************************/
// Выгрузка групп
Macro UploadGroup (node, xml)
   Var sql = " SELECT   t_groupid, t_name, t_comment, t_isnotlocal, t_department," +
	      "\n          t_isoutersystem" +
	      "\n     FROM dacsgroup_dbt" +
	      "\n ORDER BY t_groupid;";
   Var mnode;
   BegAction (1, "Выгрузка", false);
   sql = ExecSqlSelect (sql);
   while ( sql.MoveNext () )
      mnode = xml.CreateElement ("DACSGROUP_DBT");
      node.appendChild(xml.createTextNode("\n "));
      ChangeAction ("Выгрузка DACSGROUP_DBT ");
      UploadFileds (mnode, sql,"T_GROUPID","T_NAME","T_COMMENT","T_ISNOTLOCAL","T_DEPARTMENT","T_ISOUTERSYSTEM");
      node.AppendChild (mnode);
   end;
 EndAction ();
End;  

/*******************************************************************************************/
// Выгрузка подгрупп
Macro UploadGroupLink (node, xml)
   Var sql = "SELECT t_groupid, t_parentid FROM dacsgrouplink_dbt";
   Var mnode;
   BegAction (1, "Выгрузка", false);
   sql = ExecSqlSelect (sql);
   while ( sql.MoveNext () )
      mnode = xml.CreateElement ("DACSGROUPLINK_DBT");
      node.appendChild(xml.createTextNode("\n "));
      ChangeAction ("Выгрузка DACSGROUPLINK_DBT ");
      UploadFileds (mnode, sql,"T_GROUPID","T_PARENTID");
      node.AppendChild (mnode);
   end;
 EndAction ();
End;  

/*******************************************************************************************/
// Выгрузка привилегий для груп
Macro UploadGroupPriveleges (node, xml)
   Var sql = " SELECT   t_restgroupid, t_privid, t_restid, t_itemlevel, t_itemid" +
	      "\n    FROM dacsrestgroup_dbt" + 
	      "\n ORDER BY t_restgroupid;";
   Var mnode;
   BegAction (1, "Выгрузка", false);
   sql = ExecSqlSelect (sql);
   while ( sql.MoveNext () )
      mnode = xml.CreateElement ("DACSRESTGROUP_DBT");
      node.appendChild(xml.createTextNode("\n "));
      ChangeAction ("Выгрузка DACSRESTGROUP_DBT ");
      UploadFileds (mnode, sql,"T_RESTGROUPID", "T_PRIVID", "T_RESTID", "T_ITEMLEVEL", "T_ITEMID");
      node.AppendChild (mnode);
   end;
 EndAction ();
End;

Macro UploadRole(node, xml)
	var sql = "SELECT t_roleid, t_parentid, t_name, t_comment, t_menuid, t_isoutersystem" +
		   "\n  FROM dacsroletree_dbt;";
	var mnode;
	BegAction (1, "Выгрузка", false);
   	sql = ExecSqlSelect (sql);
	while ( sql.MoveNext () )
		mnode = xml.CreateElement ("DACSROLETREE_DBT");
		node.appendChild(xml.createTextNode("\n "));
		ChangeAction ("Выгрузка DACSROLETREE_DBT ");
		UploadFileds (mnode, sql,"T_ROLEID","T_PARENTID","T_NAME","T_COMMENT","T_MENUID","T_ISOUTERSYSTEM");
		node.AppendChild (mnode);
	end;

EndAction ();
End;

Macro UploadMenu (node, xml)
Var sql = "SELECT t_menuid, t_name, t_branch, t_useinchild, t_isdistributed," +
	   "\n       t_identprogram, t_isoutersystem" + 
	   "\n  FROM dmenutpl_dbt;";
   Var mnode;
   BegAction (1, "Выгрузка", false);
   sql = ExecSqlSelect (sql);
   while ( sql.MoveNext () )

      mnode = xml.CreateElement ("DMENUTPL_DBT");
      node.appendChild(xml.createTextNode("\n "));
      ChangeAction ("Выгрузка DMENUTPL_DBT ");
      UploadFileds (mnode, sql,"T_MENUID", "T_NAME", "T_BRANCH", "T_USEINCHILD", "T_ISDISTRIBUTED", "T_IDENTPROGRAM", "T_ISOUTERSYSTEM");
      node.AppendChild (mnode);
   end;
 EndAction ();
End;

Macro UploadMenuUserParam (node, xml)
Var sql = "SELECT parm.t_objectid, parm.t_istemplate, parm.t_cidentprogram," +
	   "\n       parm.t_inumberpoint,substr(parm.t_parm,1) t_parm" +
	   "\n  FROM dmenutpl_dbt tpl, dmenuparm_dbt parm" +
	   "\n WHERE tpl.t_menuid = parm.t_objectid AND parm.t_istemplate = 'X';";
   Var mnode;
   BegAction (1, "Выгрузка", false);
   sql = ExecSqlSelect (sql);
   while ( sql.MoveNext () )
      mnode = xml.CreateElement ("DMENUPARM_DBT");
      node.appendChild(xml.createTextNode("\n "));
      ChangeAction ("Выгрузка DMENUPARM_DBT ");
      UploadFileds (mnode, sql,"T_OBJECTID", "T_ISTEMPLATE", "T_CIDENTPROGRAM", "T_INUMBERPOINT", "T_PARM");
      node.AppendChild (mnode);
   end;
 EndAction ();
End;

Macro UploadMenuItem (node, xml)

Var sql = "SELECT item.t_objectid, item.t_istemplate, item.t_iidentprogram," + 
	   "\n       item.t_inumberpoint, item.t_inumberfather, item.t_inumberline," +
	   "\n       item.t_icaseitem, item.t_csystemitem, item.t_sznameitem," +
	   "\n       item.t_sznameprompt, item.t_ihelp, item.t_iprogitem" +
	   "\n  FROM dmenutpl_dbt tpl, dmenuitem_dbt item" +
	   "\n WHERE tpl.t_menuid = item.t_objectid AND item.t_istemplate = 'X';";
   Var mnode;
   BegAction (1, "Выгрузка", false);
   sql = ExecSqlSelect (sql);
   while ( sql.MoveNext () )
      mnode = xml.CreateElement ("DMENUITEM_DBT");
      node.appendChild(xml.createTextNode("\n "));
      ChangeAction ("Выгрузка DMENUITEM_DBT ");
      UploadFileds (mnode, sql, "t_iprogitem", "t_objectid", "t_istemplate", "t_iidentprogram","t_inumberpoint", "t_inumberfather", "t_inumberline","t_icaseitem", "t_csystemitem", "t_sznameitem", "t_sznameprompt", "t_ihelp");
      node.AppendChild (mnode);
   end;
 EndAction ();
End;


Macro ExportItem (chois_upl)
       Var filename;
    	Var xml = ActiveX ("Microsoft.XMLDOM"), y, cnt = 0, node;
    	xml.appendChild (xml.createProcessingInstruction ("xml"," version='1.0' encoding='Windows-1251'"));
    	Var mainnode = xml.CreateElement ("ITEMDATE");

       debugbreak;

    	mainnode.SetAttribute ("Date", Date ());
    	mainnode.SetAttribute ("Time", Time ());
    	mainnode.SetAttribute ("Oper", {oper});
    	xml.AppendChild (mainnode);
	if (chois_upl==0)
	 	UploadDITEMUSER ( mainnode, xml);
		filename="DITEMUSER_DBT.XML";
	elif (chois_upl==1)	
	 	UploadRegparm ( mainnode, xml);
		filename="DREGPARM_DBT.XML";
	elif (chois_upl==2)
             	UploadGroup ( mainnode, xml);
		UploadGroupLink  ( mainnode, xml);
	      	//UploadGroupPriveleges ( mainnode, xml);
		filename="DACSGROUP_DBT.XML";	
	elif (chois_upl==3)
		
		UploadMenu ( mainnode, xml);             	
		UploadMenuUserParam ( mainnode, xml);
     		UploadMenuItem ( mainnode, xml);
		filename="DMENUTPL_DBT.XML";
	elif (chois_upl==4)
		UploadRole ( mainnode, xml);
		filename="DACSROLETREE_DBT.XML";

       end;
    	mainnode.appendChild(xml.createTextNode("\n"));   
//	msgbox(FolderName+"\\"+filename);
    	xml.Save (FolderName+"\\"+filename);
    	xml = NULL;
    	SetOutput (GetTxtFileName ("reportexp"));
    	println ("Сформирован файл экспорта "+filename);

       ViewFile (SetOutput ());
End;
/***********************************************************************************************/
macro InsertTrn (x,nodename)
     Var sql,cmd;
     var istemplate;

/* Useprogress(_k =_k+1); */

        if ( nodeName == "DITEMUSER_DBT" )
        var tcidentprogram, ticaseitem, tikindmethod, tikindprogram, tsznameitem, tparam;
	 if (x.GetAttribute ("T_CIDENTPROGRAM") == "")
		tcidentprogram = "chr(0)";
	 else
		tcidentprogram ="'" + x.GetAttribute ("T_CIDENTPROGRAM") + "'";
	 end;

	 if (x.GetAttribute ("T_ICASEITEM") == "")
		ticaseitem = 0;
	 else
		ticaseitem = + x.GetAttribute ("T_ICASEITEM");
	 end;

	 if (x.GetAttribute ("T_IKINDMETHOD") == "")
		tikindmethod = 0;
	 else
		tikindmethod = x.GetAttribute ("T_IKINDMETHOD");
	 end;

	 if (x.GetAttribute ("T_IKINDPROGRAM") == "")
		tikindprogram = 0;
	 else
		tikindprogram =x.GetAttribute ("T_IKINDPROGRAM");
	 end;

	 if (x.GetAttribute ("T_SZNAMEITEM") == "")
		tsznameitem = "chr(0)";
	 else
		tsznameitem = "'" + strsubst(x.GetAttribute ("T_SZNAMEITEM"),"'","''") + "'";
	 end;
	 if (x.GetAttribute ("T_PARM") == "")
		tparam = "chr(0)";
	 else
		tparam ="'" + x.GetAttribute ("T_PARM") + "'";
	 end;
        
sql= " MERGE INTO ditemuser_dbt "+
     "\n USING (select * from dual) "+
"\n    ON (t_cidentprogram = "+ tcidentprogram +" AND t_icaseitem = "+ ticaseitem +")"+
"\n  WHEN MATCHED THEN UPDATE "+
  "\n   SET t_ikindmethod = "+ tikindmethod +" , " +
  "\n       t_ikindprogram = "+tikindprogram+ " , " +
  "\n       t_ihelp =  0, " +
  "\n       t_reserve = CHR(1), " + 
  "\n       t_sznameitem = "+tsznameitem+" , " +
  "\n       t_parm = "+ tparam +
"\n WHEN NOT MATCHED THEN INSERT " +
"\n (T_CIDENTPROGRAM,T_ICASEITEM,T_IKINDMETHOD,T_IKINDPROGRAM,T_IHELP,T_RESERVE,T_SZNAMEITEM,T_PARM) "+
  "\n  VALUES ( "+tcidentprogram+ ","+
  "\n            "+ticaseitem+","+
  "\n            "+tikindmethod+","+
  "\n            "+tikindprogram+","+
  "\n            0"+","+
  "\n            CHR(1)"+","+
  "\n           "+tsznameitem+","+
  "\n           "+tparam+")";
  cmd= RSDCommand(sql);
  cmd.Execute();

     elif ( nodeName == "DREGPARM_DBT" )
//debugbreak;
//-------------------------отчет по реестру
	var param, ErrCode, RegKey;
        var xpath = x.GetAttribute ("T_PATH");
     	xpath = string(substr(xpath, 2));

        RegKey = GetRegKey(xpath);
        var  _xpath = GetregkeyPath(RegKey);

	//GetRegistryValue(xpath, 0, param, ErrCode);
	if ((valtype(_xpath) != v_string) or (xpath != _xpath))
		
		if (StrSubst ( xpath, "/", "" ) == xpath)
			println ("==================================");		
			var tpath, ttype, tglobal, tdescription, tsecurity; 
	 		if (xpath == "")
				tpath = "";
	 		else
				tpath = xpath;
	 		end;
	 		if ((x.GetAttribute("T_TYPE") == "") OR (valtype(x.GetAttribute("T_TYPE")) == 26))
				ttype = 2;
	 		else
				ttype =x.GetAttribute("T_TYPE");
	 		end;
			
	 		if ((x.GetAttribute ("T_DESCRIPTION") == "") OR (valtype(x.GetAttribute ("T_DESCRIPTION")) == 26))
				tdescription = "";
	 		else
				tdescription =x.GetAttribute ("T_DESCRIPTION");
	 		end;
	 		if ((x.GetAttribute ("T_GLOBAL") == "") OR (valtype(x.GetAttribute ("T_GLOBAL")) == 26))
				tglobal = "";
	 		else
				tglobal =x.GetAttribute ("T_GLOBAL");
	 		end;
	 		if ((x.GetAttribute("T_SECURITY") == "") OR (valtype(x.GetAttribute("T_SECURITY")) == 26))
				tsecurity = "";
	 		else
				tsecurity =x.GetAttribute("T_SECURITY");
	 		end;
		      //	debugbreak;
			InsertRegPath(tpath, ttype, tglobal, tdescription, tsecurity);

	//		InsertRegPath("PRBB\\super_TEST\\БАНКА",2,"X","Тестовая ветка реестра","X"); 
	//		exit();
			println ("Создана новая ветка реестра :" + xpath);		
			println ("==================================");		
		else
//			msgbox("/");
		end;
	end;
     elif ( nodeName == "DACSGROUP_DBT" )
 sql = "MERGE INTO dacsgroup_dbt" +
   	"\n USING (SELECT *" +
       "\n	FROM DUAL)" +
   	"\n	ON (t_groupid = " + x.GetAttribute ("T_GROUPID") + ")" +
   	"\n	WHEN MATCHED THEN" +
      	"\n	UPDATE" +
       "\n  		SET t_name =  '"+ x.GetAttribute ("T_NAME") +"', t_comment = '" + x.GetAttribute ("T_COMMENT") + "', t_isnotlocal = '" + x.GetAttribute ("T_ISNOTLOCAL") + "'," +
       "\n      		t_department = " + x.GetAttribute ("T_DEPARTMENT") + ", t_isoutersystem = chr(0)" + 
   	"\n	WHEN NOT MATCHED THEN" +
      	"\n	INSERT (t_groupid, t_name, t_comment, t_isnotlocal, t_department," +
       "\n       		t_isoutersystem)" +
      	"\n	VALUES (" + x.GetAttribute ("T_GROUPID") + ", '" + x.GetAttribute ("T_NAME") + "', '" + x.GetAttribute ("T_COMMENT") + "', '" + x.GetAttribute ("T_ISNOTLOCAL") + "', " + x.GetAttribute ("T_DEPARTMENT") + ", chr(0));";	
 cmd= RSDCommand(sql);
 cmd.Execute();
     elif ( nodeName == "DACSGROUPLINK_DBT" )
 sql = "MERGE INTO dacsgrouplink_dbt" +
	"\n USING (SELECT *" +
	"\n FROM DUAL)" +
	"\n ON (t_groupid="+ x.GetAttribute ("T_GROUPID") +" AND t_parentid="+ x.GetAttribute ("T_PARENTID") +")" +
	"\n WHEN NOT MATCHED THEN" +
	"\n INSERT (t_groupid, t_parentid)" +
	"\n VALUES ("+ x.GetAttribute ("T_GROUPID") +", "+ x.GetAttribute ("T_PARENTID") +");";	
 cmd= RSDCommand(sql);
 cmd.Execute();
     elif ( nodeName == "DACSRESTGROUP_DBT" )

   
 sql = "MERGE INTO DACSRESTGROUP_DBT" +
   	"\n USING (SELECT *" + 
	"\n            FROM DUAL)" +
	"\n   ON (T_RESTGROUPID=" + x.GetAttribute ("T_RESTGROUPID") + ")" +
	"\n   WHEN MATCHED THEN" +
	"\n      UPDATE" +
	"\n         SET T_PRIVID= "+ x.GetAttribute ("T_PRIVID") +", T_RESTID = " + x.GetAttribute ("T_RESTID") + ", T_ITEMLEVEL= " + x.GetAttribute ("T_ITEMLEVEL") + ", T_ITEMID= " + x.GetAttribute ("T_ITEMID") + 
	"\n   WHEN NOT MATCHED THEN" +
	"\n      INSERT (T_RESTGROUPID, T_PRIVID, T_RESTID, T_ITEMLEVEL, T_ITEMID)" +
	"\n      VALUES (" + x.GetAttribute ("T_RESTGROUPID") + ", " + x.GetAttribute ("T_PRIVID") + ", " + x.GetAttribute ("T_RESTID") + ", " + x.GetAttribute ("T_ITEMLEVEL") + ", " + x.GetAttribute ("T_ITEMID") + ");";
 cmd= RSDCommand(sql);
 cmd.Execute();	
     elif ( nodeName == "DMENUTPL_DBT" )

 sql = "INSERT INTO DMENUTPL_DBT (T_MENUID, T_NAME, T_BRANCH, T_USEINCHILD, T_ISDISTRIBUTED, T_IDENTPROGRAM, T_ISOUTERSYSTEM)" +
	"\n      VALUES ("+x.GetAttribute ("T_MENUID")+", '"+x.GetAttribute ("T_NAME")+"', "+x.GetAttribute ("T_BRANCH")+", '"+x.GetAttribute ("T_USEINCHILD") +"', '"+x.GetAttribute ("T_ISDISTRIBUTED") +"', '"+x.GetAttribute ("T_IDENTPROGRAM")+"', '"+x.GetAttribute ("T_ISOUTERSYSTEM")+"');";

 cmd= RSDCommand(sql);
 cmd.Execute();
 
 sql = "COMMIT;"; 
 cmd= RSDCommand(sql);
 cmd.Execute();
     elif ( nodeName == "DMENUPARM_DBT" )
//     debugbreak;
//     if ((trim(x.GetAttribute("t_istemplate"))=="") or (ValType(x.GetAttribute("T_ISTEMPLATE")) == 26))
//	istemplate = "CHR(0)";
//     ELSE
//       istemplate = "'"+x.GetAttribute ("T_ISTEMPLATE") +"'";        
//     end;  
 istemplate = "'X'";
 sql = "INSERT INTO DMENUPARM_DBT (T_OBJECTID, T_ISTEMPLATE, T_CIDENTPROGRAM, T_INUMBERPOINT, T_PARM)" +
	"\n      VALUES ("+x.GetAttribute ("T_OBJECTID")+", "+ istemplate+", '"+x.GetAttribute ("T_CIDENTPROGRAM")+"', "+x.GetAttribute ("T_INUMBERPOINT")+", '"+x.GetAttribute ("T_PARM")+"');";
 cmd= RSDCommand(sql);
 cmd.Execute();
	sql ="COMMIT;";
	cmd= RSDCommand(sql);
	cmd.Execute();
	
     elif ( nodeName == "DMENUITEM_DBT" )
///Menuuuu
//     debugbreak;
//     if ((trim(x.GetAttribute("t_istemplate"))=="") or (ValType(x.GetAttribute("T_ISTEMPLATE")) == 26))
//	istemplate = "CHR(0)";
//     ELSE
//       istemplate = "'"+x.GetAttribute ("T_ISTEMPLATE") +"'";        
//     end;
	istemplate = "'X'";
	var iprogitem;
	if (x.GetAttribute("t_iprogitem")=="")
		iprogitem = "null";
	else
		iprogitem = x.GetAttribute ("t_iprogitem");
	end;
 sql = "INSERT INTO DMENUITEM_DBT (T_OBJECTID, T_ISTEMPLATE, T_IIDENTPROGRAM, T_INUMBERPOINT, T_INUMBERFATHER, T_INUMBERLINE, T_ICASEITEM, T_CSYSTEMITEM, T_SZNAMEITEM, T_SZNAMEPROMPT, T_IHELP, T_IPROGITEM)"+
 	"\n      VALUES ("+x.GetAttribute ("t_objectid")+", "+istemplate+","+x.GetAttribute ("t_iidentprogram")+","+x.GetAttribute ("t_inumberpoint")+","+x.GetAttribute ("t_inumberfather")+","+x.GetAttribute ("t_inumberline")+","+x.GetAttribute ("t_icaseitem")+", '"+x.GetAttribute ("t_csystemitem")+"', '"+x.GetAttribute ("t_sznameitem")+"', '"+x.GetAttribute ("t_sznameprompt")+"',"+x.GetAttribute ("t_ihelp")+","+iprogitem+");";

// msgbox(sql);
 cmd= RSDCommand(sql);
 cmd.Execute();	
	sql ="COMMIT;";
	cmd= RSDCommand(sql);
	cmd.Execute();

elif ( nodeName == "DACSROLETREE_DBT" )
	 var troleid, tname, tparentid, tcomment, tmenuid, tisoutersystem;
	 if (x.GetAttribute("T_ROLEID") == "")
	      troleid = 0;
	 else
	      troleid =x.GetAttribute ("T_ROLEID");
	 end;
	 if (x.GetAttribute("T_NAME") == "")
	      tname = "chr(0)";
	 else
	      tname ="'"+ x.GetAttribute("T_NAME") +"'";
	 end;
	 if (x.GetAttribute("T_PARENTID") == "")
	      tparentid = 0;
	 else
	      tparentid =x.GetAttribute("T_PARENTID");
	 end;
	 if (x.GetAttribute("T_COMMENT") == "")
	      tcomment = "chr(0)";
	 else
	      tcomment ="'"+ x.GetAttribute("T_COMMENT") +"'";
	 end;
	 if (x.GetAttribute("T_MENUID") == "")
	      tmenuid = 0;
	 else
	      tmenuid =x.GetAttribute("T_MENUID");
	 end;
	//
      	 if (x.GetAttribute("T_ISOUTERSYSTEM") == "")
	      tisoutersystem = "chr(0)";
	 else
	      tisoutersystem ="'"+ x.GetAttribute("T_ISOUTERSYSTEM") +"'";
	 end;




	sql = " MERGE INTO DACSROLETREE_DBT USING (SELECT *" +
	      "\n FROM DUAL)" +
	      "\n  ON (T_ROLEID= "+ troleid  +" AND T_NAME = "+ tname +")" +
	      "\n  WHEN MATCHED THEN" +
	      "\n  UPDATE" +
	      "\n  SET T_PARENTID="+ tparentid +" , T_COMMENT="+ tcomment +", T_MENUID="+ tmenuid +" , T_ISOUTERSYSTEM ="+ tisoutersystem +
	      "\n  WHEN NOT MATCHED THEN" +
	      "\n  INSERT (T_ROLEID, T_PARENTID, T_NAME, T_COMMENT, T_MENUID, T_ISOUTERSYSTEM)" +
	      "\n  VALUES ("+ troleid  +", "+ tparentid +" ,"+ tname +", "+ tcomment +","+ tmenuid +" ,"+ tisoutersystem +");";
	cmd= RSDCommand(sql);
	cmd.Execute();	
end;
 return true;
onerror(x);
Println(sql);
 return false;
end;
/***********************************************************************************************/
Macro ImportItem (chois_upl)
   Var filename, sql, cmd;
	if (chois_upl==0)
 		filename="DITEMUSER_DBT.XML";
	elif (chois_upl==1)	
 		filename="DREGPARM_DBT.XML";   
	      //	sql="ALTER TRIGGER dregparm_dbt_t0_ainc DISABLE;";
	      //	cmd= RSDCommand(sql);
	      //	cmd.Execute();

	elif (chois_upl==2)
 		filename="DACSGROUP_DBT.XML";
		sql="ALTER TRIGGER DACSRESTGROUP_DBT_T0_AINC DISABLE;";
		cmd= RSDCommand(sql);
		cmd.Execute();
	elif (chois_upl==3)
   

 		filename="DMENUTPL_DBT.XML";
	elif (chois_upl==4)
 		filename="DACSROLETREE_DBT.XML";
        end;		

/*SDA - вернул старый режим по просьбе С.Негашовой */
/*
	    var ob;
	    ob = CreateObject ("rcwhost", "TRcwHost", "MyInst", false);
           ob.Execute;
           ob.AddModule ("trmdlg");

	    var stat_;
	    var filename_;
           //stat_=ob.Call ("TrmSelectFile", null, @filename, filename, null, "Выберите расположение файла", false);
		   stat_=ob.Call ("TrmSelectFile", null, @filename_   ,string("Файл импорта|",filename), null, "Выберите расположение файла", false);
	    
//	    filename = tooem (filename, true);
		if (substr(filename_) != "\\\\")
			filename_ = "$" + filename_;
		end;
		if (CopyFile(filename_, "..\\txtfile\\"+filename))
			filename = "..\\txtfile\\"+ filename;
//			msgbox(filename);
		else
//			msgbox("Не cкопировали");
		end;
*/
/*SDA - вернул старый режим по просьбе С.Негашовой */
	if ( not SelectFile (FileName, FolderName+"\\" + filename, "Укажите файл для импорта")) 
		exit(1);
	end;


    Var xml = ActiveX ("Microsoft.XMLDOM"), x;

    if ( not xml.Load (filename))
        MsgBox ("Не удалось открыть файл ", filename, ".|Возможно файл не существует или имеет неверный формат.");
        return false;
    end;
    if ( not GetTrue (true, "Загрузить данные из файла ("+filename+")?") )
        return false;
    end;
//    exit();
    println ("Загружаем файл ", filename, "\n");
    if (chois_upl==3)
	 if ( GetTrue (true, "При выполнении данного пункта структура меню будет полностью изменена.") )
		var sql1 ="DELETE FROM DMENUTPL_DBT";
		var cmd1= RSDCommand(sql1);
		cmd1.Execute();
		sql1 ="COMMIT";
		cmd1= RSDCommand(sql1);
		cmd1.Execute();
		sql1 ="DELETE FROM DMENUPARM_DBT WHERE  T_ISTEMPLATE = 'X'";
		cmd1= RSDCommand(sql1);
		cmd1.Execute();
		sql1 ="COMMIT";
		cmd1= RSDCommand(sql1);
		cmd1.Execute();
		sql1 ="DELETE FROM DMENUItem_DBT WHERE T_ISTEMPLATE = 'X'";
		cmd1= RSDCommand(sql1);
		cmd1.Execute();
	      	sql1 ="COMMIT";
		cmd1= RSDCommand(sql1);
		cmd1.Execute();
	else
		msgbox("Загрузка прервана пользователем (Нажмите ESC)");
		exit(0);
	end;

   end;

    BegAction (0, "", false);

//   initprogress(-1,"Выполнение процедуры ","Выполнение процедуры");
   _k =_k+1;
  testevent(1);
//  Useprogress(_k);
//    RslDefCon.BeginTrans();
    for ( x, xml.ChildNodes.item (1).childNodes )
   _k =_k+1;
//   Useprogress(_k);

       ChangeAction ("Загрузка");
/*       TestEvent (1);*/
      if (not InsertTrn(x,x.nodename))
        runerror("Ошибка загрузки данных ");
      end;
    end;  /* for */                                                   
//  Remprogress;
    var params, err;
    if (chois_upl==0)
    elif (chois_upl==1)	
      //	sql = "ALTER TRIGGER dregparm_dbt_t0_ainc ENABLE;";
      //	cmd= RSDCommand(sql);
      //	cmd.Execute();
      //	params = makeArray( SQLParam (":1", "dregparm_dbt"));
      //	err = execStoredfunc ("RSB_AINC.restore_seq", V_UNDEF, params);
   
      //	if (err != "no_error")
      //		return err;
      //	end;

    elif (chois_upl==2)
	sql = "ALTER TRIGGER DACSRESTGROUP_DBT_T0_AINC ENABLE;";
	cmd= RSDCommand(sql);
	cmd.Execute();
	params = makeArray( SQLParam (":1", "DACSRESTGROUP_DBT"));

	err = execStoredfunc ("RSB_AINC.restore_seq", V_UNDEF, params);
   
  	if (err != "no_error")
		return err;
	end;

    elif (chois_upl==3)
    end;		

  //RslDefCon.CommitTrans(); 
    EndAction ();
    return true;

 onerror(x);
// RslDefCon.RollbackTrans();
 sql = "ALTER TRIGGER DACSRESTGROUP_DBT_T0_AINC ENABLE;";
 cmd= RSDCommand(sql);
 cmd.Execute();
 params = makeArray( SQLParam (":1", "DACSRESTGROUP_DBT"));
 err = execStoredfunc ("RSB_AINC.restore_seq", V_UNDEF, params);
   
 return false;
End;

/**************************************/

Var choice = ConfWin (MakeArray ("Укажите режим работы"), MakeArray ("Выгрузка", "Заргузка", "Отмена"));
array arr;

arr(0) = "Список пользовательских модулей";
arr(1) = "Ветки реестра";
arr(2) = "Группы СУД";
arr(3) = "Образцы пользовательских меню";
arr(4) = "Роли СУД";

var chois_upl;
var errcode;
if (choice == 0)
	chois_upl = menu(arr,"Что будем выгружать?", "Экспорт", null, null, 0);

	if (chois_upl < 0)
		exit(1);
	end;
//        FolderName = "..\\import\\migrate";
//	debugbreak;
	getregistryvalue("PRBB\\MIGRATE", V_STRING, FolderName, errcode);
	if (errcode != 0) 
		FolderName = "..\\import\\migrate";
	end;
//	msgbox(FolderName);

		ExportItem (chois_upl);
		exit(1);
elif  (choice == 1)
	chois_upl = menu(arr,"Что будем импортировать?", "Импорт", null, null, 0);
	if (chois_upl < 0)
		exit(1);
	end;
//        FolderName = "..\\import\\migrate";
//	debugbreak;
	getregistryvalue("PRBB\\MIGRATE", V_STRING, FolderName, errcode);
	if (errcode != 0) 
		FolderName = "..\\import\\migrate";
	end;
//	msgbox(FolderName);

		ImportItem (chois_upl);
elif ( choice == 2 )
exit(0);
end;
