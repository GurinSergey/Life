/* 
   EVG             Макрос создания отложенных заявлений на открытие счёта
   09.07.2008      по лицевым счетам, отмеченным специальным пользовательским типом.
*/
//zmp 24.02.2014 адаптация под 31 патч
import BankInter, OprInter, CTInter, globals, cb_sql, ReqInter;

var reqOp   = TBFile ("reqopena.dbt", "W", 0),
    objVer  = TBFile ("objver.dbt",   "W", 0),
    oprOper = TBFile ("oproper.dbt",  "W", 0),
    acc     = TBFile ("account.dbt",  "W", 0);
    //accC    = TBFile ("account$.dbt", "W", 0);

// Пользовательский тип счёта для создания заявлений на открытие
const UserType_OPEN = "O"; //лат

// Номер вида операции по заявлению на открытие счёта
const TypeOper_ACCOPEN = 13030;

// Номер вида примечания "Номер тарифного плана"
const NoteKind_Tariff = 101;

private const OBJTYPE_REQOPENA = 450,
      AccKind_RUR      = 0,
      AccKind_CUR      = 1;

var Report,
    ErrText;
    


CLASS TProtocolForm

   macro PrintHeader( accKind )

      println ("\n\n");
      if (accKind == AccKind_RUR)
         [      Протокол работы процедуры создания отложенных заявлений на открытие      
                                  счёта в национальной валюте                           ];
      else
         [      Протокол работы процедуры создания отложенных заявлений на открытие      
                                   счёта в иностранной валюте                           ];
      end;

         [
           ┌───────┬─────────────────────────┬────────────┬───────────────────────────────────────────────────────┐
           │ Номер │ Номер счета             │ Дата       │ Комментарий                                           │
           │ п/п   │                         │ заявления  │                                                       │
           ├───────┼─────────────────────────┼────────────┼───────────────────────────────────────────────────────┤
         ];
   
   end;


   
   
   macro PrintLine( lineNumber, accNumber, reqDate )
      [ │ #     │ #                       │ #          │ Вставка заявления на открытие счета выполнена успешно │]
      (lineNumber:l, accNumber:l:f, reqDate:l);
   end;



   macro PrintErrorLine( lineNumber, accNumber, errorText )

      Array ET;
      Var   i;

      if (valType(errorText) == V_UNDEF)
         errorText = "";
      end;

      errorText = errorText + " Заявление на открытие счёта не сформировано.";
      StrSplit(errorText, ET, 53);

      [ │ #     │ #                       │            │ #                                                     │]
      (lineNumber:l, accNumber:l:f, ET(0):l);

      if (aSize(ET) > 1)
         i = 1;
         while (i < aSize(ET))
            [ │       │                         │            │ #                                                     │]
            (ET(i):l);
            i = i + 1;
         end;

      end;
   
   end;

   
   
   macro PrintFooter()
      [ └───────┴─────────────────────────┴────────────┴───────────────────────────────────────────────────────┘
      ]
   end;


END;


/* EVG Больше не нужно, вставка делается PL/SQL-процедурой из функции InsertReqOpen().
macro TrnInsData();
   var AccFile:Object;

   if ( not reqOp.Insert() )
      ErrText = "Ошибка при вставке записи в таблицу reqopena.dbt!";
      AbortTrn();
   end;

   objVer.rec.ObjectID = reqOp.rec.RequestID;
   if ( not objVer.Insert() )
      ErrText = "Ошибка при вставке записи в таблицу objver.dbt!";
      AbortTrn();
   end;
   
   oprOper.rec.DocumentID = UniID( reqOp, OBJTYPE_REQOPENA, PS_REQOPENA );
   if ( not oprOper.Insert() )
      ErrText = "Ошибка при вставке записи в таблицу oproper.dbt!";
      AbortTrn();
   end;


   /* После того, как все вставки выполнены, необходимо найти счёт, по которому
      вводится заявление, и убрать у него польз. тип UserType_OPEN. */
   /*if (reqOp.rec.Code_Currency == 0)
      AccFile = accR;
   else
      AccFile = accC;
   end;*/
   AccFile = acc;
   AccFile.Clear();
   AccFile.rec.Chapter       = 1;                               // Жестко глава А
   AccFile.rec.Account       = reqOp.rec.Account;
   AccFile.rec.Code_Currency = reqOp.rec.Code_Currency;
   if (AccFile.GetEQ())
      AccFile.rec.UserTypeAccount = StrSubst(AccFile.rec.UserTypeAccount, UserType_OPEN, "");
   end;
   if ( not AccFile.Update() )
      ErrText = "Ошибка при обновлении записи о лицевом счёте!";
      AbortTrn();
   end;

end;
*/


macro GetSFNumberRef()
  var Stat, SQL, cmd, rs;
  var RefVal = 0;

  const REFID_SfContrNum = 89;          // референс "Номера договоров обслуживания"
  const SFCNUM_Const     = "Contract";

  stat = GenerateReference( REFID_SfContrNum, RefVal );

  if ( stat != 0 )
     /* Если референс не сработал, сгенерим номер сами */
     SQL = "   SELECT   MAX ( ";
     SQL = SQL + "              TO_NUMBER (TRIM (SUBSTR (t_Number, INSTR (LOWER (t_Number), lower(?)) + LENGTH (lower(?))))) ";
     SQL = SQL + "           ) ";
     SQL = SQL + "           + 1 ";
     SQL = SQL + "    FROM   DSFCONTR_DBT ";
     SQL = SQL + "   WHERE   t_ServKind = 3 ";
     cmd = rsdCommand( SQL );
     cmd.addParam( "", RSDBP_IN, SFCNUM_Const );
     cmd.addParam( "", RSDBP_IN, SFCNUM_Const );
     rs = rsdRecordSet( cmd );
     if ( rs and rs.MoveNext() )
        RefVal = SFCNUM_Const + " " + rs.value( 0, null, V_INTEGER );
     end;
  end;

  return RefVal;
end;


macro GetSFAccNumRef()

  var Stat, SQL, rs;
  var RefVal = 0;

  const REFID_SfAccNum = 127;          // референс "Код договора обслуживания в номере счета"

  stat = GenerateReference( REFID_SfAccNum, RefVal );

  if ( stat != 0 )
     /* Если референс не сработал, сгенерим номер сами */
     SQL = "   SELECT   MAX ( ";
     SQL = SQL + "              TO_NUMBER (t_AccCode) ";
     SQL = SQL + "           ) ";
     SQL = SQL + "           + 1 ";
     SQL = SQL + "    FROM   DSFCONTR_DBT ";
     SQL = SQL + "   WHERE   t_ServKind = 3 ";
     rs = rsdRecordSet( SQL );
     if ( rs and rs.MoveNext() )
        RefVal = rs.value( 0, null, V_INTEGER );
     end;
  end;

  return RefVal;
end;



macro InsertReqOpen( account, accTabName )

   var stat, query, rs, i;
   var ReqAccType, RegVal;
   var SF_ContrNum, SF_PlanID;

   /* EVG Константы с номером и название ДО */
   /* EVG 2/03/2011 По просьбе Ирины Ивановой генерация номера по референсу заменена
      на б/н.
   const SFC_Number = GetSFNumberRef();*/
   const SFC_Number = "б/н";
   const SFC_Name   = "Договор № " + SFC_Number;


   stat = GetRegValForOPENAC( "ТИПЫ_СЧЕТОВ", V_STRING, RegVal );
   
   if( stat != 0 )
     RegVal = "ЧXЯQ";
   end;
   
   /* Проверяем, есть ли в поле "Типе счёта" один из типов, по которым
      формируется сообщение в ИМНС. */
   ReqAccType = "";
   if ( strLen (account.rec.Type_Account) > 0)

      i = 1;
      while ( i <= strLen(RegVal) )

         if ( index(account.rec.Type_Account, substr(RegVal, i, 1) ) > 0 )
            ReqAccType = ReqAccType + substr(RegVal, i, 1);
         end;

         i = i + 1;
      end;
   
   end;

   /* Если нужных типов в счёте не задано, используем Ч "Расчётный" */
   if ( strLen(ReqAccType) == 0 )
      ReqAccType = "Ч";
   end;


   /* Определим */
      
   
   query = " DECLARE                                                                                            \n" +
           "    NewRequestID Numeric := 0;                                                                      \n" +
           " BEGIN                                                                                              \n" +

           /* Вставка DReqOpenA_dbt */
           "    Insert into DReqOpenA_dbt (t_RequestID,                                                         \n" +
           "                               t_Oper,                                                              \n" +
           "                               t_Date,                                                              \n" +
           "                               t_InputDate,                                                         \n" +
           "                               t_CurrentState,                                                      \n" +
           "                               t_CloseDate,                                                         \n" +
           "                               t_Kind_Operation,                                                    \n" +
           "                               t_Account,                                                           \n" +
           "                               t_Type_Account,                                                      \n" +
           "                               t_Code_Currency,                                                     \n" +
           "                               t_NameAccount,                                                       \n" +
           "                               t_OperAcc,                                                           \n" +
           "                               t_Department,                                                        \n" +
           "                               t_ClientID,                                                          \n" +
           "                               t_CreateClientID,                                                    \n" +
           "                               t_BankCodeKind,                                                      \n" +
           "                               t_BankCode,                                                          \n" +
           "                               t_SfPayMethod,                                                       \n" +
           "                               t_SfComGroup,                                                        \n" +
           "                               t_Balance0,                                                          \n" +
           "                               t_AccountDepartment,                                                 \n" +
           "                               t_AccountBranch,                                                     \n" +
           "                               t_SFContrNum,                                                        \n" +
           "                               t_SFPlanID,                                                          \n" +
           "                               t_SFAccCode,                                                         \n" +
           "                               t_SFContrName,                                                       \n" +
           "                               t_SFContrDate,                                                       \n" +
           "                               t_SFSetAccSearchAlg,                                                 \n" +
           "                               t_SFInvMethod,                                                       \n" +
           "                               t_SFInvoiceDuration,                                                 \n" +
           "                               t_SFPayRateID,                                                       \n" +
           "                               t_SFPayRateDateKind )                                                \n" +
           "    Values (0,                                                                                      \n" +
           "            " + {oper} + ",                                                                         \n" +
           "            " + GetSQLDate(account.rec.Open_Date) + ",                                              \n" +
           "            " + GetSQLDate({CurDate}) + ",                                                          \n" +
           "            0,                                                                                      \n" +
           "            " + GetSQLDate(account.rec.Close_Date) + ",                                             \n" +
           "            " + TypeOper_ACCOPEN + ",                                                               \n" +
           "            " + GetSQLString(account.rec.Account) + ",                                              \n" +
           /* EVG
           "            " + GetSQLString(account.rec.Type_Account) + ",                                         \n" +*/
           "            " + GetSQLString(ReqAccType) + ",                                                       \n" +
           "            " + account.rec.Code_Currency + ",                                                      \n" +
           "            " + GetSQLString(account.rec.NameAccount) + ",                                          \n" +
           "            " + account.rec.Oper + ",                                                               \n" +
           "            " + account.rec.Department  + ",                                                        \n" +
           "            " + account.rec.Client + ",                                                             \n" +
           "            -1,                                                                                     \n" +
           "            3,                                                                                      \n" +
           "            " + GetSQLChar("?") + ",                                                                \n" +
           "            4,                                                                                      \n" +
           /* EVG
           "            " + ReadNoteForObject( OBJTYPE_ACCOUNT, 
                                               UniID(account, OBJTYPE_ACCOUNT), 
                                               NoteKind_Tariff) + ",                                            \n" +*/
           "            0,                                                                                      \n" +
           "            " + account.rec.Balance + ",                                                            \n" +
           "            " + account.rec.Department + ",                                                         \n" +
           "            " + account.rec.Branch + ",                                                             \n" +
           /* EVG 16/02/2011 Заменил на номер, сгенерированный по референсу 89 "Номера договоров обслуживания".
           "            (Select max( to_number (t_Number))+1                                                    \n" +
           "              From DSFCONTR_DBT                                                                     \n" +
           "             Where t_ServKind = 3),                                                                 \n" +
           */
           "            " + GetSQLString( SFC_Number ) + ",                                                     \n" +
           "            (Select t_SFPlanID                                                                      \n" +
           "              From DPTDPSFPLAN_DBT                                                                  \n" +
           "             Where t_ServiceKind   = 3                                                              \n" +
           "               and t_PartyID    = " + account.rec.Client + "                                        \n" +
           "               and t_Department = " + account.rec.Department + "                                    \n" +
           "               and t_StartDate  = (Select max (t_StartDate)                                         \n" +
           "                                     From DPTDPSFPLAN_DBT                                           \n" +
           "                                    Where t_ServiceKind   = 3                                       \n" +
           "                                      and t_PartyID    = " + account.rec.Client + "                 \n" +
           "                                      and t_Department = " + account.rec.Department + ") ),         \n" +
           "            " + GetSQLString( GetSFAccNumRef() ) + ",                                               \n" +
           "            " + GetSQLString( SFC_Name ) + ",                                                       \n" +
           "            " + GetSQLDate(account.rec.Open_Date) + ",                                              \n" +
           "            1,                                                                                      \n" +
           "            2,                                                                                      \n" +
           "            7,                                                                                      \n" +
           "            7,                                                                                      \n" +
           "            1 )                                                                                     \n" +
           "                                                                                                    \n" +
           "    Returning t_RequestID                                                                           \n" +
           "    Into NewRequestID;                                                                              \n" +

           "  dbms_output.put_line(NewRequestID);                                                               \n" +

           
           /* Вставка DObjVer_dbt */
           "    Insert into DObjVer_dbt (t_ObjectType,                                                          \n" +
           "                             t_ObjectID,                                                            \n" +
           "                             t_Version)                                                             \n" +
           "    Values (" + OBJTYPE_REQOPENA + ",                                                               \n" +    // 450
           "            NewRequestID,                                                                           \n" +
           "            1);                                                                                     \n" +
           

           /* Вставка DOprOper_dbt */
           "    Insert into DOprOper_dbt (t_Id_Operation,                                                       \n" +
           "                              t_Kind_Operation,                                                     \n" +
           "                              t_Init_Oper,                                                          \n" +
           "                              t_Start_Date,                                                         \n" +
           "                              t_Syst_Date,                                                          \n" +
           "                              t_Syst_Time,                                                          \n" +
           "                              t_DocKind,                                                            \n" +
           "                              t_DocumentID,                                                         \n" +
           "                              t_IsNew,                                                              \n" +
           "                              t_Completed,                                                          \n" +
           "                              t_End_date,                                                           \n" +
           "                              t_Sort,                                                               \n" +
           "                              t_Boactions,                                                          \n" +
           "                              t_Bocode,                                                             \n" +
           "                              t_Ko_ManualSelection,                                                 \n" +
           "                              t_DeferDate,                                                          \n" +
           "                              t_ContrnVersion)                                                      \n" +
           "    Values (0,                                                                                      \n" +
           "            " + TypeOper_ACCOPEN + ",                                                               \n" +
           "            0,                                                                                      \n" +
           "            To_Date('01-01-0001','dd-mm-rrrr'),                                                     \n" +
           "            To_Date('01-01-0001','dd-mm-rrrr'),                                                     \n" +
           "            To_Date('01-01-0001','dd-mm-rrrr'),                                                     \n" +
           "            " + PS_REQOPENA + ",                                                                    \n" +    // 230
           "            lPad(NewRequestID, 34, '0'),                                                            \n" +
           "            Chr(0),                                                                                 \n" +
           "            Chr(0),                                                                                 \n" +
           "            To_Date('01-01-0001','dd-mm-rrrr'),                                                     \n" +
           "            Chr(1),                                                                                 \n" +
           "            0,                                                                                      \n" +
           "            0,                                                                                      \n" +
           "            Chr(0),                                                                                 \n" +
           "            To_Date('01-01-0001','dd-mm-rrrr'),                                                     \n" +
           "            0);                                                                                     \n" +

           /* Убираем признак необходимости ввода заявления на открытие с лицевого счёта */
           "    Update  daccount_dbt                                                                            \n" +
           "       Set t_UserTypeAccount = NVL( replace(t_UserTypeAccount, '" + UserType_OPEN + "'), Chr(1) )   \n" +
           "     Where t_Chapter       = 1                                                                      \n" +
           "       and t_Account       = " + GetSQLString(account.rec.Account) + "                              \n" +
           "       and t_Code_Currency = " + account.rec.Code_Currency + ";                                     \n" +
           
           "  end;   ";

   //println (query);
   rs = rsdCommand(query);
   rs.execute;
   return true;

   onError(er);
      ErrText = er.message;
      return false;


   /* EVG Старый алгоритм
   /* Заполнение структуры reqopena.dbt */
   reqOp.Clear();
   reqOp.rec.RequestID         = 0;                             // Autoinc
   reqOp.rec.Oper              = {oper};
   reqOp.rec.Date              = account.rec.Open_Date;
   reqOp.rec.InputDate         = {CurDate};
   reqOp.rec.CurrentState      = 0;                             // Отложенное
   reqOp.rec.Kind_Operation    = TypeOper_ACCOPEN;
   reqOp.rec.Account           = account.rec.Account;
   reqOp.rec.Type_Account      = account.rec.Type_Account;
   reqOp.rec.Code_Currency     = account.rec.Code_Currency;
   reqOp.rec.NameAccount       = account.rec.NameAccount;
   reqOp.rec.OperAcc           = account.rec.Oper;
   reqOp.rec.Department        = account.rec.Department;
   reqOp.rec.ClientID          = account.rec.Client;
   reqOp.rec.CreateClientID    = -1;
   reqOp.rec.BankCodeKind      = 3;
   reqOp.rec.BankCode          = "?";
   reqOp.rec.SfPayMethod       = 4;
   // Группа комиссий берётся из примечания к лицевому счёту
   reqOp.rec.SfComGroup        = ReadNoteForObject(OBJTYPE_ACCOUNT, UniID(account, OBJTYPE_ACCOUNT), NoteKind_Tariff);
   reqOp.rec.Balance0          = account.rec.Balance;
   reqOp.rec.AccountDepartment = account.rec.Department;
   reqOp.rec.AccountBranch     = account.rec.Branch;
//   reqOp.rec.UserField1        = "Происхождение: автоматическая генерация (AUTO)";
   */

   /*
   /* Заполнение структуры objver.dbt */
   objVer.Clear();
   objVer.rec.ObjectType = OBJTYPE_REQOPENA;                    // 450
   /* ObjectID будет заполнено в транзакции после вставки записи в reqopena.dbt
      и определения reqopena.RequestID. */
   objVer.rec.ObjectID = 0;
   objVer.rec.Version = 1;                                      // Константа


   /* Заполнение структуры oproper.dbt */
   oprOper.Clear();
   oprOper.rec.Id_Operation   = 0;                              // Autoinc
   oprOper.rec.Kind_Operation = reqOp.rec.Kind_Operation;
   oprOper.rec.Init_Oper      = 0;
   oprOper.rec.DocKind        = PS_REQOPENA;                    // 230
   /* DocumentID будет заполнено в транзакции после вставки записи в reqopena.dbt
      и определения reqopena.RequestID. */
   oprOper.rec.DocumentID     = 0;


   ErrText = "";
   if ( ProcessTrn(null, "TrnInsData", reqOp, objVer, oprOper, accR, accC) )
      return true;
   end;

   return false;
   */
end;


macro ProcessAccPart( accKind )
   var n, progrHeader;

   var query, rs, AccFileName,
       recordsCount, SQL_COND;
   var AccFile = TBFile("account.dbt");
   
   if (accKind == AccKind_RUR)
      //AccFileName = "daccount_dbt";
      progrHeader = "Лицевые счета в национальной валюте";
      SQL_COND = " = 0 ";
   else
      //AccFileName = "daccount$_dbt";
      progrHeader = "Лицевые счета в иностранной валюте";
      SQL_COND = " != 0 ";
   end;

   /* Посчитаем количество счетов, которые нужно открыть */
   recordsCount = 0;
   query = " Select count (*) from  daccount_dbt "+ 
           "  Where t_Open_Close      = Chr(0) " +
           "    and t_UserTypeAccount like '%" + UserType_OPEN + "%'"+
           "    and T_CODE_CURRENCY " + SQL_COND; 
   rs = rsdRecordSet (query);
   if (rs and rs.moveNext())
      recordsCount = rs.Value(0, null, V_INTEGER);
   end;

   Report.PrintHeader( accKind );

   /* Основной цикл */
   if (recordsCount > 0)
      
      rs = null;
      query = " Select * from daccount_dbt " +
              "  Where t_Open_Close      = Chr(0) " +
              "    and t_UserTypeAccount like '%" + UserType_OPEN + "%'" +
              "    and T_CODE_CURRENCY " + SQL_COND; 
      rs = rsdRecordSet(query);

      n = 0;
      initProgress(recordsCount, "Обрабатываются лицевые счета...", progrHeader);
      while (rs.moveNext())

         CopyRSetToFBuff( AccFile, rs );
         
         n = n + 1;
         useProgress(n);

         message("Выполняется вставка заявления на открытие счёта...");
         if( InsertReqOpen (AccFile, AccFileName) )
            Report.PrintLine( n, 
                                   AccFile.rec.Account,
                                   AccFile.rec.Open_Date );
         else
            Report.PrintErrorLine( n, 
                                        AccFile.rec.Account,
                                        ErrText );
         end;
         message("Обрабатываются лицевые счета...");

      end; // while (rs.moveNext())

      remProgress();

   end; // if (recordsCount > 0)

   Report.PrintFooter();

end;



 
 Report = TProtocolForm();

 // Обработать рублёвые счета
 ProcessAccPart( AccKind_RUR );

 // Обработать валютные счета
 ProcessAccPart( AccKind_CUR );









