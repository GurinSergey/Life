/**************************************************************************************************/
/*                     Автоматизированная банковская система RS-Bank 6.0                          */
/*                      Copyright(c) R-Style Software Lab Bryansk 2010                            */
/*                                                                                                */
/*    Описание: Макрос предназначен для получения данных о количестве отложенных и отвергнутых    */
/*              документов в подсистеме Бухгалтерия Банка для операционистов работающих с         */
/*              подсистемами Фронт-Юрлица, Фронт-Физлица                                          */
/*                                                                                                */
/*    Программист:     Чесноков Д.С.                                                              */
/*                                                                                                */
/*    Создан:          17.11.2010                                                                 */
/*    Изменен:         19.11.2010  Странным образом ведет себя при запуске из безинтерфейсного    */
/*                                 режима при импорте globals и BankInter                         */
/*                                                                                                */
/*                     24.08.2012  Gurin S. N. R-96357-2                                          */
/*                     24.01.2013  Chesnokov D.S. C-16548 Проверка IP для Арм 1036 "Удаленное     */
/*                                 открытие рассчетных счетов" при входе в систему                */
/*                     25.01.2013  Chesnokov D.S. R-146810 адаптация по реалии 2030               */
/**************************************************************************************************/
import RSD, ldmklbr, "lib_oper.mac", "lib_windows_system.mac" /*,"lib_const.mac"*/;

const ARM_REMOTE = 1038;

/*Аналогия {oper} и {curdate} из globals*/
Macro GetOperNumberAndCurDate(Oper, Curdate)

var rs;
    rs = RSDRecordset("Select RSBSessionData.oper as oper from dual");
    if (rs.movenext)
      SetParm(0, rs.value(0, null, V_INTEGER));
    else
      SetParm(0, 0);
    end;
    
    rs = RSDRecordset("Select RSBSessionData.curdate as curdate from dual");
    if (rs.movenext)
      SetParm(1, rs.value(0, null, V_DATE));
    else
      SetParm(1, Date(0,0,0));
    end;
end;

/*Получим наименование операциониста*/
macro getOperName(oper)

var cmd, rs;
    cmd = RsdCommand("select t_name from dperson_dbt where t_oper = :p_Oper");
    cmd.addParam("p_Oper",     RSDBP_IN, oper);
    rs = RSDRecordset(cmd);

    if (rs.movenext)
      return rs.value("t_name");
    end;
end;
/* функция проверки необходимости вывода окна монитора */
macro IfNeed(oper)
var cmd, rs;
  cmd = RsdCommand("SELECT 1 FROM dperson_lnk_dbt WHERE t_user = :p_Oper AND t_role IN (1003, 1007, 1011)"); //Gurin S. N. 24.08.2012 R-96357-2
  cmd.addParam("p_Oper",     RSDBP_IN, oper);
  rs = RSDRecordset(cmd);
  if (rs.movenext)
    return true;
  else
    return false;
  end;
  
end;
/* Обращение к пакету SHEDUDLER_MONITOR и получение результатов из него*/
macro GetCountOtl(rset, oper, curdate)

var cmd;

  cmd = RsdCommand("{call shedudler_monitor.init(:p_OperDate, :p_Oper)}");
  cmd.addParam("p_OperDate", RSDBP_IN, curdate);
  cmd.addParam("p_Oper",     RSDBP_IN, oper);
  cmd.execute();
  
  cmd = RsdCommand("begin SHEDUDLER_MONITOR.RETURNRESULT(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?); end;");
  cmd.AddParam("value1", RSDBP_OUT, v_integer);
  cmd.AddParam("value2", RSDBP_OUT, v_integer);
  cmd.AddParam("value3", RSDBP_OUT, v_integer);
  cmd.AddParam("value4", RSDBP_OUT, v_integer);
  cmd.AddParam("value5", RSDBP_OUT, v_integer);
  cmd.AddParam("value6", RSDBP_OUT, v_integer);
  cmd.AddParam("value7", RSDBP_OUT, v_integer);
  cmd.AddParam("value8", RSDBP_OUT, v_integer);
  cmd.AddParam("value9", RSDBP_OUT, v_integer);
  cmd.AddParam("value10", RSDBP_OUT, v_integer);
  cmd.AddParam("value11", RSDBP_OUT, v_integer);
  cmd.AddParam("value12", RSDBP_OUT, v_integer);
  cmd.AddParam("value13", RSDBP_OUT, v_integer);
  cmd.AddParam("value14", RSDBP_OUT, v_integer);
  cmd.AddParam("value15", RSDBP_OUT, v_integer);
  cmd.AddParam("value16", RSDBP_OUT, v_integer);
  cmd.Execute();
  setparm(0, cmd);
  
  if ((cmd.param("value1").value  != 0) or (cmd.param("value2").value  != 0) or (cmd.param("value3").value  != 0) or (cmd.param("value4").value  != 0) or
      (cmd.param("value5").value  != 0) or (cmd.param("value6").value  != 0) or (cmd.param("value7").value  != 0) or (cmd.param("value8").value  != 0) or
      (cmd.param("value9").value  != 0) or (cmd.param("value10").value != 0) or (cmd.param("value11").value != 0) or (cmd.param("value12").value != 0) or
      (cmd.param("value13").value != 0) or (cmd.param("value14").value != 0) or (cmd.param("value15").value != 0) or (cmd.param("value16").value != 0)
      )
    return true;
  else
    return false;
  end;
end;

Class (TRecHandler) TParm(LbrName, rset, Oper)

    InitTRecHandler ("monitor", (LbrName), true);
    this.("OperNum") = Oper;
    this.("OperFIO") = getOperName(Oper);
    this.("BBPlatOtl")     = rset.param("value1").value;
    this.("BBPlatOtv")     = rset.param("value2").value;
    this.("BBValPlatOtl")  = rset.param("value3").value;
    this.("BBValPlatOtv")  = rset.param("value4").value;
    this.("BBKassOtl")     = rset.param("value5").value;
    this.("BBKassOtv")     = rset.param("value6").value;
    this.("MemRubBalOtl")  = rset.param("value7").value; 
    this.("MemRubBalOtv")  = rset.param("value8").value;
    this.("MemRubVBOtl")   = rset.param("value9").value;
    this.("MemRubVBOtv")   = rset.param("value10").value;
    this.("MemValOtl")     = rset.param("value11").value;
    this.("MemValOtv")     = rset.param("value12").value;
    this.("MemValVBOtl")   = rset.param("value13").value;
    this.("MemValVBOtv")   = rset.param("value14").value;
    this.("MyltMemOtl")    = rset.param("value15").value;
    this.("MyltMemOtv")    = rset.param("value16").value;

    Macro Handler ( dlg, cmd, id, key )
      if (key ==27)
        return CM_SAVE;
      end;
    End;

    Macro Run
        return RunDialog (this, R2M (this, "Handler"));
    End;
End;


Macro MkDatePanel( lbr )

Var rc = lbr.AddPanel( "monitor", 30, 12, 65, 27, lbr.EColour.SHLP, lbr.EFRame.UNARY ), elem;

       rc.title = "Монитор необработанных документов";
       rc.StatusLine = "ESC Выход";

       elem = rc.AddLabel( 3, 2, "Операционист");
       elem = rc.AddField( 13, 2, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "OperNum", 5 );
       elem = rc.AddField( 19, 2, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_STRING, "OperFIO", 42 );

       elem = rc.AddLabel( 12, 3, "У Вас есть необработанные документы в следующих списках:");

       elem = rc.AddLabel( 3, 4, "БУХГАЛТЕРИЯ БАНКА\\ДОКУМЕНТЫ И ОПЕРАЦИИ:");
       elem = rc.AddLabel( 3, 5, "Платежии\\Отложенные:");
       elem = rc.AddField( 58, 5, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "BBPlatOtl", 3 );

       elem = rc.AddLabel( 3, 6, "Платежи\\Отвергнутые:");
       elem = rc.AddField( 58, 6, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "BBPlatOtv", 3 );

       elem = rc.AddLabel( 3, 7, "Валютные платежии\\Отложенные:");
       elem = rc.AddField( 58, 7, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "BBValPlatOtl", 3 );     

       elem = rc.AddLabel( 3, 8, "Валютные платежии\\Отвергнутые:");
       elem = rc.AddField( 58, 8, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "BBValPlatOtv", 3 );

       elem = rc.AddLabel( 3, 9, "Кассовые ордера\\Отложенные:");
       elem = rc.AddField( 58, 9, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "BBKassOtl", 3 );

       elem = rc.AddLabel( 3, 10, "Кассовые ордера\\Отвегрнутые:");
       elem = rc.AddField( 58, 10, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "BBKassOtv", 3 );

       elem = rc.AddLabel( 3, 12, "БУХГАЛТЕРИЯ БАНКА\\МЕМОРИАЛЬНЫЕ ДОКУМЕНТЫ\\МЕМОРДЕРА\\РУБЛИ:");

       elem = rc.AddLabel( 3, 13, "Балансовые счета\\Отложенные:");
       elem = rc.AddField( 58, 13, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "MemRubBalOtl", 3 );

       elem = rc.AddLabel( 3, 14, "Балансовые счета\\Отвергнутые:");
       elem = rc.AddField( 58, 14, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "MemRubBalOtv", 3 );

       elem = rc.AddLabel( 3, 15, "Внебалансовые счета\\Отложенные:");
       elem = rc.AddField( 58, 15, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "MemRubVBOtl", 3 );

       elem = rc.AddLabel( 3, 16, "Внебалансовые счета\\Отвергнутые:");
       elem = rc.AddField( 58, 16, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "MemRubVBOtv", 3 );

       elem = rc.AddLabel( 3, 18, "БУХГАЛТЕРИЯ БАНКА\\МЕМОРИАЛЬНЫЕ ДОКУМЕНТЫ\\МЕМОРДЕРА\\ВАЛЮТА:");

       elem = rc.AddLabel( 3, 19, "Балансовые счета\\Отложенные:");
       elem = rc.AddField( 58, 19, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "MemValOtl", 3 );

       elem = rc.AddLabel( 3, 20, "Балансовые счета\\Отвергнутые:");
       elem = rc.AddField( 58, 20, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "MemValOtv", 3 );

       elem = rc.AddLabel( 3, 21, "Внебалансовые счета\\Отложенные:");
       elem = rc.AddField( 58, 21, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "MemValVBOtl", 3 );

       elem = rc.AddLabel( 3, 22, "Внебалансовые счета\\Отвергнутые:");
       elem = rc.AddField( 58, 22, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "MemValVBOtv", 3 );

       elem = rc.AddLabel( 3, 24, "БУХГАЛТЕРИЯ БАНКА\\МЕМОРИАЛЬНЫЕ ДОКУМЕНТЫ\\МУЛЬТИВАЛЮТНЫЕ:");

       elem = rc.AddLabel( 3, 25, "Балансовые счета\\Отложенные:");
       elem = rc.AddField( 58, 25, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "MyltMemOtl", 3 );

       elem = rc.AddLabel( 3, 26, "Балансовые счета\\Отвергнутые:");
       elem = rc.AddField( 58, 26, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_INTEGER, "MyltMemOtv", 3 );
end;

Macro MkLbrFile

  var LbrPath, LbrName, errcode, lbr, cmd;
  
  /*Аналог GetRegistryValue из BankInter*/
  cmd = RsdCommand("begin ? := rsb_common.GetRegStrValue(?,0); end;");
  cmd.addParam("retval", RSDBP_RETVAL, V_STRING);
  cmd.addParam("value1", RSDBP_IN, "BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR");
  cmd.Execute;
  
  if (ValType(cmd.param("retval").value) != 26) 
    LbrPath = cmd.param("retval").value;
  else
    msgbox("Значение настройки TEXTDIR получено небыло!!!");
  end;
  
  LbrName = LbrPath + "\\monitor" + string(UserNumber) + ".lbr";
  lbr = TLbrFile( LbrName, "C" );
  
  MkDatePanel( lbr );
     
  lbr.Save(); //сохраняем ресурсы в файле
  lbr = NULL;
  return LbrName;
  
end;

/*Аналог GetRegistryValue из BankInter*/
macro GetIntRegVal()
  
  var cmd;
  
  cmd = RsdCommand("begin ? := rsb_common.GetRegIntValue(?,0); end;");
  cmd.addParam("retval", RSDBP_RETVAL, V_INTEGER);
  cmd.addParam("value1", RSDBP_IN, "PRBB\\СЕРВИС ГКБО\\АРМ_УДАЛЕННОЕ_ОТКРЫТИЕ_СЧЕТОВ");
  cmd.Execute;
  if (ValType(cmd.param("retval").value) != 26) 
    return cmd.param("retval").value;
  else
    /*По умолчанию вернем номер АРМа 1038*/
    return ARM_REMOTE;
  end;
end;

/*Проверка IP на вхождение в диапазон для АРМ "Удаленный доступ"*/
macro CheckIPRemote(Ip_addr)

  var sql, cmd, rs;
      sql = " SELECT 1 FROM usr_ip_filter_dbt " +
            "  WHERE usr_ip_filtr.inet_aton (:ip_addr) BETWEEN usr_ip_filtr.inet_aton(t_min_host) " +
            "    AND usr_ip_filtr.inet_aton(t_max_host)";
    cmd = RsdCommand(sql);
    cmd.addParam("ip_addr", RSDBP_IN, Ip_addr);
    rs = RSDRecordset(cmd);

    if (rs.movenext)
      msgbox("Ваш IP адрес не найден в списке разрешенных IP. |ДОСТУП ЗАПРЕЩЕН.");
      return 1
    else
      return 0;
    end;
  OnError(x)
    /*Если таблицы нет илиошибка при проверке, то пока запускаем.*/
    /*В идеале стоило бы не пускать для повышения надежности*/
    return 0;
end;


/*Обработка события вход в рс-банк*/
macro WorkBegin()
  // zip_z. предупреждение при входе для RSSL
//  if (execMacroFile ("startbnk_handler.mac", "getTestWarningMessage") == RSL_EXIT_FAILURE)
//    return RSL_EXIT_FAILURE;
//  end;
  
  var Oper, curdate, Person, IP;
  var ElementIP = Tarray;
  
  GetOperNumberAndCurDate(Oper, curdate);
  Person = RSL_Person(Oper);
  
  if (Person.ArmNumber == GetIntRegVal())
    return 0;
  else
    IP = RSI_GetIPAddrArray();
    if (IP.Size > 0)
      ElementIP = IP(0);
      return CheckIPRemote(ElementIP(0));
    end;

  end;
  
end;

/* Точка входа. */
/* При выходе из рс-банк если определен макрос startbnk.mac */
/* всегда вызывается функция workend.                       */
Macro workend()
  var cmd, rs, rset;
  var LbrName, Parm;
  var Oper, curdate;
  
  GetOperNumberAndCurDate(Oper, curdate);
  //LAO 07.11.2013 каркасный план.
  rsdcommand("ALTER  session SET USE_STORED_OUTLINES = USR_OUTLINELAO").execute;
  
  if (IfNeed(Oper))
    if (GetCountOtl(rset, Oper, curdate))
      LbrName = MkLbrFile();
      Parm = TParm(LbrName, rset, Oper);
      if ( not Parm.Run () )
         Parm = null;
         DelFile(LbrName);
         Exit (1);
      end;
    end;
  end;
  
end;
