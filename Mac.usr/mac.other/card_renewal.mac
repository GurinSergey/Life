/* 2010-12-29 zip_z. I-092988
 * Печать реестра пополнений карт (по аналогии с V5)
 */

import oralib, likepy;
import globals;
import BankInter;
import treport;

const VK_SPACE = 32,  VK_ENTER = 13,  VK_ESC   = 27,  VK_F2    = 316,  VK_F8    = 322,  VK_F9    = 323;

macro iif (condition, iftrue, iffalse)
    if (condition)
        return iftrue;
    end;
    
    return iffalse;
end;

macro GetReport ( _begDate, _endDate, _cash, _cashLess)
    var table = CTableReport();
    var report_has_data = false;
/*    var sql = "select * "
     + "\n" + "  from (select /*+leading (fi pm rm pt) index (fi dfininstr_dbt_idx0) index (pm dpmpaym_dbt_idxb) index (rm dpmrmprop_dbt_idx0) */ "
     + "\n" + "               to_char (pm.t_valuedate, 'dd.mm.yyyy') m_date, rm.t_payername, rm.t_receivername, pm.t_payeraccount, "
     + "\n" + "               ac_pay.t_type_account m_type_payeraccount, pm.t_receiveraccount, ac_recv.t_type_account m_type_receiveraccount, "
     + "\n" + "               pm.t_amount, fi.t_ccy, rm.t_ground, "
     + "\n" + "               case "
     + "\n" + "                   when (instr (ac_pay.t_type_account, 'А') != 0 or instr (ac_recv.t_type_account, 'А') != 0) "
     + "\n" + "                       then chr (88) "
     + "\n" + "                   else chr (0) "
     + "\n" + "               end m_cash "
     + "\n" + "          from dpmpaym_dbt pm, dfininstr_dbt fi, dparty_dbt pt, dpmrmprop_dbt rm, daccounts_dbt ac_pay, daccounts_dbt ac_recv "
     + "\n" + "         where ac_pay.t_account = pm.t_payeraccount "
     + "\n" + "           and ac_recv.t_account = pm.t_receiveraccount "
     + "\n" + "           and ac_pay.t_chapter = 1 "
     + "\n" + "           and ac_recv.t_chapter = 1 "
     + "\n" + "           and pm.t_fiid = fi.t_fiid "
     + "\n" + "           and pm.t_receiver = pt.t_partyid "
     + "\n" + "           and rm.t_paymentid = pm.t_paymentid "
     + "\n" + "           and pm.t_paymstatus = 32000 "
     + "\n" + "           and (   pm.t_receiveraccount in "
     + "\n" + "                       ('30232810301081111111', "
     + "\n" + "                        '30232978201081111111', "
     + "\n" + "                        '30232840601081111111', "
     + "\n" + "                        '40817810701088880007', "
     + "\n" + "                        '40817840001088880007' "
     + "\n" + "                       ) "
     + "\n" + "                or pm.t_payeraccount = '30102810500000000781' "
     + "\n" + "               ) "
     + "\n" + "           and substr (pm.t_payeraccount, 1, 8) != '42301810' "
     + "\n" + "           and pm.t_valuedate between :vdate_begin and :vdate_end)";
              
     sql = sql + "         where 1 = 1 ";
  
    if (_cash)
        sql = sql + "or m_cash = chr (88)";
    end;
    
    if (_cashless)
        sql = sql + "or m_cash != chr (88)";
    end;

 */
/*SDA - переписал как надо*/
    var sql = "select * "
     + "\n" + "  from (select /*+leading (fi pm rm pt) index (fi dfininstr_dbt_idx0) index (pm dpmpaym_dbt_idxb) index (rm dpmrmprop_dbt_idx0) */ "
     + "\n" + "               to_char (pm.t_valuedate, 'dd.mm.yyyy') m_date, rm.t_payername, rm.t_receivername, pm.t_payeraccount, "
     + "\n" + "               ac_pay.t_type_account m_type_payeraccount, pm.t_receiveraccount, ac_recv.t_type_account m_type_receiveraccount, "
     + "\n" + "               pm.t_amount, fi.t_ccy, rm.t_ground, "
     + "\n" + "               case "
     + "\n" + "                   when (instr (ac_pay.t_type_account, 'А') != 0 or instr (ac_recv.t_type_account, 'А') != 0) "
     + "\n" + "                       then chr (88) "
     + "\n" + "                   else chr (0) "
     + "\n" + "               end m_cash "
     + "\n" + "          from dpmpaym_dbt pm, dfininstr_dbt fi, dparty_dbt pt, dpmrmprop_dbt rm, daccounts_dbt ac_pay, daccounts_dbt ac_recv, "
     + "\n" + "                       DPMDOCS_DBT doc, darhdoc_dbt ad "  
     + "\n" + "         where  "
     + "\n" + "               ac_pay.t_account = ad.T_ACCOUNT_PAYER "
     + "\n" + "           and ac_recv.t_account = ad.T_ACCOUNT_RECEIVER "
     + "\n" + "           and ac_pay.t_chapter = 1 "
     + "\n" + "           and ac_recv.t_chapter = 1 "
     + "\n" + "           and pm.t_fiid = fi.t_fiid "
     + "\n" + "           and pm.t_receiver = pt.t_partyid "
     + "\n" + "           and pm.t_paymstatus = 32000 "
     + "\n" + "           and rm.t_paymentid = pm.t_paymentid "
     + "\n" + "           and doc.T_PAYMENTID = pm.t_paymentid "
     + "\n" + "           and ad.T_IAPPLICATIONKIND = doc.T_APPLICATIONKIND "
     + "\n" + "           and ad.T_APPLICATIONKEY = doc.T_APPLICATIONKEY  "
            

     + "\n" + "           and (  (ad.T_ACCOUNT_RECEIVER in "
     + "\n" + "                       ('30232810301081111111', "
     + "\n" + "                        '30232978201081111111', "
     + "\n" + "                        '30232840601081111111', "
     + "\n" + "                        '40817810701088880007', "
     + "\n" + "                        '40817840001088880007' "
     + "\n" + "                       ) "
     + "\n" + "                   and substr (ad.T_ACCOUNT_PAYER, 1, 8) != '42301810' "
     + "\n" + "                   and substr (ad.T_ACCOUNT_PAYER, 1, 8) != '20202810' "
     + "\n" + "                  ) "
     + "\n" + "                  or "
     + "\n" + "                  ( "
     + "\n" + "                   ad.T_ACCOUNT_PAYER = '30102810500000000781' "
     + "\n" + "                   and (substr (ad.T_ACCOUNT_RECEIVER, 1, 5) = '40817' or "
     + "\n" + "                        substr (ad.T_ACCOUNT_RECEIVER, 1, 5) = '40820' )"
     + "\n" + "                  ) "
     + "\n" + "               ) "
     + "\n" + "           and pm.t_valuedate between :vdate_begin and :vdate_end)";
              
     sql = sql + "         where 1 = 1 ";
  
    if (_cash)
        sql = sql + "or m_cash = chr (88)";
    end;
    
    if (_cashless)
        sql = sql + "or m_cash != chr (88)";
    end;





    sql =  ExecSQLSelect (sql, makeArray (SQLParam ("vdate_begin", _begDate),
                                          SQLParam ("vdate_end",   _endDate)));
    
    
    table.addColumn("Дата",              10, AL_LEFT);
    table.addColumn("Плательщик",        30, AL_LEFT);
    table.addColumn("Получатель",        30, AL_LEFT);
    table.addColumn("Счет |плательщика", 20, AL_LEFT);
    table.addColumn("Счет |получателя",  20, AL_LEFT);
    table.addColumn("Сумма",             12, AL_RIGHT);
    table.addColumn("Вал",                3, AL_LEFT);
    table.addColumn("Основание",         32, AL_LEFT);

    println ("(3R(s0p16.67h8.5v0s0b0T&l1X&l8D&l1O&a7L");
    println ( string (Date()) + " " + Time());

    table.printHead();

    while (sql.moveNext)
        report_has_data = true;
        table.printStringTransferByWord (sql.value ("m_date"),
                                         sql.value ("t_payername"),
                                         sql.value ("t_receivername"),
                                         sql.value ("t_payeraccount"),
                                         sql.value ("t_receiveraccount"),
                                         sql.value ("t_amount"),
                                         sql.value ("t_ccy"),
                                         sql.value ("t_ground"));
    end;

    table.printBottom();
    
    if (not report_has_data)
        msgbox ("Нет данных для отчета:" +
                "|За период с " + string (_begDate) + " по " + string (_endDate) +
                "|отсутствуют " + iif ((_cash and _cashless), 
                                        "платежи", 
                                        iif (_cash, 
                                            "наличные платежи", 
                                            "безналичные платежи"))
                );
        exit;
    end;
    
end;

/*                        zResLib::r_cards | Описание полей
 * ╒═══ Операции по пластиковым картам ════╕ 
 * │ Выгрузка реестра                      │ 
 * │                                       │ 
 * │ Дата начала:     m_date_begin         │ 
 * │ Дата оконч.:     m_date_end           │ 
 * │                                       │ 
 * │ Наличные платежи:  m_cash_payments    │ 
 * │ Безнал. платежи    m_cashless_payments│ 
 * │                                       │ 
 * │ Номер реестра  m_reg_number           │ 
 * │                                       │ 
 * ╘═══════════════════════════════════════╛ 
 */
macro PanelEventHandler (dlg, cmd, id, key)
    if   ( cmd == DLG_INIT )
        dlg.rec.m_date_begin = 
        dlg.rec.m_date_end   = {curdate};
        dlg.rec.m_cashless_payments = 
        dlg.rec.m_cash_payments     = "X";
        dlg.rec.m_reg_number = "0";
        UpdateFields (dlg);
    
    elif ( cmd == DLG_KEY ) 
    
        if (( key == VK_SPACE ) and (trim(fldname(dlg, id)) == "m_cashless_payments"))
            dlg.rec.m_cashless_payments = strfor ( 88 - codefor ( dlg.rec.m_cashless_payments )); 
            return CM_DEFAULT;
        end;
        
        if (( key == VK_SPACE ) and (trim(fldname(dlg, id)) == "m_cash_payments"))
            dlg.rec.m_cash_payments = strfor ( 88 - codefor ( dlg.rec.m_cash_payments )); 
            return CM_DEFAULT;
        end;

        if ( key == VK_F2 )
          if ((dlg.rec.m_cashless_payments == "") and  (dlg.rec.m_cash_payments == ""))
              msgbox ("Заданы неверные параметры выпуска отчета:"
                      "|Должен быть выбран хотя бы один из видов платежей (наличные или безналичные)");
              return CM_CANCEL;
          end;
          GetReport (dlg.rec.m_date_begin,
                     dlg.rec.m_date_end,
                     iif ((dlg.rec.m_cash_payments == "X"), true, false),
                     iif ((dlg.rec.m_cashless_payments == "X"), true, false));
          return CM_SAVE;
        end;
    
    elif ( cmd == DLG_REMFOCUS ) 
        if (dlg.rec.m_date_begin > dlg.rec.m_date_end)
            msgbox ("Заданы неверные параметры выпуска отчета:"
                    "|Дата окончания не может быть больше даты начала");
            return CM_CANCEL;
        end;
    end;

end;


/* -------------- entry point | ------------------------------------------------------------------------------- */
const LBR_REGISTRY_PATH = "BANK_INI/ОБЩИЕ ПАРАМЕТРЫ/ДИРЕКТОРИИ/LBRDIR";
const LBR_NAME_FILE     = "zResLib.lbr";
const LBR_NAME_PANEL    = "r_cards";

var lbr_directory;
var errCode;
        
if ( GetRegistryValue ( LBR_REGISTRY_PATH, V_STRING, lbr_directory, errCode ) and not errCode )
    var lbr_fullpath = FindPath ( LBR_NAME_FILE, lbr_directory );
    var dlg          = TRecHandler ( LBR_NAME_PANEL, lbr_fullpath, TRUE );
    RunDialog (dlg, "PanelEventHandler");
else
    msgbox ("Не найдена библиотека ресурсов " + LBR_NAME_PANEL);
    exit ();
end;