/*******************************************************************************/
/*  RS-Bank 6.0                                          R-Style Software Lab  */
/*                                                                             */
/*  File Name   : usr_menu.mac                                                 */
/*  Created     : 25.10.2012                                                   */
/*  Programmer  : Chesnokov D.                                                 */
/*  Description : Макрос выполняет привязку пользователя к АРМ/Меню            */
/*       Modify : 25.10.2012 Chesnokov D.S. Произведен рефакторинг исполняемого*/
/*               кода. В рамках модификации C-14088 добавлена "скрытая" функци-*/
/*               ональность обновления списка ролей и уровня доступа в соот-   */
/*               ветствии с таблицей dpers_role_lnk                            */
/*              : 05.03.2013 Chesnokov D.S. C-18000 добавлено поле для имени   */
/*               "виртуальных" пользователей                                   */
/*              : 09.06.2014 Chesnokov D.S. C-24950 добавлена историзация      */
/*                наименования "виртуальных" операционистов                    */
/*              : 22.08.2014 DPN C-32037 Добавил возможность печати в Excel    */
/*******************************************************************************/

import RSD, BankInter, globals, rcw, rsexts;

const TEXTDIR_REESTR = "BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR";

var path, errCode, pathfile, resname = "usr_lnk.lbr", dlg_p;
var Col = TArray();
var rs, str, realUser, virtUser, menuNumber, tempFileName, tempFileNameBezPuti, ex, cnt = 0;
record oper_dbt(person);

macro SetTypeColumns(aw:tarray);
    var w1=tarray(true);
    var w2=tarray(true);
    var w3=tarray(true);  

    w1(0)=1; w1(1)=2; 
    w2(0)=2; w2(1)=1; 
    w3(0)=3; w3(1)=1; 

    aw(0)=w1;
    aw(1)=w2;
    aw(2)=w3;

end;

macro chekReestrRead(m_name:string, m_status:integer, m_err:integer)
    if((m_status == V_UNDEF) or (m_err != 0))
       msgbox("Ошибка получения значения настройки реестра " + m_name + " \n Процедура GetRegistryValue вернула код ошибки "+m_err);
       exit(0);
    end;
end;

macro readString(m_reestrName:string):string
    private var m_errCode :integer = NULL;
    private var m_statusGetRegistry :integer = NULL;
    private var m_zna4enie          :string  = NULL;
    if (m_reestrName == "")
        msgbox("При чтении реестра не задана строка реестра");
        exit(0)
    end;
    m_statusGetRegistry = GetRegistryValue(m_reestrName, V_STRING, m_zna4enie, m_errCode);
    chekReestrRead(m_reestrName, m_statusGetRegistry, m_errCode);
    return(m_zna4enie);
end;

macro createUniqueFile()
    private var ff:string = "person_lnk"+{oper}+"_"+date+"_"+time;
    private var file_ext:string = ".txt";
    tempFileName = readString(TEXTDIR_REESTR);
    tempFileName = tempFileName + "\\" + ff;
    tempFileNameBezPuti = ff;
    tempFileName = StrSubst ( tempFileName, ".", "_" );
    tempFileName = StrSubst ( tempFileName, ":", "_" );
    tempFileName = StrSubst ( tempFileName, " ", "_" );
    tempFileName = tempFileName + file_ext;
    tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, ".", "_" );
    tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, ":", "_" );
    tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, " ", "_" );
    tempFileNameBezPuti = tempFileNameBezPuti + file_ext;
    if (substr(tempFileName,1,2) == "__")
        tempFileName=".."+substr(tempFileName,3)
    end;
    SetOutPut(tempFileName, false);
end;

macro transToExcel(tempFileName)
    private var m_errCode :integer = NULL;
    var aw = tarray(true);
    var obBook, forExcel, ob;
   
    SetTypeColumns(aw); 
    ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
    ex = ob.CreateComObject ("Excel.Application",true);
    ex.visible = false;
    forExcel = "persone_lnk" + {oper} + "_"+date+"_"+time;  
    
    forExcel = StrSubst ( forExcel, ".", "_" );
    forExcel = StrSubst ( forExcel, ":", "_" );
    forExcel = StrSubst ( forExcel, " ", "_" );
    forExcel = "$" + ex.defaultFilePath + "\\" + forExcel;
    if (not CopyFile(tempFileName, forExcel))
        println ("Error Copy file");
    end;
    forExcel = substr(forExcel, 2);
    obBook = ex.Workbooks.opentext(forExcel, 866, 1, 1,2,true,false,false,false,false,true,"┼",aw,1,"."," ",true,false);
end;

macro FormatExcel(fileName:String);
    var sel_range;
    var as = ex.worksheets(1);
    as.PageSetup.Orientation = 2;
    as.Columns("B:B").ColumnWidth = 18;
    as.Columns("C:C").ColumnWidth = 45;
    as.Columns("D:D").ColumnWidth = 10;

    as.Columns("B:D").HorizontalAlignment = 6;
    
    as.range("B1:D1").Font.Bold = true;

    sel_range = as.Range("B1:D"+(cnt+1)); 
    sel_range.Borders.Weight = 2;
    
    ex.visible = true;
end;

private macro ПрочитатьНастройки

  GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",V_STRING, path, errCode);
  pathfile = FindPath(resname, path);
  if (not pathfile)
    msgbox("Не найдена LBR с именем " + resname);
    return false;
  end;
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки: BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR");
    return false;
  end;
    
  dlg_p = TRecHandler("usrlnk", pathfile, True);
  
  return true;

end;

macro AddCol( ar,ind, fld, head, wdth, edit )
  ar.value( ind * 6 + 0 ) = fld;  // fieldName            
  ar.value( ind * 6 + 1 ) = head; // header               
  ar.value( ind * 6 + 2 ) = wdth; // width                
  ar.value( ind * 6 + 3 ) = edit; // fldType (2 = FBT)    
  ar.value( ind * 6 + 4 ) = null; // decPoint             
  ar.value( ind * 6 + 5 ) = 0;    // reserv               
end;

macro UpdateRole_lnk(oper, role) 

  var rs, str;
  
  str = " DECLARE " +
        "   v_stat INTEGER; " +
        " BEGIN " +
        "   rssl_arm.delete_temp_tables; " +
        "   rssl_arm.update_user_role_by_oper("+oper+"); " +
        "   v_stat := rssl_arm.update_user_menu("+oper+", "+role+"); " +
        " COMMIT; " +
        " END; ";
  rs = rsdcommand(str);
  rs.execute;
end;

macro GetOperNumber(user, username)
  
  var rs, str;
  var Col = TArray();
  
  macro EvProcMenu (rs, cmd, id, key )
    if (cmd == DLG_KEY) 
      if ((key == 13) or (key == 316))
        return CM_SELECT;
      end;
    end;
  end;

  str = " SELECT t.t_oper, " +
        "        t.t_name, " +
        "        dp_dep.t_name as ts_name, " +
        "        DECODE (NVL (persondeputy.t_oper, 0), 0, CHR (0), 'X') as persondeputy " +
        "   FROM dperson_dbt t, ddp_dep_dbt dp_dep, dpersondeputy_dbt persondeputy " +
        "  WHERE (t.t_codedepart = dp_dep.t_code(+) " +
        "         AND t.t_oper = persondeputy.t_oper(+) " +
        "         AND t.t_userclosed = CHR (0)) " +
        "    AND NOT EXISTS (SELECT 1 " +
        "                      FROM dperson_lnk_dbt " +
        "                     WHERE t_user = t.t_oper) " +
        "  ORDER BY   t.t_oper ";
  rs = RsdRecordSet(RsdCommand(str) ,RSDVAL_CLIENT, RSDVAL_STATIC );
        
  AddCol (col, 0, "t_oper",       "Номер",   10);
  AddCol (col, 1, "t_name",       "Ф И О",   35);
  AddCol (col, 2, "ts_name",      "Узел ТС", 7);
  AddCol (col, 3, "persondeputy", "Замещен", 8);
  
  if (runScroll(rs, 4, col, "OperSelect", @EvProcMenu, "Список операционистов", "~F4~ Поиск ~Enter~ Выбор ~ESC~ Выход", true));
    SetParm(0, rs.value("t_oper"));
    SetParm(1, rs.value("t_name"));
    return true;
  end;
  
  return false;
end;

macro GetMenuNumber (number, menuname)
  
  var rs, str;
  var Col = TArray();
  
  macro EvProcMenu (rs, cmd, id, key )
    if (cmd == DLG_KEY) 
      if ((key == 13) or (key == 316))
        return CM_SELECT;
      end;
    end;
  end;
  
  str = "select t_menuid, t_name from dmenutpl_dbt where t_menuid != 1 order by t_menuid";
  rs = RsdRecordSet(RsdCommand(str) ,RSDVAL_CLIENT, RSDVAL_STATIC );
  
  AddCol (col, 0, "t_menuid", "Номер меню",    20);
  AddCol (col, 1, "t_name",   "Название меню", 35);
  
  if (runScroll(rs, 2, col, "MenuSelect", @EvProcMenu, "Выбор меню", "~Enter~ Выбор", true));
    SetParm(0, rs.value("t_menuid"));
    SetParm(1, rs.value("t_name"));
    return true;
  end;
  
  return false;
end;

MACRO GetNameByOper(oper)
  var rs, str;
  str = "select t_name from dperson_dbt where t_oper = "+oper;
  rs = RsdRecordSet(str);
  if(rs and rs.movenext)
    return rs.value("t_name");
  end;
  return "Пользователь не найден!";
END;

MACRO GetNameByMenuid(id)
  var rs, str;
  str = "select t_name from dmenutpl_dbt where t_menuid = "+id;
  rs = RsdRecordSet(str);
  if(rs and rs.movenext)
    return rs.value("t_name");
  end;
  return "Меню не найдено!";
END;

MACRO GetHistory(user_id)
  
  var cmd, rs, str;
  var Col = TArray();
  
  macro EvProcHist (rs, cmd, id, key )
    if (cmd == DLG_KEY) 
      if (key == 27)
        return CM_CANCEL;
      end;
    end;
  end;
  
  str = "select t_nameuser, to_char(t_date, 'dd.mm.yyyy hh24.mi.ss') as t_date, t_oper from DPERSON_LNK_HIST_DBT where t_user = "+user_id+" order by t_date desc";
  rs = RsdRecordSet(RsdCommand(str) ,RSDVAL_CLIENT, RSDVAL_STATIC );
  
  AddCol(Col, 0, "t_nameuser", "Наименование \"виртуального\" пользователя", 30);
  AddCol(Col, 1, "t_date", "Дата изменения",  20);
  AddCol(Col, 2, "t_oper", "Операционист",     5);
  
  if (runScroll(rs, 3, col, "HistoryView", @EvProcHist, "История изменения пользователя "+user_id, "~ESC~ Выход", true));
  end;

END;

macro Event_View(dlg_view, cmd, id, key)

  if (cmd == DLG_INIT)
    dlg_view.rec.user = rs.value("t_user");
    dlg_view.rec.role = rs.value("t_role");
    dlg_view.rec.nameuser = rs.value("t_nameuser");
    dlg_view.rec.username = GetNameByOper(rs.value("t_user"));
    dlg_view.rec.rolename = GetNameByMenuid(rs.value("t_role"));
    
  elif (cmd == DLG_SETFOCUS)
    if (FldName(dlg_view, id) == "role")
      message("~ESC~ Выход ~Alt+H~ История ~F9~ Сохранить ~F3~ Выбрать роль");
    else
      message("~ESC~ Выход ~Alt+H~ История ~F9~ Сохранить");
    end;
    
  elif (cmd == DLG_KEY)
    if (key == 291) //KEY_ALT_H
      GetHistory(dlg_view.rec.user);
    elif (key == 317) //KEY_F3
      if (FldName(dlg_view, id) == "role")
        GetMenuNumber(dlg_view.rec.role, dlg_view.rec.rolename);
      end;
    elif (key == 323) //KEY_F9
      return CM_SAVE;
    end;
  end;
  
  UpdateFields(dlg_view);
  
end;

macro Event_ins(dlg_ins, cmd, id, key)

  if (cmd == DLG_INIT)
    dlg_ins.rec.user = 0;
    dlg_ins.rec.role = 0;
    dlg_ins.rec.nameuser = "";
    dlg_ins.rec.username = "Выберите операциониста";
    dlg_ins.rec.rolename = "Выберите меню";
    
  elif (cmd == DLG_SETFOCUS)
    if (FldName(dlg_ins, id) == "user")
      message("~ESC~ Выход ~F9~ Сохранить ~F3~ Выбрать операциониста");
    elif (FldName(dlg_ins, id) == "role")
      message("~ESC~ Выход ~F9~ Сохранить ~F3~ Выбрать роль");
    else
      message("~ESC~ Выход ~F9~ Сохранить");
    end;
  elif (cmd == DLG_KEY)
    if (key == 317) //KEY_F3
      if (FldName(dlg_ins, id) == "user")
        GetOperNumber(dlg_ins.rec.user, dlg_ins.rec.username);
      elif (FldName(dlg_ins, id) == "role")
        GetMenuNumber(dlg_ins.rec.role, dlg_ins.rec.rolename);
      end;
    elif (key == 323) //KEY_F9
      if (dlg_ins.rec.user == 0)
        msgbox("Не выбрано значение поля пользователь!");
        return CM_IGNORE;
      elif (dlg_ins.rec.role == 0)
        msgbox("Не выбрано значение поля меню!");
        return CM_IGNORE;
      else
        return CM_SAVE;
      end;
    end;
  end;
  UpdateFields(dlg_ins);
end;

macro EventHandlerMain(rs, cmd, id, key)
  
  var CM_FLAG = CM_DEFAULT;  /*Возвращаемое значение по умолчанию*/
  
  if (cmd == DLG_KEY)
    if (key == 13) //KEY_ENTER
      if(RunDialog(dlg_p, "Event_View"))
        rs.value("t_user") = dlg_p.rec.user;
        rs.value("t_role") = dlg_p.rec.role;
        rs.value("t_nameuser") = dlg_p.rec.nameuser;
        rs.Update ();
        UpdateRole_lnk(dlg_p.rec.user, dlg_p.rec.role);
        GoTOScroll (rs);
        UpdateScroll (rs);
        CM_FLAG = CM_IGNORE;
      end;
    elif (key == 27) //KEY_ESC
      CM_FLAG = CM_CANCEL;
    elif (key == 291) //KEY_ALT_H
      GetHistory(rs.value("t_user"));
      CM_FLAG = CM_IGNORE;
    elif (key == 322) //KEY_F8
      if (rs.RecCount > 0)
        if (GetTrue(true, "Вы действительно хотите удалить запись?"))
          rs.Delete();
          CM_FLAG = CM_SELECT;
        else
          CM_FLAG = CM_IGNORE;
        end;
      end;
    elif (key == 323) //KEY_F9
      if(RunDialog(dlg_p, "Event_ins"))
        rs.AddNew();
        rs.value("t_user") = dlg_p.rec.user;
        rs.value("t_role") = dlg_p.rec.role;
        rs.value("t_nameuser") = dlg_p.rec.nameuser;
        rs.Update ();
        UpdateRole_lnk(dlg_p.rec.user, dlg_p.rec.role);
        GoTOScroll (rs);
        UpdateScroll (rs);
        CM_FLAG = CM_IGNORE;
      end;
   
    elif (key == 321) //KEY_F7
      createUniqueFile();
      println("┼Пользователь┼Наименование \"виртуального\" пользователя┼Меню");
      while (rs.movenext)
        realUser = rs.value("t_user");
        virtUser = " "+  rs.value("t_nameuser");
        menuNumber = rs.value("t_role");
        cnt = cnt + 1;
        println(" ┼" + realUser + "┼" + virtUser + "┼" + menuNumber);
      end; 
      SetOutPut(null, false);
      transToExcel(tempFileName);
      FormatExcel(tempFileName);
      CM_FLAG = CM_SELECT;
    end;
  end;
  return CM_FLAG;
end;

/***ТОЧКА ВХОДА***/
  if (ПрочитатьНастройки)
    str = " SELECT t_user, t_nameuser, t_role "+
          "   FROM dperson_lnk_dbt "+
          "  ORDER BY t_user";
    rs = RsdRecordSet(RsdCommand(str) ,RSDVAL_CLIENT, RSDVAL_STATIC );
    AddCol(Col, 0, "t_user", "Пользователь",  15);
    AddCol(Col, 1, "t_nameuser", "Наименование \"виртуального\" пользователя", 30);
    AddCol(Col, 2, "t_role", "Меню",          8);
    while(RunScroll(rs, 3, Col, "pers_lnk", "EventHandlerMain", "Привязки пользователей", "~ENTER~ Выбор ~Alt+H~ История ~F8~ Удалить ~F9~ Добавить ~F7~ Печать", true, -1, -1))
      rs = RsdRecordSet(RsdCommand(str) ,RSDVAL_CLIENT, RSDVAL_STATIC );
    end;
    rs.Close();
    exit(1);
  end;
