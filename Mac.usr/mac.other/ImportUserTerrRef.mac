/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   ████████   ████████
   ███   ███  ███   ███
   ███  ████  ███  ████
   ███████    ███████
   ███  ███   ███  ███
   ███   ███  ███   ███

   RR Рахмедов Р.С.

   Имя файла: ImportUserTerrRef.mac

   Создан: 31.08.2012

   Описание: Макрос для создания пользовательской таблицы dstop_dbt, используемой
             в алгоритме нечеткого поиска лиц причастных к террорестической деятельности.
   ChangeLog:
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 28.01.2014 В рамках перехода на 31 патч, немного доработал макрос, обернул все действия в транзакцию, навел красоту.
   //RR 29.01.2014 Добавил возможность копирования справочника во все банки группы путем вызова ReplicateTerrReff из imp_kfm.mac
-----------------------------------------------------------------------------------------------------------------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
Import RSD, Globals;

private const /*Константы для скролинга*/
             KEY_ENTER         = 13,
             KEY_ESC           = 27,
             KEY_F8            = 322,
             KEY_F9            = 323,
             KEY_F2            = 316,
             KEY_CTRL_F2       = 351;

private const 
             LBR_REGISTRY_PATH = "BANK_INI/ОБЩИЕ ПАРАМЕТРЫ/ДИРЕКТОРИИ/LBRDIR",
             LBR_NAME_FILE     = "ImpTerr.lbr",
             LBR_NAME_PANEL    = "TEXTPNL";

         var lbr_fullpath, lbr_directory, dlg;
private  var STR, FACTOR, ID, flag = true; 
private  var Scrollcmd  = " SELECT     T_NUMBER, T_TERROR, T_TU, T_NAMEU, T_DESCRIPT, T_CITIZEN, T_KODCR, T_KODCN, T_AMR, T_ADRESS, " +
                                 " T_KD, T_SD, T_RG, T_ND, T_VD, T_GR, T_YR, T_MR, T_CB_DATE, T_CE_DATE, T_FOUNDER, T_DIRECTOR, " +
                                 " T_ROW_ID, T_TERRTYPE, T_FACTOR, T_Coden, T_STR, T_text,T_ground, T_fl_contr, T_autoinc " +
                          " FROM   dstop_dbt ORDER BY T_TU, T_NUMBER",
             rrs        = RSDRecordset(RsdCommand(Scrollcmd) , RSDVAL_CLIENT, RSDVAL_Static ),
             NameScroll = "Список лиц причастных к террорестической деятельности",
             KeysScroll = "| Enter- Выбор | ESC- Выход | F8 - Удалить | F9 - Добавить запись | F2 - Импорт справочника | CTRL+F2 Тиражирование справочника |";

 MACRO UpdateGR()
  var cmd = RSDCommand("update dstop_dbt set T_GR = chr(1) where T_GR = ' 1.01.0001'");
  cmd.execute();
 END;

/*Обнаружилась ошибка, из-за наличия в строке поиска непечатных символов, поэтому убираем их*/
 MACRO ClearFields()
  var sqwyrt, rs, cmd;
  sqwyrt = "update dstop_dbt stp set STP.T_STR = null where STP.T_STR = chr(1)";
  cmd = RsdCommand(sqwyrt);
  cmd.execute;
 END;
   
/*Процедура импорта справочника террористов*/
 MACRO ImpTerrRef()

   Class TerrData(t_number, t_terrortype, t_type, t_name, t_description, t_citizen, t_codcr, t_codcn, t_legaladdress, t_address, t_codedocum,
                  t_paperseries,t_papernumber , t_okpo, t_namedocum, t_regdate, t_birthyear, t_birthplace, t_dateinput, t_datedelete, t_founder, t_director,
                  t_rowid, t_resolution, t_risk, t_coden, t_str, t_text, t_ground, t_fl_contrt, t_autoinc )
      var number       = t_number;
      var terrortype   = t_terrortype;
      var type         = t_type;
      var name         = t_name;
      var description  = t_description;
      var citizen      = t_citizen;
      var codcr        = t_codcr;
      var codcn        = t_codcn;
      var legaladdress = t_legaladdress;
      var address      = t_address;
      var codedocum    = t_codedocum;
      var paperseries  = t_paperseries;
      var papernumber  = t_papernumber;
      var okpo         = t_okpo;
      var namedocum    = t_namedocum;
      var regdate      = t_regdate;
      var birthyear    = t_birthyear;
      var birthplace   = t_birthplace;
      var dateinput    = t_dateinput;
      var datedelete   = t_datedelete;
      var founder      = t_founder;
      var director     = t_director;
      var rowid        = t_rowid;
      var resolution   = t_resolution;
      var risk         = t_risk;
      var coden        = t_coden;
      var str          = t_str;
      var text         = t_text;
      var ground       = t_ground;
      var fl_contrt    = t_fl_contrt;
      var autoinc      = t_autoinc;
   end;
  
   var sqwyrt0, rs0;
   var sqwyrt, rs, cmd;
   var sqwyrt1, rs1, cmd1;
   var sqwyrt2, rs2, cmd2;
   var TerrDataArr = tArray, TerrDateidx = 0;
   var Str     = StrFor(1),
       Text    = StrFor(1),
       Ground  = StrFor(1);
   var regdate, dateinput, datedelete;
   var StartTime;
    //Пустышка
    BegAction (100, "Ждите идет обработка", false);
    StartTime = time;
    println("Время запуска процедуры           - "+time);
   /*Собираем те записи которые РФМ не предоставляет, эти записи создаются сотрудниками банка самостоятельно
     В данной выборке не нужно обрабатывать стоп фразы, а в t_autoinc записываем значение счетчика TerrDateidx для того чтобы нумерация была сплошная 
     в итоге получается что вначале записываем значение пользовательских стоп фраз, далее дописываем то, что формируется отдельным алгоритмом*/
   sqwyrt0 = " SELECT   STP.T_NUMBER, "
          +"\n          STP.T_TERROR, "
          +"\n          STP.T_TU, "
          +"\n          nvl(STP.T_NAMEU,chr(1)) T_NAMEU, "
          +"\n          nvl(STP.T_DESCRIPT,chr(1)) T_DESCRIPT, " 
          +"\n          nvl(STP.T_CITIZEN,chr(1)) T_CITIZEN,  "
          +"\n          nvl(STP.T_KODCR,chr(1)) T_KODCR,  "
          +"\n          nvl(STP.T_KODCN,chr(1)) T_KODCN,  "
          +"\n          nvl(STP.T_AMR,chr(1)) T_AMR,  "
          +"\n          nvl(STP.T_ADRESS,chr(1)) T_ADRESS,  "
          +"\n          nvl(STP.T_KD,chr(1)) T_KD,  "
          +"\n          nvl(STP.T_SD,chr(1)) T_SD,  "
          +"\n          nvl(STP.T_RG,chr(1)) T_RG,  "
          +"\n          nvl(STP.T_ND,chr(1)) T_ND,  "
          +"\n          nvl(STP.T_VD,chr(1)) T_VD,  "
          +"\n          nvl(STP.T_GR,chr(1)) T_GR,  "
          +"\n          nvl(STP.T_YR,chr(1)) T_YR,  "
          +"\n          nvl(STP.T_MR,chr(1)) T_MR ,  "
          +"\n          nvl(STP.T_CB_DATE, '01.01.0001') T_CB_DATE,  "
          +"\n          nvl(STP.T_CE_DATE, '01.01.0001') T_CE_DATE,  "
          +"\n          nvl(STP.T_FOUNDER,chr(1)) T_FOUNDER,  "
          +"\n          nvl(STP.T_DIRECTOR,chr(1)) T_DIRECTOR,  "
          +"\n          nvl(STP.T_ROW_ID,chr(1)) T_ROW_ID,  "
          +"\n          nvl(STP.T_TERRTYPE,chr(1)) T_TERRTYPE,  "
          +"\n          STP.T_factor,  "
          +"\n          STP.T_Coden,  "
          +"\n          nvl(STP.T_str,chr(1)) T_str,  "
          +"\n          nvl(STP.T_text,chr(1)) T_text,  "
          +"\n          nvl(STP.T_ground,chr(1)) T_ground,  "
          +"\n          nvl(STP.T_fl_contr,chr(48)) T_fl_contr, "
          +"\n          STP.T_autoinc "
          +"\n   FROM   dstop_dbt stp "
          +"\n  WHERE   stp.t_number = 0 ";
   rs0 = RsdRecordSet(sqwyrt0);
     while (rs0 and rs0.movenext())
       if (rs0.value("T_str") != StrFor (1))
          TerrDataArr (TerrDateidx) = TerrData (rs0.value(0), rs0.value(1), rs0.value(2), rs0.value(3), rs0.value(4), rs0.value(5), rs0.value(6), 
                                                   rs0.value(7), rs0.value(8), rs0.value(9), rs0.value(10), rs0.value(11), rs0.value(12), rs0.value(13), 
                                                   rs0.value(14), rs0.value(15), rs0.value(16), rs0.value(17), rs0.value(18), rs0.value(19), rs0.value(20), 
                                                   rs0.value(21), rs0.value(22), rs0.value(23), rs0.value(24), rs0.value(25), rs0.value(26), rs0.value(27), 
                                                   rs0.value(28), rs0.value(29), TerrDateidx + 1 );
          TerrDateidx = TerrDateidx + 1;
       end;
     end;
   
   //Собираем T_TERRORISTID для дальнейшего использования
   sqwyrt = "select KFM.T_TERRORISTID from dterr_kfm_dbt kfm order by KFM.T_TERRORISTID asc ";
   rs = RsdRecordSet(sqwyrt);
    while ( rs and rs.movenext() )
     //Набираем данные для обработки и последующей вставки в dstop_dbt
     sqwyrt1 = " SELECT   KFM.T_NUMBER, "
            +"\n          KFM.T_TERRORTYPE, "
            +"\n          KFM.T_TYPE, "
            +"\n          REPLACE ( (SELECT   DBMS_LOB.SUBSTR (wm_concat (T_NAME), 253) "
            +"\n                       FROM   dterr_kfm_aka_dbt "
            +"\n                      WHERE   T_TERRORISTID = KFM.T_TERRORISTID), ',', ';') "
            +"\n             T_NAME, "
            +"\n          INF.T_DESCRIPTION, "
            +"\n          INF.T_CITIZEN, "
            +"\n          KFM.T_CODCR, "
            +"\n          KFM.T_CODCN, "
            +"\n          INF.T_LEGALADDRESS, "
            +"\n          INF.T_ADDRESS, "
            +"\n          chr(1) T_CODEDOCUM, "
            +"\n          INF.T_PAPERSERIES, "
            +"\n          INF.T_PAPERNUMBER, "
            +"\n          INF.T_OKPO, "
            +"\n          INF.T_NAMEDOCUM, "
            +"\n          KFM.T_REGDATE, "
            +"\n          KFM.T_BIRTHYEAR, "
            +"\n          INF.T_BIRTHPLACE, "
            +"\n          KFM.T_DATEINPUT, "
            +"\n          KFM.T_DATEDELETE, "
            +"\n          INF.T_FOUNDER, "
            +"\n          INF.T_DIRECTOR, "
            +"\n          chr(1)  T_RowId, "
            +"\n          INF.T_RESOLUTION, "
            +"\n          0.9 t_risk, "
            +"\n          (select max(STP.T_CODEN )+1 from dstop_dbt stp) t_coden, "
            +"\n          chr(1) t_str, "
            +"\n          chr(1) t_text, "
            +"\n          chr(1) t_ground, "
            +"\n          0 t_fl_contr, "
            +"\n          chr(1) t_autoinc "
            +"\n   FROM   dterr_kfm_dbt kfm, dterrinfo_dbt inf "
            +"\n  WHERE   KFM.T_TERRORISTID = ? AND INF.T_TERRORISTID = KFM.T_TERRORISTID ";
      cmd1 = RsdCommand(sqwyrt1);
      cmd1.AddParam("", RSDBP_IN, rs.value(0) );
      rs1  = RsdRecordSet(cmd1);
        while (rs1 and rs1.movenext())
         
          DtTmSplit ( (rs1.value("T_REGDATE")), regdate );
          DtTmSplit ( (rs1.value("T_DATEINPUT")), dateinput );
          DtTmSplit ( (rs1.value("T_DATEDELETE")), datedelete );
          //Обрабатываем отобранные записи
          if (rs1.value("T_TYPE") == 1)
             Str = rs1.value("T_NAME");
          elif (   (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "A")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "B")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "C")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "D")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "E")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "F")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "G")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "H")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "I")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "J")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "K")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "L")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "M")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "N")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "O")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "P")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "Q")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "R")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "S")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "T")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "U")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "V")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "W")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "X")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "Y")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "Z")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "<")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == ">")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "(")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == ")")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == ",")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == ".")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "!")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "@")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "#")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "$")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "%")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "^")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "&")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "*")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "-")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "+")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "~")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == ";")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == ":")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "'")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "/")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "\\")
                or (Substr( (StrUpr(rs1.value("T_NAME"))) , 1, 1) == "\""))
             Str = StrFor(1);
        else
             Str = (trim(SubStr(trim(rs1.value("T_NAME") ),1, (index( trim(rs1.value("T_NAME") ) , " ")) )));
        end; 
         
          Text = trim(rs1.value("T_NAME"))+" ";
         
          if( (trim(rs1.value("T_DESCRIPTION")) != "") and (rs1.value("T_DESCRIPTION")) != "0") 
               Text = Text + trim(rs1.value("T_DESCRIPTION")) + " ";
          end;
         
          if( (trim(rs1.value("T_CODCR")) != "") and (trim(rs1.value("T_CODCR")) != "0"))
               Text = Text + trim(rs1.value("T_CODCR")) + " ";
          end;
         
          if( (trim(rs1.value("T_CODCN")) != "") and (trim(rs1.value("T_CODCN")) != "0"))
               Text = Text + trim(rs1.value("T_CODCN")) + " ";
          end;
         
          if( (trim(rs1.value("T_LEGALADDRESS")) != "") and (trim(rs1.value("T_LEGALADDRESS")) != "0"))
               Text = Text + trim(rs1.value("T_LEGALADDRESS")) + " ";
          end;
         
          if( (trim(rs1.value("T_ADDRESS")) != "") and (trim(rs1.value("T_ADDRESS")) != "0"))
               Text = Text + trim(rs1.value("T_ADDRESS")) + " ";
          end;
        
          if( (trim(rs1.value("T_CODEDOCUM")) != "") and (trim(rs1.value("T_CODEDOCUM")) != "0"))
               Text = Text + trim(rs1.value("T_CODEDOCUM")) + " ";
          end;
        
          if( (trim(rs1.value("T_PAPERSERIES")) != "") and (trim(rs1.value("T_PAPERSERIES")) != "0"))
               Text = Text + trim(rs1.value("T_PAPERSERIES")) + " ";
          end;
        
          if( (trim(rs1.value("T_PAPERNUMBER")) != "") and (trim(rs1.value("T_PAPERNUMBER")) != "0"))
               Text = Text + trim(rs1.value("T_PAPERNUMBER")) + " ";
          end;
        
          if( (trim(rs1.value("T_OKPO")) != "") and (trim(rs1.value("T_OKPO")) != "0"))
               Text = Text + trim(rs1.value("T_OKPO")) + " ";
          end;
        
          if( (trim(rs1.value("T_NAMEDOCUM")) != "") and (trim(rs1.value("T_NAMEDOCUM")) != "0"))
               Text = Text + trim(rs1.value("T_NAMEDOCUM")) + " ";
          end;
        
          if( (trim(rs1.value("T_REGDATE")) != "") and (trim(rs1.value("T_REGDATE")) != "0"))
               Text = Text + trim(rs1.value("T_REGDATE")) + " ";
          end;
        
          if( (trim(rs1.value("T_BIRTHYEAR")) != "") and (trim(rs1.value("T_BIRTHYEAR")) != "0"))
               Text = Text + trim(rs1.value("T_BIRTHYEAR")) + " ";
          end;
        
          if( (trim(rs1.value("T_BIRTHPLACE")) != "") and (trim(rs1.value("T_BIRTHPLACE")) != "0"))
               Text = Text + trim(rs1.value("T_BIRTHPLACE")) + " ";
          end;
        
          if  (trim(rs1.value("T_DATEINPUT")) != "")
               Text = Text + trim(rs1.value("T_DATEINPUT")) + " ";
          end;
         
          if  (trim(rs1.value("T_DATEDELETE")) != "")
               Text = Text + trim(rs1.value("T_DATEDELETE")) + " ";
          end;
        
          if  (trim(rs1.value("T_FOUNDER")) != "")
               Text = Text + trim(rs1.value("T_FOUNDER")) + " ";
          end;
        
          if  (trim(rs1.value("T_DIRECTOR")) != "")
               Text = Text + trim(rs1.value("T_DIRECTOR")) + " ";
          end;
        
         Ground = StrFor(1);

         TerrDataArr (TerrDateidx) = TerrData (rs1.value(0), rs1.value(1), rs1.value(2), rs1.value(3), rs1.value(4), rs1.value(5), rs1.value(6), 
                                               rs1.value(7), rs1.value(8), rs1.value(9), rs1.value(10), rs1.value(11), rs1.value(12), rs1.value(13), 
                                               rs1.value(14), string(regdate), rs1.value(16), rs1.value(17), dateinput , datedelete, rs1.value(20), 
                                               rs1.value(21), rs1.value(22), rs1.value(23), rs1.value(24), rs1.value(25), Str, Text, Ground,
                                               rs1.value(29),TerrDateidx + 1 );
         TerrDateidx = TerrDateidx + 1;
        end;
    end;
   
    if (TerrDateidx != 0)
   
      RslDefCon.BeginTrans();

      sqwyrt = "delete from dstop_dbt_backup";
      cmd = rsdcommand(sqwyrt);
      cmd.Execute;
  

      sqwyrt = "insert into dstop_dbt_backup value (select * from dstop_dbt)";
      cmd = rsdcommand(sqwyrt);
      cmd.Execute;
  
      sqwyrt = "delete from dstop_dbt";
      cmd = rsdcommand(sqwyrt);
      cmd.Execute;
     
      EndAction();//Закрываем пустышку
   
      // Вставлем собранные данные в новую dstop_dbt
      InitProgress(TerrDataArr.size,"Ждите...","Создание записей");
      TerrDateidx = 0;
      while (TerrDataArr.size > TerrDateidx)
        sqwyrt2 = " insert into dstop_dbt "
               +"\n        (T_NUMBER, "
               +"\n         T_TERROR, "
               +"\n         T_TU, "
               +"\n         T_NAMEU, "
               +"\n         T_DESCRIPT, "
               +"\n         T_CITIZEN, "
               +"\n         T_KODCR, "
               +"\n         T_KODCN, "
               +"\n         T_AMR, "
               +"\n         T_ADRESS, "
               +"\n         T_KD, "
               +"\n         T_SD, "
               +"\n         T_RG, "
               +"\n         T_ND, "
               +"\n         T_VD, "
               +"\n         T_GR, "
               +"\n         T_YR, "
               +"\n         T_MR, "
               +"\n         T_CB_DATE, "
               +"\n         T_CE_DATE, "
               +"\n         T_FOUNDER, "
               +"\n         T_DIRECTOR, "
               +"\n         T_ROW_ID, "
               +"\n         T_TERRTYPE, "
               +"\n         T_factor, "
               +"\n         T_Coden, "
               +"\n         T_str, "
               +"\n         T_text, "
               +"\n         T_ground, "
               +"\n         T_fl_contr, "
               +"\n         T_autoinc) "
               +"\n values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
          cmd2 = RsdCommand (sqwyrt2);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).number);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).terrortype);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).type);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).name);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).description);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).citizen);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).codcr);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).codcn);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).legaladdress);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).address);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).codedocum);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).paperseries);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).papernumber);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).okpo);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).namedocum);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).regdate);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).birthyear);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).birthplace);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).dateinput);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).datedelete);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).founder);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).director);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).rowid);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).resolution);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).risk);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).coden);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).str);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).text);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).ground);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).fl_contrt);
          cmd2.AddParam("", RSDBP_IN, TerrDataArr (TerrDateidx).autoinc);
          cmd2.Execute;
          testevent(10);
        TerrDateidx = TerrDateidx + 1;
        UseProgress(TerrDateidx);
      end;
      RemProgress();
      ClearFields();
      UpdateGR();
      RslDefCon.CommitTrans();
      msgbox("Импорт завершен успешно\nВремя выполнения процедуры - " + (time - StartTime)); 
    else
      msgbox("Процедура не нашла данные для обработки, содержимое dstop_dbt остается неизменным \n Свяжитесь с Рахмедовым Р.С.\n Телефон 8-961-001-8999");
    end;
  
    /* Обработка исключительных ситуаций */
   onerror ()
     RslDefCon.RollbackTrans();
     msgbox("Во время выполнения процедуры возникла ошибка\n Свяжитесь с Рахмедовым Р.С.\n Телефон 8-905-100-7000");
 END;

/* MACRO ReplicateTerrReff()
   debugbreak;
   var cmd, i = 0;
   private var DBLINSK = Tarray();
   DBLINSK(0) = "GEBPRIM";
   DBLINSK(1) = "VUZPRIM";
   DBLINSK(2) = "RSBANK_EVS_DBLINK";
   DBLINSK(3) = "RSBANK_EVVOR_DBLINK";
   DBLINSK(4) = "RSBANK_EVV_DBLINK";
   DBLINSK(5) = "RSBANK_EVU_DBLINK";
   DBLINSK(6) = "RSBANK_EVSTA_02_DBLINK";
   DBLINSK(7) = "RSBANK_GO_DBLINK";
   DBLINSK(8) = "RSBANK_NBS_DBLINK";
   RslDefCon.BeginTrans();
   while (i < DBLINSK.Size)
     cmd = RSDCommand("delete from dstop_dbt@"+DBLINSK[i]+"");
     cmd.execute;
     cmd = RSDCommand("insert into dstop_dbt@"+DBLINSK[i]+" value (select * from dstop_dbt)");
     cmd.execute;
     i = i + 1;
   end;
   RslDefCon.CommitTrans();
    onerror ()
    RslDefCon.RollbackTrans();
    msgbox("Во время выполнения процедуры возникла ошибка\nСвяжитесь с Рахмедовым Р.С.\nТелефон 8-905-100-7000");
  END; */

 /*Процедура обработки нажатия Enter'a для вызова формы редактирования информации и всех последующих нажатий*/
 MACRO PanelEventHandler (dlg, Command, id, key, aa)
  private var cmd; 
  if ((Command == DLG_KEY) and (key == KEY_ESC))
    if ( (dlg.rec.StopText != STR ) and (dlg.rec.Risk != FACTOR) )
      if (GetTrue(True, "Запись была изменена,\n хотите сохранить изменения ?"))
        rrs.edit();
        rrs.value("T_STR")    = dlg.rec.StopText;
        rrs.value("T_FACTOR") = dlg.rec.Risk;
        rrs.update();
        UpdateScroll (rrs); 
      else
        return CM_IGNORE;
      end;
    elif (dlg.rec.StopText != STR )
      if (GetTrue(True, "Строка поиска была изменена,\n хотите сохранить изменения ?"))
        rrs.edit();
        rrs.value ("t_str") = dlg.rec.StopText;
        rrs.update();
        UpdateScroll (rrs, 3); 
      else
        return CM_IGNORE;
      end;
    elif (dlg.rec.Risk != FACTOR)
      if (GetTrue(True, "Коэффициент риска был изменен,\n хотите сохранить изменения ?"))
        rrs.edit();
        rrs.value("T_FACTOR") = dlg.rec.Risk;
        rrs.update();
        UpdateScroll (rrs); 
      else
        return CM_IGNORE;
      end;
    end;
   return CM_DEFAULT;
  elif ((Command == DLG_KEY) and (key == KEY_F9))
    if ( (dlg.rec.StopText != STR ) and (dlg.rec.Risk != FACTOR) )
      rrs.edit();
      rrs.value("T_STR")    = dlg.rec.StopText;
      rrs.value("T_FACTOR") = dlg.rec.Risk;
      rrs.update();
      UpdateScroll (rrs);
    elif (dlg.rec.StopText != STR )
      rrs.edit();
      rrs.value("T_STR")    = dlg.rec.StopText;
      rrs.update();
      UpdateScroll (rrs); 
    elif (dlg.rec.Risk != FACTOR)
      rrs.edit();
      rrs.value("T_FACTOR") = dlg.rec.Risk;
      rrs.update();
      UpdateScroll (rrs); 
    end;
  end;
  return CM_DEFAULT;
 END;

/*Процедура обработки нажатия F9 для вызова формы редактирования информации и всех последующих нажатий*/
 MACRO PanelEventHandlerIns (dlg, Command, id, key, aa)
  private var cmd;
  private var LastNum;
  if (rrs.MoveLast())
    LastNum = rrs.value("T_autoinc") + 1;
  end;
  if ((Command == DLG_KEY) and (key == KEY_ESC))
      if ( (dlg.rec.StopText != STR ) and (dlg.rec.Risk != FACTOR) )
           if (GetTrue(True, "Запись была изменена,\n хотите сохранить изменения ?"))             
             rrs.addnew();
             rrs.value("T_NUMBER")       = 0;
             rrs.value("T_TERROR")       = 0;
             rrs.value("T_TU")           = 0;
             rrs.value("T_NAMEU")        = dlg.rec.StopText;
             rrs.value("T_DESCRIPT")     = StrFor(1);
             rrs.value("T_CITIZEN")      = StrFor(1);
             rrs.value("T_KODCR")        = StrFor(1);
             rrs.value("T_KODCN")        = StrFor(1);
             rrs.value("T_AMR")          = StrFor(1);
             rrs.value("T_ADRESS")       = StrFor(1);
             rrs.value("T_KD")           = StrFor(1);
             rrs.value("T_SD")           = StrFor(1);
             rrs.value("T_RG")           = StrFor(1);
             rrs.value("T_ND")           = StrFor(1);
             rrs.value("T_VD")           = StrFor(1);
             rrs.value("T_GR")           = StrFor(1);
             rrs.value("T_YR")           = StrFor(1);
             rrs.value("T_MR")           = StrFor(1);
             rrs.value("T_CB_DATE")      = date(0,0,0);
             rrs.value("T_CE_DATE")      = date(0,0,0);
             rrs.value("T_FOUNDER")      = StrFor(1);
             rrs.value("T_DIRECTOR")     = StrFor(1);
             rrs.value("T_ROW_ID")       = StrFor(1);
             rrs.value("T_TERRTYPE")     = StrFor(1);
             rrs.value("T_factor")       = dlg.rec.Risk;
             rrs.value("T_Coden")        = 0;
             rrs.value("T_str")          = dlg.rec.StopText;
             rrs.value("T_text")         = StrFor(1);
             rrs.value("T_ground")       = StrFor(1);
             rrs.value("T_fl_contr")     = 2;
             rrs.value("T_autoinc")      = LastNum;
             rrs.update();
             UpdateScroll (rrs);
             return CM_SAVE;
           else
             return CM_IGNORE;
           end;
    else 
           msgbox("Запрещено указание 1 параметра, пожалуйста заполните оба поля");
           return CM_IGNORE;
      end;
   return CM_DEFAULT;
  elif ((Command == DLG_KEY) and (key == KEY_F9))
     if ( ( dlg.rec.StopText != STR ) and (dlg.rec.Risk != FACTOR) )
           
           if (GetTrue(True, "Запись была изменена,\n хотите сохранить изменения ?"))
             rrs.addnew();
             rrs.value("T_NUMBER")       = 0;
             rrs.value("T_TERROR")       = 0;
             rrs.value("T_TU")           = 0;
             rrs.value("T_NAMEU")        = dlg.rec.StopText;
             rrs.value("T_DESCRIPT")     = StrFor(1);
             rrs.value("T_CITIZEN")      = StrFor(1);
             rrs.value("T_KODCR")        = StrFor(1);
             rrs.value("T_KODCN")        = StrFor(1);
             rrs.value("T_AMR")          = StrFor(1);
             rrs.value("T_ADRESS")       = StrFor(1);
             rrs.value("T_KD")           = StrFor(1);
             rrs.value("T_SD")           = StrFor(1);
             rrs.value("T_RG")           = StrFor(1);
             rrs.value("T_ND")           = StrFor(1);
             rrs.value("T_VD")           = StrFor(1);
             rrs.value("T_GR")           = StrFor(1);
             rrs.value("T_YR")           = StrFor(1);
             rrs.value("T_MR")           = StrFor(1);
             rrs.value("T_CB_DATE")      = date(0,0,0);
             rrs.value("T_CE_DATE")      = date(0,0,0);
             rrs.value("T_FOUNDER")      = StrFor(1);
             rrs.value("T_DIRECTOR")     = StrFor(1);
             rrs.value("T_ROW_ID")       = StrFor(1);
             rrs.value("T_TERRTYPE")     = StrFor(1);
             rrs.value("T_factor")       = dlg.rec.Risk;
             rrs.value("T_Coden")        = 0;
             rrs.value("T_str")          = dlg.rec.StopText;
             rrs.value("T_text")         = StrFor(1);
             rrs.value("T_ground")       = StrFor(1);
             rrs.value("T_fl_contr")     = 2;
             rrs.value("T_autoinc")      = LastNum;
             rrs.update();
             UpdateScroll (rrs);
             return CM_SELECT;
           else
             return CM_IGNORE;
           end;
      else
           msgbox("Запрещено указание 1 параметра, пожалуйста заполните оба поля");
           return CM_IGNORE;
      end;
  end;
  
   return CM_DEFAULT;
 END;
 
 /*Процедура обработки нажатия клавиш в скролинге*/
 MACRO EvProc (Rrs, Command, id, key )
   private var cmd:String = "";

   if   ((Command == DLG_KEY) and (key == KEY_ENTER)) 
     if ( GetRegistryValue ( LBR_REGISTRY_PATH, V_STRING, lbr_directory ))
       lbr_fullpath      = FindPath ( LBR_NAME_FILE, lbr_directory );
       dlg               = TRecHandler ( LBR_NAME_PANEL, lbr_fullpath, TRUE );
       if (ExecMacroFile( "lib_types.mac", "isNull", rrs.value("t_str")) )
         id               = StrFor(1);
         STR              = StrFor(1);
         dlg.rec.StopText = StrFor(1);
       else
         id               = rrs.value("t_str");
         STR              = rrs.value("t_str");
         dlg.rec.StopText = rrs.value("t_str");
       end;
       FACTOR            = rrs.value("t_Factor");
       dlg.rec.FullInfo  = rrs.value("T_Text");
       dlg.rec.Risk      = rrs.value("t_Factor") ;
       RunDialog (dlg, "PanelEventHandler");
       // return CM_DEFAULT;
     else
        msgbox ("Ошибка при получении пути к LBR");
     end;
         
     return CM_IGNORE;
         
     elif ((Command == DLG_KEY) and (key == KEY_F9))
      
       if ( GetRegistryValue ( LBR_REGISTRY_PATH, V_STRING, lbr_directory ))
         lbr_fullpath      = FindPath ( LBR_NAME_FILE, lbr_directory );
         dlg               = TRecHandler ( LBR_NAME_PANEL, lbr_fullpath, TRUE );
         id                = StrFor(1);
         STR               = StrFor(1);
         FACTOR            = 0.0;
         dlg.rec.FullInfo  = StrFor(1);
         dlg.rec.StopText  = StrFor(1);
         dlg.rec.Risk      = 0.0;
         RunDialog (dlg, "PanelEventHandlerIns");
       else
          msgbox ("Ошибка при получении пути к LBR");
       end;
           
       return CM_IGNORE;
      
     elif ((Command == DLG_KEY) and (key == KEY_F8))
      
       if ( (rrs.value("T_NUMBER") == 0) and (rrs.value("T_TERROR") == 0) and (rrs.value("T_TU") == 0) )
         rrs.Delete();
         rrs.update();
         UpdateScroll (rrs);
       else
         msgbox("Удалять созданные автоматически записи запрещено!!!");
         return CM_IGNORE;
       end;

     elif ((Command == DLG_KEY) and (key == KEY_F2))
      
       if (GetTrue(false, "Будет выполнена процедура импорта записей,\n хотите продолжить ?"))
         ImpTerrRef();
         rrs.Close();
         exit(1);
       end;
        
     elif ((Command == DLG_KEY) and (key == KEY_CTRL_F2))
        
       if (GetTrue(false, "В Н И М А Н И Е!!!!!!\nБудет выполнена процедура импорта записей во все банки группы,\n хотите продолжить ?"))
         ExecMacroFile("imp_kfm.mac", "ReplicateTerrReff", false);
       end;
        
     end;
      
  return CM_DEFAULT;
 END;

/*Процедура построения текстовых колонок скролинга*/
 MACRO AddColumn (ar,ind, fld, head, width, rdonly)
    ar.value (ind * 6)      = fld;
    ar.value (ind * 6 + 1)  = head;
    ar.value (ind * 6 + 2)  = width;
    ar.value (ind * 6 + 3 ) = 1;   // fldType
    ar.value (ind * 6 + 4 ) = 0;   // decPoint
    ar.value (ind * 6 + 5 ) = 0;   // reserv
 END;

/*Процедура построения числовой колонки скролинга*/
 MACRO AddColumn1 (ar,ind, fld, head, width, rdonly)
    ar.value (ind * 6)      = fld;
    ar.value (ind * 6 + 1)  = head;
    ar.value (ind * 6 + 2)  = width;
    ar.value (ind * 6 + 3 ) = 12;   // fldType
    ar.value (ind * 6 + 4 ) = 1;   // decPoint
    ar.value (ind * 6 + 5 ) = 0;   // reserv
 END;

/*Макрос создания скролинга*/
 MACRO GetScroll(); 
 
  var Column = TArray;
  
  AddColumn  (Column, 0,  "T_NUMBER",   "№",                            4, false ) ;
  AddColumn  (Column, 1,  "t_fl_contr", "PK",                           2, false ) ;
  AddColumn  (Column, 2,  "t_NameU",    "ИМЯ",                         30, false ) ;
  AddColumn  (Column, 3,  "t_Descript", "Описание субъекта",           30, false ) ;
  AddColumn  (Column, 4,  "t_Citizen",  "Гражданство/Национальность",  30, false ) ;
  AddColumn  (Column, 5,  "t_KodCR",    "Код места регистрации",       20, false ) ;
  AddColumn  (Column, 6,  "t_KodCN",    "Код места нахождения",        20, false ) ;
  AddColumn  (Column, 7,  "t_AMR",      "Место регистрации",           30, false ) ;
  AddColumn  (Column, 8,  "t_ADRESS",   "Место нахождения",            30, false ) ;
  AddColumn  (Column, 9,  "t_KD",       "Код",                          3, false ) ;
  AddColumn  (Column, 10, "t_SD",       "Серия док-та",                12, false ) ;
  AddColumn  (Column, 11, "t_RG",       "Номер док-та",                12, false ) ;
  AddColumn  (Column, 12, "t_ND",       "Идентификатор",               13, false ) ;
  AddColumn  (Column, 13, "t_VD",       "Наименование документа",      30, false ) ;
  AddColumn  (Column, 14, "t_GR",       "Дата регистрации",            12, false ) ;
  AddColumn  (Column, 15, "t_YR",       "Год рождения",                12, false ) ;
  AddColumn  (Column, 16, "t_MR",       "Место рождения",              30, false ) ;
  AddColumn  (Column, 17, "t_CB_Date",  "Дата нач.",                   10, false ) ;
  AddColumn  (Column, 18, "t_CE_Date",  "Дата окон.",                  10, false ) ;
  AddColumn  (Column, 19, "t_Founder",  "Учредитель",                  60, false ) ;
  AddColumn  (Column, 20, "t_Director", "Директор",                    60, false ) ;
  AddColumn  (Column, 21, "t_Row_ID",   "ID строк",                    10, false ) ;
  AddColumn  (Column, 22, "t_TerrType", "Резолюция",                   60, false ) ;
  AddColumn1 (Column, 23, "t_Factor",   "КОЭФФИЦ",                      3, false ) ;
  AddColumn  (Column, 24, "t_CodeN",    "КОД",                          3, false ) ;
  AddColumn  (Column, 25, "t_Ground",   "ПРОЧЕЕ",                      30, false ) ;
  AddColumn  (Column, 26, "t_str",      "СТРОКА ПОИСКА",               30, false ) ;

  while (RunScroll(Rrs, 27, Column, null, @EvProc, NameScroll, KeysScroll,false,null,null,0,0))
    rrs = RSDRecordset(RsdCommand(Scrollcmd) , RSDVAL_CLIENT, RSDVAL_Static );
  end;
    
END;

 /*Точка входа*/
 GetScroll();
 rrs.Close();
 exit(1);