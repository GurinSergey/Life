/*-----------------------------------------------------------------------------*
* ОАО "Русский Славянский Банк" (ЗАО)                                          *
*                                                                              *
*       Программное формирование файла экранных ресурсов *.lbr                 *
*                                                                              *
* Идентификатор: mklbr.mac                                                     *
* RS-Bank ver.   5.00.092.XXX                                                  *
* Подсистема:    библиотека                                                    *
* Автор:         Лебедев Д.Д.                                                  *
* Создан:        03.03.2010                                                    *
*                                                                              *
*------------------------------------------------------------------------------*/
private Macro Int2Bin( dec:integer, bits )

Var	bin = "";

	while( bits )
		bin = String( (dec - Int( dec/2 )*2), bin );
		dec = Int( dec/2 );
		bits = bits-1;
	end;
	return bin;
end;

private Macro Bin2Int( bin:string )

Var	i, len = StrLen( bin ),	dec = 0;

	for( i,1,len );
		if( SubStr( bin,i,1 ) == "1" )
			dec = dec + pow( 2,len-i );
		end;
	end;
	return Int( dec );
end;

private Macro XorInt( a, sizeof, b )

Var	bits = 8, i, j, k,
	a_bin = Int2Bin( a, bits*sizeof ),
	b_bin = Int2Bin( b, bits ),
	bin = "", xor_bin = "";

	j = 0;
	for( i,1,sizeof )
		bin = SubStr( a_bin, j*bits+1, bits );
		for( k,1,bits )
			if( SubStr( bin,k,1 ) == SubStr( b_bin,k,1 ) )
				xor_bin = String( xor_bin, "0" );
			else
				xor_bin = String( xor_bin, "1" );
			end;
		end;
		j = i;
	end;
	return Bin2Int( xor_bin );
end;

/****************************************************************************/
/* Константы                                                                */
/****************************************************************************/

private Class CEnumFieldType

Var	EDIT    = 1,	//редактируемое
	NOEDIT  = 2,	//нередактируемое
	BUTTON  = 3,	//кнопка с тенью
	LISTBOX = 4,	//многострочное редактируемое
	VIEW    = 5;	//просмотр
end;

private Class CEnumFocus

Var	YES = 0,
	NO  = 1;
end;

private Class CEnumDataType

Var	V_INTEGER = 0,
	V_LONG    = 1,
	V_FLOAT   = 2,
	V_DOUBLE  = 4,
	V_DOUBLEM = 6,	//MONEY
	V_STRING  = 7,
	V_SNR     = 8,
	V_DATE    = 9,
	V_TIME    = 10,
	V_CHR     = 12,
	V_UCHR    = 13,
	V_LDMON   = 14,
	V_LDMONR  = 15,
	V_DOUBLER = 16,
	V_LDOUBLE = 17,
	V_NUMSTR  = 18;

//	V_NUMERIC = ;
end;

private Class CEnumColour

Var	SMES = 1,	//стиль сообщений              
	RMES = 2,	//стиль аварийных сообщений    
	SHLP = 3,	//стиль помощи                 
	SMEN = 4,	//стиль меню                   
	SCOM = 5,	//стиль основной
	SBCM = 6,	//стиль с яркой рамкой         
	SCRL = 7;	//стиль справочных скроллингов 
end;

private Class CEnumFrame

Var	DOUBL = 1,	//двойная
	UNARY = 2,	//одинарная
	SOLID = 3,	//сплошная
	COMB1 = 4,	//комбинированая 1
	COMB2 = 5	//комбинированая 2
end;

/****************************************************************************/
/* Диалоговая панель                                                        */
/****************************************************************************/

//текст
private Class TLabel

Var	Colour = 0,
	x0 = 0, y0 = 0,
	Name = "";

	Macro Write( lbr )

		lbr.Write( 0, V_INTEGER, 1 );
		lbr.Write( Colour, V_INTEGER, 1 );
		lbr.Write( x0, V_INTEGER, 1 );
		lbr.Write( y0, V_INTEGER, 1 );
		lbr.Write( 0, V_INTEGER, 1 );
		//ZString
		lbr.Write( Strlen( Name )+1, V_INTEGER, 1 );
		lbr.Write( Name );
		lbr.Write( 0, V_INTEGER, 1 );
	end;

	Macro Destructor
		//println( GenClassName( this ) );
	end;
end;

//рамка
private Class TFrame

Var	Colour = 0,	//цвет
	x0     = 0,	//X координата верхнего левого
	y0     = 0,	//Y координата верхнего левого
	dx     = 0,	//ширина
	dy     = 0,	//высота
	Type   = 0;	//тип рамки

	Macro Write( lbr )

		lbr.Write( 0, V_INTEGER, 1 );
		lbr.Write( Colour, V_INTEGER, 1 );
		lbr.Write( x0, V_INTEGER, 1 );
		lbr.Write( y0, V_INTEGER, 1 );
		lbr.Write( dx, V_INTEGER, 1 );
		lbr.Write( dy, V_INTEGER, 1 );
		lbr.Write( Type, V_INTEGER, 1 );
	end;

	Macro Destructor
		//println( GenClassName( this ) );
	end;
end;

//поле
private Class TField

Var	Type     = 0,	//вид поля (4L)
	Focus    = 0,	//фокус ввода (4H)
	Colour   = 0,	//цвет
	DataType = 0,	//тип значения
	DecPoint = 0,	//точка
	x0       = 0,	//X координата верхнего левого
	y0       = 0,	//Y координата верхнего левого
	dx       = 0,	//ширина                      
	dy       = 0,	//высота                      
	HelpPage = 0,	//страница помощи
	Name     = "";	//наименование

	Macro Write( lbr )

	Var	bin = Int2Bin( Focus, 4 ) + Int2Bin( Type, 4 );

		lbr.Write( Bin2Int( bin ), V_INTEGER, 1 );
		lbr.Write( 0, V_INTEGER, 1 );	//?
		lbr.Write( Colour, V_INTEGER, 1 );
		lbr.Write( DataType, V_INTEGER, 1 );
		lbr.Write( DecPoint, V_INTEGER, 1 );
		lbr.Write( 0, V_INTEGER, 1 );	//?

		lbr.Write( x0, V_INTEGER, 1 );
		lbr.Write( y0, V_INTEGER, 1 );
		lbr.Write( dx, V_INTEGER, 1 );
		lbr.Write( dy, V_INTEGER, 1 );

		//похоже на порядок переходов на другие поля по оси X и Y
		lbr.Write( 0, V_INTEGER, 1 );
		lbr.Write( 0, V_INTEGER, 1 );
		lbr.Write( 0, V_INTEGER, 1 );
		lbr.Write( 0, V_INTEGER, 1 );

		lbr.Write( HelpPage, V_INTEGER, 2 );	//страница помощи
		if( Type == lbr.EFieldType.BUTTON )
			lbr.Write( 0, V_INTEGER, 1 );
		else
			lbr.Write( 1, V_INTEGER, 1 );
		end;

		//ZString
		lbr.Write( Strlen( Name )+1, V_INTEGER, 1 );
		lbr.Write( Name );
		lbr.Write( 0, V_INTEGER, 1 );
	end;

	Macro Destructor
		//println( GenClassName( this ) );
	end;
end;

//ресурс
private Class TResource( rcType )

Var	//данные для учётной записи
	Name = "",	//наименование ресурса
	Addr = 0,	//адрес ресурса
	Type = rcType;	//тип ресурса

	private 	Macro GetCurTime

	Var	h, m, s;

		TimeSplit( Time, h,m,s );
		return Bin2Int( Int2Bin( h, 5 ) + Int2Bin( m, 6 ) + Int2Bin( s, 5 ) );
	end;

	private 	Macro GetCurDate

	Var	d, m, y;

		DateSplit( Date, d,m,y );
		y = y - 1980;
		return Bin2Int( Int2Bin( y, 7 ) + Int2Bin( m, 4 ) + Int2Bin( d, 5 ) );
	end;

	Macro Write( lbr, StartPos )

		addr = StartPos;
		lbr.SetPos( StartPos );
		//размер, дата и время ресурса
		lbr.Write( 0, V_INTEGER, 4 );
		lbr.Write( GetCurTime(), V_INTEGER, 2 );
		lbr.Write( GetCurDate(), V_INTEGER, 2 );
		return lbr.GetPos;
	end;
end;

//ресурс - диалоговая панель
private Class( TResource ) TPanel( h )
   InitTResource( 8 );

Var	//свойства панели
	Colour     = 0,	//цвет панели
	BorderLine = 0,	//вид рамки
	Fields     = TArray,	//массив полей
	Frames     = TArray,	//массив рамок
	Labels     = TArray,	//массив строк
	x0         = 0,	//X координата верхнего левого
	y0         = 0,	//Y координата верхнего левого
	x1         = 0,	//X координата нижнего правого
	y1         = 0,	//Y координата нижнего правого
	HelpPage   = 0,	//страница помощи
	Title      = "",	//заголовок
	StatusLine = "";	//статус

Var	lbr = h;	//слабая ссылка на файл ресурсов

	//добавить поле
	Macro AddField( x0, y0, FieldType, Focus, DataType, szName, dx, dy, point ) 

	Var	ob = TField;

		if( ( DataType == lbr.EDataType.V_DATE ) or ( DataType == lbr.EDataType.V_TIME ) )
			if( ValType( dx ) != V_INTEGER )
				dx = 10;
			end;
		elif( DataType == lbr.EDataType.V_CHR )
			if( ValType( dx ) != V_INTEGER )
				dx = 1;
			end;
		elif( DataType == lbr.EDataType.V_DOUBLE )
			if( ValType( point ) != V_INTEGER )
				point = SetDefPrec;
			end;
		elif( DataType == lbr.EDataType.V_DOUBLEM )
			if( ValType( point ) != V_INTEGER )
				point = 2;
			end;
		elif( DataType == lbr.EDataType.V_STRING )
			if( FieldType == lbr.EFieldType.BUTTON )
				if( ValType( point ) != V_INTEGER )
					point = dx + 1;
				end;
				dy = 2;
			elif( FieldType == lbr.EFieldType.LISTBOX )
				if( ValType( point ) != V_INTEGER )
					point = dx * dy + 1;
				end;
			elif( ValType( point ) != V_INTEGER )
				point = dx + 1;
			end;
		elif( DataType == lbr.EDataType.V_NUMSTR )
			if( ValType( point ) != V_INTEGER )
				point = dx + 1;
			end;
		elif( DataType == lbr.EDataType.V_SNR )
			if( ValType( dx ) != V_INTEGER )
				dx = 25;
				point = dx + 1;
			end;
		end;
		if( ValType( point ) != V_INTEGER )
			point = 0;
		end;
		if( ValType( dy ) != V_INTEGER )
			dy = 1;
		end;

		ob.Name     = szName;
		ob.Type     = FieldType;
		ob.Focus    = Focus;
		ob.DataType = DataType;
		ob.x0       = x0;
		ob.y0       = y0;
		ob.dx       = dx;
		ob.dy       = dy;
		ob.DecPoint = point;

		Fields[Fields.size] = ob;
		return ob;
	end;

	//добавить текст
	Macro AddLabel( x0, y0, Text, Colour ) 

	Var	ob = TLabel;

		if( Valtype( Colour ) != V_INTEGER )
			Colour = 0;
		end;

		ob.Colour = Colour;
		ob.x0     = x0;
		ob.y0     = y0;
		ob.Name   = Text;

		Labels[Labels.size] = ob;
		return ob;
	end;

	//добавить рамку
	Macro AddFrame( x0, y0, dx, dy, Type, Colour )

	Var	ob = TFrame;

		if( ValType( Colour ) != V_INTEGER )
			Colour = 0;
		end;
		if( ValType( Type ) != V_INTEGER )
			Type = 0;
		end;
		ob.Colour = Colour;
		ob.x0     = x0;
		ob.y0     = y0;
		ob.dx     = dx;
		ob.dy     = dy;
		ob.Type   = Type;

		Frames[Frames.size] = ob;
		return ob;
	end;

	Macro Write( StartPos )

	Var	i, BegPos, EndPos, len = 0;

		//начало ресурса
		BegPos = Write( lbr, StartPos );

		lbr.Write( Colour-1, V_INTEGER, 1 );	//для панели -1
		lbr.Write( BorderLine, V_INTEGER, 1 );

		lbr.Write( Fields.Size, V_INTEGER, 1 );
		lbr.Write( Frames.Size+Labels.Size, V_INTEGER, 1 );
		lbr.Write( Frames.Size, V_INTEGER, 1 );
		lbr.Write( Labels.Size, V_INTEGER, 1 );

		lbr.Write( x0, V_INTEGER, 1 );	//координаты левого верхнего
		lbr.Write( y0, V_INTEGER, 1 );
		lbr.Write( x1, V_INTEGER, 1 );	//координаты правого нижнего
		lbr.Write( y1, V_INTEGER, 1 );

		lbr.Write( HelpPage, V_INTEGER, 2 );	//страница помощи

		lbr.Write( 0, V_INTEGER, 4 );	//reserv[7]
		lbr.Write( 0, V_INTEGER, 2 );
		lbr.Write( 0, V_INTEGER, 1 );

		//подсчёт кол-ва байт для всех ZString
		if( Strlen( StatusLine ) )
			len = len + StrLen( StatusLine ) + 1;
		end;
		if( Strlen( Title ) )
			len = len + StrLen( Title ) + 1;
		end;
		i = 0;
		while( i < Labels.size )
			len = len + Strlen( Labels[i].Name ) + 1;
			i = i + 1;
		end;
		i = 0;
		while( i < Fields.size )
			if( Fields[i].Type == lbr.EFieldType.BUTTON )
				len = len + Strlen( Fields[i].Name ) + 1;
			end;
			i = i + 1;
		end;
		//кол-во байт для всех ZString
		lbr.Write( len, V_INTEGER, 2 );
                                                   
		//ZString
		if( Strlen( StatusLine ) )
			lbr.Write( StrLen( StatusLine )+1, V_INTEGER, 1 );
			lbr.Write( StatusLine );
		end;
		lbr.Write( 0, V_INTEGER, 1 );

		//ZString
		if( Strlen( Title ) )
			lbr.Write( StrLen( Title )+1, V_INTEGER, 1 );
			lbr.Write( Title );
		end;
		lbr.Write( 0, V_INTEGER, 1 );

		i = 0;
		while( i < Frames.size )
			Frames[i].Write( lbr );
			i = i + 1;
		end;

		i = 0;
		while( i < Labels.size )
			Labels[i].Write( lbr );
			i = i + 1;
		end;

		i = 0;
		while( i < Fields.size )
			Fields[i].Write( lbr );
			i = i + 1;
		end;

		EndPos = lbr.GetPos;
		//размер ресурса
		lbr.SetPos( StartPos );
		lbr.Write( (EndPos - BegPos), V_INTEGER, 4 );

		return EndPos;
	end;

	Macro Destructor

		//println( GenClassName( this ) );
		while( Labels.size )
			Labels[Labels.size-1] = NULL;
			Labels.size = Labels.size - 1;
		end;
		while( Frames.size )
			Frames[Frames.size-1] = NULL;
			Frames.size = Frames.size - 1;
		end;
		while( Fields.size )
			Fields[Fields.size-1] = NULL;
			Fields.size = Fields.size - 1;
		end;

		lbr    = NULL;
		Fields = NULL;
		Frames = NULL;
		Labels = NULL;
	end;
end;

/****************************************************************************/
/* Горизонтальное меню                                                      */
/****************************************************************************/

//элемент меню
private
Class TItem

Var	Type       =  0,	//тип элемента
	Number     =  0,	//
	Name       = "",	//название элемента
	StatusLine = "",	//статусная строка
	Code       =  0;	//кол-во элементов/код элемента

	Macro Write( lbr )

		lbr.Write( Type, V_INTEGER, 2 );
		if( Type != 3 )
			lbr.Write( Number, V_INTEGER, 2 );
			//String
			lbr.Write( Strlen( Name ), V_INTEGER, 1 );
			lbr.Write( 0, V_INTEGER, 1 );
			lbr.Write( Name );
			//String
			lbr.Write( Strlen( StatusLine ), V_INTEGER, 1 );
			lbr.Write( 0, V_INTEGER, 1 );
			lbr.Write( StatusLine );
			lbr.Write( Code, V_INTEGER, 2 );
		end;
	end;
end;

//ресурс - меню
private
Class( TResource ) TMenu( h )
   InitTResource( 15 );

Var	ItemList = TArray( 256 ),	//массив элементов меню
	StatusLine = "";		//статус

private
Var	lbr   = h,	//слабая ссылка на файл ресурсов
	Stack = TArray,	//стек
	Popup = 0;	//кол-во элементов верхнего уровня

	//добавить элемент меню
	Macro AddItem( KeyWord, Name )

	Var	ob = NULL, type = 0, Code, StatusLine;

		KeyWord = StrUPR( KeyWord );

		if( KeyWord == "ITEM" )
			if( Stack.size  )
				type = 1;
				GetParm( 3, Code );
				GetParm( 4, StatusLine );
			end;
		elif( KeyWord == "POPUP" )
			type = 2;
			GetParm( 3, StatusLine );
		elif( KeyWord == "DELIM" )
			if( Stack.size )
				type = 3;
			end;
		elif( KeyWord == "END" )
			if( Stack.size )
				Stack[Stack.size-1] = NULL;
				Stack.size = Stack.size - 1;
			end;
		end;

		if( ValType( Name ) != V_STRING )
			Name = ""
		end;
		if( ValType( Code ) != V_INTEGER )
			Code = 0;
		end;
		if( ValType( StatusLine ) != V_STRING )
			StatusLine = "";
		end;		

		if( type )
			ob = TItem;		
			ob.Type = type;
			ob.Name = Name;
			ob.StatusLine = StatusLine;
			ob.Code = Code;
			if( type == 2 )
				if( Stack.size == 0 )
					Popup = Popup + 1;
				else
					//увеличиваем счётчик элементов
					Stack[Stack.size-1].Code = Stack[Stack.size-1].Code+1;
				end;
				Stack[Stack.size] = ob;
			else
				Stack[Stack.size-1].Code = Stack[Stack.size-1].Code+1;
			end;
			ItemList[ItemList.size] = ob;
		end;
		return ob;
	end;

	Macro Write( StartPos )

	Var	i, elem, BegPos, EndPos, len = 0;

		//начало ресурса
		BegPos = Write( lbr, StartPos );

		//String
		lbr.Write( Strlen( StatusLine )+1, V_INTEGER, 1 );
		lbr.Write( StatusLine );
		lbr.Write( 0, V_INTEGER, 1 );
		//всего элементов
		lbr.Write( ItemList.size, V_INTEGER, 2 );

		//подсчёт кол-ва байт для всех строк элементов
		i = 0;
		while( i < ItemList.size )
			elem = ItemList[i];
			if( elem.Type < 3 )
				//исключаем DELIM
				if( elem.Name != "" )
					len = len + Strlen( elem.Name );
				end;
				len = len + 2;	//длина строки 2 байта
				if( elem.StatusLine != "" )
					len = len + Strlen( elem.StatusLine );
				end;
				len = len + 2;
			end;
			i = i + 1;
		end;
		lbr.Write( len, V_INTEGER, 2 );

		//кол-во выпадающих элементов
		lbr.Write( Popup, V_INTEGER, 2 );
		i = 0;
		while( i < ItemList.size )
			ItemList[i].Write( lbr );
			i = i + 1;
		end;

		EndPos = lbr.GetPos;
		//размер ресурса
		lbr.SetPos( StartPos );
		lbr.Write( (EndPos - BegPos), V_INTEGER, 4 );
		return EndPos;
	end;
end;

//файл экранных ресурсов *.lbr
Class( TStream ) TLbrFile( szFileName, szOpenMode );
   InitTStream( szFileName, szOpenMode );

Var	//константы
	EFieldType = CEnumFieldType,	//тип поля
	EFrame     = CEnumFrame,	//рамка
	EColour    = CEnumColour,	//цвет
	EDataType  = CEnumDataType,	//тип значения
	EFocus     = CEnumFocus;	//фокус ввода

private Var	//свойства библиотеки
	RCList     = TArray,	//массив ресурсов
	LbrRecSize = 25,	//размер заголовка
	AccRecSize = 14,	//длина учётной записи
	XorVal     = 85;	//

	Macro AddPanel( szName, x0, y0, dx, dy, Colour, BorderLine )

	Var	ob = TPanel( weakref( this ) );

		ob.Name   = StrUPR( szName );
		ob.x0     = x0;
		ob.y0     = y0;
		ob.x1     = ob.x0 + dx-1;
		ob.y1     = ob.y0 + dy+1;
		ob.Colour = Colour;
		ob.BorderLine = BorderLine;

		RCList[RCList.size] = ob;
		return ob;
	end;

	Macro AddMenu( szName, szStatusLine )

	Var	ob = TMenu( weakref( this ) );

		ob.Name = StrUPR( szName );
		ob.StatusLine = szStatusLine;

		RCList[RCList.size] = ob;
		return ob;
	end;

	Macro Save

	Var	i = 0, rc, CurPos = LbrRecSize, j, ar;

		//заголовок библиотеки
		Write( "RESLIB" );
		Write( 0, V_INTEGER, 1 );	//
		Write( 0, V_INTEGER, 2 );	//адрес таблицы ресурсов
		Write( 0, V_INTEGER, 2 );	//кол-во удалённых
		Write( RCList.Size, V_INTEGER, 2 );	//кол-во действующих
		Write( AccRecSize, V_INTEGER, 1 );	//размер учётной записи ресурса
		Write( 0, V_INTEGER, 1 );

		//ресурсы
		while( i < RCList.Size )
			rc = RCList[i];
			CurPos = rc.Write( CurPos );
			i = i + 1;
		end;

		//адрес таблицы ресурсов
		SetPos( 7 );
		Write( CurPos, V_INTEGER, 2 );
		SetPos( CurPos );
		//таблица ресурсов
		i = 0;
		while( i < RCList.Size )
			rc = RCList[i];
			//адрес ресурса
			Write( XorInt( rc.Addr, 4, XorVal ), V_INTEGER, 4 );
			//наименование ресурса ZString
			ar = StrSplit2( rc.Name,1,1,8 );
			j = 0;
			while( j < ar.size )
				Write( XorInt( CodeFor( ar[j] ), 1, XorVal ), V_INTEGER, 1 );
				j = j + 1;
			end;
			Write( XorInt( 0, 1, XorVal ), V_INTEGER, 1 );
			//тип ресурса
			Write( XorInt( rc.Type, 1, XorVal ), V_INTEGER, 1 );
			i = i + 1;
		end;
		Flush();
	end;

	Macro Destructor

		//println( GenClassName( this ) );
		while( RCList.size )
			RCList[RCList.size-1] = NULL;
			RCList.size = RCList.size - 1;
		end;

		RCList     = NULL;
		EFieldType = NULL;
		EFrame     = NULL;
		EColour    = NULL;
		EDataType  = NULL;
		EFocus     = NULL;
	end;
end;
	
	
	