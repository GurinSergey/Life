/****************************************************************************/
/*                   R-Style SoftWare Lab, RS-Bank 5.1                      */
/****************************************************************************/
/*                  Подсистема "Межбанковские расчеты"                      */
/* Макрофункции для работы с платежами                                      */
/*                                                                          */
/*  Имя файла: wlpaymou.mac                                                 */
/*  Создан:  17.09.03                                        Панов А. Б.    */
/****************************************************************************/
/*SDA адаптация для 31-й */
import "wldoc.mac";
import "cb_FillFactura.mac";
import lib_access, lib_const, lib_fg;

/*
 return 0;        // никаких действий после работы макросы не делать
 return UPDTREC   // обновить в скролле текущюю запись
 return UPDTPAGE  // обновить страницу скроллла         
*/
macro Функция_Пользователя(Режим)
var cmd, m;
array mn;

  if (Режим == UFN_PANEL_INPUT)
    // функция вызвана из панели ввода объекта
  end;
  if (Режим == UFN_PANEL_EDIT)
    // функция вызвана из панели корректировки объекта  
  end;
  if (Режим == UFN_SCROL)
    // функция вызвана из панели скроллинга, единичный вызов (read-only)  
  end;

  if (wlpmpropcred.PROPSTATUS > 6600)
    mn(asize(mn))="Откатить платеж сеанса";
  end;

  m=menu(mn,null,"Выберите действие над платежом");
  if (m < 0 )
  elif (mn(m)=="Откатить платеж сеанса")     // Уточнение суммы. письмо от 15.10.15 12:32
        if ((wlpmpaym.amount > 300000) and (not ACS_CheckGroupOper(ACS_GRP_ROLLBACK_SESSION,{oper},false)) and _bank.is_EXV) 
            msgbox("Вы не включены в группу 301. | Откат платежа запрещен");
            return RSL_EXIT_FAILURE;
        end;
        cmd = RSDCommand(
                        "declare " +
                        "   v_paymentid  number := "+wlpmpaym.PaymentID+"; "+
                        "begin " +

                        "   update   dpmprop_dbt t " +
                        "      set   t_propstatus = 6600 " +
                        "    where   t.t_paymentid = v_paymentid; " +
                    
                        "   update   dwlpm_dbt t " +
                        "      set   t_propstatus = 6600 " +
                        "    where   t.t_paymentid = v_paymentid; " +


                        "   update   dwlmes_dbt mes " +
                        "      set   mes.t_state = 10 " +
                        "    where   exists (select   1 " +
                        "                  from   dwlpm_dbt pm, " +
                        "                         dwlmeslnk_dbt lnk " +
                        "                 where   mes.t_mesid = lnk.t_mesid " +
                        "                         and lnk.t_objkind = 501 " +
                        "                         and pm.t_wlpmid = lnk.t_objid " +
                        "                         and pm.t_paymentid = v_paymentid); " +

                        "   delete   dwlhistor_dbt t " +
                        "    where   exists (select   1 " +
                        "                  from   dwlpm_dbt pm, " +
                        "                         dwlmeslnk_dbt lnk " +
                        "                 where   t.t_objid = lnk.t_mesid " +
                        "                         and lnk.t_objkind = 501 " +
                        "                         and pm.t_wlpmid = lnk.t_objid " +
                        "                         and pm.t_paymentid = v_paymentid) " +
                        "           and t_state != 10; "+

                        "   commit; " +
                        "end; "
                        );
       cmd.execute;
   
  end;

  return 0;
end;
                      
/* Установка подсказки оптимизатору ORACLE */

private const Hint_ByStep:string = 
"/*+FIRST_ROWS(200) LEADING(oprstep oproper pmpaym t outprop inprop pmrmprop wlmes wlsess) INDEX(oprstep doprstep_dbt_idx10) INDEX(pmpaym dpmpaym_dbt_idx0) INDEX(t dwlpm_dbt_idx1) USE_NL(oprstep oproper pmpaym t outprop inprop pmrmprop wlmes wlsess)*/"; 

private const Hint_ByPropStatus:string = 
"/*+FIRST_ROWS(200) LEADING(t pmpaym outprop inprop pmrmprop wlmes wlsess oproper oprstep) INDEX(t dwlpm_dbt_idx3) INDEX(pmpaym dpmpaym_dbt_idx0) USE_NL(t pmpaym outprop inprop pmrmprop wlmes wlsess oproper oprstep)*/";

private const Hint_ByValueDate:string = 
"/*+FIRST_ROWS(200) LEADING(pmpaym t outprop inprop pmrmprop wlmes wlsess oproper oprstep) INDEX(pmpaym dpmpaym_dbt_idx11) INDEX(t dwlpm_dbt_idx1) USE_NL(pmpaym t outprop inprop pmrmprop wlmes wlsess oproper oprstep)*/";

private const Hint_ByCloseDate:string = 
"/*+FIRST_ROWS(200) LEADING(pmpaym t outprop inprop pmrmprop wlmes wlsess oproper oprstep) INDEX(pmpaym dpmpaym_dbt_idx15) INDEX(t dwlpm_dbt_idx1) USE_NL(pmpaym t outprop inprop pmrmprop wlmes wlsess oproper oprstep)*/";

private const Hint_ByTransferDate:string = 
"/*+FIRST_ROWS(200) LEADING(outprop t pmpaym inprop pmrmprop wlmes wlsess oproper oprstep) INDEX(pmprop dpmprop_dbt_idx1) INDEX(pmpaym dpmpaym_dbt_idx0) INDEX(t dwlpm_dbt_idx1) USE_NL(outprop t pmpaym inprop pmrmprop wlmes wlsess oproper oprstep)*/";

MACRO УстановитьПодсказку( TableName:string, IndexNum:integer, DefaultHint:string, ScrolStates:integer ):string

  /* Возможные значения ScrolStates:
      0 - Список всех исходящих платежей
      1 - Список исходящих платежей для подготовки к отправке
      2 - Список непроконтролированных исходящих платежей
      3 - Список проконтролированных исходящих платежей
      4 - Список отправленных исходящих платежей
      5 - Список отправленных исходящих платежей
      6 - Список недоставленных исходящих платежей
      7 - Список доставленных исходящих платежей
      8 - Список несквитованных исходящих платежей
      9 - Список исходящих платежей на картотеке корсчета
     10 - Список исходящих платежей на картотеке у кор-та
     11 - Список сквитованных исходящих платежей
     12 - Список отвергнутых исходящих платежей
     13 - Список закрытых исходящих платежей
     23 - Документы по сервисной операции помещения в незаверш.
  */

  /* Все, Закрытые, Незавершённые */
  if( ( ScrolStates ==  0 ) or
      ( ScrolStates == 13 ) or
      ( ScrolStates == 23 ) )

    var dtflt:PMScrolDateFltr = PMScrolDateFltr();

    if( dtflt.IsSet( DTFL_TRANSFERDATE ) )
      return Hint_ByTransferDate;
    elif( dtflt.IsSet( DTFL_VALUEDATE ) )
      return Hint_ByValueDate;
    elif( dtflt.IsSet( DTFL_CLOSEDATE ) )
      return Hint_ByCloseDate;
    else
      return Hint_ByPropStatus;
    end;

  /* Несквитованные */
  elif( ScrolStates == 8 )      
    
    return Hint_ByStep;

  /* Все остальные */
  else

    return Hint_ByPropStatus;

  end;

  return DefaultHint;
END;              

