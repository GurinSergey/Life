/****************************************************************************/
/*                   R-Style SoftWare Lab, RS-Bank 5.1                      */
/****************************************************************************/
/*                  Подсистема "Межбанковские расчеты"                      */
/* Генерация ответа по сообщениям УФЭБС ED241                               */
/*                                                                          */
/* Имя файла: ufgd241.mac                                                   */
/* Создан:    05.03.09                                                      */
/* Изменен:   10.04.12 Chesnokov D.S. по заявке С-9530 проверка на группу   */
/****************************************************************************/
import "ufgendoc.mac", "diver.mac";

var ver_st = 1;
file wlreq2 ("wlreq.dbt") key 3;

const strQueries = "Информация об электронных сообщениях. Сообщений:";

macro НайтиФормуИсходногоСообщения(ref: string, refdate: date, author: integer) :string

  var result = 0;
  var rs:object;
  var select:string;
  var params:TArray;

  select = "SELECT dwlmesrls_dbt.t_formid " +
           "FROM dwlreq_dbt, dwlmeslnk_dbt, dwlmesrls_dbt, dwlmes_dbt, dwlmesfrm_dbt " +
           "WHERE dwlmesrls_dbt.t_formid = dwlmesfrm_dbt.t_formid " +
           "AND dwlmesfrm_dbt.t_tpid = 9 " +
           "AND dwlreq_dbt.t_reqid = dwlmeslnk_dbt.t_objid " +
           "AND dwlmeslnk_dbt.t_objkind = 505 " +
           "AND dwlmes_dbt.t_mesid = dwlmeslnk_dbt.t_mesid " +
           "AND dwlmesrls_dbt.t_rlsformid = dwlmes_dbt.t_rlsformid " +
           "AND dwlreq_dbt.t_originatorID = :author " +
           "AND dwlmes_dbt.t_sysdate = :refdate " +
           "AND dwlmes_dbt.t_trn = :REF";
  
  params = makeArray( SQLParam("author",  author),
                      SQLParam("refdate", refdate),
                      SQLParam("REF",     ref) );
  
  rs = execSQLselect( select, params, FALSE );
  if ( rs and rs.MoveNext() )
     result = rs.value(0);
  end;
        
  return result;
end;

macro GenDoc( addrMes )

  if (not ВходитВГруппу({oper},198))
    msgBox("Вы не включены в группу \"198 - Генерация сообщений УФЭБС\"");
    return false;
  end;

  var xml:object = ActiveX( "MSXML.DOMDocument" );
  var Строка, Строка2 = "", Строка3 = "", Receiver, Error, InitAuthor, Part = 0, field_name, countRequisitList = 0, addCount = 0;
  var Narrative="", Description="";

  var EDDate, j = 0;

  SetBuff( wlmes, addrMes );

  PrintLog( 2, "Генерация информационного сообшения по ED241" );

  ClearRecord( wlreq );

  while( СчитатьПоле( field_name, Строка ) )
    if( field_name == XMLField )
      if ( not xml.loadXML(Строка) )
         println( string( "Неверный формат сообщения по форме ED241" ) );
         return false;
      end;

      EDDate = ReadAttribute(xml,"EDDate");
      wlreq.Queries = "";

      /* Заполнение учетных буферов */
      wlreq.TRN                = wlmes.Trn;
      wlreq.OriginatorID       = ToRespID(ReadAttribute(xml,"EDAuthor"));
      wlreq.OriginatorCodeKind = PTCK_BIC;
      wlreq.OriginatorCode     = ПолучитьКодСубъекта(wlreq.OriginatorID, wlreq.OriginatorCodeKind, Error);
      Receiver = ReadOptinalAttribute(xml,"EDReceiver");
      wlreq.RecipientCodeKind  = PTCK_BIC;
      if(Receiver)
         wlreq.RecipientID     = ToRespID(Receiver);
      else
         wlreq.RecipientID     = {OurBank};
      end;
      wlreq.RecipientCode      = ПолучитьКодСубъекта(wlreq.RecipientID, wlreq.RecipientCodeKind, Error);

      wlreq.RelatedRef  = wlmes.RelatedRef;
      
      if(ReadAttribute(xml,"EDNo","InitialED" ) != "")
         wlreq.InitDateMes = ToDate_(ReadAttribute(xml,"EDDate","InitialED" )); //TAM
         InitAuthor        = ToRespID(ReadAttribute(xml,"EDAuthor","InitialED" ));
         wlreq.InitFormIDMes = НайтиФормуСообщенияПоРеференсу(wlreq.RelatedRef, TRANSP_UFBS);  
      end;
    elif( field_name = UFBSDocExtField )
      countRequisitList = countRequisitList + 1;
    end;
  end;  

  wlreq.Queries = string(strQueries,countRequisitList);

  if( (not ПроверитьЭлелементPartInfoНаНаличие(xml, wlreq.PartAggregateID, Part)) Or (Part == 1))
    if( not ВставитьОтвет( wlreq ) )
      std.msg("Ошибка при вводе ответа");
      return FALSE;
    end;
  else
    ClearRecord( wlreq2 );
    wlreq2.PartAggregateID = ReadAttribute(xml,"PartAggregateID","PartInfo");
    wlreq2.Direct = "X";
    if( GetEQ( wlreq2 ))      
      if(Index(wlreq2.Queries,strQueries))
        countRequisitList = countRequisitList + Int(SubStr(wlreq2.Queries,strlen(strQueries)+1));
      end;
      wlreq2.Queries = strQueries + countRequisitList;
      if( not ОбновитьОтвет( wlreq2 ) )
        std.msg("Ошибка при обновлении ответа");
        return FALSE;
      end;
    else
      std.msg("Не найдена головная часть ответа");
      return FALSE;
    end;  
  end;

  return TRUE;

  OnError(er) /* Обработка ошибок времени выполнения */
    std.msg(String(er.Message, "|Модуль: ", er.Module, " Строка: ", er.Line));
    return FALSE;

end;
