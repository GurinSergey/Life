/****************************************************************************/
/*                   R-Style SoftWare Lab, RS-Bank 6.0                      */
/****************************************************************************/
/*                  Подсистема "Межбанковские расчеты"                      */
/* Генерация платежей по сообщениям УФЭБС ED111                             */
/*                                                                          */
/* Имя файла: ufgd111.mac                                                   */
/* Создан:    12.12.12                                       Chukina T.     */
/* Изменения:                                                               */
/*           29.08.2013 TAM R-238704-2                                      */
/*           23.09.2013 TAM I-00427706-2                                    */
/*           22.12.15 Gurin S. HotFix 2031.19.25 (Life_1 1.3)_11            */
/****************************************************************************/

import "ufgendoc.mac", PTInter, likepy, oralib;

// проверка на то, субъект с кодом БИК является филиалом ЦАБС в режиме online
private macro IsDeptCabsOnline(BankID : integer):bool
  var Query: string = " SELECT dp.t_Code "+
                      "   FROM ddp_dep_dbt dp "+
                      "  WHERE dp.t_PartyID = :BankID "+
                      "    AND dp.t_AccessMode = 1 " /*DEPARTMENT_ACCESS_ONLINE*/,
      params: TArray = makeArray( SQLParam( "BankID", BankID ) ),
      rs : RsdRecordset = execSQLselect( Query, params, true );

  return rs.MoveNext();
end;

private macro GetBICofCorschemDepartment(CorsNumber : integer, CorsFIID : integer): string
  var BIC = "";

  var rs : RsdRecordset = execSQLselect
                          ( "select dp.t_PartyID " +
                            "  from ddp_dep_dbt dp, dcorschem_dbt cs " +
                            " where cs.t_Number  = :Num " +
                            "   and cs.t_FIID    = :FIID " +
                            "   and cs.t_FI_Kind = :FI_Kind " +
                            "   and dp.t_Code    = cs.t_Department ",
                            makeArray( SQLParam("Num",  CorsNumber),
                                       SQLParam("FIID",    CorsFIID),
                                       SQLParam("FI_Kind", FIKIND_CURRENCY)
                                     )
                          );
  if(rs and rs.moveNext())
    var PartyID : integer = rs.value("t_PartyID");
    BIC = ПолучитьКодСубъекта (PartyID, PTCK_BIC);
  end;

  return BIC;
end;

macro GenDocByVers (addrMes, ver_st : integer) 
  debugbreak;
  record wlmes(wlmes);
  SetBuff( wlmes, addrMes );

  PrintLog( 2, "Генерация платежа по сообщению ED111" );

  var xml:object = ActiveX( "MSXML.DOMDocument" );
  var fieldname = "", fieldvalue = "";

  if( not СчитатьПоле( fieldname, fieldvalue ) or (fieldname != XMLField) )
    std.msg("Не найдено поле '"+XMLField+"' в сообщении ED111");
    return FALSE;
  end;

  if( not xml.loadXML(fieldvalue) )
     println( string( "Неверный формат сообщения по форме ED111" ) );
     return FALSE;
  end;

  var PayerBankCode = ReadAttribute(xml, "BIC","MemoOrderPayer"),
      PayerBankID = ПолучитьКодСубъекта (PayerBankCode, PTCK_BIC),
      ReceiverBankCode = ReadAttribute(xml, "BIC","MemoOrderPayee"),
      ReceiverBankID = ПолучитьКодСубъекта (ReceiverBankCode, PTCK_BIC),
      PayerAccount = ReadAttribute(xml, "Acc","MemoOrderPayer"),
      ReceiverAccount = ReadAttribute(xml, "Acc","MemoOrderPayee"),
      ПризнакДебетаКредита = PRT_Credit,
      ПризнакТранзита = 1,
      CorrAccount = "",
      ДопНазначение = "";

  // Определение сторон платежа  
  if( IsDeptCabsOnline(PayerBankID) )
  // Если субъект с кодом вида 3 равным "MemoOrderPayer\BIC" 
  // является филиалом ЦАБС в режиме online
    ПризнакДебетаКредита = PRT_Debet;
    ПризнакТранзита = 0;
  elif( IsDeptCabsOnline(ReceiverBankID) )
  // Если субъект с кодом вида 3 равным "MemoOrderPayee\BIC" 
  // является филиалом ЦАБС в режиме online
    ПризнакДебетаКредита = PRT_Credit;
    ПризнакТранзита = 0;
  else
    var CorsNumber = -1/*ALLCORSCHEMNUMBER*/, CorsFIID = NATCUR;
    if( ОпределитьСхемуРасчетовПоКорсчету( CorsNumber, ReceiverBankID, PayerAccount, CorsFIID, false ) )
      ПризнакДебетаКредита = PRT_Debet;
      ПризнакТранзита = 0;
      ДопНазначение = " //плательщик: БИК "+PayerBankCode+", счет "+PayerAccount+"//";
      CorrAccount   = PayerAccount;
      PayerBankCode = GetBICofCorschemDepartment(CorsNumber, CorsFIID);
      PayerAccount  = "";
    elif( ОпределитьСхемуРасчетовПоКорсчету( CorsNumber, PayerBankID, ReceiverAccount, CorsFIID, false ) )
      ПризнакДебетаКредита = PRT_Credit;
      ПризнакТранзита = 0;
      ДопНазначение = " //получатель: БИК "+ReceiverBankCode+", счет "+ReceiverAccount+"//";
      CorrAccount   = ReceiverAccount;
      ReceiverBankCode = GetBICofCorschemDepartment(CorsNumber, CorsFIID);
      ReceiverAccount  = "";
    end;
  end;

  // Вызвать функцию подбора входящей корсхемы 
  var BankID : integer = IfThenElse(ПризнакДебетаКредита == PRT_Debet, ReceiverBankID, PayerBankID),
      DKFlag : String  = IfThenElse(ПризнакДебетаКредита == PRT_Debet, "Д", "К");
  var Corschem : integer = ПолучитьКорсхемуПоУмолчанию
                           ( BankID, 0, 1, DKFlag, -1, -1, 0, 
                             -1, CorrAccount, NULL, false, wlmes.TpSchemID, ""
                           );
  if( Corschem == -1/*ALLCORSCHEMNUMBER*/ )
    std.msg( "Не определена схема расчетов для респондента в рублях" );
    return FALSE;
  end;  

  // Заполнение полей платежа
  ClearRecord( wlpmpaym );
  ClearRecord( wlpmpropdeb );
  ClearRecord( wlpmpropcred );
  ClearRecord( wlpmrmprop );

  wlpmpaym.DocKind = wlpmpaym.PrimDocKind = WL_INDOC;
  wlpmrmprop.Number = ReadAttribute(xml, "AccDocNo","InitialAccDoc");
  wlpmrmprop.Reference = wlmes.Trn;
  wlpmrmprop.Date = ToDate_( ReadAttribute(xml, "AccDocDate","InitialAccDoc") ); //TAM 29.08.2013 R-238704-2

  if( СчитатьПоле( fieldname, fieldvalue ) and 
      (fieldname == NodePacketDate) AND (fieldvalue != "") )
    wlpmpaym.ValueDate = ToDate_(fieldvalue); // TAM 29.008.2013 R-238704-2
  else
    wlpmpaym.ValueDate = wlmes.OutsideAbonentDate;
  end;

  if(ver_st >= 2016)
    wlpmrmprop.PaymentKind = PM_GetDefaultPaymentKind(WL_INDOC);
  else
    var PaytKind = int(ReadOptinalAttribute(xml,"PaytKind"));
     if( (PaytKind >= 0) and (PaytKind <= 5) )
       wlpmrmprop.PaymentKind = PaytKindToPaymentKind(PaytKind, "ED111");
     else
       std.msg( "|Недопустимое значение атрибута 'PaytKind'" );
       return FALSE;
     end;
  end;

  wlpmpaym.BaseFIID = NATCUR;
  
  wlpmpaym.BaseAmount = moneyL( ReadAttribute(xml, "Sum") )/100;
  //TAM 29.08.2013 R-238704-2
  wlpmpaym.Amount     = wlpmpaym.BaseAmount; 
  wlpmpaym.PayAmount  = wlpmpaym.BaseAmount;
    
  wlpmrmprop.PayerName = ReadNodeText(xml, "MemoOrderPayer/AccName", false);
  wlpmpaym.PayerAccount = PayerAccount;

  //InitPMPROP( @wlpmpropdeb ); //TAM  23.09.2013 I-00427706-2
  wlpmpropdeb.CorrID = -1;
  wlpmpropdeb.OurCorrID = -1;
  wlpmpropdeb.Corschem = -1;
  wlpmpropdeb.DebetCredit = 0;
  //InitPMPROP( wlpmpropcred );
  wlpmpropcred.CorrID    = -1;
  wlpmpropcred.OurCorrID = -1;
  wlpmpropcred.Corschem  = -1;
  wlpmpropcred.DebetCredit = 1;
  
  wlpmpropdeb.CodeKind = PTCK_BIC;
  wlpmpropdeb.BankCode = PayerBankCode;
  wlpmpropdeb.IsSender = IfThenElse(ПризнакДебетаКредита == PRT_Debet, "", "X");
  if( (ПризнакДебетаКредита == PRT_Debet) and (ПризнакТранзита == 0) )
    wlpmpropdeb.Group  = PAYMENTS_GROUP_INTERNAL;
  else
    wlpmpropdeb.Group  = PAYMENTS_GROUP_EXTERNAL;
  end;
  if(ПризнакДебетаКредита == PRT_Credit)
    wlpmpropdeb.TransferDate = wlpmpaym.ValueDate;
  end;
  wlpmrmprop.PayerCorrAccNostro = CorrAccount;

  wlpmpropcred.CodeKind = PTCK_BIC;
  wlpmpropcred.BankCode = ReceiverBankCode;
  wlpmpropcred.IsSender = IfThenElse(ПризнакДебетаКредита == PRT_Credit, "", "X");
  if( (ПризнакДебетаКредита == PRT_Credit) and (ПризнакТранзита == 0) )
    wlpmpropcred.Group  = PAYMENTS_GROUP_INTERNAL;
  else
    wlpmpropcred.Group  = PAYMENTS_GROUP_EXTERNAL;
  end;
  if(ПризнакДебетаКредита == PRT_Debet)
    wlpmpropcred.TransferDate = wlpmpaym.ValueDate;
  end;
  wlpmrmprop.ReceiverCorrAccNostro = CorrAccount;

  wlpmpaym.ReceiverAccount = ReceiverAccount;
  wlpmrmprop.ReceiverName = ReadNodeText(xml, "MemoOrderPayee/AccName", false);
  wlpmrmprop.ShifrOper = "09";

  var RefDocInfo : string = ReadNodeText(xml, "RefDocInfo", false) + ДопНазначение;
  wlpmrmprop.Ground = substr(RefDocInfo, 1, 600);
  if( strlen(RefDocInfo) > 600 )
    wlpmrmprop.PartyInfo = substr(RefDocInfo, 601);
  end;

  wlpmrmprop.Priority = 6;

  // записать входящую корсхему во входящее свойство платежа
  if( (wlpmpropdeb.Group == PAYMENTS_GROUP_EXTERNAL) and (wlpmpropdeb.IsSender == "X") )
    wlpmpropdeb.Corschem    = Corschem;
    wlpmpropdeb.CorrPosType = PM_CORRPOS_TYPE_USER;
  elif( (wlpmpropcred.Group == PAYMENTS_GROUP_EXTERNAL) and (wlpmpropcred.IsSender == "X") )
    wlpmpropcred.Corschem    = Corschem;
    wlpmpropcred.CorrPosType = PM_CORRPOS_TYPE_USER;
  end;  
  
  // Вставка платежа
  ПользовательскаяДоработкаПлатежа( wlmes, wlpmpaym, wlpmpropdeb, wlpmpropcred, wlpmrmprop );
  if( not ВставитьПлатеж( wlpmpaym, wlpmpropdeb, wlpmpropcred, wlpmrmprop, ПризнакДебетаКредита ) )
    std.msg( "Ошибка при вставке платежа" );
    return FALSE;
  end;

  return TRUE;

  OnError(er) /* Обработка ошибок времени выполонения */
    std.msg(String(er.Message, "|Модуль: ", er.Module, " Строка: ", er.Line));
    return FALSE;
end;