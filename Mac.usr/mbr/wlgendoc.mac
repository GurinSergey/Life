/****************************************************************************/
/*                   R-Style SoftWare Lab, RS-Bank 5.1                      */
/****************************************************************************/
/*                  Подсистема "Межбанковские расчеты"                      */
/*         Общие вспомогательные функции для генерации уч. объектов         */
/*                                                                          */
/*  Имя файла: wlgendoc.mac                                                 */
/*  Создан:  17.09.01                                        Бабин А.П.     */
/****************************************************************************/
//Lavrenov: 29.05.2012 I-00194684-1 Перенес из дистрибутивного макроса функцию НайтиФормуСообщенияПоРеференсу(Trn, Transport)
//LVV 12.03.15 I-00555944 устранил удаление КПП в наименовании фирмы, если "КПП" часть наименования.

import pmpurp,"likepy.mac","bicimp.mac", wlglobal, WldInter, "wldoc.mac";

const KPPMark = "КПП";
/*const TYPE_CODE_UFBS_ED203    = 42,
      TYPE_CODE_SBRF_KVITCODE = 50,
      TYPE_CODE_UFBS_KVITCODE = 51,
      TYPE_CODE_UFBS_ED206    = 60;*/

import fg_Life_parm;
private var fgBank = fg_life_subject({OurBank});

private  macro СчетРасчетный(acc)
     var cmd = RSDCommand("select 1 from daccount_dbt where t_chapter = 1 and t_account = ? and t_type_account like '%Ч%'");
     cmd.AddParam("acc", RSDBP_IN,acc);
     var rs = RSDRecordset(cmd);
     return rs.movenext;
  end;

private macro GetDepNameFromAcc(acc)
var   SQL = " SELECT dp.t_name ";
SQL = SQL + "\n  FROM ddp_dep_dbt dp ";
SQL = SQL + "\n WHERE dp.t_code = (SELECT ac.t_branch ";
SQL = SQL + "\n                      FROM daccount_dbt ac ";
SQL = SQL + "\n                     WHERE ac.t_chapter = 1 and ac.t_account = ? ) "; //SDA 11/03/2012 добавил в запрос чаптер =1
var cmd = RSDCommand(SQL);
    cmd.AddParam("acc", RSDBP_IN,acc);
    var rs = RSDRecordset(cmd);
    if (rs.movenext())
     return (rs.value("t_name"));
    end;
 return "";
onerror(x);
 return "";
end;
/* Пользовательская доработка платежей. Вызывается перед вставкой 
   ответных платежей при их формировании по сообщениям. При заполнении 
   deb, kred проверять их с помрощью ValType, т.к. м/б передан 0 */
macro ПользовательскаяДоработкаПлатежа( mes, pm, deb, kred, rm )
  /* Пример заполнения номера пачки платежа по номеру рейса обработки */  
  FILE sess(wlsess) key 0;

     // zip_z. I-093320 2010-12-17 | begin ----------------------------------------------------------------------
    var usrNumberPack,usrNumberPackRKC,depnumber,errCode;
    depnumber="";

  if (pm.BaseFIID == 0)

     /* */
     if ((fgBank.is_PRBB) ) 

        sess.SessionID = mes.SessionID;
        if( getEQ( sess ) )
          If (sess.NumberRace!=0)
            if (sess.NumberRace!=0)
               pm.NumberPack = 880 + sess.NumberRace;
               usrNumberPack = pm.NumberPack;
            end;
          end;
        end; 

     elif ((fgBank.is_GO))  

        GetRegistryValue("PRBB\\МЕЖБАНКОВСКИЕ РАСЧЕТЫ\\НОМЕР_ПАЧКИ_ДЛЯ_ОТВЕТНЫХ_РКЦ", v_integer, usrNumberPack, errCode); 

     else

        if (((valtype(kred)==v_integer) and (pm.ReceiverBankID != {OurBank}))
              or ((valtype(kred) != v_integer) and (kred.bankcode != {MFO_Bank})))  /*транзитный */
          GetRegistryValue("PRBB\\МЕЖБАНКОВСКИЕ РАСЧЕТЫ\\НОМЕР_ПАЧКИ_ДЛЯ_ТРАНЗИТНЫХ", v_integer, usrNumberPack, errCode); 
        elif (СчетРасчетный(pm.receiveraccount))
          depnumber=GetDepNameFromAcc(pm.receiveraccount);
          GetRegistryValue("PRBB\\МЕЖБАНКОВСКИЕ РАСЧЕТЫ\\НОМЕР_ПАЧКИ_ДЛЯ_ОТВ_КЛИЕНТСКИХ", v_integer, usrNumberPack, errCode); 
        else
          GetRegistryValue("PRBB\\МЕЖБАНКОВСКИЕ РАСЧЕТЫ\\НОМЕР_ПАЧКИ_ДЛЯ_ОТВ_БАНКОВСКИХ", v_integer, usrNumberPack, errCode); 
        end; 

     end;


     /*SDA 23/03/2012*/   
     if (((valtype(kred)==v_integer) and (pm.ReceiverBankID == {OurBank}))
            or ((valtype(kred) != v_integer) and (kred.bankcode == {MFO_Bank})))  /* ответный */
        rm.RECEIVERBANKNAME      = {Name_Bank};
        rm.RECEIVERCORRACCNOSTRO = {CORAC_Bank};
        pm.Futurereceiveraccount = pm.receiveraccount;
     end;

     // EVG 27/1/2016 Пропускаем пачку платежей на клиентов ЭВ Воронеж
     var vVorenezPack = 0, err;
     GetRegistryValue( "PRBB\\МЕЖБАНКОВСКИЕ РАСЧЕТЫ\\НОМЕР_ПАЧКИ_ДЛЯ_ЭВ_ВОРОНЕЖ", v_integer, vVorenezPack, err );

     if ( (fgBank.is_EXV) and (depnumber!="")  /*SDA только для ЭВ*/
          and ( pm.NumberPack != vVorenezPack ) ) // EVG 27/1/2016

        pm.NumberPack = string("8",depnumber);

     elif( not errCode
           and ( pm.NumberPack != vVorenezPack ) ) // EVG 27/1/2016
        pm.NumberPack = usrNumberPack;
     end;

  end;


     // zip_z. I-093320 2010-12-17 | end -----------------------------------------------------------------------

  rm.PayDate = pm.ValueDate;
  // Проверить, не является ли платеж целевым финансированием
  if(ValType(kred) != V_Integer)
     if( ( pm.IsPurpose == "" ) and ( IsPurposefulPayment_Buff( pm, kred, rm ) ) )
        pm.IsPurpose = "X";
     end;
  end;
end;

/* Инициализация свойства pmprop.dbt перед заполнением ответных платежей */
macro InitPMPROP( pmprop )
  ClearRecord(pmprop);
  pmprop.CorrID    = -1;
  pmprop.OurCorrID = -1;
  pmprop.Corschem  = -1;
  SetParm( 0, pmprop );
end;

/* поиск клиента по счету*/
private macro GetExtPaymAccClient( Account : string ) : integer
  file acc ("account.dbt" ) key 0;
  var ClientID = PTID_UNKNOWNPARTY;
  ClearRecord(acc);

  acc.Chapter = 1;
  acc.Account = Account;
  if( getEQ( acc ) )
    ClientID = acc.Client;
  end;

  return ClientID;
end;

/* Инициализация свойства PAYER(id) перед заполнением ответных платежей, см.SCR№89542 */
macro InitPAYER( pmpaym, group)
  var E0002 = 2, error;
 
  if(group == E0002)
    pmpaym.Payer = GetExtPaymAccClient( pmpaym.Payeraccount );
    if(pmpaym.Payer != PTID_UNKNOWNPARTY)
      pmpaym.PayerCodeKind = PTCK_CONTR;
      pmpaym.PayerCode = ПолучитьКодСубъекта(pmpaym.Payer, PTCK_CONTR, error);
    end;
  else
    pmpaym.Payer = PTID_UNKNOWNPARTY;
  end;

  SetParm( 0, pmpaym );
end;

/* Инициализация свойства Receiver(id) перед заполнением ответных платежей, см.SCR№92258 */
macro InitReceiver( pmpaym, group)
  var E0001 = 1, error;
 
  if(group == E0001)
    pmpaym.Receiver = GetExtPaymAccClient( pmpaym.receiveraccount );
    if(pmpaym.Receiver != PTID_UNKNOWNPARTY)
      pmpaym.ReceiverCodeKind = PTCK_CONTR;
      pmpaym.ReceiverCode = ПолучитьКодСубъекта(pmpaym.Receiver, PTCK_CONTR, error);
    end;
  else
    pmpaym.Receiver = PTID_UNKNOWNPARTY;
  end;

  SetParm( 0, pmpaym );
end;

private macro RemoveStartingSymbols( Source:string, Symbols:string ):string
  while( StrBrk( Source, Symbols ) == 1 )
    Source = SubStr( Source, 2 );
  end;
  return Source;
end;


// Удалить КПП из имени
macro RemoveKPPFromName( Name:string ):string
  var pos   :integer = Index( Name, KPPMark ),
      result:string  = "";
  if( pos > 0 )
  //LVV 12.03.15 I-00555944 Добавил в следующей строчке проверку, чтобы устранить удаление "КПП" в наименовании фирмы.
  //После КПП должны идти обязательно цифры, чтобы происходило удаление.
    //Gurin S. 30.06.2015 I-00573820-1
    //if (StrBrk(trim(SubStr(Name, pos + StrLen(KPPMark))), "1234567890") == 1)
    if ((StrBrk(trim(SubStr(Name, pos + StrLen(KPPMark))), "1234567890") == 1) and (StrBrk(SubStr(Name, pos + StrLen(KPPMark)), "1234567890") != 1))
       result = SubStr( Name, 1, pos-1 );
       Name = SubStr( Name, pos + StrLen( KPPMark ) );
       Name = RemoveStartingSymbols( Name, " " );
       Name = RemoveStartingSymbols( Name, "1234567890" );
       result = result + Name;
    else
       result = Name;
    end;
  else
    result = Name;
  end;
  return result;
end;

/* Составить INN/КПП */
macro ConstructINN( INN, KPP )
    if ( KPP == "" )
       return TrimRight(INN);
    end;
    return ( TrimRight(INN) + "/" + KPP );
end;

/* Извлечь КПП из имени */
macro ElicitKPPFromName( Name )
   var result, KppPos = Index(Name, KPPMark), SetSpaceNumber, current;
   var size = strlen( Name );
   if ( KppPos )
      /*                    Формат имени с КПП               */
      /* [string1]{" "}"КПП "{" "}stringКПП" "{" "}[string3] */
      /*      После работы функции оставляем:  stringКПП     */
      SetSpaceNumber = 0;
      current = KppPos;
      while( (current<=size) AND ((SetSpaceNumber<1) OR (substr(Name,current,1)==" ")) )
         if ( (substr(Name,current,1)==" ") AND (substr(Name,current-1,1)!=" ") )
            SetSpaceNumber = SetSpaceNumber + 1;
         end;
         current = current + 1;
      end;
      result = "";
      while( (current<=size) AND (substr(Name,current,1)!=" ") )
         result = result + substr(Name,current,1);
         current = current + 1;
      end;
   else
      result = "";
   end;
   return result;
end;

macro ВставитьВходящийУзелМаршрута( PartyID, CodeKind, BankCode, InAccount, OutAccount, Name, IsInstructionAbonent )
  ClearRecord(Route);
  Route.PartyID     = PartyID;
  Route.CodeKind    = CodeKind;
  Route.CodeValue   = BankCode;
  Route.InAccount   = InAccount;
  Route.OutAccount   = OutAccount;
  Route.Name        = Name;
  if ( valtype(IsInstructionAbonent)==V_UNDEF )
      IsInstructionAbonent = false;
  end;
  return ВставитьУзелМаршрута( RTDIR_IN, Route, IsInstructionAbonent );  
end;

macro ВставитьИсходящийУзелМаршрута( PartyID, CodeKind, BankCode, InAccount, OutAccount, Name, IsInstructionAbonent )
  ClearRecord(Route);
  Route.PartyID     = PartyID;
  Route.CodeKind    = CodeKind;
  Route.CodeValue   = BankCode;
  Route.InAccount   = InAccount;
  Route.OutAccount  = OutAccount;
  Route.Name        = Name;
  if ( valtype(IsInstructionAbonent)==V_UNDEF )
      IsInstructionAbonent = false;
  end;
  return ВставитьУзелМаршрута( RTDIR_OUT, Route, IsInstructionAbonent );
end;

/* Отбрасывает ведущие пробелы */
macro TrimZero( str )
  var tmpstr;
  
  tmpstr = substr( str, 1, 1 );
  while( tmpstr == "0" )
    str = substr( str, 2 );
    tmpstr = substr( str, 1, 1 );
  end;
  return str;
end;

/* Определение входящей схемы расчетов */
macro ОпределитьСхемуРасчетовПоКорсчету( Cors, CorrID, CorAccount, FIID, PrintMes )
  //var oldkey, stat, FIID;   HF_81 24.06.2013 TAM
  /*oldkey = KeyNum( f_wlcors, 4 ); 
  f_wlcors.CorrID     = CorrID;
  f_wlcors.CorAccount = CorAccount;
  if( not GetEQ( f_wlcors )  )
    if(PrintMes)
        std.msg( String("Не определена схема расчетов для респондента по корсчету: ", CorAccount) );
    end;
    stat = false;
  else
    SetParm( 0, f_wlcors.Number );
    if( GetParm( 3, FIID ) )
      SetParm( 3, f_wlcors.FIID );
    end;
    stat = true;
  end;  */
  //HF_81 24.06.2013 TAM 
  /*SetParm( 0, 1 ); //Seleznev т.к. генерация платежей по сообщениям возможна
  SetParm( 3, 0 ); //только по сообщениям УФЭБС корсхема всегда РКЦ
  stat = true; 
  return stat; */
  var stat = false;
  
  if ( valtype(PrintMes)==V_UNDEF )
      PrintMes = true;
  end;

  if ( valtype(FIID)==V_UNDEF )
      FIID = 0;
  end;
      
  var rset:object = NULL;
  var query:string;

  query = " SELECT t_Number"
           " FROM dcorschem_dbt cors "
           " WHERE cors.t_CorrID = ? AND "
           "       cors.t_CorAccount = ? AND "
           "       cors.t_FIID = ? AND "
           "       cors.t_State = 0 ";

  var params:TArray = makeArray( SQLParam( "", CorrID ),
                                 SQLParam( "", CorAccount ),
                                 SQLParam( "", FIID )
                                ); 

  rset = execSQLselect( query, params, TRUE );                               

  if( rset and rset.moveNext() )
     SetParm(0, rset.value(0));
     stat = true;
  else
    if(PrintMes)
        std.msg( String("Не определена схема расчетов для респондента по корсчету: ", CorAccount) );
    end;
    stat = false;
  end;

  return stat;
end;


macro МожетЛиВыпискаБытьКлиентской(RlsFormID) 
    FILE rls(wlmesrls) key 0 ;
    FILE wlobjknd( wlobjknd ) key 0;

    rls.RlsFormID = wlmes.RlsFormID;
    if(not GetEQ(rls))
      return FALSE;
    end;
    ClearRecord( wlobjknd );
    wlobjknd.ObjID    = rls.FormID;
    wlobjknd.ObjKind  = OBJTYPE_FORM;
    wlobjknd.Type     = MESKIND_HEAD;
    wlobjknd.Number   = 5/*WLD_SUBKIND_HEAD_CLN*/;
    if( GetEQ(wlobjknd) )
       return true;
    else
       return false;
    end;
end;

macro ПолучитьКодОтветаНаСообщение(answerCode, AlgNum)
  FILE wlcode(wlcodes) key 1;
  ClearRecord(wlcode);
  wlcode.AlgNum = AlgNum;
  wlcode.Code   = answerCode;
  if(getEQ(wlcode))
    return wlcode.Description;
  end;
  return "";
end;

macro НайтиФормуСообщенияПоРеференсу(Trn, Transport) :integer

  var result = 0;
  var rs:object;
  var select:string;
  var params:TArray;

  select = " SELECT dwlmesrls_dbt.t_formid"
           " FROM"
           "   dwlmes_dbt,"
           "   dwlmesrls_dbt,"
           "   dwlmesfrm_dbt" 
           " WHERE"
           "   dwlmes_dbt.t_trn = ? AND"
           "   dwlmesrls_dbt.t_rlsformid = dwlmes_dbt.t_rlsformid AND"
           "   dwlmesfrm_dbt.t_formid = dwlmesrls_dbt.t_formid AND" 
           "   dwlmesfrm_dbt.t_tpid = ?" 
           " ORDER BY dwlmes_dbt.t_MesID DESC"
           ;
  
  params = makeArray(SQLParam("",     Trn),
                     SQLParam("", Transport)
                    );
  
  rs = execSQLselect( select, params, FALSE );
  if ( rs and rs.MoveNext() )
     result = rs.value(0);
  end;
        
  return result;
end;
