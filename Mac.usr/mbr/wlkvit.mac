/****************************************************************************/
/*                   R-Style SoftWare Lab, RS-Bank 5.1                      */
/****************************************************************************/
/*                  Подсистема "Межбанковские расчеты"                      */
/*  Функции квитовки                                                        */
/*                                                                          */
/*  Имя файла: wlkvit.mac                                                   */
/*  Создан:  02.03.04                                         Бабин А.П.    */
/****************************************************************************/

import OprInter, WldInter, RMInter, "cbsttls.mac", "likepy.mac", "oralib.mac", "globals.mac", PaymInter, "pm_common.mac";

var KVITDATA_CONFID = TArray;

macro ФиктивнаяКвитовка():bool

  if( KVITDATA_CONFID.size > 0)   
    if( KVITDATA_CONFID(0) <= 0 )
       if( KVITDATA_CONFID.size > 1 )
          MsgBox("Фиктивная связь должна быть только одна");
          return false;
       else
          return true;
       end;
    end;
  end;
  
  return false;
end;

macro GetConfTransferDate():date
  FILE   f_conf( wlconf ) key 0;
  clearRecord(f_conf);

  if(KVITDATA_CONFID.size!=0)
    f_conf.ConfID = KVITDATA_CONFID(0);
    if( (f_conf.ConfID > 0) and (getEQ(f_conf)) )
      return f_conf.TransferDate; 
    end;
  end;

  return {curdate}; // для фиктивной квитовки
end;

/**
 * Получить дату квитовки на шеге "Квитовка"
 */
private var PrivateKvitDate:date = null;

macro WldGetKvitDate( Payment:RsbPayment, UserBreak:@bool ):date
  array Text, Buttons;
  UserBreak = false;
  if( PrivateKvitDate == null )
    var Department:integer = Payment.Department;
    var dt:date = GetConfTransferDate();
    var ODBalance : date = PM_GetOperDay_Balance(Department);
    // Квитовка по подтверждению
    if( KVITDATA_CONFID.size and ( KVITDATA_CONFID[0] > 0 ) )
      var dt2:date = execStoredFunc( "WLD_KVIT.GetKvitDate", 
                                      V_DATE, 
                                      makeArray( SQLParam( "TransferDate", dt         ),
                                                 SQLParam( "Department",   Department ) ) );
      // Есть такой опердень, эту дату и используем
      if( ( dt2 != date( 0, 0, 0 ) ) and ( dt == dt2 ) )
        PrivateKvitDate = dt;
      // Опердня нет, спрашивать ничего нельзя
      // Используем первый открытый в будущем или текущую дату
      elif( not GetDialogFlag() )
        PrivateKvitDate = PM_GetOperDay_Balance(Department, dt);
      // Опердня нет, спрашиваем, можно ли квитовать текущей датой
      else
        Text(0) = string( "Не найден операционный день ДПП подтверждения ", dt:f, 
                          " или в этом дне невозможна проводка. Квитовка возможна датой ",
                          ODBalance:f, "." );
        Text(1) = "Выполнить квитовку?";
        Buttons( 0 ) = "Да";
        Buttons( 1 ) = "Отменить";
        if( ConfWin( Text, Buttons ) == 0 )
          PrivateKvitDate = ODBalance;
        else
          PrivateKvitDate = date( 0, 0, 0 );
          UserBreak = true;
        end;
      end;
    // Фиктивная квитовка
    else
      var dt_isbalance = "";
      existsOperDay(dt, Department, @dt_isbalance);
      if( GetDialogFlag() and ( (dt != Payment.OutTransferDate) 
                                or 
                                (dt_isbalance != "X") 
                              ) 
        )
        if(dt_isbalance == "X")
          Text(0) = "ДПП платежа не равна дате текущего операционного дня.";
          Text(1) = "Выполнить квитовку текущей датой?";
        else
          Text(0) = "Вы пытаетесь выполнить квитовку датой, которая не совпадает " +
                    "с ДПП платежа и в которой невозможны проводки. Ближайшая " +
                    "допустимая дата квитовки " + ODBalance + ".";
          Text(1) = "Выполнить квитовку этой датой?";
        end;
        Buttons( 0 ) = "Да";
        Buttons( 1 ) = "Отменить";
        if( ConfWin( Text, Buttons ) == 0 )
          PrivateKvitDate = ODBalance;
        else
          PrivateKvitDate = date( 0, 0, 0 );
          UserBreak = true;
        end;
      else
        PrivateKvitDate = {curdate};
      end;
    end;
  end;
  return PrivateKvitDate;
end;

macro ПолучитьСуммуКвитовки( PaymentObj:RsbPayment, kvitSum:moneyl, Cancel:string, Description:string ):bool
  FILE   f_conf( wlconf ) key 0;
  var i, j, err = 0;
  var ArrConfInfo = TArray, ConfInfo;
  var select;
  var rs:RsdRecordset;

  kvitSum = Moneyl(0);

  clearRecord(f_conf);
  i = 0;
  while ( (not err) AND (i<KVITDATA_CONFID.size) )
    f_conf.ConfID = KVITDATA_CONFID(i);
    if ( f_conf.ConfID>0 )
       if ( not getEQ(f_conf) )
          MsgBox(string("Не найдено подтверждение по ID = ",KVITDATA_CONFID(i)));
          return false;
       end;
    else
       if ( KVITDATA_CONFID.size>1 )
          MsgBox("Фиктивная связь должна быть только одна");
          return false;
       end;
       select = " select kvtlnk.t_Type"+
                  " from dwlkvtlnk_tmp kvtlnk"+
                 " where kvtlnk.t_ConfID = 0" ;
       rs = execSQLselect( select, NULL, false );
       if(rs.moveNext())
         Cancel = rs.value("t_Type");
       else
         return false;
       end;

       setparm( 2, Cancel );
       setparm( 3, f_conf.Description);

       return true;
    end;

    j=0;
    ConfInfo = string(f_conf.RelatedRef,"-", f_conf.DateValue,"-", f_conf.Sum,"-", f_conf.Cancel);
    while( (j<ArrConfInfo.size) AND (ConfInfo!=ArrConfInfo(j)) )
       j = j + 1;
    end;
    /* Совершенно одинаковые подтверждения влияют на сумму только один раз */
    if ( j==ArrConfInfo.size )
       ArrConfInfo(j) = ConfInfo;
    end;

    if ( i==0 )
       Cancel = f_conf.Cancel;
    else 
       if ( Cancel!=f_conf.Cancel )
         err = 1;
       end;
    end;

    i = i+1;
  end;

  if ( err )
     MsgBox( "Нельзя квитовать подтвердение отказом совместно с обычным" );
     return false;
  end;

  setparm( 1, kvitSum );
  setparm( 2, Cancel );
  setparm( 3, f_conf.Description);
  return true;
end;

macro IsMoveDocSpecialScrol()
  var Error, KvitRejectMethod = 0;
  GetRegistryValue( "АРМ ПОЗИЦИОНЕРА\\ПЕРЕМЕННЫЕ\\KVITREJECTMETHOD", V_INTEGER, KvitRejectMethod, Error );
  return ( Error == 0 ) and ( KvitRejectMethod == 1 );
end;


private const Ch_NotGoIndex = -1;
private const Ch_RetSend = 0;
private const Ch_RePos   = 1;
private const Ch_GoIndex = 2;
private const Ch_Close = 3;

//-----------------------------------------------------------------------------
// Счет плательщика клиентский?
//-----------------------------------------------------------------------------
private macro PayerAccountIsClient( Payment:RsbPayment ):bool
  if( ( Payment.PayerGroup != PAYMENTS_GROUP_EXTERNAL ) and MFR_IsOurBank( Payment.Payer ) )
    return false;
  elif( PM_FindBalanceInReg_117( "PS\\REQOPENACC\\Счета клиентов", Payment.PayerAccount, 1 ) )
    return true;
  else
    return false;
  end;
end;


private macro AskFateRefusalDocument( PaymentObj:RsbPayment, Corschem )
  
  Array Text;
  Array Buttons;
  var OldDialogFlag;

  var IsGoIndex =     ( Corschem.IsNostro == "X" )        // Если корсхема НОСТРО
                  and ( PaymentObj.PayerFIID == 0 )       // И платеж рублевый
                  and ( PaymentObj.ReceiverFIID == 0 )
                  and PaymentObj.IsCredit()               // И платеж кредитовый
                  and PayerAccountIsClient( PaymentObj );  // И платеж клиентский

  var KeyValue = "AskFateRefusalDocument";
  var result;
  
  if(IsOprMultiExec())
    result = GetCachedVar(KeyValue);
  end;

  if( ValType( result ) == V_UNDEF )
    
    OldDialogFlag = SetDialogFlag(1);

    Text(0) = "Что делать с документом?";
    Buttons(Ch_RetSend) = "Вернуть отправителю";
    Buttons(Ch_RePos) = "Перепозиционировать";
    //Gurin S. 13.08.2015
    Buttons(Ch_GoIndex) = "Поместить в картотеку";
    Buttons(Ch_Close) = "Закрыть документ";
    
    if( IsGoIndex )       // Если корсхема НОСТРО
      Buttons(Ch_GoIndex) = "Поместить в картотеку";
    end;
    
    result = ConfWin( Text, Buttons, K_ESC );
    SetDialogFlag(OldDialogFlag);
    
    if(IsOprMultiExec())
      SetCachedVar(KeyValue, result);
    end;

  end;

  if ((result == Ch_GoIndex) or (result == Ch_Close))
    return result;
  elif((result == Ch_GoIndex) and not IsGoIndex)
    result = Ch_NotGoIndex;
  end;
  return result;
end;

macro GetCorschem(p_cor, Number, FIID)
  
  var cor:TbFile = TbFile("corschem.dbt", "bank.def");
  cor.rec.Number = Number;
  cor.rec.FIID = FIID;
  cor.rec.FI_Kind = 1;
  if( cor.GetEQ() )
    if( p_cor != null )
      copy(p_cor, cor);
    end;
    return true;
  end;

  return false;
end;

macro ExecRefusalDocument(PaymentObj:RsbPayment, p_Corschem, Description)

  debugbreak;
  RECORD Corschem(corschem);

  if( ValType( p_Corschem ) == V_UNDEF )
    ClearRecord( Corschem ); 
    if(not GetCorschem(Corschem, PaymentObj.OutCorschem, PaymentObj.BaseFIID))
      msgbox("Не найдена корсхема");
      return false;
    end;
  else
    copy( Corschem, p_Corschem );
  end;

  var ch = AskFateRefusalDocument( PaymentObj, Corschem );
  
  PaymentObj.PropStatus = PM_PROP_CORREJECTED; 

  if( ch == Ch_GoIndex )   // Поместить в картотеку
    if( УстановитьСтатусыПлатежа( OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_NOSTRO ) )
      MsgBox("Возникла ошибка при смене статусов операции платежа");
      return false;
    end;
  elif( ch == Ch_RetSend ) // Вернуть отправителю
    if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_RETURN ) )
      MsgBox("Возникла ошибка при смене статусов операции платежа");
      return false;
    end;
  elif( ch == Ch_RePos ) //Перепозиционировать
    if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_POS ) )
      MsgBox("Возникла ошибка при смене статусов операции платежа");
      return false;
    end;
    PaymentObj.PropStatus = PM_PROP_READY;
    PaymentObj.PaymStatus = PM_READY_TO_SEND;
  elif( ch == Ch_NotGoIndex )
    msgbox("Невозможно поместить в картотеку НОСТРО-счета");
    return false;
  elif( ch == Ch_Close)
     if( УстановитьСтатусыПлатежа( OPR_PAYM_OUT_KVIT, OPR_PM_ST_KVIT, OPR_PAYM_STATE, OPR_PM_ST_CLOSE ) )
        MsgBox("Возникла ошибка при смене статусов операции платежа");
        return false;
     end;

     PaymentObj.PropStatus = PM_PROP_CLOSED;
     PaymentObj.Paymstatus = PM_FINISHED;
  else
    if( IsOprMultiExec() )
      msgbox("Пользователь отказался от выполнения операции");
    end;
    return false;
  end;

  if( ((ch == Ch_GoIndex) or (ch == Ch_RetSend)) and (ValType( Description ) == V_STRING) and (Description != ""))
    // Заполнить примечание
    if( PaymentObj.Notes.AddNote( PM_NOTEKIND_DENIALGROUND, Description ) != 0 )
      msgbox( "Ошибка при вставке примечания платежа" );
      return false;
    end;
  end;

  return true;
end;
