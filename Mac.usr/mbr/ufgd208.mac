/****************************************************************************/
/*                   R-Style SoftWare Lab, RS-Bank 6.0                      */
/****************************************************************************/
/*                  Подсистема "Межбанковские расчеты"                      */
/* Генерация выписок по сообщениям УФЭБС ED208                              */
/*                                                                          */
/* Имя файла: ufgd208.mac                                                   */
/* Создан:    14.06.06                                           Чукина Т.А.*/
/* Изменен:   10.04.12 Chesnokov D.S. по заявке С-9530 проверка на группу   */
/****************************************************************************/
import "ufgendoc.mac", "diver.mac";

var ver_st = 2;

macro НайтиКодРежима(answercode: string) :string

  var result = "Неизвестный код режима: " + answercode;
  var rs:object;
  var select:string;
  var params:TArray;

  select = "select t_description from dwlcodes_dbt where t_algnum = 48 and t_code=:code";
  
  params = makeArray( SQLParam("code", answercode));
  rs = execSQLselect( select, params, FALSE );
  if ( rs and rs.MoveNext() )
     result = rs.value(0);
  end;
        
  return result;
end;

macro GenDoc( addrMes )

  if (not ВходитВГруппу({oper},198))
    msgBox("Вы не включены в группу \"198 - Генерация сообщений УФЭБС\"");
    return false;
  end;

  var xml:object = ActiveX( "MSXML.DOMDocument" );
  var Строка, Error;
  var MesID : integer = 0;
  var ResultCode, CtrlCode;
  var Code : integer = 0;
  var Descr : string = "";

  SetBuff( wlmes, addrMes );

  PrintLog( 2, "Генерация сообшения по ED208" );

  //ClearRecord( wlinfo );

  if( not СчитатьПоле( XMLField, Строка ) )
    return FALSE;
  end;

  if ( not xml.loadXML(Строка) )
    println( string( "Неверный формат сообщения по форме ED208" ) );
    return false;
  end;

  var RefTrn = EDNoDateAuthor();
  var rs:object;
  var select:string;
  var params:TArray;
  
  RefTRN.EDNo  = ReadOptinalAttribute(xml, "EDNo", "InitialED");
  if ( RefTRN.EDNo!="" )
    select = "select mes.t_MesID from dwlmes_dbt mes, dwltpshem_dbt tpshem " + 
                               " where mes.t_Direct=chr(0)"+
                               "   and mes.T_Department = :OperD"+
                               "   and mes.t_TRN=:RelatedRef"+
                               "   and tpshem.t_TpShemID=mes.t_TpSchemID"+
                               "   and tpshem.t_TpID=:TRANSP_UFBS";
    params = makeArray( SQLParam("OperD", {OperDprt}),
                        SQLParam("RelatedRef", wlmes.RelatedRef),
                        SQLParam("TRANSP_UFBS", TRANSP_UFBS));
    rs = execSQLselect( select, params, FALSE );

    if ( rs.MoveNext() )
      MesID = rs.value(0);
    end;                 
  end;

  CtrlCode = ReadOptinalAttribute(xml, "CtrlCode");
  ResultCode = ReadAttribute(xml, "ResultCode");
  if (CtrlCode != "")
    Code = int(CtrlCode)
  else
    Code = int(ResultCode);
  end;

  Descr = ReadNodeText(xml, "Annotation", false);
  if (Descr == "")
    if (CtrlCode != "")
      GetElementAndNoteLLVALUES(OBJTYPE_WLRESCODE_UFBS, CtrlCode, NULL, Descr);    
    else
      Descr = НайтиКодРежима(ResultCode);
    end;
  end;

  if (ResultCode == "3")
    if ( not ОшибкаЛогическогоКонтроляСообщения(MesID, Code, Descr) )
      println( string( "Не удалось поместить в отбракованные сообщение ID = ", MesID ) );
      return false;
    end;
  else
    if ( not ВставитьПодтверждениеОДоставке(MesID, NULL, NULL, Descr, true, Code) )
      println( string("Не удалось поместить в доставленные сообщение ID = ", MesID) ); 
      return false;
    end;
  end;
        
  return TRUE;

  OnError(er) /* Обработка ошибок времени выполнения */
    std.msg(String(er.Message, "|Модуль: ", er.Module, " Строка: ", er.Line));
    return FALSE;

end;
                       
