//-----------------------------------------------------------------------------
//          Автоматизированная банковская система RS-Bank               
//                 Copyright (c) R-Style Software Lab
//
// Подсистема   : Межбанковские расчеты
//
// Описание     : Экспорт сообщений ФНС в формате XML
//
// Программист  : Чукина Т.А.
//
// Создан       : 29.05.2014
//
//-----------------------------------------------------------------------------

import "wlexport.mac", "xmlmestools.mac", "wlmnstls.mac";

class (TFldExportHandler) TFldExportHandlerFnsXml
  InitTFldExportHandler();

  private var Name1 = "", Name2 = "", Name3 = "", Officer = "", Phone = "", 
              IDFile = "", DateMes = "";

  macro FillFieldsAtExport(ExportFileName : string, FormName : string)
debugbreak;
    IDFile = MakeIDFile(ExportFileName, FormName);
    if( not IDFile and not InList(FormName, "PB", "BUV") )
      RunError("Ошибка формирования идентификатора файла");
    end;

    if( not Name1 and not InList(FormName, "PB", "BUV") )
      PutPersData_Default(Name1, Name2, Name3, Officer, Phone);
      Name1 = substr( Name1, 1, 60 );

      if( not Phone or not Officer or not Name1)  
        //Gurin S. 11.08.2015 I-00579736-1
        msgbox("Не указаны телефон, должность, фамилия сотрудника, выгружающего сообщение");
        RunError("Не указаны телефон, должность, фамилия сотрудника, выгружающего сообщение");
      end;
    end;

    if(not DateMes)
      DateMes = string(date():f);
    end;
  end;

  private macro CorrectValue(Code : string, Value : string) : string
    if(Code == "ИдФайл")
      return IDFile;
    elif(Code == "ТелОтпр")
      return Phone;
    elif(Code == "ДолжнОтпр")
      return Officer;
    elif(Code == "ФамОтпр")
      return Name1;
    elif((Code == "ДатаСооб")) // and (trim(Value) == ""))
      return DateMes;
    end;

    return Value;
  end;

  private macro GetDateName(FieldName : string) : string
    if(FieldName == "ДатаОткрСч")
      return "Дата открытия счета";
    elif(FieldName == "ДатаЗаклДог")
      return "Дата заключения договора";
    elif(FieldName == "ДатаЗакрСч")
      return "Дата закрытия счета";
    elif(FieldName == "ДатаИзмСч")
      return "Дата изменения номера счета";
    end;

    return FieldName;
  end;

  private macro CheckValue(FieldName : string, FieldValue : string)

    if( InList(FieldName, "ДатаОткрСч", "ДатаЗаклДог", "ДатаЗакрСч", "ДатаИзмСч") )
      var dt : date = StrToDate(FieldValue);

      if(dt > wlmes.Date)
        //Gurin S. 11.08.2015 I-00579736-1
        msgbox( GetDateName(FieldName) + " не должна быть больше даты сообщения" );
        RunError( GetDateName(FieldName) + " не должна быть больше даты сообщения" );
      end;
    end;

  end;

  macro ProcessFld(FieldName : string, FieldValue : @string) : bool
    // Поля, в названии которых первый символ равен "_", в текстовый файл не выводятся (пропускаются)
    if( SubStr(FieldName, 1, 1) == "_" )
      return FALSE;
    end;
debugbreak;
    // Поля, заполняемые на этапе экспорта
    var CorrectedValue : string = CorrectValue(FieldName, FieldValue);
    if(CorrectedValue != FieldValue)
      if( ОбновитьПоле(CorrectedValue) == 0 )
        FieldValue = CorrectedValue;
      else
        RunError("Ошибка при обновлении значения поля " + FieldName);
      end;
    end;

    // Поля, проверяемые на этапе экспорта
    CheckValue(FieldName, FieldValue);

    return TRUE;
  end;

end;

// Создаем глобальную переменную, т.к. при групповом экспорте выполняется кеширование
// макросов экспорта, при этом значения глобальных переменных макросов сохраняются.
// Это дает автоматическое кеширование значений Name1, Officer, Phone, DateMes
// (фамилия, должность, телефон текущего пользователя, системная дата)
private var FldHandler : TFldExportHandlerFnsXml = TFldExportHandlerFnsXml();

private macro ЗаписатьСообщение( XmlObj : object ) : bool
  var AllFldsAreRead : bool = false;
debugbreak;
  // чтение полей, образующих структуру XML
  var node : object = null;
  if( not ExportMesToXmlNode(@node, wlmes, @AllFldsAreRead, FldHandler) )
    return FALSE;
  end;
  if( not node )
    ErrExport("Ошибка при формировании узла XML из полей сообщения");
    return FALSE;
  end;  
  XmlObj.appendChild(node);

  // чтение остальных полей
  if(not AllFldsAreRead)

    var FieldName : string = "", FieldValue : string = "", BlockName : string = "";

    while( СчитатьПоле( FieldName, FieldValue, BlockName ) )
      if( (FieldName == "_СпОбм") and InList(FieldValue, "1", "4") )
        ErrExport("Выгрузка сообщений, которые должны быть отправлены почтой или курьером, не допускается");
        return FALSE;
      end;
    end;

  end;

  return TRUE;
end;

macro ExportMessage(ExportFileName)
  var Документов = 0, err;
  var FormName : string = ""; // название формы выгружаемого сообщения

  var XmlObj : object = ActiveX("Microsoft.XMLDOM");
  XmlObj.appendChild( XmlObj.createProcessingInstruction("xml", " version='1.0' encoding='windows-1251'") );

  while( СчитатьЗапись( wlmes, err ) )
    // Проверить наличие налоговой инспекции в карточке банка
    // Проверить наличие у заданной налоговой инспекции кода вида 28
    GetCodeNOBWithChecks(wlmes.InsideAbonentID);

    if( DefineFormExport( wlmes.RlsFormID ) )
      FormName = ФормаЭкспорт.Name;
    else
      return false;
    end;

    FldHandler.FillFieldsAtExport(ExportFileName, FormName);

    if( not ЗаписатьСообщение(XmlObj) )
      return false;
    end;

    Документов = Документов + 1;
    message( "Идет выгрузка документов. Отправлено: ", Документов );
  end;

  XmlObj.Save(ExportFileName);

  return true;

  OnError(er) // Обработка ошибок времени выполнения
    ErrExport(String(RsbGetError(er), "|Модуль: ", er.Module, " Строка: ", er.Line));
    return FALSE;
end;
