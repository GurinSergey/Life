/****************************************************************************/
/*                   R-Style SoftWare Lab, RS-Bank 5.1                      */
/****************************************************************************/
/*                  Подсистема "Межбанковские расчеты"                      */
/* Генерация сообщения ED202 транспорта УФЭБС                               */
/*                                                                          */
/*  Имя файла: ufgm202.mac                                                  */
/*  Создан:    23.06.06                                  Гайворонский Е.Г.  */
/****************************************************************************/

import OprInter, BankInter, "ufgenmes.mac", "wluftool.mac", "wlfindpm.mac";

var ver_st = 1;

macro ВычислитьКод( Строка )
   if((StrLen(Строка) == 1)  And ( Index(Строка, "1") or Index(Строка, "2") or Index(Строка, "3")))
      return true;
   else
      return false;
   end;
end;

/* Заполнение полей сообщения-запроса на получение выписки ED210 */
macro GenMes( addrMes, addrReq )

  SetBuff( wlmes,  addrMes );
  SetBuff( wlReq,  addrReq );

  var strXml;
  var InitMesId:integer = 0;
  var IsRequestPacket:bool = false;
  var NoInitMes:bool = false;
  var xml:object = ActiveX("Microsoft.XMLDOM");  
  var mes:object, elem: object;
  var iXml:object = ActiveX("Microsoft.XMLDOM");  
  
  var rs:object;
  var select:string;
  var params:TArray;
  var ObjID:integer, ObjKind:integer;

  mes = xml.createElement("ED202");
  
  if(ver_st == 1)
     mes.setAttribute("xmlns", "urn:cbr-ru:ed:v1.1");
  else
     mes.setAttribute("xmlns", "urn:cbr-ru:ed:v2.0");
  end;

  var ed_nda = NULL;
  ed_nda = EDNoDateAuthor();
  ed_nda.ConstructByTrn(wlmes.TRN);

  mes.setAttribute("EDNo",       ed_nda.EDNo );
  mes.setAttribute("EDDate",     YYYYMMDD(ed_nda.EDDate));
  mes.setAttribute("EDAuthor",   ed_nda.EDAuthor );  

  mes.setAttribute("EDReceiver", "4583001999" );
//  mes.setAttribute("EDReceiver", GetEDAuthor(wlmes.OutsideAbonentID) );
  
  if( wlreq.RelatedRef == "" )
    RunError("Не заполнена ссылка на исходный ЭПД (пакет ЭПД)");
  end;  

  // Если задана форма сообщения - ищем конкретный ЭПД, иначе ищем пакет ЭПД
  if( wlreq.InitFormIDMes == 0 )
    IsRequestPacket = true;
  end;

  // Ищем пакет ЭПД по журналу сеансов
  if( IsRequestPacket )
    if( not WldFindSessByUID( TRANSP_UFBS, wlreq.InitDateMes, wlreq.RelatedRef ) )
      RunError( String("Не найден исходящий пакет ЭПД|с номером '", wlreq.RelatedRef, "' за дату ", wlreq.InitDateMes) );
    end;
  end;

  if(ВычислитьКод( wlreq.Queries ))  
     mes.setAttribute("EDInquiryCode",  wlreq.Queries );
  else
     RunError( String("Задан непонятный запрос по ЭПД: '", wlreq.Queries, "'" ));
  end;

  elem = xml.createElement("EDRefID");

  if( not IsRequestPacket )
    //По платежу
    ed_nda = EDNoDateAuthor();
    ed_nda.ConstructByTrn(wlmes.RelatedRef); 

    elem.setAttribute("EDNo",       ed_nda.EDNo );
    elem.setAttribute("EDDate",     YYYYMMDD(ed_nda.EDDate));
    elem.setAttribute("EDAuthor",   ed_nda.EDAuthor );  
  
  else
    //По сеансу
    elem.setAttribute("EDNo", wlreq.RelatedRef ); //Номер сеанса
    elem.setAttribute("EDDate", YYYYMMDD(wlreq.InitDateMes) );

    СчитатьСвязьЗапросаСУчетнымОбъектом(wlreq.ReqID, ObjKind, ObjID);
    select = " SELECT decode(prop.t_DebetCredit,0,pm.t_PayerBankID,pm.t_ReceiverBankID) "+
               " FROM dpmpaym_dbt pm, dpmprop_dbt prop, dwlpm_dbt wlpm" +
              " WHERE wlpm.t_WlPmID = :ObjID"+
                " AND pm.t_PaymentID = wlpm.t_PaymentID"+
                " AND prop.t_PaymentID = pm.t_PaymentID" +
                " AND prop.t_IsSender = 'X'";

    params = makeArray( SQLParam("ObjID", ObjID));
    rs = execSQLselect( select, params, FALSE );
    if( rs.moveNext())
      elem.setAttribute("EDAuthor", GetEDAuthor(int(rs.value(0))));
    else
    elem.setAttribute("EDAuthor", GetEDAuthor({OurBank}));
  end;
  end;

  mes.appendChild(elem);
  
  ЗаписатьПолеЛог( "xml", mes.xml, TRUE );
  
  return TRUE; // Успешное завершение

  OnError( er ) // обработка ошибок
    std.msg(String(er.Message, "|Модуль: ", er.Module, " Строка: ", er.Line));
    return FALSE; 
end;

macro GenMesV2( addrMes, addrReq )
  ver_st = 2;
  return GenMes( addrMes, addrReq );
end;
