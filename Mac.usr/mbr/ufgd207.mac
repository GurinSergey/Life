/****************************************************************************/
/*                   R-Style SoftWare Lab, RS-Bank 5.1                      */
/****************************************************************************/
/*                  Подсистема "Межбанковские расчеты"                      */
/* Генерация выписок по сообщениям УФЭБС ED207                              */
/*                                                                          */
/* Имя файла: ufgd207.mac                                                   */
/* Создан:    28.10.04                                      Фомченкова Л.Н. */
/* Изменен:   10.04.12 Chesnokov D.S. по заявке С-9530 проверка на группу   */
/****************************************************************************/
import "ufgendoc.mac", "diver.mac";

var ver_st = 1;

macro GenDoc( addrMes )

  if (not ВходитВГруппу({oper},198))
    msgBox("Вы не включены в группу \"198 - Генерация сообщений УФЭБС\"");
    return false;
  end;

  var xml:object = ActiveX( "MSXML.DOMDocument" );
  var Node:object = ActiveX( "MSXML.DOMDocument" );
  var Строка, Сумма, Corschem, Currency, Error, Cancel, field_name, CreateHead = true;
  var StatusCode, i = 0, Page, EDDate, j = 0;
  var PaymentID = 0;
  var relRef = NULL;


  SetBuff( wlmes, addrMes );

  PrintLog( 2, "Генерация выписки по ED207" );

  ClearRecord( wlhead );

  while( СчитатьПоле( field_name, Строка ) )
     
  if( field_name == XMLField ) /*------------------------------------------------*/

    if ( not xml.loadXML(Строка) )
       println( string( "Неверный формат сообщения по форме ED207" ) );
       return false;
    end;

    EDDate = ToDate_(ReadAttribute(xml,"EDDate")); //TAM

    StatusCode = ReadAttribute(xml,"StatusCode");
    Cancel = UF_getCancelForConf( StatusCode, ver_st );

    if((StatusCode == "11") or (StatusCode == "20") )
      CreateHead = false;
    elif ( (Cancel == KVIT_ERROR) ) 
          std.msg( "Сообщения ED207 со статусом " + StatusCode + " обрабатываются без формирования подтверждений" );
          return TRUE;
    else
      /* Заполнение учетных буферов */
      wlhead.Number       = int(ReadAttribute(xml,"EDDayNo"));
      Page = ReadOptinalAttribute(xml,"MessageNo");
      if (Page)
          wlhead.Page     = int(Page);
      end;
      wlhead.DateIn       = EDDate;
      wlhead.DateOut      = EDDate;
      wlhead.FIID         = 0;
      wlhead.Corschem     = ПолучитьКорсхемуПоУмолчанию( wlmes.OutsideAbonentID, wlhead.FIID, 1 );
      if( wlhead.Corschem == -1 )
        Currency = ПолучитьКодФинИн(wlhead.FIID, error);
        if ( error )
           Currency = "???";
        end;
        std.msg( "Не определена схема расчетов для респондента по валюте " + Currency );
        return FALSE;
      end;

      if( not ВставитьЗаголовокВыписки( wlhead ) )
        std.msg("Ошибка при вставке заголовка выписки");
        return FALSE;
      end;
    end;
  elif( field_name == UFBSDocExtField ) /*----------------------------------------*/
        /*Вставляем документы выписки*/
        if( not node.loadXML(Строка) )
            println( string( "Неверный формат сообщения по форме ED207" ) );
            return false;  
        end;

        ClearRecord(wlconf);

        wlconf.Sum        = moneyL(ReadAttribute(Node,"Sum"))/100;
        wlconf.FIID       = 0;                            
        wlconf.Cancel     = Cancel;
       
        relRef = EDNoDateAuthor();
        relRef.EDNo   = ReadAttribute(Node,"EDNo", "EDRefID");
        relRef.EDDate = ToDate_(ReadAttribute(Node,"EDDate", "EDRefID")); //TAM
        relRef.EDAuthor = ReadAttribute(Node, "EDAuthor", "EDRefID");

        wlconf.BankID = ToRespID(relRef.EDAuthor);
        wlconf.Number = relRef.EDNo;
        wlconf.TransferDate = wlconf.DateValue = EDDate;
        
        wlconf.RelatedRef = relRef.GetTrn();
        wlconf.Description = ПолучитьКодОтветаНаСообщение(StatusCode, TYPE_CODE_UFBS_ED203);
        wlconf.DKFlag = 0;

        if(StatusCode == "11")
          ОбработатьКакСообщениеОДоставке(wlconf.DateValue,wlconf.RelatedRef, false);
        elif(StatusCode == "20")
          ОбработатьКакED201(wlconf.DateValue,wlconf.RelatedRef, 0);
        else

          /* Не знаем мы, что это за документ
          if( wlconf.DKFlag == WL_DEBET )
            wlhead.DebetNumDoc = wlhead.DebetNumDoc + 1;
            wlhead.DebetTurn   = wlhead.DebetTurn + wlconf.Sum;
          else
            wlhead.CreditNumDoc = wlhead.CreditNumDoc + 1;
            wlhead.CreditTurn   = wlhead.CreditTurn + wlconf.Sum;
          end;
          */

          if(StatusCode == "08")
             ОбработатьКакСообщениеОДоставке(wlconf.DateValue,wlconf.RelatedRef, false);
          end;

          /* Вставляем документ выписки */
          if( not ВставитьДокументВыписки( wlconf ) )
            std.msg("Ошибка при сохранении документа выписки");
            return FALSE;
          end;
         
        end;
     else  /*---------------------------------------------------------------------*/
     
        std.msg( string( "Неизвестный код поля: ", field_name) );
        return FALSE;
     
     end;  /*---------------------------------------------------------------------*/

  end;
      
  /* Обновим выписку */ 
  if( CreateHead and (not ОбновитьЗаголовокВыписки( wlhead )) )
    std.msg("Ошибка при обновлении заголовка выписки");
    return FALSE;
  end;

  return TRUE;

  OnError(er) /* Обработка ошибок времени выполнения */
    std.msg(String(er.Message, "|Модуль: ", er.Module, " Строка: ", er.Line));
    return FALSE;
end;

macro GenDocV2( addrMes )
   ver_st = 2;
   return GenDoc( addrMes );
end;
