//-----------------------------------------------------------------------------
// Блок      : 29002  - "Картотека НОСТРО-счета"
// Шаг       : 250    - "Ожидание события"
// Назначение: Макрос шага
// Описание  : Макрос шага
//-----------------------------------------------------------------------------
import BankInter, OprInter, "rmconst.mac", "cbsttls.mac", RMInter, "wlglobal.mac", "wlkvit.mac", "pm_const.mac";
import PaymInter, MesInter;
import OprInter, oralib; //Jushmanov 2014-02-24 C-19151

RECORD Corschem( corschem );

var PaymentObj:RsbPayment;

const Menu1      = "Ожидать квитовки";
const Menu2      = "Вернуть отправителю";
const Menu3      = "Перепозиционировать";
const ActionName = "Действие:";

//-----------------------------------------------------------------------------
// Выполнение шага
//-----------------------------------------------------------------------------
macro ExecuteStep( doc, first )

    var KvitType:bool = true,
        Cancel  :string,
        menu_item,
        Action;

    // Суммы всякие
    var UnkvitSum = Moneyl(0),
        KvitSum   = Moneyl(0);

    if( Corschem.IsKvitOutPaym == "X" ) // Если платежи надо квитовать

        if( not ПолучитьСуммуКвитовки( PaymentObj, KvitSum, Cancel) )
            return 1; // Ошибка создана
        end;

        if( Cancel==KVIT_CANCEL )
            MsgBox( "Нельзя квитовать с подтверждением отказом" );
            return 1;
        end;
    else // Не надо квитовать - считаем, что сквитован
        Cancel = KVIT_NORMAL;
    end;

    if( KvitType and ( Cancel == KVIT_NORMAL ) ) // Если квитовка на полную сумму

        if( УстановитьСтатусыПлатежа( OPR_PAYM_OUT_KVIT, OPR_PM_ST_KVIT ) )
            MsgBox("Возникла ошибка при смене статусов операции платежа");
            return 1;
        end;

        // Установить дату начала операции равной дате операционного дня пользователя
        SetOprDate(29000000, {curdate});

        return 0;

    elif( not KvitType ) // Если квитовка не на полную сумму

        msgbox("Платеж должен быть сквитован полностью");
        return 1;

    else // Квитовка отзывом

        // Установить дату начала операции равной дате операционного дня пользователя
        SetOprDate(29000000, {curdate});

        Action = GetActionWaitEdit();

        if(  Action == WLD_AWE_NONE )
            menu_item = Opr_MakeChoice( Menu1, Menu2, Menu3, ActionName );
        end;

        if( (menu_item == 0) or (Action == WLD_AWE_WAITKVIT) ) // Ожидать квитовки

            return 1;

        elif( (menu_item == 1) or (Action == WLD_AWE_RETURN) ) // Вернуть отправителю

            if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_RETURN ) )
                MsgBox("Возникла ошибка при смене статусов операции платежа");
                return 1;
            end;

            if( PaymentObj.Notes.AddNote( PM_NOTEKIND_DENIALGROUND, "Возвращен из картотеки" ) != 0 )
                msgbox( "Ошибка при вставке примечания платежа" );
                return 1;
            end;

            return 0;

        elif( (menu_item == 2) or (Action == WLD_AWE_REPOS) ) // Перепозиционировать

            if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_POS ) )
                MsgBox("Возникла ошибка при смене статусов операции платежа");
                return 1;
            end;

            PaymentObj.PropStatus = PM_PROP_READY;
            PaymentObj.PaymStatus = PM_READY_TO_SEND;

            PaymentObj.ValueDate = {curdate};
            PaymentObj.OutTransferDate = PmGetDefaultOutTransferDate( PaymentObj ); 

            return 0;

        else // Пользовать отказался выполнять шаг

            return 1;

        end;
    end;

    return 0;

end;


//Jushmanov 2014-02-24 C-19151
macro PostStepAction( message,      /* 1 - выполнение шага; 2 - откат шага;   */
                      errTrn,       /* статус выполнения шага. 0 - ошибки нет */
                      FirstDoc,     /* указатель на первичный документ        */
                      ID_Oper,      /* внутренний идентификатор операции      */
                      Number_Step,  /* Номер шага операции (из настроек)      */
                      KindOper,     /* номер вида операции                    */
                      KindDoc,      /* номер вида первичного документа        */
                      KindStep,     /* вид шага операции                      */
                      ID_Step )     /* внутренний идентификатор шага операции */
    private var logquery, idStep = ID_Step, idOper = ID_Oper;

    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(idOper) != V_INTEGER) and (valtype(idOper) != V_STRING)) idOper = 0; end;
        if ((valtype(idStep) != V_INTEGER) and (valtype(idStep) != V_STRING)) idStep = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + idOper + " AND t_id_step = " + idStep;
        ExecSQL(logquery, null, false);
    end;

    return 0;
end;


macro PrepMassExecuteStep() 
    return execStoredFunc( "WLD_KNOSTROSTEP.MassKNostroStepPrepare", V_INTEGER ); 
end;

macro MassExecuteStep()
    return execStoredFunc( "WLD_KNOSTROSTEP.MassKNostroStepExecute", V_INTEGER ); 
end;

macro PostMassExecuteStep()
    return 0;
end;
