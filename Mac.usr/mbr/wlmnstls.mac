/****************************************************************************/
/*                   R-Style SoftWare Lab, RS-Bank 5.1                      */
/****************************************************************************/
/*                  Подсистема "Межбанковские расчеты"                      */
/* Общие константы и вспомогательные функции для работы с МНС               */
/*                                                                          */
/*  Имя файла: wlmnstls.mac                                                 */
/*  Создан:  02.12.04                                  Фомченкова Л. Н.     */
// Lavrenov 06.06.2012 I-00204447-2
// KS 05.06.2012 I-00204429
// KS 05.06.2012 I-00204626 Для Адвоката и Нотариуса не нужно ОГРН
/****************************************************************************/
/*SDA 09.12.2013 адаптация для 31-й*/
import rsd, PTInter, SfInter, "wlgenmes.mac", oralib, likepy, "WLTOOLS.mac" , OprInter, 
       InsCarryDoc, "rsberror.mac", /*"lib_compare.mac"*/"bnk_common.mac", "bnk_ptlib.mac", WldInter, PSInter,
       "adress.mac"; 

const МаксимальнаяДлинаСтроки = 2000;

const ДлинаДаты = 8;
      
const ФормаIPB = "IPB",
      ФормаRPO = "RPO",
      ФормаROO = "ROO",
      ФормаZNS = "ZNS",
      ФормаTRB = "TRB",
      ФормаZNO = "ZNO",
      ФормаKWT = "KWT",
      ФормаPNO = "PNO",
      ФормаERROR = "ERROR";
      
const МНС_КонецБлока = "###",
      МНС_КонецФрагмента = "@@@",
      МНС_КонецФайла = "===";
const RegOpenAcc = "PS\\REQOPENACC\\OPERATION\\";
const СвидетельствоГосРегистрации = 4;
const СвидетельствоОПостановкеНаУчет = 14;

const ТипСубъекта_Нотариус = "2",
      ТипСубъекта_Адвокат  = "3"; 

const ZeroDate = date(0,0,0);

//TAM 04.09.2014 HF_74
// Виды сообщений по счетам (SBC)
const ACCMSG_KIND_OPEN  = 1,
      ACCMSG_KIND_CLOSE = 2,
      ACCMSG_KIND_CHNG  = 3;

private file account( "account.dbt" ); //zmp 02.10.2014 R-462760-2 переопределение account

macro ToDate( strYYYYMMDD )
  return date( int(substr(strYYYYMMDD, 7, 2)), int(substr(strYYYYMMDD, 5, 2)), int(substr(strYYYYMMDD, 1, 4)) );
end;

// YYYY-MM-DD -> date
macro ToDateYYYY_MM_DD( strYYYY_MM_DD )
  return date( int(substr(strYYYY_MM_DD, 9, 2)), 
               int(substr(strYYYY_MM_DD, 6, 2)), 
               int(substr(strYYYY_MM_DD, 1, 4)) 
             );
end;

/*дд.мм.гггг*/
macro StrToDate( str )
  return date( int(substr(str, 1, 2)), int(substr(str, 4, 2)), int(substr(str, 7, 4)) );
end;

macro ПолучитьИДГНИ( PartyID, Series, Number, RegDate, RegDocKind )
  var ID = -1, rsstr, dt;
  var rs:object;
  var select:string;
  var params:TArray;

  if( valtype(RegDocKind) == V_UNDEF )
    RegDocKind = СвидетельствоОПостановкеНаУчет;
  end;

  select = " select t_RegPartyID, t_Series, t_Number, T_DOCDATE from dobjrgdoc_dbt " +
                      " where t_objecttype = :OBJTYPE_PARTY and t_objectid = :PartyID" + 
                      " AND t_regpartykind = :PTLIST_TAXINSTITUTE " +
                      " AND t_regdockind = :RegDocKind" +
                      " and t_IsClosed <> 'X'" +
                      " and T_STARTDATE <= :CurDate" +
                      " and (T_FINISHDATE >= :CurDate" +
                      "      or T_FINISHDATE = to_date('01.01.0001', 'DD-MM-YYYY:HH24:MI:SS'))";
  params = makeArray( SQLParam("OBJTYPE_PARTY", OBJTYPE_PARTY),
                      SQLParam("PartyID", PartyID),
                      SQLParam("PTLIST_TAXINSTITUTE", PTLIST_TAXINSTITUTE),
                      SQLParam("RegDocKind", RegDocKind),
                      SQLParam("CurDate", {curdate}));
  /// Это для отладки 
/*
   println (  string ("  select t_RegPartyID, t_Series, t_Number, T_DOCDATE from dobjrgdoc_dbt \n" ,
                      " where t_objecttype = ",OBJTYPE_PARTY, " and t_objectid = ",PartyID, 
                      " \n AND t_regpartykind = ",PTLIST_TAXINSTITUTE,
                      " \n AND t_regdockind = ",СвидетельствоОПостановкеНаУчет ,
                      " \n and T_STARTDATE <= to_date('",{curdate},"', 'DD-MM-YYYY:HH24:MI:SS')",
                      " \n and (T_FINISHDATE >= to_date('",{curdate},"', 'DD-MM-YYYY:HH24:MI:SS')" ,
                      " \n or T_FINISHDATE = to_date('01.01.0001', 'DD-MM-YYYY:HH24:MI:SS'))") 
          );
*/
  rs = execSQLselect( select, params, FALSE );
  if (rs.MoveNext())
     ID = rs.Value(0);
     if(ValType(Series) != V_UNDEF)
         SetParm(1, rs.Value(1));
     end;
     if(ValType(Number) != V_UNDEF)
         SetParm(2, rs.Value(2));
     end;
     if(ValType(RegDate) != V_UNDEF)
         DtTmSplit( rs.Value(3), dt );
         SetParm(3, dt);
     end;
  end;
  return ID;
end;  

macro НашБанкГоловной(PartyID)

  var rs:object;
  var select:string;
  var params:TArray;

  select = " select t_PartyID" +
           " from ddp_dep_dbt" +
           " where t_ParentCode = 0";
  rs = execSQLselect( select, NULL, FALSE );
  if (rs.MoveNext() and (rs.Value(0) == PartyID))
    return true;
  else
    return false;
  end;

end;

macro УдалитьЗапрещенные311ПСимволы( Str:@string )

  Str = StrSubst(Str,","," ");
  Str = StrSubst(Str,"."," ");

end;

macro СформироватьПодстрокуАдреса( Str:string ):string
  var error, Строка = "", AddStr = "";
  
  УдалитьЗапрещенные311ПСимволы(@Str);
  УдалитьЗапрещенные311ПСимволы(@AddStr);

  if( getparm(1, AddStr) and (AddStr != "") )
    Строка = Str + " " + AddStr;
  else
    Строка = Str;
  end;

  Строка = StrUpr(Строка);
  return Строка;
end;

macro ПолучитьАдрес( PartyID )
  var error, Строка = "";
  FILE adress(adress) key 0;
  adress.PartyID = PartyID;
  adress.Type    = PTADDR_LEGAL;
  if(not getEQ(adress))
    return Строка;
  end;

  var КодСтраны = "", 
      КодРегиона = "", 
      Район = "", 
      Город = "";

  var select;
  var params:TArray = TArray();  
  var rs:RsdRecordset ;
  select = " select country.t_CODELAT3"+
           " from dcountry_dbt country"+
           " where country.t_CODECYR3 = :Country" +
           " or country.t_CODELAT3 = :Country" +
           " or country.t_CODELAT2 = :Country" +
           " or country.t_CODENUM3 = :Country";

  params[params.size] = ( SQLParam( "Country" , adress.Country ));

  rs = execSQLselect(select,params,true);
  if( rs.MoveNext() )
    КодСтраны = СформироватьПодстрокуАдреса(rs.value(0));
    
    if(КодСтраны != "RUS")
      КодРегиона = "00";
    else
      КодРегиона = СформироватьПодстрокуАдреса(string(adress.RegionNum));
    end;

    if((КодРегиона == "77") or (КодРегиона == "78"))
      Район = "";
    else
      Район = СформироватьПодстрокуАдреса(adress.Province, adress.CodeProvince); 
    end;

    if(КодРегиона == "77")
      Город = "МОСКВА";
    elif(КодРегиона == "78")
      Город = "САНКТ-ПЕТЕРБУРГ";
    else
      Город = СформироватьПодстрокуАдреса(adress.District, adress.CodeDistrict); 
    end;

    Строка = string( СформироватьПодстрокуАдреса(adress.PostIndex), ",", КодРегиона, ",", Район, ",", 
                     СформироватьПодстрокуАдреса(adress.District, adress.CodeDistrict) , ",", 
                       СформироватьПодстрокуАдреса(adress.Place, adress.CodePlace), ",",
                       СформироватьПодстрокуАдреса(adress.Street, adress.CodeStreet), ",", 
                       СформироватьПодстрокуАдреса(adress.House), ",", 
                       СформироватьПодстрокуАдреса(adress.NumCorps), ",", 
                       СформироватьПодстрокуАдреса(adress.Flat) 
                     );
    end;
  return Строка;
end;  

private macro CheckAddress( PartyID : integer, PartyName : string )
  record adress(adress);
  if( not НайтиЮридическийАдресСубъекта(PartyID, adress) )
    RsbThrow(string("Для банка (филиала) ", PartyName, " не задан юридический адрес"));
  end;

  // В адресе банка (филиала) задан индекс
    if ( not strlen(trim(adress.PostIndex)) )
    RsbThrow(string("В адресе банка (филиала) ", PartyName, " не указан почтовый индекс"));
    end;

  // Количество символов в индексе из адреса банка (филиала) 
  if( strlen(adress.PostIndex) != 6 )
    RsbThrow(string("Почтовый индекс, указанный в адресе банка (филиала) ", PartyName, 
                    ", должен содержать 6 символов"));
  end;

  var КодСтраны = adress.Country;

  if( (КодСтраны == "RUS") or (not КодСтраны) )

    // В адресе банка (филиала) задан код региона
    if( not trim(adress.RegionNum) )
      RsbThrow(string("В адресе банка (филиала) ", PartyName, " не указан код региона"));
    end;

    // Количество символов в коде региона из адреса банка (филиала)
    if( strlen(adress.RegionNum) != 2 )
      RsbThrow(string("Код региона, указанный в адресе банка (филиала) ", PartyName, 
                      ", должен содержать 2 символа"));
    end;

    // Код региона из адреса банка есть в справочнике
    if( not existsSQLselect( "select 1 from dptregion_dbt where t_CodeRegion = :CodeReg ",
                             makeArray( SQLParam("CodeReg", adress.RegionNum) ) )
      )
      RsbThrow(string("Код региона, указанный в адресе банка (филиала) ", PartyName, 
                      ", отсутствует в справочнике регионов"));
    end;
    end;

  var IsRegionCapital : bool = ( (adress.RegionNum == "77") or 
                                 (adress.RegionNum == "78") );

  // В адресе банка (филиала) задан город или населенный пункт
  if(not IsRegionCapital and not adress.District and not adress.Place)
    RsbThrow(string("В адресе банка (филиала) ", PartyName, 
                    " должен быть заполнен либо город, либо населенный пункт"));
  end;

  // В адресе филиала счета типа $(юридический) есть индекс address.postindex 
  // и код региона address.region и хотя бы один необязательный элемент адреса
  if( not ( strlen(trim(adress.PostIndex)) 
            and
            (strlen(trim(adress.RegionNum)) or (КодСтраны != "RUS")) 
            and
             ( strlen(adress.District) or
              (strlen(adress.Province) and not IsRegionCapital ) or 
               strlen(adress.Place) or
               strlen(adress.Street) or
               strlen(adress.House) or
               strlen(adress.NumCorps) or
              strlen(adress.Flat)
            )
      )
    )
    msgbox(string("В юридическом адресе банка (филиала)| ", PartyName, "| недостаточно данных для корректного заполнения реквизита сообщения \"АдрКО\". |Должны быть указаны индекс, код региона и еще один из элементов."));
    end;

  end;

macro ПолучитьТелефон( PartyID ) : string
  var PhoneNumber : string = "";

  var q : string = "select t_PhoneNumber "
                   "  from dadress_dbt "
                   " where t_PartyID = :PartyID "
                   "   and t_Type in ( 3 /*PTADDR_POST*/, "
                   "                   1 /*PTADDR_LEGAL*/, "
                   "                   2 /*PTADDR_REAL*/ ) "
                   "   and t_PhoneNumber <> chr(1) and t_PhoneNumber is not null ";

  var params : TArray = makeArray( SQLParam("PartyID", PartyID) );
  var rs : RsdRecordset = execSQLselect(q, params);
  if(rs and rs.moveNext())
    PhoneNumber = rs.value(0);
  end;

  return PhoneNumber;
end;

macro ПолучитьИдентификаторОтправителя()
  var INN = GetPartyINN({OurBank}, 1);
  return string(RemoveKPP(INN):10, "**", RemoveINN(INN):9);
end;  

macro ДатаДДpММpГГГГ( Дата )
  var День, Месяц, Год;
  datesplit( Дата, День, Месяц, Год );
  if( День  < 10 )   День  = String( "0", день  );  end;
  if( Месяц < 10 )   Месяц = String( "0", месяц );  end;

  return String( День, ".", Месяц, ".", Год );
end;


macro ПолучитьДоговорОбслуживания( FIID : integer, Acc : string, SfCntrBuf ) : integer
  var stat : integer = 0;

  file SfCntr( "sfcontr.dbt" );
  var OldKey = KeyNum( SfCntr, 1 );

  SfCntr.ServKind    = PTSK_PAY;
  SfCntr.objectType  = SF_ACCOUNT; 
  SfCntr.FIID        = FIID;       
  SfCntr.object      = Acc; 

  if( getEQ( SfCntr ) )
    Copy(SfCntrBuf, SfCntr);
  else
    stat = 1;
  end;

  keyNum( SfCntr, OldKey );
  return stat;
end;

//zmp 11.08.2014 R-427187-2 добавлено поле open_close
macro ПолучитьСчет( FIID, Acc, buff, SkipRunError ) : integer
  var rs:object;
  var select:string;
  var params:TArray;

  buff.Account = Acc;
  buff.Code_Currency = FIID;
  buff.Chapter = 1;

  select = "select t_Open_Date Open_Date, t_Client client, t_Type_Account type_account, t_Close_Date close_date, t_open_close open_close, t_Department department from daccount_dbt "  
          "where t_Account = :Acc and t_chapter = 1 and t_Code_Currency = :FIID";
  params = makeArray( SQLParam("Acc", Acc),
                      SQLParam("FIID", FIID ));
  rs = execSQLselect( select, params, FALSE );

  if (rs and rs.MoveNext())
     DtTmSplit( rs.Value("Open_Date"), buff.Open_Date );
     buff.Client       = rs.Value("client");
     buff.Type_Account = rs.value("type_account");
     buff.Close_Date   = rs.value("close_date"  );
     buff.Department   = rs.value("department"  );
     buff.open_close   = rs.value("open_close"  );
     return 0;
  elif (SkipRunError)
    return 1;
  else
     RunError(string("Не найден лицевой счет с номером ", Acc));
  end;
end;


// Информация из блока "Характеристики ошибок"
// в квитанциях о принятии/непринятии и извещениях об ошибках
// по сообщениям об открытии/закрытии/изменении счета
class TErrInfo

  var ErrCode       :string   = "", // КодОшибки
      ErrName       :string   = "", // НаимОшибки
      AttrCode      :string   = "", // КодРекв
      AttrValue     :string   = ""; // ЗначРекв
end;

//TAM 04.09.2014 HF_74
macro fillWlerror(ResultID : integer, ErrInfo : TErrInfo, wlerror_buf)
  record wlerror(wlerror);
  ClearRecord(wlerror);

  wlerror.ErrorID = 0;
  wlerror.ResultID = ResultID;        
  wlerror.Code = ErrInfo.ErrCode;

  var s : string = ErrInfo.ErrName;
  if(ErrInfo.AttrCode != "")
    s = s + " // Код реквизита: " + ErrInfo.AttrCode;
  end;
  if(ErrInfo.AttrValue != "")
    s = s + " // Значение реквизита: " + ErrInfo.AttrValue;
  end;
  wlerror.Description = s;

  Copy(wlerror_buf, wlerror);
end;

var ПоляМНС = TArray; 

class ТПолеМНС( _name, _fill_fun, _fill_fun2 )
  var Name:string,
      FillFun:string,
      FillFun2:string;

  Name          = _name;
  FillFun       = _fill_fun;
  FillFun2      = _fill_fun2;

  /* Добавляем поле в список полей формы */
  ПоляМНС(ПоляМНС.Size) = this;

  macro ОбработатьПолеФормы( stream, obj )
    if( FillFun != "" )
      return ExecMacro2( FillFun, stream, obj );
    else
      return TRUE;
    end;
  end;

  macro ОбработатьПолеФормы2( stream, obj )
    if(FillFun2)
      return ExecMacro2( FillFun2, stream, obj );
    else
      return TRUE;
    end;
  end;
end; /* class ТПолеМНС */


macro IndexMNS(Name)
   var count = 0, fld;
   while(count < ПоляМНС.Size)
       fld = ПоляМНС.Value(count);
       if (fld.Name == Name)
           return count;
       end;
       count = count + 1;
   end;
   return -1;
end;

// YYYY-MM-DD TAM 05.09.2014 HF_74
/*macro YYYY_MM_DD( dt )
  var day, mon, year, str;
  DateSplit(dt, day, mon, year );
  str = string(year:4, "-", mon:2, "-", day:2);
  str = StrSubst ( str, " ", "0" );
  return str;
end;*/

macro YYYYMMDD( dt )
   var day, mon, year, str;
   DateSplit(dt, day, mon, year );
   str = string(year:4, mon:2, day:2);
   str = StrSubst ( str, " ", "0" );
   return str;
end;

macro HHMMSS( tm )
   var ss, mm, hh, str;
   TimeSplit(tm, hh, mm, ss );
   str = string(hh:2, mm:2, ss:2) ;
   str = StrSubst ( str, " ", "0" );
   return str;
end;

PRIVATE MACRO GetDepartmentName(Department:integer):string
  var rset:object;
  var select:string;
  var params:TArray = TArray();

  select = " SELECT T_NAME FROM DDP_DEP_DBT WHERE T_CODE = :Department ";

  params[params.size] = SQLParam( "Department", Department );
  rset = execSQLselect( select, params, TRUE );

  if( rset and rset.moveNext() )
    return rset.value(0);
  end;

  return "";
END;

MACRO GetRegValForOPENAC( Setup:string, Type, RegVal ):integer
   
   var stat:integer = 0;

   var RegStr:string = RegOpenAcc + Setup;

   var RegValue;
  
   if( Type == GetRegistryValue( RegStr, Type, RegValue, stat ) )
     SetParm( 2, RegValue );
   end;

   return stat;

END;

// Получить строковое значение настройки PS\REQOPENACC\OPERATION\Setup
// для филиала DepCode (dp_dep.Code)
// return 0 - OK, иначе ошибка
MACRO GetDprtStringRegValForOPENAC( Setup:string, DepCode:integer, RegVal:@string ):integer
   
  var stat:integer = 0;

  var RegStr:string = RegOpenAcc + Setup;

  var params : TArray = makeArray( SQLParam("p_RegValue", V_STRING, RSDBP_OUT),
                                   SQLParam("p_KeyPath",  RegStr, RSDBP_IN),
                                   SQLParam("p_RegKind",  REGVAL_KIND_DPRT, RSDBP_IN_OUT),
                                   SQLParam("p_ObjectID", DepCode, RSDBP_IN_OUT),
                                   SQLParam("p_UserValueBlocked", V_STRING, RSDBP_OUT),
                                   SQLParam("p_ExpDep", V_INTEGER, RSDBP_OUT) ); 
  stat = execStoredFunc("RSB_COMMON.RSI_GetStringRegVal", V_INTEGER, params);
  
  if(not stat)
    RegVal = params.value(0).value;
  else
    RegVal = "";
  end;
  return stat;

OnError(er) /* обработка ошибок времени выполнения */
  return 1;
END;

// Получить целочисленное значение настройки PS\REQOPENACC\OPERATION\Setup
// для филиала DepCode (dp_dep.Code)
// return 0 - OK, иначе ошибка
MACRO GetDprtIntegerRegValForOPENAC( Setup:string, DepCode:integer, RegVal:@integer ):integer
   
  var stat:integer = 0;

  var RegStr:string = RegOpenAcc + Setup;

  var params : TArray = makeArray( SQLParam("p_RegValue", V_INTEGER, RSDBP_OUT),
                                   SQLParam("p_KeyPath",  RegStr, RSDBP_IN),
                                   SQLParam("p_RegKind",  REGVAL_KIND_DPRT, RSDBP_IN_OUT),
                                   SQLParam("p_ObjectID", DepCode, RSDBP_IN_OUT),
                                   SQLParam("p_UserValueBlocked", V_STRING, RSDBP_OUT),
                                   SQLParam("p_ExpDep", V_INTEGER, RSDBP_OUT) ); 
  stat = execStoredFunc("RSB_COMMON.RSI_GetIntegerRegVal", V_INTEGER, params);
  
  if(not stat)
    RegVal = params.value(0).value;
  else
    RegVal = 0;
  end;
  return stat;

OnError(er) /* обработка ошибок времени выполнения */
  return 1;
END;

private macro GetLastResErrCode( MesID )
  var rs:object;
  var select:string;
  var params:TArray;

  select = " select resprm.t_ErrCode"+
           " from dwlresprm_dbt resprm"+
           " where resprm.t_InitialMesID = :MesID"+
           " order by resprm.t_ResultID";
  params = makeArray( SQLParam("MesID", MesID));
  rs = execSQLselect( select, params, FALSE );

  if ( rs.MoveNext() )
    return rs.value(0);
  else
    return 0;
  end;
end;

macro MakeSixSymb(Number)
   var len;
   len = strlen(Number); 
   if( len < 6 )
     while( len != 6 )
       Number = "0" + Number;
       len = len + 1;
     end;
   else
     Number = string( Number:6 );
   end;
   return Number;
end;

macro MakeLastSixSymb(Number)
   var len;
   len = strlen(Number); 
   if( len < 6 )
     while( len != 6 )
       Number = "0" + Number;
       len = len + 1;
     end;
   else
     Number = subStr( Number, len - 5 );
   end;
   return Number;
end;

macro getRsDpDepByPartyID (PartyID:integer):RsdRecordset
  var query : string = "select * " +
                       "  from ddp_dep_dbt " +
                       " where t_PartyID = :PartyID ";
  var rs:RsdRecordset = execSQLselect(query, makeArray( SQLParam("PartyID", PartyID) ));
  return rs;
end;

macro GetFileNamebySess(SessID)
  var FormatFile : integer = GetFormatFileBySess(SessID);
  var rs:object;
  var select : string = "", from : string = "", where : string = "";
  var params:TArray;

  select = " select pcode.t_Code as t_BIC, "+
           "        val_Num.t_Value as t_NumMes";

  if(FormatFile == WLD_FORMAT_XML)
    select = select + ", " +
           "        pcodeNOB.t_Code as t_CodeNOB, " +
           "        val_Type.t_Value as t_TypeMes ";
  else
    select = select + ", " +
           "        val_Code.t_Value as t_CodeNOB ";
  end;

  from =   " from dwlmes_dbt mes,"+
           "      dwlsess_dbt sess,"+
                " dwlmesval_dbt val_Num," +
                " dwltpshem_dbt tpshem," +
                " ddp_dep_dbt dpdep," +
                " dpartcode_dbt pcode";

  if(FormatFile == WLD_FORMAT_XML)
    from = from + ", " +
                " ddp_dep_dbt dpdepMes, " +
                " dparty_dbt ptDepMes, " +
                " dpartcode_dbt pcodeNOB, " +
                " dwlmesval_dbt val_Type ";
  else
    from = from + ", " +
                " dwlmesval_dbt val_Code ";
  end;

  where =  " where sess.t_sessionid = :SessID"+
             " and mes.t_sessionid = sess.t_sessionid" + 
             " and tpshem.T_TPSHEMID = mes.T_TPSCHEMID" +
             " and dpdep.T_CODE = tpshem.T_DEPARTMENT" +
             " and pcode.T_PARTYID = dpdep.T_PARTYID" +
             " and pcode.T_CODEKIND = 3" +
             " and val_Num.T_MESID  = mes.T_MESID"  +
             " and val_Num.t_TpFieldID = 496"; // НомСооб

  if(FormatFile == WLD_FORMAT_XML)
    where = where + " and dpdepMes.t_Code = mes.t_Department " +
                    " and ptDepMes.t_PartyID = dpdepMes.t_PartyID " +
                    " and pcodeNOB.t_PartyID = ptDepMes.t_TaxInstitution " +
                    " and pcodeNOB.t_CodeKind = 28 " + // КодНОБ
                    " and val_Type.T_MESID  = mes.T_MESID " +
                    " and val_Type.t_TpFieldID = 1118 "; // ТипСооб
  else
    where = where + " and val_Code.T_MESID = mes.T_MESID"  +
                    " and val_Code.t_TpFieldID = 573"; // КодНОБ
  end;

  params = makeArray( SQLParam("SessID", SessID));
  
  rs = execSQLselect( select + from + where, params, FALSE );

  if ( rs.MoveNext() )
     
    var bbbbbbb = substr(rs.Value("t_BIC"), 3, 7);
    var LLLL = strLpad( rs.Value("t_CodeNOB"), 4, "0" );

    var RRRRFFFFGGNNNNNN : string = "";
    if(FormatFile == WLD_FORMAT_XML)
      RRRRFFFFGGNNNNNN = rs.Value("t_NumMes");
    else
      RRRRFFFFGGNNNNNN = substr(rs.Value("t_NumMes"), 1, 16);
    end;

    var MMM : string = "";
    if(FormatFile == WLD_FORMAT_XML)
      MMM = rs.Value("t_TypeMes");
    else
      MMM = substr(rs.Value("t_NumMes"), 18, 3);
    end;
     
    var a : string = "";
     if( substr(MMM,2,2) == "77" )
       a = 3;
     elif( substr(MMM,2,2) == "00" )
       a = 1;
     else
       a = 2;
     end;

     return string(a + bbbbbbb +"_"+ LLLL + YYYYMMDD(date()) + "_" + RRRRFFFFGGNNNNNN + "_" + MMM);
  else
    return -1;
  end;

  OnError(er) /* обработка ошибок */
    ExeptionMessage(er);
    return FALSE;
end;

private macro getFileNamePartsForFNSINFO(MesID:integer, a:@string, P:@string)
  FILE f_wlregdec (wlregdec) key 0;
  var select = "select wlmeslnk.t_ObjID " +
               "  from dwlmeslnk_dbt wlmeslnk " +
               " where wlmeslnk.t_ObjKind = " + string(OBJTYPE_FNSINFO) +
               "   and wlmeslnk.t_MesID = " + MesID;
  var rs : RsdRecordset = execSQLselect(select);
  if (rs and rs.moveNext())  
    f_wlregdec.DecisionID = rs.value(0);
    if ( getEQ(f_wlregdec) )
      
      // а = номер отправленного сообщения
      if( not ПолучитьПоле (MesID, "_НомерОтправ", a) )
        select = "select count(1) " +
                 "  from dwlmes_dbt wlmes, " +
                 "       dwlexphist_dbt wlexphist, " +
                 "       dwlmeslnk_dbt wlmeslnk " +
                 " where wlmes.t_MesID <> " + MesID +
                 "   and wlmes.T_MesID = wlexphist.t_MesID " +
                 "   and wlmes.t_MesID = wlmeslnk.t_MesID " +
                 "   and wlmeslnk.t_ObjKind = " + string(OBJTYPE_FNSINFO) +
                 "   and wlmeslnk.t_ObjID = " + f_wlregdec.DecisionID;
        rs = execSQLselect(select);
        if (rs and rs.moveNext())
          a = string( int(rs.value(0)) + 1);
        else
          InitError;
          a = "1";
        end;
      end;

      // P - наименование полученного файла запроса, решения о приостановлении 
      // операций по счетам налогоплательщика (без расширения)
      if (f_wlregdec.LnkDocID != 0)
        select = "select wlsess.t_FileName " +
                 "  from dwlsess_dbt wlsess, dwlmes_dbt wlmes, dwlmeslnk_dbt wlmeslnk " +
                 " where wlsess.t_SessionID = wlmes.t_SessionID " +
                 "   and wlmes.t_MesID = wlmeslnk.t_MesID ";
        if (f_wlregdec.LnkDocType == 505/*WLD_ORIGIN_LNKRGD_REQUEST*/)
          select = select + "   and wlmeslnk.t_ObjKind = " + string(OBJTYPE_REQ);
        elif (f_wlregdec.LnkDocType == 519/*WLD_ORIGIN_LNKRGD_REQUEST*/)
          select = select + "   and wlmeslnk.t_ObjKind = " + string(OBJTYPE_DECISION);
        end;
        select = select + "     and wlmeslnk.t_ObjID = " + f_wlregdec.LnkDocID;
        rs = execSQLselect(select);
        if (rs and rs.moveNext())
          SplitFile(rs.value(0), P);
        else
          return 1;
        end;
      else
        // если заполнено примечание объекта wlregdec 
        // вида "Имя файла запроса ФНС или решения рег. органа", 
        // то установить Р = значению примечания
        P = readNoteForObject(OBJTYPE_FNSINFO, 
                              makeObjectID(OBJTYPE_FNSINFO, NULL, f_wlregdec), 
                              2 /* NOTEKIND_FNSINFO_INITIALFILENAME*/);
        if(P == "") // примечание не заполнено
          if( (f_wlregdec.LnkDocType == 519/*WLD_ORIGIN_LNKRGD_REQUEST*/) and
              (f_wlregdec.LnkDocNumber != "") and
              (f_wlregdec.LnkDocDate != ZeroDate)
            )
            // RBN1bbbbbbb_ККККDDDDDDDD_NNNNNN
            var bbbbbbb:string = substr(ПолучитьКодСубъекта(f_wlregdec.OriginatorID, PTCK_BIC), 3, 7);
            var KKKK = "";
            if (f_wlregdec.RecipientID > 0)
              KKKK = ПолучитьКодСубъекта(f_wlregdec.RecipientID, PTCK_MNS);
            else
              KKKK = f_wlregdec.RecipientCode;
            end;
            var DDDDDDDD = YYYYMMDD( f_wlregdec.LnkDocDate );
            var NNNNNN = MakeSixSymb(f_wlregdec.LnkDocNumber);
            P = "RBN1" + bbbbbbb + "_" + KKKK + DDDDDDDD + "_" + NNNNNN;     
          end;
        end;  
      end;
    else
      return 1;
    end;
  else
    return 1;
  end;

  return 0;
end;

private macro getFileNameFNSPB( MesID:integer, a:@string, P:@string )
  FILE f_wlresprm( wlresprm ) key 0;
  var select = "select wlmeslnk.t_ObjID       " +
               "  from dwlmeslnk_dbt wlmeslnk " +
               " where wlmeslnk.t_ObjKind = " + string( OBJTYPE_MESDEFECT ) +
               "   and wlmeslnk.t_MesID   = " + MesID;
  var rs : RsdRecordset = execSQLselect( select );
  if( rs and rs.moveNext() )  
    f_wlresprm.ResultID = rs.value(0);
    if ( getEQ( f_wlresprm ) )
      
      // а = номер подтверждения
      if( ( f_wlresprm.ErrCode == 0 ) or ( f_wlresprm.ErrCode == 8 ) )
        a = "1";
      else
        a = "2";
      end;

      // P - наименование полученного файла - задано в панели
      P = f_wlresprm.FileName;
    else
      return 1;
    end;
  else
    return 1;
  end;

  return 0;
end;

private macro getFileNameForFNSNOTICE(CurMesID:integer)
  var resFileName : string = "";

  var strSQL = "select mes.t_SessionID " +
               "  from dwlmes_dbt mes, dwlmeslnk_dbt meslnk, dwlmeslnk_dbt curmeslnk " +
               " where mes.t_MesID <> " + CurMesID +
               "   and mes.t_IsAnnul = 'X' " /*SET_CHAR*/ + 
               "   and mes.t_MesID = meslnk.t_MesID " +
               "   and meslnk.t_ObjKind = " + OBJTYPE_FNSNOTICE +
               "   and meslnk.t_ObjID = curmeslnk.t_ObjID " +
               "   and curmeslnk.t_ObjKind = " + OBJTYPE_FNSNOTICE +
               "   and curmeslnk.t_MesID = " + CurMesID +
               " order by mes.t_MesID DESC " /* чтобы выбрать max MesID */; 
  var rs = execSQLselect(strSQL, NULL, true, RSDVAL_CLIENT, RSDVAL_STATIC);

  if( rs and rs.moveFirst() ) // Если сообщение найдено
    strSQL = "select substr(wlsess.t_FileName, instr(wlsess.t_FileName, '\\', -1, 1) + 1) " +
             "  from dwlsess_dbt wlsess " +
             " where wlsess.t_SessionID = " + rs.value("t_SessionID");
    var rs1 : RsdRecordset = execSQLselect(strSQL);
    if( rs1 and rs1.moveNext() )
      // 4-й (начиная с 1) символ заменить на "9"
      resFileName = subStr(rs1.value(0), 1, 3) + "9" + 
          subStr(rs1.value(0), 5, IfThenElse(Index(rs1.value(0), ".") == 0, NULL, Index(rs1.value(0), ".") - 5));
    else
      return -1;
    end;
  else // BUVabbbbbbb_DDDDDDDD_NNNNNN
    var bbbbbbb : string = "", 
        DDDDDDDD : string = YYYYMMDD( date() ), 
        NNNNNN = "";
    strSQL = "select t_InsideAbonentID " +
             "  from dwlmes_dbt " +
             " where t_MesID = " + CurMesID;
    rs = execSQLselect(strSQL);
    if( rs and rs.moveNext() )
      var InsideAbonentID : integer = rs.value("t_InsideAbonentID");
      
      bbbbbbb = subStr( ПолучитьКодСубъекта(InsideAbonentID, PTCK_BIC), 3 );
      
      var rs_dp_dep = getRsDpDepByPartyID(InsideAbonentID);
      if( rs_dp_dep and rs_dp_dep.moveNext() )
        var RefID : integer = 0;
        if( GetDprtIntegerRegValForOPENAC("ОПИСАТЕЛЬ_РЕФЕРЕНСА", rs_dp_dep.value("t_Code"), @RefID) != 0 )
          return -1;
        end;
        if( GenerateReference (RefID, NNNNNN) != 0 )
          return -1;
        end;
      else
        return -1;  
      end;
    else
      return -1;
    end;

    resFileName = "BUV1" + bbbbbbb + "_" + DDDDDDDD + "_" + NNNNNN;
  end;

  return resFileName;
end;

macro GetFileNameMNS( FormName, SessID, MesID )
  var a = "", P = "", nn = "";
  if ( (FormName == "BOS") or (FormName == "BNS") or (FormName == "BV") )
    if (not getFileNamePartsForFNSINFO(MesID, @a, @P) )
      if ( (FormName == "BOS") or (FormName == "BNS") )
        return a + "_" + P;
      elif (FormName == "BV")
        if( ПолучитьПоле(MesID, "НомЧасти", nn) )
          if( strLen(nn) == 1 )
            nn = "0" + nn;
          end;
        else  // не найдено значение поля $(НомЧасти)
          InitError;
          nn = "00";
        end;
        return a + nn + "_" + P;
      end;
    else
      return -1;
    end;
  elif( FormName == "PB" )
    if( not getFileNameFNSPB( MesID, @a, @P ) )
      return a + "_" + P;
    end;
  elif (FormName == "BUV")
    return getFileNameForFNSNOTICE(MesID)
  else
    return GetFileNamebySess(SessID);
  end;
end;

macro ПолучитьНаимКо( Department )
  var НаимКО = "";
  var rs:object;
  var select:string;
  var params:TArray;

  select = " select t_PartyID" +
           " from ddp_dep_dbt" +
           " where t_ParentCode = 0";
  rs = execSQLselect( select, NULL, FALSE );
  if (rs.MoveNext())
    var PartyID : integer = rs.Value(0);
    НаимКО = GetPartyName(PartyID);

    select = " select t_PartyID" +
             " from ddp_dep_dbt" +
             " where t_Code = :Code";
    params = makeArray( SQLParam("Code", Department ));
    rs = execSQLselect( select, params, FALSE );
    if (rs.MoveNext())
      if( rs.Value(0) != PartyID )
        var PartyName = GetPartyName(rs.Value(0));
        if(PartyName)
          НаимКО = НаимКО + ", филиал " + PartyName;
        end;
      end;
    end;
  end;
  return НаимКО;
end;

macro ПроверитьИНН()
  var INN = GetPartyINN({OurBank}, 1);
  if(RemoveKPP(INN) == "")
    RsbThrow( "Для " + {Name_Bank} + " не задан ИНН" );
  elif(StrLen(RemoveKPP(INN)) != 10)
    RsbThrow( "Для " + {Name_Bank} + " задано неверное значение ИНН" );
  elif(RemoveINN(INN) == "")
    RsbThrow( "Для " + {Name_Bank} + " не задан КПП" );
  elif(StrLen(RemoveINN(INN)) != 9)
    RsbThrow( "Для " + {Name_Bank} + " задано неверное значение КПП" );
  end;
end;

macro РазделитьЗапятымиФИО( ФИО: string ):string
  var pos1 = Index(ФИО, " "); 
  var pos2 = Index(SubStr( ФИО, pos1 + 1 ), " ");
  var result:string = StrSubst(ФИО, " ", ",");
  if( pos1 == 0 )
    result = result + ",,";
  elif( pos2 == 0 )
    result = result + ",";
  end;
  return result;
end;

/*Возвращает часть строки ФИО только до второго символа div*/
macro ФамилияИмя( ФИО: string, div:string ):string
  var pos1 = Index(ФИО, div);                            /* первый div в ФИО */
  var pos2 = Index( substr( ФИО, pos1 + 1 ), div );      /* второй div в ФИО */
  return substr( ФИО, 1, pos1 + pos2 - 1 );
end;

macro ПолучитьФИОПрБ( regval:string )
  var ФИО = РазделитьЗапятымиФИО( Trim( regval ) );
  if( strlen( ФИО ) > 184 )
    ФИО = substr( ФамилияИмя( ФИО, "," ), 1, 184 );
  end;
  return ФИО;
end;

MACRO ReadNoteForAccount( Account:string, FIID:integer, NoteKind:integer ):string

  RECORD AccIn ( account ); 

  ClearRecord( AccIn );
 
  AccIn.Account = Account;
  AccIn.Code_Currency = FIID;
  AccIn.Chapter       = 1;

  var OBID:string = UniID( AccIn, OBJTYPE_ACCOUNT );

  // Заполнить примечание
  return readNoteForObject( OBJTYPE_ACCOUNT, OBID, NoteKind );

END;

macro DeleteWlRepClm( DecisionID )

   var cmd = RSDCommand("delete from dwlrepclm_tmp where t_DecisionID = :DecisionID" );
   cmd.addParam( "", RSDBP_IN, DecisionID );

   cmd.execute();

end;

macro InsertWlRepClm( wldec, ObjKind, ObjID, Account, MesStr )
   var cmd = RSDCommand("insert into dwlrepclm_tmp ( t_DecisionId, t_ObjKind, t_ObjID, t_Account, t_Message )"
                                      " VALUES ( ?,?,?,?,? ) " );
   cmd.addParam( "", RSDBP_IN, wldec.DecisionID );
   cmd.addParam( "", RSDBP_IN, ObjKind );
   cmd.addParam( "", RSDBP_IN, ObjID );
   cmd.addParam( "", RSDBP_IN, Account );
   cmd.addParam( "", RSDBP_IN, MesStr );

   cmd.execute();

end;

macro ЗаписатьПолеДляАннул( FieldName, MesID )
   ЗаписатьПолеЛог(FieldName, GetFldValue( MesID, FieldName ));
end;


PRIVATE MACRO IsEmployer( ClientID:integer ):bool
  PRIVATE FILE persn(persn) key 0;
  persn.PersonID = ClientID;
  if( getEQ(persn) )
    return ( persn.IsEmployer == "X" );
  end;
  return false;
END;

// Получить записи wlacclnk, связанные с объектом
// zmp 20.05.2014 сделал сортировку сначала по рублевым, потом по валютным счетам
macro getRsWlacclnk(ObjectID:integer, ObjectType:integer):RsdRecordset
  var select = " select c.*,  decode(C.T_FIID, 0, 0, 1) fiid_sort  " +                                              
               "   from dwlacclnk_dbt c " +
               "  where t_ObjectID    = :ObjID " +
               "    and t_ObjectType  = :ObjType " +
               " order by fiid_sort, t_Account ";
  var params = makeArray( SQLParam("ObjID", ObjectID),
                          SQLParam("ObjType", ObjectType) );
  var rs = execSQLselect( select, params );
  return rs;
end;

macro ПолучитьВидСчДляСправки(Type_Acc : string): string
  if( (index(Type_Acc, "Ч") != 0) or (index(Type_Acc, "X") != 0) )
    return "расчетный счет";
  elif( index(Type_Acc, "Б") != 0 )
    return "бюджетный счет";
  elif( index(Type_Acc, "К") != 0 )
    return "корреспондентский счет";
  elif( index(Type_Acc, "Я") != 0 )
    return "спец. банковский";
  elif( index(Type_Acc, "Q") != 0 )
    return "спец. брокерский";
  elif( (index(Type_Acc, "J") != 0) OR (index(Type_Acc, "G") != 0) )
    return "депозитный счет";
  end;
  return "расчетный счет";
end;

//TAM 04.09.2014 HF_47
macro IsNDigits(s : string, N : integer, BanFirstZeros : bool) : bool
  if( strlen(s) != N )
    return false;
  end;

  if(not StrIsNumber(s))
    return false;
  end;

  if(BanFirstZeros)
    if( substr(s, 1, 2) == "00" )
      return false;
    end;
  end;

  // все проверки пройдены
  return true;
end;

macro GetCodeNOBWithChecks(BankID : integer) : string
  var КодНОБ : string = "";

  var TaxInstName : string = "";

  // Задана налоговая инспекция банка
  var НалоговаяИнспекция : integer = GetPartyTaxInstitution(BankID, @TaxInstName);
  if(НалоговаяИнспекция <= 0)
    RunError("Не задан налоговый орган по месту учета банка");
  end;

  // У налоговой инспекции банка есть код НО
  var Error : integer = 0;
  КодНОБ = ПолучитьКодСубъекта( НалоговаяИнспекция, PTCK_MNS, Error);
  if(Error or not КодНОБ)
    RsbThrow("Не определен код налогового органа " + TaxInstName);
  end;

  // поле соответсвует шаблону: <xs:pattern value="([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1}){2}"/>
  if( not IsNDigits(КодНОБ, 4, true) or (substr(КодНОБ, 3, 2) == "00") )
    RunError("Неверный код налогового органа банка: " + КодНОБ);
  end;

  return КодНОБ;
end;

private macro AllSymbolsAreEqual(s : string) : bool
  var FirstSymbol : string = substr(s, 1, 1),
      Len : integer = strlen(s);

  var i : integer = 2;

  while(i <= Len)
    if( substr(s, i, 1) != FirstSymbol )
      return FALSE;
    end;

    i = i + 1;
  end;

  return TRUE;
end;
  
macro MNS_CheckObj( Req, kind )
  var PartyID, PartyName, ИНН, КПП, /*ИДГНИБанка,*/ Error, ParentPartyID = 0, Code = "", Name = "", /*TaxInstitution,*/ ИДГНИКлиента, Серия = "" , Номер = "", ДатаРегистрации = date(), OldfnsMessageID, КодНОБ, fldval;
  var Нотариус, Адвокат, УпрТоварищ, ИП, OpenDate = date(0,0,0);
  var Department;
  FILE adress(adress) key 0;
  FILE dp_dep( dp_dep ) key 0;
  FILE party( party ) key 0;
  record Acc(account);
  record OldAcc(account);
  DebugBreak;

  if( kind == ACCMSG_KIND_CLOSE )
    ПолучитьСчет(Req.Code_Currency, Req.Account, Acc );
    OpenDate = Acc.Open_Date;
  elif( kind == ACCMSG_KIND_CHNG )
    ПолучитьСчет(Req.NewAccountFIID, Req.NewAccount, Acc );
    ПолучитьСчет(Req.OldAccountFIID, Req.OldAccount, OldAcc );
  end;
  
  var ClientID = 0;
  if( kind == ACCMSG_KIND_OPEN )
    ClientID = Req.ClientID;
    Department = Req.AccountDepartment;
  elif( kind == ACCMSG_KIND_CLOSE )
    ClientID = Acc.Client;
    Department = Acc.Department;
    OpenDate = Acc.Open_Date;
  elif( kind == ACCMSG_KIND_CHNG )
    ClientID = Acc.Client;
    Department = OldAcc.Department;
  end;

  /*Наименование банка*/
  dp_dep.Code = Department;
  if( GetEQ( dp_dep ) )
    party.PartyID = dp_dep.PartyID;
    if( GetEQ( party ) )
      PartyID = party.PartyID;
      PartyName = party.Name;
      if( party.Name == "" )
        RsbThrow( string( "У субъекта, связанного с филиалом ", dp_dep.Name, " не задано наименование" ) );
      end;
    else
      RsbThrow( string( "Не найден субъект, связанный с филиалом ", dp_dep.Name ) );
    end;
  else
    RsbThrow( string( "Не найден филиал с кодом ", Department ) );
  end;


  if( dp_dep.ParentCode != 0 )
    dp_dep.Code = dp_dep.ParentCode;
    if( GetEQ( dp_dep ) )
      party.PartyID = dp_dep.PartyID;
      ParentPartyID = party.PartyID;
      if( GetEQ( party ) )
        if( party.Name == "" )
          RsbThrow( string( "У субъекта, связанного с филиалом ", dp_dep.Name, " не задано наименование" ) );
        end;
      else
        RsbThrow( string( "Не найден субъект, связанный с филиалом ", dp_dep.Name ) );
      end;
    else
      RsbThrow( string( "Не найден филиал с кодом ", dp_dep.Code ) );
    end;
  end;

  /*ИНН банка*/
  ИНН = RemoveKPP( ПолучитьКодСубъекта( PartyID, PTCK_INN, Error, 0) );
  if( Error or (ИНН == "") )
    RsbThrow(string("Для ", PartyName, " не задан ИНН"));
  end;
  /*Количество символов в ИНН банка*/
  if(strlen(ИНН) != 10)
    RsbThrow( string( "Для ", PartyName, " задано неверное значение ИНН" ) );
  end;
  
  /*КПП банка*/
  КПП = RemoveINN(GetPartyINN( PartyID, 1) );
  if( КПП == "" )
    RsbThrow(string("Для  ",partyname," не задан КПП"));
  end;

  /*Количество символов в КПП банка*/
  if(strlen(КПП) != 9)
    RsbThrow(string("Для ",partyname," задано неверное значение КПП"));
  end;

  // Символы в КПП банка
  if( AllSymbolsAreEqual(КПП) )
    RsbThrow("КПП банка (филиала) " + PartyName + " не должен состоять из одинаковых цифр");
  end;

  /*Задана налоговая инспекция банка*/
  /*У налоговой инспекции банка есть код НО*/
  КодНОБ = GetCodeNOBWithChecks(PartyID);

  /*Адрес банка*/
  CheckAddress(PartyID, PartyName);

  /*Регистрационный номер банка*/
  Code = ПолучитьКодСубъекта( PartyID, PTCK_BANKREGNUM, Error);
  if(Error)
    RsbThrow(string("Для ",partyname," не задан регистрационный номер кредитной организации"));
  end;

  if( ParentPartyID != 0 )
    if( not ( ( Index( Code,"/") != 0 ) and (strlen(SubStr(Code, Index( Code,"/")+1)) != 0) ) )
      RsbThrow(string("Для ",partyname," не задан порядковый номер филиала"));
    end;

  end;
  
  /*БИК банка*/
  ПолучитьКодСубъекта( PartyID, PTCK_BIC, Error, 1, 1);
  if(Error)
    RsbThrow(string("Для ",partyname," не задан БИК"));
  end;

  /*ОГРН банка*/ 
  var OGRN : string = ПолучитьКодСубъекта( PartyID, PTCK_OGRN, Error);
  if(Error or not OGRN)
    RsbThrow(string("Для ", partyname ," не задан ОГРН"));
  end;

  // Количество символов в ОГРН банка
  if( strlen(OGRN) != 13 )
    RsbThrow(string("Для ", partyname ," задано неверное значение ОГРН"));
  end;

  /*Наименование клиента*/
  if( ПолучитьСубъекта(ClientID, party) )
    RsbThrow(string("Не найден налогоплательщик ", ClientID));
  end;

  if(party.Name == "")
    RsbThrow(string("Для клиента c ИД ",party.PartyID," не задано наименование"));
  end;

  ИП = IsIndividualEmployer(party.PartyID);
  var sClientID : string = UniID( party, OBJTYPE_PARTY );
  CheckObjAttrPresence( Нотариус, OBJTYPE_PARTY, sClientID, 
                        PARTY_ATTR_GROUP_PTTYPE, null, "", ТипСубъекта_Нотариус ); 
  CheckObjAttrPresence( Адвокат,  OBJTYPE_PARTY, sClientID, 
                        PARTY_ATTR_GROUP_PTTYPE, null, "", ТипСубъекта_Адвокат );
  CheckObjAttrPresence( УпрТоварищ, OBJTYPE_PARTY, sClientID, PARTY_ATTR_GROUP_PTTYPE, PARTY_ATTR_PTTYPE_MANAGPARTNER);

   /*ИНН клиента*/
  //Gurin S. 16.01.2014 R-315232-2 адаптация 31 патча ИНН заменил на INN_Client
  var INN_KPP_Client:string = GetPartyINN( party.PartyID, 1);
  var INN_Client:string = RemoveKPP( INN_KPP_Client );
  if( INN_Client == "" )
    if( (kind == ACCMSG_KIND_CLOSE) and 
        ( 
          (( OpenDate < date(22,9,1994)) and (party.LegalForm == PTLEGF_INST) and (party.NotResident != "X")) or
          (( OpenDate < date(22,9,1996)) and ((party.LegalForm == PTLEGF_INST) and (party.NotResident == "X") or ИП or Нотариус)) or
          (( OpenDate < date(1,1,2004)) and  (Адвокат))
        )
      ) 
      msgbox(string("Реквизит ИНННП не заполнен. Сообщение о закрытии счета, |содержащее незаполненные реквизиты ИНННП, КППНП, ОГРННП, СвидГР, |должно быть направлено в налоговый орган на бумажном носителе"));
    else
      RsbThrow(string("Для ", party.Name, " не задан ИНН"));
    end;
  end;

  /*Количество символов в ИНН клиента*/
     // Lavrenov 06.06.2012 I-00204447-2 Проверку на нерезидентность убрал 
  if(((party.LegalForm == PTLEGF_INST) /*and (party.NotResident != "X")*/ and (strlen(INN_Client) != 10) and (strlen(INN_Client) != 5 ) ) or 
     //((party.LegalForm == PTLEGF_INST) /*and (party.NotResident == "X")*/ and (strlen(ИНН) != 5 )) or 
     ((party.LegalForm != PTLEGF_INST) and (strlen(INN_Client) != 12)))
     // Lavrenov 06.06.2012 I-00204447-2 Проверка вынесена из mnsgmsbc.mac 
     if ( not getTrue(true, "Длина ИНН клиента составляет " + StrLen(INN_Client) + " символов (ИНН = " + INN_Client + ").|" +
                             "Формировать сообщение с таким ИНН?") )
    RsbThrow(string("Для ",party.Name," задано неверное значение ИНН"));
     end;
  end;

  /*КПП клиента*/
  //Gurin S. 16.01.2014 R-315232-2 адаптация 31 патча КПП заменил на KPP_Client
  var KPP_Client:string = RemoveINN( INN_KPP_Client );
  if( strlen( INN_Client ) == 10 )
    if( KPP_Client == "")
      if( (kind == ACCMSG_KIND_CLOSE) and ((Req.SubKind == 3) or (Req.SubKind == 2)) and ( OpenDate < date(1,1,1999)))
        msgbox("Реквизит КППНП не заполнен. Сообщение о закрытии счета, |содержащее незаполненные реквизиты ИНННП, КППНП, ОГРННП, СвидГР,| должно быть направлено в налоговый орган на бумажном носителе");
      elif(kind == ACCMSG_KIND_OPEN)
        RsbThrow(string("Для  ",party.Name," не задан КПП"));
      end;
    end;

   /*Количество символов в КПП клиента*/
    if((strlen(KPP_Client) != 9) and (kind == ACCMSG_KIND_OPEN))
      RsbThrow(string("Для ",party.Name," задано неверное значение КПП"));
      end;
    end;
  // Символы в КПП клиента не совпадают
  if( (strlen(KPP_Client) > 1) and AllSymbolsAreEqual(KPP_Client) )
    RsbThrow(string("КПП ",party.Name," не должен состоять из одинаковых цифр"));
  end;
 

  /*Свидетельство о государственной регистрации*/
  ИДГНИКлиента = ПолучитьИДГНИ(party.PartyID, Серия, Номер, ДатаРегистрации, СвидетельствоОПостановкеНаУчет );
  if( (Серия == "") or (Номер == "") )
    if( kind == ACCMSG_KIND_OPEN )
      RsbThrow(string("Для ", party.Name, " отсутствуют данные о постановке на учет в налоговом органе"));
    elif((kind == ACCMSG_KIND_CLOSE) and 
         ( ( OpenDate < date(1,7,2002)) and (party.LegalForm == PTLEGF_INST) and (party.NotResident != "X")) or
         ( ( OpenDate < date(1,1,2004)) and ИП ) 
        )
        msgbox("Реквизит СвидГР не заполнен. Сообщение о закрытии счета, |содержащее незаполненные реквизиты ИНННП, КППНП, ОГРННП, СвидГР,| должно быть направлено в налоговый орган на бумажном носителе");  
    end;
  end;
  
  /*Номер договора*/
  /*Тип счета*/ 
  if( kind == ACCMSG_KIND_OPEN )
    if(Req.SfContrNum == "")
      RsbThrow(string("Не задан номер договора счета"));
    end;

    if( Req.Type_Account == "")
      RsbThrow(string("Не задан вид счета в соответствии с Инструкцией Банка России 28-И"));
    end;
    
  end;

  /* Проверка наличиа ОГРН у клиента
   * ( у нерезидента, адвоката, нотариуса и упр.товарища ОГРН быть не обязан )
   */
  //Gurin S. 08.10.2014 I-00520579-2 Сообщение об отсутствии ОГРН
  var OGRN_Client:string = "";
  OGRN_Client = ПолучитьКодСубъекта(party.PartyID, PTCK_OGRN, Error, 0, 1 );
  if((OGRN_Client != "") and (party.NotResident != "X") and (not Адвокат) and (not Нотариус) and (not УпрТоварищ) )
     /* Проверка длины ОГРН клиента */
     if( OGRN_Client )
        if( ( strlen( INN_Client ) == 10 ) and ( strlen( OGRN_Client ) != 13 ) )
           RsbThrow( string( "Для ", party.Name, " задано неверное значение ОГРН.|Длина ОГРН должна быть 13 символов." ) );
        elif( ( strlen( INN_Client ) == 12 ) and ( strlen( OGRN_Client ) != 15 ) )
           RsbThrow( string( "Для ", party.Name, " задано неверное значение ОГРН.|Длина ОГРН должна быть 15 символов." ) );
        end;
     end;            
  else
     if (OGRN_Client == "") 
        if (getTrue(true, "У клиента отсутствует ОГРН. | Формировать сообщение без него?"))
           OGRN_Client = " ";
        else
           if( Error or ( not OGRN_Client ) )
              RsbThrow(string("Для  ",party.Name," не задан ОГРН"));
           end;
       end;
    end;
  end;

  /*Сотрудник, подписывающий сообщение*/

  Error = GetRegValForOPENAC("ИМНС_ФИО", V_STRING, Name);
  if( Error or (Name == ""))
    RsbThrow(string("Не заданы ФИО сотрудника, подписывающего сообщения в ФНС"));
  end;

    return true;

  OnError(er) /* обработка ошибок */
    ExeptionMessage(er);
    return FALSE;

end;
  
macro CheckCorrectMes(ClientID : integer, КодНОБ : string, kind : integer) : bool

  if( GetKindActionFNS() ==  KIND_ACTION_FNS_CORRECT )
    var OldfnsMessageID : integer = GetOldfnsMessageID(),
        Error : integer = 0,
        fldval : string = "";
    
    /*ОГРННП*/
    var Code : string = ПолучитьКодСубъекта(ClientID, PTCK_OGRN, Error, 0, 1 );
    fldval = GetFldValue( OldfnsMessageID, "ОГРННП" );
    if ((fldval != "") and (fldval != Code))
      if(not AskCorrectAction("ОГРННП"))
        return false;
      end;
    end;    
    /*ИНННП*/     
    var ИНН : string = RemoveKPP(GetPartyINN( ClientID, 1) );
    fldval = GetFldValue( OldfnsMessageID, "ИНННП" );
    if (fldval != ИНН)
      if(not AskCorrectAction("ИНННП"))
        return false;
      end;
    end;    
    /*ИННКО*/
    ИНН = RemoveKPP(GetPartyINN( {OurBank}, 1) );
    fldval = GetFldValue( OldfnsMessageID, "ИННКО" );
    if(fldval != ИНН)
      if(not AskCorrectAction("ИННКО"))
        return false; 
      end;
    end;    
    /*КодНОБ*/
    fldval = GetFldValue( OldfnsMessageID, "КодНОБ" );
    if(fldval != КодНОБ)
      if(not AskCorrectAction("КодНОБ"))
        return false;
      end;

    end;

    if(kind == ACCMSG_KIND_CHNG)           
      /*ПризнИзмСч*/
      fldval = GetFldValue( OldfnsMessageID, "ПризнИзмНСч" );
      if( (fldval != "") and (fldval != "0"))
        if(not AskCorrectAction("ПризнИзмНСч"))
          return false;
        end;
      end;
      
      /*ПризнИзмКО*/
      fldval = GetFldValue( OldfnsMessageID, "ПризнИзмКО" );
      if( (fldval != "") and (fldval != "0"))
        if(not AskCorrectAction("ПризнИзмКО"))
          return false;
        end;
      end;      

    end;
  end;

  return true;
end;

//TAM 04.09.2014 HF_74
class TCorrectMesFNS
  var НомСооб : string = "",
      КодНОБ : string = "",
      ИННКО : string = "",
      РегНом : string = "",
      НомФ : string = "";

  private macro CheckFld(FieldName : string, FieldValue : string) : bool
    var OldFieldValue : string = GetFldValue( GetOldfnsMessageID(), FieldName );

    if(OldFieldValue != FieldValue)
      if(not AskCorrectAction(FieldName))
        return false; 
      end;
    end;

    return true;
  end;

  macro Check() : bool
    if( (GetKindActionFNS() == KIND_ACTION_FNS_CORRECT) and
        (GetKindRegOrgan() == REG_ORGAN_KIND_FNS)
      )

      if( not CheckFld("НомСооб", НомСооб) )
        return false; 
      end;

      if( not CheckFld("КодНОБ", КодНОБ) )
        return false; 
      end;

      if( not CheckFld("ИННКО", ИННКО) )
        return false; 
      end;

      if( not CheckFld("РегНом", РегНом) )
        return false; 
      end;

      if( not CheckFld("НомФ", НомФ) )
        return false; 
      end;

    end;

    return true;
  end;

end;

macro ПолучитьБИКГоловногоФилиала( PartyID )

  var DpHeadBIC = {MFO_Bank};

  var DpHeadID : integer = GetTSHeadPartyID( PartyID );
  if( DpHeadID > 0 )
  var err;
    DpHeadBIC = ПолучитьКодСубъекта( DpHeadID, PTCK_BIC, err );
  end;

  return DpHeadBIC;
end;

// Проверки справок ФНС
macro CheckObj_FNSINFO( regdec )
  
  FILE party( party ) key 0; // ключ по PartyID
  var Code = "", Error = 0;
  
  //--------------------------------------------------------------------------
  // Originator
  var PartyName = "", ParentPartyID = 0;
  FILE dp_dep( dp_dep ) key 0; // ключ по Code

  // Наименование банка
  party.PartyID = regdec.OriginatorID;
  if( GetEQ( party ) )
    PartyName = party.Name;
    if( party.Name == "" )
      RsbThrow( string( "Для ", regdec.OriginatorCode, " не задано наименование " ) );
    end;
  else
    RsbThrow( string( "Не найден субъект ", regdec.OriginatorID ) );
  end;
  //Если связанный с субъектом филиал не является головной организацией (dp_dep.ParentCode), 
  // то также задано полное наименование субъекта - головной организации
  var rs_dp_dep      = getRsDpDepByPartyID    ( regdec.OriginatorID );
  if( ( rs_dp_dep ) and ( rs_dp_dep.moveNext() ) )
    if( rs_dp_dep.value("t_ParentCode") != 0 )      
      ParentPartyID = GetTSHeadPartyID( regdec.OriginatorID );
      if( ParentPartyID > 0 )
        party.PartyID = ParentPartyID;
        if( GetEQ( party ) )
          if( party.Name == "" )
            RsbThrow( string( "Для ", regdec.OriginatorCode, " не задано наименование " ) );
          end;
        else
          RsbThrow( string( "Не найден субъект, связанный с филиалом ", rs_dp_dep.value("t_Name") ) );
        end;
      else
        RsbThrow( "Не найден головной филиал" );
      end;
    end;
  else
    RsbThrow( string( "Субъект ", regdec.OriginatorID, " не является филиалом нашего банка" ) );
  end;

  /*ИНН банка*/
  var ИНН : string = RemoveKPP( ПолучитьКодСубъекта(regdec.OriginatorID, PTCK_INN, Error, 0) );
  if( Error or (ИНН == "") )
    RsbThrow(string("Для ", PartyName, " не задан ИНН"));
  end;
  
  /*Количество символов в ИНН банка*/
  if(strlen(ИНН) != 10)
    RsbThrow( string( "Для ", PartyName, " задано неверное значение ИНН" ) );
  end;
  
  /*КПП банка*/
  var КПП : string = RemoveINN( GetPartyINN( regdec.OriginatorID, 1) );
  if( КПП == "" )
    RsbThrow(string("Для  ", PartyName, " не задан КПП"));
  end;

  /*Количество символов в КПП банка*/
  if(strlen(КПП) != 9)
    RsbThrow(string("Для ", PartyName, " задано неверное значение КПП"));
  end;

  /*Регистрационный номер банка*/
  Code = ПолучитьКодСубъекта( regdec.OriginatorID, PTCK_BANKREGNUM, Error);
  if(Error)
    RsbThrow(string("Для ", PartyName, " не задан регистрационный номер кредитной организации"));
  end;

  // Регистрационный номер филиала
  if( ParentPartyID != 0 )
    if( not ( ( Index( Code,"/") != 0 ) and (strlen(SubStr(Code, Index( Code,"/")+1)) != 0) ) )
      RsbThrow(string("Для ", PartyName, " не задан порядковый номер филиала"));
    end;
  end;  
  
  /*БИК банка*/
  ПолучитьКодСубъекта( regdec.OriginatorID, PTCK_BIC, Error, 1, 1);
  if(Error)
    RsbThrow(string("Для ", PartyName, " не задан БИК"));
  end;

  //--------------------------------------------------------------------------
  // Client
  record ClientParty(party);
  if (regdec.ClientID > 0)
    if( ПолучитьСубъекта(regdec.ClientID, ClientParty) )
      RsbThrow(string("Не найден налогоплательщик ", regdec.ClientID));
    end;
    Code = ПолучитьКодСубъекта( regdec.ClientID, PTCK_CONTR, Error);
    if(Error)
      Code = "";
    end;
  else
    Code = "";
  end;
        
  /*Наименование клиента*/
  var ClientName = "";
  if ( strlen(regdec.ClientINN) != 12 )
    // Наименование клиента юридического лица
    if (regdec.ClientID > 0)
      if(ClientParty.Name)
        ClientName = ClientParty.Name;
      else
        RsbThrow(string("Для клиента ", Code, " не задано наименование"));      
      end;
    else
      if(regdec.ClientName)
        ClientName = regdec.ClientName;
      else
        RsbThrow(string("Для клиента ", Code, " не задано наименование"));
      end;
    end;
  else
    // Наименование клиента физического лица
    if (regdec.ClientID > 0)
      var persn = Tbfile("persn.dbt", "r");
      persn.rec.PersonID = regdec.ClientID;
      if( GetEQ(persn) )
        if(persn.rec.Name1)
          ClientName = persn.rec.Name1;
        else
          RsbThrow( string("Для клиента ", Code, " не задана фамилия") );
        end;
        if(persn.rec.Name2)
          ClientName = ClientName + " " + persn.rec.Name2;
        else
          RsbThrow( string("Для клиента ", Code, " не задано имя") );
        end;
      else
        RsbThrow( string("Не найдено физическое лицо ", regdec.ClientID) );
      end;
    else
      ClientName = Trim(regdec.ClientName);
      if(ClientName == "")
        RsbThrow( string("Для клиента ", Code, " не задана фамилия") );
      end;
      if( index(ClientName, " ") == 0 )
        RsbThrow( string("Для клиента ", Code, " не задано имя") );
      end;
    end;
  end;

  if(regdec.ClientINN == "")
    RsbThrow( string("Для ", ClientName, " не задан ИНН") );
  end;

  /*Количество символов в ИНН клиента*/
  if(regdec.ClientID > 0)
    if( ((ClientParty.LegalForm == PTLEGF_INST) and 
         (ClientParty.NotResident != "X") and 
         (strlen(regdec.ClientINN) != 10)
        ) or 
        ((ClientParty.LegalForm == PTLEGF_INST) and 
         (ClientParty.NotResident == "X") and 
         (strlen(regdec.ClientINN) != 5 ) and (strlen(regdec.ClientINN) != 10)
        ) or 
        ((ClientParty.LegalForm == PTLEGF_PERSN) and (strlen(regdec.ClientINN) != 12)) )
      RsbThrow(string("Для ", ClientName, " задано неверное значение ИНН"));
    end;
  end;
  
  if( strlen(regdec.ClientINN) == 10 ) 
    /*КПП клиента*/
    if (regdec.ClientKPP == "")
      RsbThrow(string("Для ", ClientName, " не задан КПП"));
    end;
    /*Количество символов в КПП клиента*/
    if ( strlen(regdec.ClientKPP) != 9 )
      RsbThrow(string("Для ", ClientName, " задано неверное значение КПП"));
    end;
  end;

  /*Сотрудник, подписывающий сообщение*/
  var tmpstr = "";
  Error = GetDprtStringRegValForOPENAC( "СПРАВКИ_ИФНС_ДОЛЖ", rs_dp_dep.value("t_Code"), @tmpstr );
  if( Error or ( Trim(tmpstr) == "") )
    RsbThrow(string("Не задана должность сотрудника, подписывающего сообщения в ФНС"));
  end;
  Error = GetDprtStringRegValForOPENAC( "СПРАВКИ_ИФНС_ФИО", rs_dp_dep.value("t_Code"), @tmpstr );
  tmpstr = Trim(tmpstr);
  if( Error or (tmpstr == "") or (index(tmpstr, " ") == 0) )  
    RsbThrow(string("Не заданы ФИО сотрудника, подписывающего сообщения в ФНС"));
  end;
/*  Error = GetRegValForOPENAC("СПРАВКИ_ИФНС_ДОЛЖ", V_STRING, tmpstr);
  if( Error or ( Trim(tmpstr) == "") )
    RsbThrow(string("Не заданы ФИО сотрудника, подписывающего сообщения в ФНС"));
  end;
  Error = GetRegValForOPENAC("СПРАВКИ_ИФНС_ФИО", V_STRING, tmpstr);
  if( Error or (tmpstr == "") or (index(tmpstr, " ") == 0) )
    RsbThrow(string("Не заданы ФИО сотрудника, подписывающего сообщения в ФНС"));
  end;*/
  
  
  /*Имя файла исходного сообщения*/ 
  var note : string = readNoteForObject(OBJTYPE_FNSINFO, 
                                        makeObjectID(OBJTYPE_FNSINFO, NULL, regdec), 
                                        2 /* NOTEKIND_FNSINFO_INITIALFILENAME */);
  if(note)
    /*Количество символов в имени файла*/
    if(strlen(note) != 31)
      RsbThrow("Неверно задано имя файла запроса ФНС или решения рег. органа");
    end;
  else
    RsbThrow("Не задано имя файла запроса ФНС или решения рег. органа");
  end;

  /*Символы в  номере */
  if ( (strlen(regdec.Number) > 6) or (not StrIsNumber(regdec.Number)) )
    RsbThrow("Неверно задан номер справки (выписки)");
  end;

  /*Символы в номере связанного объекта*/
  if ( (strlen(regdec.LnkDocNumber) > 6) or (not StrIsNumber(regdec.LnkDocNumber)) )
    RsbThrow("Неверно задан номер связанного объекта");
  end;

  return true;

  OnError(er) /* обработка ошибок */
    ExeptionMessage(er);
    return FALSE;

end;

// Найти ID юр.лица по его ИНН
macro GetLegalPersonIDByINN( inn:string )
  var rs:object;
  var select:string;
  var params:TArray;
    
  select = " select pt.t_PartyID"+
             " from dpartcode_dbt code, dparty_dbt pt"+
            " where code.t_PartyID = pt.t_PartyID"+
              " and pt.t_LegalForm = :legalForm"+
              " and SUBSTR (code.t_Code, 1, 10) like :Code"+
              " and code.t_CodeKind = :CodeKind";
  params = makeArray( SQLParam("legalForm",PTLEGF_INST),
                      SQLParam("Code", inn ),
                      SQLParam("CodeKind",PTCK_INN));
  
  rs = execSQLselect( select, params, FALSE );
  
  if(rs.moveNext())
    return rs.value(0);
  end;     

  return 0;
end;

/* Было ли сообщение уже загружено */
macro CheckOnDoubling( TRN, Релиз ):bool
               
  var rs:object;
  var select:string;
  var params:TArray;
  /* Если уже было такое сообщение от корреспондента - не закачиваем */
  select = "select mes.t_RlsFormID from dwlmes_dbt mes "+
           "where  mes.t_Direct='X' and "
                  "mes.t_Department =:OperD and "+ 
                  "mes.t_TRN =:NumberDoc and "+
                  "mes.t_RlsFormID = :RlsFormID";  
  params = makeArray( SQLParam("OperD",     {OperDprt}),
                      SQLParam("NumberDoc", TRN),
                      SQLParam("RlsFormID", Релиз) );  

  rs = execSQLselect( select, params, FALSE );

  var continue0 = rs.MoveNext();
  while( continue0 )
    if( rs.value(0) == Релиз )
      std.out( 1, "Cообщение уже было принято - игнорируется" );
      return false;
    end;
    continue0 = rs.MoveNext();
  end;
  return true;
end;


//TAM 04.09.2014 HF_74
/***************************************************************************/
/*  Функция формирования идентификатора файла                              */
/*  Возвращает в случае неудачи пустую строку                              */
/***************************************************************************/
macro MakeIDFile(ExportFileName : string, FormName : string)
   var retStr : string = "", Num : string = "", fname : string = "", ext : string = "";

   if( (FormName == "BOS") or 
       (FormName == "BNS") or
       (FormName == "BV") )
     Num = execStoredFunc( "sys_guid", V_STRING );
   else
     SplitFile ( ExportFileName, fname,ext );
     Num = SubStr(fname, 9, 6);
   end;
   if(not Num)
      return Num;
   end;
   retStr = string(ПолучитьИдентификаторОтправителя(), YYYYMMDD(date()), Num);
   return retStr;
end;

macro PutPersData_Default(Name1, Name2, Name3, Officer, Phone): integer
  Name1 = Name2 = Name3 = Officer = Phone = "";

  var q = "SELECT persn.t_Name1, persn.t_Name2, persn.t_Name3, "
          "       officer.t_Post, officer.t_PhoneNumber "
          "  FROM dpersn_dbt persn, dofficer_dbt officer, dperson_dbt person "
          " WHERE officer.t_PersonID = person.t_PartyID "
          "   AND persn.t_PersonID   = person.t_PartyID "
          "   AND person.t_Oper      = :Oper "
          "   AND officer.t_PartyID = :OurBank ";

  var rs = execSQLselect(q, makeArray( SQLParam("Oper", {Oper}),
                                       SQLParam("OurBank", {OurBank}) )
                        );

  if(rs and rs.moveNext())
    Name1 = rs.value(0);
    Name2 = rs.value(1);
    Name3 = rs.value(2);
    Officer = rs.value(3);
    Phone = rs.value(4);
  end;

  SetParm(0, Name1);
  SetParm(1, Name2);
  SetParm(2, Name3);
  SetParm(3, Officer);
  SetParm(4, Phone);

  return 0;
end;

macro GetRegOrgKindByFormName( ИмяФормы : string ) : integer

  var ВидРегОргана : integer = 0;

  if((ИмяФормы=="SBE") or (ИмяФормы=="SBF") or (ИмяФормы=="SBK") or (ИмяФормы=="KWT"))
    ВидРегОргана = REG_ORGAN_KIND_FNS;
  elif((ИмяФормы=="SBP") or (ИмяФормы=="SBN") )
    ВидРегОргана = REG_ORGAN_KIND_PFR;
  elif((ИмяФормы=="SBR") or (ИмяФормы=="SBT") )
    ВидРегОргана = REG_ORGAN_KIND_FSS;
  end;

  return ВидРегОргана;
end;

// Поиск исходящего сообщения SBC для квитовки со входящим SBF, SBK
macro GetKvitSBC
(
  InMesID : integer,
  NumMes : string,
  InsideAbonentID : @integer,
  InsideAbonentCodeKind : @integer,
  InsideAbonentCode : @string,
  InMesFileName : @string,
  TRN : @string,
  State : @integer

) : integer

  var OutMesID : integer = 0;

  var rs : object;
  var select : string, from : string, where : string;
  var params : TArray;

  // Сообщение банка об открытии (закрытии) счета, об изменении реквизитов счета и 
  // квитанция о принятии (непринятии) сообщения банка квитуются по совпадению 
  // (кроме третьей буквы) имен файлов
  select = "select mes.t_MesID, mes.t_state, mes.t_TRN, "+
            " UPPER(name.t_ShortFileName) as t_ShortFileName," +
            " mes.t_InsideAbonentID, mes.t_InsideAbonentCodeKind, mes.t_InsideAbonentCode ";
    from =   " from (select substr(sess.t_filename, instr(sess.t_filename, '\\', -1, 1) + 1) t_ShortFileName"+
                   " from dwlmes_dbt mes, dwlsess_dbt sess"+ 
                  " where mes.t_MesID = :MesID"+
                    " and mes.t_sessionid = sess.t_sessionid) name,"+
                    " dwlmes_dbt mes,"+ 
                    " dwlsess_dbt sess";
    where = " where mes.t_sessionid = sess.t_sessionid"+
              " and upper(substr(sess.t_filename, instr(sess.t_filename, '\\', -1, 1) + 1)) = upper(substr(name.t_ShortFileName,1,2) || 'C' || substr(name.t_ShortFileName,4))";
  params = makeArray( SQLParam("MesID", wlmes.MesID) );

  rs = execSQLSelect( select + from + where, params, true );

  var isFoundMes : bool = rs.MoveNext();

  if( not isFoundMes )
    // вторая попытка - ищем по полю НомСооб
    if( NumMes != "" )
      where  =  "where mes.t_Direct = chr(0) " +
                  "and mes.t_MesID = val.t_MesID " + 
                  "and val.t_TpFieldID = (select t_tpFieldID from dwltpfld_dbt where t_Name = 'НомСооб') " +
                  "and val.t_Value = :Val";
      
      params = makeArray( SQLParam( "MesID", wlmes.MesID ),
                          SQLParam( "Val"  , NumMes ) );

      rs = execSQLSelect (select + from + ", dwlmesval_dbt val " + where ,params,true);

      isFoundMes = rs.MoveNext();
    end;
  end;

  if( isFoundMes )
    OutMesID = rs.value("t_MesID");
    InsideAbonentID = rs.value("t_InsideAbonentID");
    InsideAbonentCodeKind = rs.value("t_InsideAbonentCodeKind");
    InsideAbonentCode = rs.value("t_InsideAbonentCode");
    InMesFileName = rs.value("t_ShortFileName");
    TRN = rs.value("t_TRN");
    State = rs.value("t_State");
  end;

  return OutMesID;
end;

macro GetInsideAbonentForSBF
( MesDprt : integer, 
  InsideAbonentID : @integer,
  InsideAbonentCodeKind : @integer,
  InsideAbonentCode : @string

) : bool
  var rs = execSQLSelect( "select dpd.t_PartyID, pc.t_Code " +
                            "from ddp_dep_dbt dpd " +
                            "join dpartcode_dbt pc on pc.t_PartyID = dpd.t_PartyID " +
                           "where pc.t_CodeKind = :PTCK_CONTR and dpd.t_Code = :Dprt ",
                          makeArray( SQLParam("PTCK_CONTR", PTCK_CONTR),
                                     SQLParam("Dprt", MesDprt) )
                        );

  if(rs and rs.moveNext())
    InsideAbonentID = rs.value("t_PartyID");
    InsideAbonentCodeKind = PTCK_CONTR;
    InsideAbonentCode = rs.value("t_Code");
    return TRUE;
  end;

  return FALSE;
end;

private macro GetRegPartyKindShortName( RegPartyKind : integer ) : string

  var Tb_Objkrgpt = Tbfile("Objkrgpt.dbt");
  Tb_Objkrgpt.rec.RegPartyKind = RegPartyKind;

  if(GetEQ(Tb_Objkrgpt))
     return Tb_Objkrgpt.rec.ShortName;
  end;

  return "";
end;

macro GetConfDelivDescription(RegOrgKind : integer) : string
  var Description : string = "";

  if( GetElementAndNoteLLVALUES( OBJTYPE_WLRESCODE_MNS, 0, NULL, Description ) )
    Description = Description + " подразделением " + GetRegPartyKindShortName(RegOrgKind);
  end;

  return Description;
end;
