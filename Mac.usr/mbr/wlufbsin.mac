/****************************************************************************/
/*                   R-Style SoftWare Lab, RS-Bank 5.1                      */
/****************************************************************************/
/*                  Подсистема "Межбанковские расчеты"                      */
/*                      Импорт  сообщений  УФЭБС                            */
/*                                                                          */
/*  Имя файла: wlufbsin.mac                                                 */
/*  Создан:  06.10.04                                         BARS          */
/*           29.03.14 Gurin S.              УФЭБС альбом v2.6.0             */
/****************************************************************************/

import "wlimport.mac", "wluftool.mac", "wlufsign.mac", "xmlmestools.mac"; //TAM 04.09.2014 HF_74
import "fg_Life_parm.mac";      // EVG 22/1/2016

const CONTEXTID_CHECK_SIGN_UFBS = "ТранспортМБР|9|Импорт_файла";

var ver_st = 1;
var PacketDate = ""; 
var NumberRace : integer = null;

var vOurBank = fg_life_subject({OurBank});      // EVG 22/1/2016


macro ОбработатьДочернийЭлемент( node:object )
   var i, child:object;
   var chNodeList:object;
   i=0;

   if( not УстановитьКонтекстБлока(GetNodeName(node.nodeName)) )
     return;
   end;

   if( not ЗаписатьПоле( beginField, GetNodeName(node.nodeName) ) )
     RunError( "Ошибка записи поля: " + beginField );     
   end;

   /*Получить список атрибутов узла*/
   while( i < node.attributes.length )
     child = node.attributes.item(i);
     if( child and (child.nodeType==ATTR_NODE) )        
       ЗаписатьПоле( GetNodeName(child.nodeName), child.nodeValue );
     end;
     i=i+1;
   end;
   chNodeList = node.childNodes();
   if( chNodeList.length() )      
     i=0;
     while( (child = chNodeList.item(i)) != NULL )
       if(child.nodeType==TEXT_NODE)
         ЗаписатьПоле( GetNodeName(node.nodeName), child.nodeValue );        
       else
         ОбработатьДочернийЭлемент(child);
       end;
       i=i+1;
     end;
   end;
   
   if( not ЗаписатьПоле( endField, GetNodeName(node.nodeName) ))
     RunError( "Ошибка записи поля: " + endField );     
   end;

   if( not УстановитьКонтекстБлока("..") )
     RunError( "Ошибка при установке нулевого контекста блока" );
   end;

end;
macro ОбработатьСообщениеED374( node:object )
   var i, child:object;
   var chNodeList:object;
   i=0;
   /*Получить список атрибутов узла*/
   while( i < node.attributes.length )
     child = node.attributes.item(i);
     if( child and (child.nodeType==ATTR_NODE) )        
       ЗаписатьПоле( GetNodeName(child.nodeName), child.nodeValue );
     end;
     i=i+1;
   end;
   chNodeList = node.childNodes();
   if( chNodeList.length() )      
     i=0;
     while( (child = chNodeList.item(i)) != NULL )
       if( child.nodeType==TEXT_NODE )        
         ЗаписатьПоле( GetNodeName(node.nodeName), child.nodeValue );
       else
         ОбработатьДочернийЭлемент(child);
       end;
       i=i+1;
     end;
   end;

end;

macro ОбработатьСообщениеСложнойФормы( node:object )
   var i, child:object;
   var chNodeList:object;
   i=0;
   /*Получить список атрибутов узла*/
   while( i < node.attributes.length )
     child = node.attributes.item(i);
     if( child and (child.nodeType==ATTR_NODE) )        
       ЗаписатьПоле( GetNodeName(child.nodeName), child.nodeValue );
     end;
     i=i+1;
   end;
   chNodeList = node.childNodes();
   if( chNodeList.length() )      
     i=0;
     while( (child = chNodeList.item(i)) != NULL )
       if( child.nodeType==TEXT_NODE )        
         ЗаписатьПоле( GetNodeName(node.nodeName), child.nodeValue );
       else
         ОбработатьДочернийЭлемент(child);
       end;
       i=i+1;
     end;
   end;

end;

/*Сложить содержимое повторяющихся блоков в один массив*/
/*??? Пока не допускается повторяющихся полей, содержащих повторяющиеся поля*/
macro CutInsideContent(pat:string, node:object, arr:object) :bool
  
   var chNode:object;
   var chNodeList:object;
   var i = 0;
       
   /* Получаем список подчиненных узлов */
   chNodeList = node.childNodes();    
   if( chNodeList.length() )      
      while( (chNode = chNodeList.item(i)) != NULL )
         if( (StrUpr(GetNodeName(chNode.NodeName)) == StrUpr(pat)))
            /* Сохраняем узел документа выписки */
            arr(arr.Size()) = StrSubst(StrSubst(StrSubst(String(chNode.xml),StrFor(13),""),StrFor(10),""),StrFor(9),"");
            /* Удаляем узел из списка */
            if( node.removeChild( chNode ) == NULL )
               RunError( "Ошибка при удалении узла: " + pat );     
               return false;
            end;
         else
            i = i + 1;
         end;
      end;
   end;

   return true;
end;

macro CutNodeText(node:object, arr:object, NodeName:string)
   var chNode:object;
   var chNodeList:object;
   var i = 0, ind = 0;
   var NodeText:string;
   /* Получаем список подчиненных узлов */
   chNodeList = node.childNodes();    
   if( chNodeList.length() )      
     while( (chNode = chNodeList.item(i)) != NULL )
       if( (StrUpr(GetNodeName(chNode.NodeName)) == StrUpr(NodeName)))
         NodeText = chNode.Text;
         while(strlen(NodeText)) 
           ind = 0;
           ind = index(NodeText,SYMB_ENDL);
           if(ind and (ind <= 2000))
             arr(arr.Size()) = SubStr(NodeText,1,ind);
             NodeText = SubStr(NodeText,ind+1);
           elif( strlen(NodeText) > 2000 )
             arr(arr.Size()) = SubStr(NodeText,1,2000);
             NodeText = SubStr(NodeText,2001);
           else
             arr(arr.Size()) = NodeText;
             NodeText = "";
           end;
         end;
          
          /* Удаляем узел из списка */
         if( node.removeChild( chNode ) == NULL )
           RunError( "Ошибка при удалении узла: " + NodeName);     
           return false;
         end;
       else
          i = i + 1;
       end;
     end;
   end;

   return true;
end;

private var thisRespID:integer, thisRespIDError:integer;

private macro GetRespID( error:@integer ):integer
  if( valtype( thisRespID ) == V_UNDEF )
    thisRespID = GetCodeParty( {MFO_RCC}, PTCK_BIC, thisRespIDError );
  end;
  error = thisRespIDError;
  return thisRespID;
end;

private macro IsCompoundForm(FormName : string) : bool
  return ( (FormName == NodeED374) or
           (FormName == NodeED244) or
           (FormName == NodeED332) or
           (FormName == NodeED379) or
           (FormName == NodeED381) or
           (FormName == NodeED375) 
         );
end;

private macro ProcessSessionID(node : object, NumberRace : @integer)

  macro IsPacketNode(node : object) : bool
    if( SubStr( StrUpr( node.BaseName ), 1, 6) == "PACKET" )
      return true;
    end;

    return false;
  end;

  macro IsEDXXXNode(NodeName : string) : bool
    if( (substr(NodeName, 1, 2) == "ED") and
        StrIsNumber( substr(NodeName, 3, 3) )
      )
      return true;
    end;

    return false;
  end;

  macro NeedProcessSessionID(node : object, NumberRace : integer) : bool

    if( (NumberRace == null) 
        and
        ( IsPacketNode(node) or IsEDXXXNode(GetNodeName(node.NodeName)) )
      )
      return true;
    end;

    return false;
  end;

// begin

  if( NeedProcessSessionID(node, NumberRace) )

    var strNumberRace : string = ReadOptinalAttribute(node, "SessionID");

    if(strNumberRace and StrIsNumber(strNumberRace))
      NumberRace = int(strNumberRace);

      if( not УстановитьНомерРейса(NumberRace) )
        RunError("Ошибка при сохранении номера рейса");
      end;
    end;

  end;

end;

//TAM 04.09.2014 HF_74
class (TFldImportHandler) TFldImportHandlerUFBS
  InitTFldImportHandler();

  macro TransFieldName( FieldName : string ) : string
    if( FieldName == "ForeignPaytsSystemMode" )
      FieldName = "ForeignPaytsSystemMo";
    end;

    return FieldName;
  end;
end;


// EVG 22/1/2016 Замена в сообщении данных Воронежского филиала на ГО
macro CorrectMessage_VOZ_to_RTW( pMessageTxt, pXmlNode )

 const cBicVoz = "042007755",
       cBicRtw = "046311808",
       cCoracVoz = "30101810400000000755",
       cCoracRtw = "30101810600000000808";

 var vAccountVoz, vAccountRtw;

 var isChanged = false,
     isVozPayment = false;


 macro DefineRtwAccount( pAccVoz, pAccRtw:@string )

    var rs, cmd;

    pAccRtw = pAccVoz;

    cmd = rsdCommand( "Select t_account From usr_conformity_acc_table_dbt Where t_account_branch = ?" );
    cmd.AddParam( "", RSDBP_IN, pAccVoz );
    rs = rsdRecordSet( cmd ); 
    if( rs and rs.moveNext() ) 
       pAccRtw = rs.value( 0, null, V_STRING );
       return true;
    end;

    return false;

 end;


 // Только для ГО ЭВ
 if( vOurBank.is_EXV and not vOurBank.is_EXV_Volgograd )

    if ( ReadOptinalAttribute( pXmlNode, "BIC", "Payer/Bank" ) == cBicVoz )

       vAccountVoz = ReadOptinalAttribute( pXmlNode, "PersonalAcc", "Payer" );

       isVozPayment = true;

       if( DefineRtwAccount( vAccountVoz, @vAccountRtw ) )
          // Заменяем в сообщении воронежский счёт на саратовский
          pMessageTxt = StrSubst( pMessageTxt, vAccountVoz, vAccountRtw );
          isChanged   = true;
       else
          std.out( 1, "  Для клиента ФАО ЭВ Воронеж \"" + ReadNodeText( pXmlNode, "Payer/Name" ) + "\" не удалось найти счёт в ГО Саратов.\n" +
                      "  Сообщение загружено с воронежским счётом " + vAccountVoz + "." );
       end;

    end;

    if ( ReadOptinalAttribute( pXmlNode, "BIC", "Payee/Bank" ) == cBicVoz )

       vAccountVoz = ReadOptinalAttribute( pXmlNode, "PersonalAcc", "Payee" );

       isVozPayment = true;

       if( DefineRtwAccount( vAccountVoz, @vAccountRtw ) )
          // Заменяем в сообщении воронежский счёт на саратовский
          pMessageTxt = StrSubst( pMessageTxt, vAccountVoz, vAccountRtw );
          isChanged   = true;
       else
          std.out( 1, "  Для клиента ФАО ЭВ Воронеж \"" + ReadNodeText( pXmlNode, "Payee/Name" ) + "\" не удалось найти счёт в ГО Саратов.\n" +
                      "  Сообщение загружено с воронежским счётом " + vAccountVoz + "." );
       end;

    end;

    /* Заменяем все упоминания воронежских БИК и корсчёта на саратовские
       (если реквизиты изменены) */
    if( isChanged )
       pMessageTxt = StrSubst( StrSubst( pMessageTxt, cBicVoz, cBicRtw ), cCoracVoz, cCoracRtw );
    end;

    /* Добавляем в конец сообщения информацию о пачке - только для воронежских платежей */
    if( isVozPayment )
       var vNumberPack = 0, errCode,
           vEndPos     = index( pMessageTxt, "</ED" ),
           vEndText    = substr( pMessageTxt, vEndPos );

       GetRegistryValue( "PRBB\\МЕЖБАНКОВСКИЕ РАСЧЕТЫ\\НОМЕР_ПАЧКИ_ДЛЯ_ЭВ_ВОРОНЕЖ", v_integer, vNumberPack, errCode );

       pMessageTxt = substr( pMessageTxt, 1, vEndPos-1 );
       pMessageTxt = pMessageTxt + "<NumberPack>" + vNumberPack + "</NumberPack>" + vEndText;
       //pMessageTxt = pMessageTxt + "<Pack>Number=" + vNumberPack + "</Pack>" + vEndText;
    end;

 end;

 return pMessageTxt;
end;


/* Импорт одного сообщения */
//Gurin S. 24.12.2013 адаптация 31
macro ОбработатьСообщение( node, ВидСообщения, НомерФормы, IsPack, IsMesSigned, p_RelatedRef )

  var ДатаСоздания   = ToDate_(ReadAttribute(node, "EDDate")); 
  var TpShemID:integer, РелизФормы:integer, Author:string = ReadAttribute(node, "EDAuthor");

  var НомерДокумента = YYMMDD(ДатаСоздания) + Author + ReadAttribute(node, "EDNo");
  var RespID         = ToRespID(Author);
  var rs:object, select:string, chNode:object, chNodeList:object; 
  var nodename:string = "", fieldname:string, xml:string;
  var params:TArray, arrayNode = TArray();
  var arraySize:integer = 0, i:integer = 0, error;

  if( not IsMesSigned)
    if(IsChildNode(node, "SigValue"))
      IsMesSigned = true;
    end;
  end;

  std.out( 1, "  Прочитано сообщение: форма "+ node.NodeName() +" от "+ Author + " датой " + ДатаСоздания + " номер " + НомерДокумента );

  //Gurin S. 01.04.2014 Банкам это не нравитися
  //ProcessSessionID(node, @NumberRace); //DAI Hotfix HF2031_19_25_12

  if( ReadOptinalAttribute(node, "EDReceiver")!="" )
    if( ToRespID(ReadAttribute(node, "EDReceiver"))!={OurBank} )
      println( string( "Тег EDReceiver входящего сообщения EDNo = ", НомерДокумента, " не соответсвует получателю, сообщение игнорируется" ) );
      return;
    end;
  end; 

  RespID = GetRespID( @error );
  if( error )
    ErrImport( string("В справочнике отсутствует код РКЦ ") + string({MFO_RCC}));
    return FALSE;
  end;

  TpShemID = ОпределитьТранспортнуюСхемуПоКоду( {MFO_RCC}, ВидКодаТранспорта, "", -1, "", -1, Транспорт, НомерФормы, РелизФормы, NULL, NULL, wlsess.TpFrmtID );
  if( TpShemID == -1 )
     RunError(string( "Не определена транспортная схема для респондента: ", {MFO_RCC} ) );          
  end;

  //Gurin S. 04.08.2015 R-611187-2
  if ((TpShemID == 58) and (ReadAttribute(node,"BIC","Payer/Bank") == {MFO_Bank}))
     std.out( 1, String( "    Cообщение c номером EDNo = ", ReadAttribute(node, "EDNo"), " за дату = ", ДатаСоздания, ", транспортная схема ТрСхСбер,"," банк плательщика: ", {MFO_Bank}, " - сообщение игнорируется") );
     return;
  end;

  /* Если уже было такое сообщение от корреспондента - не закачиваем */
  select = "select mes.t_RlsFormID from dwlmes_dbt mes "
           "where  mes.t_Direct='X' and "
                  "mes.t_Department =:OperD and " 
                  "mes.t_TRN =:NumberDoc"
            //      "mes.t_OutsideAbonentID = :OutsideAbonentID and "
            //      "mes.t_OutsideAbonentDate = :DataCreate"
            ;  
  params = makeArray( SQLParam("OperD",            {OperDprt}),
                      SQLParam("NumberDoc",        НомерДокумента)//,
                    //  SQLParam("OutsideAbonentID", RespID),  
                    //  SQLParam("DataCreate",       ДатаСоздания)
                    );  

  rs = execSQLselect( select, params, TRUE );

  while( rs.MoveNext() )
    if( rs.value(0) == РелизФормы )
      std.out( 1, String( "    Cообщение c номером EDNo = ", ReadAttribute(node, "EDNo"), " за дату = ", ДатаСоздания, " ранее уже было принято - игнорируется") );
      return;
    end;
  end;

  /* Заполняем ответное сообщение */
  ClearRecord( wlmes );
  wlmes.TpSchemID           = TpShemID;
  wlmes.RlsFormID           = РелизФормы;
  wlmes.Kind                = ВидСообщения;
  wlmes.TRN                 = НомерДокумента;
  wlmes.OutsideAbonentDate  = ДатаСоздания;
  wlmes.OutsideAbonentID    = RespID;
  wlmes.AgentID             = RespID;
  FillMesCode( TRANSP_MCI, wlmes );  


  var rel_ref = NULL;
  
  rel_ref = EDNoDateAuthor();

  //Заполняем wlmes.RelatedRef из EDRefID или InitialED или OriginalEPD.
  //Если есть оба узла (EDRefID и InitialED), то приоритет у EDRefID.
  // Gurin S. 24.12.2013 адаптация 31
  if(IsChildNode(node, "EDRefID"))
    //Если есть узел EDRefID, то все атрибуты должны быть
    rel_ref.EDNo     =        ReadAttribute(node, "EDNo",      "EDRefID");
    rel_ref.EDDate   = ToDate_(ReadAttribute(node, "EDDate",    "EDRefID")); 
    rel_ref.EDAuthor =        ReadAttribute(node, "EDAuthor",  "EDRefID");
    
    wlmes.RelatedRef = rel_ref.GetTrn();
  elif(IsChildNode(node, "OriginalEPD")) //DAI Hotfix HF2031_19_25_12
    //Если есть узел OriginalEPD, то EDAuthor может отсутствовать
    rel_ref.EDNo     =        ReadAttribute(node, "EDNo",      "OriginalEPD");
    rel_ref.EDDate   = ToDate_(ReadAttribute(node, "EDDate",    "OriginalEPD"));
    rel_ref.EDAuthor =        ReadOptinalAttribute(node, "EDAuthor",  "OriginalEPD");
    
    wlmes.RelatedRef = rel_ref.GetTrn();
  elif(IsChildNode(node, "InitialED"))
    //Если есть узел InitialED, то все атрибуты должны быть
    rel_ref.EDNo     =        ReadAttribute(node, "EDNo",      "InitialED");
    rel_ref.EDDate   = ToDate_(ReadAttribute(node, "EDDate",    "InitialED"));//TAM
    rel_ref.EDAuthor =        ReadAttribute(node, "EDAuthor",  "InitialED");
    
    wlmes.RelatedRef = rel_ref.GetTrn();
  elif(p_RelatedRef) //TAM 26.07.2012 HF 181846
    wlmes.RelatedRef = p_RelatedRef;
  end;
  
  if( IsMesSigned )
    wlmes.Signed = SET_CHAR;
  end;

  if( not СоздатьЗапись( wlmes ) )
    RunError( "Невозможно создать запись по форме: " + node.NodeName() );
  end;

  /* Обрабатываем выписку */
  if( node.NodeName() == NodeED211 )
     nodename = NodeTransInfo;
     fieldname = UFBSDocExtField; 
  elif( node.NodeName() == NodeED207)
     nodename = NodeEDInfo;
     fieldname = UFBSDocExtField;
  elif( node.NodeName() == NodeED217)
     nodename = NodeCreditInfo;
     fieldname = UFBSDocInfoField;
  elif( node.NodeName() == NodeED221)
     nodename = NodeEDCopy;
     fieldname = UFBSDocExtField;
  elif( node.NodeName() == NodeED241)
     nodename  = NodeEDRequisiteList;
     fieldname = UFBSDocExtField;
  elif( node.NodeName() == NodeED215)
     nodename = NodeEDCopy;
     fieldname = UFBSDocExtField;
  elif( node.NodeName() == NodeED108)
     nodename = NodeCreditTransferTransactionInfo;
     fieldname = UFBSCreditTransferTransField;
  elif( IsCompoundForm( GetNodeName(node.NodeName()) ) )
     ImportXmlNodeToMes(node, TFldImportHandlerUFBS());
     AddRepElem(wlmes.Kind, GetNodeName(node.NodeName()), "RUR", (moneyL(ReadOptinalAttribute(node, "Sum"))/100) );
     return;
  elif( GetNodeName(node.NodeName()) == "ED244")
     ОбработатьСообщениеED374(node);
     return;
  end;
      
  if(nodename and (not CutInsideContent(nodename, node, arrayNode)))
     RunError( "Ошибка при обработке повторяющегося поля" + nodename);
  end;
  
  if( node.NodeName() == NodeED219 )
     CutNodeText(node, arrayNode,NodeReportContent);
     nodename = NodeReportCon;
     fieldname = UFBSRepConStrField;
  end;

  if( node.NodeName() == NodeED330 )
     CutNodeText(node, arrayNode,NodeCorrectionDescription);
     nodename = NodeDescrCorr;
     fieldname = UFBSDescrStrField;
  end;

  if(nodename == NodeEDRequisiteList)
    nodename  = NodeEDRqstList;
  elif(nodename == NodeCreditTransferTransactionInfo)
    nodename  = NodeCreditTransferTrans;
  end;

  /*Надо, возможно, нарезать еще полей EDCopy сокращенного формата - EDCopyBrf*/
  if( (ver_st == 2) and (nodename == NodeEDCopy) and (not CutInsideContent(nodename + "Brf", node, arrayNode)))
     RunError( "Ошибка при обработке повторяющегося поля" + nodename + "Brf");
  end;

  /* Сохраняем оставшееся сообщение целиком в одном поле */
  /* EVG 22/1/2016 Вызов функции для замены в сообщении данных Воронежского филиала на ГО
  if( not ЗаписатьПоле(XMLField, StrSubst(StrSubst(StrSubst(String(node.xml),StrFor(13),""),StrFor(10),""),StrFor(9),""))) */
  if( not ЗаписатьПоле(XMLField, CorrectMessage_VOZ_to_RTW( StrSubst(StrSubst(StrSubst(String(node.xml),StrFor(13),""),StrFor(10),""),StrFor(9),""), node ) ))
    RunError( "Ошибка записи поля: " + XMLField );     
  end;
  
  /* Записываем информацию о дате получения пакета */
  if( ((node.NodeName() == "ED101") or (node.NodeName() == "ED102") or (node.NodeName() == "ED103") or 
       (node.NodeName() == "ED104") or (node.NodeName() == "ED105") or (node.NodeName() == "ED110") or
       (node.NodeName() == "ED111") or (node.NodeName() == "ED108")
      ) and ( ValType(PacketDate) == V_STRING ) and ( PacketDate != "" ) 
    )
     if( not ЗаписатьПоле(NodePacketDate, PacketDate) )
       RunError( "Ошибка записи поля: " + NodePacketDate );     
     end;
  end;

  // Записываем информацию о документах выписки
  if( (arraySize = arrayNode.Size()) > 0 )
    i = 0;
    
    if( not УстановитьКонтекстБлока(nodename) )
      RunError( "Ошибка при установке контекста блока: " + nodename );
    end;

    while( i < arraySize )
      if( not ЗаписатьПоле( fieldname, arrayNode(i) ) )
        RunError( "Ошибка записи поля: " + fieldname );     
      end;
      i = i + 1;
    end;
    
    if( not УстановитьКонтекстБлока("") )
      RunError( "Ошибка при установке нулевого контекста блока" );
    end;

    arrayNode.Size() = 0;
  end;

  AddRepElem(wlmes.Kind, GetNodeName(node.NodeName()), "RUR", moneyL(ReadOptinalAttribute(node, "Sum"))/100 );
end;

/* Обработать все сообщения */
macro ОбработатьСообщения(node:object, IsPack, IsMesSigned )
  var i;
  var child:object;
  var НомерФормы = -1, ВидСообщения, RelatedRef;

  if( node.nodeType==CHILD_NODE )
    if( IsDocument(node.NodeName()) )
        //Gurin S. 01.07.2014 Банкам это не нравится
        //ProcessSessionID(node, @NumberRace); //DAI Hotfix HF2031_19_25_12
        //Gurin S. 29.03.2014
        if ((GetNodeName(node.NodeName()) == "ED208") or (GetNodeName(node.NodeName()) == "ED201"))
            RelatedRef = GetRefByEDNoDateAuthor(node);
            var EDNo     = ReadAttribute(node, "EDNo");
            var EDDate   = ToDate_(ReadAttribute(node, "EDDate"));
            var EDAuthor = ReadAttribute(node, "EDAuthor");

            /* Если уже было такое сообщение - не загружаем */
            var select = "select 1 from USR_UF_CONTAINER_ASK where TRN = :TRN";  
            var params = makeArray( SQLParam("TRN",RelatedRef));  

            var rs = execSQLselect( select, params, TRUE );

            if (rs.MoveNext())
                std.out( 1, String( "  Cообщение: форма " + node.NodeName()+ " c номером EDNo = ", EDNo, " за дату = ", EDDate, " ранее уже было принято - игнорируется") );
            else
                //Gurin S. 03.04.2014 Что-то с кодировкой
                //var sql  = "insert into USR_UF_CONTAINER_ASK (format, trn, xmldata, edno, eddate, edauthor) values (:format, :trn, xmltype (convert (:xmldata ,'RU8PC866' ,'CL8MSWIN1251')), :edno, :eddate, :edauthor)";
                var sql  = "insert into USR_UF_CONTAINER_ASK (format, trn, xmldata, edno, eddate, edauthor) values (:format, :trn, xmltype (:xmldata), :edno, :eddate, :edauthor)";
                var parm = makeArray (SQLParam ("format", GetNodeName(node.NodeName())), SQLParam ("trn", RelatedRef), SQLParam ("xmldata", node.xml), 
                                      SQLParam ("edno", EDNo), SQLParam ("eddata", EDDate), SQLParam ("edauthor", EDAuthor));
                execSQL (sql, parm);
                std.out( 1, "  Прочитано сообщение: форма "+ node.NodeName() +" от "+ EDAuthor + " датой " + EDDate + " номер " + RelatedRef );
            end;

        //TAM 26.07.2012 HF 181846
        elif( GetNodeName(node.NodeName()) == "ED273" )
            RelatedRef = GetRefByEDNoDateAuthor(node);
            for( i, 0, node.childNodes.length-1 )
                child = node.childNodes.item(i);
                if( child and (child.nodeType==CHILD_NODE) )
                    НомерФормы = ОпределитьФорму( Транспорт, GetNodeName(child.NodeName()), ВидСообщения );
                    if( НомерФормы > 0 )
                        ОбработатьСообщение( child, ВидСообщения, НомерФормы, IsPack, IsMesSigned, RelatedRef ); 
                    end;
                end;
            end;
        else       
            if( GetNodeName(node.NodeName())!="ED105" )
                НомерФормы = ОпределитьФорму( Транспорт, GetNodeName(node.NodeName()), ВидСообщения );
            else
                if( (ReadAttribute(node,"BIC","Payee/Bank")=={MFO_Bank}) and (ReadOptinalAttribute(node,"EDNo","InitialED")!="") )
                    НомерФормы = ОпределитьФорму( Транспорт, "ED105C", ВидСообщения );
                else
                    НомерФормы = ОпределитьФорму( Транспорт, GetNodeName(node.NodeName()), ВидСообщения );
                end;
            end;

            if( НомерФормы > 0 )        
                ОбработатьСообщение( node, ВидСообщения, НомерФормы, IsPack, IsMesSigned ); 
            end;
        end;

        return;
    end;
  end;

  i=0;
  while( i < node.childNodes.length )
    child = node.childNodes.item(i);
    if( child and (child.nodeType==CHILD_NODE) )
       ОбработатьСообщения( child, IsPack, IsMesSigned );
    end;
    i=i+1;
  end;

end;

/* Импорт сообщений УФЭБС */
macro UFBSInProc( TpID, ImportFileName, addrSess )
  var i:integer;
  var xml:object = ActiveX( "MSXML.DOMDocument" ), child:object, node:object;
  var IsPack:bool = false;
  var MessagesSigned:bool = true;  /* Пока считаем, что сообщения проверены в программе УАРМ КБР */
  // по умолчанию MessagesSigned=true, но в настройке может быть false
  GetRegistryValue( "МЕЖБАНКОВСКИЕ РАСЧЕТЫ\\УФЭБС\\TREATSIGNED", V_BOOL, MessagesSigned );

  var CryptoAPI = RsCryptoAPI();

  SetBuff( wlsess, addrSess );  
  NumberRace = null; //DAI Hotfix HF2031_19_25_12
  

  if( not xml.load(ImportFileName) )
    ErrImport( string( "Неверный формат файла импорта|", ImportFileName,  "|Невозможно загрузить xml-документ" ) );
    return false;
  end;

  /*SDA - формирование номеров рейсов */
  var RaceNumber = GetLastNumberRace({curdate},wlsess.TPFRMTID)+1; 
  println("НОМЕР РЕЙСА: ", RaceNumber);
  println("НОМЕР СЕАНСА: ", wlsess.number);
  SetNumberRace(RaceNumber,wlsess.SESSIONID); 

  node = xml.DocumentElement;

  i = 0;
  if( xml.NodeType == DOCUMENT_NODE )
    while( i < xml.childNodes.length )
      child = xml.childNodes.item(i);
      if( child and (child.nodeType==CHILD_NODE) )
        node = child;
        break;
      end;
      i = i+1;
    end;
  end;

  

  /* Если содержимое оформлено конвертом, то ЭС содержится внутри env:Body */
  if( StrUpr( node.BaseName ) == "ENVELOPE" )
    node = node.selectSingleNode("//env:Body").firstChild;
  end;

  /* Если ЭС оформлен как конверт ЭЦП, то его содержимое находится в sen:Object в виде base64.
     Выполняем преобразование base64 для узла Object */
  if( StrUpr( node.BaseName ) == "SIGENVELOPE" )
    if( not ПроверкаЭЦП( CONTEXTID_CHECK_SIGN_UFBS, node ))
      return false;
    else
      MessagesSigned = true;
    end;
  end;

  /* Обрабатывается пакет ЭПД (тег PacketEPD) или пакет ЭСИД (тег PacketESID) */
  if( SubStr( StrUpr( node.BaseName ), 1, 6) == "PACKET" )
    IsPack = true;
  end;

  Транспорт = TpID;
  ВидКодаТранспорта = PTCK_BIC;

  if(IsPack) 
     if( not УстановитьИдентификаторСеанса(ReadOptinalAttribute(node,"EDNo")) )
        return FALSE;
     end;
  else 
     if( not УстановитьИдентификаторСеанса("") )
        return FALSE;
     end;
  end;

  if(IsPack)
     PacketDate = ReadOptinalAttribute(node,"EDDate");

     if( not MessagesSigned)
       if(IsChildNode(node, "SigValue"))
         MessagesSigned = true;
       end;
     end;

     //Gurin S. 01.07.2014 Банкам это не нравится
     //ProcessSessionID(node, @NumberRace); //DAI Hotfix HF2031_19_25_12
  end;
  
  /* Импорт всех сообщений из файла */
  ОбработатьСообщения( node, IsPack, MessagesSigned );

  PrintImportReport();

  return true;

  OnError(er) /* Обработка ошибок времени выполонения */
    std.msg(String(er.Message, "|Модуль: ", er.Module, " Строка: ", er.Line));
    return FALSE;
end;

macro UFBSInProcV2( TpID, ImportFileName, addrSess )
   ver_st = 2;

   return UFBSInProc( TpID, ImportFileName, addrSess );
end;
