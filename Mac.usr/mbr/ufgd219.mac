/****************************************************************************/
/*                   R-Style SoftWare Lab, RS-Bank 5.1                      */
/****************************************************************************/
/*                  Подсистема "Межбанковские расчеты"                      */
/* Генерация выписок по сообщениям УФЭБС ED219                              */
/*                                                                          */
/* Имя файла: ufgd219.mac                                                   */
/* Создан:    06.07.06                                     Гайворонский Е.Г.*/
/* Изменен:   10.04.12 Chesnokov D.S. по заявке С-9530 проверка на группу   */
/****************************************************************************/
import "ufgendoc.mac", "diver.mac";

var ver_st = 1;
file wlreq2 ("wlreq.dbt") key 3;


macro GenDoc( addrMes )

  if (not ВходитВГруппу({oper},198))
    msgBox("Вы не включены в группу \"198 - Генерация сообщений УФЭБС\"");
    return false;
  end;

  var xml:object = ActiveX( "MSXML.DOMDocument" );
  var Строка, Строка2 = "", Строка3 = "", Receiver, Error, InitAuthor, Part = 0, field_name;
  var Narrative="", Description="";

  var EDDate, j = 0;

  SetBuff( wlmes, addrMes );

  PrintLog( 2, "Генерация информационного сообшения по ED219" );

  ClearRecord( wlreq );

  while( СчитатьПоле( field_name, Строка ) )

    if( field_name == XMLField )
  if ( not xml.loadXML(Строка) )
     println( string( "Неверный формат сообщения по форме ED219" ) );
     return false;
  end;

  EDDate = ReadAttribute(xml,"EDDate");
  wlreq.Queries = "";
  if(ReadOptinalAttribute(xml,"ReportID") != "")
     wlreq.Queries = "Форма № " + ReadAttribute(xml,"ReportID") + " ";
  else
     wlreq.Queries = "Форма ";
  end;
  wlreq.Queries = wlreq.Queries + "за дату: " + ToDate(ReadAttribute(xml,"ReportDate")) +
                  " от " + ToDate(EDDate);   

  /* Заполнение учетных буферов */
  wlreq.TRN                = wlmes.Trn;
  wlreq.OriginatorID       = ToRespID(ReadAttribute(xml,"EDAuthor"));
  wlreq.OriginatorCodeKind = PTCK_BIC;
  wlreq.OriginatorCode     = ПолучитьКодСубъекта(wlreq.OriginatorID, wlreq.OriginatorCodeKind, Error);
  Receiver = ReadOptinalAttribute(xml,"EDReceiver");
  wlreq.RecipientCodeKind  = PTCK_BIC;
  if(Receiver)
     wlreq.RecipientID     = ToRespID(Receiver);
  else
     wlreq.RecipientID     = {OurBank};
  end;
  wlreq.RecipientCode      = ПолучитьКодСубъекта(wlreq.RecipientID, wlreq.RecipientCodeKind, Error);

  wlreq.RelatedRef  = wlmes.RelatedRef;  

  if(ReadOptinalAttribute(xml,"EDNo","InitialED" ) != "")
     wlreq.InitDateMes = ToDate(ReadAttribute(xml,"EDDate","InitialED" ));
     InitAuthor        = ToRespID(ReadAttribute(xml,"EDAuthor","InitialED" ));
     wlreq.InitFormIDMes = НайтиФормуСообщенияПоРеференсу(wlreq.RelatedRef, TRANSP_UFBS);  
  end;
    elif( field_name = UFBSRepConStrField )
      Строка2 = Строка2 + Строка;
    end;

  end;/*while*/
  
  Narrative = substr(Строка2,1,719);
  Description = substr(Строка2,720,2519);
  if( ver_st == 1 )
     if( not ВставитьОтвет( wlreq, Narrative, Description) )
       std.msg("Ошибка при вводе ответа"); 
       return FALSE;
     end;
  else
     
     if( (not ПроверитьЭлелементPartInfoНаНаличие(xml, wlreq.PartAggregateID, Part)) Or (Part == 1))
        if( not ВставитьОтвет( wlreq, Narrative, Description) )
           std.msg("Ошибка при вводе ответа");
           return FALSE;
        end;
     else
        ClearRecord( wlreq2 );
        wlreq2.PartAggregateID = ReadAttribute(xml,"PartAggregateID","PartInfo");
        wlreq2.Direct = "X";
        if( GetEQ( wlreq2 ))
           ПрочитатьТекстЗапроса_Ответа(wlreq2, Строка3);
           /*Так устроены поля в программе: Narrative - 720, Description - 1800, Остальное - Копии полей */
           Строка3 = SubStr(Строка2, 1, 719 - StrLen(Строка3) );
           if( not ОбновитьОтвет( wlreq2, Строка3 ) )
              std.msg("Ошибка при обновлении ответа");
              return FALSE;
           end;
        else
           std.msg("Не найдена головная часть ответа");
           return FALSE;
        end;  
     end;
  end;

  return TRUE;

  OnError(er) /* Обработка ошибок времени выполнения */
    std.msg(String(er.Message, "|Модуль: ", er.Module, " Строка: ", er.Line));
    return FALSE;

end;

macro GenDocV2( addrMes )
   ver_st = 2;
   return GenDoc( addrMes );
end;
