/**********************************************************
  RS-Bank v6.20                      R-Style Software Lab

  Description : Панель для установки параметров процедуры
                формирования сообщенй по ГИС ГМП  

  
  Возвращает true - запустить процедуру, false - не запускать
  macro GGProcParmPanel( procParm:GGProcParm ):bool
  
  Для работы панели необходимо в RegPathGIS_GMP ветке реестра создать следующие строковые параметры:
    NODE
    DEPARTMENT
    PAYERACCOUNT
    BANKCODE
    RECEIVERACCOUNT
    KBK
    PACK
    GROUND
    CODEKIND
    PARTCODE
    PARTYNAME
    TYPECODE
    STATUS
    EXCHANGETYPE
    SENDERIDENTIFIER
  Наименование настроек соответствуют названиям полей в ресурсе панели

***********************************************************/

// Путь к настройкам процедуры в реестре
private var RegPathGIS_GMP = "CB\\PAYMENTS\\ГИС_ГМП\\";
import Календарь, globals, "pmprops.mac", "likepy.mac", "pm_tools.mac";


// Параметры процедуры
class GGProcParm()
  
  // Фильтр
  var Department:integer, // поле Code
      Node:integer, // поле Code
      ValueDate:date;

  var PayerAccountCh:string, PayerAccount:string,
      BankCodeCh:string, BankCode:string,
      ReceiverAccountCh:string, ReceiverAccount:string,
      KBKCh:string, KBK:string,
      PackCh:string, Pack:integer,
      GroundCh:string, Ground:string;

  // Реквизиты сообщения
  var CodeKind:integer,
      PartCode:string,
      PartyName:string,
      TypeCode:string,
      Status:string,
      ExchangeType:string,
      SenderIdentifier:string;

end;

private class (TRecHandler) TGGPanelParm()

  InitTRecHandler ("PINFPRM", "BdTransf.lbr", TRUE);

  var exitKey = 0;

  // Параметры процедуры
  var Department:integer,
      Node:integer;
end;

private CONST KEY_ENTER = 13, KEY_F2 = 316, KEY_F3 = 317, KEY_ALTF3 = 362, KEY_CTRLF3 = 352, KEY_SPACE = 32, EXITFIELD = 530, KEY_F9 = 323, KEY_ESC = 27;

private array TypeCodeArray; // Тип сообщения (70)
TypeCodeArray(0) = "GSRV - Взаимодействие в рамках оказания госуслуг"; // 1
TypeCodeArray(1) = "GFNC - Взаимодействие в рамках оказания госфункций"; // 2

private array StatusArray; // Статус сообщения (71)
StatusArray(0) = "REQUEST - Запрос"; // 1
StatusArray(1) = "RESULT - Возврат результата";  // 2
StatusArray(2) = "REJECT - Мотивированный отказ";  // 3
StatusArray(3) = "INVALID - Ошибка логического контроля"; // 4
StatusArray(4) = "ACCEPT - Сообщение о приеме";  // 5
StatusArray(5) = "PING - Запрос данных/результатов";    // 6
StatusArray(6) = "PROCESS - В обработке"; // 7
StatusArray(7) = "NOTIFY - Уведомление об ошибке в данных";  // 8
StatusArray(8) = "FAILTURE - Технический сбой";// 9
StatusArray(9) = "CANCEL - Запрос на отзыв заявления";  // 10
StatusArray(10) = "STATE - Возврат сообщения о статусе";  // 11

private array ExchangeTypeArray; // Категория взаимодействия (72)
ExchangeTypeArray(0) = "0 - Неопределенная категория";
ExchangeTypeArray(1) = "1 - Взаимодействие с порталом государственных услуг";
ExchangeTypeArray(2) = "2 - Межведомственное взаимодействие";
ExchangeTypeArray(3) = "3 - Межведомственное взаимодействие через СМЭВ";
ExchangeTypeArray(4) = "4 - Взаимодействие с поставщиками начислений";
ExchangeTypeArray(5) = "5 - Взаимодействие ИПШ с ФК";
ExchangeTypeArray(6) = "6 - Взаимодействие ОИВ с ФК";


// Получить код справочника 
private macro getCodeFromValArray(val:string)
  return SubStr(val, 1, Index(val, " - "));
end;

// Получить значение параметра панели из реестра
private macro GetRegValueForPanel( prmName:string )
  var value, stat = 0;
  GetRegistryValue( RegPathGIS_GMP + prmName, V_STRING, value, stat );
  if(stat == 0)
    return value;
  end;
  return "";
end;

//TAM 20.02.2013 C-17858
// Сохранить значение параметра в реестр
/*private macro SetRegValueForPanel( prmName:string, newValue:string )
  return SetRegistryValue( RegPathGIS_GMP + prmName, newValue);
end; */

// Поля, которые сохраняются в реестре
private macro isSaveInReg( field )
  return InList(StrUpr(field), "NODE", 
                               "DEPARTMENT",
                               "PAYERACCOUNT",
                               "BANKCODE",
                               "RECEIVERACCOUNT",
                               "KBK",
                               "PACK",
                               "GROUND",
                               "CODEKIND",
                               "PARTCODE",
                               "PARTYNAME",
                               "TYPECODE",
                               "STATUS",
                               "EXCHANGETYPE",
                               "SENDERIDENTIFIER");
end;

// Поля, которые сохраняются в реестре с флагом
private macro isSaveInRegWithFlag( field )
  return InList(StrUpr(field), "PAYERACCOUNT",
                               "BANKCODE",
                               "RECEIVERACCOUNT",
                               "KBK",
                               "PACK",
                               "GROUND");
end;


// Инициализация параметров панели из реестра
private macro InitParamPanel(dlg:TGGPanelParm)
  debugbreak;
  var i = 0;
  var  curFld;
  var  curFldVal;
  while( i < FldNumber(dlg))
    curFld = FldName (dlg, i);
    if( isSaveInReg( curFld ) )
      curFldVal = GetRegValueForPanel( curFld );
      if( strlen(curFldVal) ) // Если значение есть, то устанавливаем
        if( isSaveInRegWithFlag( curFld ) ) // если сохраняется с флагом
          dlg.item(curFld + "CH") = IfThenElse(SubStr(curFldVal, 1, 1) == " ", "", SubStr(curFldVal, 1, 1)); // То первый байт заполняется флагом
          dlg.item(i) = SubStr(curFldVal, 2); // все остальное - значение
        else
          dlg.item(i) = GetRegValueForPanel( curFld );
        end;
      end;
    end;
    i = i + 1;
  end;
  
  dlg.rec.ValueDate = {curdate};
end; 

//TAM 20.02.2013 C-17858
// Сохранение параметров панели в реестре
/*private macro SaveParamPanel(dlg:TGGPanelParm)
  debugbreak;
  var i = 0;
  var  curFld, regVal;
  while( i < FldNumber(dlg))
    curFld = FldName (dlg, i);
    if( isSaveInReg( curFld ) )
      if( isSaveInRegWithFlag( curFld ) )
        regVal = IfThenElse( dlg.item(curFld + "CH") == "", " ", dlg.item(curFld + "CH") ) + dlg.item(i);
      else
        regVal = dlg.item(i);
      end;
      if( not SetRegValueForPanel(curFld, regVal) ) 
        msgbox("Ошибка записи в реестр параметра " + StrUpr(curFld) + ". Возможно, данного параметра нет в настройке " + RegPathGIS_GMP);
      end;
    end;
    i = i + 1;
  end;

end;*/

private macro PressSpace2( dlg, id )
  if(dlg.item(id) == "=")
    dlg.item(id) = ""
  else
    dlg.item(id) = "="
  end;
end;

private macro PressSpace3( dlg, id )
  if ( dlg.item(id) == "=" )
    dlg.item(id) = "!";
  elif (dlg.item(id) == "!")
    dlg.item(id) = "";
  else
    dlg.item(id) = "=";
  end;
end;

private macro GetDepParm( Name:string, PartyID:integer, NodeType:integer )

   var select:string = " select t_Code, t_PartyID, t_NodeType "
                       " from ddp_dep_dbt "
                       " where t_Name = :Name ";

   var params:TArray = makeArray(SQLParam( "Name", Name ));
   
   var rset:RsdRecordset = execSQLselect( select, params, false );
 
   if( rset and rset.moveNext() )
      SetParm(1, rset.value(1));
      SetParm(2, rset.value(2));
      return rset.value(0);
   end;     

   return 0;
end;

// Подкачать поля в панель
private macro PumpPanel( dlg:TGGPanelParm )
  var PartyID = 0;
  dlg.Department = GetDepParm( dlg.rec.Department, PartyID );
// Chesnokov D.S. 30.06.2015 Адаптация для ГИС ГМП 1.16
//  if( PartyID > 0 )
//    dlg.rec.DepName = GetPartyName( PartyID );
//  end;
  
  dlg.Node = GetDepParm( dlg.rec.Node, PartyID );
//  if(PartyID > 0)
//    dlg.rec.NodeName = GetPartyName( PartyID );
//  end;

  dlg.rec.CodeName = PM_FindCodeKindName( dlg.rec.CodeKind );
end;

// Проверка принадлежности ВСП филиалу
private macro DepartmentHaveThisVSP( Department, VSP )
   var select:string = " select dp.t_Name "
                         " from ddp_dep_dbt dp"
                        " where t_nodeType = 1"
                          " and rownum = 1"
                          " start with dp.t_Name = :NameVSP"
                          " connect by prior DP.T_PARENTCODE = dp.t_Code";

   var params:TArray = makeArray(SQLParam( "NameVSP", VSP ));
   
   var rset:RsdRecordset = execSQLselect( select, params, false );
 
   if( rset and rset.moveNext() )
      if( rset.value(0) == Department )
        return true;
      end;
   end;     

   return false;
end;

// Проверить параметры панели
private macro CheckPanel( dlg:TGGPanelParm ):bool
  debugbreak;
  // 0. Проверяем заданность всех обязательных полей
  var emptyField = "", gotoField = "";
  if( dlg.rec.Department == "" ) // Филиал 
    gotoField = "Department";
    emptyField = "Филиал";
  elif(dlg.rec.ValueDate == date(0, 0, 0)) // Дата значения
    gotoField = "ValueDate";
    emptyField = "Дата значения";
  elif(dlg.rec.CodeKind == 0) // Код получателя
    gotoField = "CodeKind";
    emptyField = "Вид кода получателя";
  elif(dlg.rec.PartCode == "") // Получатель
    gotoField = "PartCode";
    emptyField = "Получатель";
  elif(dlg.rec.TypeCode == "") // Тип сообщения (TypeCode)
    gotoField = "TypeCode";
    emptyField = "Тип сообщения";
  elif(dlg.rec.Status == "") // Статус сообщения (Status)
    gotoField = "Status";
    emptyField = "Статус сообщения";
  elif(dlg.rec.ExchangeType == "") // Категория взаимодействия (ExchangeType)
    gotoField = "ExchangeType";
    emptyField = "Категория взаимодействия";
  elif(dlg.rec.SenderIdentifier == "") // Идентификатор отправителя (SenderIdentifier)
    gotoField = "SenderIdentifier";
    emptyField = "Идентификатор отправителя";
  end;
  
  if( emptyField != "" )
    SetFocus(dlg, FldIndex(dlg,gotoField));
    msgbox("Для формирования сообщений необходимо заполнить поле <" + emptyField + ">.");
    return false;
  end;
  
  var PartyID, NodeType;
  // 1. Филиал должен быть филиалом
  if( GetDepParm( dlg.rec.Department, PartyID, NodeType ) > 0 )
    if(NodeType != 1)
      SetFocus(dlg, FldIndex(dlg,"Department"));
      msgbox( "В поле филиала задан неверный вид узла ТС. Должен быть филиал.");
      return false;
    end;
  else
    SetFocus(dlg, FldIndex(dlg,"Department"));
    msgbox( "Не найден филиал " + dlg.rec.Department );
    return false;
  end;

  // 2. ВСП должен либо равен филиалу, либо иметь тип ВСП
  if( dlg.rec.Department != dlg.rec.Node )
    if( GetDepParm( dlg.rec.Node, PartyID, NodeType ) > 0 )
      if( NodeType != 2 )
        SetFocus(dlg, FldIndex(dlg,"Node"));
        msgbox("В поле ВСП задан неверный вид узла ТС. Должен быть ВСП.");
        return false;
      end;
    else
      SetFocus(dlg, FldIndex(dlg,"Node"));
      msgbox( "Не найден ВСП " + dlg.rec.Node );
      return false;
    end;
  end;

  // 3. ВСП должно принадлежать филиалу
  if( dlg.rec.Department != dlg.rec.Node )
    if( not DepartmentHaveThisVSP(dlg.rec.Department, dlg.rec.Node))
      SetFocus(dlg, FldIndex(dlg,"Node"));
      msgbox("ВСП " + dlg.rec.Node + " не принадлежит филиалу " + dlg.rec.Department );
      return false;
    end;
  end;

  // 4. Должен быть задан корректный вид кода
  if(PM_FindCodeKindName( dlg.rec.CodeKind ) == "")
    msgbox( "Не найден вид кода " + dlg.rec.CodeKind );
    SetFocus(dlg, FldIndex(dlg,"CodeKind"));
    return false;
  end;

  // 5. Проверка правильности кода получателя
  if( not GetCodeParty( dlg.rec.PartCode, dlg.rec.CodeKind ) )
    msgbox( "Неверно задан код получателя" );
    SetFocus(dlg, FldIndex(dlg,"PartCode"));
    return false;
  end;
  
  //TAM 21.02.13 C-17858 - если статус сообщения "Result", то тип сообщения GSRV, иначе тип сообщения GFNC
  if(dlg.rec.Status == "RESULT")
    dlg.rec.TypeCode = "GSRV";
  else
    dlg.rec.TypeCode = "GFNC";
  end;

  return true;
end;

// Глобализм, куда сохраняется значение поля при получении фокуса
var saveCurField;

private macro RemFocusEvent(dlg, id, key)
  var  curFld = FldName (dlg, id);
  var PartyID;
  if( (curFld == "CodeKind") and (dlg.rec.CodeKind != saveCurField) )
    dlg.rec.CodeName = PM_FindCodeKindName( dlg.rec.CodeKind );
  elif((curFld == "PartCode") and (dlg.rec.PartCode != saveCurField))
    PartyID = GetCodeParty( dlg.rec.PartCode, dlg.rec.CodeKind );
    if( PartyID > 0 )
      dlg.rec.NoName = GetPartyName( PartyID );
    end;
  end;
  UpdateFields( dlg );
end;

// Обработчик панели
private macro EvenPanel(dlg, cmd, id, key)

  var  curFld = FldName (dlg, id);
  file dep( dp_dep );
  RECORD party(party);
  var MenuChoose;

  if( cmd == DLG_SETFOCUS )
    saveCurField = dlg.item(id);
  elif( cmd == DLG_REMFOCUS )
    RemFocusEvent(dlg, id, key);
  elif( cmd == DLG_KEY )
    if ( key == KEY_F3 )
      if(curFld == "ValueDate")
        dlg.rec.ValueDate = GetDateByCalendar({curdate});
      elif( curFld == "Department" )
        if( ListDepartment( dep ) )
           dlg.rec.Department = dep.Name;
           //dlg.rec.DepName = GetPartyName( dep.PartyID );
           dlg.Department = dep.Code;
           dlg.rec.Node = dlg.rec.Department;
           //dlg.rec.NodeName = dlg.rec.DepName;
           dlg.Node = dlg.Department;
        end;
      elif( curFld == "Node" )
        if( ListDepartment( dep ) )
           dlg.rec.Node = dep.Name;
           dlg.rec.NodeName = GetPartyName( dep.PartyID );
           dlg.Node = dep.Code;
        end;
      elif(curFld == "PartCode")
        if( ListPT(party) )
           dlg.rec.PartCode = GetCodeParty(party.PartyID, dlg.rec.CodeKind);
           dlg.rec.NoName = GetPartyName( party.PartyID );
           saveCurField = dlg.rec.PartCode;
        end;
      elif(curFld == "TypeCode")
        MenuChoose = Menu(TypeCodeArray, null, "Тип сообщения");
        if(MenuChoose != -2)
          dlg.rec.TypeCode = getCodeFromValArray(TypeCodeArray(MenuChoose));
        end;
      elif(curFld == "Status")
        MenuChoose = Menu(StatusArray, null, "Статус сообщения");
        if(MenuChoose != -2)
          dlg.rec.Status = getCodeFromValArray(StatusArray(MenuChoose));
        end;
      elif(curFld == "ExchangeType")
        MenuChoose = Menu(ExchangeTypeArray, null, "Категория взаимодействия");
        if(MenuChoose != -2)
          dlg.rec.ExchangeType = getCodeFromValArray(ExchangeTypeArray(MenuChoose));
        end;
      end;
    elif ( InList(key, KEY_F9, KEY_F2) )
      RemFocusEvent(dlg, id, key);
      if( CheckPanel( dlg ) )
        //TAM 20.02.2013 C-17858 - в реестр ничего не пишем. Используем глобальные значения для всего банка.
        //SaveParamPanel(dlg);
        if(key == KEY_F2)
          dlg.exitKey = key;
          return CM_SAVE;
        end;
      end;
      return CM_IGNORE;
    elif ( key == KEY_ESC )
      dlg.exitKey = key;
      return CM_SAVE;
    elif ( key == KEY_SPACE )
      if( InList(curFld, "PayerAccountCh", "ReceiverAccountCh") )
        PressSpace3( dlg, id );
      elif( InList(curFld, "BankCodeCh", "KBKCh", "PackCh", "GroundCh") )
        PressSpace2( dlg, id );
      end;
    end;

    UpdateFields( dlg );
  end;
end;

private macro FillProcParm(dlg:TGGPanelParm, procParm:@GGProcParm)
  procParm.Department = dlg.Department;
  procParm.Node = dlg.Node;
  procParm.ValueDate = dlg.rec.ValueDate;

  procParm.PayerAccountCh = dlg.rec.PayerAccountCh; 
  procParm.PayerAccount = dlg.rec.PayerAccount;
  procParm.BankCodeCh = dlg.rec.BankCodeCh;
  procParm.BankCode = dlg.rec.BankCode;
  procParm.ReceiverAccountCh = dlg.rec.ReceiverAccountCh;
  procParm.ReceiverAccount = dlg.rec.ReceiverAccount;
  procParm.KBKCh = dlg.rec.KBKCh;
  procParm.KBK = dlg.rec.KBK;
  procParm.PackCh = dlg.rec.PackCh;
  procParm.Pack = dlg.rec.Pack;
  procParm.GroundCh = dlg.rec.GroundCh;
  procParm.Ground = dlg.rec.Ground;

  procParm.CodeKind = dlg.rec.CodeKind;
  procParm.PartCode = dlg.rec.PartCode;
  procParm.PartyName = dlg.rec.NoName;
  procParm.TypeCode = dlg.rec.TypeCode;
  procParm.Status = dlg.rec.Status;
  procParm.ExchangeType = dlg.rec.ExchangeType;
  procParm.SenderIdentifier = dlg.rec.SenderIdentifier;
end;

// Возвращает true - запустить процедуру, false - не запускать
macro GGProcParmPanel( procParm:@GGProcParm ):bool
  debugbreak;
  var dlg:TGGPanelParm = TGGPanelParm();
  //TAM 20.02.2013 C-17858 - из реестра инициализируем поля - настройки стали глобальными.
  InitParamPanel(dlg);
  PumpPanel( dlg );

  RunDialog(dlg, @EvenPanel);
  
  if( dlg.exitKey == KEY_F2 )
    FillProcParm( dlg, @procParm );
  end;
    
  return dlg.exitKey == KEY_F2;

end;
