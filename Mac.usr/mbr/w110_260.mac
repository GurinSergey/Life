//-----------------------------------------------------------------------------
// Блок      : 29002  - "Картотека НОСТРО-счета"
// Шаг       : 260    - "Снятие документа с картотеки"
// Назначение: Макрос шага
// Описание  : Макрос шага
//-----------------------------------------------------------------------------
import InsCarryDoc, OprInter, BankInter, RMInter, "rmconst.mac", "wldoc.mac", "cbctuncs.mac", "rmtools.mac" ;
import "pm_categ.mac","pm_common.mac", "pm_tools.mac", "cor_acc.mac";
import oralib; //Jushmanov 2014-02-24 C-19151
import "fg_Life_parm.mac";
import lib_registry;

RECORD Corschem( corschem );
private var _mask  = RSL_GetRegistryValue ("АРМ ПОЗИЦИОНЕРА/ДОПОЛНИТЕЛЬНЫЙ КОНТРОЛЬ/МАСКИ СЧЕТОВ БАНКА");

var PaymentObj:RsbPayment;

private var fgBank = fg_life_subject({OurBank});


private macro ValueDateForRemoveDocFromIndexNOSTRO(Paym : RsbPayment) : date
    var ValueDate : date = {curdate};
    var DocKind = Paym.PrimDocKind;

    if( GetParentOrEqualDocKindFromList(DocKind, PMDOC_CLIENTPAYMENT) )
        ValueDate = PM_GetOperDay_Balance(Paym.Department);
    end;

    return ValueDate;
end;


//-----------------------------------------------------------------------------
// Выполнение шага
//-----------------------------------------------------------------------------
macro ExecuteStep( doc, first )
debugbreak;
    // Значение сегмента "ДО"
    var DO_Segment :integer = 0;
    // Значение сегмента "Квитовка исходящего (К)"
    var K_Segment :integer = 0;

    // Объекты для счетов КУ
    var Card_NotBal  :NotBalCorrAcc_FirstDoc = NotBalCorrAcc_FirstDoc("П");
    var NOSTRO_NotBal:NotBalCorrAcc_FirstDoc = NotBalCorrAcc_FirstDoc("");

    // Счета КУ для проводок
    var AccountCard_NotBal  :string = Card_NotBal.FindAndOpenSysAccount( "ВнебалСчетКорресп", 0, {curdate} );
    var AccountNOSTRO_NotBal:string = Corr_Acc(PaymentObj).FindAndOpenSysAccount( "ВнебалКартотекаКорсчета", 0, {curdate} );

    // Отсечь валютные платежи
    if( ( PaymentObj.PayerFIID    != 0 ) or
        ( PaymentObj.ReceiverFIID != 0 ) )
        msgBox( "Валютные платежи не ставятся и не изымаются из картотеки корсчета" );
        return 1;
    end ;  

    // Отсекаем дебетовые
    if( not PaymentObj.IsCredit() )
        msgBox( "Дебетовые платежи не ставятся на картотеку корсчета" );
        return 1;
    end;

    // Если платеж является банковским - то пролетает
    if( PaymentObj.Payer
    and ВидСубъекта( PaymentObj.Payer, PTK_BANK )
    and ( not IsClientPayerAccount( PaymentObj ) ) 
      )
        //Gurin S. 13.08.2015
        if (CompareStrWithMasks(_mask,  PaymentObj.PayerAccount)!=0)
           return 0;
        end;
    end;

    PaymentObj.ValueDate = ValueDateForRemoveDocFromIndexNOSTRO(PaymentObj);

    // Значение сегмента "ДО"
    DO_Segment = GetOprStatus( OPR_PAYM_DO );

    // Проводки
    var paymtr3:RsbPaymTransaction = PaymentObj.MakeTransaction();

    // Сформировать проводку по главе 3
    paymtr3.Chapter         = 3;
    paymtr3.FIIDPayer       = PaymentObj.ReceiverFIID;
    paymtr3.Sum             = PaymentObj.ReceiverAmount;
    paymtr3.ResultCarry     = 1;
    paymtr3.Kind_Oper       = " 1";
    paymtr3.Shifr_Oper      = "09";
    paymtr3.AccountPayer    = AccountCard_NotBal;
    paymtr3.AccountReceiver = AccountNOSTRO_NotBal;
    paymtr3.Date_Carry      = PaymentObj.ValueDate;
    paymtr3.Department      = PaymentObj.Department;
    paymtr3.Ground          = substr( "Изъятие из картотеки корсчета документа/"+PaymentObj.Ground, 1, 210 );
    paymtr3.Numb_Document   = PaymentObj.Number;

    if( not paymtr3.Carry() )
        MsgBox("Ошибка при актуализации платежа");
        return 1;
    end;

    var paymtr1:RsbPaymTransaction = PaymentObj.MakeTransaction();

    // Проводку по главе 1 формируем не всегда
    if( ( DO_Segment != OPR_PM_ST_POS ) and ( DO_Segment != OPR_PM_ST_RETURN ) )
        paymtr1.Chapter         = 1;
        paymtr1.FIIDPayer       = PaymentObj.ReceiverFIID;
        paymtr1.Sum             = PaymentObj.ReceiverAmount;
        paymtr1.ResultCarry     = 1;
        paymtr1.Kind_Oper       = " 1";

        if (PaymentObj.ShifrOper != "")
            paymtr1.Shifr_Oper  = PaymentObj.ShifrOper;
        else
            paymtr1.Shifr_Oper  = "09";
        end;

        paymtr1.Date_Carry      = PaymentObj.ValueDate;
        paymtr1.Department      = PaymentObj.Department;
        paymtr1.Ground          = substr( "Изъятие из картотеки корсчета документа/"+PaymentObj.Ground, 1, 210 );
        paymtr1.Numb_Document   = PaymentObj.Number;
        paymtr1.AccountPayer    = PaymentObj.FuturePayerAccount;
        paymtr1.AccountReceiver = PaymentObj.FutureReceiverAccount;
        paymtr1.Status_After    = GetPaymentCarryKind( PaymentObj );

        if( not paymtr1.Carry() ) // Провести
            MsgBox("Ошибка при актуализации платежа");
            return 1;
        end;
    end;

    // Статусы
    //Gurin S. 17.08.2015 R-614396-2
    if (PaymentObj.FutureReceiverAccount == PaymentObj.PayerAccount)
        PaymentObj.PropStatus = PM_PROP_CLOSED;
        PaymentObj.PaymStatus = PM_FINISHED;
        if( not InsertOprStatus( OPR_PAYM_STATE, OPR_PM_ST_CLOSE ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;
    elif( DO_Segment == OPR_PM_ST_POS )
        PaymentObj.PropStatus = PM_PROP_READY;
    elif( DO_Segment == OPR_PM_ST_RETURN )
        PaymentObj.PropStatus = PM_PROP_CORREJECTED;
    else
          PaymentObj.PropStatus = PM_PROP_READY;
          PaymentObj.OutTransferDate = {curdate};
      //  PaymentObj.PropStatus = PM_PROP_CLOSED;
      //  PaymentObj.PaymStatus = PM_FINISHED;
    end;

    if( PaymentObj.CardFileKind == WLD_CARD_OUT_CORSCH )
        PaymentObj.CardFileDateOut = {curdate};
    end;

    K_Segment = GetOprStatus( OPR_PAYM_OUT_KVIT );
    /*Если документ сквитован подтверждением (значение сегмента "Квитовка" == "Сквитован"), то:*/
    if(K_Segment == OPR_PM_ST_KVIT)
        if ( not CarryPlanDocuments(PaymentObj.PaymentID) )
            MsgBox("Ошибка при помещении планируемой проводки в проведенные");
            return 1;
        end;
        if( not InsertOprStatus( OPR_PAYM_STATE, OPR_PM_ST_CLOSE ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;
        //PaymentObj.PaymStatus = PM_FINISHED;
    end;

    return 0;
end;


//Jushmanov 2014-02-24 C-19151
macro PostStepAction( message,      /* 1 - выполнение шага; 2 - откат шага;   */
                      errTrn,       /* статус выполнения шага. 0 - ошибки нет */
                      FirstDoc,     /* указатель на первичный документ        */
                      ID_Oper,      /* внутренний идентификатор операции      */
                      Number_Step,  /* Номер шага операции (из настроек)      */
                      KindOper,     /* номер вида операции                    */
                      KindDoc,      /* номер вида первичного документа        */
                      KindStep,     /* вид шага операции                      */
                      ID_Step )     /* внутренний идентификатор шага операции */
    private var logquery, idStep = ID_Step, idOper = ID_Oper;

    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(idOper) != V_INTEGER) and (valtype(idOper) != V_STRING)) idOper = 0; end;
        if ((valtype(idStep) != V_INTEGER) and (valtype(idStep) != V_STRING)) idStep = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + idOper + " AND t_id_step = " + idStep;
        ExecSQL(logquery, null, false);
    end;

    return 0;
end;