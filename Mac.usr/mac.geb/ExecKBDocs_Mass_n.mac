/* Тихомиров Доработка для массовой проводки в течении дня*/
// Lavrenov: переработал, теперь обработчик работает с таблицей usr_me_time_dbt в которой задаются временные интервалы
// SDA 06.08.2012 - по инициативе Лены Палагиной немного привел в порядок обработку нажатия клавиш по testevent
/*LAO 18.12.2012 добавил запись в таблицу для  обрабатываемых платежей*/
/*02.01.2012 Gurin S. C-16767*/
/*28.01.2013 Gurin S. Исправил под требования Палагиной Е.*/
/*15.11.2013 Vaschenko D. Добавил условие под требование Палагиной Е.*/

import rsd, globals, "opr_engine.mac", "gstname.mac", "pmreport_mass.mac", "timestat.mac", "CurDateProc.mac";
import календарь;
import commonint, ptinter;

var sql, NextDate, rsd, time1, flag = true, mes, fl = true, time2, intM, intMax, num = 0, countP, count_start, Min_Time, flag_a, flag_n;
var no_empty; //Gurin S. 02.01.2012 C-16767
Const F2 = 316;
Const F8 = 322;
Const F6 = 320;

//Gurin S. 02.01.2012 C-16767
var BIC_BANK, err;
GetRegistryValue("PRBB\\MASS_EXEC\\BIC_BANK", V_STRING, BIC_BANK, err);
  if (err > 0)
      BIC_BANK = "";
  end;

record party (party);     

var after16 = "";
var clause = "";

var rs, cmd, cmd1, code, clientstr="", flag16;
var opr = opr_engine;

var value_err;
private var _key;

opr.oper = {oper};
opr.kindoperation = 24001;
opr.dockind = 201;


private macro m_vneshn()
    //Gurin S. 28.01.2013 перенес с m_vnutren()
    var retval, cond;
    if (BIC_BANK == "")
        cond = " pm.t_payerbankid = pm.t_receiverbankid ";
    else
        cond = " (pm.t_payerbankid = pm.t_receiverbankid or prop.t_bankcode in ("+BIC_BANK+")) ";
        no_empty = True;
    end;


    /*return  " and PM.T_PAYERBANKID != PM.T_RECEIVERBANKID " + // версия 1.0
              " and not REGEXP_LIKE(pm.t_receiveraccount, '^401|^402|^403|^404') ";*/

    /*retval =  " and ((PM.T_PAYERBANKID != PM.T_RECEIVERBANKID  " + // версия 1.1
              "       and not REGEXP_LIKE(pm.t_receiveraccount, '^401|^402|^403|^404'))  " +
              "      or (PM.T_PAYERBANKID = PM.T_RECEIVERBANKID  " +
              "          AND (REGEXP_LIKE(pm.t_payeraccount, '^407|^406|^405|^40802')  " +
              "          AND (REGEXP_LIKE(pm.t_receiveraccount, '^407|^406|^405|^40802|^423')))))  "; */

    retval = "      AND ( (" + cond + //pm.t_payerbankid = pm.t_receiverbankid " + // версия 1.2, сколько еще будет интересно
             "                AND (REGEXP_LIKE (pm.t_payeraccount, '^407|^406|^405|^40802') " +
             "                AND (REGEXP_LIKE (pm.t_receiveraccount, '^407|^406|^405|^40802|^423|^30232810209000060165')))) " +
             "             OR (pm.t_payerbankid != pm.t_receiverbankid " +
//           "                AND NOT REGEXP_LIKE (pm.t_receiveraccount, '^401|^402|^403|^404')) " +
             "                AND NOT( " + // не проводим платежи
             "                       (pm.t_amount >= 500001 " + // если время для ТП позволяет проводить платеж, но сумма больше 500001
             "                       AND EXISTS (SELECT *  " +
             "                       FROM dsfcontr_dbt cont, usr_sfplan sftime, dsfcontrplan_dbt plan " +
             "                       WHERE     cont.t_object = pm.t_payeraccount " +
             "                             AND cont.t_id = plan.t_sfcontrid " +
             "                             AND cont.t_objecttype = 1 " +
             "                             AND cont.t_servkind = 3  " +
             "                             AND sftime.t_flag = CHR (88) " +
             "                             AND sftime.t_planid = plan.t_sfplanid " +
             "                             AND (plan.t_end = TO_DATE ('01.01.0001', 'dd.mm.yyyy') " +
             "                                  OR plan.t_end > TO_DATE ('"+{curdate}+"', 'DD.MM.YYYY')) " +
             "                             AND SYSDATE <= TO_DATE (CONCAT ('"+{curdate}+"', sftime.t_time), 'DD.MM.YYYY HH24:MI:SS' ))) " +
             "                       OR EXISTS (SELECT *  " + // или если время не позволяет проводить проводить 
             "                       FROM dsfcontr_dbt cont, usr_sfplan sftime, dsfcontrplan_dbt plan " +
             "                       WHERE     cont.t_object = pm.t_payeraccount " +
             "                             AND cont.t_id = plan.t_sfcontrid " +
             "                             AND cont.t_objecttype = 1 " +
             "                             AND cont.t_servkind = 3  " +
             "                             AND sftime.t_flag = CHR (88) " +
             "                             AND sftime.t_planid = plan.t_sfplanid " +
             "                             AND (plan.t_end = TO_DATE ('01.01.0001', 'dd.mm.yyyy') " +
             "                                  OR plan.t_end > TO_DATE ('"+{curdate}+"', 'DD.MM.YYYY')) " +
             "                             AND SYSDATE > TO_DATE (CONCAT ('"+{curdate}+"', sftime.t_time), 'DD.MM.YYYY HH24:MI:SS' )))) "+
             //условие признака "Проведение после опер.дня", категория по клиенту
             "                       OR EXISTS ( SELECT 1 "+
             "                            FROM dobjatcor_dbt  " +
             "                              WHERE t_objecttype = 3 "+
             "                              AND t_groupid = 111 "+
             "                              AND t_attrid = 1 "+
             "                              AND t_object = LPAD (pm.t_payer, 10, '0')) ) ";

    setparm(0,retval);
end;

private macro m_vnutren()
  //Gurin S. 02.01.2012 C-16767
  var retval, cond;
  if (BIC_BANK == "")
     cond = " AND PM.T_PAYERBANKID = PM.T_RECEIVERBANKID ";
  else
     cond = " AND (PM.T_PAYERBANKID = PM.T_RECEIVERBANKID or prop.t_bankcode in ("+BIC_BANK+")) ";
     no_empty = True;
  end;

    retval = cond +
              " AND (REGEXP_LIKE(pm.t_payeraccount, '^407|^406|^405|^40802') AND (REGEXP_LIKE(pm.t_receiveraccount, '^407|^406|^405|^40802|^423|^30232810209000060165'))) ";
    setparm(0,retval);
end;

private macro m_nothing()
    var retval;
              
    retval =  " and 2 = 1 ";

    setparm(0,retval);
end;

private macro m_all()
    var retval;

    retval =  " and 1 = 1 ";

    setparm(0,retval);
end;

//Выбираем необходимое действие в зависимости от времени и настроек в таблице usr_me_time_dbt
macro get_action(v_time)
     var rs, str;

     str = "select * from usr_me_time_dbt ";
     if (isholiday)
       str = str + " where t_is_holiday = chr(88) ";
     else
       str = str + " where t_is_holiday = chr(0) ";
     end;
     str = str + " ORDER BY TO_DATE (SUBSTR (t_timebegin, 1, INSTR (t_timebegin, '.') - 1), 'hh24:mi:ss') ";

     rs = trsbdataset(str);

     while (rs and rs.movenext)
         if((rs.t_tb_include == "X") and  (rs.t_te_include == "X" )) // >=  <=
           if ((v_time >= time(rs.t_timebegin)) and (v_time <= time(rs.t_timeend))) 
             return rs.t_action;
           end;
         elif((rs.t_tb_include == "X") and  (rs.t_te_include != "X" )) // >=  <
           if ((v_time >= time(rs.t_timebegin)) and (v_time < time(rs.t_timeend))) 
             return rs.t_action;
           end;
         elif((rs.t_tb_include != "X") and  (rs.t_te_include == "X" )) // >  <=
           if ((v_time > time(rs.t_timebegin)) and (v_time <= time(rs.t_timeend))) 
             return rs.t_action;
           end;
         else // >  <
           if ((v_time > time(rs.t_timebegin)) and (v_time < time(rs.t_timeend))) 
             return rs.t_action;
           end;
         end;
     end;
     msgbox("Ни одно из условий не было выбрано!");
     return "m_nothing";
end;

private macro countPM()
   var clause="", r, from = "", condition = "", ret;
   no_empty = False;

    if( not execmacro(get_action(time()),clause))
        Msgbox("Не найдено требуемое действие, обратитесь к администратору.");
        exit(); 
    end; 

    //Gurin S. 02.01.2012 C-16767
    ret = get_action(time());
   
    if (((ret == "m_vnutren") or (ret == "m_vneshn")) and no_empty) //Gurin S. 02.01.2012 C-16767
       from      =  "     from   dpmpaym_dbt pm, dpspayord_dbt ps, doproper_dbt op, dpmrmprop_dbt pr, dpmprop_dbt prop ";
       condition =  "            and pm.t_documentid = prop.t_paymentid and prop.t_debetcredit = 1";
    else
       from      =  "     from   dpmpaym_dbt pm, dpspayord_dbt ps, doproper_dbt op, dpmrmprop_dbt pr ";
    end;
    //end Gurin S. 02.01.2012 C-16767

    r = rsdrecordset ("   select   count(1) as cnt " +
        from + //Gurin S. 02.01.2012 C-16767
        //"     from   dpmpaym_dbt pm, dpspayord_dbt ps, doproper_dbt op, dpmrmprop_dbt pr " +
        "    where       pm.t_dockind = 201 " +
        "            and pm.t_documentid = ps.t_orderid " +
        condition + //Gurin S. 02.01.2012 C-16767
        "            and ps.t_currentstate = 0 " +
        "            and ps.t_origin = 2 /*клиент банк*/ " +
        clause +
        "            and (pr.t_date <= to_date ('"+{curdate}+"', 'DD.MM.YYYY') or pr.t_date <= to_date ('"+{curdate}+"', 'DD.MM.YYYY') )" +
        "            and op.t_documentid = lpad (to_char (pm.t_paymentid), 34, '0') " +
        "            and op.t_dockind = pm.t_dockind " +
        "            and pr.t_paymentid = pm.t_paymentid "+
        "        AND NOT EXISTS ( SELECT 1 "+
        "  FROM dobjatcor_dbt "+
        " WHERE t_objecttype = 501 "+
        "   AND t_groupid = 1003 "+
        "   AND t_attrid = 1 "+
        "   AND t_object = LPAD (pm.t_paymentid, 10, '0'))  "+

        "        AND NOT EXISTS ( SELECT 1 "+
        "  FROM dobjatcor_dbt "+
        " WHERE t_objecttype = 4 "+
        "   AND t_groupid = 107 "+
        "   AND t_attrid = 1 "+
        "   AND t_object = '010000000'||pm.t_payeraccount)  ");

    if (r.movenext())
       return r.value(0);
    else
       return 0;
    end;
end;

private macro catch(x)
    var err_count = 0, is_no_wait = 0;
    var lasterror = "oшибка:"+x.module + "[" + x.line + "]:" + x.message;
 
    setdialogflag(1);
    while( err_count < RSLDefEnv.ErrorCount )
       if(RSLDefEnv.error(err_count).nativeerror == 54)
          setdialogflag(0);
          is_no_wait = RSLDefEnv.error(err_count).nativeerror;
       end;
       lasterror = lasterror + "|"+RSLDefEnv.error(err_count).descr;
       err_count = err_count + 1;
    end;

    if (RSLDefCon.IsinTrans)
       RSLDefCon.RollbackTrans;
    end;
    if(is_no_wait == 54)
       println(lasterror);
       setdialogflag(1);
    else
       msgbox (lasterror);
    end;
end;

Private Macro StartPM(add_clause)
    var from = "", condition = "", ret; //Gurin S. 02.01.2012 C-16767
    //no_empty = False;
    initprogress(-1,"обработка платежей Клиент-Банк");

    cmd = RSDCommand("truncate table doprtemp_tmp");
    cmd.execute;
    cmd=RSDCommand("truncate table usr_doprtemp_tmp;");
    cmd.Execute();

    rsldefcon.BeginTrans;

    SaveBeginTime (); //Старт
    debugbreak;
    //Gurin S. 02.01.2012 C-16767
    ret = get_action(time());

    if (((ret == "m_vnutren") or (ret == "m_vneshn")) and no_empty)
       from      =  "     from   dpmpaym_dbt pm, dpspayord_dbt ps, doproper_dbt op, dpmrmprop_dbt pr, dpmprop_dbt prop ";
       condition =  "            and pm.t_documentid = prop.t_paymentid and prop.t_debetcredit = 1";
    else
       from      =  "     from   dpmpaym_dbt pm, dpspayord_dbt ps, doproper_dbt op, dpmrmprop_dbt pr ";
    end;
    //end Gurin S. 02.01.2012 C-16767

    cmd = RSDCommand(
                "insert into doprtemp_tmp (t_id_operation, " +
                "                          t_sort, " +
                "                          t_dockind, " +
                "                          t_documentid, " +
                "                          t_orderid, " +
                "                          t_kind_operation, " +
                "                          t_start_date, " +
                "                          t_isnew, " +
                "                          t_id_step) " +
                "   select   op.t_id_operation, " +
                "            null, " +
                "            pm.t_dockind, " +
                "            lpad (to_char (pm.t_paymentid), 34, '0'), " +
                "            pm.t_paymentid, " +
                "            decode (op.t_kind_operation, " +
                "                    0, (select   min (t_kind_operation) " +
                "                          from   doprkoper_dbt " +
                "                         where   t_dockind = 29 and t_notinuse = chr (0) and t_kind_operation > 0), " +
                "                    op.t_kind_operation) /*если операция не определена то определяется*/, " +
                "            rsbsessiondata.curdate, " +
                "            chr (88), " +
                "            null " +
                from + //Gurin S. 02.01.2012 C-16767
                //"     from   dpmpaym_dbt pm, dpspayord_dbt ps, doproper_dbt op, dpmrmprop_dbt pr, dpmprop_dbt prop " +
                "    where       pm.t_dockind = 201 " +
                "            and pm.t_documentid = ps.t_orderid " +
                condition +  //Gurin S. 02.01.2012 C-16767
                "            and ps.t_currentstate = 0 " +
                "            and ps.t_origin = 2 /*клиент банк*/ " +
                add_clause +
                "            and pr.t_date <= to_date ('"+{curdate}+"', 'DD.MM.YYYY') " +
                "            and op.t_documentid = lpad (to_char (pm.t_paymentid), 34, '0') " +
                "            and op.t_dockind = pm.t_dockind " +
                "            and pr.t_paymentid = pm.t_paymentid "+
                "        AND NOT EXISTS ( SELECT 1 "+
                "  FROM dobjatcor_dbt "+
                " WHERE t_objecttype = 501 "+
                "   AND t_groupid = 1003 "+
                "   AND t_attrid = 1 "+
                "   AND t_object = LPAD (pm.t_paymentid, 10, '0'))  "+
                 
                "        AND NOT EXISTS ( SELECT 1 "+
                "  FROM dobjatcor_dbt "+
                " WHERE t_objecttype = 4 "+
                "   AND t_groupid = 107 "+
                "   AND t_attrid = 1 "+
                "   AND t_object = '010000000'||pm.t_payeraccount)  ");

    cmd.execute;

    cmd = RSDCommand("delete from doprtemp_tmp op where exists (select 1 from doprstep_dbt where t_id_operation = op.t_id_operation)");
    cmd.execute;

    cmd = RSDCommand("select count(1) from doprtemp_tmp ");
    cmd.execute;
    var r = rsdrecordset(cmd);

    if (r.movenext())
       SaveAmount (r.value(0));//Количество
    end;

    cmd = RSDCommand("select * from dpmpaym_dbt where t_paymentid in (select t_documentid from doprtemp_tmp) for update nowait");
    setdialogflag(0);
    cmd.execute;
    setdialogflag(1);

    cmd = RSDCommand(
                     "update   dpspayord_dbt t " +
                     "   set   t_oper = ? " +
                     " where   exists (select   1 " +
                     "                   from   doprtemp_tmp " +
                     "                  where   t_orderid = t.t_orderid) "
                    );
    cmd.addparam("oper", RSDBP_IN, {oper});
    cmd.Execute();

    cmd = RSDCommand(
                     "update   dpmpaym_dbt t " +
                     "   set   t_oper = ? " +
                     " where   exists (select   1 " +
                     "                   from   doprtemp_tmp " +
                     "                  where   t_orderid = t.t_paymentid) "
                    );
    cmd.addparam("oper", RSDBP_IN, {oper});
    cmd.Execute();

    cmd=RSDCommand("begin ? := wld_common.definemessagereleaseforpmmass (false); end;");
    cmd.addParam("stat", RSDBP_RETVAL, V_INTEGER);
    cmd.Execute();

    cmd = RSDCommand("declare " +
                     "   v_cnt   number; " +
                     "   v_rng   number; " +
                     "begin " +
                     "   select   count (1) into v_cnt from doprtemp_tmp; " +
                     "   update   doprtemp_tmp " +
                     "      set   t_sort = null; " +
                     "   for i " +
                     "   in (  select   pmp.t_payeraccount, count (1) acc_cnt, rownum ac_num " +
                     "           from   doprtemp_tmp op, dpmrmprop_dbt pm, dpmpaym_dbt pmp " +
                     "          where       op.t_orderid = pmp.t_paymentid " +
                     "                  and op.t_dockind = pmp.t_dockind                   " +
                     "                  and pm.t_paymentid = pmp.t_paymentid                   " +
                     "       group by   pmp.t_payeraccount, rownum " +
                     "       order by   count (1) desc) " +
                     "   loop " +
                     "      for j in (  select   pmp.t_documentid, rownum n " +
                     "                    from   doprtemp_tmp op, dpmpaym_dbt pmp " +
                     "                   where   op.t_documentid = pmp.t_paymentid and pmp.t_payeraccount = i.t_payeraccount " +
                     "                order by   t_paymentid) " +
                     "      loop " +
                     "         v_rng := round (v_cnt / i.acc_cnt); " +
                     "         update   doprtemp_tmp " +
                     "            set   t_sort = v_rng * j.n + i.ac_num " +
                     "          where   t_orderid = j.t_documentid; " +
                     "      end loop; " +
                     "   end loop; " +
                     "end; "
                    );
    cmd.Execute;

/*18.12.2012 LAO Перед началом старта сохраняем данные в таблицу!*/
  // cmd=RSDCommand("insert into usr_doprtemp_tmp ( select * from doprtemp_tmp);");
  // cmd.Execute();
   
    if (opr.change_opr_stat(291,2/*состояние=открыт*/) and opr.change_opr_stat(292, 6/*ДО=предобработка*/) and opr.start_operation)
       rsldefcon.CommitTrans;

       cmd=RSDCommand("begin usr_operations.exec_steps_for_temp; end;");
       cmd.Execute();

    else
       println("Ошибка запуска операции: "+opr.lasterror+"\nдокументы находятся в списке отложенных");
       rsldefcon.RollbackTrans;
    end;
    remprogress;

    num = num + 1;
    rep_file_succ = GetTxtFileName("report_succ");
    rep_file_err = GetTxtFileName("report_err");
    PrintReport("Interbank",num);
    setoutput(null,true);
    cmd=RSDCommand("truncate table usr_doprtemp_tmp;");
    cmd.Execute();
    cmd = RSDCommand("truncate table doprtemp_tmp");
    cmd.execute;

    SaveEndTime (10); //Закончили

    onerror(er)
    catch(er);
end;

msgbox("Произведен запуск круглосуточного робота ЭкспрессВолга.");
set_pipe_server(pipe_server_interbank);

intM = 1;
GetRegistryValue("PRBB\\MASS_EXEC\\PAUSE_MIN", V_INTEGER, Min_Time, Value_err);
intM=Min_Time;

intMax = 5;
GetRegistryValue("PRBB\\MASS_EXEC\\PAUSE_MAX", V_INTEGER, IntMax, Value_err);

count_start = 10;

GetRegistryValue("PRBB\\MASS_EXEC\\COUNT_START", V_INTEGER, count_start, Value_err);

while (1 == 1)
    time1 = time;
    IntM = Min_time;
    mes = "F2 - Запуск, F6 - Настройка. Ожидание: ";
    flag = true;
    fl = true;
    BegAction(0,"Ожидаются платежи", false);
    countP = 0;
    while (flag)
    _key = testevent(5000); /*нетрадиционным писателям посвящается */
        time2 = time;
        message(string(mes,(time(0,intMax,0,0) - (time2 - time1))));

        if  ( (time2 - time1) > time(0,intM,0,0)) 
            //debugbreak;
            countP = countPM();
            if  (countP >= count_start)
                flag = false;
            else
                mes = "F2 - Запуск, F6 - Настройка. Платежей в очереди < "+count_start+" ("+countp+"), Ожидание: ";
                intM = intM + 1;
            end;
        end;

        If ( _key == F2 )
            flag = false;
        End;

        If ( _key == F8 )
            Return 0;
        End;

        If ( _key == F6 )
             execmacrofile("usr_me_time_panel.mac","Run_panel");
        End;

        if ((time2 - time1) > time(0,IntMax,0,0))
            flag = false;
        end;
    end;
    EndAction(0);

    flag_a = true;
    clause = "";

    if( not execmacro(get_action(time()),clause))
        Msgbox("Не найдено требуемое действие, обратитесь к администратору.");
        exit(); 
    end; 
    if (date() > {curdate})
        usr_SetOperDay(); //устанавливаем последний открытый ОД
        /*Установила или нет, пока не проводим, если все ок, проведем через 5 минут или придем повторно*/
        flag_a = false;
    end;
    //msgbox(clause);

    if (flag_a)
        IF (countPM() > 0)
           StartPM(clause);
        END;
    end;
end;
