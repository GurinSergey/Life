/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Банк ЭВ

       Макрос пользовательского алгоритма расчёта базовых сумм по комиссиям 
       " Выдача наличных (с оформл. заявки):
          - 5.2.3 прочее (до 100 тыс. руб);
          - 5.2.4 прочее (от 101 тыс. руб до 1млн. руб. включительно);
          - 5.2.6 прочее (свыше 101 тыс. руб до 1 млн. руб).
        (Если общая сумма снятия наличных на прочие цели не превышает 5 млн. 
         рублей в месяц) ".

       Тип комиссии - единовременная.

Изменения:
//joy 30.01.2014 I-00454531 Перенос модификации от 28.11.2013 C-23416 Добавила парметры true, sfcontr в Cash_CalcSymbSum_Period, чтобы искать чеки по всем счетам клиента
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ptinter, cb_sql;/*InsertSumList*/
import exvComLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
  record sfbassum( "sfbassum.str" );

/* Символ кассы, по которому берётся данная комиссия */
CONST CommCashSymbol = "('53', '42', '46', '54', '58', '60', '61')";    // прочие

CONST LimitSum = $5000000;

/*
    Расчет для единовременных комиссий
*/
macro CalcCommissionSum( docKind/*Тип первички*/, Doc/*Буфер первички*/, sfcalcalusr_addr/*Алгоритм расчета*/, sfcontr_addr /*Договор обслуживания*/, beginDate, endDate  )
    record sfclusr( "sfclusr.str" );
    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    record cashDoc(pscshdoc);

    var stat:integer; 
    var query, rs;
    var CommSum   = $0,
        SymbSum   = $0,
        TotalCashSum;
                
    SetBuff( sfcalcal, sfcalcalusr_addr );
    SetBuff( sfcontr, sfcontr_addr );
    SetBuff( cashDoc, Doc );


    // Комиссия по чекам
    if ( docKind == CASH_PS_OUTORDER )

       rs = GetComBank52RecordSet( cashDoc.IsCurrency, cashDoc.DocKind, cashDoc.AutoKey, CommCashSymbol );
       while (rs and rs.moveNext())
          SymbSum = SymbSum + rs.value(0, null, V_MONEY);
       end;

       if (EXV_Cash_IsProperCommission (sfcontr, sfcalcal, SymbSum) )

          TotalCashSum = Cash_CalcSymbSum_Period( DocKind, cashDoc, CommCashSymbol, true, sfcontr ); // joy 28.11.2013 C-23416 Добавила парметры true, sfcontr

          /* Если сумма чеков за месяц (с учётом текущей операции) не превысила лимит 5 млн, то 
             комиссия берётся с суммы текущего чека. */
          if ( (TotalCashSum + SymbSum) < LimitSum )
             CommSum = SymbSum;

          /* Если текущая операция приводит к тому, что сумма чеков за месяц начинает превышать
             лимит 5 млн, то комиссию берём с суммы данного чека, оставшейся до 5 млн. */
          else
             CommSum = LimitSum - TotalCashSum;
          end;

       end;

    end;

    if ( CommSum < $0 )
       CommSum = $0;
    end;

    ClearRecord(sfbassum);

    sfbassum.baseType  = SF_BASETYPE_SUM;
    sfbassum.baseSum   = CommSum;

    sfbassum.baseType2  = SF_BASETYPE_SUM;
    sfbassum.baseSum2   = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы: ", GetErrMsg );
    end;

    
    
    /*return integer( 1 ); -- количество*/
    
    /*return $1; -- сумма */
    
end;/*CalcCommissionSum*/




/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

