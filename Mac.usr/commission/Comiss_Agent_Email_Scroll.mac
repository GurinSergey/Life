/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   ████████   ████████
   ███   ███  ███   ███
   ███  ████  ███  ████
   ███████    ███████
   ███  ███   ███  ███
   ███   ███  ███   ███

   RR Рахмедов Р.С.

   Имя файла: Comiss_Agent_Email_Scroll.mac

   Создан:    30.10.2013

   Описание:  Пользовательский скроллинг содержащий информацию об адресах почты сотрудников банка, которым робот ЕРЦ 20201 будет делать рассылку
              в Lotus Notes. Отправка писем производится через ФРОНТ.
              
              Из-за проблем с XML журнализацией, текущая версия не имеет логирования. В дальнейщем при устранении проблемы допишу логирование.
              
   ChangeLog:
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 06.12.2013 С-24538 Расширяем скролинг, добавляются адреса пользователей которые будут уведомляться об открытии доходных счетов, отправка
                   также через фронт, инициализация отправки будет осуществлятся пользовательской функцией в списке счетов.
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 26.03.2014 Перенес недостающие доработки, доработал тестовую отправку уведомлений
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
Import RSD, Globals, Send_Lotus;

 class TypeEmail(t_type, t_descr)
  var type  = t_type;
  var descr = t_descr;
 end;

 Array ArrTypeEmail;
 ArrTypeEmail(0) = TypeEmail(0, "Агент комиссий");
 ArrTypeEmail(1) = TypeEmail(1, "Открытие дох. счета");

 Array ArrForMenu;
 ArrForMenu(0) = "0 - Адрес для агента комиссий";
 ArrForMenu(1) = "1 - Адрес для уведомления об открытии дох. счета";

private const /*Константы для скролинга*/
       KEY_ENTER         = 13,
       KEY_ESC           = 27,
       KEY_F8            = 322,
       KEY_F9            = 323,
       KEY_F2            = 316,
       KEY_F3            = 317;;

private const 
       LBR_REGISTRY_PATH = "BANK_INI/ОБЩИЕ ПАРАМЕТРЫ/ДИРЕКТОРИИ/LBRDIR",
       LBR_NAME_FILE     = "UCA_EMAIL_LBR.lbr",
       LBR_NAME_PANEL    = "TEXTPNL";

private  var
   Scrollcmd  = " SELECT T_ID, T_DATE, T_EMAIL, T_OPER, T_TYPE_EMAIL, T_TYPE_EMAIL_DESCR  FROM DUSR_CAE_DBT ",
   rrs        = RSDRecordset(RsdCommand(Scrollcmd) , RSDVAL_CLIENT, RSDVAL_Static ),
   NameScroll = "Список адресов для отправки уведомлений о завершении выполнения роботом ЕРЦ(20201) всех заданий",
   KeysScroll = "Enter- Выбор ESC- Выход F8 - Удалить F9 - Добавить запись  F2 - Тестовая отправка",
   lbr_fullpath, 
   lbr_directory,
   id, 
   dlg,
   email_str,
   email_type,
   RMenu = 0,
   flag = true;

MACRO TestSend(Rmenu)
 debugbreak;
 var rs, i = 0,  recipients = "";
 Array ArrForSend;
   rs = RSDRecordset("select T_EMAIL from DUSR_CAE_DBT where t_id != 0 and T_TYPE_EMAIL = "+Rmenu+"");
   while (rs and rs.movenext())
     ArrForSend(i) = rs.value("T_EMAIL");
     i = i + 1;
   end;
   i = 0;
   while (ASize(ArrForSend) > i)
     Send_l("Тестовая отправка", "Тестирование отправки уведомлений в Lotus", 85,ArrForSend(i));
     i = i + 1;
   end;
 onerror(er)
   msgbox("Не удалось отправить тестовое письмо\n "+recipients+"");
END;

 MACRO GetScroll()
 
  var Column = TArray;
  
   /**/
   MACRO PanelEventHandler (dlg, Command, id, key, aa)
    private var cmd; 
    //debugbreak;
    if ((Command == DLG_KEY) and (key == KEY_ESC))
      if ((email_str != dlg.rec.EMAIL) or (email_type != dlg.rec.type))
        if (GetTrue(True, "Запись была изменена,\n хотите сохранить изменения ?"))
          rrs.edit();
          rrs.value("T_EMAIL")            = dlg.rec.EMAIL;
          rrs.value("T_TYPE_EMAIL")       = dlg.rec.Type;
          rrs.value("T_TYPE_EMAIL_DESCR") = dlg.rec.Type_Descr;
          rrs.update();
          flag = true;
        else
          return CM_DEFAULT;
        end;
      end;
      return CM_DEFAULT;
     elif ((Command == DLG_KEY) and (key == KEY_F9))
      if ((email_str != dlg.rec.EMAIL) or (email_type != dlg.rec.type))

        rrs.edit();
        rrs.value("T_EMAIL")            = dlg.rec.EMAIL;
        rrs.value("T_TYPE_EMAIL")       = dlg.rec.Type;
        rrs.value("T_TYPE_EMAIL_DESCR") = dlg.rec.Type_Descr;
        rrs.update();
        flag = true;
      end;
    elif ((Command == DLG_KEY) and (key == KEY_F3))
      //debugbreak;
      RMenu        = Menu(ArrForMenu, "", "", 37,13);
      if (RMenu < 0)
        RMenu = 0; 
      end;
      dlg.rec.Type       = ArrTypeEmail(Rmenu).type;
      dlg.rec.Type_Descr = ArrTypeEmail(Rmenu).descr;
    end;
     return CM_DEFAULT;
   END;
 
   /*Процедура обработки нажатия F9 для вызова формы редактирования информации и всех последующих нажатий*/
  MACRO PanelEventHandlerIns (dlg, Command, id, key, aa)
    private var cmd;
    
    if ((Command == DLG_KEY) and (key == KEY_ESC))
        if ((email_str != dlg.rec.EMAIL) or (email_type != dlg.rec.type))  
          if (GetTrue(True, "Запись была изменена,\n хотите сохранить изменения ?"))
          rrs.addnew();
          rrs.value("T_DATE")             = {curdate};
          rrs.value("T_EMAIL")            = dlg.rec.EMAIL;
          rrs.value("T_TYPE_EMAIL")       = ArrTypeEmail(RMenu).type;
          rrs.value("T_TYPE_EMAIL_DESCR") = ArrTypeEmail(RMenu).descr;
          rrs.value("T_OPER")             = {oper};
          rrs.update();
          flag = true;
          return CM_SAVE;
        end;
      end;
      return CM_DEFAULT;
    elif ((Command == DLG_KEY) and (key == KEY_F9))
      rrs.addnew();
      rrs.value("T_DATE")             = {curdate};
      rrs.value("T_EMAIL")            = dlg.rec.EMAIL;
      rrs.value("T_TYPE_EMAIL")       = ArrTypeEmail(RMenu).type;
      rrs.value("T_TYPE_EMAIL_DESCR") = ArrTypeEmail(RMenu).descr;
      rrs.value("T_OPER")             = {oper};
      rrs.update();
      flag = true;
    elif ((Command == DLG_KEY) and (key == KEY_F3))
    debugbreak;
      RMenu        = Menu(ArrForMenu, "", "", 37,13);
      if (RMenu < 0)
        RMenu = 0; 
      end;
      dlg.rec.Type       = ArrTypeEmail(Rmenu).type;
      dlg.rec.Type_Descr = ArrTypeEmail(Rmenu).descr;
    end;
   END;
 
   /*Процедура обработки нажатия клавиш в скролинге*/
   MACRO EvProc (Rrs, Command, id, key )
     private var cmd:String = "";
      
        if   ((Command == DLG_KEY) and (key == KEY_ENTER))
          if ( GetRegistryValue ( LBR_REGISTRY_PATH, V_STRING, lbr_directory ))
              lbr_fullpath       = FindPath ( LBR_NAME_FILE, lbr_directory );
              dlg                = TRecHandler ( LBR_NAME_PANEL, lbr_fullpath, TRUE );
              dlg.rec.Date       = rrs.value("T_DATE");
              dlg.rec.Oper       = rrs.value("T_OPER");
              dlg.rec.Type       = rrs.value("T_TYPE_EMAIL");
              dlg.rec.Type_descr = rrs.value("T_TYPE_EMAIL_DESCR");
              dlg.rec.EMAIL      = rrs.value("T_EMAIL") ;
              email_str          = dlg.rec.EMAIL ;
              email_type         = dlg.rec.Type;
              RunDialog (dlg, "PanelEventHandler");
              return CM_DEFAULT;
          else
             msgbox ("Ошибка при получении пути к LBR");
          end;
         
          return CM_IGNORE;
         
        elif ((Command == DLG_KEY) and (key == KEY_F9))
      
          if ( GetRegistryValue ( LBR_REGISTRY_PATH, V_STRING, lbr_directory ))

              lbr_fullpath       = FindPath ( LBR_NAME_FILE, lbr_directory );
              dlg                = TRecHandler ( LBR_NAME_PANEL, lbr_fullpath, TRUE );
              dlg.rec.Date       = {curdate};
              dlg.rec.Oper       = {oper};
              dlg.rec.EMAIL      = "";
              dlg.rec.type       = ArrTypeEmail(0).type;
              dlg.rec.type_descr = ArrTypeEmail(0).descr;;
              email_str          = dlg.rec.EMAIL;
              RunDialog (dlg, "PanelEventHandlerIns");

          else
             msgbox ("Ошибка при получении пути к LBR");
          end;
           
          return CM_CANCEL;
      
        elif ((Command == DLG_KEY) and (key == KEY_F8))
          rrs.Delete();
          flag = true;
          return CM_CANCEL
        elif ((Command == DLG_KEY) and (key == KEY_ESC))
         return CM_CANCEL;
        elif ((Command == DLG_KEY) and (key == KEY_F2))
          if (GetTrue(false, "Хотете выполнить тестовую отправку,\n писем в Lotus Notes по всем указанным адресам ?"))
            RMenu        = Menu(ArrForMenu, "", "Тип адресатов", 37,13);
            if (RMenu < 0)
              RMenu = 0; 
            end;
            TestSend(RMenu);
            msgbox("Письмо успешно отправлено");
          end;
          return CM_CANCEL;
        end;
      
    return CM_DEFAULT;
   END;

  /*Процедура построения текстовых колонок скролинга*/
   MACRO AddColumn (ar,ind, fld, head, width, rdonly)
      ar.value (ind * 6)      = fld;
      ar.value (ind * 6 + 1)  = head;
      ar.value (ind * 6 + 2)  = width;
      ar.value (ind * 6 + 3 ) = 0;   //fldType;
      ar.value (ind * 6 + 4 ) = 0;   // decPoint
      ar.value (ind * 6 + 5 ) = 0;   // reserv
   END;

  AddColumn  (Column, 0,  "T_DATE",             "Дата",                           10, false ) ;
  AddColumn  (Column, 1,  "T_EMAIL",            "Адрес получателя в Lotus Notes", 20, false ) ;
  AddColumn  (Column, 2,  "T_OPER",             "Опер.",                          10, false ) ;
  AddColumn  (Column, 3,  "T_TYPE_EMAIL_DESCR", "Тип адресата",                   15, false ) ;

 rrs = RSDRecordset(RsdCommand(Scrollcmd) , RSDVAL_CLIENT, RSDVAL_Static );
 RunScroll(Rrs, 4, Column, null, @EvProc, NameScroll, KeysScroll,false,null,null,0,0);
 
END;

/* Точка входа */
 while(flag)
  flag = false;
  GetScroll();
 end;
rrs.Close();
exit(1); 