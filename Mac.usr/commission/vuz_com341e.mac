// 4test
//RR 10.07.2012 Платежи внутри банков группы комиссией не облагаются
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Банк ВУЗ

       Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.4.1
       "Прочие платежи в пользу клиентов (юр. лиц,ИП,физ. лиц в рамках зарпл.
        проектов, подтвержд. договором)  других  банков, принятые до 16-00 на 
        бумажных носителях".

       Тип комиссии - единовременная.


Изменения:
joy 19.03.2013 Жаворонкова Н. R-167747 Добавлена пачка 1003, согласовано с Петренко О.
joy 13.12.2013  Жаворонкова Н. С-25038 Исключаем платежи с происхождением "Счета на оплату"
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, cb_sql;
import VuzComLib;
import lib_packetCommission; // 2012-09-03 zip_z. C-13674

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

record sfbassum( "sfbassum.str" );


/* Допустимые номера пачек для комиссии zip_z переписал like python для красоты */
var PackNumber = makeArray (305, 1003, 4003, 4004, 4005, 4006, 4007, 4305, 5003, 7003);

/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcCommissionSum( docKind/*Тип первички*/, Doc/*Буфер первички*/, sfcalcalusr_addr/*Алгоритм расчета*/, sfcontr_addr /*Договор обслуживания*/, beginDate, endDate  )
    record sfclusr( "sfclusr.str" );
    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    record payord(pspayord);

    SetBuff( sfcalcal, sfcalcalusr_addr );
    SetBuff( sfcontr, sfcontr_addr );
    SetBuff( payord, Doc );

    var CommQuont   = 0;
    var PaymObj:object;
    
    // 2012-09-03 zip_z. C-13674 Для единовременной комиссии 3.4.1 (ВУЗ) при простановке категории 
    // 200 на клиенте комиссия не рассчитывается, т.е. дальнейшие приседания бессмысленны
    // lib_packetCommission::isConnectedPacketCommissionOnDate ()
    // #0
    DebugBreak ();
    if (not (isConnectedPacketCommissionOnDate (sfcontr.object, endDate)))
        PaymObj = RsbPayment( Payord.OrderID );
        // #1 RR 10.07.2012 Платежи внутри банков группы комиссией не облагаются
        if (  not IsPayerBankIdInLifeGroup(PaymObj.ReceiverBankID) )
            /* #2 Только для внешних платежей,  также исключаются частичные оплаты К2 */
            if ((PaymObj.isExternal) and (PaymObj.ShifrOper != 16 ))
                // #3
                if ( ( Payord.Origin != CLB_DocOrigin )  and ( Payord.Origin != 3201 )  // Не Клиент-Банк
                    and ( isProperPack( PaymObj.NumberPack, PackNumber ) )
                    and (
                           ( ( VUZ_isAccount_Jur( PaymObj.PayerAccount )        // Плательщик - юр. лицо
                               or VUZ_isAccount_IP( PaymObj.PayerAccount ) )    // Плательщик - ИП
                             and
                         ( VUZ_isAccount_Jur( PaymObj.ReceiverAccount )     // Получатель - юр. лицо
                           or VUZ_isAccount_IP( PaymObj.ReceiverAccount ) ) // Получатель - ИП
                           )
                     or
                       ( ( ( VUZ_isAccount_Jur( PaymObj.PayerAccount )                      // Плательщик - юр. лицо
                             or VUZ_isAccount_IP( PaymObj.PayerAccount ) )                  // Плательщик - ИП
                           and VUZ_typeAccount_SalaryProject( PaymObj.PayerAccount )        // Польз. тип счета плательщика содержит Z - зарплатный проект
                         )
                         and
                         ( VUZ_isAccount_Phis( PaymObj.ReceiverAccount )                    // Получатель - физ. лицо
                           or VUZ_isAccount_Incomplete( PaymObj.ReceiverAccount ) )         // Получатель - счёт незавершенных расчётов
                       )
                     )
                   )

                    CommQuont = 1;
                end; // #3
            end; // #2
        end; // #1
    end; // #0
    
    ClearRecord(sfbassum);

    sfbassum.baseType    = sfbassum.baseType2   = SF_BASETYPE_QUONT;
    sfbassum.baseQuont   = sfbassum.baseQuont2  = CommQuont;

    if( InsertSumList(sfbassum) )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/

// Копипастеры... это ЕДИНОВРЕМЕННАЯ комиссия, отчеты по периодическим не нужны :(
/***************************************************************************************************

macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;

macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;

macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;

***************************************************************************************************/