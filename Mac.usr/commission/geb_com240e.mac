/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Банк "Газэнергобанк" (ГЭБ)
   
       Макрос пользовательского алгоритма расчёта базовых сумм по комиссии 2.4.0
       "Закрытие р/счета (по заявлению клиента) (при меньшем остатке - в пределах 
        остатка ДС на р/с) Взимается в день закрытия счета".

       Тип комиссии - единовременная.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ptinter, cb_sql;/*InsertSumList*/
import CommissLib, GebComLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
    record sfbassum( "sfbassum.str" );


/* Символ кассы, по которому берётся данная комиссия */
CONST CommCashSymbol = "('53', '42', '46', '47', '54', '58', '59', '60', '61')";    // прочие и т.п.



/*
    Расчет для единовременных комиссий
*/
macro CalcCommissionSum( docKind/*Тип первички*/, Doc/*Буфер первички*/, sfcalcalusr_addr/*Алгоритм расчета*/, sfcontr_addr /*Договор обслуживания*/, beginDate, endDate  )
    record sfclusr( "sfclusr.str" );
    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    record cashDoc(pscshdoc);

    var stat:integer; 
    var query, rs;
    var CommSum   = $0,
        AccRest   = $0;
        
    
    SetBuff( sfcalcal, sfcalcalusr_addr );
    SetBuff( sfcontr, sfcontr_addr );
    SetBuff( cashDoc, Doc );


    /* Определим остаток по счёту-объекту начисления */
    /* EVG 16/04/2012 Изменилась параметризация.
    AccRest = AccGetFreeAmount( sfcontr.object, CHAPT1, sfcontr.fiid, -6, null );*/
    AccGetFreeAmount( AccRest, null, sfcontr.object, CHAPT1, sfcontr.fiid, {curdate}, -6, null );

    /* В качестве комиссии списывается весь остаток счёта (в настройке комиссии уже наложен лимит 300 р.) */
    CommSum = AccRest;


    ClearRecord(sfbassum);

    sfbassum.baseType  = SF_BASETYPE_SUM;
    sfbassum.baseSum   = CommSum;

    sfbassum.baseType2  = SF_BASETYPE_SUM;
    sfbassum.baseSum2   = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы: ", GetErrMsg );
    end;

    
    
    /*return integer( 1 ); -- количество*/
    
    /*return $1; -- сумма */
    
end;/*CalcCommissionSum*/




/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

