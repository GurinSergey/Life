/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.5.2v
       "Перевод средств в пользу клиентов других банков, принятый к исполнению 
        после 13-00 текущего дня:
        - с оговоркой "все комиссии и расходы списать с нашего счета" (по 
          операциям в ЕВРО)".

       Тип комиссии - периодическая.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, fiinter, cb_sql;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );
record cpord(pscpord);



/* ID Категории "Время поступления платежа в Банк (для комиссий 3.4 / 3.5)" */
const GroupID = 1;

/* Значение категории */
const TarifCatNumber   = "> 13 часов",
      ExTarifCatNumber = "> 16 часов",
      ChargesType      = "OUR";



/*
    Расчет для периодических комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/ )

    record sfcontr( sfcontr );
    var query, rs, stat;
    var CommQuont   = 0,
        CommSum     = $0;
    var retVal, Attrid, Code, Num, error;

    debugbreak;

    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;

    query = " Select paym.t_PaymentID, paym.t_Amount, paym.t_FIID " +
            "   From DPmPaym_dbt paym,  DWlPm_dbt wlp, DWlMesLnk_dbt lnk, DWlMes_dbt mes, DWlMesVal_dbt val, DWlTpFld_dbt wlt " +
            "  Where paym.t_PayerAccount       = " + GetSQLString(sfcontr.Object) +
            "    and paym.t_PaymStatus         = 32000 " +                                    // Только закрытые
            "    and paym.t_ValueDate between    " + GetSQLDate(BeginDate) +
            "                             and    " + GetSQLDate(EndDate) +
            "    and wlp.t_PaymentID = paym.t_PaymentID " + 
            "    and lnk.t_ObjKind   = " + OBJTYPE_PAYMENT +
            "    and lnk.t_ObjID     = wlp.t_WlPmID " +
            "    and mes.t_MesID     = lnk.t_MesID " +
            "    and val.t_MesID     = mes.t_MesID " +
            "    and wlt.t_TpID      = 2 " +                                    // 2 - SWIFT
            "    and wlt.t_TpFieldID = val.t_TpFieldID " +
            "    and wlt.t_name      like ('71%') " +                           // 71 - Details of Charges
            "    and ( val.t_Value       = " + GetSQLString(ChargesType) +
            "       or trim(val.t_Value) = '') ";
    
    debugbreak;
//    msgbox(query);
    rs = rsdRecordSet(query);
    while (rs and rs.moveNext())


       ClearRecord(cpord);
       cpord.OrderID = rs.value(0, null, V_INTEGER);
       
       /* Получим значение категории "Время поступления платежа в Банк (для комиссий 3.4 / 3.5)" */
       Num = "";
       GetMainObjAttr (retVal, OBJTYPE_PSCPORDER, UniID(cpord, OBJTYPE_PSCPORDER), GroupID, null, null, Num);

       /* При подсчёте базовой суммы и количества, учитываются только документы с нужной категорией
          и валютой */
       if ( ((Num == TarifCatNumber)
              or
             (Num == ExTarifCatNumber))
              and
            (ПолучитьКодФинИн (rs.value(2, null, V_INTEGER), error, FICK_ISONUMBER) == "978") )

          CommQuont = CommQuont + 1;
          CommSum   = CommSum + rs.value(1, null, V_MONEY);
       end;
       
    end;

    /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommQuont > 0)
          return true;
       end;
       return false;
    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_QUONT;
    sfbassum.baseQuont   = CommQuont;

    sfbassum.baseType2   = SF_BASETYPE_QUONT;
    sfbassum.baseQuont2  = CommQuont;
    sfbassum.baseSum2    = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

