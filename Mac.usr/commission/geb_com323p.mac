/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Банк "Газэнергобанк" (ГЭБ)

       Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.2.3
       "Перевод средств со счетов клиентов Банка на счета в ГЭБ на счета физ. 
        лиц".

       Тип комиссии - периодическая.
       
       ChangeLog:
   //RR 20.02.2014 Адаптирую под 2031(darhdoc_dbt -> dacctrn_dbt)
   //joy 14.11.2014 I-00532241 в 2031 обязательно надо проверять, что t_state в проводках = 1
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, cb_sql, Globals;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );
record paym(pmpaym);

debugbreak;

/*
    Расчет для периодических комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/ )
debugbreak;
    record sfcontr( sfcontr );
    var query, rs, cmd, stat;
    var CommQuont   = 0,
        CommSum     = $0;
debugbreak;
    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;
    
    query = " Select NVL( SUM( paym.t_Amount ), 0 ) " +
            "   From DPmPaym_dbt paym, dpmrmprop_dbt rm" + /* 20-07-2012 joy I-00224394-2 Добавлено dpmrmprop_dbt, чтобы отрабатывало исключение по зарплате и т.п.*/
            "  Where paym.t_PayerAccount         = ? "  +
            "    and paym.t_PaymStatus           = 32000 " +                                      // Только закрытые
            /* Счёт плательщика - счёт юр. лица */
            "    and ( " +
            "          subStr(paym.t_PayerAccount, 1, 3) between '405' and '407' " +
            "          or subStr(paym.t_PayerAccount, 1, 5) in ('40807', '40802') " +
            "        ) " +
            /* Счёт получателя - счёт физ. лица */
            "    and ( " +
            "          subStr(paym.t_ReceiverAccount, 1, 3) in ('423', '426') " +
            "          OR subStr(paym.t_ReceiverAccount, 1, 5) in ('40817', '40820') " +
            "          OR paym.t_ReceiverAccount = '30232810500000000002' " +                    // ..., или платёж на счёт 30232810500000000002
            "        ) " +
            "    and rm.t_paymentid = paym.t_paymentid" + /*20-07-2012 I-00224394-2 joy добавлено*/
            /* EVG 19/07/2012 Снова включил */
            /* EVG 5/06/2012 Отключено пока по просьбе Д. Акобия. */
            /* EVG 5/06/2012 Добавлено по заявке C-10452 исключение комиссий по платежам на зарплату, алименты и выплаты по кредитам */
            "    and not REGEXP_LIKE  ('\\s' || LOWER (rm.t_ground), '(зар\\.плата|заработн[а-я][а-я]\\sплат[а-я]|зарплат[а-я]|з/п|\\sзп\\s|з\\.п|_зп_|" +
                                                                      "алимент|пособие|стипенд[а-я][а-я]|" +
            /* EVG 27/07/2012 Добавлены исключения беременност*(любое окончание), пособия (по просьбе Давида Акобия) */
                                                                      "беременност|пособия)') " +
            
            "    and paym.t_ReceiverBankID = ? " +                                               // Платеж внутренний
            "    AND EXISTS (SELECT ARH.T_ACCTRNID "+
            "                  FROM dacctrn_dbt arh, dpmdocs_dbt pmd "+
            "                 WHERE ARH.T_ACCTRNID = PMD.T_ACCTRNID"+
            "                   AND arh.t_state = 1" +
            "                   AND pmd.t_paymentid = paym.t_paymentid "+
            "                   AND arh.t_date_carry BETWEEN ? AND ? ) ";

    //msgbox (query, "|", {OurBank});
    debugbreak;
    cmd = rsdcommand(query);
    cmd.AddParam("", RSDBP_IN, sfcontr.Object);
    cmd.AddParam("", RSDBP_IN, {OurBank});
    cmd.AddParam("", RSDBP_IN, BeginDate);
    cmd.AddParam("", RSDBP_IN, EndDate);
    rs = rsdRecordSet( cmd );
    
    if (rs and rs.moveNext())
       CommSum = rs.Value (0, null, V_MONEY);
    end;
    //msgbox (CommSum);

    
    /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommSum > 0)
          return true;
       end;
       return false;
    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_SUM;
    sfbassum.baseSum     = CommSum;

    sfbassum.baseType2   = SF_BASETYPE_SUM;
    sfbassum.baseSum2    = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/
