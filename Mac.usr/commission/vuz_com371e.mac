/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  CDS Банк ВУЗ
  Дата: 27.05.2011
  Заявка С-236
  
      Макрос пользовательского алгоритма рассчета базовых сумм комиссии 3.7.1
      "Срочные платежи в электронном виде через систему БЭСП".
      
      Тип комиссии Единовременная.
      
      Примечание. Алгоритм рассчета базовой суммы вызывается из макроса 
      dsfchcom.mac для анализа суммы, еслли сумма > 0, то происходит отключение
      всех единовременных комиссий по данному платежу и взимание только комиссии 3.7.1.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, cb_sql;
import VuzComLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

record sfbassum( "sfbassum.str" );


/*
    Расчет для единовременных комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcCommissionSum( docKind/*Тип первички*/, Doc/*Буфер первички*/, sfcalcalusr_addr/*Алгоритм расчета*/, sfcontr_addr /*Договор обслуживания*/,
                         beginDate, endDate, sfcontrStruc /*Cтруктура sfcontr*/)
    record sfclusr( "sfclusr.str" );
    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    record payord(pspayord);

    SetBuff( sfcalcal, sfcalcalusr_addr );
    SetBuff( sfcontr, sfcontr_addr );
    SetBuff( payord, Doc );

    var stat;
    var CommQuont   = 0,
        CommSum     = $0;
        
    private var rs, sql, cmd;
    
    /* CDS При вызове из макроса используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;

    //Gurin S. 18.03.2016 добавил 40821 
    sql = " SELECT   paym.t_amount " +
          "   FROM   dpmpaym_dbt paym, dpmrmprop_dbt prop " +
          "  WHERE      paym.t_paymentid = prop.t_paymentid " +
          "         AND prop.t_paymentkind = 'С' " +
          "         AND REGEXP_LIKE (paym.t_receiveraccount, '(^40802|^40821|^40807)\\d{15}|(^405|^406|^407)\\d{17}') " +
          "         AND paym.t_paymentid = ? " +
          "         AND paym.t_payerbankid <> paym.t_receiverbankid " +
          "         AND prop.t_shifroper <> '16' ";
    cmd = RsdCommand(sql);
    cmd.AddParam("p_pmid", RSDBP_IN, payord.OrderId);
    rs = RsdRecordSet(cmd);

    if (rs and rs.movenext)
      CommSum = rs.value(0);
    end;
    
    /* CDS При вызове из макроса возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommSum > 0)
          return true;
       end;
       return false;
    end;
    

    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_SUM;
    sfbassum.baseSum     = CommSum;

    sfbassum.baseType2   = SF_BASETYPE_SUM;
    sfbassum.baseSum2    = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/


/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

