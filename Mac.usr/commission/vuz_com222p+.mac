//RR - 22.03.2012 Убрана константа, номер будет комиссии определяется автоматически.
//RR - 26.04.2012 Поскольку вызов изменился, изменился и способ определения номера комиссии.
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

RR - Рахмедов Руслан 02.11.2011

Комиссия 2.2.1 - Единая комиссия за ведение счетов Клиентов в мес. без эксплуатациии
СДУС "Интернет - Клиент" Для тарифных планов "Лайф Стартовый +" и "Лайф Стартовый Регион+"

За все документы кроме Интернет - Клиент

Тип комиссии: Периодическая

Имя файла vuz_com222p+.mac

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, currinter, fiinter, cb_sql, rsd, VuzComLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
var ComNum_222;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );
record sfcontr( sfcontr );
record sfcalcal(sfcalcal);

//Const ComNum_222 = 1073; //номер комиссии в dsfcomiss_dbt

/*
    Расчет для периодических комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/, ComNum_222 )
    SetBuff( sfcalcal, sAddr );
    var stat;
    var CommQuont;
    var DDate :Date;
    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;
    debugbreak;
    DDate = Vuz_Date_of_Last_Calc( sfcontr.id, sfcontr.object, sfcalcal.commnumber, EndDate ); //Дата начала расчета для Vuz_Rest_Start
    
    /* Проверяем пользовательский тип счёта */
    if (not (CheckUserField( sfcontr.PartyID, UsTypeAcCLB )) and (Vuz_Rest_Start(DDate, EndDate, sfcontr.object))) 
    
         if (CheckRestricted( sfcontr ) or
             CheckArrested( EndDate, sfcontr ) or
             CheckIndex2( EndDate, sfcontr ) or
             CheckFreeDate( sfcontr.PartyID, EndDate ))
               CommQuont = 0;
         else
               CommQuont = 1;
         end;
         
    elif ((CheckUserField( sfcontr.PartyID, UsTypeAcCLB )) or not(Vuz_Rest_Start(DDate, EndDate, sfcontr.object)))
       CommQuont = 0;
    end;
       //msgbox  (CommQuont, "|", CheckRestricted(), " - ", CheckArrested(EndDate), " - ", CheckIndex2(EndDate), " - ", CheckRest(BeginDate, EndDate));
       

    /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommQuont > 0)
          return true;
       end;
       return false;
    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType  = SF_BASETYPE_QUONT;
    sfbassum.baseQuont = CommQuont;

    sfbassum.baseType2  = SF_BASETYPE_QUONT;
    sfbassum.baseQuont2 = CommQuont;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

