/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.1.1
       "Зачисление поступивших средств на счета клиентов - поступления от 
       физических лиц внутренним переводом, при наличии соглашения о сборе 
       платежей".

       Тип комиссии - единовременная.
       
   ChangeLog:

   //RR 20.02.2014 Адаптирую под 2031(daccount$_dbt -> NULL)
   //joy 09.06.2015 I-00569890-2 Находим первый день месяца взимания
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, cb_sql;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );


// Польз. тип "Комиссии,оплачив. ю/л, за перевод б/о счета физ. лица."
const UserTypeAccordance = "Р";

/*
    Расчет для периодических комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/ )

    record sfcontr( sfcontr );
    var query, rs, stat;
    var CommSum = $0;
    var mm, yy, BegDate;
debugbreak;

    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;
       /*09.06.2015 joy I-00569890-2 Находим первый день месяца взимания*/
       dateSplit( EndDate, null, mm, yy );
       BegDate = date(1, mm, yy);

    query = " Select accP.t_Balance, accR.t_UserTypeAccount, paym.t_Amount " +
            "   From DPmPaym_dbt paym, DAccount_dbt accP , DAccount_dbt accR " +
            "  Where paym.t_ReceiverAccount = " + GetSQLString(sfcontr.Object) +
            "    and paym.t_ValueDate between      " + GetSQLDate(BegDate) +
            "                             and      " + GetSQLDate(EndDate) +
            "    and accP.t_Account       = paym.t_PayerAccount " +
            "    and accP.t_Code_currency = paym.t_FIID " +
            "    and accP.t_Chapter       = 1 " +
            "    and accR.t_Account       = paym.t_ReceiverAccount " +
            "    and accR.t_Code_currency = paym.t_FIID " +
            "    and accR.t_Chapter       = 1 ";
    rs = rsdRecordSet(query);
    while (rs and rs.moveNext())
       if ( 
            ( ( rs.value(0, null, V_STRING) == "42301" )
              or
              ( rs.value(0, null, V_STRING) == "40911" ) )
            and
            ( index(rs.value(1, null, V_STRING), UserTypeAccordance) > 0 )
          )

          CommSum   = CommSum + rs.value(2, null, V_MONEY);
       end;
    end;
    
    
    
    /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommSum > 0)
          return true;
       end;
       return false;
    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType = SF_BASETYPE_SUM;
    sfbassum.baseSum  = CommSum;

    sfbassum.baseType2 = SF_BASETYPE_SUM;
    sfbassum.baseSum2  = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

