/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Макрос пользовательского алгоритма расчёта базовых сумм по комиссии 5.11.5
       "Выдача наличных денежных средств предпринимателям, если общая сумма 
        снятия наличных не превышает 5 млн. руб. в месяц"

       Тип комиссии - единовременная.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/


import sfinter, ptinter, cb_sql;/*InsertSumList*/

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
    record sfbassum( "sfbassum.str" );


/* Символ кассы, по которому берётся данная комиссия */
CONST CommCashSymbol = "58";    // Выдачи со счетов индивидуальных предпринимателей



/*
    Расчет для единовременных комиссий
*/
macro CalcCommissionSum( docKind/*Тип первички*/, Doc/*Буфер первички*/, sfcalcalusr_addr/*Алгоритм расчета*/, sfcontr_addr /*Договор обслуживания*/, beginDate, endDate  )
    record sfclusr( "sfclusr.str" );
    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    record cashDoc(pscshdoc);

    var stat:integer; 
    var query, rs;
    var CommSum   = $0,
        SymbSum   = $0,
        mm, yy,
        MonthBegDate,
        PaymValueDate,
        TotalCashSum;
    

    SetBuff( sfcalcal, sfcalcalusr_addr );
    SetBuff( sfcontr, sfcontr_addr );
    SetBuff( cashDoc, Doc );


    /* Определим сумму документа, отнесённую к кассовому символу, по которому взимается комиссия */
    query = " Select nvl(symb.t_Sum, 0) " +
            "   From DSymbCash_dbt symb " +
            "  Where symb.t_DocKind        = Decode( " + GetSQLChar(cashDoc.IsCurrency) +
            "                                          , Chr(0),  1  " +       // Рубли - DocKind = 1
            "                                          , Chr(88), 7  " +       // Валюта - DocKind = 7
            "                                                   , 1) " +       // Default 1
            "    and symb.t_Kind           = Decode( " + cashDoc.DocKind +
            "                                          , 410, 1 " +            // Объявление на взнос (410) - Kind = 1
            "                                          , 420, 2 " +            // Чек (420) - Kind = 2
            "                                               , 1) " +           // Default 1
            "    and symb.t_ApplicationKey = lPad( " + GetSQLString(cashDoc.AutoKey) + ", 34, '0') " +
            "    and symb.t_Symbol         = " + GetSQLString(" " + CommCashSymbol);
    rs = rsdRecordSet(query);
    if (rs and rs.moveNext())

       SymbSum = rs.value(0, null, V_MONEY);

       if (SymbSum > $0)

          /* Найдём из платежа дату документа */
          query = " Select paym.t_ValueDate " +
                  "   From DPmPaym_dbt paym " +
                  "  Where paym.t_DocKind    = " + docKind +
                  "    and paym.t_DocumentID = " + cashDoc.Autokey;
          rs = rsdRecordSet(query);
          if (rs and rs.moveNext())
             PaymValueDate = rs.value(0, null, V_DATE);
          end;

          /* Определим дату начала текущего месяца */
          dateSplit(PaymValueDate, null, mm, yy);
          MonthBegDate = date(1, mm, yy);
          
          /* Посчитаем общую сумму снятия наличных по указанному символу за текущий месяц 
             (с начала месяца по дату выполнения данной операции). */
          TotalCashSum = $0;
          query = " Select nvl(symb.t_Sum, 0) " +
                  "   From DSymbCash_dbt symb, DPsCshDoc_dbt doc " +
                  "  Where doc.t_ClientAccount   = " + GetSQLString(cashDoc.ClientAccount) +
                  "    and doc.t_CloseDate      >= " + GetSQLDate(MonthBegDate) +
                  "    and doc.t_CloseDate      <= " + GetSQLDate(PaymValueDate) +
                  "    and symb.t_ApplicationKey = lPad(doc.t_ConnectAppKind, 5, '0') || " +
                  "                                doc.t_ConnectAppKey " +
                  "    and symb.t_Symbol         = " + GetSQLString(" " + CommCashSymbol);
          rs = rsdRecordSet(query);
          if (rs and rs.moveNext())
             TotalCashSum = rs.value(0, null, V_MONEY);
          end;

          if ( TotalCashSum <= $5000000 )
             CommSum = SymbSum;
          end;

       end;
       

    end;

    ClearRecord(sfbassum);

    sfbassum.baseType  = SF_BASETYPE_SUM;
    sfbassum.baseSum   = CommSum;

    sfbassum.baseType2  = SF_BASETYPE_SUM;
    sfbassum.baseSum2   = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы: ", GetErrMsg );
    end;

    
    
    /*return integer( 1 ); -- количество*/
    
    /*return $1; -- сумма */
    
end;/*CalcCommissionSum*/




/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

