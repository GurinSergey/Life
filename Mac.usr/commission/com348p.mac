/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.4.8
       "Перевод средств в пользу  клиентов других банков - прочие платежи на по
       системе Интернет-Клиент категория 3".

       Тип комиссии - периодическая.
       
   ChangeLog:
//EVG 22.04.2013 Реализована установка граничных условий на каждый документ с использованием 2-уровневой тарификации (C-19221, п. 1.1)
//RR  21.05.2013 Исправил ошибку при вызове макроса из процедуру подключения
//joy 22.05.2013 Жаворонкова Н.  R-193679-2 В дополнение к предыдущему исправлению: в ГЭБе у этой комиссии другой номер 
//joy 29.05.2015 Жаворонкова Н. C-40210 Адаптировано для ВУЗа
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, cb_sql;
import CommissLib;
import fg_Life_parm;

/* Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение */
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );
record paym(pmpaym);
record calcal (sfcalcal);

var AnalizeTime = 2; // Больше указанного времени

/* ID Категории "Вид тарифа комиссии за перевод средств" */
const GroupID = 10;

/* Номер категории, которая определяет тариф для платежей */
const TarifCatNumber = 5;

/*
    Расчет для периодических комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
    sfcalcal_addr /* EVG Адрес алгоритма (sfcalcal) */, sfcontrStruc /*Cтруктура sfcontr*/ )

    record sfcontr( sfcontr );
    var query, rs, stat;
    var CommQuont   = 0,
        CommSum     = $0;
    var retVal, Attrid, Code, Num;
    var fgBank = fg_life_subject( {OurBank} );



    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
        SetBuff( sfcontr, sfcontr_addr );
        SetBuff( calcal, sfcalcal_addr );
    else
        Copy ( sfcontr, sfcontrStruc );
    end;

    /* EVG 22/04/2013 Алгоритм расчёта комиссии изменён для того, чтобы устанавливать граничные условия на каждый документ.
    rs = GetCom34RecordSetB( sfcontr.Object, CLB_DocOrigin, BeginDate, EndDate, TarifCatNumber, sfcontr.id, AnalizeTime, DontSummarizeRecordset );
    if (rs and rs.moveNext())
       CommQuont = rs.value(0, null, V_INTEGER);
       CommSum   = rs.value(1, null, V_MONEY);
    end;*/

debugbreak;
    //RR 20.05.2013 При вызове CalcServiceSum из ConnectSfcontr_Mainproc не передается буфер sfcalcal_addr 
    //поэтому подключение не работает, задаю номер комиссии руками
    if ((ValType (sfcalcal_addr) == V_UNDEF) or (calcal.CommNumber == 0))
        calcal.FeeType    = 1;
        calcal.CommNumber = 1018; /* Номер в ПРББ*/
        /*22.05.2013 joy  R-193679-2 В ГЭБе у этой комиссии другой номер */
        if ( fgBank.is_Geb )
            calcal.CommNumber = 1077;
        elif (fgBank.is_VUZ)
            calcal.CommNumber = 1135; // 29.05.2015 joy C-40210
        end;
    end;
    /* Получаем информацию о тарифе */
    var TarifValue = 0, MinValue = 0, MaxValue = 0, TarifType = 0, OneOpCommSum;
    if( GetTarifInfo( sfcontr, EndDate, EndDate, calcal.FeeType, calcal.CommNumber, @TarifValue, @MinValue, @MaxValue, @TarifType ) )
        /* Передаём признак того, что нам нужна не сумма, а каждый документ отдельно */
        var DontSummarizeRecordset = true;
        rs = GetCom34RecordSetB( sfcontr.Object, CLB_DocOrigin, BeginDate, EndDate, TarifCatNumber, sfcontr.id, AnalizeTime, DontSummarizeRecordset );

        while (rs and rs.moveNext())
           // Тариф = Сумма
           if ( TarifType == 1 )        
                CommSum = CommSum + TarifValue;

           // Тариф = Процент
           elif ( TarifType == 2 )        
              OneOpCommSum = rs.Value( "pmAmount", null, V_MONEY ) * TarifValue / 100;

              if   ( (MinValue > $0) and (OneOpCommSum < MinValue) )
                    OneOpCommSum = MinValue;
              elif ( (MaxValue > $0) and (OneOpCommSum > MaxValue) )
                    OneOpCommSum = MaxValue;
              end;
              
              CommSum = CommSum + OneOpCommSum;

            end;
        end;
    end;

    /* EVG 22/04/2013 END */

/* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
        if ((CommQuont > 0) or (CommSum > 0))
            return true;
        end;
        return false;
    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_SUM;
    sfbassum.baseQuont   = CommQuont;
    sfbassum.baseSum     = CommSum;

    sfbassum.baseType2   = SF_BASETYPE_SUM;
    sfbassum.baseQuont2  = CommQuont;
    sfbassum.baseSum2    = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

