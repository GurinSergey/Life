/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Банк ВУЗ

       Макрос пользовательского алгоритма расчёта базовых сумм комиссии 2.2.1
       "Единая комиссия за ведение счетов Клиентов, в мес. с эксплуатацией 
        системы Интернет-Клиент".

       Тип комиссии - периодическая.
       
   ChangeLog:
   
   //joy 01.04.2013 C- 18667 Жаворонкова Н. Добавлена проверка на подключение авансовой комиссии
   //Гуцу Е. 3.04.2013 Добавлена проверка даты регистрации клиента (заявка C-18914).
   //joy 02.10.2013 C-23377 Жаворонкова Н. Добавлена проверка на новые авансовые комиссии
   //RR 28.04.2014 Макрос переведен на пакетный рассчет с помощью USR_COMISS_VUZ_221_222
   //RR 18.03.2015 Добавил передачу текущей даты при вызове поиска результата в usr_account_collection_221_222
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, currinter, fiinter, cb_sql, rsd, VuzComLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );
record sfcontr( sfcontr );

const CommNumber221 = 1002;

/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/ )

    var stat, cmd, rs;
    var CommQuont = 1;

    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;
debugbreak;
    cmd = RSDCommand ("  SELECT UAC.RET_VALUE "+
                      "    FROM usr_account_collection_221_222 uac "+
                      "   WHERE UAC.ACCOUNT = :1 "+
                      "     AND UAC.PARTYID = :2 "+
                      "     AND UAC.SFCONTRID = :3 "+
                      "     AND UAC.DATEPERIODBEGIN = :4 "+
                      "     AND UAC.DATEPERIODEND = :5 "+
                      "     AND UAC.COMISSID IN "+
                      "              (SELECT   COM.T_ID "+
                      "                 FROM   DSFCONCOM_DBT COM "+
                      "                WHERE       COM.T_FEETYPE = 1 "+
                      "                        AND COM.T_COMMNUMBER = :6 "+
                      "                        AND COM.T_OBJECTID = UAC.SFCONTRID) "+
                      "     AND UAC.FILL_DATE = :7 "+
                      "     AND UAC.ID != 0 ");
    cmd.AddParam("1", RSDBP_IN, sfcontr.object);
    cmd.AddParam("2", RSDBP_IN, sfcontr.partyid);
    cmd.AddParam("3", RSDBP_IN, sfcontr.id);
    cmd.AddParam("4", RSDBP_IN, BeginDate);
    cmd.AddParam("5", RSDBP_IN, EndDate);
    cmd.AddParam("6", RSDBP_IN, CommNumber221);
    cmd.AddParam("7", RSDBP_IN, {curdate});
    rs = RSDRecordSet(cmd);
    if (rs and rs.movenext())
      if(rs.value(0) == 0)
        CommQuont = 0;
      end;
    else
        cmd = RSDCommand( " SELECT (USR_COMISS_VUZ_221_222.CommissionCalculation ( account          => :1, "+
                          "                                                        partyid          => :2, "+
                          "                                                        sfcontrid        => :3, "+
                          "                                                        contrplan        => :4, "+
                          "                                                        date_reg_contr   => :5, "+
                          "                                                        begin_date       => :6, "+
                          "                                                        end_date         => :7, "+
                          "                                                        curdate          => :8, "+
                          "                                                        comiss_number    => :9)) "+
                          "  FROM   DUAL; ");
                  
        cmd.AddParam("1", RSDBP_IN, sfcontr.object);
        cmd.AddParam("2", RSDBP_IN, sfcontr.partyid);
        cmd.AddParam("3", RSDBP_IN, sfcontr.id);
        cmd.AddParam("4", RSDBP_IN, -1);
        cmd.AddParam("5", RSDBP_IN, sfcontr.datebegin);
        cmd.AddParam("6", RSDBP_IN, BeginDate);
        cmd.AddParam("7", RSDBP_IN, EndDate);
        cmd.AddParam("8", RSDBP_IN, {curdate});
        cmd.AddParam("9", RSDBP_IN, CommNumber221);
        rs = RSDRecordSet(cmd);
        rs.movenext();
        if (rs.value(0) == 0)
          CommQuont = 0;
        end;
    end;

    /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommQuont > 0)
          return true;
       end;
       return false;
    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType  = SF_BASETYPE_QUONT;
    sfbassum.baseQuont = CommQuont;

    sfbassum.baseType2  = SF_BASETYPE_QUONT;
    sfbassum.baseQuont2 = CommQuont;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

