/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   ████████   ████████
   ███   ███  ███   ███
   ███  ████  ███  ████
   ███████    ███████
   ███  ███   ███  ███
   ███   ███  ███   ███

   RR Рахмедов Р.С.

   Имя файла: com715p.mac

   Создан:    06.11.2013

   Описание:  Макрос расчета комиссии за использование токенов, расчет основывается на данных загруженных и ФРОНТа, 
              данные хрянятся в usr_front_tokeninfo. 
              
              Базовая сумма расчитывается для клиентов использующих одновременно две услуги Токен ГОСТ и Токен Pass
              
   ChangeLog:
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 20.11.2013 Добавлена проверка CheckComState прозводящая поиск комиссии указанной в RChecked со статусом = 0 начисляется.
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 24.01.2013 Исправил запрос, на поиск только действующего кода
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 25.02.2014 Макрос отныне не искользуется
-----------------------------------------------------------------------------------------------------------------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, cb_sql, rsd, CommissLib;

const TokenGOST     = "'Токен ГОСТ'";
const TokenPass     = "'Токен PASS'";
const RVerifiable   = "'7.1.5p'";
const RChecked1     = "'7.2.2'";
const RChecked2     = "'7.2.3'";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );
record sfcontr( sfcontr );

/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
 MACRO CalcServiceSum( sfcontr_addr, BeginDate, EndDate, sAddr, sfcontrStruc, _ComNumber)
  var stat, cmd, rs;
  var CommQuont = 1;

   if ( ValType (sfcontr_addr) != V_UNDEF )
      SetBuff( sfcontr, sfcontr_addr );
   else
      Copy ( sfcontr, sfcontrStruc );
   end;
   
   if (    (RCheckComState(sfcontr.id, RVerifiable, RChecked1)) 
       and (RCheckComState(sfcontr.id, RVerifiable, RChecked2)) )
     CommQuont = 0;
   else
     rs = RSDRecordSet(" SELECT   NVL (SUM (UFTI.TOKEN_COUNT), 0) token_count " +
                       "   FROM   usr_front_tokeninfo ufti, dobjcode_dbt o " +
                       "  WHERE       O.T_CODE = UFTI.RS_CODE_CLIENT " +
                       "          AND O.T_OBJECTTYPE = 3 " +
                       "          AND O.T_CODEKIND = 1 AND O.T_STATE = 0" +
                       "          AND UFTI.RS_CODE_CLIENT IN " +
                       "                   (SELECT   U.RS_CODE_CLIENT " +
                       "                      FROM   usr_front_tokeninfo u " +
                       "                     WHERE   u.SERVICE_TYPE = " +TokenGOST+
                       "                             AND EXISTS " +
                       "                                   (SELECT   1 " +
                       "                                      FROM   usr_front_tokeninfo " +
                       "                                     WHERE   SERVICE_TYPE = " +TokenPass+
                       "                                             AND RS_CODE_CLIENT = " +
                       "                                                   u.RS_CODE_CLIENT)) " +
                       "          AND O.T_OBJECTID = " + sfcontr.partyid);
     rs.movenext();
     CommQuont = rs.value("token_count") / 2;
   end;
   
   if ( ValType (sfcontrStruc) != V_UNDEF )
      if (CommQuont > 0)
         return true;
      end;
      return false;
   end;
    
   ClearRecord(sfbassum);

   sfbassum.baseType = SF_BASETYPE_QUONT;
   sfbassum.baseQuont  = CommQuont;

   sfbassum.baseType2 = SF_BASETYPE_QUONT;
   sfbassum.baseQuont2  = CommQuont;

   stat = InsertSumList(sfbassum);

   if( stat )
     MsgBox("Ошибка при вставке базовой суммы");
   end;
      

 END;/*CalcServiceSum*/