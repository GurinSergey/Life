/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   RR Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.10.1
       "Перевод средств в пользу других банков на условиях гарантированного получения
        средств банком- бенефициара FULLPAY".

       Тип комиссии - единовременная.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/


import sfinter;/*InsertSumList*/

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
    record sfbassum( "sfbassum.str" );

/*
    Расчет для единовременных комиссий
*/
macro CalcCommissionSum( docKind/*Тип первички*/, Doc/*Буфер первички*/, sfcalcalusr_addr/*Алгоритм расчета*/, sfcontr_addr /*Договор обслуживания*/, beginDate, endDate  )
    record sfclusr( "sfclusr.str" );
    record payord(pspayord);

    var stat:integer; 
    var query, rs, rrs;
    var CommQuont = 0,
        CommSum   = $0;
        
    var PaymentObj:RSBPayment;
    
    SetBuff( payord, Doc );
    
    PaymentObj = RSBPayment(payord.orderid);
    
    if (     (PaymentObj.isExternal == true) //платеж внешний
        and  (PaymentObj.OutCorschem == 509) //исхолдящая схема расчетов 509 Standard Chartered Bank - USD
       )
       query =" SELECT upper(mes.t_value) "+
                " FROM dpmpaym_dbt p, DWLPM_DBT wlp, DWLMESVAL_DBT mes"+
               " WHERE p.t_paymentid = "+payord.orderid+" "+
                 " AND wlp.t_paymentid = p.t_paymentid "+
                 " AND wlp.t_propstatus = 0 "+
                 " AND mes.t_mesid = (SELECT MAX (d.t_mesid) "+
                 "                      FROM DWLMESLNK_DBT d "+
                 "                     WHERE d.t_objid = wlp.t_wlpmid) "+
                 " AND mes.t_tpfieldid = 29 ";
       rs = rsdRecordSet(query);
        if (rs and rs.moveNext())
           if (string(rs.value(0)) == "OUR")
               query = " select instr (nvl ((select upper (mes.t_value) "+
                       "                      from dpmpaym_dbt p, dwlpm_dbt wlp, dwlmesval_dbt mes "+
                       "                     where p.t_paymentid = "+payord.orderid+" "+
                       "                       and wlp.t_paymentid = p.t_paymentid "+
                       "                       and wlp.t_propstatus = 0 "+
                       "                       and mes.t_mesid = (select max (d.t_mesid) "+
                       "                                            from dwlmeslnk_dbt d "+
                       "                                           where d.t_objid = wlp.t_wlpmid) "+
                       "                       and mes.t_tpfieldid = 13), 0),'FULLPAY' ) val from dual ";
                rrs = rsdRecordSet(query);
                  if (rrs and rrs.moveNext())
                    if (rrs.value(0) != 0 )
                     CommQuont = 1;
                    end;
                  end;
            end;
        end;
    end;
    
    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_QUONT;
    sfbassum.baseQuont   = CommQuont ;

    sfbassum.baseType2   = SF_BASETYPE_QUONT;
    sfbassum.baseQuont2  = CommQuont;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы: ");
    end;

    
    
    /*return integer( 1 ); -- количество*/
    
    /*return $1; -- сумма */
    
end;/*CalcCommissionSum*/




/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

