/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   ████████   ████████
   ███   ███  ███   ███
   ███  ████  ███  ████
   ███████    ███████
   ███  ███   ███  ███
   ███   ███  ███   ███

   RR Рахмедов Р.С.

   Имя файла: Comiss_Agent_Monitor.mac

   Создан:    12.11.2013

   Описание:  Макрос позволяет выполнять мониторинг обработчиков в режиме On-Line
              
   ChangeLog:
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 13.11.2013 В основную выборку процедуры GetVSessionData() добавлена возможность выбора информации о выполняемом задании из 
                   USR_COMISS_AGENT_JOB
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 31.01.2013 В основную выборку процедуры GetVSessionData() добавил определения банка группы, дабы исключить падение макроса
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 26.03.2014 Расширил запрос GetVSessionData()
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 25.07.2014 Добавлен банк Солидарность
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 24.02.2015 После выполнения основного запроса GetVSessionData, делаем Commit для устранения возникающих блокировок
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 05.08.2015 Добавлен банк Пойдем
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 11.01.2016 Правки связанные с переводом ЭВ в ЦОД Совкомбанка
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
 import RSD, Globals, fg_life_parm, oralib;
 
 //DBLINK'и 
 const PRBB_DBLINK          = "PRBBPRIM";
 const GEB_DBLINK           = "GEB_PRIM";
 const VUZ_DBLINK           = "VUZPRIM";
 const SLD_DBLINK           = "SOLID";
 const EVS_DBLINK           = "EVPRIM";
 const GO_DBLINK            = "RSBANK_GO_DBLINK";
 const EVS_SARATOV_DBLINK   = "RSBANK_EVS_DBLINK";
 const EVS_VORONEZH_DBLINK  = "RSBANK_EVVOR_DBLINK";
 const EVS_VOLGOGRAD_DBLINK = "RSBANK_EVV_DBLINK";
 const EVS_ULYANOVSK_DBLINK = "RSBANK_EVU_DBLINK";
 const EVS_STAVROPOL_DBLINK = "RSBANK_EVSTA_02_DBLINK";

 //Константы имен пользователей(их ввод обусловлен тем, что все филлиалы ЭВ работают на одном экземпляре БД)
 const UserNamePRBB             = "RSBANK_V6_2029";
 const UserNameEXV_SARATOV      = "RSBANK_EVS";
 const UserNameEXV_ULYANOVSK    = "RSBANK_EVU";
 const UserNameEXV_VORONEZH     = "RSBANK_EVVOR";
 const UserNameEXV_STAVROPOL    = "RSBANK_EVSTA_02";
 const UserNameEXV_VOLGOGRAD    = "RSBANK_EVV";
 const UserNameGEB              = "RSBANK_GEB";
 const UserNameVUZ              = "RSBANK_VUZ";
 const UserNameSLD              = "RSBANK_SLD";
 const UserNameGO               = "RSBANK_GO";
 
 
 const ComissAgentRSNumber      = 20201; //Номер агента комиссий в РС
 const ProgrammName             = "'startbnk.exe'"; //имя приложения
 const Offline                  = "Offline";
 const Online                   = "Online";
 const PauseInMS                = 1000;

 private const KEY_ENTER         = 13,
               KEY_ESC           = 27,
               KEY_F8            = 322,
               KEY_F9            = 323,
               KEY_F2            = 316;

 private const LBR_REGISTRY_PATH = "BANK_INI/ОБЩИЕ ПАРАМЕТРЫ/ДИРЕКТОРИИ/LBRDIR",
               LBR_NAME_FILE     = "UCA_MONITOR_LBR.lbr",
               LBR_NAME_PANEL    = "TEXTPNL";

 private  var lbr_fullpath, 
              lbr_directory,
              id, 
              dlg,
              email_str,
              flag = true,
              PData;

 var bank_name = fg_life_subject({OurBank}),
     rdate     = {curdate},
     rmenu;
     
 array bnkmenu_array ;
       bnkmenu_array[0] = "ПРББ";
       bnkmenu_array[1] = "ГЭБ";
       bnkmenu_array[2] = "ВУЗ";
       bnkmenu_array[3] = "ЭВ Саратов";
       bnkmenu_array[4] = "ЭВ Воронеж";
       bnkmenu_array[5] = "ЭВ Волгоград";
       bnkmenu_array[6] = "ЭВ Ставрополь";
       bnkmenu_array[7] = "Солидарность";
       bnkmenu_array[8] = "Пойдем";

 class PanelData ( _evssar_1, _evssar_2, _evssar_3, _evssar_4,
                   _evssta_1, _evssta_2, _evssta_3, _evssta_4,
                   _go_1, _go_2, _go_3, _go_4,
                   _evsvol_1, _evsvol_2, _evsvol_3, _evsvol_4,
                   _evsvor_1, _evsvor_2, _evsvor_3, _evsvor_4,
                   _geb_1, _geb_2, _geb_3, _geb_4,
                   _vuz_1, _vuz_2, _vuz_3, _vuz_4,
                   _prbb_1, _prbb_2, _prbb_3, _prbb_4,
                   _sld_1, _sld_2, _sld_3, _sld_4 )
                  
   var evssar_1 = _evssar_1;   var evssta_1 = _evssta_1;   var go_1 = _go_1;   var evsvol_1 = _evsvol_1; 
   var evssar_2 = _evssar_2;   var evssta_2 = _evssta_2;   var go_2 = _go_2;   var evsvol_2 = _evsvol_2; 
   var evssar_3 = _evssar_3;   var evssta_3 = _evssta_3;   var go_3 = _go_3;   var evsvol_3 = _evsvol_3; 
   var evssar_4 = _evssar_4;   var evssta_4 = _evssta_4;   var go_4 = _go_4;   var evsvol_4 = _evsvol_4; 

   var evsvor_1 = _evsvor_1;   var geb_1 = _geb_1;   var vuz_1 = _vuz_1;   var prbb_1 = _prbb_1;   var sld_1 = _sld_1;
   var evsvor_2 = _evsvor_2;   var geb_2 = _geb_2;   var vuz_2 = _vuz_2;   var prbb_2 = _prbb_2;   var sld_2 = _sld_2;
   var evsvor_3 = _evsvor_3;   var geb_3 = _geb_3;   var vuz_3 = _vuz_3;   var prbb_3 = _prbb_3;   var sld_3 = _sld_3;
   var evsvor_4 = _evsvor_4;   var geb_4 = _geb_4;   var vuz_4 = _vuz_4;   var prbb_4 = _prbb_4;   var sld_4 = _sld_4;
   
 end;
 
 MACRO Get_Comiss_Agent_Log ();
  var sql, rs, dblink_str = PRBB_DBLINK;
  var FName = "..\\txtfile\\Comiss_Agent_Monitor" + random(1000);
 
   rmenu = Menu(bnkmenu_array, "Выберите банк","Инициализация");
   if  (rmenu == 0)
     dblink_str = PRBB_DBLINK;
   elif (rmenu == 1)
     dblink_str = GEB_DBLINK;
   elif (rmenu == 2)
     dblink_str = VUZ_DBLINK;
   elif (rmenu == 3)
     dblink_str = EVS_SARATOV_DBLINK;
   elif (rmenu == 4)
     dblink_str = EVS_VORONEZH_DBLINK;
   elif (rmenu == 5)
     dblink_str = EVS_VOLGOGRAD_DBLINK;
   elif (rmenu == 6)
     dblink_str = EVS_STAVROPOL_DBLINK;
   elif (rmenu == 7)
     dblink_str = SLD_DBLINK;
   elif (rmenu == 8)
     dblink_str = GO_DBLINK;
   end;

   GetDate(rdate, "Введите дату отчета");
   
   setOutput(FName, true);
   println("Отчет по работе робота " + bnkmenu_array[rmenu]);
   sql = "   SELECT   SUBSTR (LOGG.T_AGENT_INFO, 1, INSTR (T_AGENT_INFO, ':') - 1) NAME, " +
         "            LOGG.T_DATE rdate, " +
         "            LOGG.T_TIME rtime, " +
         "            SUBSTR (T_AGENT_INFO, INSTR (LOGG.T_AGENT_INFO, ':') +1 ) ||' '||LOGG.T_TEXT INF " +
         "     FROM   USR_COMISS_AGENT_LOG@"+dblink_str+" LOGG "+
         "    WHERE   LOGG.T_DATE = '"+rdate+"'"+
         " ORDER BY   LOGG.T_TIME ASC ";
            
    sql = 	execSqlSelect (sql);
    var table = CTableReport();
    table.addColumn ("Номер"      , 15  , AL_LEFT);
    table.addColumn ("Дата"       , 12  , AL_LEFT);
    table.addColumn ("Время"      , 15  , AL_LEFT);
    table.addColumn ("Информация" , 100 , AL_LEFT);
    table.printHead ();
    while (sql.movenext)
      table.printStringTransferByWord ( sql.value ("name"    , null, V_STRING), 
                                        sql.value ("rdate"   , null, V_DATE), 
                                        sql.value ("rtime"   , null, V_STRING),
                                        sql.value ("inf"     , null, V_STRING));
    end;
    table.printBottom ();
    table = null;
 setOutput(null, false);
 viewfile(FName);
 END;
 
 MACRO GetVSessionData()
 var sql, rs, cmd;
 PData = null;
 PData = PanelData(Offline, Offline, Offline, Offline, 
                   Offline, Offline, Offline, Offline, 
                   Offline, Offline, Offline, Offline, 
                   Offline, Offline, Offline, Offline, 
                   Offline, Offline, Offline, Offline, 
                   Offline, Offline, Offline, Offline, 
                   Offline, Offline, Offline, Offline, 
                   Offline, Offline, Offline, Offline, 
                   Offline, Offline, Offline, Offline, 
                   Offline, Offline, Offline, Offline );
 
 sql  = /*" SELECT   CASE WHEN REGEXP_LIKE (CLIENT_INFO, '^[[:digit:]]{1,}$') " +
        "          THEN (SELECT   T_DESCRIPTION_JOB " +
        "                  FROM   USR_COMISS_AGENT_JOB@"+PRBB_DBLINK+
        "                 WHERE   T_ID = CLIENT_INFO) " +
        "          ELSE CLIENT_INFO " +
        "          END " +
        "          CLIENT_INFO, USERNAME " +
        "   FROM   V$SESSION@"+PRBB_DBLINK+
        "  WHERE   PROGRAM = "+ProgrammName+
        "          AND REGEXP_SUBSTR (MODULE, '[[:digit:]]{1,}') = "+ComissAgentRSNumber+
        " UNION ALL " +*/
        " SELECT   CASE WHEN REGEXP_LIKE (CLIENT_INFO, '^[[:digit:]]{1,}$') " +
        "          THEN (SELECT   T_DESCRIPTION_JOB " +
        "                  FROM   USR_COMISS_AGENT_JOB@"+GEB_DBLINK+
        "                 WHERE   T_ID = CLIENT_INFO) " +
        "          ELSE CLIENT_INFO " +
        "          END " +
        "          CLIENT_INFO, USERNAME " +
        "   FROM   V$SESSION@"+GEB_DBLINK+
        "  WHERE   PROGRAM = "+ProgrammName+
        "          AND REGEXP_SUBSTR (MODULE, '[[:digit:]]{1,}') = "+ComissAgentRSNumber+
        " UNION ALL " +
        " SELECT   CASE WHEN REGEXP_LIKE (CLIENT_INFO, '^[[:digit:]]{1,}$') " +
        "          THEN (SELECT   T_DESCRIPTION_JOB " +
        "                  FROM   USR_COMISS_AGENT_JOB@"+SLD_DBLINK+
        "                 WHERE   T_ID = CLIENT_INFO) " +
        "          ELSE CLIENT_INFO " +
        "          END " +
        "          CLIENT_INFO, USERNAME " +
        "   FROM   V$SESSION@"+SLD_DBLINK+
        "  WHERE   PROGRAM = "+ProgrammName+
        "          AND REGEXP_SUBSTR (MODULE, '[[:digit:]]{1,}') = "+ComissAgentRSNumber+
        " UNION ALL " +
        /* Gurin S. R-643024-2 28.03.2016 Пойдема нет уже
        " SELECT   CASE WHEN REGEXP_LIKE (CLIENT_INFO, '^[[:digit:]]{1,}$') " +
        "          THEN (SELECT   T_DESCRIPTION_JOB " +
        "                  FROM   USR_COMISS_AGENT_JOB@"+GO_DBLINK+
        "                 WHERE   T_ID = CLIENT_INFO) " +
        "          ELSE CLIENT_INFO " +
        "          END " +
        "          CLIENT_INFO, USERNAME " +
        "   FROM   V$SESSION@"+GO_DBLINK+
        "  WHERE   PROGRAM = "+ProgrammName+
        "          AND REGEXP_SUBSTR (MODULE, '[[:digit:]]{1,}') = "+ComissAgentRSNumber+
        " UNION ALL " +
        */
        " SELECT   CASE WHEN REGEXP_LIKE (CLIENT_INFO, '^[[:digit:]]{1,}$') " +
        "          THEN (SELECT   T_DESCRIPTION_JOB " +
        "                  FROM   USR_COMISS_AGENT_JOB@"+VUZ_DBLINK+
        "                 WHERE   T_ID = CLIENT_INFO) " +
        "          ELSE CLIENT_INFO " +
        "          END " +
        "          CLIENT_INFO, USERNAME " +
        "   FROM   V$SESSION@"+VUZ_DBLINK+
        "  WHERE   PROGRAM = "+ProgrammName+
        "          AND REGEXP_SUBSTR (MODULE, '[[:digit:]]{1,}') = "+ComissAgentRSNumber+
        " ORDER BY   USERNAME ASC";
  
   if (bank_name.is_EXV)
    sql  = " SELECT   CASE WHEN REGEXP_LIKE (CLIENT_INFO, '^[[:digit:]]{1,}$') " +
           "          THEN (SELECT   T_DESCRIPTION_JOB " +
           "                  FROM   USR_COMISS_AGENT_JOB" +
           "                 WHERE   T_ID = CLIENT_INFO) " +
           "          ELSE CLIENT_INFO " +
           "          END " +
           "          CLIENT_INFO, USERNAME " +
           "   FROM   V$SESSION " +
           "  WHERE   PROGRAM = "+ProgrammName+
           "          AND REGEXP_SUBSTR (MODULE, '[[:digit:]]{1,}') = "+ComissAgentRSNumber+
           " ORDER BY   USERNAME ASC";
   end;
  
   rs  = RSDRecordset(sql);
   
   cmd = RSDCommand("Commit");
   cmd.execute();
   
   while (rs and rs.movenext)
   
     if (rs.value("username") == UserNameEXV_SARATOV)
     
       if (PData.evssar_1 == Offline )
         PData.evssar_1 = rs.value("client_info");
       elif (PData.evssar_2 == Offline )
         PData.evssar_2 = rs.value("client_info");
       elif (PData.evssar_3 == Offline )
         PData.evssar_3 = rs.value("client_info");
       elif (PData.evssar_4 == Offline )
         PData.evssar_4 = rs.value("client_info");
       end;
       
     elif (rs.value("username") == UserNameEXV_STAVROPOL)
     
       if (PData.evssta_1 == Offline )
         PData.evssta_1 = rs.value("client_info");
       elif (PData.evssta_2 == Offline )
         PData.evssta_2 = rs.value("client_info");
       elif (PData.evssta_3 == Offline )
         PData.evssta_3 = rs.value("client_info");
       elif (PData.evssta_4 == Offline )
         PData.evssta_4 = rs.value("client_info");
       end;
       
    elif (rs.value("username") == UserNameEXV_VOLGOGRAD)
    
       if (PData.evsvol_1 == Offline )
         PData.evsvol_1 = rs.value("client_info");
       elif (PData.evsvol_2 == Offline )
         PData.evsvol_2 = rs.value("client_info");
       elif (PData.evsvol_3 == Offline )
         PData.evsvol_3 = rs.value("client_info");
       elif (PData.evsvol_4 == Offline )
         PData.evsvol_4 = rs.value("client_info");
       end;
       
    elif (rs.value("username") == UserNameEXV_VORONEZH)
    
       if (PData.evsvor_1 == Offline )
         PData.evsvor_1 = rs.value("client_info");
       elif (PData.evsvor_2 == Offline )
         PData.evsvor_2 = rs.value("client_info");
       elif (PData.evsvor_3 == Offline )
         PData.evsvor_3 = rs.value("client_info");
       elif (PData.evsvor_4 == Offline )
         PData.evsvor_4 = rs.value("client_info");
       end;
       
    elif (rs.value("username") == UserNameGEB)
    
       if (PData.geb_1 == Offline )
         PData.geb_1 = rs.value("client_info");
       elif (PData.geb_2 == Offline )
         PData.geb_2 = rs.value("client_info");
       elif (PData.geb_3 == Offline )
         PData.geb_3 = rs.value("client_info");
       elif (PData.geb_4 == Offline )
         PData.geb_4 = rs.value("client_info");
       end;
       
    elif (rs.value("username") == UserNameVUZ)
    
       if (PData.vuz_1 == Offline )
         PData.vuz_1 = rs.value("client_info");
       elif (PData.vuz_2 == Offline )
         PData.vuz_2 = rs.value("client_info");
       elif (PData.vuz_3 == Offline )
         PData.vuz_3 = rs.value("client_info");
       elif (PData.vuz_4 == Offline )
         PData.vuz_4 = rs.value("client_info");
       end;
       
    elif (rs.value("username") == UserNamePRBB)
    
       if (PData.prbb_1 == Offline )
         PData.prbb_1 = rs.value("client_info");
       elif (PData.prbb_2 == Offline )
         PData.prbb_2 = rs.value("client_info");
       elif (PData.prbb_3 == Offline )
         PData.prbb_3 = rs.value("client_info");
       elif (PData.prbb_4 == Offline )
         PData.prbb_4 = rs.value("client_info");
       end;
       
     elif (rs.value("username") == UserNameSLD)
     
       if (PData.sld_1 == Offline)
         PData.sld_1 = rs.value("client_info");
       elif (PData.sld_2 == Offline )
         PData.sld_2 = rs.value("client_info");
       elif (PData.sld_3 == Offline )
         PData.sld_3 = rs.value("client_info");
       elif (PData.sld_4 == Offline )
         PData.sld_4 = rs.value("client_info");
       end;
       
     elif (rs.value("username") == UserNameGO)
     
       if (PData.go_1 == Offline)
         PData.go_1 = rs.value("client_info");
       elif (PData.go_2 == Offline )
         PData.go_2 = rs.value("client_info");
       elif (PData.go_3 == Offline )
         PData.go_3 = rs.value("client_info");
       elif (PData.go_4 == Offline )
         PData.go_4 = rs.value("client_info");
       end;
       
    end;
    
  end;
  
 END;
 
 MACRO PanelEventHandlerIns (dlg, Command, id, key, aa)
  private var cmd;
  
  if (Command == DLG_INIT)
    SetTimer (dlg,PauseInMS);
  elif (Command == DLG_TIMER)
    GetVSessionData();
    dlg.rec.RDate  = date();
    dlg.rec.RTime  = time();
    
    dlg.rec.EVSSAR_1 = PData.evssar_1;
    dlg.rec.EVSSAR_2 = PData.evssar_2;
    dlg.rec.EVSSAR_3 = PData.evssar_3;
    dlg.rec.EVSSAR_4 = PData.evssar_4;
      
    dlg.rec.EVSSTA_1 = PData.evssta_1;
    dlg.rec.EVSSTA_2 = PData.evssta_2;
    dlg.rec.EVSSTA_3 = PData.evssta_3;
    dlg.rec.EVSSTA_4 = PData.evssta_4;
      
    dlg.rec.EVSVOL_1 = PData.evsvol_1;
    dlg.rec.EVSVOL_2 = PData.evsvol_2;
    dlg.rec.EVSVOL_3 = PData.evsvol_3;
    dlg.rec.EVSVOL_4 = PData.evsvol_4;
      
    dlg.rec.EVSVOR_1 = PData.evsvor_1;
    dlg.rec.EVSVOR_2 = PData.evsvor_2;
    dlg.rec.EVSVOR_3 = PData.evsvor_3;
    dlg.rec.EVSVOR_4 = PData.evsvor_4;
      
    dlg.rec.GEB_1    = PData.geb_1;
    dlg.rec.GEB_2    = PData.geb_2;
    dlg.rec.GEB_3    = PData.geb_3;
    dlg.rec.GEB_4    = PData.geb_4;
      
    dlg.rec.VUZ_1    = PData.vuz_1;
    dlg.rec.VUZ_2    = PData.vuz_2;
    dlg.rec.VUZ_3    = PData.vuz_3;
    dlg.rec.VUZ_4    = PData.vuz_4;
      
    dlg.rec.PRBB_1   = PData.prbb_1;
    dlg.rec.PRBB_2   = PData.prbb_2;
    dlg.rec.PRBB_3   = PData.prbb_3;
    dlg.rec.PRBB_4   = PData.prbb_4;
      
    dlg.rec.SLD_1    = PData.sld_1;
    dlg.rec.SLD_2    = PData.sld_2;
    dlg.rec.SLD_3    = PData.sld_3;
    dlg.rec.SLD_4    = PData.sld_4;
    
    dlg.rec.GO_1     = PData.go_1;
    dlg.rec.GO_2     = PData.go_2;
    dlg.rec.GO_3     = PData.go_3;
    dlg.rec.GO_4     = PData.go_4;
    
    UpdateFields (dlg);
  elif ((Command == DLG_KEY) and (key == KEY_F2))
    Get_Comiss_Agent_Log ();
    break;
  end;
  return CM_DEFAULT;
  
   onerror
     return CM_DEFAULT;
  
 END;
 
 MACRO Monitor()
 
   if ( GetRegistryValue ( LBR_REGISTRY_PATH, V_STRING, lbr_directory ))

      lbr_fullpath      = FindPath ( LBR_NAME_FILE, lbr_directory, "lbr" );
      dlg               = TRecHandler ( LBR_NAME_PANEL, lbr_fullpath, TRUE );
      GetVSessionData();

      dlg.rec.RDate     = date();
      dlg.rec.RTime     = time();

      dlg.rec.EVSSAR_1  = PData.evssar_1;
      dlg.rec.EVSSAR_2  = PData.evssar_2;
      dlg.rec.EVSSAR_3  = PData.evssar_3;
      dlg.rec.EVSSAR_4  = PData.evssar_4;
      
      dlg.rec.EVSSTA_1  = PData.evssta_1;
      dlg.rec.EVSSTA_2  = PData.evssta_2;
      dlg.rec.EVSSTA_3  = PData.evssta_3;
      dlg.rec.EVSSTA_4  = PData.evssta_4;
      
      dlg.rec.EVSVOL_1  = PData.evsvol_1;
      dlg.rec.EVSVOL_2  = PData.evsvol_2;
      dlg.rec.EVSVOL_3  = PData.evsvol_3;
      dlg.rec.EVSVOL_4  = PData.evsvol_4;
      
      dlg.rec.EVSVOR_1  = PData.evsvor_1;
      dlg.rec.EVSVOR_2  = PData.evsvor_2;
      dlg.rec.EVSVOR_3  = PData.evsvor_3;
      dlg.rec.EVSVOR_4  = PData.evsvor_4;
      
      dlg.rec.GEB_1     = PData.geb_1;
      dlg.rec.GEB_2     = PData.geb_2;
      dlg.rec.GEB_3     = PData.geb_3;
      dlg.rec.GEB_4     = PData.geb_4;
      
      dlg.rec.VUZ_1     = PData.vuz_1;
      dlg.rec.VUZ_2     = PData.vuz_2;
      dlg.rec.VUZ_3     = PData.vuz_3;
      dlg.rec.VUZ_4     = PData.vuz_4;
      
      dlg.rec.PRBB_1    = PData.prbb_1;
      dlg.rec.PRBB_2    = PData.prbb_2;
      dlg.rec.PRBB_3    = PData.prbb_3;
      dlg.rec.PRBB_4    = PData.prbb_4;
      
      dlg.rec.SLD_1     = PData.sld_1;
      dlg.rec.SLD_2     = PData.sld_2;
      dlg.rec.SLD_3     = PData.sld_3;
      dlg.rec.SLD_4     = PData.sld_4;
      
      dlg.rec.GO_1      = PData.go_1;
      dlg.rec.GO_2      = PData.go_2;
      dlg.rec.GO_3      = PData.go_3;
      dlg.rec.GO_4      = PData.go_4;
      
      RunDialog (dlg, "PanelEventHandlerIns");

  else
     msgbox ("Ошибка при получении пути к LBR");
  end;
 
 END;
 
 Monitor();
