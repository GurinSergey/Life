/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Банк ВУЗ

       Макрос пользовательского алгоритма расчёта базовых сумм комиссии 2.2.0
       "Единая комиссия за ведение счетов Клиентов, в мес. с эксплуатацией 
        системы Интернет-Клиент".

       Тип комиссии - периодическая.
       
   ChangeLog:

   //RR 20.02.2014 Адаптирую под 2031(daccount$_dbt -> NULL)
   //RR 28.04.2014 Макрос переведен на пакетный рассчет с помощью USR_COMISS_VUZ_220_V
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, currinter, fiinter, cb_sql, rsd, VuzComLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );
record sfcontr( sfcontr );

/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/ )

    var stat, cmd, rs;
    var CommQuont = 1;

    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;

    debugbreak;
    cmd = RSDCommand ("  SELECT UAC.RET_VALUE "+
                      "    FROM usr_account_collection_220_v uac "+
                      "   WHERE UAC.ACCOUNT = :1 "+
                      "     AND UAC.PARTYID = :2 "+
                      "     AND UAC.SFCONTRID = :3 "+
                      "     AND UAC.DATEPERIODBEGIN = :4 "+
                      "     AND UAC.DATEPERIODEND = :5 "+
                      "     AND UAC.ID != 0 ");
    cmd.AddParam("1", RSDBP_IN, sfcontr.object);
    cmd.AddParam("2", RSDBP_IN, sfcontr.partyid);
    cmd.AddParam("3", RSDBP_IN, sfcontr.id);
    cmd.AddParam("4", RSDBP_IN, BeginDate);
    cmd.AddParam("5", RSDBP_IN, EndDate);
    rs = RSDRecordSet(cmd);
    if (rs and rs.movenext())
      if(rs.value(0) == 0)
        CommQuont = 0;
      else
        CommQuont = rs.value(0);
      end;
    else
        cmd = RSDCommand( " SELECT (USR_COMISS_VUZ_220_V.CommissionCalculation ( account          => :1, "+
                          "                                                      partyid          => :2, "+
                          "                                                      sfcontrid        => :3, "+
                          "                                                      contrplan        => :4, "+
                          "                                                      date_reg_contr   => :5, "+
                          "                                                      begin_date       => :6, "+
                          "                                                      end_date         => :7, "+
                          "                                                      curdate          => :8)) "+
                          "  FROM   DUAL; ");
                  
        cmd.AddParam("1", RSDBP_IN, sfcontr.object);
        cmd.AddParam("2", RSDBP_IN, sfcontr.partyid);
        cmd.AddParam("3", RSDBP_IN, sfcontr.id);
        cmd.AddParam("4", RSDBP_IN, -1);
        cmd.AddParam("5", RSDBP_IN, sfcontr.datebegin);
        cmd.AddParam("6", RSDBP_IN, BeginDate);
        cmd.AddParam("7", RSDBP_IN, EndDate);
        cmd.AddParam("8", RSDBP_IN, {curdate});
        rs = RSDRecordSet(cmd);
        rs.movenext();
        if(rs.value(0) == 0)
          CommQuont = 0;
        else
          CommQuont = rs.value(0);
        end;
    end;

    /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommQuont > 0)
          return true;
       end;
       return true;
       return false;
    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType  = SF_BASETYPE_QUONT;
    sfbassum.baseQuont = CommQuont;

    sfbassum.baseType2  = SF_BASETYPE_QUONT;
    sfbassum.baseQuont2 = CommQuont;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/