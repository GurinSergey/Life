
/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    ███████       █████      █████     ███
    █████████   ████████   ████████    ███
    ███   ███   ███        ███         ███
    ████████     ███████    ███████    ███
    ██████            ███        ███   ███
    ███ ████    █████████  █████████   ████████
    ███   ████    █████      █████     ████████

   R-Style Softlab
   
   EVG Макрос процедуры отключения комиссий одного вида от всех договоров и 
       подключения обратно только по тем, по которым алгоритм расчета базовых 
       величин вернет, что комиссия должна взиматься
       (изначально разработан И. Финогеновым, позже полностью переработан).

   Имя файла: ConnectSfContr_MainProc.mac
   
   Создан:                                 Гуцу Е.В. 06/04/2011
   Доработка для обеспечения возможности 
   использования во всех банках группы:    Гуцу Е.В. 29/04/2011
   
   ChangeLog:
   
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 22.06.2012 Внес корректировки в процедуру TurnSfconcomOn
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 15.05.2013 Все макропроцедуры и функции перенесены из конкретных макросов в эту "библиотеку". Это дает возможность вызывать подключения 
                   комиссий роботами ЕРЦ.
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 15.05.2013 В Run_Connection_etc_com добавлена возможность подключения комиссии 13.1.0 для ЭВ
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 27.06.2013 Перенес подключение из макросов сюда, для возможносто вызова подключения роботом ЕРЦ
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 01.07.2013 Скорректировано подключени 3.2.3 для ГЭБа с целью оптимизации
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 06.09.2013 RunConnect34PRBB перенесена сюда для возможности вызова роботом ЕРЦ
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 24.09.2013 В Run_Connection_etc_com добавлены подключения комиссий 3.11.0, 3.14.1 и 3.15.0 (C-22407)
                   все изменения только для ПРББ
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 01.11.2013 Исправил процедуру TurnSfconcomOn для того чтобы комиссия включалась только на 1 ДО
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 10.02.2014 В ВУЗе 3.2.2 больше не списывается как периодическая, смысла ее подключать нет.
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 19.02.2014 Адаптирую под 2031(darhdoc_dbt -> dacctrn_dbt)
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 20.02.2014 Адаптирую под 2031(daccount$_dbt -> NULL)
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //joy 18.04.2014 C-27735 Добавлено подключении комиссии 13.1.0 для ВУЗа
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //joy 11.04.2014 Перенос на 2031 изменений по I-00478090 Изменила условия отбора: только те счета, где есть примечание 151
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 29.04.2014 Исправил ошибку в подключении 3.4.2 для ГЭБа
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 13.05.2014 Внес правки в TurnSfconcomOn для исключения комиссий не принадлежащих последнему ТП клиента
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 24.04.2014 ВУЗ переведен на пакетное подключение, для этих целей был разработан пакет 
                   usr_comiss_vuz_221_222, результаты выполнения сохраняются в таблицу usr_account_collection_221_222, сразу перенесена в 
                   RunConnection221_222VUZ
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 16.06.2014 В ветку Run_Connection_34_com добавлены ежедневные комиссии Солидарности
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 16.07.2014 В рамках создания робота для банка Солидарность, функция RunConnection220PRBB переехала сюда из ConnectSfContrMonth.mac
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 04.08.2014 Убрал для ЭВ подключение комиссий 3.12.1-2 и 3.13.1-2
                         для ПРББ подключение комиссий 3.2.3 и 3.4.9
-----------------------------------------------------------------------------------------------------------------------------------------------------
   // joy 18.08.2014 Подключение комиссий за плетжи в пользу ФЛ Run_Connection_Com_To_Phys + TurnSfconcomOnEtcArr (адаптация C-31392)
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 21.08.2014 Добавлено подключении комиссии 13.1.0 для ГЭБа C-29358 
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //joy 17.09.2014 R-446709 В функцию TurnSfconcomOnEtcArr добавлена проверка: счет, на кот. включаем комиссии, не должен быть СКС
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //joy 06.10.2014  I-00520261 В TurnSfconcomOnEtc добавлена проверка, что ДО не закрыт
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //joy 31.10.2014 Перенос С-33886 (В Run_Connection_Com_To_Phys добавлены ком. 3.2.3, 3.4.10 и 6-й параметр в GetComToPhisFacesRecordSet_new)
-----------------------------------------------------------------------------------------------------------------------------------------------------
  // joy 12.11.2014 R-490776 Счета СКС в каждом банке определяются по-разному. Info от Петренко Ольги. Исправлено  Run_Connection_etc_com
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //joy 17.11.2014 I-00532241 в 2031 обязательно надо проверять, что t_state в проводках = 1
-----------------------------------------------------------------------------------------------------------------------------------------------------
   // joy 08.12.2014 Доработан  поиск ДО счетов при подключении в ф-ции TurnSfconcomOnEtcArr (R-496884-2+R-501727-2)
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 08.12.2014 Переезд RunConnection220EXV() из ConnectSfContrMonth.mac в ConnectSfContr_MainProc.mac
-----------------------------------------------------------------------------------------------------------------------------------------------------
   // joy 11.12.2014  R-511633-   отбираем только открытые счета в TurnSfconcomOnEtcArr
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 29.01.2015 Адаптировано для банка ПОЙДЕМ
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 01.04.2015 Добавлена функция RunConnection3411_18
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 24.06.2015 Для удобства добавлена функция GetComissNumberFromCode, внесены правки согласно C-39836
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
import cb_sql, Commisslib, GebComLib, VuzComLib, ExvComLib;
import lib_comiss_common;


 var sql, rs, rrs, cmd, rcmd, rsql, sqlin, rsin, cmdin, OperDate, PaymCount, n, p, comCodesStr, OperD, r;

 var DebugOutput = false;

 var arrComToProcess = TArray(),
     arrComCodes     = TArray(),
     arrComTotals    = TArray();
     //RR ввожу еще 1 массив для хранения счетов по которым макрос расчета вернул false
 var  BadAccount      = TArray();
   
/* Массив и класс для сохранения информации по обработанным счетам */
var AccountCollection = TArray();

CLASS AccountInfo()

  var AccountNumber,
      Fiid,
      CommNumber,
      isOperation;

  macro init( accNum, fi, commNum )
     AccountNumber = accNum;
     Fiid          = fi;
     CommNumber    = commNum;
  end;

END;

// Заглушка
 MACRO MainRecordsetPrepare()
   return 0;
 END;


/* Функция "оболочечной" сортировки даных в массиве */
 MACRO СортироватьМассив( массив );
  var mm=TArray(), tmp_array=TArray();
  var i;

  macro intSort(m);
    var i,j,z,k,v,n,fl;
    z=1;
    k=3;
    fl=false;
    n=m.size-1;
    initprogress(m.size-1,"","Сортировка");
    while (not fl)
      z=z*k+1;
      fl= (z>n);
    end;
    fl=false;
    while(not fl);
      z=z-int(z/k)*k;
      for (i,z, n)
        j=i;

        while ((j>=z) and
               ( ( m[j-z].CommNumber + (subStr(m[j-z].AccountNumber, 1, 8) + subStr(m[j-z].AccountNumber, 10) ) ) 
                 > 
                 ( m[j].CommNumber   + (subStr(m[j].AccountNumber, 1, 8)   + subStr(m[j].AccountNumber, 10)   ) ) )
              )
           v=m[j];
           m[j]=m[j-z];
           j=j-z;
           m[j]=v;
        end;

        UseProgress(i);
        message("i=",i,", n=",n,", z=",z);
      end;

      fl=(z==1);
    end;
    RemProgress;
 end;

  if (массив.size > 1)
     intSort (массив);
  end;

 END;

 MACRO CheckAccPresence( arr, accNum, comId )
   var n = 0;

   while( n < arr.Size() )
      /* Этот счёт с этой комиссией */
      if ( ( arr(n).AccountNumber == accNum )
           and ( arr(n).CommNumber == comId )
           // EVG 05/05/2011 ... и комиссия активна
           and ( arr(n).isOperation == true ) )
         return true;
      end;

      n = n + 1;
   end;

   return false;
 END;

MACRO GetCommissCode( CommNumber )
  var query, rs;

  query = " Select t_Code " +
          "   From DSfComiss_dbt " +
          "  Where t_FeeType = 1 " +            // Периодические
          "    and t_Number  = " + CommNumber;
  rs = rsdRecordSet( query );
  if ( rs and rs.moveNext() )
     return rs.value( 0, null, V_STRING );
  end;

END;

MACRO GetSfcontrId( acc, fiid )

  var query, cmd, rs;

  query = " Select t_Id " +
          "   From DSfContr_dbt " +
          "  Where t_ObjectType = 1 " +            // Account
          "    and t_Fiid       = ? " +
          "    and t_Object     = ? " +
          "    and t_ServKind   = 3 ";             // РКО
  cmd = rsdCommand( query );
  cmd.AddParam( "", RSDBP_IN, fiid );
  cmd.AddParam( "", RSDBP_IN, acc  );

  rs = rsdRecordSet( cmd );
  if ( rs and rs.moveNext() )
     return rs.value( 0, null, V_INTEGER );
  end;

END;

MACRO GlobalDefinitions( ProcName, CommArray )
  

  /* Пересоздать массивы */
  arrComToProcess   = null;
  arrComCodes       = null;
  arrComTotals      = null;
  AccountCollection = null;
  arrComToProcess   = TArray();
  arrComCodes       = TArray();
  arrComTotals      = TArray();
  AccountCollection = TArray();
  
  
  /* Проверка на корректность передачи параметров */
  if ( ( valType( ProcName )  == V_UNDEF )
       or
       ( valType( CommArray ) == V_UNDEF ) 
       or
       ( strLen( trim( ProcName ) ) == 0 )
       or
       ( CommArray.Size == 0 ) )
     
     msgbox ( "Неправильный запуск процедуры.|Для правильной работы необходимо передать параметры|" +
              "<имя процедуры построения списка документов> и <массив комиссий>|(сейчас: \"" + ProcName + "\" и \"" + CommArray + "\")" );
     exit( 1 );

  else   

     ReplaceMacro( "MainRecordsetPrepare", ProcName );
     arrComToProcess = TArray( CommArray );

  end;  

END;

MACRO ProtHeader( repDate )

  var n = 0, 
      CurrentComId;

  /* Собираем строчку с кодами комиссий и заодно сохраняем их 
     в спец. массиве arrComCodes() */
  n = 0;
  comCodesStr = "";
  while( n < arrComToProcess.Size() )

     CurrentComId = arrComToProcess( n );

     /* Сохраняем код комиссии в отдельном массиве, который индексируется по 
        Id комиссии. */
     if ( valType( arrComCodes( CurrentComId ) ) == V_UNDEF )
        arrComCodes( CurrentComId ) = GetCommissCode( CurrentComId );
     end;

     if ( n == 0 )
        comCodesStr = arrComCodes( arrComToProcess(n) );
     else
        comCodesStr = comCodesStr + ", " + arrComCodes( arrComToProcess(n) );
     end;

     n = n + 1;
  end;


[
       Протокол работы процедуры подключения комиссий к договорам обслуживания

       Обрабатываются комиссии: #
       

       
       Банк: #
       Дата: #

      ┌───────┬─────────────────────────┬──────────┬────────────────────┐
      │       │       Номер счета       │ Комиссия │      Состояние     │
      ├───────┼─────────────────────────┼──────────┼────────────────────┤] ( comCodesStr, {Name_Bank}, repDate );

END;

MACRO ProtLine( ind, Account, ComId, State )
  var CommCode = arrComCodes( ComId ),
      statStr  = "Включено";

  if ( not State )
     statStr = "Отключено";
  end;

  [     │ ##### │ ####################### │ ######## │ ######### │ ] ( ind, Account, CommCode, statStr );

END;

MACRO ProtFooter( PaymentsProcessed )

  var n = 0;

  [     └───────┴─────────────────────────┴──────────┴───────────┘];
  println ("\n\n");


  [      Обработано объектов: #
  
  ]( PaymentsProcessed:l );
  
  [      Подключено договоров обслуживания к комиссиям: ];
  while( n < arrComToProcess.Size() )

     if ( ( valType( arrComCodes( arrComToProcess(n) ) ) != V_UNDEF ) and ( valType( arrComTotals( arrComToProcess(n) ) ) != V_UNDEF ) )
        println( "      - " + arrComCodes( arrComToProcess(n) ) + ", количество: " + arrComTotals( arrComToProcess(n) ) ) + ";";
     elif ( ( valType( arrComCodes( arrComToProcess(n) ) ) != V_UNDEF ) and ( valType( arrComTotals( arrComToProcess(n) ) ) == V_UNDEF ) )
        println( "      - " + arrComCodes( arrComToProcess(n) ) + ", количество: 0;");
     end;

     n = n + 1;
  end;

  println("\n\n\n\n");

END;

MACRO TurnAllSfconcomOff( CommArray )
 var ind = 0,
     ComNumberClause = "";

   while( ind < CommArray.Size() )
      if ( ind > 0 )
         ComNumberClause = ComNumberClause + ", ";
      end;
      ComNumberClause = ComNumberClause + string( CommArray(ind) );

      ind = ind + 1;
   end;
   
   SQL =       "  UPDATE dsfconcom_dbt SET t_status = 1 ";
   SQL = SQL + "  WHERE       t_objecttype = 659 ";
   SQL = SQL + "         AND t_status       = 0 ";
   SQL = SQL + "         AND t_feetype      = 1 ";
   SQL = SQL + "         AND t_commnumber  in (" + ComNumberClause + ")";
   cmd = rsdcommand(SQL);
   cmd.Execute;

END;

 MACRO TurnSfconcomOnEtc( Account, Fiid, CommID, OperD )
//RR Доработка для вызова извне
 if (valtype(OperDate) == V_UNDEF)
       OperDate = OperD;
 end;

   /* EVG 9/02/2012 Запрос переписан в соответствиии со спецификой 2030 */
   /* EVG 7/02/2012 Добавляем апдейт даты начала комиссии по ДО */
   SQL = " UPDATE   dsfconcom_dbt con1 ";
   SQL = SQL + "   SET   t_status = 0 ";
   SQL = SQL + " WHERE   con1.t_objecttype = 659 ";
   SQL = SQL + "         AND con1.t_objectid = ";
   SQL = SQL + "               (SELECT   min(t_id) ";
   SQL = SQL + "                  FROM   dsfcontr_dbt";
   SQL = SQL + "                 WHERE       t_objecttype = 1 ";
   SQL = SQL + "                         AND t_servkind = 3 ";
   SQL = SQL + "                         AND t_fiid = ? ";
   //Gurin S. 08.05.2015 R-577542-2
   //SQL = SQL + "                         AND SUBSTR(T_OBJECT,11,1) != '9' "; //RR 10.12.2014 Исключаю счета СКС
   //SQL = SQL + "                         AND T_PARTYID = (SELECT T_CLIENT FROM DACCOUNT_DBT WHERE T_ACCOUNT = ?)) ";
   SQL = SQL + "                         AND T_OBJECT = ? ";
   SQL = SQL + "                         AND t_dateclose = to_date('01.01.0001', 'dd.mm.yyyy'))  "; // 06.10.2014 joy I-00520261 
   SQL = SQL + "         AND con1.t_feetype = 1 ";
   SQL = SQL + "         AND con1.t_commnumber = ? ";
   SQL = SQL + "         AND con1.t_id = ";
   SQL = SQL + "               (SELECT   MAX (con2.t_id) ";
   SQL = SQL + "                  FROM   dsfconcom_dbt con2 ";
   SQL = SQL + "                 WHERE       con2.t_objecttype = con1.t_objecttype ";
   SQL = SQL + "                         AND con2.t_objectid = con1.t_objectid ";
   SQL = SQL + "                         AND con2.t_feetype = con1.t_feetype ";
   SQL = SQL + "                         AND con2.t_commnumber = con1.t_commnumber) ";
   SQL = SQL + "         AND CON1.T_SFPLANID = "                                      ;
   SQL = SQL + "              (SELECT   t_sfplanid "                                  ;
   SQL = SQL + "                 FROM   dsfcontrplan_dbt "                            ;
   SQL = SQL + "                WHERE   t_begin = (SELECT   MAX (t_begin) "           ;
   SQL = SQL + "                                     FROM   dsfcontrplan_dbt "        ;
   SQL = SQL + "                                    WHERE   t_sfcontrid = CON1.T_OBJECTID) " ;
   SQL = SQL + "                  AND t_sfcontrid = CON1.T_OBJECTID) " ;
   
   cmd = rsdcommand( SQL );
   cmd.AddParam( "", RSDBP_IN, Fiid );
   cmd.AddParam( "", RSDBP_IN, Account );
   cmd.AddParam( "", RSDBP_IN, CommID );
   cmd.Execute;

 END;

 MACRO TurnSfconcomOn( Account, Fiid, CommID, OperD )
//RR Доработка для вызова извне
 if (valtype(OperDate) == V_UNDEF)
       OperDate = OperD;
 end;
//RR Вкрутка для отлова ошибок 
//if (Account == "40502810000000004136") 
//   
//end;
   /* EVG 9/02/2012 Запрос переписан в соответствиии со спецификой 2030 */
   /* EVG 7/02/2012 Добавляем апдейт даты начала комиссии по ДО */
   //RR 13.05.2014 Добавил проверку на наличие подключаемой комиссии в действующем ТП
   SQL = " UPDATE   dsfconcom_dbt con1 "                                              ;
   //SQL = SQL + "   SET   t_status = 0, t_datebegin = ? "                              ;
   SQL = SQL + "   SET   t_status = 0 "                                               ;//RR 22.06.2012 Дату больше не обновляем, из-за того что  
   SQL = SQL + " WHERE   con1.t_objecttype = 659 "                                    ;//дата постоянно уходит "вперед" становится невозожно
   SQL = SQL + "         AND con1.t_objectid = "                                      ;//списать картотеку 2.
   SQL = SQL + "               (SELECT   t_id "                                       ;
   SQL = SQL + "                  FROM   dsfcontr_dbt "                               ;
   SQL = SQL + "                 WHERE       t_objecttype = 1 "                       ;
   SQL = SQL + "                         AND t_servkind = 3 "                         ;
   SQL = SQL + "                         AND t_fiid = ? "                             ;
   SQL = SQL + "                         AND t_object = ?) "                          ;
   SQL = SQL + "         AND con1.t_feetype = 1 "                                     ;
   SQL = SQL + "         AND con1.t_commnumber = ? "                                  ;
   SQL = SQL + "         AND con1.t_id = "                                            ;
   SQL = SQL + "               (SELECT   MAX (con2.t_id) "                            ;
   SQL = SQL + "                  FROM   dsfconcom_dbt con2 "                         ;
   SQL = SQL + "                 WHERE       con2.t_objecttype = con1.t_objecttype "  ;
   SQL = SQL + "                         AND con2.t_objectid = con1.t_objectid "      ;
   SQL = SQL + "                         AND con2.t_feetype = con1.t_feetype "        ;
   SQL = SQL + "                         AND con2.t_commnumber = con1.t_commnumber) " ;
   SQL = SQL + "         AND CON1.T_SFPLANID = "                                      ;
   SQL = SQL + "              (SELECT   t_sfplanid "                                  ;
   SQL = SQL + "                 FROM   dsfcontrplan_dbt "                            ;
   SQL = SQL + "                WHERE   t_begin = (SELECT   MAX (t_begin) "           ;
   SQL = SQL + "                                     FROM   dsfcontrplan_dbt "        ;
   SQL = SQL + "                                    WHERE   t_sfcontrid = CON1.T_OBJECTID) " ;
   SQL = SQL + "                  AND t_sfcontrid = CON1.T_OBJECTID) " ;
   cmd = rsdcommand( SQL );
   /* EVG 7/02/2012 Дата начала комиссии по ДО = Дата выполнения процедуры */
   //cmd.AddParam( "", RSDBP_IN, OperDate );
   cmd.AddParam( "", RSDBP_IN, Fiid );
   cmd.AddParam( "", RSDBP_IN, Account );
   cmd.AddParam( "", RSDBP_IN, CommID );
   cmd.Execute;

 END;

 MACRO ProcessPayment( rSet )
  var ColSize, CurrentComId, n, i, MacroNames, isOperation;
  record sfcStruc( sfcontr );

   
   /* Перебираем все обрабатываемые комиссии */
   n = 0;
   while( n < arrComToProcess.Size() )

      CurrentComId = arrComToProcess( n );

//         if ( rSet.PayerAccount == "40502810000000004136" )
//         
//         end;

      /* По каждой обрабатываемой комиссии проверяем, не сохранен ли
         этот счёт с этой комиссией в массиве. Если сохранён, значит за-
         ново не обрабатываем (это ситуация, когда, например, есть несколько
         платежей с одного счёта плательщика, облагаемых одинаковой комиссией). */
      if ( not CheckAccPresence( AccountCollection, rSet.PayerAccount, CurrentComId ) )

         /* Сохраняем счёт и Id комиссии в массиве */
         ColSize = AccountCollection.Size();
         AccountCollection( ColSize ) = AccountInfo();
         AccountCollection( ColSize ).init( rSet.PayerAccount, rSet.fiid, CurrentComId );

         /* Сохраняем код комиссии в отдельном массиве, который индексируется по 
            Id комиссии - если его там ещё нет (должен быть, т.к. перебор кодов
            комиссий я перенёс в ProtHeader() ). */
         if ( valType( arrComCodes( CurrentComId ) ) == V_UNDEF )
            arrComCodes( CurrentComId ) = GetCommissCode( CurrentComId );
         end;

         /* Заполняем структуру DSfContr_dbt - нужна для вызова макроса расчёта */
         ClearRecord ( sfcStruc );
         ExecMacroFile( "sfacrpay.mac", "GetSfContrStruc", GetSfcontrId( rSet.PayerAccount, rSet.fiid ), sfcStruc );


         /* В отличие от запуска аналогичной процедуры из sfacrpay.mac, здесь может возникнуть ситуация,
            когда по счёту плательщика нет ДО, и sfcStruc будет пустой. В таких случаях последующую об-
            работку просто пропускаем, т.к. комиссии по этому счёту в любом случае не будет (нет ДО). */
         if ( sfcStruc.Id > 0 )

            /* Собираем массив макросов расчёта данной комиссии (по всем алгоритмам) */
            MacroNames = ExecMacroFile( "sfacrpay.mac", "GetMacroName", 1, CurrentComId, sfcStruc.Id );

            /* Запуск на выполнение макросов расчёта базовых сумм комиссии.Этот цикл очень 
               похож на используемый в sfacrpay.mac. Фактически, отличается только именами 
               передаваемых переменных. */
            i = 0;
            if ( MacroNames.Size > 0 )

               isOperation = false;
               while ( i < MacroNames.Size )
                  if ( not isOperation )

                     /* EVG 29/04/2011 Проверка на случай того, что макрос расчёта не задан - чтобы не падала по ошибке */
                     if ( strLen( trim( MacroNames(i) ) ) > 0 )
                        isOperation = ExecMacroFile( MacroNames(i), "CalcServiceSum", null, OperDate, OperDate, null, sfcStruc, CurrentComId );
                     end;

                  end;
                  i = i + 1;
               end;

            end;

         end;

         AccountCollection( ColSize ).isOperation = isOperation;

         /* Подсчитываем итоги по комиссиям в отдельном массиве, также
            индексируемом по Id комиссии. */
         if ( isOperation )
            if ( valType( arrComTotals( CurrentComId ) ) == V_UNDEF )
               arrComTotals( CurrentComId ) = 1;
            else
               arrComTotals( CurrentComId ) = arrComTotals( CurrentComId ) + 1;
            end;
         end;

      end;

      n = n + 1;
   end;

 END;

   

/* Основная процедура. 
   Параметры:

   * MainRecordsetProcedure     имя макропроцедуры отбора платежей для комиссий;
   * CommArray                  массив комиссий для обработки;
   * OriginToProcess            происхождение обрабатываемых платежей;
   * pBarIndicator              заголовок для градусника;
   * procDate                   дата выполнения процедуры;
*/
 MACRO ExecuteCommConnectionForBank( MainRecordsetProcedure, CommArray, OriginToProcess, pBarIndicator, procDate )

   if ( valType( procDate ) != V_UNDEF )
      OperDate = procDate;
   else
      OperDate = {CurDate};
      if ( not GetDate( OperDate, "Пожалуйста, введите дату расчёта комиссии:" ) )
         exit(1);
      end;
   end;

   /* Основные настройки (зависят от банка группы) */
   GlobalDefinitions( MainRecordsetProcedure, CommArray );
   
   /* Шапка протокола */
   ProtHeader( OperDate );

   /* Отключение комиссий */
   TurnAllSfconcomOff( arrComToProcess );

   /* Формирование рекордсета по платежам */
   rs = MainRecordsetPrepare( null, OriginToProcess, OperDate, OperDate );

   /* Подсчёт записей */
   initProgress( -1, null, "Идёт подсчёт документов дня" );
   PaymCount = 0;
   while( rs and rs.moveNext() )
      PaymCount = PaymCount + 1;
   end;
   remProgress();

   if ( PaymCount > 0 )
   
      /* Сброс рекордсета и ещё раз */
      rs = null;
      rs = MainRecordsetPrepare( null, OriginToProcess, OperDate, OperDate );

      /* Основной цикл по документам рекордсета */
      initProgress( PaymCount, null, pBarIndicator );

      p = 0;
      while( rs and rs.moveNext() )

         p = p + 1;
         UseProgress( p );

         if ( DebugOutput )
            println ("\t\t\t\t Обрабатывается платёж:\t- ID " + rs.PaymentId + "\t- Сумма: " + rs.Amount + "\t- Дебет: " + rs.PayerAccount + "\t- Кредит: " + rs.ReceiverAccount);
         end;

         ProcessPayment( rs );

      end;
      remProgress();
   
   end;

   /* Сортировка */
   //СортироватьМассив( AccountCollection );


   /* Подключение комиссий */
   n = 0;
   initProgress( AccountCollection.Size, null, "Подключение комиссий " + comCodesStr ); 
   while ( n < AccountCollection.Size )

      UseProgress( n );
      if ( AccountCollection(n).isOperation )
         TurnSfconcomOn( AccountCollection(n).AccountNumber, AccountCollection(n).Fiid, AccountCollection(n).CommNumber );
      end;
      
      //ProtLine( (n+1), AccountCollection(n).AccountNumber, AccountCollection(n).CommNumber, AccountCollection(n).isOperation );

      n = n + 1;
   end;
   remProgress();


   //ProtFooter( PaymCount );

 END;


 MACRO ProcessAccount( rSet, dBegin, dEnd )
  var ColSize, CurrentComId, n, i, MacroNames, isOperation;
  record sfcStruc( sfcontr );

   
   /* Перебираем все обрабатываемые комиссии */
   n = 0;
   r = 0;
   while( n < arrComToProcess.Size() )

      CurrentComId = arrComToProcess( n );

      /* Сохраняем счёт и Id комиссии в массиве */
      ColSize = AccountCollection.Size();
      AccountCollection( ColSize ) = AccountInfo();
      AccountCollection( ColSize ).init( rSet.PayerAccount, rSet.fiid, CurrentComId );

      /* Сохраняем код комиссии в отдельном массиве, который индексируется по 
         Id комиссии - если его там ещё нет (должен быть, т.к. перебор кодов
         комиссий я перенёс в ProtHeader() ). */
      if ( valType( arrComCodes( CurrentComId ) ) == V_UNDEF )
         arrComCodes( CurrentComId ) = GetCommissCode( CurrentComId );
      end;

      /* Заполняем структуру DSfContr_dbt - нужна для вызова макроса расчёта */
      ClearRecord ( sfcStruc );
      ExecMacroFile( "sfacrpay.mac", "GetSfContrStruc", GetSfcontrId( rSet.PayerAccount, rSet.fiid ), sfcStruc );


      /* В отличие от запуска аналогичной процедуры из sfacrpay.mac, здесь может возникнуть ситуация,
         когда по счёту плательщика нет ДО, и sfcStruc будет пустой. В таких случаях последующую об-
         работку просто пропускаем, т.к. комиссии по этому счёту в любом случае не будет (нет ДО). */
      if ( sfcStruc.Id > 0 )

         /* Собираем массив макросов расчёта данной комиссии (по всем алгоритмам) */
         MacroNames = ExecMacroFile( "sfacrpay.mac", "GetMacroName", 1, CurrentComId, sfcStruc.Id );

         /* Запуск на выполнение макросов расчёта базовых сумм комиссии.Этот цикл очень 
            похож на используемый в sfacrpay.mac. Фактически, отличается только именами 
            передаваемых переменных. */
         i = 0;
         if ( MacroNames.Size > 0 )

            isOperation = false;
            while ( i < MacroNames.Size )
               if ( not isOperation )

                  /* EVG 29/04/2011 Проверка на случай того, что макрос расчёта не задан - чтобы не падала по ошибке */
                  if ( strLen( trim( MacroNames(i) ) ) > 0 )
                     isOperation = ExecMacroFile( MacroNames(i), "CalcServiceSum", null, dBegin, dEnd, null, sfcStruc, CurrentComId );
                  end;

               end;
               i = i + 1;
            end;

         end;

      end;

      AccountCollection( ColSize ).isOperation = isOperation;

      /* Подсчитываем итоги по комиссиям в отдельном массиве, также
         индексируемом по Id комиссии. */
      //RR Допиливаю для сохранения счетов по которым оплачивать комиссию не нужно.
      if ( isOperation )
         if ( valType( arrComTotals( CurrentComId ) ) == V_UNDEF )
            arrComTotals( CurrentComId ) = 1;
         else
            arrComTotals( CurrentComId ) = arrComTotals( CurrentComId ) + 1;
         end;
      else
         BadAccount(r) = rSet.PayerAccount;
         r = r + 1;
      end;
      n = n + 1;
   end;
   
 if (r != 0 )
   UpdateSfcontr(BadAccount);
 end;

 END;



/* Основная процедура для комиссий по счетам. 
   Параметры:

   * MainRecordsetProcedure     имя макропроцедуры отбора счетов для комиссий;
   * CommArray                  массив комиссий для обработки;
   * pBarIndicator              заголовок для градусника;
   * procDate                   дата выполнения процедуры;
*/
 MACRO ACC_ExecuteCommConnectionForBank( MainRecordsetProcedure, CommArray, pBarIndicator, procDate )

   if ( valType( procDate ) != V_UNDEF )
      OperDate = procDate;
   else
      OperDate = {CurDate};
      if ( not GetDate( OperDate, "Пожалуйста, введите дату расчёта комиссии:" ) )
         exit(1);
      end;
   end;
   
   /* Определение дат начала / окончания периода */
   var DateBegin, DateEnd, dd, mm, yy;
   dateSplit( OperDate, dd, mm, yy );
   DateBegin = date( 1, mm, yy );
   if( mm < 12 )
      DateEnd = date( 1, mm+1, yy ) -1;
   else
      DateEnd = date( 1, 1, yy+1 ) -1;  // Декабрь
   end;

   /* Основные настройки (зависят от банка группы) */
   GlobalDefinitions( MainRecordsetProcedure, CommArray );

   /* Шапка протокола */
   ProtHeader( OperDate );

   /* Отключение комиссий */
   TurnAllSfconcomOff( arrComToProcess );

   /* Формирование рекордсета по платежам */
   rs = MainRecordsetPrepare( DateBegin, DateEnd );

   /* Подсчёт записей */
   initProgress( -1, null, "Идёт подсчёт лицевых счетов для процедуры" );
   PaymCount = 0;
   while( rs and rs.moveNext() )
      PaymCount = PaymCount + 1;
   end;
   remProgress();

   if ( PaymCount > 0 )
   
      /* Сброс рекордсета и ещё раз */
      rs = null;
      rs = MainRecordsetPrepare( DateBegin, DateEnd );

      /* Основной цикл по документам рекордсета */
      initProgress( PaymCount, null, pBarIndicator );

      p = 0;
      while( rs and rs.moveNext() )

         p = p + 1;
         UseProgress( p );

         if ( DebugOutput )
            println ("\t\t\t\t Обрабатывается счёт:\t- ID " + rs.PaymentId + "\t- Сумма: " + rs.Amount + "\t- Дебет: " + rs.PayerAccount + "\t- Кредит: " + rs.ReceiverAccount);
         end;

         ProcessAccount( rs, DateBegin, DateEnd );

      end;
      remProgress();
   
   end;

   /* Сортировка */
   //СортироватьМассив( AccountCollection );


   /* Подключение комиссий */
   n = 0;
   initProgress( AccountCollection.Size, null, "Подключение комиссий " + comCodesStr );
   while ( n < AccountCollection.Size )

      UseProgress( n );
      if ( AccountCollection(n).isOperation )
         TurnSfconcomOn( AccountCollection(n).AccountNumber, AccountCollection(n).Fiid, AccountCollection(n).CommNumber );
      end;
      // Теперь отчет о подключении строится иначе
      // RR ProtLine( (n+1), AccountCollection(n).AccountNumber, AccountCollection(n).CommNumber, AccountCollection(n).isOperation );

      n = n + 1;
   end;
   remProgress();


   //ProtFooter( PaymCount );

 END;
//   OnError()

 MACRO PrintLogLine(TempComNum)
  
  var rs, SQL,cmd;
  private var Counter = 0;
 SQL ="      select ac.t_account payeraccount, '2.2.0' comnum, decode (con.t_status , 0 , 'Начисляется',1 , 'Не начисляется') state "
  +"\n         from daccount_dbt ac, dsfcontr_dbt cnt, dsfcontrplan_dbt pln, dsfconcom_dbt con "
  +"\n        where ac.t_code_currency = 0 "
  +"\n          and instr (ac.t_type_account, 'Т') = 0 "
  +"\n          and instr (ac.t_type_account, 'П') = 0 "
  +"\n          and instr (ac.t_usertypeaccount, '5') = 0 "
  +"\n          and (ac.t_balance in ('40802', '40807') "
  +"\n               or substr (ac.t_balance, 1, 3) in ('405', '406', '407') "
  +"\n              ) "
  +"\n          and ac.t_chapter = 1 "
  +"\n          and substr (ac.t_account, 11, 1) != '9' "
  +"\n          and ac.t_open_date <= to_date ('31.07.2012', 'DD.MM.YYYY') "
  +"\n          and (ac.t_close_date = to_date ('01-01-0001', 'DD-MM-YYYY') "
  +"\n               or ac.t_close_date > to_date ('31.07.2012', 'DD.MM.YYYY') "
  +"\n              ) "
  +"\n          and cnt.t_object = ac.t_account "
  +"\n          and pln.t_sfcontrid = cnt.t_id "
  +"\n          and pln.t_end = to_date ('01-01-0001', 'DD-MM-YYYY') "
  +"\n          and con.t_sfplanid = pln.t_sfplanid "
  +"\n          and con.t_objectid = cnt.t_id "
  +"\n          and con.t_feetype = 1 AND ac.T_BRANCH = 3 "
  +"\n          and con.t_commnumber = ? ; ";
    cmd = rsdcommand(sql);
    cmd.AddParam("", RSDBP_IN,TempComNum);
    rs = rsdRecordSet( cmd );
    while (rs and rs.moveNext())
      [     │ ##### │ ####################### │ ######## │  ###############   │ ] ( Counter, rs.value(0), rs.value(1), rs.value(2) );
      Counter = Counter + 1;
    end;
 END;

 MACRO Run_Connection_34_com (OperDate, OperDayProlongTime)
 
  private var Comiss,
              err,
              ProcName,
              indMessage,
              LifeBank = fg_life_subject( {OurBank} );
              
  // Банк Пробизнес
  //Gurin S. 06.08.2015 добавил Пойдем
  if( LifeBank.is_PRBB() or LifeBank.is_GO() )

     /* Обработка комиссий по документам ручного ввода */
     Comiss = TArray();
     Comiss(0) = 1012;         // 3.4.2
     Comiss(1) = 1013;         // 3.4.3
     Comiss(2) = 1014;         // 3.4.4
     Comiss(3) = 1072;         // 3.4.5

     ProcName   = "GetCom34RecordSetB";
     indMessage = "Обработка документов ручного ввода (комиссии 3.4.2, -3, -4, -5)";

     ExecuteCommConnectionForBank( ProcName, Comiss, null, indMessage, OperDate );
     Comiss = null;



     /* Обработка комиссий по документам КБ */
     Comiss = TArray();
     Comiss(0) = 1017;         // 3.4.7
     Comiss(1) = 1018;         // 3.4.8

     ProcName   = "GetCom34RecordSetB";
     indMessage = "Обработка документов Клиент-Банка (комиссии 3.4.7, 3.4.8)";

     ExecuteCommConnectionForBank( ProcName, Comiss, CLB_DocOrigin, indMessage, OperDate );
     Comiss = null;

     /* Обработка комиссий по документам в пользу ФизЛиц - внутренние 
     Comiss = TArray();
     Comiss(0) = 1047;         // 3.2.3

     ProcName   = "GetComToPhisFacesRecordSet";
     indMessage = "Обработка внутренних документов в пользу ФизЛиц (комиссия 3.2.3)";

     ExecuteCommConnectionForBank( ProcName, Comiss, PMGROUP_Internal, indMessage, OperDate );
     Comiss = null;*/

     /* Обработка комиссий по документам в пользу ФизЛиц - внешние 
     Comiss = TArray();
     Comiss(0) = 1048;         // 3.4.9

     ProcName   = "GetComToPhisFacesRecordSet";
     indMessage = "Обработка внешних документов в пользу ФизЛиц (комиссия 3.4.9)";

     ExecuteCommConnectionForBank( ProcName, Comiss, PMGROUP_External, indMessage, OperDate );
     Comiss = null;*/

     /* EVG 24/01/2013 Обработка комиссии за перевод по системе БЭСП */
     Comiss = TArray();
     Comiss(0) = 1076;         // 3.7.4

     ProcName   = "GetCom37RecordSetB";
     indMessage = "Обработка переводов по системе БЭСП (комиссия 3.7.4)";

     ExecuteCommConnectionForBank( ProcName, Comiss, null, indMessage, OperDate );
     Comiss = null;


  // Банк Экспресс-Волга
  elif( LifeBank.is_EXV() )
  
     /* Обработка комиссий по документам КБ */
     Comiss = TArray();
     Comiss(0) = 1017;         // 3.4.7
     Comiss(1) = 1018;         // 3.4.8

     ProcName   = "EXV_GetCom3RecordSet";
     indMessage = "Обработка документов Клиент-Банка (комиссии 3.4.7, 3.4.8)";

     ExecuteCommConnectionForBank( ProcName, Comiss, CLB_DocOrigin, indMessage, OperDate );
     Comiss = null;
  
     /* RR 04.08.2014 Отключаю подключение комиссий по просьбе ЕРЦ
     Comiss = TArray();
     Comiss(0) = 1066;         // 3.12.1
     Comiss(1) = 1068;         // 3.13.1

     if(   {MFO_bank} == "047308902" )   // Ульяновск
        Comiss(0) = 1065;
        Comiss(1) = 1068;
     elif( {MFO_bank} == "042007755" )   // Воронеж
        Comiss(0) = 1066;
        Comiss(1) = 1068;
     elif( {MFO_bank} == "040702756" )   // Ставрополь
        Comiss(0) = 1066;
        Comiss(1) = 1069;
     elif( {MFO_bank} == "041806835" )   // Волгоград
        Comiss(0) = 1066;
        Comiss(1) = 1068;
     end;

     ProcName   = "EXV_GetPaymentsFor312_313Commission";
     indMessage = "Обработка внутренних документов в пользу ФизЛиц (комиссии 3.12.1 / 3.13.1)";

     ExecuteCommConnectionForBank( ProcName, Comiss, PMGROUP_Internal, indMessage, OperDate );
     Comiss = null;

     Comiss = TArray();
     Comiss(0) = 1067;         // 3.12.2
     Comiss(1) = 1069;         // 3.13.2

     if(   {MFO_bank} == "047308902" )   // Ульяновск
        Comiss(0) = 1066;
        Comiss(1) = 1069;
     elif( {MFO_bank} == "042007755" )   // Воронеж
        Comiss(0) = 1067;
        Comiss(1) = 1069;
     elif( {MFO_bank} == "040702756" )   // Ставрополь
        Comiss(0) = 1067;
        Comiss(1) = 1070;
     elif( {MFO_bank} == "041806835" )   // Волгоград
        Comiss(0) = 1067;
        Comiss(1) = 1069;
     end;

     ProcName   = "EXV_GetPaymentsFor312_313Commission";
     indMessage = "Обработка внешних документов в пользу ФизЛиц (комиссии 3.12.2 / 3.13.2)";

     ExecuteCommConnectionForBank( ProcName, Comiss, PMGROUP_External, indMessage, OperDate );
     Comiss = null; */
    
  // Банк ВУЗ
  elif( LifeBank.is_VUZ() )

     /* Обработка комиссий по документам КБ */
     Comiss = TArray();
     
     Comiss(0) = 1014;         // 3.4.4
     Comiss(1) = 1063;         // 3.4.5

     ProcName   = "VUZ_GetCom3RecordSet";
     indMessage = "Обработка документов Клиент-Банка (комиссии 3.4.4, 3.4.5)";

     ExecuteCommConnectionForBank( ProcName, Comiss, CLB_DocOrigin, indMessage, OperDate );
     Comiss = null;
  
     //RR 31.01.2012 По заявке от Байдуловой добавляем ГЭБ
   elif( LifeBank.is_GEB() )
      /* Обработка комиссий по документам КБ */
      Comiss = Tarray();
      Comiss(0) = 1017;        //3.4.7
      //Используется макрос ПРББ
      ProcName   = "GetCom34RecordSetB";
      indMessage = "Обработка документов Клиент-Банка (комиссия 3.4.7)";
      
      ExecuteCommConnectionForBank( ProcName, Comiss, CLB_DocOrigin, indMessage, OperDate );
      Comiss = null;
      
      /* Обработка комиссий по документам КБ */
      Comiss = Tarray();
      Comiss(0) = 1077;        //3.4.8
      //Используется макрос ПРББ
      ProcName   = "GetCom34RecordSetB";
      indMessage = "Обработка документов Клиент-Банка (комиссия 3.4.8)";
      
      ExecuteCommConnectionForBank( ProcName, Comiss, CLB_DocOrigin, indMessage, OperDate );
      Comiss = null;

  elif( LifeBank.is_SLD() )

     /* Обработка комиссий по документам ручного ввода */
     Comiss = TArray();
     Comiss(0) = 1012;         // 3.4.2
     Comiss(1) = 1013;         // 3.4.3
     Comiss(2) = 1014;         // 3.4.4

     ProcName   = "GetCom34RecordSetB";
     indMessage = "Обработка документов ручного ввода (комиссии 3.4.2, -3, -4)";

     ExecuteCommConnectionForBank( ProcName, Comiss, null, indMessage, OperDate );
     Comiss = null;

     /* Обработка комиссий по документам КБ */
     Comiss = TArray();
     Comiss(0) = 1017;         // 3.4.7
     Comiss(1) = 1018;         // 3.4.8

     ProcName   = "GetCom34RecordSetB";
     indMessage = "Обработка документов Клиент-Банка (комиссии 3.4.7, 3.4.8)";

     ExecuteCommConnectionForBank( ProcName, Comiss, CLB_DocOrigin, indMessage, OperDate );
     Comiss = null; 
     
     /* EVG 24/01/2013 Обработка комиссии за перевод по системе БЭСП */
     Comiss = TArray();
     Comiss(0) = 1076;         // 3.7.4

     ProcName   = "GetCom37RecordSetB";
     indMessage = "Обработка переводов по системе БЭСП (комиссия 3.7.4)";

     ExecuteCommConnectionForBank( ProcName, Comiss, null, indMessage, OperDate );
     Comiss = null;
     
     var cmd = RSDCommand("{? = call connectcomisstocontr(?,?,?,?)}");
         cmd.addparam("stat",      RSDBP_RETVAL, V_STRING );
         cmd.addparam("comiss",    RSDBP_IN,     1074);
         cmd.addparam("begindate", RSDBP_IN,     OperDate);
         cmd.addparam("enddate",   RSDBP_IN,     OperDate );
         cmd.addparam("categ",     RSDBP_IN,     5   );
         cmd.execute();
         println("Подключение комиссии за БЭСП - " + cmd.value(0));

  else                                                                                                    // ОООО я хочу контактировать с ГУЦУ
     msgbox ("Изивините, процедура подключена пока только для ПРББ, ЭВ, ВУЗ и ГЭБ.|Если нужно подключить к другим банкам, контактируйте с Гуцу.");

  end;
  
 END;
 
 MACRO Run_Connection_22_com (OperDate)
  
  private var Comiss,
              ComissYear,
              err,
              ProcName,
              indMessage,
              LifeBank = fg_life_subject( {OurBank} );

  // Банк Пробизнес
  if( LifeBank.is_PRBB() )

     /* Обработка комиссий за ведение счёта */
     Comiss = TArray();
     Comiss(0) = 1002;         // 2.2.0

     ProcName   = "GetAccountsRecordSet";
     indMessage = "Обработка лицевых счетов";

     ACC_ExecuteCommConnectionForBank( ProcName, Comiss, indMessage, OperDate );

     
     /* Годовая комиссия */
     ComissYear = TArray();
     ComissYear(0) = 1073;     // 2.2.1
     

  // Банк Экспресс-Волга
  elif( LifeBank.is_EXV() )
  
     /* Обработка комиссий за ведение счёта */
     Comiss = TArray();
     Comiss(0) = 1002;         // 2.2.0

     ProcName   = "GetAccountsRecordSet";
     indMessage = "Обработка лицевых счетов";

     ACC_ExecuteCommConnectionForBank( ProcName, Comiss, indMessage, OperDate );

 
     /* Годовая комиссия */
     ComissYear = TArray();
     /* По комиссии 2.2.1 у ФЗАО Ульяновск и Воронеж другая айдишка */
     ComissYear(0) = 1065;     // 2.2.1
     if ( ({MFO_bank} == "047308902")   // Ульяновск
           or
          ({MFO_bank} == "042007755") ) // Воронеж

        ComissYear(0) = 1064;
     end;

     
  // Банк ВУЗ
  elif( LifeBank.is_VUZ() )

     /* Обработка комиссий за ведение счёта */
     Comiss = TArray();
     Comiss(0) = 1002;         // 2.2.1
     Comiss(1) = 1060;         // 2.2.2

     ProcName   = "GetAccountsRecordSet";
     indMessage = "Обработка лицевых счетов";

     ACC_ExecuteCommConnectionForBank( ProcName, Comiss, indMessage, OperDate );


     /* Годовая комиссия */
     ComissYear = TArray();
     ComissYear(0) = 1071;     // 2.2.3.1
     ComissYear(1) = 1072;     // 2.2.3.2


  else
     msgbox ("Изивините, процедура подключена пока только для ПРББ, ЭВ И ВУЗ.|Если нужно подключить к другим банкам, контактируйте с Гуцу.");

  end;
  
  // 2012-09-10 zip_z. I-00249064-2 добавлена журнализация >
  if (not WriteFiscLog (OLSTRPROC, "ЗАПУСК ПРОЦЕДУРЫ ОТКЛЮЧЕНИЯ КОМИССИЙ ОТ ДОГОВОРОВ ОБСЛУЖИВАНИЯ\n" + 
                                   "Макрос: ConnectSfcontrMonth.mac"))
      msgbox ("Не удалось добавить запись о старте процедуры в фискальный журнал");
  end;
  // < 2012-09-10 zip_z. 

  
  /* EVG 26/03/2012 Выpов процедур отключения комиссий от всех ДО клиента, кроме одного, и отключения месячных там,
     где подключена годовая */

  TurnOff_AllButOne(Comiss);
  TurnOff_MonthCom_WhereYearComIsOn( Comiss, ComissYear );   
  UpdateSfcontr();
  
  //RR Дополнительный апдейт для ПРББ отключающий 220 на ТП "Платежный" ДМСБ
  if( LifeBank.is_PRBB() )
     Turn220OFFinTPDMSB();
  end;
  //PrintLogLine(Comiss(0));
  println( "      Выполнена процедура отключения месячных комиссий от всех ДО клиента, кроме одного" );
  println( "\n      Выполнена процедура отключения месячных комиссий от ДО, к которым подключена годовая комиссия за ведение счёта\n\n" );
  println ("\nConnectSfcontrMonth.mac END:\t" + Time());

  // 2012-09-10 zip_z. I-00249064-2 добавлена журнализация >
  if (not WriteFiscLog (OLFINPROC, "ОКОНЧАНИЕ ПРОЦЕДУРЫ ОТКЛЮЧЕНИЯ КОМИССИЙ ОТ ДОГОВОРОВ ОБСЛУЖИВАНИЯ\n" + 
                                   "Макрос: ConnectSfcontrMonth.mac"))
      msgbox ("Не удалось добавить запись об окончании процедуры в фискальный журнал");
  end;
  // < 2012-09-10 zip_z.
  
  END;
  
 PRIVATE MACRO GetComissNumberFromCode(code)
   var rs = RSDRecordSet(" SELECT   t_number " +
                         "   FROM   dsfcomiss_dbt " +
                         "  WHERE   t_feetype = 1 AND t_code = '"+code+"'");
    rs.movenext();
    return rs.value(0);
 END;
  
 MACRO Run_Connection_etc_com (OperDate, ComissN, UserTypeAccount, NeedPrintLog)
 
 private var ComissPRBB,
             i,
             LifeBank = fg_life_subject( {OurBank} ),
             TempArrForLog  =  TArray();
 
 class TempCom(t_account, t_code_currency, comid, comminfo)
  var account    = t_account;
  var fiid       = t_code_currency;
  var comidr     = comid;
  var comminf    = comminfo;
 end;
 
  if (LifeBank.is_PRBB() or LifeBank.is_SLD() or LifeBank.is_GO())
  
     ComissPRBB = TArray();
     if   (ComissN == 720)
       ComissPRBB(0) = 1006;         // 7.2.0
     elif (ComissN == 730)
       ComissPRBB(0) = 1045;         // 7.3.0
     elif (ComissN == 751)
       ComissPRBB(0) = 1075;         // 7.5.1
     elif (ComissN == 752)
       ComissPRBB(0) = 1081;         // 7.5.2
     elif (ComissN == 810)
       ComissPRBB(0) = 1008;         // 8.1.0
     elif (ComissN == 311)
       ComissPRBB(0) = 1020;         // 3.1.1
     elif (ComissN == 821)
       ComissPRBB(0) = 1009;         // 8.2.1
     elif (ComissN == 1310)
       ComissPRBB(0) = 1109;         // 13.1.0
     elif (ComissN == 3141)
       ComissPRBB(0) = 1130;         // 3.14.1
     elif (ComissN == 3150)
       ComissPRBB(0) = 1118;         // 3.15.0
     end;
     
  elif (LifeBank.is_EXV())
  
     ComissPRBB = TArray();
     if   ( ComissN == 275)   
       ComissPRBB(0) = 1060;         // 2.7.5
     elif ( ( ComissN == 276) and not ({MFO_bank} == "042007755" ) and not ({MFO_bank} == "047308902" ) )  
       ComissPRBB(0) = 1064;         // 2.7.6
     elif ( ( ComissN == 276)  and ({MFO_bank} == "042007755" ) )           // Воронеж
       ComissPRBB(0) = 1065;         // 2.7.6
     elif ( ( ComissN == 276)  and ({MFO_bank} == "047308902" ) )         // Ульяновск
       ComissPRBB(0) = 1063;         // 2.7.6
     elif ( ( ComissN == 1310) and not ({MFO_bank} == "046311808" ) )   // Саратов
       ComissPRBB(0) = 1095;         // 13.1.0
     elif ( ( ComissN == 1310) and ({MFO_bank} == "046311808" ) )     // Саратов
       ComissPRBB(0) = 1096;         // 13.1.0
     end;

  else
  
    ComissPRBB = TArray();
    if (ComissN == 557)
     ComissPRBB(0) = GetComissNumberFromCode("5.5.7");
    end;

  end;
  
//  if (LifeBank.is_PRBB() or LifeBank.is_EXV() or LifeBank.is_SLD() or LifeBank.is_GO()) 
  
 //RR Вызываем процедуру которая отключит все комиссии из массива по всему банку.
  TurnAllSfconcomOff(ComissPRBB); 
  if ( (ComissN == 720) or (ComissN == 730) or (ComissN == 751) or (ComissN == 752) or (ComissN == 810) or (ComissN == 275) or (ComissN == 276))
        // 12.11.2014 joy R-490776 Счета СКС в каждом банке определяются по-разному. Info от Петренко Ольги
        var SQL_SKS = "";
        if (LifeBank.is_SLD())
          SQL_SKS =  " and ( ( (substr (acc.t_account, 11, 1) != 9 or (substr (acc.t_account, 11, 1) = 9 and instr (acc.t_usertypeaccount, '═') = 0)) " +
                     "     and (substr (acc.t_account, 14, 1) != 8 or (substr (acc.t_account, 14, 1) = 8 and instr (acc.t_usertypeaccount, '═') = 0)) " +
                     "     and instr (acc.t_usertypeaccount, 'D') = 0) ";
        elif (LifeBank.is_EXV() )
          SQL_SKS =  " and ( ( (substr (acc.t_account, 11, 1) != 9 or (substr (acc.t_account, 11, 1) = 9 and instr (acc.t_usertypeaccount, '═') = 0)) " +
                     "     and (substr (acc.t_account, 12, 1) != 9 or (substr (acc.t_account, 12, 1) = 9 and instr (acc.t_usertypeaccount, '═') = 0)) " +
                     "     and instr (acc.t_usertypeaccount, 'D') = 0) ";
        elif (LifeBank.is_PRBB())
           SQL_SKS =  " and ( ( (substr (acc.t_account, 11, 1) != 9 or (substr (acc.t_account, 11, 1) = 9 and instr (acc.t_usertypeaccount, '═') = 0)) " +
                      "     and instr (acc.t_usertypeaccount, 'D') = 0) ";
        end;
         //Gurin S. 08.05.2015 R-577542-2
        if (LifeBank.is_SLD() or LifeBank.is_EXV() or LifeBank.is_PRBB())
           SQL_SKS = SQL_SKS + " or (INSTR (acc.t_usertypeaccount, 'H') != 0) )";
        else
           SQL_SKS = SQL_SKS + " or (INSTR (acc.t_usertypeaccount, 'H') != 0)";
        end;
        i = 0;
        SQL = 
        //RR Набираем ID клиентов у которых хотябы на 1 счету есть признак
              "        SELECT t_client "
              +"\n      FROM daccount_dbt "
              +"\n     WHERE t_chapter = 1 "
              +"\n       AND INSTR (t_usertypeaccount, ?) > 0 "
              +"\n       AND t_open_date <= ? "
              +"\n       AND (t_close_date = '01.01.0001' OR t_close_date >= ?) group by t_client";

           cmd = rsdcommand(SQL);
           cmd.AddParam("", RSDBP_IN,UserTypeAccount);
           cmd.AddParam("", RSDBP_IN,OperDate);
           cmd.AddParam("", RSDBP_IN,OperDate);
             
           cmd.AddParam("", RSDBP_IN,UserTypeAccount);
           cmd.AddParam("", RSDBP_IN,OperDate);
           cmd.AddParam("", RSDBP_IN,OperDate);
             
           rs = rsdRecordSet( cmd );
           InitProgress( -1, "Ждите...","Идет выборка счетов для обработки ");
           while (rs and rs.MoveNext())
            SQLin = "  SELECT acc.t_account, acc.t_code_currency t_fiid, ? comid, "
                   +"\n                         (SELECT t_code || ' - ' || t_name "
                   +"\n                            FROM dsfcomiss_dbt "
                   +"\n                           WHERE t_number = ? AND t_feetype = 1) comminfo "
                   +"\n                    FROM daccount_dbt acc, dsfcontr_dbt con "
                   +"\n                   WHERE acc.t_client = ? "
                   +"\n                     AND acc.t_close_date = TO_DATE ('01.01.0001', 'dd.mm.yyyy') "
                   +"\n                     AND INSTR (acc.t_type_account, 'Ч') != 0 "
                   +"\n                     AND INSTR (acc.t_usertypeaccount, 5) = 0 "
                   +"\n                     AND INSTR (acc.t_type_account, 'П') = 0 "
// 12.11.2014 joy R-490776 Счета СКС в каждом банке определяются по-разному. Info от Петренко Ольги
//                     +"\n                     AND SUBSTR (acc.t_account, 11, 1) != 9 " 
                   + SQL_SKS 
                   +"\n                     AND (   SUBSTR (acc.t_account, 1, 3) IN ('405', '406', '407') "
                   +"\n                          OR SUBSTR (acc.t_account, 1, 5) IN ('40802', '40807') "
                   +"\n                         ) "
                   +"\n                     AND con.t_object = acc.t_account ";
                        cmdin = rsdcommand(SQLin);
                        cmdin.AddParam("", RSDBP_IN,ComissPRBB(0));
                        cmdin.AddParam("", RSDBP_IN,ComissPRBB(0));
                        cmdin.AddParam("", RSDBP_IN,rs.value(0));             
                        rsin = rsdRecordSet( cmdin );
                        if (rsin and rsin.movenext())
                          TempArrForLog(i) = TempCom( rsin.value(0), rsin.value(1), rsin.value(2), rsin.value(3) );
                          i = i + 1;
                        end;
             UseProgress(i);
          end;
             RemProgress();
  elif ( ComissN == 311)
        i = 0;
        SQL =   "           SELECT DISTINCT (paym.t_receiveraccount), paym.t_fiid, ? comid, "
                +"\n                         (SELECT t_code || ' - ' || t_name "
                +"\n                            FROM dsfcomiss_dbt "
                +"\n                           WHERE t_number = ? AND t_feetype = 1) comminfo "
                +"\n                    FROM dpmpaym_dbt paym, daccount_dbt accp, daccount_dbt accr "
                +"\n                   WHERE paym.t_valuedate BETWEEN (SELECT TRUNC (TO_DATE (?),'MONTH') FROM DUAL) "
                +"\n                                              AND ? "
                +"\n                     AND accp.t_account = paym.t_payeraccount "
                +"\n                     AND accp.t_code_currency = paym.t_fiid "
                +"\n                     AND accp.t_chapter = 1 "
                +"\n                     AND accr.t_account = paym.t_receiveraccount "
                +"\n                     AND accr.t_code_currency = paym.t_fiid "
                +"\n                     AND accr.t_chapter = 1 "
                +"\n                     AND (   SUBSTR (accp.t_balance, 1, 5) = '42301' "
                +"\n                          OR SUBSTR (accp.t_balance, 1, 5) = '40911' "
                +"\n                         ) "
                +"\n                     AND INSTR (accr.t_usertypeaccount, ?) != 0 "
                +"\n         UNION "
                +"\n         SELECT DISTINCT (paym.t_receiveraccount), paym.t_fiid, ? comid, "
                +"\n                         (SELECT t_code || ' - ' || t_name "
                +"\n                            FROM dsfcomiss_dbt "
                +"\n                           WHERE t_number = ? AND t_feetype = 1) comminfo "
                +"\n                    FROM dpmpaym_dbt paym, daccount_dbt accp, daccount_dbt accr "
                +"\n                   WHERE paym.t_valuedate BETWEEN (SELECT TRUNC (TO_DATE (?),'MONTH') FROM DUAL) "
                +"\n                                              AND ? "
                +"\n                     AND accp.t_account = paym.t_payeraccount "
                +"\n                     AND accp.t_code_currency = paym.t_fiid "
                +"\n                     AND accp.t_chapter = 1 "
                +"\n                     AND accr.t_account = paym.t_receiveraccount "
                +"\n                     AND accr.t_code_currency = paym.t_fiid "
                +"\n                     AND accr.t_chapter = 1 "
                +"\n                     AND (   SUBSTR (accp.t_balance, 1, 5) = '42301' "
                +"\n                          OR SUBSTR (accp.t_balance, 1, 5) = '40911' "
                +"\n                         ) "
                +"\n                     AND SUBSTR (accr.t_balance, 1, 3) in ('405','406','407','408') "
                +"\n                     AND INSTR (accr.t_usertypeaccount, ?) != 0 " ;

           cmd = rsdcommand(SQL);
           cmd.AddParam("", RSDBP_IN,ComissPRBB(0));
           cmd.AddParam("", RSDBP_IN,ComissPRBB(0));
           cmd.AddParam("", RSDBP_IN,OperDate);
           cmd.AddParam("", RSDBP_IN,OperDate);
           cmd.AddParam("", RSDBP_IN,UserTypeAccount);
             
           cmd.AddParam("", RSDBP_IN,ComissPRBB(0));
           cmd.AddParam("", RSDBP_IN,ComissPRBB(0));
           cmd.AddParam("", RSDBP_IN,OperDate);
           cmd.AddParam("", RSDBP_IN,OperDate);
           cmd.AddParam("", RSDBP_IN,UserTypeAccount);
             
           rs = rsdRecordSet( cmd );
             InitProgress( -1, "Ждите...","Идет выборка счетов для обработки ");
           while (rs and rs.MoveNext())
            TempArrForLog(i) = TempCom( rs.value(0), rs.value(1), rs.value(2), rs.value(3) );
            i = i + 1;
             UseProgress(i);
           end;
             RemProgress();
               
  elif ( ComissN == 821)
        i = 0;
              // 11.04.2014 joy Перенос на 2031 I-00478090 Изменила условия отбора: только те счета, где есть примечание
         SQL = "         SELECT DISTINCT (con.t_object), con.t_fiid, ? comid, "
              +"\n                (SELECT t_code || ' - ' || t_name "
              +"\n                   FROM dsfcomiss_dbt "
              +"\n                  WHERE t_number = ? AND t_feetype = 1) comminfo "
              +"\n        from   dnotetext_dbt nt, dsfcontr_dbt con "                  
              +"\n where       con.t_dateclose = to_date ('01.01.0001', 'dd.mm.yyyy') "
              +"\n and substr (nt.t_documentid, -20, 20) = con.t_object "
              +"\n and nt.t_objecttype = 4 "
              +"\n and nt.t_notekind = 151 "
              +"\n and nt.t_validtodate >= ? ";
        /*
        SQL = "         SELECT DISTINCT (pm.t_payeraccount), pm.t_fiid, ? comid, "
              +"\n                (SELECT t_code || ' - ' || t_name "
              +"\n                   FROM dsfcomiss_dbt "
              +"\n                  WHERE t_number = ? AND t_feetype = 1) comminfo "
              +"\n           FROM dpmpaym_dbt pm, dpmdocs_dbt pmd, dacctrn_dbt arh, dsfcontr_dbt con "
              +"\n          WHERE (   SUBSTR (pm.t_payeraccount, 1, 3) IN ('405', '406', '407') "
              +"\n                 OR SUBSTR (pm.t_payeraccount, 1, 5) IN ('40802', '40807') "
              +"\n                ) "
              +"\n            AND pm.t_receiveraccount = '70601810600002102036' "
              +"\n            AND pm.t_paymentid = pmd.t_paymentid "
              +"\n            AND PMD.T_ACCTRNID = ARH.T_ACCTRNID"
              +"\n            AND arh.t_date_carry BETWEEN (SELECT TRUNC (TO_DATE (?), 'MONTH') FROM DUAL) "
              +"\n                                     AND ? "
              +"\n            AND con.T_OBJECT = pm.t_payeraccount "
              +"\n            and con.T_DATECLOSE = to_date('01.01.0001', 'dd.mm.yyyy') ";
              --------end joy*/
           cmd = rsdcommand(SQL);
           cmd.AddParam("", RSDBP_IN,ComissPRBB(0));
           cmd.AddParam("", RSDBP_IN,ComissPRBB(0));
           cmd.AddParam("", RSDBP_IN,OperDate);
           cmd.AddParam("", RSDBP_IN,OperDate);

             
           rs = rsdRecordSet( cmd );
             InitProgress( -1, "Ждите...","Идет выборка счетов для обработки ");
           while (rs and rs.MoveNext())
            TempArrForLog(i) = TempCom( rs.value(0), rs.value(1), rs.value(2), rs.value(3) );
            i = i + 1;
             UseProgress(i);
           end;
             RemProgress();
  elif ( ( ComissN == 1310) and LifeBank.is_EXV() )
    i = 0;
    SQL = "         SELECT   TO_NUMBER (ATCOR.T_OBJECT) account "
         +"\n        FROM   dobjattr_dbt attr, dobjatcor_dbt atcor "
         +"\n       WHERE       attr.T_OBJECTTYPE = 3 "
         +"\n               AND attr.T_GROUPID = 210 "
         +"\n               AND ATTR.T_NAME = 'Признак - З/пл проект ДМСБ' "
         +"\n               AND ATCOR.T_ATTRID = ATTR.T_ATTRID "
         +"\n               AND ATCOR.T_GROUPID = attr.T_GROUPID ";
           rs = rsdRecordSet(SQL);
             InitProgress( -1, "Ждите...","Идет выборка счетов для обработки ");
           while (rs and rs.MoveNext())
             RSQL = " SELECT   CON.T_OBJECT,CON.T_FIID, :1 comid, "
          +"\n                (SELECT t_code || ' - ' || t_name FROM dsfcomiss_dbt WHERE t_number = :2 AND t_feetype = 1) comminfo "
          +"\n          FROM   dsfcontr_dbt con "
          +"\n         WHERE   CON.T_PARTYID = :3 "
          +"\n                 AND t_id = (SELECT   MIN (t_id) "
          +"\n                               FROM   dsfcontr_dbt "
          +"\n                              WHERE   T_PARTYID = CON.T_PARTYID "
          +"\n                                  AND (SUBSTR (T_OBJECT, 1, 3) BETWEEN '405' AND '407' "
          +"\n                                       OR (SUBSTR (T_OBJECT, 1, 5) IN ('40802', '40807'))) "
          +"\n                                  AND (T_DATECLOSE = TO_DATE ('01.01.0001', 'dd.mm.yyyy') "
          +"\n                                       OR T_DATECLOSE > SYSDATE) "
          +"\n                                  AND t_fiid = 0) ";
             cmd = rsdcommand(RSQL);
             cmd.AddParam("1", RSDBP_IN,ComissPRBB(0));
             cmd.AddParam("2", RSDBP_IN,ComissPRBB(0));
             cmd.AddParam("3", RSDBP_IN,rs.value(0));
             rrs = rsdRecordSet(cmd);
             if (rrs and rrs.movenext())
              TempArrForLog(i) = TempCom( rrs.value(0), rrs.value(1), rrs.value(2), rrs.value(3) );
              i = i + 1;
             end;
             UseProgress(i);
           end;
             RemProgress();
               
  elif ( ( ComissN == 1310) and  (LifeBank.is_PRBB() or LifeBank.is_SLD() or LifeBank.is_GO()) ) 
    
    i = 0;
    cmd = RSDCommand (" SELECT   ACC.T_ACCOUNT ACCOUNT, "+
                      "          CTR.T_FIID T_FIID, "+
                      "          COM.T_COMMNUMBER COMISSID, "+
                      "          (SELECT   t_code || ' - ' || t_name "+
                      "             FROM   dsfcomiss_dbt "+
                      "            WHERE   t_number = COM.T_COMMNUMBER AND t_feetype = 1) "+
                      "             comminfo "+
                      "   FROM   DACCOUNT_DBT ACC, DSFCONTR_DBT CTR, DSFCONCOM_DBT COM "+
                      "  WHERE       INSTR (ACC.T_USERTYPEACCOUNT, 'Z') != 0 "+
                      "          AND ACC.T_CHAPTER = 1 "+
                      "          AND ACC.T_OPEN_CLOSE != 'З' "+
                      "          AND INSTR (ACC.T_TYPE_ACCOUNT, 'П') = 0 "+
                      "          AND CTR.T_OBJECT = ACC.T_ACCOUNT "+
                      "          AND COM.T_OBJECTID = CTR.T_ID "+
                      "          AND COM.T_COMMNUMBER = :1 "+
                      "          AND COM.T_FEETYPE = 1 "+
                      "          AND (COM.T_DATEEND = '01.01.0001' OR COM.T_DATEEND >= :2) "+
                      "          AND COM.T_SFPLANID = "+
                      "                (SELECT   MAX (T_SFPLANID) "+
                      "                   FROM   DSFCONTRPLAN_DBT "+
                      "                  WHERE   T_SFCONTRID = CTR.T_ID "+
                      "                          AND (T_END = '01.01.0001' OR T_END >= :3)) ");
    cmd.AddParam("1", RSDBP_IN,ComissPRBB(0));
    cmd.AddParam("2", RSDBP_IN,OperDate);
    cmd.AddParam("3", RSDBP_IN,OperDate);
    rs = RSDRecordSet(cmd);
      
    while (rs and rs.movenext())
      TempArrForLog(i) = TempCom( rs.value(0), rs.value(1), rs.value(2), rs.value(3) );
      i = i + 1;
    end;
   
  elif ( ComissN == 3141)
    
    i = 0;
    cmd = RSDCommand (" SELECT   MIN (t_account) account, "+
                      "                   0 T_FIID, "+
                      "                   :1 COMISSID, "+
                      "                   (SELECT   t_code || ' - ' || t_name "+
                      "                      FROM   dsfcomiss_dbt "+
                      "                     WHERE   t_number = :2 AND t_feetype = 1) "+
                      "                      comminfo "+
                      "   FROM   usr_regular_contr_dbt "+
                      "  WHERE   t_Contr_Date <= :3 "+
                      "          AND (t_Contr_End_Date >= :4 "+
                      "               OR t_Contr_End_Date = TO_DATE ('01.01.0001', 'dd.mm.yyyy')) "+
                      "          AND t_Contragent_Acc <> '40702810700020037446'" +
                      " GROUP BY   t_client_id" );
    cmd.AddParam("1", RSDBP_IN,ComissPRBB(0));
    cmd.AddParam("2", RSDBP_IN,ComissPRBB(0));
    cmd.AddParam("3", RSDBP_IN,OperDate);
    cmd.AddParam("4", RSDBP_IN,OperDate);
    rs = RSDRecordSet(cmd);
      
    while (rs and rs.movenext())
      TempArrForLog(i) = TempCom( rs.value(0), rs.value(1), rs.value(2), rs.value(3) );
      i = i + 1;
    end;
      
  elif ( ComissN == 3150)
    
    i = 0;
    cmd = RSDCommand (" SELECT   CTR.T_OBJECT, "+
                      "          CTR.T_FIID, "+
                      "          :1, "+
                      "          (SELECT   t_code || ' - ' || t_name "+
                      "             FROM   dsfcomiss_dbt "+
                      "            WHERE   t_number = :2 AND t_feetype = 1) "+
                      "   FROM   dconstrcom_dbt dcm, dsfcontr_dbt ctr "+
                      "  WHERE   CTR.T_OBJECT = DCM.T_OBJECT " );
    cmd.AddParam("1", RSDBP_IN,ComissPRBB(0));
    cmd.AddParam("2", RSDBP_IN,ComissPRBB(0));
    rs = RSDRecordSet(cmd);
      
    while (rs and rs.movenext())
      TempArrForLog(i) = TempCom( rs.value(0), rs.value(1), rs.value(2), rs.value(3) );
      i = i + 1;
    end;
    
  end;
   i = 0;
     
//RR Псевдозаголовок
   if (NeedPrintLog)
     println ("Договора с которых нужно списать комиссии");
   end;
   InitProgress(TempArrForLog.Size,"Ждите...","Идет обработка ");
   while(i <= ((TempArrForLog.Size) - 1) )
    //RR Вызываем процедуру включения комиссии по тем ДО с которых она должна списыватся.
     TurnSfconcomOnEtc( TempArrForLog(i).account, TempArrForLog(i).fiid, TempArrForLog(i).comidr, OperDate);
     if (NeedPrintLog)
       println (TempArrForLog(i).account+" "+TempArrForLog(i).comminf); //RR Допиливаю вывод чтобы не задавали лишних вопросов.
     end;
     i = i + 1;
     UseProgress(i);
   end;
     RemProgress();
       
//  else
//     msgbox ("Изивините, процедура подключена пока только для ПРББ, ЭВ, Солидарности и Пойдем.|Если нужно подключить к другим банкам, контактируйте с Рахмедовым Р.");
//  end;
  
 END;
 
 MACRO Run_Connection_GEB_etc_com(LogNeed, OperDate, ComissD, x)
 
 private var ComissDay = TArray(),
             err,
             i,
             TypeC,
             LifeBank = fg_life_subject( {OurBank} ),
             dStrAttrId, 
             dStrNot,
             Temparr  =  TArray();
 private array a;
 
 class TempCom(t_account, t_fiid, comid)
  var account = t_account;
  var fiid    = t_fiid;
  var comidv  = comid;
 end;
 
  if (ComissD == 557)

    ComissDay(0) = GetComissNumberFromCode("5.5.7");
   // Банк ГЭБ
  elif (LifeBank.is_GEB())

     if   (ComissD == 342)
       ComissDay(0) = 1012;         // 3.4.2 гэб
     elif (ComissD == 343)
       ComissDay(0) = 1013;         // 3.4.3 гэб
     elif (ComissD == 344)
       ComissDay(0) = 1014;         // 3.4.4 гэб
     elif (ComissD == 349)
       ComissDay(0) = 1048;         // 3.4.9 гэб
     elif (ComissD == 371)
       ComissDay(0) = 1075;         // 3.7.1 гэб
     elif (ComissD == 323)
       ComissDay(0) = 1061;         // 3.2.3 гэб
     elif (ComissD == 1310)
       ComissDay(0) = 1116;         // 13.1.0
     end;
  elif (LifeBank.is_EXV())

     if   ( (ComissD == 3411) and not({MFO_bank} == "040702756") and not({MFO_bank} == "047308902") and not({MFO_bank} == "041806835") and not ({MFO_bank} == "042007755" ) )
       ComissDAY(0) = 1071;         // 3.4.11
     elif ( (ComissD == 3411) and (({MFO_bank} == "042007755") or ({MFO_bank} == "041806835")) )//Воронеж и Волгоград
       ComissDAY(0) = 1070;         // 3.4.11
     elif ( (ComissD == 3411) and ({MFO_bank} == "047308902") )//Ульяновск
       ComissDAY(0) = 1067;         // 3.4.11
     elif ( (ComissD == 3411) and ({MFO_bank} == "040702756") )//Ставрополь
       ComissDAY(0) = 1068;         // 3.4.11
     end;
     
  end;
 
 //RR Вызываем процедуру которая отключит все комиссии из массива по всему банку.
 TurnAllSfconcomOff(ComissDay); 
 //RR Для 3.4.9. придется замутить еще 1 большой if
 
  if ((ComissD == 342) or (ComissD == 343) or (ComissD == 344))
 
        //RR Запрос взят из макроса расчета комиссии, никаких дополнительных вкруток не делаю. 
          i = 0;
          if   (ComissD == 342)
            dStrAttrId = ""; //RR Все это взято из GebCommLib fff
            dStrNot = "NOT";
          elif (ComissD == 343)
            dStrAttrId = " AND oc.t_attrid = 1";
            dStrNot = "";
          elif (ComissD == 344)
            dStrAttrId = " AND oc.t_attrid = 2";
            dStrNot = "";
          end;
  
          SQL = 
                  " select distinct(PAYM.T_PAYERACCOUNT), PAYM.T_FIID, "+ComissDay(0)+" "
        +"\n          from dpmpaym_dbt paym, dpmrmprop_dbt prop, dpspayord_dbt ord, daccount_dbt acc "
        +"\n           where     acc.t_account = paym.t_payeraccount "
        +"\n                 and acc.t_chapter = paym.t_chapter "
        +"\n                 and substr ( paym.t_receiveraccount, 1, 3 ) not between '401' and '404' "
        +"\n                 and substr ( paym.t_receiveraccount, 1, 3 ) not in ('423', '426') "
        +"\n                 and substr ( paym.t_receiveraccount, 1, 5 ) not in ('40817', '40820', '30232') "
        +"\n                 and paym.t_valuedate between to_date ( '"+OperDate+"' ) - 10 and '"+OperDate+"'"
        +"\n                 AND NOT ( REGEXP_LIKE( '\\s'||lower(prop.t_ground), '(\\sПК\\s|\\sп\\.карта|п/карта|карточный\\sсчет|\\sп/к\\s)' ) "
        +"\n                        OR REGEXP_LIKE ( prop.t_ground, '(40817|40820)\\d{15}' ) "
        +"\n                        OR REGEXP_LIKE ( prop.t_ground, '(423|426)\\d{17}' ) ) "
        +"\n                 and paym.t_paymstatus = 32000 "
        +"\n                 and paym.t_payerbankid <> paym.t_receiverbankid "
        +"\n                 and prop.t_paymentid = paym.t_paymentid "
        +"\n                 and prop.t_shifroper <> '16' "
        +"\n                 and ord.t_orderid = paym.t_paymentid "
        +"\n                 and exists "
        +"\n                           (select 1 "
        +"\n                              from dpmdocs_dbt pmd, dacctrn_dbt arh "
        +"\n                            where     pmd.t_paymentid = paym.t_paymentid "
        +"\n                                  and ARH.T_ACCTRNID = PMD.T_ACCTRNID "
        +"\n                                  and arh.t_chapter = 1 "
        +"\n                                  and arh.t_state = 1 "
        +"\n                                  and arh.t_date_carry = '"+OperDate+"' ) "
        +"\n                 and "+dStrNOT+" exists "
        +"\n                           (select 1 "
        +"\n                              from dobjatcor_dbt oc "
        +"\n                            where     oc.t_objecttype = 501 "
        +"\n                                  and oc.t_groupid = 10 " + dStrAttrId
        +"\n                                  and oc.t_object = lpad ( paym.t_paymentid, 10, 0 )) "
        +"\n                 and ord.t_origin <> 2; ";

                     rs = rsdRecordSet(SQL);
                     while (rs and rs.MoveNext())
                      Temparr(i) = TempCom( rs.value(0), rs.value(1), rs.value(2) );
                      i = i + 1;
                     end;
                        
  elif (ComissD == 349)
       i = 0;
 //RR Запрос целиком взят из макроса расчета
        SQL =  " select distinct(PAYM.T_PAYERACCOUNT), PAYM.T_FIID, "+ComissDay(0)+" "
        +"\n     FROM   DPmPaym_dbt paym, dpmrmprop_dbt rm "
        +"\n    WHERE       paym.t_PaymStatus = 32000 "                                                      // Только закрытые
        +"\n            AND rm.t_paymentid = paym.t_paymentid "
        +"\n            and paym.t_valuedate between to_date ( '"+OperDate+"' ) - 10 and '"+OperDate+"' "
        +"\n            AND SUBSTR (paym.t_ReceiverAccount, 1, 3) NOT BETWEEN '401' AND '404' "              // Кроме бюджетных платежей
        +"\n            AND (SUBSTR (paym.t_PayerAccount, 1, 3) BETWEEN '405' AND '407' "
        +"\n                 OR SUBSTR (paym.t_PayerAccount, 1, 5) IN ('40807', '40802')) "
        +"\n            AND ( (SUBSTR (paym.t_ReceiverAccount, 1, 3) IN ('423', '426') "
        +"\n                   OR SUBSTR (paym.t_ReceiverAccount, 1, 5) IN ('40817', '40820', '30232') "                                                     // Проверки назначения платежа
        +"\n                   OR (   REGEXP_LIKE (rm.t_ground, '(40817|40820)\\d{15}') "                                                                    // 1. Есть счета 40817 / 40820 / 30232 в назначении
        +"\n                       OR REGEXP_LIKE (rm.t_ground, '(423|426)\\d{17}') "                                                                        // 2. Есть счета 423 - 426 в назначении
        +"\n                       OR REGEXP_LIKE ('\\s' || LOWER (rm.t_ground), '(\\sпк\\s|\\sп\\.карта|п/карта|карточный\\sсчет|\\sп/к\\s)'))) "                                       // 3. Есть текст в назначении
        +"\n                 AND NOT REGEXP_LIKE  ('\\s' || LOWER (rm.t_ground), '(зар\\.плата|зарплат[а-я]|з/п|\\sзп\\s|з\\.п|алимент|кредит|аванс)') "      // 4. Нет текста в назначении
        +"\n                 AND NOT REGEXP_LIKE  ( LOWER (rm.t_ground), 'заработн[а-я][а-я]\\sплат[а-я]' ) "                                                 // 5. Нет текста в назначении
        +"\n                 ) "
        +"\n            AND paym.t_ReceiverBankID <> "+{OurBank}+" "
        +"\n            AND EXISTS "
        +"\n                  (SELECT   ARH.T_ACCTRNID "
        +"\n                     FROM   dacctrn_dbt arh, dpmdocs_dbt pmd "
        +"\n                    WHERE       ARH.T_ACCTRNID = PMD.T_ACCTRNID "
        +"\n                            AND arh.t_chapter = 1 "
        +"\n                            AND arh.t_state = 1 "
        +"\n                            AND pmd.t_paymentid = paym.t_paymentid "
        +"\n                            and arh.t_date_carry = '"+OperDate+"' ) ";

                     rs = rsdRecordSet(SQL);
                     while (rs and rs.MoveNext())
                      Temparr(i) = TempCom( rs.value(0), rs.value(1), rs.value(2) );
                      i = i + 1;
                     end;

  elif (ComissD == 371)
        i = 0;
        //RR Запрос целиком взят из макроса расчета
        SQL = "          select distinct(PAYM.T_PAYERACCOUNT), PAYM.T_FIID, "+ComissDay(0)+"  "
        +"\n             FROM   dpmpaym_dbt paym, "
        +"\n                    dpspayord_dbt ord, "
        +"\n                    dpmrmprop_dbt prop, "
        +"\n                    daccount_dbt acc "
        +"\n            WHERE      acc.t_account = paym.t_payeraccount "
        +"\n                   AND acc.t_chapter = paym.t_chapter "
        +"\n                   AND acc.t_type_account NOT LIKE '%Z%' "
        +"\n                   AND SUBSTR(paym.t_receiveraccount, 1, 3) NOT BETWEEN '401' AND '404' "
        +"\n                   AND paym.t_paymstatus = 32000 "
        +"\n                   AND paym.t_payerbankid <> paym.t_receiverbankid "
        +"\n                   AND ord.t_orderid = paym.t_paymentid "
        +"\n                   AND prop.t_paymentid = paym.t_paymentid "
        +"\n                   AND prop.T_PAYMENTKIND = 'С' "
        +"\n                   AND prop.t_shifroper <> '16' "
        +"\n                   and paym.t_valuedate between to_date ( '"+OperDate+"' ) - 10 and '"+OperDate+"' "
        +"\n                   AND EXISTS "
        +"\n                         (SELECT ARH.T_ACCTRNID "
        +"\n                            FROM   dpmdocs_dbt pmd, dacctrn_dbt arh "
        +"\n                           WHERE       pmd.t_paymentid = paym.t_paymentid "
        +"\n                                   AND ARH.T_ACCTRNID = PMD.T_ACCTRNID "
        +"\n                                   AND arh.t_chapter = 1 "
        +"\n                                   AND arh.t_state = 1 "
        +"\n                                   AND arh.t_date_carry = '"+OperDate+"') ";

                     rs = rsdRecordSet(SQL);
                     while (rs and rs.MoveNext())
                      Temparr(i) = TempCom( rs.value(0), rs.value(1), rs.value(2) );
                      i = i + 1;
                     end;
                        
  elif (ComissD == 323)
        i = 0;
        //RR Запрос целиком взят из макроса расчета
          SQL = 
                  " select distinct(PAYM.T_PAYERACCOUNT), PAYM.T_FIID, "+ComissDay(0)+" "
        +"\n          from dpmpaym_dbt paym, dacctrn_dbt arh, dpmdocs_dbt pmd" //, dsfcontr_dbt contr "
        +"\n           where paym.t_paymstatus = 32000 "
        +"\n                  and ( substr ( paym.t_payeraccount, 1, 3 ) between '405' and '407' "
        +"\n                     or substr ( paym.t_payeraccount, 1, 5 ) in ('40807', '40802') ) "
        +"\n                  and (   substr ( paym.t_receiveraccount, 1, 3 ) in ('423', '426') "
        +"\n                       or substr ( paym.t_receiveraccount, 1, 5 ) in ('40817', '40820') "
        +"\n                       or paym.t_receiveraccount = '30232810500000000002' )"
        +"\n                   and paym.t_receiverbankid = "+{OurBank}+" "
        +"\n                   AND ARH.T_ACCTRNID = PMD.T_ACCTRNID "
        +"\n                   AND ARH.T_state = 1 "
        +"\n                   and pmd.t_paymentid = paym.t_paymentid "
        +"\n                   and arh.t_date_carry = '"+OperDate+"' ";
        
          rs = rsdRecordSet( SQL );
          while (rs and rs.MoveNext())
           Temparr(i) = TempCom( rs.value(0), rs.value(1), rs.value(2) );
           i = i + 1;
          end;
  elif (ComissD == 3411)
         i = 0;
         rs = EXV_GetComBESPRecordSet( 0, CLB_DocOrigin, OperDate, OperDate, ComissDAY(0));
           InitProgress( -1, "Ждите...","Идет выборка счетов для обработки ");
         while (rs and rs.MoveNext())
          Temparr(i) = TempCom( rs.value(0), rs.value(1), rs.value(2), rs.value(3) );
          i = i + 1;
           UseProgress(i);
         end;
           RemProgress();
           
  elif (ComissD == 1310)
  
    i = 0;
    
    rs = RSDRecordSet(" SELECT   distinct(PAYM.T_PAYERACCOUNT), PAYM.T_FIID, "+ComissDay(0)+
                      "   FROM   DPMPAYM_DBT PAYM, DACCOUNT_DBT ACC " +
                      "  WHERE       SUBSTR (PAYM.T_PAYERACCOUNT, 1, 3) BETWEEN '405' AND '408' " +
                      "          AND PAYM.T_RECEIVERACCOUNT = '30232810209000060165' " +
                      "          AND PAYM.T_PAYMSTATUS = 32000 " +
                      "          AND PAYM.T_VALUEDATE BETWEEN TRUNC (TO_DATE('"+OperDate+"'), 'MONTH') AND TO_DATE('"+OperDate+"') " +
                      "          AND PAYM.T_PAYERBANKID = PAYM.T_RECEIVERBANKID " +
                      "          AND PAYM.T_PAYERACCOUNT = ACC.T_ACCOUNT " +
                      "          AND ACC.T_OPEN_CLOSE != CHR (135) ");
                      
    InitProgress( -1, "Ждите...","Идет выборка счетов для обработки ");
    while (rs and rs.MoveNext())
     Temparr(i) = TempCom( rs.value(0), rs.value(1), rs.value(2));
     i = i + 1;
     UseProgress(i);
    end;
    RemProgress();
    
  elif (ComissD == 557)
    
    i = 0;
    cmd = RSDCommand (" SELECT   ACC.T_ACCOUNT, " +
                      "          ACC.T_CODE_CURRENCY T_FIID, " +
                      "          :1 COMID " +
                      "   FROM   DPMPAYM_DBT P, DACCOUNT_DBT ACC" +
                      "  WHERE   P.T_VALUEDATE = :2 " +
                      "          AND REGEXP_LIKE (P.T_PAYERACCOUNT, '^20208810.08') " +
                      "          AND REGEXP_LIKE (P.T_RECEIVERACCOUNT, '^(40[5-7]|4080[2\\7])') " +
                      "          AND P.T_PAYMSTATUS = 32000 " +
                      "          AND ACC.T_ACCOUNT = P.T_RECEIVERACCOUNT " +
                      "          AND ACC.T_CHAPTER = 1 " +
                      "          AND INSTR (ACC.T_USERTYPEACCOUNT, 'D') = 0 " +
                      "          AND SUBSTR (ACC.T_ACCOUNT, 11, 1) != 9 " +
                      "          AND SUBSTR (ACC.T_ACCOUNT, 12, 1) != 9 " );
    cmd.AddParam("1", RSDBP_IN,ComissDay(0));
    cmd.AddParam("2", RSDBP_IN,OperDate);
    rs = RSDRecordSet(cmd);
      
    while (rs and rs.movenext())
      Temparr(i) = TempCom( rs.value(0), rs.value(1), rs.value(2) );
      i = i + 1;
    end;
    
  end;
     
    if (LogNeed)
      //RR Псевдозаголовок
      println ("Договора обслуживания с которых необходимо списать комиссию "+x+" за "+OperDate+"\nВНИМАНИЕ В ДОГОВОРАХ КОТОРЫХ НЕТ В ЭТОМ СПИСКЕ КОМИССИЯ ПЕРЕВЕДЕНА В СТАТУС НЕ НАЧИСЛЯЕТСЯ!!! Проверьте корректность выполнения процедуры подключения.");
    end;
    
    i = 0;
    while(i <= ((Temparr.Size) - 1) )
     //RR Вызываем процедуру включения комиссии по тем ДО с которых она должна списыватся.
      TurnSfconcomOn( Temparr(i).account, Temparr(i).fiid, Temparr(i).comidv, OperDate);
      if (LogNeed)
        println (Temparr(i).account); //RR Допиливаю вывод чтобы не задавали лишних вопросов.
      end;
      i = i + 1;
    end;
  
 END;
 
 
 // Подключение комиссии за зарплатные проекты (реализовано  для ВУЗа) - joy 18.04.2014 C-27735
 MACRO Run_Connection_VUZ_etc_com(OperDate, ComissN, UserTypeAccount, NeedPrintLog)
 
  
 private var ComissVUZ,
             i,
             LifeBank = fg_life_subject( {OurBank} ),
             TempArrForLog  =  TArray();
 
 class TempCom(t_account, t_code_currency, comid, comminfo)
  var account    = t_account;
  var fiid       = t_code_currency;
  var comidr     = comid;
  var comminf    = comminfo;
 end;
 
     ComissVUZ = TArray();
     if (ComissN == 1310)
       ComissVUZ(0) = 1112;         // 13.1.0
     end;

  if (LifeBank.is_VUZ())
 // Вызываем процедуру которая отключит все комиссии из массива по всему банку.
    TurnAllSfconcomOff(ComissVUZ); 
    if ( ComissN == 1310) 
    
      i = 0;
      cmd = RSDCommand (" SELECT   ACC.T_ACCOUNT ACCOUNT, "+
                        "          CTR.T_FIID T_FIID, "+
                        "          COM.T_COMMNUMBER COMISSID, "+
                        "          (SELECT   t_code || ' - ' || t_name "+
                        "             FROM   dsfcomiss_dbt "+
                        "            WHERE   t_number = COM.T_COMMNUMBER AND t_feetype = 1) "+
                        "             comminfo "+
                        "   FROM   DACCOUNT_DBT ACC, DSFCONTR_DBT CTR, DSFCONCOM_DBT COM "+
                        "  WHERE       INSTR (ACC.T_USERTYPEACCOUNT, :1) != 0 "+
                        "          AND ACC.T_CHAPTER = 1 "+
                        "          AND ACC.T_OPEN_CLOSE != 'З' "+
                        "          AND INSTR (ACC.T_TYPE_ACCOUNT, 'П') = 0 "+
                        "          AND CTR.T_OBJECT = ACC.T_ACCOUNT "+
                        "          AND COM.T_OBJECTID = CTR.T_ID "+
                        "          AND COM.T_COMMNUMBER = :2 "+
                        "          AND COM.T_FEETYPE = 1 "+
                        "          AND (COM.T_DATEEND = '01.01.0001' OR COM.T_DATEEND >= :3) "+
                        "          AND COM.T_SFPLANID = "+
                        "                (SELECT   MAX (T_SFPLANID) "+
                        "                   FROM   DSFCONTRPLAN_DBT "+
                        "                  WHERE   T_SFCONTRID = CTR.T_ID "+
                        "                          AND (T_END = '01.01.0001' OR T_END >= :4)) ");
      cmd.AddParam("1", RSDBP_IN,UserTypeAccount);
      cmd.AddParam("2", RSDBP_IN,ComissVUZ(0));
      cmd.AddParam("3", RSDBP_IN,OperDate);
      cmd.AddParam("4", RSDBP_IN,OperDate);
      rs = RSDRecordSet(cmd);
      
      while (rs and rs.movenext())
        TempArrForLog(i) = TempCom( rs.value(0), rs.value(1), rs.value(2), rs.value(3) );
        i = i + 1;
      end;

    end;
     i = 0;
     
//RR Псевдозаголовок
     if (NeedPrintLog)
       println ("Договора с которых нужно списать комиссии");
     end;
     InitProgress(TempArrForLog.Size,"Ждите...","Идет обработка ");
     while(i <= ((TempArrForLog.Size) - 1) )
      //RR Вызываем процедуру включения комиссии по тем ДО с которых она должна списыватся.
       TurnSfconcomOnEtc( TempArrForLog(i).account, TempArrForLog(i).fiid, TempArrForLog(i).comidr, OperDate);
       if (NeedPrintLog)
         println (TempArrForLog(i).account+" "+TempArrForLog(i).comminf); //RR Допиливаю вывод чтобы не задавали лишних вопросов.
       end;
       i = i + 1;
       UseProgress(i);
     end;
       RemProgress();
       
  else
     msgbox ("Изивините, данная процедура подключена для ВУЗа.|Если нужно подключить к другим банкам, контактируйте с Рахмедовым Р.");
  end;
 
 END;
 
 MACRO RunConnect34PRBB(DateConnection, NeedRunConnect, RTime, NeedPrintLog)
  var cmd, 
      BTime, 
      ETime, 
      TotalTime, 
      rs, 
      table,
      cnt,
      ProlongTime;
  
  if ( NeedRunConnect )
    begaction(100,"Выполняется подключение ежедневных комиссий", false);
    BTime = time();
    ProlongTime = RTime + ":00";
    cmd = RSDCommand( " begin "+
                      "      usr_comiss_prbb_34.MassCalculationOfCommissions (need_run            => :m_need_run, " +
                      "                                                       end_date            => :m_end_date, " +
                      "                                                       oper_prolong_time   => :m_oper_prolong_time); "+
                      " end; ");
                  
    cmd.AddParam("m_need_run",          RSDBP_IN, 0);
    cmd.AddParam("m_end_date",          RSDBP_IN, DateConnection);
    cmd.AddParam("m_oper_prolong_time", RSDBP_IN, ProlongTime);
    
    cmd.execute();
    ETime = time();
    TotalTime = Etime - Btime;
  end;
  
  if (not NeedRunConnect)
    begaction(100,"Выполняется печать лога", false);
  end;
  
  if (NeedPrintLog)
    println("Время выполнения подключения - " + TotalTime);
    rs = RSDRecordSet(" select count(UAC34.ID ) CNT from usr_account_collection_34 uac34 where UAC34.RET_VALUE > 0 ");
    rs.movenext();
    cnt = int(rs.value(0));
    println("Общее количество подключенных ДО - " + string(cnt));
  
    rs = RSDRecordSet("   SELECT   to_char(COUNT (UAC34.ID)) CNT, COM.T_CODE COMCODE " +
                      "     FROM   usr_account_collection_34 uac34, dsfcomiss_dbt com " +
                      "    WHERE       UAC34.RET_VALUE > 0 " +
                      "            AND COM.T_NUMBER = UAC34.COMCODE " +
                      "            AND COM.T_FEETYPE = 1 " +
                      " GROUP BY   COM.T_CODE " +
                      " ORDER BY   COMCODE ");
    table = CTableReport();
    table.addColumn ("Комиссия",      10, AL_CENTER);
    table.addColumn ("Количество ДО", 10, AL_LEFT);
    table.printHead ();
    while (rs and rs.movenext())
      table.printStringTransferByWord ( rs.value("COMCODE") ,
                                        rs.value("CNT") );
    end;
  
    table.printBottom ();
  
    println("Список договоров обслуживания с подключенными комиссиями");
  
    rs = RSDRecordSet ("   SELECT   TO_CHAR (UAC.FILL_DATE, 'dd.mm.yyyy') FILL_DATE," +
                       "            UAC.OPR_PROLONG_TIME OP_TIME," +
                       "            UAC.ACCOUNT," +
                       "            TO_CHAR (UAC.PARTYID) PARTYID," +
                       "            TO_CHAR (UAC.SFCONTRID) SFCONTRID," +
                       "            TO_CHAR (UAC.DATEPERIODBEGIN, 'dd.mm.yyyy') DATEPERIODBEGIN," +
                       "            TO_CHAR (UAC.DATEPERIODEND, 'dd.mm.yyyy') DATEPERIODEND," +
                       "            COM.T_CODE COMCODE" +
                       "     FROM   usr_account_collection_34 uac, dsfcomiss_dbt com" +
                       "    WHERE       UAC.RET_VALUE > 0" +
                       "            AND COM.T_NUMBER = UAC.COMCODE" +
                       "            AND COM.T_FEETYPE = 1" +
                       " ORDER BY   COM.T_CODE, UAC.ACCOUNT  " );
     table = CTableReport();
     table.addColumn ("Дата",                      10, AL_CENTER);
     table.addColumn ("Время продления опер. дня", 10, AL_CENTER);
     table.addColumn ("Счет клиента",              20, AL_CENTER);
     table.addColumn ("ID Клиентa",                10, AL_CENTER);
     table.addColumn ("ID Договора",               10, AL_CENTER);
     table.addColumn ("Начало периода",            8 , AL_CENTER);
     table.addColumn ("Конец периода",             8 , AL_CENTER);
     table.addColumn ("Комиссия",                  5 , AL_CENTER);
     table.printHead ();
   
    while (rs and rs.movenext())
      table.printStringTransferByWord ( rs.value("FILL_DATE") ,
                                        rs.value("OP_TIME") ,
                                        rs.value("ACCOUNT") ,
                                        rs.value("PARTYID") ,
                                        rs.value("SFCONTRID") ,
                                        rs.value("DATEPERIODBEGIN") ,
                                        rs.value("DATEPERIODEND"),
                                        rs.value("COMCODE") );
    end;
    table.printBottom ();
  end;
  
  endaction(0);
 END;
 
 /*29.05.2015 joy C-40210*/
  MACRO RunConnect34VUZ(DateConnection, NeedRunConnect, RTime, NeedPrintLog)
  var cmd, 
      BTime, 
      ETime, 
      TotalTime, 
      rs, 
      table,
      cnt,
      ProlongTime;
  
  if ( NeedRunConnect )
    begaction(100,"Выполняется подключение ежедневных комиссий", false);
    BTime = time();
    ProlongTime = RTime + ":00";
    cmd = RSDCommand( " begin "+
                      "      usr_comiss_vuz_34.MassCalculationOfCommissions (need_run            => :m_need_run, " +
                      "                                                       end_date           => :m_end_date, " +
                      "                                                       oper_prolong_time  => :m_oper_prolong_time, "+
                      "                                                       bics               => :m_bics); "+
                      " end; ");
                  
    cmd.AddParam("m_need_run",          RSDBP_IN, 0);
    cmd.AddParam("m_end_date",          RSDBP_IN, DateConnection);
    cmd.AddParam("m_oper_prolong_time", RSDBP_IN, ProlongTime);
    cmd.AddParam("m_bics",              RSDBP_IN, getBICsBanks());
    
    cmd.execute();
    ETime = time();
    TotalTime = Etime - Btime;
  end;
  
  if (not NeedRunConnect)
    begaction(100,"Выполняется печать лога", false);
  end;
  
  if (NeedPrintLog)
    println("Время выполнения подключения - " + TotalTime);
    rs = RSDRecordSet(" select count(UAC34.ID ) CNT from usr_account_collection_34 uac34 where UAC34.RET_VALUE > 0 ");
    rs.movenext();
    cnt = int(rs.value(0));
    println("Общее количество подключенных ДО - " + string(cnt));
  
    rs = RSDRecordSet("   SELECT   to_char(COUNT (UAC34.ID)) CNT, COM.T_CODE COMCODE " +
                      "     FROM   usr_account_collection_34 uac34, dsfcomiss_dbt com " +
                      "    WHERE       UAC34.RET_VALUE > 0 " +
                      "            AND COM.T_NUMBER = UAC34.COMCODE " +
                      "            AND COM.T_FEETYPE = 1 " +
                      " GROUP BY   COM.T_CODE " +
                      " ORDER BY   COMCODE ");
    table = CTableReport();
    table.addColumn ("Комиссия",      10, AL_CENTER);
    table.addColumn ("Количество ДО", 10, AL_LEFT);
    table.printHead ();
    while (rs and rs.movenext())
      table.printStringTransferByWord ( rs.value("COMCODE") ,
                                        rs.value("CNT") );
    end;
  
    table.printBottom ();
  
    println("Список договоров обслуживания с подключенными комиссиями");
  
    rs = RSDRecordSet ("   SELECT   TO_CHAR (UAC.FILL_DATE, 'dd.mm.yyyy') FILL_DATE," +
                       "            UAC.OPR_PROLONG_TIME OP_TIME," +
                       "            UAC.ACCOUNT," +
                       "            TO_CHAR (UAC.PARTYID) PARTYID," +
                       "            TO_CHAR (UAC.SFCONTRID) SFCONTRID," +
                       "            TO_CHAR (UAC.DATEPERIODBEGIN, 'dd.mm.yyyy') DATEPERIODBEGIN," +
                       "            TO_CHAR (UAC.DATEPERIODEND, 'dd.mm.yyyy') DATEPERIODEND," +
                       "            COM.T_CODE COMCODE" +
                       "     FROM   usr_account_collection_34 uac, dsfcomiss_dbt com" +
                       "    WHERE       UAC.RET_VALUE > 0" +
                       "            AND COM.T_NUMBER = UAC.COMCODE" +
                       "            AND COM.T_FEETYPE = 1" +
                       " ORDER BY   COM.T_CODE, UAC.ACCOUNT  " );
     table = CTableReport();
     table.addColumn ("Дата",                      10, AL_CENTER);
     table.addColumn ("Время продления опер. дня", 10, AL_CENTER);
     table.addColumn ("Счет клиента",              20, AL_CENTER);
     table.addColumn ("ID Клиентa",                10, AL_CENTER);
     table.addColumn ("ID Договора",               10, AL_CENTER);
     table.addColumn ("Начало периода",            8 , AL_CENTER);
     table.addColumn ("Конец периода",             8 , AL_CENTER);
     table.addColumn ("Комиссия",                  5 , AL_CENTER);
     table.printHead ();
   
    while (rs and rs.movenext())
      table.printStringTransferByWord ( rs.value("FILL_DATE") ,
                                        rs.value("OP_TIME") ,
                                        rs.value("ACCOUNT") ,
                                        rs.value("PARTYID") ,
                                        rs.value("SFCONTRID") ,
                                        rs.value("DATEPERIODBEGIN") ,
                                        rs.value("DATEPERIODEND"),
                                        rs.value("COMCODE") );
    end;
    table.printBottom ();
  end;
  
  endaction(0);
 END;
 
 
 
 MACRO RunConnection220_V_VUZ(NeedPrintLog,DateConnection)
 var OperDate, 
     cmd, 
     BTime, 
     ETime, 
     TotalTime, 
     rs, 
     table,
     cnt;

  BTime = time();
  
  begaction(100,"Выполняется подключение ежемесячной комиссии", false);
  
  cmd = RSDCommand( " begin "+
                    "         usr_comiss_vuz_220_v.MassCalculationOfCommissions ( "+
                    "            need_run                  => :m_need_run, "+
                    "            end_date                  => :m_end_date, "+
                    "            comiss_number             => :m_comiss_number, "+
                    "            curdate                   => :m_curdate ); "+
                    " end; ");
                  
  cmd.AddParam("m_need_run",                RSDBP_IN, 0);
  cmd.AddParam("m_end_date",                RSDBP_IN, DateConnection);
  cmd.AddParam("m_comiss_number",           RSDBP_IN, 1068); //2.2.0v
  cmd.AddParam("m_curdate",                 RSDBP_IN, {curdate});
  cmd.execute();
  
  ETime = time();
  TotalTime = Etime - Btime;
  
  if (NeedPrintLog)
    rs = RSDRecordSet(" select count(uac_220_v.ID ) CNT from usr_account_collection_220_v uac_220_v where UAC_220_v.RET_VALUE > 0 ");
    rs.movenext();
    cnt = int(rs.value(0));
  
    println("Время выполнения подключения - " + TotalTime);
    println("Список договоров обслуживания с подключенными комиссиями 2.2.0v");
    println("Количество подключенных ДО - " + string(cnt));

    rs = RSDRecordSet ("   SELECT   TO_CHAR (UAC.FILL_DATE, 'dd.mm.yyyy') FILL_DATE, "+
                       "            UAC.ACCOUNT, "+
                       "            (SELECT   t_code "+
                       "               FROM   dsfcomiss_dbt "+
                       "              WHERE   t_feetype = 1 "+
                       "                      AND t_number = (SELECT   t_commnumber "+
                       "                                        FROM   dsfconcom_dbt "+
                       "                                       WHERE   t_id = uac.comissid)) com, "+
                       "            TO_CHAR (UAC.PARTYID) PARTYID, "+
                       "            TO_CHAR (UAC.SFCONTRID) SFCONTRID, "+
                       "            TO_CHAR (UAC.DATEPERIODBEGIN, 'dd.mm.yyyy') DATEPERIODBEGIN, "+
                       "            TO_CHAR (UAC.DATEPERIODEND, 'dd.mm.yyyy') DATEPERIODEND "+
                       "     FROM   usr_account_collection_220_v uac "+
                       "    WHERE   UAC.RET_VALUE > 0 "+
                       " ORDER BY   COM, UAC.ACCOUNT asc " );
     table = CTableReport();
     table.addColumn ("Дата",           10, AL_LEFT);
     table.addColumn ("Счет клиента",   20, AL_LEFT);
     table.addColumn ("Комиссия",       5,  AL_LEFT);
     table.addColumn ("ID Клиентa",     10, AL_LEFT);
     table.addColumn ("ID Договора",    10, AL_LEFT);
     table.addColumn ("Начало периода", 8,  AL_LEFT);
     table.addColumn ("Конец периода",  8,  AL_LEFT);
     table.printHead ();
   
    while (rs and rs.movenext())
      table.printStringTransferByWord ( rs.value("FILL_DATE") ,
                                        rs.value("ACCOUNT") ,
                                        rs.value("COM") ,
                                        rs.value("PARTYID") ,
                                        rs.value("SFCONTRID") ,
                                        rs.value("DATEPERIODBEGIN") ,
                                        rs.value("DATEPERIODEND")  );
    end;
  
    table.printSeparator ();
    table.printBottom ();
  
  end;
  
  endaction(0);
 END;
 
 MACRO RunConnection221_222VUZ(NeedPrintLog,DateConnection)
 var OperDate, 
     cmd, 
     BTime, 
     ETime, 
     TotalTime, 
     rs, 
     table,
     cnt;

  BTime = time();
  
  begaction(100,"Выполняется подключение ежемесячной комиссии", false);
  
  cmd = RSDCommand( " begin "+
                    "         usr_comiss_vuz_221_222.MassCalculationOfCommissions ( "+
                    "            need_run                  => :m_need_run, "+
                    "            end_date                  => :m_end_date, "+
                    "            month_comiss_number_221   => :m_month_comiss_number_221, "+
                    "            month_comiss_number_222   => :m_month_comiss_number_222, "+
                    "            year_comiss_number_2231   => :m_year_comiss_number_2231, "+
                    "            year_comiss_number_2232   => :m_year_comiss_number_2232, "+
                    "            curdate                   => :m_curdate, "+
                    "            p_user_field              => :m_user_field ); "+
                    " end; ");
                  
  cmd.AddParam("m_need_run",                RSDBP_IN, 0);
  cmd.AddParam("m_end_date",                RSDBP_IN, DateConnection);
  cmd.AddParam("m_month_comiss_number_221", RSDBP_IN, 1002); //2.2.1
  cmd.AddParam("m_month_comiss_number_222", RSDBP_IN, 1060); //2.2.2
  cmd.AddParam("m_year_comiss_number_2231", RSDBP_IN, 1071); //2.2.3.1
  cmd.AddParam("m_year_comiss_number_2232", RSDBP_IN, 1072); //2.2.3.2
  cmd.AddParam("m_curdate",                 RSDBP_IN, {curdate});
  cmd.AddParam("m_user_field",              RSDBP_IN, "Ё");  //Клиент-банк(пока не используется)
  cmd.execute();
  
  ETime = time();
  TotalTime = Etime - Btime;
  
  if (NeedPrintLog)
    rs = RSDRecordSet(" select count(uac221_222.ID ) CNT from usr_account_collection_221_222 uac221_222, dsfconcom_dbt com where UAC221_222.RET_VALUE > 0 AND com.t_id = uac221_222.comissid AND com.t_status = 0");
    rs.movenext();
    cnt = int(rs.value(0));
  
    println("Время выполнения подключения - " + TotalTime);
    println("Список договоров обслуживания с подключенными комиссиями 2.2.1\\2.2.2");
    println("Количество подключенных ДО - " + string(cnt));

    rs = RSDRecordSet ("   SELECT   TO_CHAR (UAC.FILL_DATE, 'dd.mm.yyyy') FILL_DATE, "+
                       "            UAC.ACCOUNT, "+
                       "            (SELECT   t_code "+
                       "               FROM   dsfcomiss_dbt "+
                       "              WHERE   t_feetype = 1 "+
                       "                      AND t_number = (SELECT   t_commnumber "+
                       "                                        FROM   dsfconcom_dbt "+
                       "                                       WHERE   t_id = uac.comissid)) com, "+
                       "            TO_CHAR (UAC.PARTYID) PARTYID, "+
                       "            TO_CHAR (UAC.SFCONTRID) SFCONTRID, "+
                       "            TO_CHAR (UAC.DATEPERIODBEGIN, 'dd.mm.yyyy') DATEPERIODBEGIN, "+
                       "            TO_CHAR (UAC.DATEPERIODEND, 'dd.mm.yyyy') DATEPERIODEND "+
                       "     FROM   usr_account_collection_221_222 uac, dsfconcom_dbt com "+
                       "    WHERE   UAC.RET_VALUE > 0 "+
                       "      AND   com.t_id = uac.comissid "+
                       "      AND   com.t_status = 0 "+
                       " ORDER BY   COM, UAC.ACCOUNT asc " );
     table = CTableReport();
     table.addColumn ("Дата",           10, AL_LEFT);
     table.addColumn ("Счет клиента",   20, AL_LEFT);
     table.addColumn ("Комиссия",       5,  AL_LEFT);
     table.addColumn ("ID Клиентa",     10, AL_LEFT);
     table.addColumn ("ID Договора",    10, AL_LEFT);
     table.addColumn ("Начало периода", 8,  AL_LEFT);
     table.addColumn ("Конец периода",  8,  AL_LEFT);
     table.printHead ();
   
    while (rs and rs.movenext())
      table.printStringTransferByWord ( rs.value("FILL_DATE") ,
                                        rs.value("ACCOUNT") ,
                                        rs.value("COM") ,
                                        rs.value("PARTYID") ,
                                        rs.value("SFCONTRID") ,
                                        rs.value("DATEPERIODBEGIN") ,
                                        rs.value("DATEPERIODEND")  );
    end;
  
    table.printSeparator ();
    table.printBottom ();
  
  end;
  
  endaction(0);
 END;
 
 MACRO RunConnection2211VUZ(NeedPrintLog,DateConnection)
 var OperDate, 
     cmd, 
     BTime, 
     ETime, 
     TotalTime, 
     rs, 
     table,
     cnt;

  BTime = time();
  
  begaction(100,"Выполняется подключение ежемесячной комиссии", false);
  
  cmd = RSDCommand( " begin "+
                    "         usr_comiss_vuz_2211.MassCalculationOfCommissions ( "+
                    "            need_run                  => :m_need_run, "+
                    "            end_date                  => :m_end_date, "+
                    "            comiss_number             => :m_comiss_number, "+
                    "            curdate                   => :m_curdate); "+
                    " end; ");
                  
  cmd.AddParam("m_need_run",         RSDBP_IN, 0);
  cmd.AddParam("m_end_date",         RSDBP_IN, DateConnection);
  cmd.AddParam("comiss_number",      RSDBP_IN, 1070); //2.21.1
  cmd.AddParam("m_curdate",          RSDBP_IN, {curdate});
  cmd.execute();
  
  ETime = time();
  TotalTime = Etime - Btime;
  
  if (NeedPrintLog)
    rs = RSDRecordSet(" select count(uac2211.ID ) CNT from usr_account_collection_2211 uac2211 where UAC2211.RET_VALUE > 0 ");
    rs.movenext();
    cnt = int(rs.value(0));
  
    println("Время выполнения подключения - " + TotalTime);
    println("Список договоров обслуживания с подключенными комиссиями 2.21.1");
    println("Количество подключенных ДО - " + string(cnt));

    rs = RSDRecordSet ("   SELECT   TO_CHAR (UAC.FILL_DATE, 'dd.mm.yyyy') FILL_DATE, "+
                       "            UAC.ACCOUNT, "+
                       "            (SELECT   t_code "+
                       "               FROM   dsfcomiss_dbt "+
                       "              WHERE   t_feetype = 1 "+
                       "                      AND t_number = (SELECT   t_commnumber "+
                       "                                        FROM   dsfconcom_dbt "+
                       "                                       WHERE   t_id = uac.comissid)) com, "+
                       "            TO_CHAR (UAC.PARTYID) PARTYID, "+
                       "            TO_CHAR (UAC.SFCONTRID) SFCONTRID, "+
                       "            TO_CHAR (UAC.DATEPERIODBEGIN, 'dd.mm.yyyy') DATEPERIODBEGIN, "+
                       "            TO_CHAR (UAC.DATEPERIODEND, 'dd.mm.yyyy') DATEPERIODEND "+
                       "     FROM   usr_account_collection_2211 uac "+
                       "    WHERE   UAC.RET_VALUE > 0 "+
                       " ORDER BY   COM, UAC.ACCOUNT asc " );
     table = CTableReport();
     table.addColumn ("Дата",           10, AL_LEFT);
     table.addColumn ("Счет клиента",   20, AL_LEFT);
     table.addColumn ("Комиссия",       5,  AL_LEFT);
     table.addColumn ("ID Клиентa",     10, AL_LEFT);
     table.addColumn ("ID Договора",    10, AL_LEFT);
     table.addColumn ("Начало периода", 8,  AL_LEFT);
     table.addColumn ("Конец периода",  8,  AL_LEFT);
     table.printHead ();
   
    while (rs and rs.movenext())
      table.printStringTransferByWord ( rs.value("FILL_DATE") ,
                                        rs.value("ACCOUNT") ,
                                        rs.value("COM") ,
                                        rs.value("PARTYID") ,
                                        rs.value("SFCONTRID") ,
                                        rs.value("DATEPERIODBEGIN") ,
                                        rs.value("DATEPERIODEND")  );
    end;
  
    table.printSeparator ();
    table.printBottom ();
  
  end;
  
  endaction(0);
 END;
 
 MACRO RunConnection220PRBB(NeedPrintLog,DateConnection)
  var OperDate, 
      cmd, 
      BTime, 
      ETime, 
      TotalTime, 
      rs, 
      table,
      cnt;
   debugbreak;
   BTime = time();
  
   begaction(100,"Выполняется подключение ежемесячной комиссии", false);
  
   cmd = RSDCommand( " begin "+
                     "      usr_comiss_prbb_220.MassCalculationOfCommissions (need_run             => :m_need_run, "+
                     "                                                        end_date             => :m_end_date, "+
                     "                                                        month_comiss_number  => :m_month_comiss_number, "+
                     "                                                        year_comiss_number   => :m_year_comiss_number, "+
                     "                                                        curdate              => :m_curdate ); "+
                     " end; ");
                  
   cmd.AddParam("m_need_run",            RSDBP_IN, 0);
   cmd.AddParam("m_end_date",            RSDBP_IN, DateConnection);
   cmd.AddParam("m_month_comiss_number", RSDBP_IN, 1002);
   cmd.AddParam("m_year_comiss_number",  RSDBP_IN, 1073);
   cmd.AddParam("m_curdate",             RSDBP_IN, {curdate});
   cmd.execute();
  
   if(NeedPrintLog)
  
     ETime = time();
     TotalTime = Etime - Btime;
  
     rs = RSDRecordSet(" select count(UAC220.ID ) CNT from usr_account_collection_220 uac220 where UAC220.RET_VALUE > 0 ");
     rs.movenext();
     cnt = int(rs.value(0));
  
     println("Время выполнения подключения - " + TotalTime);
     println("Список договоров обслуживания с подключенной комиссией 2.2.0");
     println("Количество подключенных ДО - " + string(cnt));

  
     rs = RSDRecordSet (" SELECT   to_char(UAC.FILL_DATE, 'dd.mm.yyyy') FILL_DATE, " +
                        "          UAC.ACCOUNT, " +
                        "          to_char(UAC.PARTYID) PARTYID, " +
                        "          to_char(UAC.SFCONTRID) SFCONTRID, " +
                        "          to_char(UAC.DATEPERIODBEGIN, 'dd.mm.yyyy') DATEPERIODBEGIN, " +
                        "          to_char(UAC.DATEPERIODEND, 'dd.mm.yyyy') DATEPERIODEND " +
                        "   FROM   usr_account_collection_220 uac " +
                        "  WHERE   UAC.RET_VALUE > 0 order by UAC.ACCOUNT " );
     table = CTableReport();
     table.addColumn ("Дата",           10, AL_LEFT);
     table.addColumn ("Счет клиента",   20, AL_LEFT);
     table.addColumn ("ID Клиентa",     10, AL_LEFT);
     table.addColumn ("ID Договора",    10, AL_LEFT);
     table.addColumn ("Начало периода", 8, AL_LEFT);
     table.addColumn ("Конец периода",  8, AL_LEFT);
     table.printHead ();
   
     while (rs and rs.movenext())
       table.printStringTransferByWord ( rs.value("FILL_DATE") ,
                                         rs.value("ACCOUNT") ,
                                         rs.value("PARTYID") ,
                                         rs.value("SFCONTRID") ,
                                         rs.value("DATEPERIODBEGIN") ,
                                         rs.value("DATEPERIODEND")  );
     end;
  
     table.printSeparator ();
     table.printBottom ();
    
   end;
  
   endaction(0);
 END;
 
  // joy 18.08.2014 Для подключения сразу массива комиссий по самому раннему ДО (адаптация C-31392)
  MACRO TurnSfconcomOnEtcArr( Account, Fiid, CommID, OperD )
    var ind = 0,
    ComNumberClause = "";
    private var Bank = fg_life_subject( {OurBank} );

   while( ind < CommID.Size() )
      if ( ind > 0 )
         ComNumberClause = ComNumberClause + ", ";
      end;
      ComNumberClause = ComNumberClause + string( CommID(ind) );

      ind = ind + 1;
   end;
   SQL = " UPDATE   dsfconcom_dbt con1 ";
   SQL = SQL + "   SET   t_status = 0 ";
   SQL = SQL + " WHERE   con1.t_objecttype = 659 ";
   SQL = SQL + "         AND con1.t_objectid = ";
   SQL = SQL + "               (SELECT   min(t_id) ";
   SQL = SQL + "                  FROM   dsfcontr_dbt, daccount_dbt";
   SQL = SQL + "                 WHERE       t_objecttype = 1 ";
   SQL = SQL + "                         AND t_servkind = 3 ";
   SQL = SQL + "                         AND t_fiid = 0 ";     // 08.12.2014 joy R-501727  отбираем только рублевые счета
   SQL = SQL + "                         AND t_open_close != 'З' ";     // 11.12.2014 joy R-511633-   отбираем только открытые счета
   SQL = SQL + "                         AND (t_dateclose >= ? or t_dateclose = to_date('01.01.0001', 'dd.mm.yyyy') ) ";   
   SQL = SQL + "                         AND T_PARTYID = (SELECT T_CLIENT FROM DACCOUNT_DBT WHERE T_ACCOUNT = ? and T_CODE_CURRENCY = ?) "; 
   SQL = SQL + "                         and t_object = t_account ";
   SQL = SQL + "                         and (SUBSTR (T_OBJECT, 1, 3) BETWEEN '405' AND '407'";       // 08.12.2014 joy R-496884-2
   SQL = SQL + "                              or (SUBSTR (T_OBJECT, 1, 5) IN ('40802', '40807'))) " ; 
   SQL = SQL + "                         and  instr (t_usertypeAccount, 'D') = 0  " ; // joy 17.09.2014 R-446709 здесь и ниже проверки, что счет не СКС
   SQL = SQL + "                         and not ( substr (t_account, 11, 1) = '9' and  instr (t_usertypeAccount, 'Н') = 0 ) "; 
     if ( Bank.is_EXV)
         SQL = SQL + "                   and not ( substr (t_account, 12, 1) = '9' and  instr (t_usertypeAccount, 'Н') = 0 ) "; 
     elif (Bank.is_SLD)
         SQL = SQL + "                   and not ( substr (t_account, 14, 1) = '8' and  instr (t_usertypeAccount, 'Н') = 0 )";
     end;
   SQL = SQL + "                )";
   SQL = SQL + "         AND con1.t_feetype = 1 ";
   SQL = SQL + "         AND con1.t_commnumber in (" + ComNumberClause + "  )";
   SQL = SQL + "         AND con1.t_id = ";
   SQL = SQL + "               (SELECT   MAX (con2.t_id) ";
   SQL = SQL + "                  FROM   dsfconcom_dbt con2 ";
   SQL = SQL + "                 WHERE       con2.t_objecttype = con1.t_objecttype ";
   SQL = SQL + "                         AND con2.t_objectid = con1.t_objectid ";
   SQL = SQL + "                         AND con2.t_feetype = con1.t_feetype ";
   SQL = SQL + "                         AND con2.t_commnumber = con1.t_commnumber) ";
   SQL = SQL + "         AND CON1.T_SFPLANID = "                                      ;
   SQL = SQL + "              (SELECT   t_sfplanid "                                  ;
   SQL = SQL + "                 FROM   dsfcontrplan_dbt "                            ;
   SQL = SQL + "                WHERE   t_begin = (SELECT   MAX (t_begin) "           ;
   SQL = SQL + "                                     FROM   dsfcontrplan_dbt "        ;
   SQL = SQL + "                                    WHERE   t_sfcontrid = CON1.T_OBJECTID) " ;
   SQL = SQL + "                  AND t_sfcontrid = CON1.T_OBJECTID) " ;
   
   cmd = rsdcommand( SQL );
   cmd.AddParam( "", RSDBP_IN, OperD );
   cmd.AddParam( "", RSDBP_IN, Account );
   cmd.AddParam( "", RSDBP_IN, Fiid );
   
   cmd.Execute;

 END;
 
  // joy 18.08.2014 Подключение комиссий за плетжи в пользу ФЛ (адаптация C-31392)
 MACRO Run_Connection_Com_To_Phys (OperDate, ComissN, codes, NeedPrintLog)
 debugbreak;
   private var Comiss,
              SQL, cmd, accountON,
              request,
              err,
              ProcName,
              indMessage,
              LifeBank = fg_life_subject( {OurBank} ),
              Temparr  =  TArray();
              
class TempCom(t_account, t_code_currency, comid, comminfo)
  var account    = t_account;
  var fiid       = t_code_currency;
  var comidr     = comid;
 end;
  
     var ComissPRBB = TArray();
     if (LifeBank.is_PRBB() or LifeBank.is_GO())
         if (ComissN == 3100)
           ComissPRBB(0) = 1152;         // 3.10.1
           ComissPRBB(1) = 1153;         // 3.10.2
           ComissPRBB(2) = 1154;         // 3.10.3
           ComissPRBB(3) = 1155;         // 3.10.4
           ComissPRBB(4) = 1156;         // 3.10.5
           ComissPRBB(5) = 1157;         // 3.10.6
           ComissPRBB(6) = 1158;         // 3.10.7
         elif (ComissN == 390)
           ComissPRBB(0) = 1159;         // 3.9.1
           ComissPRBB(1) = 1160;         // 3.9.2
           ComissPRBB(2) = 1161;         // 3.9.3
           ComissPRBB(3) = 1162;         // 3.9.4
           ComissPRBB(4) = 1163;         // 3.9.5
           ComissPRBB(5) = 1164;         // 3.9.6
           ComissPRBB(6) = 1165;         // 3.9.7
         end;
     elif (LifeBank.is_GEB())
         if (ComissN == 3100)
           ComissPRBB(0) = 1143;         // 3.10.1
           ComissPRBB(1) = 1144;         // 3.10.2
           ComissPRBB(2) = 1145;         // 3.10.3
           ComissPRBB(3) = 1146;         // 3.10.4
           ComissPRBB(4) = 1147;         // 3.10.5
           ComissPRBB(5) = 1148;         // 3.10.6
           ComissPRBB(6) = 1149;         // 3.10.7
         elif (ComissN == 390)             
           ComissPRBB(0) = 1150;         // 3.9.1
           ComissPRBB(1) = 1151;         // 3.9.2
           ComissPRBB(2) = 1152;         // 3.9.3
           ComissPRBB(3) = 1153;         // 3.9.4
           ComissPRBB(4) = 1154;         // 3.9.5
           ComissPRBB(5) = 1155;         // 3.9.6
           ComissPRBB(6) = 1156;         // 3.9.7
         end;
     elif (LifeBank.is_SLD())
         if (ComissN == 3100)
           ComissPRBB(0) = 1164;         // 3.10.1
           ComissPRBB(1) = 1165;         // 3.10.2
           ComissPRBB(2) = 1166;         // 3.10.3
           ComissPRBB(3) = 1167;         // 3.10.4
           ComissPRBB(4) = 1168;         // 3.10.5
           ComissPRBB(5) = 1169;         // 3.10.6
           ComissPRBB(6) = 1170;         // 3.10.7
         elif (ComissN == 390)             
           ComissPRBB(0) = 1171;         // 3.9.1
           ComissPRBB(1) = 1172;         // 3.9.2
           ComissPRBB(2) = 1173;         // 3.9.3
           ComissPRBB(3) = 1174;         // 3.9.4
           ComissPRBB(4) = 1175;         // 3.9.5
           ComissPRBB(5) = 1176;         // 3.9.6
           ComissPRBB(6) = 1177;         // 3.9.7
         end;
     elif (LifeBank.is_VUZ()) // 28.05.2015 joy C-40210 добавлен ВУЗ
           if (ComissN == 390)             
           ComissPRBB(0) = 1138;         // 3.9.1
           ComissPRBB(1) = 1121;         // 3.9.2
           ComissPRBB(2) = 1122;         // 3.9.3
           ComissPRBB(3) = 1123;         // 3.9.4
           ComissPRBB(4) = 1124;         // 3.9.5
           ComissPRBB(5) = 1125;         // 3.9.6
           ComissPRBB(6) = 1126;         // 3.9.7
         end;
     elif (LifeBank.is_EXV())
        if (LifeBank.is_EXV_Voronezh () or LifeBank.is_EXV_Volgograd () )
            if (ComissN == 3100)
               ComissPRBB(0) = 1126;         // 3.10.1
               ComissPRBB(1) = 1127;         // 3.10.2
               ComissPRBB(2) = 1128;         // 3.10.3
               ComissPRBB(3) = 1129;         // 3.10.4
               ComissPRBB(4) = 1130;         // 3.10.5
               ComissPRBB(5) = 1131;         // 3.10.6
               ComissPRBB(6) = 1132;         // 3.10.7
             elif (ComissN == 390)             
               ComissPRBB(0) = 1119;         // 3.9.1
               ComissPRBB(1) = 1120;         // 3.9.2
               ComissPRBB(2) = 1121;         // 3.9.3
               ComissPRBB(3) = 1122;         // 3.9.4
               ComissPRBB(4) = 1123;         // 3.9.5
               ComissPRBB(5) = 1124;         // 3.9.6
               ComissPRBB(6) = 1125;         // 3.9.7
             elif (ComissN == 323)
                ComissPRBB(0) = 1135;         // 3.2.3
             elif (ComissN == 3410)
                ComissPRBB(0) = 1134;         // 3.4.10
             end;
        elif (LifeBank.is_EXV_Stavropol () )
             if (ComissN == 3100)
               ComissPRBB(0) = 1123;         // 3.10.1
               ComissPRBB(1) = 1124;         // 3.10.2
               ComissPRBB(2) = 1125;         // 3.10.3
               ComissPRBB(3) = 1126;         // 3.10.4
               ComissPRBB(4) = 1127;         // 3.10.5
               ComissPRBB(5) = 1128;         // 3.10.6
               ComissPRBB(6) = 1129;         // 3.10.7
             elif (ComissN == 390)             
               ComissPRBB(0) = 1116;         // 3.9.1
               ComissPRBB(1) = 1117;         // 3.9.2
               ComissPRBB(2) = 1118;         // 3.9.3
               ComissPRBB(3) = 1119;         // 3.9.4
               ComissPRBB(4) = 1120;         // 3.9.5
               ComissPRBB(5) = 1121;         // 3.9.6
               ComissPRBB(6) = 1122;         // 3.9.7
             elif (ComissN == 323)
                ComissPRBB(0) = 1132;         // 3.2.3
             elif (ComissN == 3410)
                ComissPRBB(0) = 1131;         // 3.4.10
             end;
        else
             if (ComissN == 3100)
               ComissPRBB(0) = 1127;         // 3.10.1
               ComissPRBB(1) = 1128;         // 3.10.2
               ComissPRBB(2) = 1129;         // 3.10.3
               ComissPRBB(3) = 1130;         // 3.10.4
               ComissPRBB(4) = 1131;         // 3.10.5
               ComissPRBB(5) = 1132;         // 3.10.6
               ComissPRBB(6) = 1133;         // 3.10.7
             elif (ComissN == 390)             
               ComissPRBB(0) = 1120;         // 3.9.1
               ComissPRBB(1) = 1121;         // 3.9.2
               ComissPRBB(2) = 1122;         // 3.9.3
               ComissPRBB(3) = 1123;         // 3.9.4
               ComissPRBB(4) = 1124;         // 3.9.5
               ComissPRBB(5) = 1125;         // 3.9.6
               ComissPRBB(6) = 1126;         // 3.9.7
              elif (ComissN == 323)
                ComissPRBB(0) = 1136;         // 3.2.3
             elif (ComissN == 3410)
                ComissPRBB(0) = 1135;         // 3.4.10
             end;
        end;
     end;

    //Вызываем процедуру которая отключит все комиссии из массива по всему банку.
    TurnAllSfconcomOff(ComissPRBB); 
    var i = 0;
    var j = 0;
    if (ComissN == 3100)
        request  = GetComToPhisFacesRecordSet_new( null,  OperDate, OperDate, true, false, false );
        while (request and request.movenext())
                TempArr(i) = TempCom( request.value(0), request.value(1), ComissPRBB() );
                i = i + 1;
        end;
    elif (ComissN == 390)
        request  = GetComToPhisFacesRecordSet_new( null,  OperDate, OperDate, false, false, false );
        while (request and request.movenext())
                TempArr(i) = TempCom( request.value(0), request.value(1), ComissPRBB() );
                i = i + 1;
          end;
    elif (ComissN == 323)
        request  = GetComToPhisFacesRecordSet_new( null,  OperDate, OperDate, true, false, true );
        while (request and request.movenext())
                TempArr(i) = TempCom( request.value(0), request.value(1), ComissPRBB() );
                i = i + 1;
    end;
    elif (ComissN == 3410)
        request  = GetComToPhisFacesRecordSet_new( null,  OperDate, OperDate, false, false, true );
        while (request and request.movenext())
                TempArr(i) = TempCom( request.value(0), request.value(1), ComissPRBB() );
                i = i + 1;
        end;
    end;
    

    if (NeedPrintLog)
      println ("Счета, по которым были платежи, подходящие под условия взимания комиссии "+codes+" за "+OperDate+"\nПроверьте корректность выполнения процедуры подключения.");
    end;
    i = 0;
    InitProgress( -1, "Ждите...","Идет выборка платежей для обработки ");
    while (i <= ((Temparr.Size) - 1) ) 
        //Вызываем процедуру включения комиссии по тем ДО с которых она должна списыватся.
        TurnSfconcomOnEtcArr( Temparr(i).account, Temparr(i).fiid, Temparr(i).comidr, OperDate);
        SQL =       " select t_object from dsfcontr_dbt where t_id = (";
        SQL = SQL + "               SELECT   min(t_id) ";
        SQL = SQL + "                  FROM   dsfcontr_dbt, daccount_dbt";
        SQL = SQL + "                 WHERE       t_objecttype = 1 ";
        SQL = SQL + "                         AND t_servkind = 3 ";
        SQL = SQL + "                         AND t_fiid = 0 ";     
        SQL = SQL + "                         AND t_open_close != 'З' ";     // 11.12.2014 joy R-511633-   отбираем только открытые счета
        SQL = SQL + "                         AND (t_dateclose >= ? or t_dateclose = to_date('01.01.0001', 'dd.mm.yyyy') ) ";   
        SQL = SQL + "                         AND T_PARTYID = (SELECT T_CLIENT FROM DACCOUNT_DBT WHERE T_ACCOUNT = ? and T_CODE_CURRENCY = ?) "; 
        SQL = SQL + "                         and t_object = t_account ";
        SQL = SQL + "                         and (SUBSTR (T_OBJECT, 1, 3) BETWEEN '405' AND '407'";       // 08.12.2014 joy R-496884-2
        SQL = SQL + "                              or (SUBSTR (T_OBJECT, 1, 5) IN ('40802', '40807'))) " ; 
        SQL = SQL + "                         and  instr (t_usertypeAccount, 'D') = 0  " ; // joy 17.09.2014 R-446709 здесь и ниже проверки, что счет не СКС
        SQL = SQL + "                         and not ( substr (t_account, 11, 1) = '9' and  instr (t_usertypeAccount, 'Н') = 0 ) "; 
        if ( LifeBank.is_EXV)
            SQL = SQL + "                   and not ( substr (t_account, 12, 1) = '9' and  instr (t_usertypeAccount, 'Н') = 0 ) "; 
        elif (LifeBank.is_SLD)
            SQL = SQL + "                   and not ( substr (t_account, 14, 1) = '8' and  instr (t_usertypeAccount, 'Н') = 0 )";
        end;
        SQL = SQL + "                )";
 
        cmd = rsdcommand( SQL );
        cmd.AddParam( "", RSDBP_IN, OperDate );
        cmd.AddParam( "", RSDBP_IN, Temparr(i).account );
        cmd.AddParam( "", RSDBP_IN, Temparr(i).fiid );
        rs = rsdRecordSet( cmd );
        
        if (rs and rs.movenext)
            accountON = rs.Value(0);
        else
            accountON = " ДО не найден ";
        end;
        
        if (NeedPrintLog)
          println (Temparr(i).account + "  Подключено на: " + accountON );
        end;
        i = i + 1;
        UseProgress(i);
    end;
 RemProgress();
 
 
 END;
 
 MACRO RunConnection220EXV(NeedPrintLog, DateConnection)
 
 private var LifeBank = fg_life_subject( {OurBank} );
 var OperDate, 
     cmd, 
     BTime, 
     ETime, 
     TotalTime, 
     rs, 
     table,
     cnt,
     comiss_number_220,
     comiss_number_221,
     Is_EXV_Voronezh = 1;

  BTime = time();
  debugbreak;
  if (Lifebank.is_EXV_Voronezh)
    Is_EXV_Voronezh = 0;
  end;
  
  begaction(100,"Выполняется подключение ежемесячной комиссии", false);
  
  rs = RSDRecordSet("  SELECT   (SELECT   t_number " +
                    "    FROM   dsfcomiss_dbt " +
                    "   WHERE   t_feetype = 1 AND t_code = '2.2.0') as c220, " +
                    " (SELECT   t_number " +
                    "    FROM   dsfcomiss_dbt " +
                    "   WHERE   t_feetype = 1 AND t_code = '2.2.1') as c221 " +
                    "    FROM   DUAL ");
  rs.movenext();
  
  comiss_number_220 = rs.value("c220");
  comiss_number_221 = rs.value("c221");
  
  cmd = RSDCommand( " begin "+
                    "      usr_comiss_exv_220.MassCalculationOfCommissions (need_run             => :m_need_run, "+
                    "                                                       end_date             => :m_end_date, "+
                    "                                                       month_comiss_number  => :m_month_comiss_number, "+
                    "                                                       year_comiss_number   => :m_year_comiss_number, "+
                    "                                                       p_is_exv_voronezh    => :m_is_exv_voronezh ); "+
                    " end; ");
                  
  cmd.AddParam("m_need_run",            RSDBP_IN, 0);
  cmd.AddParam("m_end_date",            RSDBP_IN, DateConnection);
  cmd.AddParam("m_month_comiss_number", RSDBP_IN, comiss_number_220);
  cmd.AddParam("m_year_comiss_number",  RSDBP_IN, comiss_number_221);
  cmd.AddParam("m_is_exv_voronezh",     RSDBP_IN, Is_EXV_Voronezh);
  cmd.execute();
  
  ETime = time();
  TotalTime = Etime - Btime;
  
  rs = RSDRecordSet(" select count(UAC220.ID ) CNT from usr_account_collection_220 uac220 where UAC220.RET_VALUE > 0 ");
  rs.movenext();
  cnt = int(rs.value(0));
  
  println("Время выполнения подключения - " + TotalTime);
  println("Список договоров обслуживания с подключенной комиссией 2.2.0");
  println("Количество подключенных ДО - " + string(cnt));

  rs = RSDRecordSet (" SELECT   to_char(UAC.FILL_DATE, 'dd.mm.yyyy') FILL_DATE, " +
                     "          UAC.ACCOUNT, " +
                     "          to_char(UAC.PARTYID) PARTYID, " +
                     "          to_char(UAC.SFCONTRID) SFCONTRID, " +
                     "          to_char(UAC.DATEPERIODBEGIN, 'dd.mm.yyyy') DATEPERIODBEGIN, " +
                     "          to_char(UAC.DATEPERIODEND, 'dd.mm.yyyy') DATEPERIODEND " +
                     "   FROM   usr_account_collection_220 uac " +
                     "  WHERE   UAC.RET_VALUE > 0 order by UAC.ACCOUNT " );
   table = CTableReport();
   table.addColumn ("Дата",           10, AL_LEFT);
   table.addColumn ("Счет клиента",   20, AL_LEFT);
   table.addColumn ("ID Клиентa",     10, AL_LEFT);
   table.addColumn ("ID Договора",    10, AL_LEFT);
   table.addColumn ("Начало периода", 8,  AL_LEFT);
   table.addColumn ("Конец периода",  8,  AL_LEFT);
   table.printHead ();
   
  while (rs and rs.movenext())
    table.printStringTransferByWord ( rs.value("FILL_DATE") ,
                                      rs.value("ACCOUNT") ,
                                      rs.value("PARTYID") ,
                                      rs.value("SFCONTRID") ,
                                      rs.value("DATEPERIODBEGIN") ,
                                      rs.value("DATEPERIODEND")  );
  end;
  
  table.printSeparator ();
  table.printBottom ();
   
  endaction(0);
 END;
 
 MACRO RunConnection3411_18(DateConnection, NeedPrintLog)
  var OperDate, 
      cmd, 
      BTime, 
      TotalTime, 
      rs, 
      table,
      cnt;
   debugbreak;
   BTime = time();
  
   begaction(100,"Выполняется подключение ежемесячной комиссии", false);
  
   cmd = RSDCommand( " begin "+
                     "  usr_comiss_prbb_3411_18.MassCalculationOfCommissions (need_run             => :m_need_run, "+
                     "                                                        end_date             => :m_end_date, "+
                     "                                                        curdate              => :m_curdate,  "+
                     "                                                        bics                 => :m_bics );   "+
                     " end; ");
                  
   cmd.AddParam("m_need_run",            RSDBP_IN, 0);
   cmd.AddParam("m_end_date",            RSDBP_IN, DateConnection);
   cmd.AddParam("m_curdate",             RSDBP_IN, {curdate});
   cmd.AddParam("m_bics",                RSDBP_IN, getBICsBanks());
   cmd.execute();
  
   TotalTime = time() - BTime;
  
  if (NeedPrintLog)
 
    println("Время выполнения подключения - " + TotalTime);
    println("Список договоров обслуживания с подключенными комиссиями");

    rs = RSDRecordSet ("     SELECT   to_char(UAC.FILL_DATE, 'dd.mm.yyyy') FILL_DATE, " +
                       "              UAC.ACCOUNT, " +
                       "              (SELECT   T_CODE " +
                       "                 FROM   DSFCOMISS_DBT " +
                       "                WHERE   T_FEETYPE = 1 AND T_NUMBER = UAC.COMISSNUMBER) COM, " +
                       "              to_char(UAC.VALUEDATE, 'dd.mm.yyyy') DATEPERIODEND " +
                       "       FROM   USR_ACCOUNT_COLLECTION_3411_18 UAC " +
                       "       WHERE  UAC.RET_VALUE > 0 " +
                       "   ORDER BY   COM, UAC.ACCOUNT ASC " );
     table = CTableReport();
     table.addColumn ("Дата подключения", 16, AL_LEFT);
     table.addColumn ("Счет клиента",     20, AL_LEFT);
     table.addColumn ("Комиссия",         5,  AL_LEFT);
     table.addColumn ("Начало периода",   8,  AL_LEFT);
     table.addColumn ("Конец периода",    8,  AL_LEFT);
     table.printHead ();
   
    while (rs and rs.movenext())
      table.printStringTransferByWord ( rs.value("FILL_DATE") ,
                                        rs.value("ACCOUNT") ,
                                        rs.value("COM") ,
                                        rs.value("DATEPERIODEND") ,
                                        rs.value("DATEPERIODEND")  );
    end;
  
    table.printSeparator ();
    table.printBottom ();
  
  end;
  
  
   endaction(0);
 END;