/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Макрос пользовательского алгоритма расчёта базовых сумм комиссии 2.14.0
       "Абонентская плата за поддержание лимита по овердрафту".

       Тип комиссии - периодическая.
       
   ChangeLog:

   //RR 20.02.2014 Адаптирую под 2031(daccount$_dbt -> NULL)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, cb_sql;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );



/*
    Расчет для периодических комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/ )

    record sfcontr( sfcontr );
    var query, rs, stat;
    var wasOperated = false,
        CommQuont   = 0;


    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;

    query = " Select t_Account from DAccount_dbt " +
            "  Where t_Chapter       = 1 " +
            "    and t_Code_currency = " + sfcontr.FIID+
            "    and t_Client        = " + sfcontr.PartyID +
            "    and t_Balance      in ('45201', '45401') ";

    rs = rsdRecordSet(query);
    while (rs and rs.moveNext() and not wasOperated)

       if ( DebetA( rs.Value(0, null, V_STRING), BeginDate, EndDate) > $0)
          wasOperated = true;
       end;

    end;

    /* Т.к. комиссия взимается как фиксированная сумма за факт наличия оборотов 
       по счетам овердрафта, просто делаем возвращаемое количество равным 1. */
    if (wasOperated)
       CommQuont = 1;
    end;
    

    /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommQuont > 0)
          return true;
       end;
       return false;
    end;

    ClearRecord(sfbassum);

    sfbassum.baseType = SF_BASETYPE_QUONT;
    sfbassum.baseQuont  = CommQuont;

    sfbassum.baseType2 = SF_BASETYPE_QUONT;
    sfbassum.baseQuont2  = CommQuont;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/
