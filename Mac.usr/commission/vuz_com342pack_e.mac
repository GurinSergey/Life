/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Банк ВУЗ

       Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.4.2pack
       "Прочие платежи в пользу клиентов (юр. лиц,ИП,физ.лиц в рамках зарплатных 
        проектов, подтвержденных договором) других банков, принятые с 16-00 до 
        18-00 на бумажных носителях".

       Тип комиссии - единовременная.

Изменения:
joy 13.12.2013  Жаворонкова Н. С-25038 Исключаем платежи с происхождением "Счета на оплату"

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, cb_sql;
import VuzComLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

record sfbassum( "sfbassum.str" );

/* Допустимые номера пачек для комиссии */
var PackNumber = TArray();
    PackNumber(0) = 306;
    PackNumber(1) = 4306;


/*
    Расчет для единовременных комиссий
*/
macro CalcCommissionSum( docKind/*Тип первички*/, Doc/*Буфер первички*/, sfcalcalusr_addr/*Алгоритм расчета*/, sfcontr_addr /*Договор обслуживания*/, beginDate, endDate  )
    record sfclusr( "sfclusr.str" );
    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    record payord(pspayord);

    SetBuff( sfcalcal, sfcalcalusr_addr );
    SetBuff( sfcontr, sfcontr_addr );
    SetBuff( payord, Doc );

    var TarifValue = 0, MinValue = 0, MaxValue = 0, TarifType = 0;

    var stat;
    var CommQuont   = 0,
        CommSum     = $0;
    var PaymObj:object;
    var retVal, Attrid, Code, Num;


    PaymObj = RsbPayment( Payord.OrderID );


    /* Проверки из стандартной комиссии 3.4.2 ВУЗ */

    // Платежи внутри банков группы комиссией не облагаются
    if (  not IsPayerBankIdInLifeGroup(PaymObj.ReceiverBankID) )
       /* Только для внешних платежей */
       if ( PaymObj.isExternal )

          if ( ( Payord.Origin != CLB_DocOrigin )  and ( Payord.Origin != 3201 )    // Не Клиент-Банк и не Счет на оплату
               and
               ( isProperPack( PaymObj.NumberPack, PackNumber ) )
               and (
                      ( ( VUZ_isAccount_Jur( PaymObj.PayerAccount )        // Плательщик - юр. лицо
                          or VUZ_isAccount_IP( PaymObj.PayerAccount ) )    // Плательщик - ИП
                        and
                        ( VUZ_isAccount_Jur( PaymObj.ReceiverAccount )     // Получатель - юр. лицо
                          or VUZ_isAccount_IP( PaymObj.ReceiverAccount ) ) // Получатель - ИП
                      )
                    or
                      ( ( ( VUZ_isAccount_Jur( PaymObj.PayerAccount )                      // Плательщик - юр. лицо
                            or VUZ_isAccount_IP( PaymObj.PayerAccount ) )                  // Плательщик - ИП
                          and VUZ_typeAccount_SalaryProject( PaymObj.PayerAccount )        // Польз. тип счета плательщика содержит Z - зарплатный проект
                        )
                        and
                        ( VUZ_isAccount_Phis( PaymObj.ReceiverAccount )                    // Получатель - физ. лицо
                          or VUZ_isAccount_Incomplete( PaymObj.ReceiverAccount ) )         // Получатель - счёт незавершенных расчётов
                      )
                   )
             )

             /* Проверим, был ли превышен лимит платежей */
             if( VUZ_CheckPaymentsOverLimit( sfcontr, EndDate, EndDate, sfcalcal.FeeType, sfcalcal.CommNumber, @TarifValue, @MinValue, @MaxValue, @TarifType ) )
                // Тариф = Сумма или Сумма за единицу
                if ( ( TarifType == 1 ) or ( TarifType == 3 ) )
                   CommSum = CommSum + TarifValue;
                // Тариф = Процент
                elif ( TarifType == 2 )        
                   CommSum = CommSum + PaymObj.BaseAmount * TarifValue / 100;
                end;
             end;   

          end;
          
       end;
       
    end;
  
    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_SUM;
    sfbassum.baseSum     = CommSum;

    sfbassum.baseType2   = SF_BASETYPE_SUM;
    sfbassum.baseSum2    = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;