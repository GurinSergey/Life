/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Банк ВУЗ

       Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.4.1pack
       "Прочие платежи в пользу клиентов (юр. лиц,ИП,физ. лиц в рамках зарпл.
        проектов, подтвержд. договором)  других  банков, принятые до 16-00 на 
        бумажных носителях".

       Тип комиссии - единовременная.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Изменения:
    13.12.2013 joy Жаворонкова Н. С-25038 Исключаем платежи с происхождением "Счета на оплату"
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, cb_sql;
import VuzComLib;
import lib_packetCommission;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

record sfbassum( "sfbassum.str" );


/* Допустимые номера пачек для комиссии zip_z переписал like python для красоты */
var PackNumber = makeArray (305, 1003, 4003, 4004, 4005, 4006, 4007, 4305, 5003, 7003);


macro CalcCommissionSum( docKind/*Тип первички*/, Doc/*Буфер первички*/, sfcalcalusr_addr/*Алгоритм расчета*/, sfcontr_addr /*Договор обслуживания*/, beginDate, endDate  )
    record sfclusr( "sfclusr.str" );
    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    record payord(pspayord);

    SetBuff( sfcalcal, sfcalcalusr_addr );
    SetBuff( sfcontr, sfcontr_addr );
    SetBuff( payord, Doc );

    var TarifValue = 0, MinValue = 0, MaxValue = 0, TarifType = 0;

    var Stat, CommSum = $0;
    var PaymObj:object;
    

    debugbreak;
    /* Проверки из стандартной комиссии 3.4.1 ВУЗ */

    if (not (isConnectedPacketCommissionOnDate (sfcontr.object, endDate)))
        PaymObj = RsbPayment( Payord.OrderID );
        // #1 Платежи внутри банков группы комиссией не облагаются
        if (  not IsPayerBankIdInLifeGroup(PaymObj.ReceiverBankID) )
            /* #2 Только для внешних платежей,  также исключаются частичные оплаты К2 */
            if ((PaymObj.isExternal) and (PaymObj.ShifrOper != 16 ))
                // #3
                if ( ( Payord.Origin != CLB_DocOrigin ) and ( Payord.Origin != 3201 )   // Не Клиент-Банк и не счет на оплату
                    and ( isProperPack( PaymObj.NumberPack, PackNumber ) )
                    and (
                           ( ( VUZ_isAccount_Jur( PaymObj.PayerAccount )        // Плательщик - юр. лицо
                               or VUZ_isAccount_IP( PaymObj.PayerAccount ) )    // Плательщик - ИП
                             and
                         ( VUZ_isAccount_Jur( PaymObj.ReceiverAccount )     // Получатель - юр. лицо
                           or VUZ_isAccount_IP( PaymObj.ReceiverAccount ) ) // Получатель - ИП
                           )
                     or
                       ( ( ( VUZ_isAccount_Jur( PaymObj.PayerAccount )                      // Плательщик - юр. лицо
                             or VUZ_isAccount_IP( PaymObj.PayerAccount ) )                  // Плательщик - ИП
                           and VUZ_typeAccount_SalaryProject( PaymObj.PayerAccount )        // Польз. тип счета плательщика содержит Z - зарплатный проект
                         )
                         and
                         ( VUZ_isAccount_Phis( PaymObj.ReceiverAccount )                    // Получатель - физ. лицо
                           or VUZ_isAccount_Incomplete( PaymObj.ReceiverAccount ) )         // Получатель - счёт незавершенных расчётов
                       )
                     )
                   )

                    /* Проверим, был ли превышен лимит платежей */
                    if( VUZ_CheckPaymentsOverLimit( sfcontr, EndDate, EndDate, sfcalcal.FeeType, sfcalcal.CommNumber, @TarifValue, @MinValue, @MaxValue, @TarifType ) )
                       // Тариф = Сумма или Сумма за единицу
                       if ( ( TarifType == 1 ) or ( TarifType == 3 ) )
                          CommSum = CommSum + TarifValue;
                       // Тариф = Процент
                       elif ( TarifType == 2 )        
                          CommSum = CommSum + PaymObj.BaseAmount * TarifValue / 100;
                       end;
                    end;   

                end; // #3
            end; // #2
        end; // #1
    end; // #0
    
    ClearRecord(sfbassum);

    sfbassum.baseType = SF_BASETYPE_SUM;
    sfbassum.baseSum  = CommSum;

    sfbassum.baseType2 = SF_BASETYPE_SUM;
    sfbassum.baseSum2  = CommSum;

    if( InsertSumList(sfbassum) )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;

