/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Банк ВУЗ

       Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.2.4
       "Внутренние переводы ИП на счета физ.лиц в объеме до 50 тыс.руб.в месяц,
        принятые по системе "Интернет-клиент"ина бумажных носителях".

       Тип комиссии - единовременная.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, cb_sql;
import VuzComLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

record sfbassum( "sfbassum.str" );

CONST PM_CRITICAL_AMOUNT = $50000;

/*
    Расчет для единовременных комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcCommissionSum( docKind/*Тип первички*/, Doc/*Буфер первички*/, sfcalcalusr_addr/*Алгоритм расчета*/, sfcontr_addr /*Договор обслуживания*/, beginDate, endDate  )
    record sfclusr( "sfclusr.str" );
    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    record payord(pspayord);

    SetBuff( sfcalcal, sfcalcalusr_addr );
    SetBuff( sfcontr, sfcontr_addr );
    SetBuff( payord, Doc );

    var stat;
    var CommQuont   = 0,
        CommSum     = $0;
    var PaymObj:object;

    PaymObj = RsbPayment( Payord.OrderID );


    /* Комиссия взимается и с платежей, поступивших по Клиен-Банк, и с платежей, введённых вручную */

    /* Только для внутренних платежей */
    if ( not PaymObj.isExternal )

       if (  /* Эта комиссия берётся только с ИП.
             ( ( VUZ_isAccount_Jur( PaymObj.PayerAccount )                         // Плательщик - юр. лицо
                 and not VUZ_typeAccount_SalaryProject( PaymObj.PayerAccount ) )   // Польз. тип счета плательщика НЕ содержит Z (зарплатный проект)
               
               and
               ( VUZ_isAccount_Phis( PaymObj.ReceiverAccount )             // Получатель - физ. лицо
                 or
                 ( VUZ_isAccount_Incomplete( PaymObj.ReceiverAccount )     // Получатель - счёт незавершенных расчётов
                   and VUZ_isGround_PhisFace( PaymObj.Ground ) ) )         // Поле "Назначение платежа" содержит номер счёта физлица (40817, 423)
             )

            or */

             ( ( VUZ_isAccount_IP( PaymObj.PayerAccount )                          // Плательщик - инд. предприниматель
                 and not VUZ_typeAccount_SalaryProject( PaymObj.PayerAccount ) )   // Польз. тип счета плательщика НЕ содержит Z (зарплатный проект)
               
               and
               ( VUZ_isAccount_Phis( PaymObj.ReceiverAccount )             // Получатель - физ. лицо
                 or
                 ( VUZ_isAccount_Incomplete( PaymObj.ReceiverAccount )     // Получатель - счёт незавершенных расчётов
                   and VUZ_isGround_PhisFace( PaymObj.Ground ) ) )         // Поле "Назначение платежа" содержит номер счёта физлица (40817, 423)
               
               and ( VUZ_AmountPayments_Phis( PaymObj.PayerAccount, Payord.Origin, endDate ) <= PM_CRITICAL_AMOUNT )    // Объём переводов на счета ФЛ <= 50000
             )

          )

          CommQuont = 1;
       end;

    end;

    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_QUONT;
    sfbassum.baseQuont   = CommQuont;

    sfbassum.baseType2   = SF_BASETYPE_QUONT;
    sfbassum.baseQuont2  = CommQuont;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

