/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   RR Макрос пользовательского алгоритма расчёта базовых сумм комиссии 7.2.2
       "Комиссия за использование системы Интернет Клиент - с использованием в системе USB токенов".

       Тип комиссии - периодическая.
       
       Комиссия должна расчитыватся ровно 12 раз
       
  Changelog:
  
//RR 16.11.2012 Переработал логику определения нужно ли оплачивать комиссию или нет
//joy 02.09.2013 Жаворонкова Н. R-238960 Добавила record по sfcalcal, чтобы получить номер комиссии для каждого банка
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, currinter, fiinter, cb_sql, rsd, Commisslib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
private var ComNumber = 1085; //7.2.2 prbb
record sfbassum( "sfbassum.str" );
record sfcontr( sfcontr );
record sfcalcal (sfcalcal); /*02.09.2013 joy*/

//RR Супер сложный макрос расчета, комиссия списыватся с клиентов у которых статус комиссии "начисляется"
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/, CNumber /*FIV ID комиссии из sfacrpay*/ )
debugbreak;
    var stat;
    var CommQuont = 1;
    var SQL, rs, cmd, i = 0, FirstDayCalc;
    var TempDateArr  =  TArray();
    
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;
    /*02.09.2013 joy Получаем номер комиссии в этом банке*/
    SetBuff( sfcalcal, saddr ); 
    ComNumber = sfcalcal.commnumber; 
    //RR Получаем данные об УПК по данной комиссии
     SQL = "         select DEFF.T_DATEPERIODBEGIN "
          +"\n         from dsfcontr_dbt contr, dsfconcom_dbt com, dsfdefcom_dbt deff "
          +"\n        where contr.t_object = ? "
          +"\n          and contr.t_dateclose = to_date ( '01.01.0001', 'dd.mm.yyyy' ) "
          +"\n          and COM.T_COMMNUMBER = ? "
          +"\n          and COM.T_OBJECTID = CONTR.T_ID "
          +"\n          and COM.T_DATEEND = contr.t_dateclose "
          +"\n          and COM.T_FEETYPE = 1 "
          +"\n          and DEFF.T_CONID = CONTR.T_ID "
          +"\n          and DEFF.T_COMMNUMBER = COM.T_COMMNUMBER "
          +"\n          and DEFF.T_STATUS >= 30 "
          +"\n          ORDER BY 1 asc; " ;
             cmd = rsdcommand(SQL);
             cmd.AddParam("", RSDBP_IN,sfcontr.object);
             cmd.AddParam("", RSDBP_IN,ComNumber);
             rs = rsdRecordSet( cmd );
             while (rs and rs.MoveNext())
              TempDateArr(i) = rs.value(0);
              i = i + 1;
             end;
             
    if (TempDateArr.size >= 12)
       CommQuont = 0;
    end;
   //RR Включаем логику
/*    if  ( TempDateArr.size == 1 )
         DtTmSplit (TempDateArr(0),FirstDayCalc,null); //RR Отрезаем все лишнее
         SQL = "         update dsfconcom_dbt "
               +"\n         set t_dateend    = ( to_date ( '"+FirstDayCalc+"', 'dd.mm.yyyy' ) + 365 ) "
               +"\n        where t_id = "
               +"\n                  ( select com.t_id "
               +"\n                      from dsfcontr_dbt contr, dsfconcom_dbt com"
               +"\n                     where contr.t_object = ? "
               +"\n                       and contr.t_dateclose = to_date ( '01.01.0001', 'dd.mm.yyyy' ) "
               +"\n                       and com.t_commnumber = ? "
               +"\n                       and com.t_objectid = contr.t_id "
               +"\n                       and com.t_dateend = contr.t_dateclose "
               +"\n                      and com.t_feetype = 1 ); ";
                  cmd = rsdcommand(SQL);
                  cmd.AddParam("", RSDBP_IN,sfcontr.object);
                  cmd.AddParam("", RSDBP_IN,ComNumber);
                  cmd.execute();
    end;
    */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommQuont > 0)
          return true;
       end;
       return false;
    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType = SF_BASETYPE_QUONT;
    sfbassum.baseQuont  = CommQuont;

    sfbassum.baseType2 = SF_BASETYPE_QUONT;
    sfbassum.baseQuont2  = CommQuont;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

