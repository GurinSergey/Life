/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Банк "Национальный банк сбережений" (НБС)

       Макрос пользовательского алгоритма расчёта базовых сумм по комиссиям 
       5.5.1 "Прием и зачисление наличных средств на счет клиента
              - в случае внесения средств для оплаты комиссий Банка (купюры)"

       Тип комиссии - единовременная.

   Chesnokov D. По заявке I-095000 исключены из рассчета поступления по 11 символу
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
import sfinter, ptinter;/*InsertSumList*/

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
  record sfbassum( "sfbassum.str" );
  
/* Исключаемый символ*/
const CommCashSymbol = "('11')";

/*
    Расчет для единовременных комиссий
*/
macro CalcCommissionSum( docKind/*Тип первички*/, Doc/*Буфер первички*/, sfcalcalusr_addr/*Алгоритм расчета*/, sfcontr_addr /*Договор обслуживания*/, beginDate, endDate  )
    record sfclusr( "sfclusr.str" );
    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    record pscshdoc(pscshdoc); // Определяем буфер первички

    var stat:integer; 
    var query, rs;
    var CommQuont = 0,
        CommSum   = $0,
        num,
        retVal,
        error;

    SetBuff( sfcalcal, sfcalcalusr_addr );
    SetBuff( sfcontr, sfcontr_addr );
    SetBuff( pscshdoc, Doc ); // Заполняем буфер первички

    // Комиссия по ОВН
    if ( docKind == CASH_PS_INCORDER )

       /* Получим сумму платежа */
       query = " Select paym.t_Amount, paym.t_FIID " +
               "   From DPmPaym_dbt paym, dsymbcash_dbt symb, dpscshdoc_dbt doc " +
               "  Where paym.t_DocKind      = " + docKind +
               "    and paym.t_DocumentID   = " + pscshdoc.Autokey +
               "    and paym.t_DocumentID   = doc.T_autokey " +
               "    and symb.t_ApplicationKey = LPAD (doc.t_autokey, 34, '0') " + // Проводки еще нет, привязываемся к платежу
               "    and symb.t_kind = 1 " +
               "    and symb.t_dockind = decode (doc.t_iscurrency, chr(0), 1, chr(88), 7, 1) " +
               "    and trim(symb.t_Symbol) not in " + CommCashSymbol;
       rs = rsdRecordSet(query);
       /* Только по рублям */
       if (rs.MoveNext())
          if (rs.value(1, null, V_INTEGER) == 0)
             CommSum = rs.value(0, null, V_MONEY);
          end;
       end;

    end;

    ClearRecord(sfbassum);

    sfbassum.baseType  = SF_BASETYPE_SUM;
    sfbassum.baseSum   = CommSum;

    sfbassum.baseType2 = SF_BASETYPE_SUM;
    sfbassum.baseSum2  = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы: ", GetErrMsg );
    end;

    
    
    /*return integer( 1 ); -- количество*/
    
    /*return $1; -- сумма */
    
end;/*CalcCommissionSum*/




/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

