/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Макрос пользовательского алгоритма расчёта базовых сумм комиссии 13.1.2
       "Абонентская плата пакета "Базовый"".

       Тип комиссии - периодическая.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, cb_sql, commisslib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

record sfbassum( "sfbassum.str" );


// Код единовременной кормиссии 13.1.2, исходя из которой рассчитывается данная комиссия
const OprComCode = "13.1.2";



/*
    Расчет для периодических комиссий
*/
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/, sfcalcal_addr/*адрес алгоритма (sfcalcal)*/ )

    record sfcontr( sfcontr );
    record calcal (sfcalcal);

    SetBuff( sfcontr, sfcontr_addr );
    SetBuff( calcal, sfcalcal_addr );

    var query, rs, cmd, stat;
    var CommSum = 0;

    var TarifValue = 0, MinValue = 0, MaxValue = 0, TarifType = 0;
    var paidAmount = $0;

    query = " SELECT NVL( SUM( t_sum ), 0 ) m_paidamount FROM dsfdef_dbt                           "
            "  WHERE t_sfcontrid IN ( SELECT t_id FROM dsfcontr_dbt WHERE t_partyid = :ptid )      "
            "    AND ( t_feetype, t_commnumber ) = ( SELECT t_feetype, t_number FROM dsfcomiss_dbt "
            "                                         WHERE t_feetype = 3 AND t_code = :ccode )    "
            "    AND t_datefee between :begdate                                                    "
            "                      and :enddate                                                    ";
    cmd = rsdCommand( query );
    cmd.AddParam( "ptid",    RSDBP_IN, sfcontr.PartyId );
    cmd.AddParam( "ccode",   RSDBP_IN, OprComCode      );
    cmd.AddParam( "begdate", RSDBP_IN, BeginDate       );
    cmd.AddParam( "enddate", RSDBP_IN, EndDate         );
    rs = rsdRecordSet( cmd );

    if( rs and rs.MoveNext() )
       paidAmount = rs.value ("m_paidamount");
    end;

    /* Комиссия не взимается в случае, если по счетам клиента не было оборотов, по 
       которым взимается единовременная комиссия 13.1.2 */
    if( paidAmount )

       // Получаем значение комиссии + min/max
       GetTarifInfo( sfcontr, EndDate, EndDate, 1, calcal.CommNumber, @TarifValue, @MinValue, @MaxValue, @TarifType );

       // Комиссию считаем в случае, если сумма оплаченных за период единовременных комиссий меньше тарифа по нашей комиссии
       if( paidAmount < TarifValue )
          CommSum = TarifValue - paidAmount;
       end;

    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType = SF_BASETYPE_SUM;
    sfbassum.baseSum  = CommSum;

    sfbassum.baseType2 = SF_BASETYPE_SUM;
    sfbassum.baseSum2  = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

