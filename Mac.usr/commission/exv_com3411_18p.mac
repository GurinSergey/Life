//RR 03.07.2012 Адаптирую под ЭВ
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   FIV Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.4.11-3.4.18
       Тип комиссии - периодическая.
   Chesnokov D. 03.12.2010 г. Исправлен алгоритм взимания комиссии
   теперь комиссия взымается с накопительным итогом.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, cb_sql;
import CommissLib;
import "fg_Life_parm.mac";

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
var fgBank  = fg_life_subject();
    fgBank.ConsrtuctByBic( {MFO_bank} );
var C3411, C3412, C3413, C3414, C3415, C3416, C3417, C3418;
    
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );
record paym(pmpaym);

/*Константы граничных значений*/
const CNT5 = 5;
const CNT15 = 15;
const CNT50 = 50;

/*ID Комиссий*/ //RR Для того чтобы не плодить макросы опеределяем банк
 if   ((fgBank.is_EXV) and not (fgBank.is_EXV_Volgograd) and not (fgBank.is_EXV_Voronezh) and not(fgBank.is_EXV_Ulyanovsk) and not(fgBank.is_EXV_Stavropol))
       C3411 = 1075;
       C3412 = 1076;
       C3413 = 1077;
       C3414 = 1078;
       C3415 = 1079;
       C3416 = 1080;
       C3417 = 1081;
       C3418 = 1082;
 elif (fgBank.is_EXV_Volgograd)
       C3411 = 1074;
       C3412 = 1075;
       C3413 = 1076;
       C3414 = 1077;
       C3415 = 1078;
       C3416 = 1079;
       C3417 = 1080;
       C3418 = 1081;
 elif (fgBank.is_EXV_Voronezh)
       C3411 = 1074;
       C3412 = 1075;
       C3413 = 1076;
       C3414 = 1077;
       C3415 = 1078;
       C3416 = 1079;
       C3417 = 1080;
       C3418 = 1081;
 elif (fgBank.is_EXV_Ulyanovsk)
       C3411 = 1074;
       C3412 = 1075;
       C3413 = 1076;
       C3414 = 1077;
       C3415 = 1078;
       C3416 = 1079;
       C3417 = 1080;
       C3418 = 1081;
 elif (fgBank.is_EXV_Stavropol)
       C3411 = 1074;
       C3412 = 1075;
       C3413 = 1076;
       C3414 = 1077;
       C3415 = 1078;
       C3416 = 1079;
       C3417 = 1080;
       C3418 = 1081;
 end;

const WithCLB   = 7;  /*ID пункта "Перевод в другие банки до 17:00 с использованием системы Интернет-Клиент" категории*/
const WithntCLB = 8;  /*ID пункта "Перевод в другие банки до 14:00  без использования системы Интернет-Клиент" категории*/

/* ID Категории "Вид тарифа комиссии за перевод средств" */
const GroupID = 10;

/* Номер категории, которая определяет тариф для платежей */
//var TarifID; /*Перевод в другие банки до 17:00 с использованием системы Интернет-Клиент*/
//const TarifID = 7; /*Перевод в другие банки до 14:00  без использования системы Интернет-Клиент*/
/* Количество платежей*/
var CNT1, CNT2, Origin = null, ComNumber;

/*FIV Возвращает первый день месяца*/
private macro GetFirstDayForCurMonth(lastdate)
var mm, yy;
   DateSplit(lastdate, null, mm, yy);
   return Date(1,mm,yy);
end;

/*
    Расчет для периодических комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/, _ComNumber /*FIV ID комиссии из sfacrpay*/ )

    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    var rsday, rsmonth, stat;
    var CommQuont   = 0,
        CommSum     = $0;
    var retVal, Attrid, Code, Num;
    
    var CountDay, CountMonth;
    
    debugbreak;
    /*FIV Берем параметры алгоритма комиссии*/
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcalcal, sAddr );
       ComNumber = sfcalcal.CommNumber;
    else
       ComNumber = _ComNumber;
    end;
    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;

    if   (ComNumber == C3411)
       Origin = CLB_DocOrigin;
       CNT1 = 1;
       CNT2 = 5;
    elif (ComNumber == C3412)
       
       CNT1 = 1;
       CNT2 = 5;
    elif (ComNumber == C3413)
       Origin = CLB_DocOrigin;
       CNT1 = 6;
       CNT2 = 15;
    elif (ComNumber == C3414)
       
       CNT1 = 6;
       CNT2 = 15;
    elif (ComNumber == C3415)
       Origin = CLB_DocOrigin;
       CNT1 = 16;
       CNT2 = 50;
    elif (ComNumber == C3416)
       
       CNT1 = 16;
       CNT2 = 50;
    elif (ComNumber == C3417)
       Origin = CLB_DocOrigin;
       CNT1 = 51;
       CNT2 = 0;
    elif (ComNumber == C3418)
       
       CNT1 = 51;
       CNT2 = 0;
    end;
    GetCom34_11_18RecordSet( sfcontr.Object, Origin, BeginDate, EndDate, rsday, rsmonth);
    while (rsday and rsday.moveNext())
    /*Проверка условий*/
      if(rsmonth and rsmonth.moveNext())
  //      CommQuont = rsday.value(0, null, V_INTEGER);
       CountDay = rsday.value(0, null, V_INTEGER);
       CountMonth = rsmonth.value(0, null, V_INTEGER);
/*Chesnokov D. Алгоритм формирования количества документов(накопительный итог)*/
       if ( ((CountDay != 0) and (CountMonth == 0)) or ((BeginDate == EndDate) and (BeginDate == GetFirstDayForCurMonth(EndDate))) ) // Начали начислять комиссию(первый день, ранее проводок по счету небыло)
       
         /*Ветка алгоритма для комиссий по 5 платежей
           Всегда вернет количество max 5 или CountDay <= 5*/
         if ((ComNumber == C3411) or (ComNumber == C3412)) 
           if(CountDay <= CNT5)
             CommQuont = CountDay;
           elif((CountDay > CNT5) and (CountDay <=CNT15))
             CommQuont = CNT5;
           elif((CountDay > CNT15) and (CountDay <=CNT50))
             CommQuont = CNT5;
           elif(CountDay > CNT50)
             CommQuont = CNT5;
           end;
         end;
         
         if ((ComNumber == C3413) or (ComNumber == C3414)) 
           if((CountDay > CNT5) and (CountDay <=CNT15))
             CommQuont = CountDay - CNT5;
           elif((CountDay > CNT15) and (CountDay <=CNT50))
             CommQuont = CNT15 - CNT5;
           elif(CountDay > CNT50)
             CommQuont = CNT15 - CNT5;
           end;
         end;
         
         if ((ComNumber == C3415) or (ComNumber == C3416))
           if((CountDay > CNT15) and (CountDay <=CNT50))
             CommQuont = CountDay - CNT15;
           elif(CountDay > CNT50)
             CommQuont = CNT50 - CNT15;
           end;
         end;
         
         if ((ComNumber == C3417) or (ComNumber == C3418))
           if(CountDay > CNT50)
             CommQuont = CountDay - CNT50;
           end;
         end;

       elif((CountDay != 0) and (CountMonth != 0))
       
         if ((ComNumber == C3411) or (ComNumber == C3412)) 
           if (CountMonth < CNT5)
             if ((CNT5 - CountMonth) >= CountDay)
               CommQuont = CountDay;
             else
               CommQuont = CNT5 - CountMonth;
             end;
           end;
         end;
         
         if ((ComNumber == C3413) or (ComNumber == C3414)) 
           if ((CountMonth + CountDay) > CNT5)
             if ((CountMonth >= CNT5) and (CountMonth < CNT15))
               if ((CNT15 - CountMonth) >= CountDay)
                 CommQuont = CountDay;
               else
                 CommQuont = CNT15 - CountMonth;
               end;
             elif (CountMonth < CNT5)
               if ((CountMonth + CountDay) <= CNT15)
                 CommQuont = CountMonth + CountDay - CNT5;
               else
                 CommQuont = CNT15 - CNT5;
               end;
             end;
           end;
         end;

         if ((ComNumber == C3415) or (ComNumber == C3416))
           if ((CountMonth + CountDay) > CNT15)
             if ((CountMonth >= CNT15) and (CountMonth < CNT50))
               if ((CNT50 - CountMonth) >= CountDay)
                 CommQuont = CountDay;
               else
                 CommQuont = CNT50 - CountMonth;
               end;
             elif (CountMonth < CNT15)
               if ((CountMonth + CountDay) <= CNT50)
                 CommQuont = CountMonth + CountDay - CNT15;
               else
                 CommQuont = CNT50 - CNT15;
               end;
             end;
           end;
         end;

         if ((ComNumber == C3417) or (ComNumber == C3418))
           if ((CountMonth + CountDay) > CNT50)
             if (CountMonth < CNT50)
               CommQuont = CountMonth + CountDay - CNT50;
             else
               CommQuont = CountDay;
             end;
           end;
         end;

       end;

      end; 
    end;

    /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommQuont > 0)
          return true;
       end;
       return false;
    end;



    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_QUONT;
    sfbassum.baseQuont   = CommQuont;

    sfbassum.baseType2   = SF_BASETYPE_QUONT;
    sfbassum.baseQuont2  = CommQuont;
//    sfbassum.baseSum2    = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

