/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   ████████   ████████
   ███   ███  ███   ███
   ███  ████  ███  ████
   ███████    ███████
   ███  ███   ███  ███
   ███   ███  ███   ███

   RR Рахмедов Р.С.

   Имя файла : ConnectAccTR.mac

   18.11.2011 (финальная версия от 30.11.2011) доработка 07.12.2011 нужно искать последний действующий тарифный план

   Макрос создания(копирования) договоров обслуживания по транзитным счетам
   
   P.S. Особая благодарность : Чеснокову Д., Данилкиву О., Скибо Ю., Котову С.
   
   ChangeLog:
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 17.05.2012 Добавляю проверку на то чтобы такого счета не было
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 07.12.2011 Доработка  нужно искать последний действующий тарифный план
      также ввиду того, что в каждом банке признак транзитности может стоять и в пользовательском типе и просто в типе счета введен поиск в обоих 
      типах аналогично для поиска счетов с типом Х теперь поиск идет в двух типах
      переработан способ генерации кода для поля acccode, который должен быть уникальным в БД для этих нужд создана процедура USR_GenerateAccCode
      убраны "местные" обработки ошибок onerror, добавлена одна глобальная 
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR Исправлена ошибка в CheckAccTR
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 20.02.2014 Адаптирую под 2031(daccount$_dbt -> NULL)
-----------------------------------------------------------------------------------------------------------------------------------------------------
   // joy 20.05.2014 Адаптирую под 2031 daccount$_dbt не везде заменили R-378012
-----------------------------------------------------------------------------------------------------------------------------------------------------
  //  joy 06.06.2014 R-389322 добавляю поиск и вставку значений в поля t_preacptid и t_unioncontrid таблицы dsfcontr_dbt
-----------------------------------------------------------------------------------------------------------------------------------------------------
  // 02.07.2014 joy I-00497692 добавлен nvl при вставке значений в dsfconcom_dbt
-----------------------------------------------------------------------------------------------------------------------------------------------------
  // 17.12.2014 joy R-515525 В процедуре  вставки комиссий в ДО (InsertComisstoDO) сразу заносим данные в таблицу dsfcomtarscl_dbt
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import Cb_SQL, Rsd, Globals;
import oralib, likepy;

array TrAcc;
var i = 0;
var AccTemp;

array Success;
var x = 0;
array Error1;
var a = 0;
array Error2;
var w = 0;
array Error3;
var d = 0;
array Error4;
var f = 0;
array Error5;
var g = 0;
array Error6;
var h = 0;

var ContrRSet = TArray();
var TPRSet = TArray();
var ComissRSet = TArray();
var SPIRSet = TArray();
var SPIDataRset = TArray();
var s = 0;
var c = 0;
var l = 0;
var flag; //RR ввод данной переменной делает код мароса "Индусским" сказано zip_z предложено CDS
Class ContrParam(t_id, t_objecttype, t_object, t_fiid, t_partyid, t_number, t_datebegin, t_dateprolong, t_dateclose, 
                 t_paymethod, t_name, t_dateconc, t_contractorid, t_servkind, t_servkindsub, t_setaccsearchalg, t_invmethod, 
                 t_payfiid, t_payrateid, t_payratepercent, t_payratedatekind, t_invoiceduration, t_department, t_acccode, t_branch, t_unioncontrid, t_preacptid )
    var id = t_id;
    var objecttype = t_objecttype;
    var object = t_object;
    var fiid = t_fiid;
    var partyid = t_partyid;
    var number = t_number;
    var datebegin = t_datebegin;
    var dateprolong = t_dateprolong;
    var dateclose = t_dateclose;
    var paymethod = t_paymethod;
    var name = t_name;
    var dateconc = t_dateconc;
    var contractorid = t_contractorid;
    var servkind = t_servkind;
    var servkindsub = t_servkindsub;
    var setaccsearchalg = t_setaccsearchalg;
    var invmethod = t_invmethod;
    var payfiid = t_payfiid;
    var payrateid = t_payrateid;
    var payratepercent = t_payratepercent;
    var payratedatekind = t_payratedatekind;
    var invoiceduration = t_invoiceduration;
    var department = t_department;
    var acccode = t_acccode;
    var branch = t_branch;
    //joy 06.06.2014 R-389322 добавляю 2 поля, иначе заполнялись null-ом, а при оплате это приводило к ошибке 
    var unioncontrid = t_unioncontrid;
    var preacptid = t_preacptid;
end;

 class TPParam(t_id, t_sfcontrid, t_sfplanid, t_begin, t_end)
    var id = t_id;
    var sfcontrid = t_sfcontrid;
    var sfplanid = t_sfplanid;
    var begin = t_begin;
    var the_end = t_end //RR Мини каламбур
 end;

Class ComissParam(t_objectid, t_feetype, t_commnumber, t_status, t_calcperiodtype, t_calcperiodnum, t_date, t_getsummin, t_summin,
                  t_summax, t_datebegin, t_dateend, t_objecttype, t_id, t_sfplanid, t_isfreeperiod,T_ISINDIVIDUAL)
var objectid = t_objectid;
var feetype = t_feetype;
var commnumber = t_commnumber;
var shtatus = t_status;
var calcperiodtype = t_calcperiodtype;
var calcperiodnum = t_calcperiodnum;
//RR Еще один каламбур, писатель - Петросян.
var date = t_date;
var getsummin = t_getsummin;
var summin = t_summin;
var summax = t_summax;
var datebegin = t_datebegin;
var dateend = t_dateend;
var objecttype = t_objecttype;
var id = t_id;
var sfplanid = t_sfplanid;
var isfreeperiod = t_isfreeperiod;
var ISINDIVIDUAL = T_ISINDIVIDUAL;
end;

Class SPIParam(t_objecttype, t_objectid, t_setaccid, t_fikind, t_fiid, t_order, 
               t_operdate, t_sysdate, t_systime, t_oper, t_feetype, t_feenumber, t_branch)
var objecttype = t_objecttype;
var objectid = t_objectid;
var setaccid = t_setaccid;
var fikind = t_fikind;
var fiid = t_fiid;
var order = t_order;
var operdate = t_operdate;
var sysdate = t_sysdate;
var systime = t_systime;
var oper = t_oper;
var feetype = t_feetype;
var feenumber = feenumber;
var branch = t_branch;
end;

Class SPIDataParam(t_settaccid, t_partyid, t_bankid, t_fiid, t_chapter, t_account, t_inn, t_recname, t_bankcodekind, t_bankcode, t_bankname, t_bankcorrid, 
              t_bankcorrcodekind, t_bankcorrcode, t_bankcorrname, t_corracc, t_fikind, t_beneficiaryid, t_codekind, t_code, t_description, t_order,
              t_shortname, t_noaccept, t_kzpartycode)
              
var settaccid:integer = t_settaccid;
var partyid = t_partyid;
var bankid = t_bankid;
var fiid = t_fiid;
var chapter = t_chapter;
var account = t_account;
var inn = t_inn;
var recname = t_recname;
var bankcodekind = t_bankcodekind;
var bankcode = t_bankcode;
var bankname = t_bankname;
var bankcorrid = t_bankcorrid;
var bankcorrcodekind = t_bankcorrcodekind;
var bankcorrcode = t_bankcorrcode;
var bankcorrname = t_bankcorrname;
var corracc = t_corracc;
var fikind = t_fikind;
var beneficiaryid = t_beneficiaryid;
var codekind = t_codekind;
var code = t_code;
var description = t_description;
var order = t_order;
var shortname = t_shortname;
var noaccept = t_noaccept;
var kzpartycode = t_kzpartycode;

end;
//RR Функция поиска транзитных валютных счетов без договора обслуживания, все найденные счета заносим в массив TrAcc
 Macro SearchTrAccWithoutContr()

  var qwerty,cmd,rs;
  private const UsTypeAcc_Transit = "Y";

  qwerty = "  select acc.t_account acc"
+"\n          from daccount_dbt acc "
+"\n          where     acc.t_chapter = 1 and acc.t_code_currency <> 0 "
+"\n                and acc.t_close_date = to_date ( '01.01.0001', 'dd.mm.yyyy' ) "
+"\n                and ( (instr (acc.t_usertypeaccount,  '"+UsTypeAcc_Transit+"') != 0) or (instr (acc.T_TYPE_ACCOUNT,  '"+UsTypeAcc_Transit+"') != 0) ) " //RR доработка поиска типа У в обоих типах
+"\n                and not exists (select 1 from dsfcontr_dbt where t_object = acc.t_account) " //RR 17.05.2012 Добавляю проверку на то чтобы такого счета не было
+"\n                and acc.t_account not in "
+"\n                       ( select contr.t_object "
+"\n                         from dsfcontr_dbt contr "
+"\n                         where     contr.t_dateclose = to_date ( '01.01.0001', 'dd.mm.yyyy' ) "
+"\n                               and contr.t_fiid <> 0 "
+"\n                               and contr.t_object = acc.t_account )";

  cmd = rsdCommand( qwerty );
  rs  = rsdRecordSet( cmd );
   while (rs and rs.MoveNext())
    TrAcc(i) = rs.value("acc");
      i = i + 1; 
   end;
End;


//RR Функция проверки наличия валютного счета с признаком Х - текущий
 Macro CheckAccTR(account)

 var qwerty,cmd,rs;
 
  qwerty = " select acc.t_account "
+"\n           from daccount_dbt acc "
+"\n          where substr ( acc.t_account, 6, 3 ) = substr ( ?, 6, 3 ) "
+"\n                  and acc.t_close_date = to_date ( '01.01.0001', 'dd.mm.yyyy' ) "
+"\n                  and ( (instr (acc.t_usertypeaccount,  'X') != 0) or (instr (acc.T_TYPE_ACCOUNT,  'X') != 0) ) " //RR доработка поиска типа X в обоих типах
+"\n                  and acc.t_client = "
+"\n                       ( select acc1.t_client "
+"\n                        from daccount_dbt acc1 "
+"\n                        where     acc1.t_chapter = 1 "
+"\n                              and acc1.t_close_date = to_date ( '01.01.0001', 'dd.mm.yyyy' ) "
+"\n                              and acc1.t_account = ? ) "
+"\n                  and acc.t_account != ? and acc.t_code_currency <> 0 ";

  cmd = rsdCommand( qwerty );
  cmd.AddParam( "", RSDBP_IN, account );
  cmd.AddParam( "", RSDBP_IN, account );
  cmd.AddParam( "", RSDBP_IN, account );
  rs  = rsdRecordSet( cmd );
    if ((rs and rs.MoveNext()) and ValType(rs.value ("t_account") != V_UNDEF))
     AccTemp =rs.value ("t_account");
     return true;
    else
     return false;
    end;
    
End;

//RR Процедура копирования ДО, аналогичного ДО по валютному счету признаком Х - текущий
 Macro CopyDO(account)
 ContrRSet.Size = 0;
 var qwerty,cmd,rs;
  l = 0;
  qwerty = "        ( select 0, "
+"\n                 con.t_objecttype, "
+"\n                 ? account, "
+"\n                 con.t_fiid, "
+"\n                 con.t_partyid, "
+"\n                 'A'||concat ( ( substr ( ?, 9, 1 ) ), ( substr ( ?, 16, 5 ) )) numberd, "
+"\n                 con.t_datebegin, "
+"\n                 con.t_dateprolong, "
+"\n                 to_date('01.01.0001','dd.mm.yyyy') t_dateclose , "//обнуляем
+"\n                 con.t_paymethod, "
+"\n                 con.t_name, "
+"\n                 con.t_dateconc, "
+"\n                 con.t_contractorid, "
+"\n                 con.t_servkind, "
+"\n                 con.t_servkindsub, "
+"\n                 con.t_setaccsearchalg, "
+"\n                 con.t_invmethod, "
+"\n                 con.t_payfiid, "
+"\n                 con.t_payrateid, "
+"\n                 con.t_payratepercent, "
+"\n                 con.t_payratedatekind, "
+"\n                 con.t_invoiceduration, "
+"\n                 con.t_department, "
+"\n                 (SELECT USR_GenerateAccCode(?) from dual) autocode, "//RR 09.12.2011 Новый способ генерации уникального кода, автор zip_z
//+"\n                 'A'||concat ( ( substr ( ?, 9, 1 ) ), ( substr ( ?, 16, 5 ) )) autocode, " //Способ сбора А-для всех, далее ключ счета и последние 5 цифр счета
+"\n                 con.t_branch,  "
+"\n                 con.t_unioncontrid, " // 06.06.2014 joy Добавляю  два поля
+"\n                 con.t_preacptid    "
+"\n         from dsfcontr_dbt con "
+"\n         where con.t_object = '"+AccTemp+"' and con.T_DATECLOSE = to_date('01.01.0001','dd.mm.yyyy') )  ;"; //исключаем копирование данных по закрытым ДО

  cmd = rsdCommand( qwerty );
  cmd.AddParam( "", RSDBP_IN, account );
  cmd.AddParam( "", RSDBP_IN, account );
  cmd.AddParam( "", RSDBP_IN, account );
  cmd.AddParam( "", RSDBP_IN, account );
  
  rs  = rsdRecordSet( cmd );
    if ( (rs and rs.MoveNext()) and  (ValType (rs.value(0)) != V_UNDEF  ))
       ContrRSet(l) = ContrParam (rs.value(0), rs.value(1), rs.value(2), rs.value(3), rs.value(4), rs.value(5), rs.value(6), rs.value(7), rs.value(8), rs.value(9), rs.value(10), rs.value(11), rs.value(12),
                                  rs.value(13), rs.value(14), rs.value(15), rs.value(16), rs.value(17), rs.value(18), rs.value(19), rs.value(20), rs.value(21), rs.value(22), rs.value(23), rs.value(24), rs.value(25), rs.value(26) );
       
       return true;
    else
       return false;
    end;
End;

//RR Процедура вставки ДО, аналогичного ДО по валютному счету признаком Х - текущий
 Macro InsertDO()

 var qwerty,cmd,rs;
  
  qwerty =" insert into dsfcontr_dbt "
+"\n     (t_id, "
+"\n      t_objecttype, "
+"\n      t_object, "
+"\n      t_fiid, "
+"\n      t_partyid, "
+"\n      t_number, "
+"\n      t_datebegin, "
+"\n      t_dateprolong, "
+"\n      t_dateclose, " 
+"\n      t_paymethod, "
+"\n      t_name, "
+"\n      t_dateconc, "
+"\n      t_contractorid, "
+"\n      t_servkind, "
+"\n      t_servkindsub, "
+"\n      t_setaccsearchalg, "
+"\n      t_invmethod, "
+"\n      t_payfiid, "
+"\n      t_payrateid, "
+"\n      t_payratepercent, "
+"\n      t_payratedatekind, "
+"\n      t_invoiceduration, "
+"\n      t_department, "
+"\n      t_acccode, "
+"\n      t_branch , "
+"\n      t_unioncontrid , "
+"\n      t_preacptid ) "
+"\n         values (? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,?, ?, ? ); "; 

  cmd = rsdCommand( qwerty );
  cmd.AddParam("",RSDBP_IN,ContrRSet(l).id);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).objecttype);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).object);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).fiid);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).partyid);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).number);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).datebegin);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).dateprolong);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).dateclose);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).paymethod);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).name);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).dateconc);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).contractorid);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).servkind);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).servkindsub);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).setaccsearchalg);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).invmethod);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).payfiid);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).payrateid);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).payratepercent);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).payratedatekind);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).invoiceduration);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).department);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).acccode);
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).branch);
  // 06.06.2014 joy Добавляю  два параметра
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).unioncontrid); 
  cmd.AddParam("", RSDBP_IN,ContrRSet(l).preacptid);
  
  cmd.execute();
  //RR После вставки ДО к нему автоматом подтягивает "Левый" ТП, нам нужен тот ТП который был у "донорского" счета, поэтому приходится удалять.
  qwerty = " delete from dsfcontrplan_dbt d "
+"\n                where d.t_sfcontrid = (select c.t_id "
+"\                                        from dsfcontr_dbt c "
+"\n                                       where c.t_object = ?); ";
   cmd = rsdCommand( qwerty );
   cmd.AddParam("",RSDBP_IN,TrAcc[i]);
   cmd.execute();
   
End;

//RR Процедура копирования ТП, аналогичного ТП по валютному счету признаком Х - текущий
 Macro CopyTptoDO(account)
 TPRSet.Size = 0;
 var qwerty,cmd,rs;
  l = 0;
  qwerty = "  ( select 0, ( select t_id "
+"\n                   from dsfcontr_dbt "
+"\n                   where t_object = ? ) "
+"\n                    id, dplan.t_sfplanid, dplan.t_begin, dplan.t_end "
+"\n       from dsfcontrplan_dbt dplan "
+"\n       where dplan.t_sfcontrid = "
+"\n               ( select contr.t_id "
+"\n                from dsfcontr_dbt contr "
+"\n                where contr.t_object = '"+AccTemp+"') and DPLAN.T_END = to_date('01.01.0001','dd.mm.yyyy') );"; //RR 07.12.2011 нужен самый последний тарифный план

  cmd = rsdCommand( qwerty );
  cmd.AddParam( "", RSDBP_IN, account );
  rs  = rsdRecordSet( cmd );
  
  if ( (rs and rs.MoveNext()) and  (ValType (rs.value(1)) != V_UNDEF  ) )
       TPRSet(l) = TPParam (rs.value(0), rs.value(1), rs.value(2), rs.value(3), rs.value(4));
       return true;
  else
       return false;
  end;
End;

//RR Процедура вставки ТП, аналогичного ТП по валютному счету признаком Х - текущий
 Macro InsertTptoDO()

 var qwerty,cmd,rs;
  
  qwerty =   " insert into dsfcontrplan_dbt "
+"\n         (t_id, "
+"\n          t_sfcontrid, "
+"\n          t_sfplanid, "
+"\n          t_begin, "
+"\n          t_end) "
+"\n          values (?, ?, ?, ?, ?) ";

  cmd = rsdCommand( qwerty );
  cmd.AddParam( "", RSDBP_IN,TPRSet(l).id );
  cmd.AddParam( "", RSDBP_IN,TPRSet(l).sfcontrid );
  cmd.AddParam( "", RSDBP_IN,TPRSet(l).sfplanid );
  cmd.AddParam( "", RSDBP_IN,TPRSet(l).begin);
  cmd.AddParam( "", RSDBP_IN,TPRSet(l).the_end );
  cmd.execute();

End;

//RR Процедура копирования комиссий ДО, аналогичных комиссиям привязанным к ДО по валютному счету признаком Х - текущий
 Macro CopyComisstoDO(account)
 ComissRSet.Size = 0;
 var qwerty,cmd,rs;
  c = 0;
  qwerty = "  select ( select t_id "
+"\n              from dsfcontr_dbt "
+"\n              where t_object = ? ) "
+"\n               id, "
+"\n             com.t_feetype, "
+"\n             com.t_commnumber, "
+"\n             com.t_status, "
+"\n             com.t_calcperiodtype, "
+"\n             com.t_calcperiodnum, "
+"\n             com.t_date, "
+"\n             nvl(com.t_getsummin, chr(0)) t_getsummin, " // 02.07.2014 joy I-00497692 добавлен nvl
+"\n             nvl(com.t_summin,0) t_summin, "
+"\n             nvl(com.t_summax,0) t_summax, "
+"\n             com.t_datebegin, "
//+"\n             com.t_calcselectfi, "
//+"\n             com.t_fiid_calcsum, "
+"\n             com.t_dateend, "
+"\n             com.t_objecttype, "
+"\n             0, "
+"\n             com.t_sfplanid, "
+"\n             nvl (com.t_isfreeperiod, chr(0) ) t_isfreeperiod, " // 02.07.2014 joy I-00497692 добавлен nvl
+"\n             nvl (com.T_ISINDIVIDUAL, chr(0) ) T_ISINDIVIDUAL " // 02.07.2014 joy I-00497692 добавлен nvl
+"\n      from dsfconcom_dbt com "
+"\n      where com.T_FEETYPE = 1 "
+"\n         and com.t_objectid = "
+"\n              ( select contr.t_id "
+"\n               from dsfcontr_dbt contr "
+"\n               where contr.t_object = '"+AccTemp+"');";

  cmd = rsdCommand( qwerty );
  cmd.AddParam( "", RSDBP_IN, account );
  rs  = rsdRecordSet( cmd );
  //ComissRSet = null;         //убиваем массим
  //ComissRSet = TArray;      //пересоздаем структуру
  while (rs and rs.MoveNext())
       ComissRSet(c) = ComissParam (rs.value(0), rs.value(1), rs.value(2), rs.value(3), rs.value(4), rs.value(5), rs.value(6), rs.value(7), rs.value(8), 
                                    rs.value(9), rs.value(10), rs.value(11), rs.value(12), rs.value(13), rs.value(14), rs.value(15), rs.value(16));
       c = c + 1;
  end;
  //RR Поясню, на любом тарифном плане количество комиссий больше нуля если счетчик массива больше единицы, значит выборка состоялась и массив "впитал" в себя нужные значения.
   if(c > 0)
     return true;
   else
     return false;
   end;
  
End;

//RR Процедура вставки комиссий ДО, аналогичных комиссиям привязанным к ДО по валютному счету признаком Х - текущий
  Macro InsertComisstoDO()

 var qwerty,cmd,rs, qw;
  c = 0;
  
  
  while(c <= ((ComissRSet.Size) - 1) )

  qwerty = " insert into dsfconcom_dbt "
+"\n           (t_objectid, "
+"\n           t_feetype, "
+"\n           t_commnumber, "
+"\n           t_status, "
+"\n           t_calcperiodtype, "
+"\n           t_calcperiodnum, "
+"\n           t_date, "
+"\n           t_getsummin, "
+"\n           t_summin, "
+"\n           t_summax, "
+"\n           t_datebegin, "
//+"\n           t_calcselectfi, "
//+"\n           t_fiid_calcsum, "
+"\n           t_dateend, "
+"\n           t_objecttype, "
+"\n           t_id, "
+"\n           t_sfplanid, "
+"\n           t_isfreeperiod, "
+"\n           T_ISINDIVIDUAL) "
+"\n             values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )";

  cmd = rsdCommand( qwerty );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).objectid );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).feetype );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).commnumber );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).shtatus );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).calcperiodtype );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).calcperiodnum );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).date );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).getsummin );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).summin );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).summax );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).datebegin );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).dateend );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).objecttype );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).id );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).sfplanid); 
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).isfreeperiod );
  cmd.AddParam("", RSDBP_IN,ComissRSet(c).ISINDIVIDUAL );
  cmd.execute();

  TestEvent (500);//RR ждем пол секунды(чтобы Ораклу крышку не срывало), да долго, да нудно, но зато работает и не грузит систему
  c = c + 1;
  end;
  
  //joy 17.12.2014 здесь же сразу заносим данные в таблицу dsfcomtarscl_dbt. 
  qw = " DELETE FROM dsfcomtarscl_dbt where t_concomid in ( " +
        "            select t_id from dsfconcom_dbt where T_OBJECTID = ? " +
        "            AND T_OBJECTTYPE = 659) ";
  cmd = rsdCommand( qw );
  cmd.AddParam("", RSDBP_IN,ComissRSet(0).objectid );
  cmd.execute();
  
  qw = " INSERT INTO dsfcomtarscl_dbt (t_concomid, t_tarSclID, t_level) " +
       "  SELECT concom.t_id, tar.t_id, 3  " +
       "  FROM dsfconcom_dbt concom, dsftarscl_dbt tar, dsfconcom_dbt concomts  " +
       "  WHERE concom.t_objecttype = 659  " +
       " AND concom.t_feetype = tar.t_feetype AND concom.t_commnumber = tar.t_commnumber " +
       " AND concomts.t_ID = tar.t_ConComID " +
       " AND concomts.t_objecttype = 57 " +
       " AND concomts.t_objectid = concom.t_SfPlanID " +
       " AND concomts.t_SfPlanID = 0  " +
       " AND (" +
       "      (tar.t_begindate = to_date('01 01 0001', 'dd.mm.yyyy') AND tar.t_enddate = to_date('01 01 0001', 'dd.mm.yyyy') ) " +
       "         OR tar.t_begindate  " +
       "             BETWEEN concom.t_datebegin  " +
       "         AND DECODE(concom.t_dateend, to_date('01 01 0001', 'dd.mm.yyyy'), to_date('31 12 9999', 'dd.mm.yyyy'), concom.t_dateend) " +
       "         OR tar.t_enddate " +
       "             BETWEEN concom.t_datebegin " +
       "         AND DECODE(concom.t_dateend, to_date('01 01 0001', 'dd.mm.yyyy'), to_date('31 12 9999', 'dd.mm.yyyy'), concom.t_dateend) " +
       "         OR tar.t_enddate  = to_date('01 01 0001', 'dd.mm.yyyy') " +
       "     ) " +
       " and concom.t_id in ( " +
       "        select t_id from dsfconcom_dbt where T_OBJECTID = ? " +
       " AND T_OBJECTTYPE = 659) " ;
    cmd = rsdCommand( qw );
    cmd.AddParam("", RSDBP_IN,ComissRSet(0).objectid );
    cmd.execute();
End;   

//RR Процедура копирование данных содержащихся в СПИ
 Macro CopySpiData(account)
SPIDataRset.Size = 0;
var qwerty,cmd,rs;
var sfcontid, setaccid;
var Tsfcontid, Tsetaccid;
  
  cmd = execSQLSelect (" select c.t_id from dsfcontr_dbt c where c.t_object = :AccTemp", MakeArray (SQLPAram ("AccTemp", AccTemp)));
  if (cmd.MoveNext)
      Tsfcontid = cmd.value("t_id");
  else
      return false;
  end;
  
  cmd = execSQLSelect (" select spi.t_setaccid from dsfssi_dbt spi where spi.t_objecttype = 659 and spi.t_objectid = :Tsfcontid", MakeArray (SQLPAram ("Tsfcontid", Tsfcontid)));
  if (cmd.MoveNext)
      Tsetaccid = cmd.value("t_setaccid");
  else
      return false;
  end;
  DEBUGBREAK;
  qwerty =  " select  0, "
+"\n                 sacc.t_partyid, "
+"\n                 sacc.t_bankid, "
+"\n                 sacc.t_fiid, "
+"\n                 sacc.t_chapter, "
+"\n                 ? t_account, "
+"\n                 sacc.t_inn, "
+"\n                 sacc.t_recname, "
+"\n                 sacc.t_bankcodekind, "
+"\n                 sacc.t_bankcode, "
+"\n                 sacc.t_bankname, "
+"\n                 sacc.t_bankcorrid, "
+"\n                 sacc.t_bankcorrcodekind, "
+"\n                 sacc.t_bankcorrcode, "
+"\n                 sacc.t_bankcorrname, "
+"\n                 sacc.t_corracc, "
+"\n                 sacc.t_fikind, "
+"\n                 sacc.t_beneficiaryid, "
+"\n                 sacc.t_codekind, "
+"\n                 sacc.t_code, "
+"\n                 sacc.t_description, "
+"\n                 (select max(t_order) + 1 from dsettacc_dbt where t_partyid = sacc.t_partyid), "
+"\n                 (SELECT USR_GenerateAccCode( ? ) from dual) t_shortname, "
//+"\n                 'A'||concat ( ( substr ( ?, 9, 1 ) ), ( substr ( ?, 16, 5 ) )) t_shortname, "
+"\n                 sacc.t_noaccept, "
+"\n                 sacc.t_kzpartycode "
+"\n          from dsettacc_dbt sacc "
+"\n         where sacc.t_settaccid = ?; ";

  cmd = rsdCommand( qwerty );
  //cmd.AddParam( "", RSDBP_IN, setaccid );
  cmd.AddParam( "", RSDBP_IN, account );
  cmd.AddParam( "", RSDBP_IN, account );
  cmd.AddParam( "", RSDBP_IN, Tsetaccid );
  rs  = rsdRecordSet( cmd );
  
  if (rs and rs.MoveNext())
       SPIDataRset(s) = SPIDataParam (rs.value(0), rs.value(1), rs.value(2), rs.value(3), rs.value(4), rs.value(5),
                           rs.value(6), rs.value(7), rs.value(8), rs.value(9), rs.value(10), rs.value(11), rs.value(12)
                           , rs.value(13), rs.value(14), rs.value(15), rs.value(16), rs.value(17), rs.value(18), rs.value(19)
                           , rs.value(20), rs.value(21), rs.value(22), rs.value(23), rs.value(24));
                      
       return true;
  else
       return false;
  end;
  
End;

//RR Процедура вставки данных содержащихся в СПИ
 Macro InsertSpiData()
 
 var qwerty,cmd,rs;
 
  qwerty = " insert into dsettacc_dbt "
+"\n           ( t_settaccid, "
+"\n             t_partyid, "
+"\n             t_bankid, "
+"\n             t_fiid, "
+"\n             t_chapter, "
+"\n             t_account, "
+"\n             t_inn, "
+"\n             t_recname, "
+"\n             t_bankcodekind, "
+"\n             t_bankcode, "
+"\n             t_bankname, "
+"\n             t_bankcorrid, "
+"\n             t_bankcorrcodekind, "
+"\n             t_bankcorrcode, "
+"\n             t_bankcorrname, "
+"\n             t_corracc, "
+"\n             t_fikind, "
+"\n             t_beneficiaryid, "
+"\n             t_codekind, "
+"\n             t_code, "
+"\n             t_description, "
+"\n             t_order, "
+"\n             t_shortname, "
+"\n             t_noaccept, " 
+"\n             t_kzpartycode ) "
+"\n       values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); ";

  cmd = rsdCommand( qwerty );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).settaccid );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).partyid );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).bankid );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).fiid );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).chapter );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).account );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).inn );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).recname );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).bankcodekind );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).bankcode );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).bankname );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).bankcorrid );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).bankcorrcodekind );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).bankcorrcode );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).bankcorrname );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).corracc );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).fikind );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).beneficiaryid );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).codekind );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).code );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).description );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).order );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).shortname );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).noaccept );
  cmd.AddParam("", RSDBP_IN,SPIDataRset(s).kzpartycode );
  cmd.execute();
  //SPIDataRSet = null ; //RR Убиваем данные содержащиеся в массиве
     //RR Олежек подсказал такую штуку
onerror (e)
    msgbox("Невозможно вставить данные СПИ в таблицу dsetacc_dbt");
    exit (1);
End;

//RR Процедура копирования СПИ ДО, аналогичному СПИ ДО по валютному счету признаком Х - текущий
 Macro CopySpi(account)

 var qwerty,cmd,rs;
  l = 0;
  qwerty = " select spi.t_objecttype, "
+"\n               ( select lpad ( t_id, 10, '0' ) from dsfcontr_dbt where t_object = ? ) t_objectid, "
+"\n               (select max(t_settaccid) from dsettacc_dbt where t_account = ? ) t_setaccid , "
+"\n               spi.t_fikind, "
+"\n               spi.t_fiid, "
+"\n               spi.t_order, "
+"\n               spi.t_operdate, "
+"\n               spi.t_sysdate, "
+"\n               spi.t_systime, "
+"\n               spi.t_oper, "
+"\n               spi.t_feetype, "
+"\n               spi.t_feenumber, "
+"\n               spi.t_branch "
+"\n       from dsfssi_dbt spi "
+"\n       where spi.t_objecttype = 659 "
+"\n             and spi.t_objectid = "
+"\n                  ( select contr.t_id "
+"\n                   from dsfcontr_dbt contr "
+"\n                   where contr.t_object = ? ) ;";

  cmd = rsdCommand( qwerty );
  cmd.AddParam( "", RSDBP_IN, account );
  cmd.AddParam( "", RSDBP_IN, account );
  cmd.AddParam( "", RSDBP_IN, AccTemp);
  rs  = rsdRecordSet( cmd );
  
  if (rs and rs.MoveNext())
       SPIRSet(l) = SPIParam (rs.value(0), rs.value(1), rs.value(2), rs.value(3), rs.value(4), rs.value(5),
                           rs.value(6), rs.value(7), rs.value(8), rs.value(9), rs.value(10), rs.value(11), rs.value(12));
       return true;
  else
       return false;
  end;
  
End;

//RR Процедура вставки СПИ ДО, аналогичному СПИ ДО по валютному счету признаком Х - текущий
 Macro InsertSpi()

 var qwerty,cmd,rs;
  l = 0;
  qwerty =" insert into dsfssi_dbt "
+"\n          (t_objecttype, "
+"\n          t_objectid, "
+"\n          t_setaccid, "
+"\n          t_fikind, "
+"\n          t_fiid, "
+"\n          t_order, "
+"\n          t_operdate, "
+"\n          t_sysdate, "
+"\n          t_systime, "
+"\n          t_oper, "
+"\n          t_feetype, "
+"\n          t_feenumber, "
+"\n          t_branch) "
+"\n              values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ";
  cmd = rsdCommand( qwerty );
  cmd.AddParam("", RSDBP_IN,SPIRSet(l).objecttype);
  cmd.AddParam("", RSDBP_IN,SPIRSet(l).objectid);
  cmd.AddParam("", RSDBP_IN,SPIRSet(l).setaccid);
  cmd.AddParam("", RSDBP_IN,SPIRSet(l).fikind);
  cmd.AddParam("", RSDBP_IN,SPIRSet(l).fiid);
  cmd.AddParam("", RSDBP_IN,SPIRSet(l).order);
  cmd.AddParam("", RSDBP_IN,SPIRSet(l).operdate);
  cmd.AddParam("", RSDBP_IN,SPIRSet(l).sysdate);
  cmd.AddParam("", RSDBP_IN,SPIRSet(l).systime);
  cmd.AddParam("", RSDBP_IN,SPIRSet(l).oper);
  cmd.AddParam("", RSDBP_IN,SPIRSet(l).feetype);
  cmd.AddParam("", RSDBP_IN,SPIRSet(l).feenumber);
  cmd.AddParam("", RSDBP_IN,SPIRSet(l).branch);
  cmd.execute();
  
End;


 Macro PrintResult()
    if ((asize(Error1)) > 0)
    a = 0;
    [┌───────────────────────────────────────────────────────┐];
    [│      По счетам не найден ""донор"" с типом Х          │];
    [├───────────────────────────────────────────────────────┤];
       while (a < (asize(Error1)))
    [│                  ####################                 │]
       ( Error1[a] );
        a = a + 1;
    [├───────────────────────────────────────────────────────┤];
       end;
    end;
       
    if ((asize(Error2)) > 0)
    w = 0;
    [┌───────────────────────────────────────────────────────┐];
    [│   По счетам не найден ""донор"" для копирования ДО    │];
    [├───────────────────────────────────────────────────────┤];
       while (w < (asize(Error2)))
    [│                  ####################                 │]
       (Error2[w]);
        w = w + 1;
    [├───────────────────────────────────────────────────────┤];
       end;
    end;
       
    if ((asize(Error3)) > 0)
    d = 0;
    [┌───────────────────────────────────────────────────────┐];
    [│   По счетам не найден ""донор"" для копирования ТП    │];
    [├───────────────────────────────────────────────────────┤];
       while (d < (asize(Error3)))
    [│                  ####################                 │]
      (Error3[d]);
       d = d + 1;
    [├───────────────────────────────────────────────────────┤];
       end;
    end;
       
    if ((asize(Error4)) > 0)
    f = 0;
    [┌───────────────────────────────────────────────────────┐];
    [│По счетам не найден ""донор"" для копирования комиссий │];
    [├───────────────────────────────────────────────────────┤];
       while (f < (asize(Error4)))
    [│                  ####################                 │]
       (Error4[f]);
        f = f + 1;
    [├───────────────────────────────────────────────────────┤];
       end;
    end;
    
    if ((asize(Error5)) > 0)
    g = 0;
    [┌────────────────────────────────────────────────────────┐];
    [│По счетам не найден ""донор"" для копирования данных СПИ│];
    [├────────────────────────────────────────────────────────┤];
       while (g < (asize(Error5)))
    [│                  ####################                  │]
       (Error5[g]);
        g = g + 1;
    [├────────────────────────────────────────────────────────┤];
       end;
    end;
    
    if ((asize(Error6)) > 0)
    h = 0;
    [┌────────────────────────────────────────────────────────┐];
    [│   По счетам не найден ""донор"" для копирования СПИ    │];
    [├────────────────────────────────────────────────────────┤];
       while (h < (asize(Error6)))
    [│                  ####################                  │]
       (Error6[h]);
        h = h + 1;
    [├────────────────────────────────────────────────────────┤];
       end;
    end;
    
    if ((asize(Success)) > 0)
    x = 0;
    [┌────────────────────────────────────────────────────────┐];
    [│               По счетам успешно создан ДО              │];
    [├────────────────────────────────────────────────────────┤];
       while (x < (asize(Success)))
    [│                  ####################                  │]
       (Success[x]);
        x = x + 1;
    [├────────────────────────────────────────────────────────┤];
       end;
    end;
    
End;


//RR Точка входа
 If (GetTrue(True, "Процедура создаст договора обслуживания по транзитным счетам \n Хотите продолжить?"))
    SearchTrAccWithoutContr();
    //rr обнуляем счетчики всех массивов
    i = 0;
    a = 0;
    w = 0;
    d = 0;
    f = 0;
    g = 0;
    h = 0;
    x = 0;
    InitProgress(asize(TrAcc),"Ждите...","Идет обработка счетов ");
    while (valType(TrAcc[i]) != V_UNDEF )
    RslDefCon.BeginTrans();
        if ( (CheckAccTR ( (TrAcc[i]) ) == true) )
        
            if (CopyDO(TrAcc[i]))
                InsertDO();
                flag = true;
            else
                Error2(w) = TrAcc[i]; //rr заносим в массив счет для которых не найден "донор" с которого можно скопировать ДО
                w = w + 1;
                flag = false;
            end;
               
            if (flag and CopyTptoDO(TrAcc[i]))
                InsertTptoDO();
                flag = true;
            else
                //Error3(d) = TrAcc[i]; //rr заносим в массив счет по которому не найден "донорский" ТП
                //d = d + 1;
                flag = false;
            end;
               
            if (flag and CopyComisstoDO(TrAcc[i]))
                //debugbreak;
                InsertComisstoDO();
                flag = true;
            else
                //Error4(f) = TrAcc[i]; //rr заносим в массив счет по которму не найдены "донорские" комиссии
                //f = f + 1;
                flag = false;
            end;
            
            if (flag and CopySpiData(TrAcc[i]))
                InsertSpiData();
                flag = true;
            else
                //Error5(g) = TrAcc[i]; //rr заносим в массив счет по которому не найдены "доноские" данные СПИ
                //g = g + 1;
                flag = false;
            end;
            
            if (flag and CopySpi(TrAcc[i]))
                InsertSpi();
                flag = true;
            else
                //Error6(h) = TrAcc[i]; //rr заносим в массив счет по которым не найдены "донорские" СПИ
                //h = h + 1;
                flag = false;
            end;
            
          Success(x) = TrAcc[i]; //rr в случае успеха заносим счет в массив
            x = x + 1;
            i = i + 1;
        else
            Error1(a) = TrAcc[i] ;//RR Заносим в массив счета по которым не найдет счет "донор" с типом Х
            a = a + 1;//rr счетчик error1
            i = i + 1;
        end;
        RslDefCon.CommitTrans();
    UseProgress(i);
    end;
    RemProgress();
   PrintResult()
 else
    return 0;
 End;
    OnError();
    RslDefCon.RollBackTrans();
