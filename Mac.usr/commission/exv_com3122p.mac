//RR 23.11.2011 по заявке C-7328 внесены поправки, со счетов 30232 убран аналин на назначение платежа

/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 

RR - Рахмедов Руслан 10.09.2011, без Чеснокова Д. не справился бы!!!!!!!!!!!!!!!!!!!!!!

Комиссия 3.12.1 - Перевод средств со счетов клиентов Банка на счета Физически лиц
(за исключением переводов в рамках зарплатных проектов)
в случае, если общая сумма таких перечислений за текущий календарный месяц составляет 
НЕ более 5 миллионов рублей в месяц(маслянное масло, но так было написано в ТЗ)
в адрес физлиц других банков(внешние платежи)

За документы Клиент-банка

Тип комиссии: Периодическая

Имя файла exv_com3122e.mac
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, cb_sql;
import CommissLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

record sfbassum( "sfbassum.str" );

CONST PM_CRITICAL_AMOUNT = $5000000; 

/*
    Расчет для единовременных комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/ )

    record sfcontr( sfcontr );
    var query, rs, cmd, stat, mainQuery;
    var CommQuont   = 0,
        CommSum     = $0,
        CommSum1    = $0,
        CommSum2    = $0;
    
    debugbreak;
    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;


    /* EVG 9/02/2012 Немного оптимизировал алгоритм с целью исключить лишние обращения к БД и сделать возможность
       вызова из внешнего макроса. */

    // Основной запрос
    mainQuery =   " select nvl(sum (PAYM.T_AMOUNT),0) as sum "
                 +"   from dpmpaym_dbt paym, "
                 +"        dpmrmprop_dbt prop, "
                 +"        dpspayord_dbt ord "
                 +" where   PAYM.T_PAYMENTID = prop.t_paymentid "
                 +"      and PAYM.T_PAYMENTID = ORD.T_ORDERID "
                 +"      and paym.t_payerbankid <> paym.t_receiverbankid "
                 +"      and          paym.t_payeraccount in "
                 +"          ( select acc.t_account "
                 +"               from daccount_dbt acc "
                 +"             where     acc.t_chapter = 1 "
                 +"                  and  acc.t_usertypeaccount NOT LIKE '%Z%' "
                 +"                  AND (SUBSTR (acc.t_account, 1, 3) BETWEEN '405' AND '407' "
                 +"                   OR  SUBSTR (acc.t_account, 1, 5) IN ('40807', '40802'))) "
                 +"      AND ( (SUBSTR (paym.t_ReceiverAccount, 1, 3) IN ('423', '426') "
                 +"                 OR SUBSTR (paym.t_ReceiverAccount, 1, 5) IN ('30232', '40817', '40820') "
                 +"                 OR (SUBSTR (paym.t_ReceiverAccount, 1, 5) IN ('47422') "
                 +"                      and "
                 +"                     (   REGEXP_LIKE (prop.t_ground, '(40817|40820)\\d{15}') "
                 +"                      OR REGEXP_LIKE (prop.t_ground, '(423|426)\\d{17}') "
                 +"                      OR REGEXP_LIKE ('\\s' || LOWER (prop.t_ground), '(\\sпк\\s|\\sп\\.карта|п/карта|карточный\\sсчет|\\sп/к\\s|пластиковых\\sкарт)'))))) "
                 +"      and paym.t_paymstatus = 32000 "
                 +"      and ORD.T_ORIGIN = 2 "
                 +"      and paym.t_payeraccount = ? ";


    /* проверка на первышение суммы перечислений в 500000*/ 
    query = mainQuery + "    and paym.T_CLOSEDATE BETWEEN (select trunc(to_date(?), 'MONTH') from dual) " +
                        "                             AND ((to_date(?)) - 1) ";
    
    cmd = rsdcommand(query);
    cmd.AddParam("", RSDBP_IN,sfcontr.object);
    cmd.AddParam("", RSDBP_IN,EndDate);
    cmd.AddParam("", RSDBP_IN,EndDate);
    rs = rsdRecordSet( cmd );

    if (rs and rs.moveNext())
       
       CommSum1 = rs.value("sum");

       if( CommSum1 <= PM_CRITICAL_AMOUNT )   

          /* Ищем сумму документов за которые будем брать комиссию*/
          query = mainQuery + " and paym.T_CLOSEDATE = to_date (?) ";
         
          cmd = rsdcommand(query);
          cmd.AddParam("", RSDBP_IN,sfcontr.object);
          cmd.AddParam("", RSDBP_IN,EndDate);
          rs = rsdRecordSet( cmd );
       
          /*
          setOutPut("d:\\112233.txt", false);
          println(query);
          println(sfcontr.object);
          */

          if (rs and rs.moveNext())

             CommSum2 = rs.value("sum");
             
             if   ((CommSum1 + CommSum2) <= PM_CRITICAL_AMOUNT)
                CommSum = CommSum2
             elif ((CommSum1 + CommSum2) > PM_CRITICAL_AMOUNT)
                CommSum = (PM_CRITICAL_AMOUNT - CommSum1)
             else
                msgbox ("Ошибка расчета, обратитесь к Рахмедову Р.С.")
             end;
           
          end;
       
       end;
    
    end;
    
    
    if ( ValType (sfcontrStruc) != V_UNDEF )
      if (CommSum > $0)
        return true;
      end;
      return false;
    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_SUM;
    sfbassum.baseSum     = CommSum;

    sfbassum.baseType2   = SF_BASETYPE_SUM;
    sfbassum.baseSum2    = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

