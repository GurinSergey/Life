/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   joy Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.4.10
       "Платежи  в пользу ФЛ в оплату з\п и соц.выплат на счета, открытые в банках  вне  группы Лайф".

       Тип комиссии - периодическая (C-32315)

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
import sfinter, ctinter, cb_sql, CommissLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );
record paym(pmpaym);



/*
    Расчет для периодических комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sfcalcalusr_addr/*Алгоритм расчета*/, sfcontrStruc /*Cтруктура sfcontr*/ )

    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    
    var query, rs, cmd, stat;
    var CommQuont   = 0,
        CommSum     = $0;
    var  Num, TarifValue, TariffMinSum, TariffMaxSum, CurrentDocCommiss, TarifType;
    var sfComType = 1; //Периодическая
    debugbreak;
    
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;
    SetBuff( sfcalcal, sfcalcalusr_addr );
     
    /* Получим значение тарифа и min/max сумм */
    TarifValue = TariffMinSum = TariffMaxSum = $0;
    rs = GetTarifInfo (sfcontr, EndDate, EndDate, sfComType, sfCalcal.CommNumber, @TarifValue, @TariffMinSum, @TariffMaxSum, @TarifType );
    rs = null;
     
    rs = GetComToPhisFacesRecordSet_new( sfcontr,  BeginDate, EndDate, false, false, true );
    while (rs and rs.moveNext())

      CurrentDocCommiss = rs.Value (0, null, V_MONEY) * TarifValue / 100;
       // Наложение min / max 
       if ((TariffMaxSum > 0) and ( CurrentDocCommiss > TariffMaxSum ))
          CurrentDocCommiss = TariffMaxSum;
       elif ((TariffMinSum > 0) and ( CurrentDocCommiss < TariffMinSum ))
          CurrentDocCommiss = TariffMinSum;
       end;

       CommSum = CommSum + CurrentDocCommiss;
//       CommQuont = CommQuont + 1;

    end;


    /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommSum > 0)
          return true;
       end;
       return false;
    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_SUM;
    sfbassum.baseSum  = CommSum;

    sfbassum.baseType2   = SF_BASETYPE_SUM;
    sfbassum.baseSum2  = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/










