/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Банк ВУЗ

       Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.4.5
       "Прочие платежи в пользу клиентов (юр. лиц,ИП,физ лиц в рамках зарплатных
        проектов, подтвержденных договором) других банков, принятые с 16-00 до 
        20-30 по системе "Интернет-Клиент"".

       EVG 14.01.2011 Используется для алгоритма с типом возвращаемой величины "Сумма".

       Тип комиссии - периодическая.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, VuzComLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

record sfbassum( "sfbassum.str" );




/*
    Расчет для периодических комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sfcalcal_addr /* EVG Адрес алгоритма (sfcalcal) */, sfcontrStruc /*Cтруктура sfcontr*/, CommNumber_sfacrpay )

    record sfcontr( sfcontr );
    record calcal (sfcalcal);

    var rs, stat;
    var DayEndTime, DocTime, DocDate, CommNumber, CommSum = $0;
    var CommQuont = 0;
    var TarifValue = $0, MinValue = $0, MaxValue = $0, TarifType = 0;
    var OneOpCommSum = $0;

    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    /* EVG Номер комиссии берём тот, который передаёт sfacrpay. */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
       SetBuff( calcal, sfcalcal_addr );

       CommNumber = calcal.CommNumber;               // CommNumber берём из алгоритма
    else
       Copy ( sfcontr, sfcontrStruc );
       CommNumber = CommNumber_sfacrpay;             // CommNumber берём тот, который пришёл из sfacrpay.mac
    end;
    
    //Kozina 
    if ( VUZ_GetTarifInfo( sfcontr, BeginDate, EndDate, CommNumber, @TarifValue, @MinValue, @MaxValue, @TarifType ) )

       //msgbox ( TarifValue, "|", MinValue, " - ", MaxValue, "|", TarifType);

       /* EVG 03/05/2011 Чтение настройки с временем окончания опердня */
       DayEndTime = GetOperDayEndTime();

       rs = VUZ_GetCom3RecordSet( sfcontr.Object, CLB_DocOrigin, BeginDate, EndDate );

       while ( rs and rs.MoveNext() )

          // Только для внешних платежей
          if ( rs.Orientation == "ext" )

             if (     ( ( VUZ_isAccount_Jur( rs.PayerAccount )        // Плательщик - юр. лицо                                                      (
                          or VUZ_isAccount_IP( rs.PayerAccount ) )    // Плательщик - ИП
                        and
                        ( VUZ_isAccount_Jur( rs.ReceiverAccount )     // Получатель - юр. лицо
                          or VUZ_isAccount_IP( rs.ReceiverAccount ) ) // Получатель - ИП
                      )
                    or
                      ( ( ( VUZ_isAccount_Jur( rs.PayerAccount )                      // Плательщик - юр. лицо
                            or VUZ_isAccount_IP( rs.PayerAccount ) )                  // Плательщик - ИП
                          and VUZ_typeAccount_SalaryProject( rs.PayerAccount )        // Польз. тип счета плательщика содержит Z - зарплатный проект
                        )
                        and
                        ( VUZ_isAccount_Phis( rs.ReceiverAccount )                    // Получатель - физ. лицо
                          or VUZ_isAccount_Incomplete( rs.ReceiverAccount ) )         // Получатель - счёт незавершенных расчётов
                      )
                )

                /* Получим время платежа */
                DocTime = gettimeP( rs.PaymentId, EndDate, @DocDate );

                /* EVG 03/05/2011 Теперь время документа сравнивается не с абстрактной циферкой 16,
                   а с временем продления опердня из реестра (умолч. 16:00).
                
                TimeSplit( DocTime, hh, mm );
                                                           
                //msgbox (hh, " - ", mm, "|", DocDate);
                /* Если платёж проведён после 16-00 и дата ввода платежа равна дате проводки (т.е. дате, за которую рассчитываем комиссию) */
                if ( (hh >= 16) and (DocDate == EndDate) )
                */
                if ( ( DocTime >= DayEndTime ) and ( DocDate == EndDate ) )

                   // Тариф = Сумма
                   if ( TarifType == 1 )        

                      CommSum = CommSum + TarifValue;

                   // Тариф = Процент
                   elif ( TarifType == 2 )        

                      OneOpCommSum = rs.t_amount * TarifValue / 100;

                      if   ( (MinValue > $0) and (OneOpCommSum < MinValue) )
                         OneOpCommSum = MinValue;
                      elif ( (MaxValue > $0) and (OneOpCommSum > MaxValue) )
                         OneOpCommSum = MaxValue;
                      end;
                      
                      CommSum = CommSum + OneOpCommSum;

                   end;
                   //msgbox (TarifValue, " - ", OneOpCommSum, "|", CommSum);
                end;
                   
             end;

          end;

       end;

    end;

    //msgbox (CommSum);
    
    
    /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommSum > $0)
          return true;
       end;
       return false;
    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_SUM;
    sfbassum.baseSum     = CommSum;

    sfbassum.baseType2   = SF_BASETYPE_SUM;
    sfbassum.baseSum2    = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

