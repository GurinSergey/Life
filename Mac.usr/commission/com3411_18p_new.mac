/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   ████████   ████████
   ███   ███  ███   ███
   ███  ████  ███  ████
   ███████    ███████
   ███  ███   ███  ███
   ███   ███  ███   ███

   RR Рахмедов Р.С.

   Имя файла: com3411_18p_new.mac

   Создан:    31.03.2015 (C-38491)

   Описание:  Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.4.11-3.4.18, с использование пакета, предыдущая версия хранится 
              в com3411_18p_new.mac
              
   ChangeLog:
-----------------------------------------------------------------------------------------------------------------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, cb_sql, globals;

/*Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

/*Тип величиныenum SfBaseTypes*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );

/*Расчет для периодических комиссий*/
 MACRO CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
       sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/, _ComNumber /*FIV ID комиссии из sfacrpay*/ )

     record sfcontr( sfcontr );
     record sfcalcal(sfcalcal);
     var stat, cmd, rs, ComNumber, ComCode;
     var CommQuont   = 0,
         CommSum     = $0;

     debugbreak;
     /*FIV Берем параметры алгоритма комиссии*/
     if ( ValType (sfcontr_addr) != V_UNDEF )
        SetBuff( sfcalcal, sAddr );
        ComNumber = sfcalcal.CommNumber;
     else
        ComNumber = _ComNumber;
     end;
    
     /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
     if ( ValType (sfcontr_addr) != V_UNDEF )
        SetBuff( sfcontr, sfcontr_addr );
     else
        Copy ( sfcontr, sfcontrStruc );
     end;
     
     cmd = RSDCommand( " select t_code from dsfcomiss_dbt where t_feetype = 1 and t_number = :1 ");
     cmd.AddParam("1", RSDBP_IN, ComNumber);
     rs = RSDRecordSet(cmd);
     rs.movenext();
     ComCode = rs.value(0);
     
     rs = RSDRecordSet("select t_code from dsfcomiss_dbt where t_feetype = 1 and t_number = ");
     
     cmd = RSDCommand( " SELECT (USR_COMISS_PRBB_3411_18.COMMISSIONCALCULATION ( p_account     => :1, "+
                       "                                                         p_end_date    => :2, "+
                       "                                                         p_comiss_code => :3, "+
                       "                                                         p_need_calc   => :4, "+
                       "                                                         p_rday        => :5, "+
                       "                                                         p_rmonth      => :6, "+
                       "                                                         p_bics        => :7)) "+
                       "  FROM   DUAL; ");
                  
     cmd.AddParam("1", RSDBP_IN, sfcontr.object);
     cmd.AddParam("2", RSDBP_IN, EndDate);
     cmd.AddParam("3", RSDBP_IN, ComCode);
     cmd.AddParam("4", RSDBP_IN, 0);
     cmd.AddParam("5", RSDBP_IN, 0);
     cmd.AddParam("6", RSDBP_IN, 0);
     cmd.AddParam("7", RSDBP_IN, ExecMacroFile("lib_comiss_common", "getBICsBanks"));
     rs = RSDRecordSet(cmd);
     rs.movenext();
     if (rs.value(0) > 0)
       CommQuont = rs.value(0);
     end;

     /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
     if ( ValType (sfcontrStruc) != V_UNDEF )
        if (CommQuont > 0)
           return true;
        end;
        return false;
     end;

     ClearRecord(sfbassum);

     sfbassum.baseType    = SF_BASETYPE_QUONT;
     sfbassum.baseQuont   = CommQuont;

     sfbassum.baseType2   = SF_BASETYPE_QUONT;
     sfbassum.baseQuont2  = CommQuont;

     stat = InsertSumList(sfbassum);

     if( stat )
       MsgBox("Ошибка при вставке базовой суммы");
     end;

    
 END;/*CalcServiceSum*/