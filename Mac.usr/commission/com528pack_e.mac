/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Макрос пользовательского алгоритма расчёта базовых сумм комиссий 5.2.8pack
       "Выдача наличных с оформлением заявки в течение предыдущего опер. дня:
          - прочее (на сумму свыше 3 млн. руб.)

       Тип комиссии - единовременная.


   EVG 23/11/2012 Принято решение комиссию отключить.

   30.01.2014 joy Перенос модификации от 18.12.2013 R-302120  Добавлена проверка на то, проставлена ли категория 5.2.10

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ptinter, cb_sql;/*InsertSumList*/
import CommissLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

record sfbassum( "sfbassum.str" );
record paym(pmpaym);

/* Символ кассы, по которому берётся данная комиссия */
CONST CommCashSymbol = "('42', '46', '47', '53', '54', '58', '59', '60', '61')";    // прочие и т.п.
//18.12.2013 joy R-302120 
/* Номер категории, которая определяет тариф для платежей (Тариф 5.2.10) */
const Tarif5210Number = "5.2.10";
/* ID Категории "Вид тарифа комиссии 5.2.10 за выдачу разового кредита, предоставленного банком" */
const GroupID = 26;

/*
    Расчет для единовременных комиссий
*/
macro CalcCommissionSum( docKind/*Тип первички*/, Doc/*Буфер первички*/, sfcalcalusr_addr/*Алгоритм расчета*/, sfcontr_addr /*Договор обслуживания*/, beginDate, endDate  )
    record sfclusr( "sfclusr.str" );
    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    record cashDoc(pscshdoc);

    var stat:integer; 
    var query, rs;
    var CommSum   = $0,
        SymbSum   = $0,
        Num, retVal,
        TotalCashSum;
    var TarifValue = 0, MinValue = 0, MaxValue = 0, TarifType = 0;

        
    SetBuff( sfcalcal, sfcalcalusr_addr );
    SetBuff( sfcontr, sfcontr_addr );
    SetBuff( cashDoc, Doc );

    /* 18.12.2013 joy R-302120  Получим значение категории "Вид тарифа комиссии 5.2.10 за выдачу разового кредита, предоставленного банком" */
    Num = "";

    ClearRecord(paym);
    paym.PaymentID = cashDoc.AutoKey;                    

    GetMainObjAttr (retVal, OBJTYPE_PAYMENT, UniID(paym, OBJTYPE_PAYMENT), GroupID, null, null, Num);


    debugbreak;
    // Комиссия по чекам
    if ( ( docKind == CASH_PS_OUTORDER ) and (Num != Tarif5210Number) )

       rs = GetComBank52RecordSet( cashDoc.IsCurrency, cashDoc.DocKind, cashDoc.AutoKey, CommCashSymbol );
       while( rs and rs.moveNext() )
          SymbSum = SymbSum + rs.value(0, null, V_MONEY);
       end;


       /* По решению, принятому 23/11/2012, комиссия 5.2.8pack взимается только с чеков, сумма которых превышает 
          3 млн. руб. + лимит по ТП. Поэтому при расчёте комиссии не нужно определять общую сумму чеков с начала месяца,
          достаточно суммы самого чека. */

       if( GetTarifInfo( sfcontr, EndDate, EndDate, 3, sfcalcal.CommNumber, @TarifValue, @MinValue, @MaxValue, @TarifType ) )

          var OverLimitSum = SymbSum - MaxValue;

          /* Функция отберёт только чеки с OverLimitSum > 3 млн. */
          if( Cash_IsProperCommission( sfcontr, sfcalcal, OverLimitSum ) )

             /* Комиссия считается с общей суммы перелимита чека */ 
             CommSum = OverLimitSum * TarifValue / 100;

          end;

       end;

    end;

    ClearRecord(sfbassum);


    sfbassum.baseType  = SF_BASETYPE_SUM;
    sfbassum.baseSum   = CommSum;

    sfbassum.baseType2  = SF_BASETYPE_SUM;
    sfbassum.baseSum2   = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы: ", GetErrMsg );
    end;

    
    
    /*return integer( 1 ); -- количество*/
    
    /*return $1; -- сумма */
    
end;/*CalcCommissionSum*/




/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

