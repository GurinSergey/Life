/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    ███████       █████      █████     ███
    █████████   ████████   ████████    ███
    ███   ███   ███        ███         ███
    ████████     ███████    ███████    ███
    ██████            ███        ███   ███
    ███ ████    █████████  █████████   ████████
    ███   ████    █████      █████     ████████

   R-Style Softlab
   
   Автор: Финогенов Иван
   
   Дата создания: 03.08.2010
   
   Имя файла: connectsfcontr.mac

   Описание: Макрос процедуры отключения комиссий одного вида от всех договоров и подключения обратно только по тем, по которым
             алгоритм расчета базовых величин вернет, что комиссия должна взиматься 

   ChangeLog:
   
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 19.02.2014 Адаптирую под 2031(darhdoc_dbt -> dacctrn_dbt)
   //joy 17.11.2014 I-00532241 в 2031 обязательно надо проверять, что t_state в проводках = 1
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import cb_sql;
private const Com347 = 1017, 
              Com348 = 1018,
              Cat348 = 5; /*3.4.8 (i)*/
private var Comiss,FeeType, sql, sqlfull, rs, cmd, BeginDate, EndDate;




private macro Main() 
   private array a;
   private var sel, AddTable;


   a[0] = "3.4.7";
   a[1] = "3.4.8";

   sel = Menu(a, "Выберите вид комиссии");
   if (sel == 0)
     Comiss = Com347;
     FeeType= 1;
   elif (sel == 1)
     Comiss = Com348;
     FeeType= 1;
   end;
   GetDate(EndDate, "Введите дату окончания периода, |за который начисляется комиссия");
   BeginDate = EndDate;
   /*Сохраняем id ссылок между комиссиями и договорами во временную таблицу*/
   SQL =       "BEGIN ";
   SQL = SQL + "   EXECUTE IMMEDIATE 'drop table idconcom_tmp'; ";
   SQL = SQL + "   EXECUTE IMMEDIATE 'create table idconcom_tmp as ( SELECT t_id FROM dsfconcom_dbt WHERE ";
   SQL = SQL + "   t_objecttype = 659  ";
   SQL = SQL + "   AND t_status = 0 ";
   SQL = SQL + "   and t_feetype = "+FeeType+"  ";
   SQL = SQL + "   AND t_commnumber = "+Comiss+")';  ";
   SQL = SQL + "   EXCEPTION ";
   SQL = SQL + "   WHEN OTHERS ";
   SQL = SQL + "   THEN ";
   SQL = SQL + "      NULL; ";
   SQL = SQL + "END; ";
   cmd = rsdcommand(SQL);
   cmd.Execute;


/*Отключаем комиссии данного вида от всех договоров где она включена*/
   SQL =       "               UPDATE dsfconcom_dbt SET t_status = 1 ";
   SQL = SQL + "               WHERE       t_objecttype = 659 ";
   SQL = SQL + "                      AND t_status = 0 ";
   SQL = SQL + "                      AND t_feetype =  ? ";
   SQL = SQL + "                      AND t_commnumber = ? ";
   cmd = rsdcommand(SQL);
   cmd.AddParam("", RSDBP_IN,FeeType);
   cmd.AddParam("", RSDBP_IN,Comiss);
   cmd.Execute;


/*Отбираем записи комиссий, привязанных на договоре и ставим им статус "Начисляется", если должна сегодня взиматься комиссия*/
   if (Comiss == Com348)
      AddTable = ", dobjatcor_dbt oc ";
   end;
   SQL = " SELECT   cnm.t_id ";
   SQL = SQL + "  FROM   dpmpaym_dbt paym, ";
   SQL = SQL + "         dpspayord_dbt ord, ";
   SQL = SQL + "         dpmrmprop_dbt prop, ";
   SQL = SQL + "         daccount_dbt acc, ";
   SQL = SQL + "         dsfcontr_dbt cntr, ";
   SQL = SQL + "         dsfconcom_dbt cnm " + AddTable;
   SQL = SQL + " WHERE       paym.t_payeraccount = cntr.t_object ";
   SQL = SQL + "         AND cntr.t_fiid = 0 ";
   SQL = SQL + "         AND cntr.t_servkind = 3 ";
   SQL = SQL + "         AND cntr.t_objecttype = 1 ";
   SQL = SQL + "         AND cnm.t_commnumber =  "+Comiss; /*вид комиссии*/
   SQL = SQL + "         AND cnm.t_feetype = 1 ";
   SQL = SQL + "         AND cnm.t_objectid = cntr.t_id ";
   SQL = SQL + "         AND cnm.t_objecttype = 659 ";
   SQL = SQL + "         AND acc.t_account = paym.t_payeraccount ";
   SQL = SQL + "         AND acc.t_chapter = 1 ";
   SQL = SQL + "         AND INSTR (acc.t_type_account, 'Z') = 0 ";
   SQL = SQL + "         AND SUBSTR (paym.t_receiveraccount, 1, 3) NOT BETWEEN '401' ";
   SQL = SQL + "                                                           AND  '404' ";
   SQL = SQL + "         /* Кроме платежей на счета физ. лиц */ ";
   SQL = SQL + "         AND SUBSTR (paym.t_receiveraccount, 1, 3) NOT IN ('423', '426') ";
   SQL = SQL + "         AND SUBSTR (paym.t_receiveraccount, 1, 5) NOT IN ";
   SQL = SQL + "                  ('40817', '40820', '30232') ";
   SQL = SQL + "         AND paym.t_paymstatus = 32000 ";
   SQL = SQL + "         AND paym.t_payerbankid <> paym.t_receiverbankid ";
   SQL = SQL + "         AND ord.t_orderid = paym.t_documentid ";
   SQL = SQL + "         AND prop.t_paymentid = paym.t_paymentid ";
   SQL = SQL + "         AND prop.t_shifroper <> 16 ";
   SQL = SQL + "         AND EXISTS ";
   SQL = SQL + "               (SELECT   ARH.T_ACCTRNID ";
   SQL = SQL + "                  FROM   dacctrn_db arh, dpmdocs_dbt pmd ";
   SQL = SQL + "                 WHERE       ARH.T_ACCTRNID = PMD.T_ACCTRNID ";
   SQL = SQL + "                         AND pmd.t_paymentid = paym.t_paymentid ";
   SQL = SQL + "                         AND arh.t_chapter = 1 ";
   SQL = SQL + "                         AND arh.t_state = 1 ";
   SQL = SQL + "                         AND arh.t_date_carry BETWEEN TO_DATE ('"+string(BeginDate)+"', ";
   SQL = SQL + "                                                               'dd.mm.yyyy') ";
   SQL = SQL + "                                                  AND  TO_DATE ('"+string(EndDate)+"', ";
   SQL = SQL + "                                                                'dd.mm.yyyy')) ";
   if (Comiss == Com348) 
       SQL = SQL + "         AND oc.t_objecttype = 501 ";
       SQL = SQL + "         AND oc.t_groupid = 10 ";
       SQL = SQL + "         AND oc.t_attrid =  "+Cat348;
       SQL = SQL + "         AND oc.t_object = LPAD (paym.t_documentid, 10, 0) ";
   end;
   SQLFULL =       "               UPDATE dsfconcom_dbt SET t_status = 0 WHERE t_id IN ("+SQL+")";
   cmd = rsdcommand(SQLFULL);
   cmd.Execute;

/*   SQLFULL =       "               SELECT COUNT(*) count FROM ("+SQL+")";
   rs = rsdRecordSet(SQLFULL);
   rs.MoveNext();*/
   msgbox(string(/*"Комиссия возмется по ", rs.Value(0), " договорам |*/"Запустите процедуру оплаты комиссии!!! "));

/*   /*Возвращаем состояние таблицы dsfconcom_dbt до запуска процедуры*/
   SQL = " BEGIN ";
   SQL = SQL + " /*  UPDATE   dsfconcom_dbt ";
   SQL = SQL + "      SET   t_status = 0 ";
   SQL = SQL + "    WHERE   t_id IN (SELECT   t_id FROM idconcom_tmp); ";
   SQL = SQL + "   EXECUTE IMMEDIATE 'drop table idconcom_tmp'; */";
   SQL = SQL + "EXCEPTION ";
   SQL = SQL + "   WHEN OTHERS ";
   SQL = SQL + "   THEN ";
   SQL = SQL + "      NULL; ";
   SQL = SQL + "END; ";
   cmd = rsdcommand(SQL);
   cmd.Execute;
*/
end;
Main();
