/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   RR Банк "Газэнергобанк" (ГЭБ)
   ТП Торговый
   
       Макрос пользовательского алгоритма расчёта базовых сумм по комиссиям 
       5.5.3 "Прием и зачисление наличных средств на счет клиента
                    - свыше 100 тыс. руб. (купюры) "

       Тип комиссии - единовременная.

       Если платёж помечен признаком категории "Вид тарифа комиссии за прием и 
       зачисление наличных (5.5)", комиссия не взимается.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/


import sfinter, ptinter;/*InsertSumList*/

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
    record sfbassum( "sfbassum.str" );
record paym(pmpaym);



/* ID Категории "Вид тарифа комиссии за прием и зачисление наличных (5.5)" */
const GroupID = 20;

/* Номер категории, которая определяет тариф для платежей
   (Тариф 5.5.1) */
const Tarif551Number = "5.5.1";


/*
    Расчет для единовременных комиссий
*/
macro CalcCommissionSum( docKind/*Тип первички*/, Doc/*Буфер первички*/, sfcalcalusr_addr/*Алгоритм расчета*/, sfcontr_addr /*Договор обслуживания*/, beginDate, endDate  )
    record sfclusr( "sfclusr.str" );
    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    record payord(pspayord);

    var stat:integer; 
    var query, rs;
    var CommQuont = 0,
        CommSum   = $0,
        PaymValue = $0,
        num,
        retVal,
        error;
    

    SetBuff( sfcalcal, sfcalcalusr_addr );
    SetBuff( sfcontr, sfcontr_addr );
    SetBuff( payord, Doc );




    // Комиссия по ОВН
    if ( docKind == CASH_PS_INCORDER )

       /* Получим значение категории "Вид тарифа комиссии за перевод средств" */
       Num = "";

       ClearRecord(paym);
       paym.PaymentID = payord.OrderID;                    // V.6.20: PaymentID = OrderID

       GetMainObjAttr (retVal, OBJTYPE_PAYMENT, UniID(paym, OBJTYPE_PAYMENT), GroupID, null, null, Num);

       
       /* Взимается только если не стоит категория "Тариф 5.5.1" */
       if (Num != Tarif551Number)

          /* Получим сумму платежа */
          query = " Select paym.t_Amount, paym.t_FIID " +
                  "   From DPmPaym_dbt paym " +
                  "  Where paym.t_DocKind      = " + docKind +
                  "    and paym.t_DocumentID   = " + payord.OrderID;
          rs = rsdRecordSet(query);
          /* Только по рублям */
          if (rs.MoveNext())
             if (rs.value(1, null, V_INTEGER) == 0)
                PaymValue = rs.value(0, null, V_MONEY);
             end;
          end;

       end;

       if ( (PaymValue > $100000)
             and
            (PaymValue <= $1000000) )
          CommQuont = 1 ;
       end;
 
    end;

    ClearRecord(sfbassum);

    sfbassum.baseType      = SF_BASETYPE_QUONT;
    sfbassum.baseQuont    = CommQuont;

    sfbassum.baseType2     = SF_BASETYPE_QUONT;
    sfbassum.baseQuont2   = CommQuont;
    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы: ", GetErrMsg );
    end;

    
    
    /*return integer( 1 ); -- количество*/
    
    /*return $1; -- сумма */
    
end;/*CalcCommissionSum*/




/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

