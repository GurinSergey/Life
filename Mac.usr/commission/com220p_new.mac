/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Макрос пользовательского алгоритма расчёта базовых сумм комиссии 2.2.0
       "Единая комиссия за ведение счетов клиентов", новый вариант (заявка C-12944)

       Тип комиссии - периодическая.
   
   ChangeLog:
//EVG 27/08/2012 Созданы 2 константы CheckRegDate_Plan и CheckRegDate_Date = date(1,9,2012), для проверки даты регистрации
//EVG 07/09/2012 Добавлен ТП № 89 "Мой город"
//RR  06.02.2012 Была добавлена константа со списком ТП, для которых проверяются обороты по счету TpFCheck:
                 - 9  Консалтинговый           (id = 9);
                 - 12 Персональный             (id = 12);
                 - 59 Персональный (регионы)   (id = 70);
                 - 85 Партнер (регионы)        (id = 97);
//RR 06.02.2013 Был произведен рефакторинг когда и переход от импорта к ExecMacroFile
//joy 20.02.2013 Добавлен sfcontr.id в вызов функции CheckTP
// joy 29.07.2013 C-21117 Добавлены проверки по новым авансовым комиссиям 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, currinter, fiinter, cb_sql, rsd;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";
var CommmNumber = 1002;

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );
record sfcontr( sfcontr );

const CheckRegDate_Plan = "73|61|102",                  // ТР № 62 "Стартовый", № 0 "Стартовый (регионы)", № 89 "Мой город"
      CheckRegDate_Date = date(1,9,2012),               // 1.08.2012
      TpFCheck = "9, 12, 70, 97";

/*Расчет для периодических комиссий*/

/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/, _ComNumber /*FIV ID комиссии из sfacrpay*/ )

    var stat, rrstat;
    var CommQuont = 1,
        flg       = true;

    debugbreak;
    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;

    debugbreak;

    rrstat = ExecMacroFile ("Commisslib.mac", "CheckCatOnAcc", sfcontr.PARTYID);
    
    if ((rrstat == 1) or (rrstat == 3) or (rrstat == 4) or (rrstat == 222) or (rrstat == 223) or (rrstat == 224))
      flg       = false;
      CommQuont = 0;
    end;
    
    if (flg)
    
      if ( ExecMacroFile ("Commisslib.mac", "CheckClientRegistration", EndDate, sfcontr, CheckRegDate_Plan, CheckRegDate_Date) or           // EVG 27/08/2012 добавлена проверка на дату регистрации клиента
           ExecMacroFile ("Commisslib.mac", "CheckYearCom",            BeginDate, EndDate, sfcontr) or
           ExecMacroFile ("Commisslib.mac", "CheckRestricted_New",     sfcontr) or
           ExecMacroFile ("Commisslib.mac", "CheckArrested_New",       EndDate, sfcontr) or
           ExecMacroFile ("Commisslib.mac", "CheckIndex2_New",         EndDate, sfcontr)
         )

         CommQuont = 0;
      end; 
      
    end; 

    /* Если освобождения от комиссии ещё нет */
    if( (CommQuont != 0) and ExecMacroFile ("Commisslib.mac", "CheckTP", sfcontr.id, TpFCheck))
          /* При отсутствии оборотов, освобождаем от комиссии
             Обороты нужно анализировать за месяц взимания комиссии. Передавать даты начала / окончания УПК
             (BeginDate/EndDate) нельзя, т.к. в некоторых случаях система разбивает период на несколько УПК
             (например, при смене ТП), и оплата выполняется только последней из УПК (по правилам банка, оп-
             лата производится по тарифу последнего действующего ТП). В этом случае и в анализ оборотов си-
             стема передаст период последней УПК, в течение которого оборотов может и не быть.*/
          var mm, yy;
          dateSplit( BeginDate, null, mm, yy );
          if( ExecMacroFile ("Commisslib.mac", "CheckOborot", sfcontr, date(1, mm, yy), EndDate))// Дату окончания оставим как есть, она нормальная.
             CommQuont = 0;
          end;
    end;
    
    /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommQuont > 0)
          return true;
       end;
       return false;
    end;

    ClearRecord(sfbassum);

    sfbassum.baseType = SF_BASETYPE_QUONT;
    sfbassum.baseQuont  = CommQuont;

    sfbassum.baseType2 = SF_BASETYPE_QUONT;
    sfbassum.baseQuont2  = CommQuont;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

end;/*CalcServiceSum*/

/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*Печать строчки отчета подробного отчета о расчете периодической комиссии*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*Печать окончания отчета подробного отчета о расчете периодической комиссии*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

