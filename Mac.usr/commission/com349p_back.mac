/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.4.9
       "Прочие платежи в пользу физических лиц-клиентов других банков".

       Тип комиссии - периодическая.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, cb_sql, CommissLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );
record paym(pmpaym);



/*
    Расчет для периодических комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/ )

    record sfcontr( sfcontr );
    var query, rs, cmd, stat;
    var CommQuont   = 0,
        CommSum     = $0;
    var retVal, Attrid, Code, Num, TarifValue, TariffMinSum, TariffMaxSum, CurrentDocCommiss;

    debugbreak;
    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;


    /* Получим значение тарифа и min/max сумм */
    TarifValue = TariffMinSum = TariffMaxSum = $0;

    query = " Select NVL(trf.t_TarifSum/10000, 0), NVL(trf.t_MinValue/10000, 0), NVL(trf.t_MaxValue/10000, 0) " +
            "   From DSFTARIF_DBT trf, DSFTARSCL_DBT scl, DSFCOMISS_DBT com, DSFCONTRPLAN_DBT plan " +
            "  Where com.t_FeeType    = 1 " +               // Тип взимания: периодическое
            "    and com.t_Code       = '3.4.9' " +
            "    and plan.t_SfContrID = ? " +
            "    and plan.t_Begin     = ( Select max(t_Begin) from DSFCONTRPLAN_DBT " +
            "                              Where t_SfContrID = plan.t_SfContrID " +
            "                                and t_Begin <= ?  ) " +
            "    and scl.t_FeeType    = com.t_FeeType " +              
            "    and scl.t_CommNumber = com.t_Number " +
            "    and scl.t_BeginDate  = ( Select max(t_BeginDate) from DSFTARSCL_DBT " +
            "                              Where t_FeeType         = com.t_FeeType " +
            "                                and t_CommNumber      = com.t_Number " +
            "                                and t_BeginDate between ? "  +
            "                                                    and ? "  + 
            "                                 or t_BeginDate       = to_date('01.01.0001','dd.mm.yyyy') ) " +
            "    and scl.t_ObjectType   = 57 " +                                                                // Тарифгый план
            "    and scl.t_ObjectID     = plan.t_SfPlanID " +
            "    and trf.t_TarSclID     = scl.t_ID " +
            "    and trf.t_BaseSum      = 0 ";
    debugbreak;
    cmd = rsdcommand(query);
    cmd.AddParam("", RSDBP_IN,sfcontr.ID);
    cmd.AddParam("", RSDBP_IN,EndDate);
    cmd.AddParam("", RSDBP_IN,BeginDate);
    cmd.AddParam("", RSDBP_IN,EndDate);
    rs = rsdRecordSet( cmd );
    if (rs and rs.moveNext())
       TarifValue = rs.value(0, null, V_DOUBLE);
       TariffMinSum = rs.value(1, null, V_DOUBLE);
       TariffMaxSum = rs.value(2, null, V_DOUBLE);
    end;
    
    //msgbox (TarifValue, "|", TariffMinSum, "|", TariffMaxSum);
    //msgbox (query);
    
    
    rs = null;
    rs = GetComToPhisFacesRecordSet( sfcontr.Object, PMGROUP_External, BeginDate, EndDate );
    while (rs and rs.moveNext())

       CurrentDocCommiss = rs.Value (0, null, V_MONEY) * TarifValue / 100;

       /* Наложение min / max */
       /*FIV Добавил проверку что мин и макс суммы больше нуля*/
       if ((TariffMaxSum > 0) and ( CurrentDocCommiss > TariffMaxSum ))
          CurrentDocCommiss = TariffMaxSum;
       elif ((TariffMinSum > 0) and ( CurrentDocCommiss < TariffMinSum ))
          CurrentDocCommiss = TariffMinSum;
       end;

       CommSum = CommSum + CurrentDocCommiss;
       //msgbox (rs.Value (0, null, V_MONEY), "|", CurrentDocCommiss, "|", CommSum);
       
    end;
       //msgbox (CommSum);

    /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommSum > 0)
          return true;
       end;
       return false;
    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_SUM;
    sfbassum.baseSum     = CommSum;

    sfbassum.baseType2   = SF_BASETYPE_SUM;
    sfbassum.baseSum2    = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

