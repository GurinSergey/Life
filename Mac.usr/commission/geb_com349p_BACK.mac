/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Банк "Газэнергобанк" (ГЭБ)

       Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.4.9
       "Прочие платежи в пользу физического лица по системе <Интерет-Клиент> и
        на бумажных носителях, за исключением: - платежей на заработную плату и 
        приравненных к ней выплатам;- алиментов;- кредитных ресурсов".

       Тип комиссии - периодическая.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, cb_sql, globals;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );
record paym(pmpaym);

//RR Из название переменной все ясно
//private var БИКиБанковГруппы = "044525986, 046311808, 046577781, 042908701, 046577859, 040702756, 042007755, 047308902, 041806835";

/*
    Расчет для периодических комиссий
*/
/* EVG Добавил приём структуры sfcontr для вызова из макроса sfacrpay.mac */
macro CalcServiceSum( sfcontr_addr/*Договор обслуживания*/, BeginDate/*Начало периода*/, EndDate/*Конец периода*/,
      sAddr /* EVG Какой-то ещё адрес */, sfcontrStruc /*Cтруктура sfcontr*/ )

    record sfcontr( sfcontr );
    var SQL, rs, cmd, stat;
    var CommQuont   = 0,
        CommSum     = $0;

    /* EVG При вызове из sfacrpay.mac используем полученную структуру sfcontrStruc вместо адреса sfcontr_addr */
    if ( ValType (sfcontr_addr) != V_UNDEF )
       SetBuff( sfcontr, sfcontr_addr );
    else
       Copy ( sfcontr, sfcontrStruc );
    end;

    SQL = " SELECT NVL( SUM( PAYM.T_AMOUNT ), 0 ) ";
    SQL = SQL + "  FROM   DPmPaym_dbt paym, dpmrmprop_dbt rm ";
    SQL = SQL + " WHERE       paym.t_PayerAccount = ? ";
    SQL = SQL + "         AND paym.t_PaymStatus = 32000 ";                                                      // Только закрытые
    SQL = SQL + "         AND rm.t_paymentid = paym.t_paymentid ";
    SQL = SQL + "         AND SUBSTR (paym.t_ReceiverAccount, 1, 3) NOT BETWEEN '401' AND '404' ";              // Кроме бюджетных платежей
    /* Счёт плательщика - счёт юр. лица */
    SQL = SQL + "         AND (SUBSTR (paym.t_PayerAccount, 1, 3) BETWEEN '405' AND '407' ";
    SQL = SQL + "              OR SUBSTR (paym.t_PayerAccount, 1, 5) IN ('40807', '40802')) ";
    /* Счёт получателя - счёт физ. лица */
    SQL = SQL + "         AND (   ( SUBSTR (paym.t_ReceiverAccount, 1, 3) IN ('423', '426') ";
    SQL = SQL + "                   OR SUBSTR (paym.t_ReceiverAccount, 1, 5) IN ('40817', '40820', '30232') ";                                                     // Проверки назначения платежа
    SQL = SQL + "                   OR (   REGEXP_LIKE (rm.t_ground, '(40817|40820)\\d{15}') ";                                                                    // 1. Есть счета 40817 / 40820 / 30232 в назначении
    SQL = SQL + "                       OR REGEXP_LIKE (rm.t_ground, '(423|426)\\d{17}') ";                                                                        // 2. Есть счета 423 - 426 в назначении
    SQL = SQL + "                       OR REGEXP_LIKE ('\\s' || LOWER (rm.t_ground), '(\\sп\\.карта|п/карта|карточный\\sсчет|\\sп/к\\s)') ";                                       // 3. Есть текст в назначении
    SQL = SQL + "                       OR REGEXP_LIKE ('\\s' || LOWER (rm.t_ground), '(\\sпк.№\\d{12}\\s|\\sпк|№\\d{12}\\s|\\sпк.№\\d{4}.\\d{4}.\\d{4}.\\d{4}.\\s|\\sпк.№.\\d{4}.\\d{4}.\\d{4}.\\d{4}.\\s)')  ";//RR 22.08.2012
    SQL = SQL + "                       OR REGEXP_LIKE ('\\s' || LOWER (rm.t_ground), '(\\sбк.№\\d{12}\\s|\\sбк|№\\d{12}\\s|\\sбк.№\\d{4}.\\d{4}.\\d{4}.\\d{4}.\\s|\\sбк.№.\\d{4}.\\d{4}.\\d{4}.\\d{4}.\\s)')) ";//по заявке I-00239812-2
    SQL = SQL + "                 AND NOT REGEXP_LIKE  ('\\s' || LOWER (rm.t_ground), '(зар\\.плата|зарплат[а-я]|з/п|\\sзп\\s|з\\.п|кредит[а-я]|аванс|пособие|стипенд[а-я][а-я])') ";      // 4. Нет текста в назначении
    SQL = SQL + "                 AND NOT REGEXP_LIKE  ( LOWER (rm.t_ground), 'заработн[а-я][а-я]\\sплат[а-я]' ) ";                                                // 5. Нет текста в назначении

    /* EVG 27/07/2012 Добавлены исключения беременност*(любое окончание), пособия (по просьбе Давида Акобия) */
    SQL = SQL + "                 AND NOT REGEXP_LIKE  ( LOWER (rm.t_ground), 'беременност|пособия' ) ";                                                           // 6. Нет текста в назначении
    SQL = SQL + "                 AND NOT REGEXP_LIKE  ( LOWER (rm.t_ground), 'беременност|пособия' ) ";
                               /* По regexp: \s - пробел, \. - точка */
    SQL = SQL + "                 ) ";
    SQL = SQL + "              OR ";
    SQL = SQL + "                  ( SUBSTR (paym.t_ReceiverAccount, 1, 5) = '30301' ";
    SQL = SQL + "                    and REGEXP_LIKE (rm.t_ground, '(40817810|42301810)\\d{12}')";
    SQL = SQL + "                  ) ";
    SQL = SQL + "             )";
    
    

    SQL = SQL + "         AND paym.t_ReceiverBankID <> ? ";
    //SQL = SQL + "         AND paym.t_receiverbankid NOT IN ( SELECT code.t_objectid "; //RR 10.07.2012 Теперь платежи между банками группы комиссией не облагаются
    //SQL = SQL + "                                              FROM dobjcode_dbt code ";
    //SQL = SQL + "                                             WHERE code.t_code IN ("+БИКиБанковГруппы+") ";
    //SQL = SQL + "                                               AND code.t_codekind = 3 ";
    //SQL = SQL + "                                               AND code.t_objecttype = 3) ";
    SQL = SQL + "         AND EXISTS ";
    SQL = SQL + "               (SELECT /*+INDEX(arh darhdoc_dbt_idx5)*/ ";
    SQL = SQL + "                      arh.t_autokey ";
    SQL = SQL + "                  FROM   darhdoc_dbt arh, dpmdocs_dbt pmd ";
    SQL = SQL + "                 WHERE       arh.t_applicationkey = pmd.t_applicationkey ";
    SQL = SQL + "                         AND pmd.t_applicationkind = arh.t_iapplicationkind ";
    /*Чесноков Д.С. Отзывы с К2 проверим по наличию балансовой проводки.
                    Во всех других случаях по идее нас тоже интересуют только балансовые проводки */
    SQL = SQL + "                         AND arh.t_chapter = 1 ";
    SQL = SQL + "                         AND pmd.t_paymentid = paym.t_paymentid ";
    SQL = SQL + "                         AND arh.t_date_carry BETWEEN ? ";
    SQL = SQL + "                                                  AND ?) ";


    debugbreak;
    
    
    /*
    setoutput("d:\\12345.txt");
    println (SQL);
    println (sfcontr.Object, " - ", {OurBank}, " - ", BeginDate);
    setoutput(null);*/
    
    cmd = rsdcommand(SQL);
    cmd.AddParam("", RSDBP_IN, sfcontr.Object);
    cmd.AddParam("", RSDBP_IN, {OurBank});
    cmd.AddParam("", RSDBP_IN, BeginDate);
    cmd.AddParam("", RSDBP_IN, EndDate);
    rs = rsdRecordSet( cmd );
    
    if (rs and rs.moveNext())
       CommSum = rs.Value (0, null, V_MONEY);
    end;
    //msgbox (CommSum);

    
    /* EVG При вызове из sfacrpay.mac возвращаем true в случае положительного результата расчёта */
    if ( ValType (sfcontrStruc) != V_UNDEF )
       if (CommSum > 0)
          return true;
       end;
       return false;
    end;

    
    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_SUM;
    sfbassum.baseSum     = CommSum;

    sfbassum.baseType2   = SF_BASETYPE_SUM;
    sfbassum.baseSum2    = CommSum;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

