/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   EVG Макрос пользовательского алгоритма расчёта базовых сумм комиссии 3.4.1v
       "Перевод средств в пользу клиентов других банков, принятый к исполнению 
        до 13-00 текущего дня:
        - с оговоркой "все комиссии и расходы списать с нашего счета" (по 
          операциям в иностранной валюте. кроме ЕВРО)".

       Тип комиссии - единовременная.
       
  ChangeLog:
  
//RR 07.11.2012 В описании сказано что комиссия только за внешние доки, однако на деле такой проверки не оказалось, толи потеряли, толи не написали
                добавил соотвествующую проверку.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import sfinter, ctinter, fiinter, cb_sql;
import CommissLib;

/*
    Если при расчете произошла ошибка, поместить в эту переменную ненулевое значение
*/
var MacroError :integer = 0;
private var FICode_calc:string = "";

  /* Тип величины
enum SfBaseTypes{*/
private const   SF_BASETYPE_SUM     = 1;      /* Сумма*/
private const   SF_BASETYPE_QUONT   = 2;      /* Количество*/

private const NATCUR = 0;
record sfbassum( "sfbassum.str" );
record cpord(pscpord);



/* ID Категории "Время поступления платежа в Банк (для комиссий 3.4 / 3.5)" */
const GroupID = 1;

/* Значение категории */
const TarifCatNumber = "< 13 часов",
      ChargesType    = "OUR";



/*
    Расчет для периодических комиссий
*/
macro CalcCommissionSum( docKind/*Тип первички*/, Doc/*Буфер первички*/, sfcalcalusr_addr/*Алгоритм расчета*/, sfcontr_addr /*Договор обслуживания*/, beginDate, endDate  )
    record sfclusr( "sfclusr.str" );
    record sfcontr( sfcontr );
    record sfcalcal(sfcalcal);
    record payord(pspayord);

    var query, rs, stat;
    var CommQuont   = 0,
        CommSum     = $0;
    var retVal, Attrid, Code, Num, error;
    var PaymChrgKind;

    SetBuff( sfcalcal, sfcalcalusr_addr );
    SetBuff( sfcontr, sfcontr_addr );
    SetBuff( payord, Doc );

    PaymChrgKind = GetChargesKind( payord.OrderID );

    var RRPaym = rsbpayment(payord.OrderID);
    if (RRPaym.IsExternal == true)
          query = " select instr (nvl ((select upper (mes.t_value) "+
                                 "                      from dpmpaym_dbt p, dwlpm_dbt wlp, dwlmesval_dbt mes "+
                                 "                     where p.t_paymentid = "+payord.orderid+" "+
                                 "                       and wlp.t_paymentid = p.t_paymentid "+
                                 "                       and wlp.t_propstatus = 0 "+
                                 "                       and mes.t_mesid = (select max (d.t_mesid) "+
                                 "                                            from dwlmeslnk_dbt d "+
                                 "                                           where d.t_objid = wlp.t_wlpmid) "+
                                 "                       and mes.t_tpfieldid = 13), 0),'FULLPAY' ) val from dual ";
     rs = rsdRecordSet(query);
       if (rs and rs.moveNext())
         if (rs.value(0) == 0 )
           if ( (PaymChrgKind == CHARGESKIND_Our) and (ПолучитьКодФинИн(sfcontr.Fiid, error, FICK_ISONUMBER) != 978) )

              /* Получим значение категории "Время поступления платежа в Банк (для комиссий 3.4 / 3.5)" */
              Num = "";
              GetMainObjAttr (retVal, OBJTYPE_PSCPORDER, UniID(payord, OBJTYPE_PSCPORDER), GroupID, null, null, Num);

              if ( (Num == TarifCatNumber)
                     or
                   (Num == "") )

                 CommQuont = 1;
              end;
           end;
        end;
     end;

   end;
    
    ClearRecord(sfbassum);

    sfbassum.baseType    = SF_BASETYPE_QUONT;
    sfbassum.baseQuont   = CommQuont;

    sfbassum.baseType2   = SF_BASETYPE_QUONT;
    sfbassum.baseQuont2  = CommQuont;

    stat = InsertSumList(sfbassum);

    if( stat )
      MsgBox("Ошибка при вставке базовой суммы");
    end;

    
end;/*CalcServiceSum*/








/*
    Печать заголовка подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintHeader( sfrepdet )
    FICode_calc = "";
[----------------------------------------------------------------------------------------------------------------------];
[|             Сумма                    |             Ставка                   |              Итого                   |];
[|                                      |                                      |                                      |];
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintHeader*/

/*
    Печать строчки отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintLine( sfrepdet )
    var FICode_base, FICOde_tariff:string;
    file fininstr( fininstr )key 0;
    
    if(sfrepdet.baseType == SF_BASETYPE_SUM )
        fininstr.FIID = sfrepdet.FIID_baseSum;
        if( not GetEQ(fininstr))
            MsgBox("Не найдена валюта ", sfrepdet.FIID_baseSum );
            return 1;
        end;
        FICode_base = fininstr.FI_code;
    else
        FICode_base = "";
    end;

    fininstr.FIID = sfrepdet.FIID_tariff;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_tariff );
        return 1;
    end;
    FICOde_tariff = fininstr.FI_code;

    fininstr.FIID = sfrepdet.FIID_CalcSum;
    if( not GetEQ(fininstr))
        MsgBox("Не найдена валюта ", sfrepdet.FIID_CalcSum );
        return 1;
    end;
    FICode_calc = fininstr.FI_code;


[| ################### ################ | ################### ################ | ################### ################ |]

    ( sfrepdet.BaseSum, FICode_base,
        sfrepdet.tariff, FICOde_tariff,
        sfrepdet.CalcSum, FICode_calc );

    return 0;
end;/*CalcReportPrintLine*/

/*
    Печать окончания отчета подробного отчета о расчете периодической комиссии
*/
macro CalcReportPrintFooter( sfrepdet, TotalSum )

[----------------------------------------------------------------------------------------------------------------------];
[Итого за период                                                               | ################### ################ |]
(TotalSum, FICode_calc);
[----------------------------------------------------------------------------------------------------------------------];
    return 0;
end;/*CalcReportPrintFooter*/

