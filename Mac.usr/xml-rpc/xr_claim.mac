// -------------------------------------------------------------------------------------------------
// @filename: xr_claim.mac v.1
// @author  : 2013-05-01 zip_z. 
// @desc    : ТК Life - претензии
// @changes : none
// -------------------------------------------------------------------------------------------------

import xr_core;

macro usr_insert_claim (p_account         :string
                       ,p_oper            :integer
                       ,p_comment         :string
                       ,p_sum             :money
                       ):TXReturnValueStruct
    
    // дозаполнение параметров по умолчанию
    p_oper    = nvl_ex (p_oper, {oper});
    p_comment = nvl_ex (p_comment, "Блокировка остатка инициирована внешней системой");
    
    // транзакция вставки претензии
    var cmd = RSDCommand("begin usr_claims.insert_claim (:m_account, :m_oper, :m_comment, :m_sum, :m_error); end");
    
    cmd.addParam ("m_account", RSDBP_IN , p_account );
    cmd.addParam ("m_oper"   , RSDBP_IN , p_oper    );
    cmd.addParam ("m_comment", RSDBP_IN , p_comment );
    cmd.addParam ("m_sum"    , RSDBP_IN , p_sum     );
    cmd.addParam ("m_error"  , RSDBP_OUT, V_STRING, 1024);
    cmd.execute();
    
    var errm = cmd.param("m_error").value;
    var stat = (errm == EXIT_NOERROR);
    
    return iif (stat, TXReturnValueStruct (p_account, EXIT_SUCCESS      , errm  ),
                      TXReturnValueStruct (p_account, EXIT_LOGICAL_ERROR, errm ));    
end;


macro usr_delete_claim (p_account         :string
                       ,p_comment         :string
                       ,p_sum             :money
                       ):TXReturnValueStruct
    
    // дозаполнение параметров по умолчанию
    p_comment = nvl_ex (p_comment, "Удаление инициировано внешней системой");
    
    // транзакция удаления претензии
    var cmd = RSDCommand("begin usr_claims.delete_claim (:m_account, :m_sum, :m_comment, :m_error); end");
    
    cmd.addParam ("m_account", RSDBP_IN , p_account );
    cmd.addParam ("m_sum"    , RSDBP_IN , p_sum     );
    cmd.addParam ("m_comment", RSDBP_IN , p_comment );
    cmd.addParam ("m_error"  , RSDBP_OUT, V_STRING, 1024);
    cmd.execute();
    
    var errm = cmd.param("m_error").value;
    var stat = (errm == EXIT_NOERROR);
    
    return iif (stat, TXReturnValueStruct (p_account, EXIT_SUCCESS      , errm  ),
                      TXReturnValueStruct (p_account, EXIT_LOGICAL_ERROR, errm ));    
end;
