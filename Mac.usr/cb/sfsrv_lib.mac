  /* 17-09-2012 I-00251107-2 Жаворонкова Н. (joy) Изменила способ формирования имени глобальной переменной, чтобы она не дублировалась по разным клиентам */



import SfInter, "sfcomcat.mac", "sfground.mac", "sfpay.mac";

private const PlusCalc_CatCode = "+Расчеты"; 
private const PlusCalcNDS_CatCode = "+Расчеты НДС"; 
private const MinusNDSAccrual_CatCode = "-НДС начисленный"; 

private const PlusCalcNVPI_CatCode = "+Расчеты,НВПИ"; 
private const PlusCalcNDS_NVPI_CatCode = "+Расчеты НДС,НВПИ";
private const MinusNDSAccrual_NVPI_CatCode = "-НДС начисленный, НВПИ";

const DEFCOM_ACTIONKIND_NONE = 0;
const DEFCOM_ACTIONKIND_CREATE = 1;
const DEFCOM_ACTIONKIND_ACRUE = 2;
const DEFCOM_ACTIONKIND_PAY = 3;


macro SfSrv_FillSfDefComRecord( rs:RsdRecordset, SfDefCom )
  
  ClearRecord( SfDefCom );

  SfDefCom.ID      = rs.value("T_ID");
  SfDefCom.feeType    = rs.value("T_FEETYPE");
  SfDefCom.commNumber = rs.value("T_COMMNUMBER");
  SfDefCom.SfContrID      = rs.value("T_CONID");
  SfDefCom.datePeriodBegin = rs.value("T_DATEPERIODBEGIN");

  SfDefCom.dateFee = rs.value("T_DATEFEE");
  
  SfDefCom.DatePeriodEnd = rs.value("T_DATEPERIODEND");
  SfDefCom.FIID_Sum = rs.value("T_FIID_COMMSUM");
  SfDefCom.Department = rs.value("T_DEPARTMENT");

  SfDefCom.Sum = rs.value("T_COMMSUM");
  SfDefCom.SumNDS = rs.value("T_NDSSUM");
  SfDefCom.NDSRateValue = rs.value("T_NDSRATEVALUE");

  SfDefCom.IsIncluded = rs.value("T_ISINCLUDED");
  SfDefCom.BaseQuant = rs.value("T_BASEQUANT");
  SfDefCom.baseSum = rs.value("T_BASESUM");
  SfDefCom.Percent = rs.value("T_PERCENT");
  SfDefCom.Sum_Per_Unit = rs.value("T_SUM_PER_UNIT");
  SfDefCom.FIID_Tarscl = rs.value("T_FIID_TARSCL");

  SfDefCom.SkipedByMacro = rs.value("T_SKIP");

  return 0;

end;

macro SfSrv_FillSfAccrueRecord( rs:RsdRecordset, SfAccrue )

  ClearRecord( SfAccrue );

  if( rs.value("T_ACRAMOUNT") == NULLVAL )
    SfAccrue.Amount = $0;
  else
    SfAccrue.Amount = rs.value("T_ACRAMOUNT");
  end;

  if( SfAccrue.Amount != $0 )
    SfAccrue.NDSAmount = rs.value("T_ACRNDSAMOUNT");
    SfAccrue.BeginDate = rs.value("T_ACRBEGINDATE");
    SfAccrue.EndDate = rs.value("T_ACRENDDATE");
    SfAccrue.TransactionDate = rs.value("T_ACRTRNDATE");
  end;

  return 0;

end;


macro SfSrv_InsertAccrueLogRec( SfDefComRec, SfAccrueRec, debetAccount, creditAccount, Kind, Error, Comment )

  var strSql : string; 
  var cmd : RsdCommand;
    
  if( Error != 0 )
    if( Comment == "" )
      Comment = GetErrMsg(false);
    end;

    if( Comment == "" )
      Comment = "Ошибка начисления комиссии";
    end;
  end;

  strSql = " INSERT INTO DSFREPACC_TMP ( T_SFDEFCOMID, T_BEGINDATE , T_ENDDATE, T_TRANSACTIONDATE, " +          
          " T_AMOUNT, T_DEBIT, T_CREDIT, T_CONTRID, T_FEETYPE, T_COMISSNUMBER, T_DEPARTMENT, T_KIND, T_COMMENT, T_ERRORCODE ) "
          " VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )" ;
   
   cmd = RsdCommand( strSql );

   cmd.addParam( "", RSDBP_IN, SfDefComRec.ID );
   cmd.addParam( "", RSDBP_IN, SfAccrueRec.BeginDate );
   cmd.addParam( "", RSDBP_IN, SfAccrueRec.EndDate );
   cmd.addParam( "", RSDBP_IN, SfAccrueRec.TransactionDate );
   cmd.addParam( "", RSDBP_IN, SfAccrueRec.Amount );
   cmd.addParam( "", RSDBP_IN, debetAccount );
   cmd.addParam( "", RSDBP_IN, creditAccount );
   cmd.addParam( "", RSDBP_IN, SfDefComRec.SfContrID );
   cmd.addParam( "", RSDBP_IN, SfDefComRec.FeeType );
   cmd.addParam( "", RSDBP_IN, SfDefComRec.CommNumber );
   cmd.addParam( "", RSDBP_IN, SfDefComRec.Department );
   cmd.addParam( "", RSDBP_IN, Kind );
   cmd.addParam( "", RSDBP_IN, Comment );
   cmd.addParam( "", RSDBP_IN, Error );
   
   cmd.execute();   

   return 0;
end;

macro SfSrv_UpdateAccrueLogRec( SfContr, err )

  var strSql : string; 
  var cmd : RsdCommand;

  strSql = " UPDATE DSFREPACC_TMP SET T_COMMENT = ?, T_ERRORCODE = ? WHERE T_CONTRID = ? AND t_ErrorCode = 0 ";
  
  cmd = RsdCommand( strSql );

  cmd.addParam( "", RSDBP_IN, GetErrMsg(false) );
  cmd.addParam( "", RSDBP_IN, err );
  cmd.addParam( "", RSDBP_IN, SfContr.ID );

  cmd.execute();

  return 0;
end;

macro SfSrv_InsertPayLogRec( SfDefCom, InvoiceID, Debit, Credit, Comment, Kind, Error )

  var strQuery = "";  
  var cmd;
  
  strQuery = "INSERT INTO DSFREPACC_TMP (T_SFDEFCOMID, T_BEGINDATE, T_ENDDATE, T_TRANSACTIONDATE, T_AMOUNT, T_INVOICEID," +
             " T_DEBIT, T_CREDIT, T_COMMENT, T_CONTRID, T_FEETYPE, T_COMISSNUMBER, T_DEPARTMENT, T_KIND, T_ERRORCODE ) " +
             " VALUES( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )";

  cmd = RsdCommand( strQuery );

  cmd.addParam( "", RSDBP_IN, SfDefCom.ID );
  cmd.addParam( "", RSDBP_IN, SfDefCom.DatePeriodBegin );   
  cmd.addParam( "", RSDBP_IN, SfDefCom.DatePeriodEnd );     
  cmd.addParam( "", RSDBP_IN, date(0,0,0) );
  cmd.addParam( "", RSDBP_IN, SfDefCom.Sum );         
  cmd.addParam( "", RSDBP_IN, InvoiceID );
  cmd.addParam( "", RSDBP_IN, Debit );
  cmd.addParam( "", RSDBP_IN, Credit );
  cmd.addParam( "", RSDBP_IN, Comment );
  cmd.addParam( "", RSDBP_IN, SfDefCom.SfContrID );
  cmd.addParam( "", RSDBP_IN, SfDefCom.FeeType );
  cmd.addParam( "", RSDBP_IN, SfDefCom.CommNumber );
  cmd.addParam( "", RSDBP_IN, SfDefCom.Department );
  cmd.addParam( "", RSDBP_IN, Kind );
  cmd.addParam( "", RSDBP_IN, Error );
  
  cmd.execute();

end;

/*есть ли НВПИ*/
macro SfSrv_IsNVPICarry( payFIID, calcFIID, payRateDateKind )
  /*Если валюта оплаты и валюта расчета комиссии не совпадают и дата курса зависит 
    от даты оплаты (DSFCONTR_DBT.T_PAYFIID <> DSFDEFCOM_DBT.T_FIID_COMMSUM и DSFCONTR_DBT.T_PAYRATEDATEKIND <> 
    $(на дату выставления)) */
  if( (payFIID != calcFIID) AND (payRateDateKind != SFINV_RATEDATEKIND_DRAWN) )
    return true;
  else
    return false;
  end;

end;

private macro GetSfSiCatCode( isNVPI, kindSfSi )

  var CatCode = "";

  if( isNVPI )
    if( kindSfSi == CALC_SFSI_KIND )
      CatCode = PlusCalcNVPI_CatCode;
    elif( kindSfSi == CALCNDS_SFSI_KIND )
      CatCode = PlusCalcNDS_NVPI_CatCode;
    elif( kindSfSi == NDSACRUAL_SFSI_KIND )
      CatCode = MinusNDSAccrual_NVPI_CatCode;
    end;
  else
    if( kindSfSi == CALC_SFSI_KIND )
      CatCode = PlusCalc_CatCode;
    elif( kindSfSi == CALCNDS_SFSI_KIND )
      CatCode = PlusCalcNDS_CatCode;
    elif( kindSfSi == NDSACRUAL_SFSI_KIND )
      CatCode = MinusNDSAccrual_CatCode;
    end;
  end;

  return CatCode;

end;

macro SfSrv_GetCarryParms( IsNVPI, SfConComPD, SfDefComRec, SfAccrueRec, SfContrRec, 
                           PayerFIID: @integer, ReceiverFIID: @integer,
                           PayerAccount: @string, ReceiverAccount: @string,
                           NDSPayerAccount: @string, NDSReceiverAccount:@string,
                           ID_Operation, ID_Step )
  var stat = 0;  
  var TrnDate = SfAccrueRec.TransactionDate;

  var PayerCatCode:string, ReceiverCatCode:string, NDSPayerCatCode:string, NDSReceiverCatCode:string;
  var NDSPayerKindSfSi, NDSReceiverKindSfSi;

  var debetSI  = TRecHandler("sfsi.dbt");
  var creditSI = TRecHandler("sfsi.dbt");

  debetSI.Clear;
  creditSI.Clear;

  stat = SfSrvGetSfSI( SfDefComRec, debetSI, creditSI );

  if( stat == 0 )
    if( SfAccrueRec.Amount > 0 )
      PayerFIID = SfContrRec.PayFIID;
      PayerCatCode = GetSfSiCatCode( isNVPI, CALC_SFSI_KIND );

      ReceiverFIID = creditSI.Rec.FIID;
      ReceiverAccount = creditSI.Rec.Account;      
    
    elif( SfAccrueRec.Amount < 0 )      
      PayerFIID = creditSI.Rec.FIID;
      PayerAccount = creditSI.Rec.Account;      
      
      ReceiverFIID = SfContrRec.PayFIID;
      ReceiverCatCode = GetSfSiCatCode( isNVPI, CALC_SFSI_KIND );
    end;

    if( SfAccrueRec.NDSAmount > 0 )
      NDSPayerKindSfSi = CALCNDS_SFSI_KIND;
      NDSPayerCatCode = GetSfSiCatCode( isNVPI, NDSPayerKindSfSi);

      NDSReceiverKindSfSi = NDSACRUAL_SFSI_KIND;
      NDSReceiverCatCode = GetSfSiCatCode( isNVPI, NDSReceiverKindSfSi );

    elif( SfAccrueRec.NDSAmount < 0 )      
      NDSPayerKindSfSi = NDSACRUAL_SFSI_KIND;
      NDSPayerCatCode = GetSfSiCatCode( isNVPI, NDSPayerKindSfSi);

      NDSReceiverKindSfSi = CALCNDS_SFSI_KIND;
      NDSReceiverCatCode = GetSfSiCatCode( isNVPI, NDSReceiverKindSfSi );
    end;

    if( SfAccrueRec.Amount != 0 )
      if( PayerAccount == "" )
        PayerAccount = SfConComPD.FindAndOpenAccount( PayerCatCode, TrnDate, PayerFIID, ID_Operation, ID_Step );
      elif( ReceiverAccount == "" )
        ReceiverAccount = SfConComPD.FindAndOpenAccount( ReceiverCatCode, TrnDate, ReceiverFIID, ID_Operation, ID_Step );
      end;
    end;

    if( SfAccrueRec.NDSAmount != $0 )
      NDSPayerAccount = SfConComPD.FindAndOpenAccount( NDSPayerCatCode, TrnDate, SfContrRec.PayFIID, ID_Operation, ID_Step );    
      NDSReceiverAccount = SfConComPD.FindAndOpenAccount( NDSReceiverCatCode, TrnDate, SfContrRec.PayFIID, ID_Operation, ID_Step );
    end;
  end;

  return stat;
end;

private macro SfSrv_DocCarry( DateCarry, debetFIID, debetAccount, creditFIID, creditAccount, Sum, Ground,
                              AccTrnID: @integer, ID_Operation, ID_Step )    

  var ret = 0;

  var Doc = RsbAccTransaction;

  if( Sum > $0 )

    Doc.Chapter    = 1;
    Doc.Date_Carry = DateCarry;   
    Doc.Ground     = Ground;
   
    Doc.SumPayer    = Sum;    

    Doc.FIIDPayer       = debetFIID;   
    Doc.AccountPayer    = debetAccount;
 
    Doc.FIIDReceiver    = creditFIID;   
    Doc.AccountReceiver = creditAccount;   

    Doc.Department = {OperDprt};
    
    Doc.ID_Operation = ID_Operation;
    Doc.ID_Step = ID_Step;    

    if( not Doc.Carry() )
      ret = 1;
      msgbox( "Ошибка при вставке проводки" );
    else
      AccTrnID = Doc.AccTrnID;
    end; 
  
  end;

  return ret;

end;



/* Выполнить проводку начисления по периодической комиссии */
macro SfSrvCarryAccrue( PayerFIID, ReceiverFIID, SfDefComRec, SfAccrueRec, SfContrRec, SfConComRec, 
                        PayerAccount, ReceiverAccount, NDSPayerAccount, NDSReceiverAccount,
                        AccTrnID: @integer, AccTrnID_NDS: @integer,
                        ID_Operation, ID_Step )

  var stat = 0;
  var Ground:string;
  
  var SumPayer = $0, NDSSumPayer = $0;
  var TrnDate = SfAccrueRec.TransactionDate;
  

  if( stat == 0 AND (SfAccrueRec.Amount != 0) )
    stat = SfConvertCalcSumToPayFIID( SfDefComRec, Abs(SfAccrueRec.Amount), TrnDate, TrnDate, SumPayer );
    if( stat == 0 )
      Ground = string( "За услуги по договору \"", SfContrRec.Number, "\" от ", SfContrRec.DateConc:f, " за период с "
                      ,sfAccrueRec.BeginDate:f, " по ", sfAccrueRec.EndDate:f );
      
      stat = SfSrv_DocCarry( TrnDate, PayerFIID, PayerAccount, ReceiverFIID, ReceiverAccount, SumPayer, Ground,
                             @AccTrnID, ID_Operation, ID_Step );
    end;
  end;

  if( (stat == 0) AND (SfAccrueRec.NDSAmount != $0) )
    stat = SfConvertCalcSumToPayFIID( SfDefComRec, Abs(SfAccrueRec.NDSAmount), TrnDate, TrnDate, NDSSumPayer );
    if( stat == 0 )
      Ground = string( "НДС за услуги по договору \"", SfContrRec.Number, "\" от ", SfContrRec.DateConc:f, " за период с "
                      ,sfAccrueRec.BeginDate:f, " по ", sfAccrueRec.EndDate:f );
      
      stat = SfSrv_DocCarry( TrnDate, SfContrRec.PayFIID, NDSPayerAccount, 
                             SfContrRec.PayFIID, NDSReceiverAccount, NDSSumPayer, Ground, @AccTrnID_NDS,
                             ID_Operation, ID_Step );
    end;
  end;

  return stat;

end;

macro SfSrv_AddSfDocs( Action, SfDefCom, AccTrnID, AccTrnID_NDS )

  var strSql : string; 
  var cmd : RsdCommand;

  strSql = " UPDATE dsfdeftmp_tmp SET t_AccTrnID = ?, t_AccTrnID_NDS = ? "
           " WHERE t_feeType = ? AND t_commNumber = ? AND t_conID = ? AND t_DatePeriodBegin = ? AND t_Action = ? ";
  
  cmd = RsdCommand( strSql );

  cmd.addParam( "", RSDBP_IN, AccTrnID );
  cmd.addParam( "", RSDBP_IN, AccTrnID_NDS );

  cmd.addParam( "", RSDBP_IN, SfDefCom.feeType );
  cmd.addParam( "", RSDBP_IN, SfDefCom.commNumber );
  cmd.addParam( "", RSDBP_IN, SfDefCom.SfContrID );
  cmd.addParam( "", RSDBP_IN, SfDefCom.datePeriodBegin );
  cmd.addParam( "", RSDBP_IN, Action );

  cmd.execute();

  return 0;

end;

macro ChangeSfDefTmpStatus( SfDefCom, newStatus )
  var strSql : string; 
  var cmd : RsdCommand;

  strSql = " UPDATE DSFDEFTMP_TMP SET t_Status = ? WHERE T_ID = ? ";
  
  cmd = RsdCommand( strSql );

  cmd.addParam( "", RSDBP_IN, newStatus );
  cmd.addParam( "", RSDBP_IN, SfDefCom.ID );

  cmd.execute();

  return 0;
end;

private macro AddOprChildRec( ID_Operation, ID_Step, ChildDocKind, ChildDocID )

  var strSql : string; 
  var cmd : RsdCommand;

  strSql = "INSERT INTO doprchild_tmp (t_ID_Operation, t_ID_Step, t_Child_DocKind, t_Child_DocumentID) " +
             " VALUES( ?, ?, ?, ? )";

  cmd = RsdCommand( strSql );

  cmd.addParam( "", RSDBP_IN, ID_Operation );
  cmd.addParam( "", RSDBP_IN, ID_Step );
  cmd.addParam( "", RSDBP_IN, ChildDocKind );
  cmd.addParam( "", RSDBP_IN, ChildDocID );

  cmd.execute();

  return 0;

end;




/* EVG 6/12/2011 Обновление СПИ из данных, сохранённых в кеше
   (сохранение происходит в sf_prbb.mac) */
macro CorrectSI( comID, siRec, sfCntr )
  debugbreak;
  /* 17-09-2012 I-00251107-2 Жаворонкова Н. (joy) Изменила способ формирования имени глобальной переменной, чтобы она не дублировалась по разным клиентам */
 /* var MemoryAccount = GetGlobalParameter( "PeriodComm_" + string( comID ) + "a_", true ),       // true - удалять после чтения,
      MemoryFiid    = GetGlobalParameter( "PeriodComm_" + string( comID ) + "b_", true );                                     */
      
  var MemoryAccount = GetGlobalParameter( "PeriodComm_" + string( sfCntr.partyid ) + "a_", true ),       // true - удалять после чтения,
      MemoryFiid    = GetGlobalParameter( "PeriodComm_" + string( sfCntr.partyid ) + "b_", true ); 
  /* ---- joy end*/
//debugbreak;

  /* EVG 3/05/2012 Есть подозрение, что параметр true (удалять после чтения) не работает,
     поэтому попробуем очистить кеш вручную. */
/*  SetGlobalParameter( "PeriodComm_" + string( comID ) + "a_", null );
  SetGlobalParameter( "PeriodComm_" + string( comID ) + "b_", null ); */

  SetGlobalParameter( "PeriodComm_" + string( sfCntr.partyid ) + "a_", null ); // 17-09-2012 I-00251107-2 joy 
  SetGlobalParameter( "PeriodComm_" + string( sfCntr.partyid ) + "b_", null );  

  if( valType(MemoryAccount) != V_UNDEF )
     siRec.rec.Account = MemoryAccount;
  end;
  if( valType(MemoryFiid) != V_UNDEF )
     siRec.rec.Fiid = MemoryFiid;
  end;


  /* EVG 7.12.2011 Сохраняем счёт и валюту в кеше по ID договора обслуживания
     для того, чтобы получить их из PostStepAction() sfsrvpay.mac и обновить СПИ. */
  debugbreak;
  SetGlobalParameter( "SFSI_" + sfCntr.Id + "a_", siRec.rec.Account );
  SetGlobalParameter( "SFSI_" + sfCntr.Id + "b_", siRec.rec.Fiid );
  
  return siRec;
end;



macro SfSrv_FormDocs( OutBuff, SfContr, SfComiss, SfDefCom, SfAccrue, SfConComPD, isNVPI, PayerAccount, ReceiverAccount, 
                      opDate, IsBatchMode, ID_Operation, ID_Step )
 
  var stat = 0;

  var Ground, Comment = "";

  var debetSI  = TRecHandler("sfsi.dbt");
  var creditSI = TRecHandler("sfsi.dbt");

  var newStatus = SFDEFCOM_STATUS_FOR_PAY;

  var ChildDocKind:integer = 0;
  var ChildDocID = "";

  var FacturaID:integer = 0;

  if( (SfComiss.InstantPayment == "X") AND (SfDefCom.Sum > 0) )
    Ground = BuildGroundWithVO( SfDefCom, SfComiss, SfContr, debetSI.rec.PartyID, creditSI.rec.PartyID, opDate );

    debetSI.Clear;
    creditSI.Clear;

    stat = SfSrvGetSfSI( SfDefCom, debetSI, creditSI );
debugbreak;
    /* EVG 6/12/2011 СПИ необходимо обновить счётом,
       подобранным мефёдовской процедурой. */
    debetSI = CorrectSI( SfDefCom.Id, debetSI, SfContr );

    if( stat == 0 )
      stat = SfFormDocs( OutBuff, debetSI, creditSI, SfComiss, opDate, Ground, 
        SfDefCom.Sum, SfDefCom.SumNDS, SfDefCom.FIID_Sum, SFCONTR_DOC, SfContr.ID, OBJTYPE_SFDEFCOM, SfDefCom,
        SfContr.PayMethod, SfConComPD, SfDefCom.IsIncluded, isNVPI, 0, null, null, 
        IsBatchMode, ID_Operation, ID_Step, @ChildDocKind, @ChildDocID);
    end;

    if( stat == 0 )
      if( (not Sf_IsInstalledRKO()) OR (SfContr.PayMethod == SF_PAY_METHOD_DOCUMENT) )
        newStatus = SFDEFCOM_STATUS_PAYED;
      end;

      if( IsBatchMode )
        SfSrv_ChangeSfDefComStatus( SfDefCom.ID, newStatus, ID_Operation, ID_Step, OpDate );
        if( (ChildDocKind != 0 ) AND (ChildDocID != "") )
          AddOprChildRec( ID_Operation, ID_Step, ChildDocKind, ChildDocID );
        end;
        
        if( CreateFacturaSfDef( SfDefCom, FacturaID, true ) != 0 )
          Comment = "Не удалось создать СФ по комиссии " + SfDefCom.ID;
        end;
      else
        ChangeSfDefTmpStatus( SfDefCom, newStatus );
      end;
      
    end;

    if( stat != 0 )
      Comment = GetSfPay_ErrMsg();
    end;

    if( SfAccrue.Amount == 0 )
      PayerAccount = debetSI.rec.Account;
      ReceiverAccount = creditSI.rec.Account;
    end;
         
    SfSrv_InsertPayLogRec( SfDefCom, -1, PayerAccount, ReceiverAccount, Comment, 1, stat );
    stat = 0;
  end;
  
  return stat;
end;