/*
 * Формирование отчета о массовом выполнении операций
 */

Import OprInter, rsd, "globals.mac";

/* получить значение из результата запроса */
private macro getValue( rs : RsdRecordset, fld : string, nullValue : variant ) : variant

  var val = rs.value(fld);
  
  if( val == nullVal )

    if( nullValue != null ) val = nullValue;
    else                    val = "";
    end;

  end;
  
  return val;

end;

/* получить общее количество обработанных документов */
private macro getTotalDocs() : integer

  var TotalDocs : integer;

  var rs = RsdRecordset( "SELECT count(0) FROM (SELECT DISTINCT t_DocKind, t_DocumentID FROM doprdistaff_tmp)" );

  TotalDocs = 0;

  if( rs.moveNext() ) TotalDocs = rs.value(0); end;

  return TotalDocs;

end;

/* получить общее количество документов, обработанных без ошибок */
private macro getFinalDocs() : integer

  var FinalDocs : integer;

  var rs = RsdRecordset( string("SELECT count(0) ",
                                "FROM (SELECT DISTINCT t_DocKind, t_DocumentID FROM doprdistaff_tmp WHERE t_IsCompleted = 'X') ",
                                "WHERE (t_DocKind, t_DocumentID) NOT IN (SELECT t_DocKind, t_DocumentID FROM doprdistaff_tmp ",
                                                                        "WHERE t_IsCompleted = 'X' AND t_ErrorStatus <> 0)") );

  FinalDocs = 0;

  if( rs.moveNext() ) FinalDocs = rs.value(0); end;

  return FinalDocs;

end;

/* получить общее количество документов, обработанных с ошибками */
private macro getErrorDocs() : integer

  var ErrorDocs : integer;

  var rs = RsdRecordset( string("SELECT count(0) FROM (SELECT DISTINCT t_DocKind, t_DocumentID FROM doprdistaff_tmp ",
                                                      "WHERE t_IsCompleted = 'X' AND t_ErrorStatus <> 0)") );

  ErrorDocs = 0;

  if( rs.moveNext() ) ErrorDocs = rs.value(0); end;

  return ErrorDocs;

end;

/* получить общее количество выполненных шагов */
private macro getTotalSteps() : integer

  var TotalSteps : integer;

  var rs = RsdRecordset( "SELECT count(0) FROM (SELECT 0 FROM doprdistaff_tmp WHERE t_IsCompleted = 'X' AND t_ID_Step > 0)" );

  TotalSteps = 0;

  if( rs.moveNext() ) TotalSteps = rs.value(0); end;

  return TotalSteps;

end;

/* получить общее количество шагов, выполненных без ошибок */
private macro getFinalSteps() : integer

  var FinalSteps : integer;

  var rs = RsdRecordset( "SELECT count(0) FROM doprdistaff_tmp WHERE t_IsCompleted = 'X' AND t_ID_Step > 0 AND t_ErrorStatus = 0" );

  FinalSteps = 0;

  if( rs.moveNext() ) FinalSteps = rs.value(0); end;

  return FinalSteps;

end;

/* получить общее количество шагов, выполненных с ошибками */
private macro getErrorSteps() : integer

  var ErrorSteps : integer;

  var rs = RsdRecordset( "SELECT count(0) FROM doprdistaff_tmp WHERE t_IsCompleted = 'X' AND t_ID_Step > 0 AND t_ErrorStatus <> 0" );

  ErrorSteps = 0;

  if( rs.moveNext() ) ErrorSteps = rs.value(0); end;

  return ErrorSteps;

end;

/* получить общее количество пакетных шагов */
private macro getBatchSteps() : integer

  var BatchSteps : integer;
  
  var rs = RsdRecordset( "SELECT count(0) FROM doprdistaff_tmp WHERE t_IsCompleted = 'X' AND t_ID_Step > 0 AND t_IsBatch = 'X'" );

  BatchSteps = 0;

  if( rs.moveNext() ) BatchSteps = rs.value(0); end;

  return BatchSteps;

end;

/* получить общее количество единичных шагов */
private macro getSinglSteps() : integer

  var SinglSteps : integer;
  
  var rs = RsdRecordset( "SELECT count(0) FROM doprdistaff_tmp WHERE t_IsCompleted = 'X' AND t_ID_Step > 0 AND t_IsBatch = chr(0)" );

  SinglSteps = 0;

  if( rs.moveNext() ) SinglSteps = rs.value(0); end;

  return SinglSteps;

end;

/* получить общее количество начатых операций */
private macro getNewOprs() : integer

  var NewOprs : integer;

  var rs = RsdRecordset( "SELECT count(0) FROM doprdistaff_tmp WHERE t_IsCompleted = 'X' AND t_ID_Step = 0 AND t_ErrorStatus = 0" );

  NewOprs = 0;

  if( rs.moveNext() ) NewOprs = rs.value(0); end;

  return NewOprs;

end;

/* получить общее количество начатых дочерних операций */
private macro getNewChildOprs() : integer

  var NewOprs : integer;

  var rs = RsdRecordset( "SELECT count(0) FROM doprdistaff_tmp "
                         "WHERE t_IsCompleted = 'X' AND t_ID_Step = 0 AND t_ErrorStatus = 0 AND t_Parent_ID_Operation <> 0" );

  NewOprs = 0;

  if( rs.moveNext() ) NewOprs = rs.value(0); end;

  return NewOprs;

end;

/* получить общее количество вставленных цепочек шагов операций */
private macro getNewBranches() : integer

  var NewBranches : integer;

  var rs = RsdRecordset( "SELECT count(0) FROM doprdistaff_tmp WHERE t_IsCompleted = 'X' AND t_ID_Step = -1 AND t_ErrorStatus = 0" );

  NewBranches = 0;

  if( rs.moveNext() ) NewBranches = rs.value(0); end;

  return NewBranches;

end;


/* печать информации о создании новый экземпляров операций */
private macro printInfoStartOperations()

  var rs : RsdRecordset;

  var countNewOpr : integer;

  var docInfo : string, startInfo : string;

  rs = RsdRecordset( string("SELECT oprdistaff.*, oprkdoc.t_Name t_DocName, oprkoper.t_Name t_OprName ",
                             "FROM doprdistaff_tmp oprdistaff, doprkdoc_dbt oprkdoc, doprkoper_dbt oprkoper ",
                             "WHERE oprdistaff.t_IsCompleted    = 'X' ",
                               "AND oprdistaff.t_ID_Step        = 0 ",
                               "AND oprdistaff.t_DocKind        = oprkdoc.t_DocKind(+) ",
                               "AND oprdistaff.t_Kind_Operation = oprkoper.t_Kind_Operation(+) ",
                             "ORDER BY oprdistaff.t_Parent_ID_Operation, oprdistaff.t_Parent_ID_Step, oprdistaff.t_DocKind, oprdistaff.t_DocumentID") );

  countNewOpr = 0;

  while( rs.moveNext() )

    /* если это первый шаг цикла, то печатаем шапку таблицы */  
    if( countNewOpr == 0 )

[                                                                                                       ];
[                                                                                                       ];
[  СОЗДАНИЕ НОВЫХ ЭКЗЕМПЛЯРОВ ОПЕРАЦИЙ                                                                  ];
[+--------------------------------------+--------------------------------------------------------------+];
[|          Первичный документ          |                       Начатая операция                       |];
[+--------------------------------------+--------------------------------------------------------------+];

    end;

    
    /* информация о документе, по которому стартует операция */
    docInfo = string( getValue(rs, "t_DocName"), " \"", getValue(rs, "t_DocumentID"), "\"" );

    /* результат старта операции */
    if( getValue(rs, "t_ErrorStatus") != 0 )

      /* ошибка старта операции */
      startInfo = string( "", "", " \"", getValue(rs, "t_ErrorMessage"), "\"" );

    else

      /* если старт операции выполнен успешно, то выводим информацию о начатой операции */
      
      /* - номер и название вида операции */
      startInfo = string( "Начата операция ", getValue(rs, "t_Kind_Operation"), " \"", getValue(rs, "t_OprName"), "\"" );
      
      /* - идентификатор экземпляра операции */
      startInfo = startInfo + string( " c ид. ", getValue(rs, "t_ID_Operation") );

    end;

    countNewOpr = countNewOpr + 1;

    /* печатаем информацию о старте операции */

[| #################################### | ############################################################ |] (docInfo:w, startInfo:w);
[+--------------------------------------+--------------------------------------------------------------+];
  
  end;

end;

/* печать информации о вставки новых цепочек операций */
private macro printInfoInsertBranch()

  var rs : RsdRecordset;

  var countNewBranch : integer;

  var docInfo : string, insertInfo : string;

  rs = RsdRecordset( string("SELECT oprdistaff.*, oprkdoc.t_Name t_DocName ",
                             "FROM doprdistaff_tmp oprdistaff, doprkdoc_dbt oprkdoc ",
                             "WHERE oprdistaff.t_IsCompleted    = 'X' ",
                               "AND oprdistaff.t_ID_Step        = -1 ",
                               "AND oprdistaff.t_DocKind        = oprkdoc.t_DocKind(+) ",
                             "ORDER BY oprdistaff.t_DocKind, oprdistaff.t_DocumentID") );

  countNewBranch = 0;

  while( rs.moveNext() )

    /* если это первый шаг цикла, то печатаем шапку таблицы */  
    if( countNewBranch == 0 )

[                                                                                                       ];
[                                                                                                       ];
[  ВСТАВКА ДОПОЛНИТЕЛЬНЫХ ЦЕПОЧЕК                                                                       ];
[+--------------------------------------+--------------------------------------------------------------+];
[|          Первичный документ          |                          Результат                           |];
[+--------------------------------------+--------------------------------------------------------------+];

    end;

    
    /* информация о документе, для которого вставляем цепочку */
    docInfo = string( getValue(rs, "t_DocName"), " \"", getValue(rs, "t_DocumentID"), "\"" );

    /* результат вставки цепочки */
    if( getValue(rs, "t_ErrorStatus") != 0 )

      /* ошибка старта операции */
      insertInfo = string( "Ошибка ", getValue(rs, "t_ErrorStatus"), " \"", getValue(rs, "t_ErrorMessage"), "\"" );

    else

      /* если цепочка вставлена успешно, то выводим информацию об этом */
      
      /* - номер и название вида операции */
      insertInfo = string( "Дополнительная цепочка вставлена" );

    end;

    countNewBranch = countNewBranch + 1;

    /* печатаем информацию о старте операции */

[| #################################### | ############################################################ |] (docInfo:w, insertInfo:w);
[+--------------------------------------+--------------------------------------------------------------+];
  
  end;

end;

/* печать информации о выполнении шагов */
private macro printInfoExecuteSteps()

  var rs : RsdRecordset;

  var countExecSteps : integer;

  var DocKind : integer;
  var DocumentID : string;

  var prevDocKind : integer;
  var prevDocumentID : string;

  var docInfo : string;
  var stepInfo : string;
  var stepMode : string;
  var stepExecResult : string;

  rs = RsdRecordset( string("SELECT oprdistaff.*, oprkdoc.t_Name t_DocName, oprkoper.t_Name t_OprName, oprostep.t_Name t_StepName ",
                            "FROM doprdistaff_tmp oprdistaff, doprkdoc_dbt oprkdoc, doprkoper_dbt oprkoper, doproper_dbt oproper, doprostep_dbt oprostep ",
                            "WHERE oprdistaff.t_IsCompleted = 'X' ",
                              "AND oprdistaff.t_ID_Step     > 0 ",
                              "AND oprdistaff.t_DocKind     = oprkdoc.t_DocKind(+) "
                              "AND oprdistaff.t_BlockID     = oprostep.t_BlockID(+) "
                              "AND oprdistaff.t_Number_Step = oprostep.t_Number_Step(+) ",
                              "AND oproper.t_ID_Operation   = oprdistaff.t_ID_Operation "
                              "AND oproper.t_Kind_Operation = oprkoper.t_Kind_Operation(+) ",
                            "ORDER BY oprdistaff.t_Parent_ID_Operation, oprdistaff.t_Parent_ID_Step, "
                                     "oprdistaff.t_DocKind, oprdistaff.t_DocumentID, oprdistaff.t_Sort") );

  countExecSteps = 0;

  prevDocKind    = 0;
  prevDocumentID = "";

  while( rs.moveNext() )

    /* если это первый шаг цикла, то печатаем шапку таблицы */  
    if( countExecSteps == 0 )

[                                                                                                       ];
[                                                                                                       ];
[  ВЫПОЛНЕНИЕ ШАГОВ                                                                                     ];
[+--------------------------------------+-----------+--------------------------------------------------+];
[|          Шаг                         |   Режим   |                 Результат                        |];
[+--------------------------------------+-----------+--------------------------------------------------+];

    end;

    countExecSteps = countExecSteps + 1;

    /* получаем информацию о документе */
    DocKind    = getValue(rs, "t_DocKind"   );
    DocumentID = getValue(rs, "t_DocumentID");

    /* если до выводилась информация о выполнении шагов другого документа, то печатаем информацию о документе */
    if( (DocKind != prevDocKind) or (DocumentID != prevDocumentID) )

      /* информация о документе */
      docInfo = string( getValue(rs, "t_DocName"), " \"", getValue(rs, "t_DocumentID"), "\"" );

      /* информация об операции - номер и название вида операции */
      docInfo = docInfo + string( " операция ", getValue(rs, "t_Kind_Operation"), " \"", getValue(rs, "t_OprName") + "\"" );

[| ################################################################################################### |] (docInfo:w);
[+--------------------------------------+-----------+--------------------------------------------------+];

    end;

    prevDocKind    = DocKind;
    prevDocumentID = DocumentID;

    /* название шага */
    stepInfo = string( getValue(rs, "t_StepName") );

    /* режим выполнения шага */
    if( getValue(rs, "t_IsBatch") == "X" ) stepMode = "Пакетный";
    else                                   stepMode = "Единичный";
    end;

    /* результат выполнения */
    stepExecResult = "";
    if( getValue(rs, "t_ErrorStatus") != 0 )
      stepExecResult = string( "Ошибка ", getValue(rs, "t_ErrorStatus"), " \"", getValue(rs, "t_ErrorMessage"), "\"" );
    end;

[|    ################################# | ######### | ################################################ |] (stepInfo:w, stepMode, stepExecResult:w);
[+--------------------------------------+-----------+--------------------------------------------------+];
  
  end;

end;

/*
 * Формирование отчета о массовом выполнении операций
 * (функция должна вернуть true, если отчет сформировано успешно)
 */
private macro Opr_ShowMassExecuteLog( ExecMode : integer, StartDate : date, StartTime : time, EndDate : date, EndTime : time ) : bool

  var DprtCode : string;

  var TotalDocs : integer, FinalDocs : integer, ErrorDocs : integer;
  
  var TotalSteps : integer, FinalSteps : integer, ErrorSteps : integer, BatchSteps : integer, SinglSteps : integer;

  var NewOprs : integer, NewChildOprs : integer;

  var NewBranches : integer;

  CB_GetDepartmentCodeAndName( {OperDprt}, DprtCode );

  TotalDocs = getTotalDocs();
  FinalDocs = getFinalDocs();
  ErrorDocs = getErrorDocs();

  TotalSteps = getTotalSteps();
  FinalSteps = getFinalSteps();
  ErrorSteps = getErrorSteps();
  BatchSteps = getBatchSteps();
  SinglSteps = getSinglSteps();

  NewOprs = getNewOprs();

  NewChildOprs = getNewChildOprs();

  NewBranches = getNewBranches();

  /* печатаем шапку отчета */

[                                                                                                       ];
[                                                                  Операционист:                  ##### ]( {oper}:r );
[                                                                  Филиал:            ################# ]( DprtCode:r ) ;
[                                                                  Операционный день:        ########## ]( {BranchCurDate}:f:r );
[                                                                  Системная дата:           ########## ]( date():f:r );
[                                                                  Системное время:            ######## ]( time():f:r );
  
  /* печаем информации о вставки новых цепочек операций */
  printInfoInsertBranch();

  /* печатаем информацию о старте новых операций */
  printInfoStartOperations();

  /* печатаем информацию о выполненных шагах */
  printInfoExecuteSteps();

  /* печатаем сводную информацию о выполненнии */

[                                                                                                       ];
[                                                                                                       ];
[  СВОДНАЯ ИНФОРМАЦИЯ                                                                                   ];
[                                                                                                       ];
[  Время старта:                         ########                                                       ] (StartTime:f);
[  Время окончания:                      ########                                                       ] (EndTime:f  );
[                                                                                                       ];
[  Всего документов:                     ########                                                       ] (TotalDocs:r);
[          из них обработано без ошибок: ########                                                       ] (FinalDocs:r);
[          из них обработано с ошибками: ########                                                       ] (ErrorDocs:r);
[                                                                                                       ];
[  Выполнено шагов:                      ########                                                       ] (TotalSteps:r);
[          из них без ошибок:            ########                                                       ] (FinalSteps:r);
[          из них с ошибками:            ########                                                       ] (ErrorSteps:r);
[          всего пакетных шагов:         ########                                                       ] (BatchSteps:r);
[          всего единичных шагов:        ########                                                       ] (SinglSteps:r);

  
  /* если режим вставки цепочек, то выводим количество вставленных цепочек */
  if( ExecMode == OP_MASSEXEC_MODE_INSERT_BRANCH )
[                                                                                                       ];
[  Вставлено доп. цепочек:               ########                                                       ] (NewBranches:r);
  
  end;

  /* 
     если режим выполнения операций или новые операции были начаты в процессе выполнения,
     то выводим количество начатых операций
  */
  if( (ExecMode == OP_MASSEXEC_MODE_EXEC_OPERATION) or (NewOprs != 0) )

[                                                                                                       ];
[  Начато операций по документам:        ########                                                       ] (NewOprs:r);

    if( NewChildOprs != 0 )

[          из них дочерних:              ########                                                       ] (NewChildOprs:r);

    end;
 
  end;
  
  return true;

end;
