// Предварительная адаптация 26.11.2013
import "or_rep_h.mac", globals, "CbReport_h.mac";
Import oralib, rsexts, PTInter, BilFacturaInter;
import BankInter;

/* EVG To 2030 25/10/2011 Перенесено из локального макроса ЭВ */
Import likepy, rcw, "fg_Life_parm.mac";
/* -- EVG -- */

private var ssql_ = "";
private var rs_ssql_;
private Var Direction;
private Var JournalID;
private Var Dolz_1;
private Var FIO_1;
private Var PrnDepartment = 0;
private Var BeginDate     : DATE;
private Var EndDate       : DATE;
private Var NumStr        = 1;
private Var FPrintHead     = true;
private Var FPrintBottom   = true;

/* EVG To 2030 25/10/2011 Перенесено из локального макроса ЭВ */
private Var UnionJournal = 0;
private Var fgBank = fg_life_subject({OurBank});
/* -- EVG -- */

private FILE BILSFJOURNAL ("bilsfjournal.dbt");
private FILE FININSER     ("fininstr.dbt") KEY 0;
private VAR  SfJournal = BILSFJOURNAL;
private VAR  acssql_query:string= "" ;
private VAR  acssql_from:string = "";


private MACRO GetPeriod(dt1:date, dt2:date, year: integer)
  var day1, mon1, year1;
  var day2, mon2, year2;
  datesplit(dt1, day1, mon1, year1);  
  datesplit(dt2, day2, mon2, year2);  

  if(year1 != year2)
    return "";
  end;

  SetParm(2, year1);

  if(mon1 == mon2)
    return MonName(mon1);
  end;
   
  if((mon1<=3) AND (mon2<=3))
    return "I - квартал";
  end; 

  if((mon1>=4) AND (mon2>=4) AND (mon1<=6) AND (mon2<=6))
    return "II - квартал";
  end; 

  if((mon1>=7) AND (mon2>=7) AND (mon1<=9) AND (mon2<=9) )
    return "III - квартал";
  end; 

  if((mon1>=10) AND (mon2>=10) AND (mon1<=12) AND (mon2<=12) )
    return "IV - квартал";
  end; 

  return "";
END;

private MACRO GetNoNDSSign( FacturaID )
  var rs;
  var sqlString = "SELECT DISTINCT(T_NDSRATE) FROM DBILFACTURALINE_DBT WHERE T_FACTURAID = " + string(FacturaID) +" ORDER BY T_NDSRATE";
  var NDSRate = 0;
  var RetVal = false;

  rs = RsdRecordset( sqlString );

  while(rs.moveNext())
    NDSRate = rs.value(0);
    if(NDSRate == -1)
      RetVal = true;
    else
      RetVal = false;
    end;
  end;

  return RetVal;
END;

private MACRO GetCompresNameCurrency( iCode )
  FININSER.FIID = iCode;
  if( getEQ( FININSER ) )    return  FININSER.Ccy;
  else                          return  string(iCode);
  end;
end;

PRIVATE MACRO AskPrintQ()
  var RetV = 0;
  Array Msg;

  Msg(0) = "Выберите режим печати:";

  Array Box;
  Box(0) = "Печатать шапку и подписи";
  Box(1) = "Печатать только шапку";
  Box(2) = "Печатать только подписи";
  Box(3) = "Печатать без шапки и подписей";

  RetV = ConfWin( Msg, Box );

  if(RetV == 0)
    FPrintHead     = true;
    FPrintBottom   = true;
  elif(RetV == 1)
    FPrintHead     = true;
    FPrintBottom   = false;
  elif(RetV == 2)
    FPrintHead     = false;
    FPrintBottom   = true;
  elif(RetV == 3)
    FPrintHead     = false;
    FPrintBottom   = false;
  end;
END;

/* EVG To 2030 25/10/2011 Перенесено из локального макроса ЭВ */

// класс для ссылок к схемам
private CLASS TSchemaReferences(StrFromReg :string, RootNodeName :string)
	Var
	NodeName = TArray,
	UserName = TArray,
	DBName = TArray,
	Sort_ = TArray,
	CheckGrant = TArray,
	RegStr :string;

	private var ArrOfTablesUsed = TArray;
	ArrOfTablesUsed = makeArray("dbilbookentry_dbt",
	"dbilfactura_dbt",
	"dfininstr_dbt",
	"dbilsftype_dbt");

	//конструктор по умолчанию
	NodeName(NodeName.Size()) = RootNodeName;
	UserName(UserName.Size()) = "";
	DBName(DBName.Size()) = "";
	Sort_(Sort_.Size()) = "1";
	CheckGrant(CheckGrant.Size()) = "1";
	RegStr = StrFromReg;
	//конструктор по умолчанию


	private macro CheckGrantToTable(UserName_, ArrOfTablesUsed_) :integer
		var Query = "", 
			i = 0,
			DataSet :RsdRecordset,
			Params :TArray;
		while( i < ArrOfTablesUsed_.Size())
			Query =" SELECT 1 FROM dba_tab_privs P " +                           
			"  WHERE P.PRIVILEGE = 'SELECT' " +
			"   AND GRANTEE = USER " +
			"   AND P.GRANTOR = UPPER(:USERNAME_1) " +
			"   AND P.TABLE_NAME = UPPER(:TABLENAME) " +
			"   OR USER = UPPER(:USERNAME_2) ";
			Params = makeArray( SQLParam( "USERNAME_1" , UserName_),
			SQLParam( "TABLENAME" , ArrOfTablesUsed_[i]),
			SQLParam( "USERNAME_2" , UserName_));
			DataSet = execSQLselect( Query, Params, true );
			if ( (not DataSet ) or ( not DataSet.moveNext()))
				return 0;
			end;
			i = i + 1;
		end;
		return 1;
	end;


	macro AddAllRef; //заполняем свойства из реестра
		//запрос в реестре головного узла
		var Query = "",
		DataSet, DataSet1 :RsdRecordset,
		Params :TArray;


		Query = " SELECT REG.T_KEYID " +
		" FROM (SELECT T.T_KEYID, SYS_CONNECT_BY_PATH(T.T_NAME, '\\') FLD, LEVEL LV, T.T_DESCRIPTION " +
		"       FROM dregparm_dbt T " +
		"            START WITH T.T_PARENTID = 0 " +
		"            CONNECT BY PRIOR T.T_KEYID = T.T_PARENTID) REG, " +
		"      dregval_dbt VAL " +
		" WHERE REG.FLD LIKE :PARM_1 " +
		"  AND REG.FLD NOT LIKE :PARM_2 " +
		"  AND VAL.T_KEYID=REG.T_KEYID ";
		
		Params = makeArray( SQLParam( "Parm_1" , "\\" + RegStr + "\\%" ),
		SQLParam( "Parm_2" , "\\" + RegStr + "\\%\\%" ));
		DataSet = execSQLselect( Query, Params , true  );
		

		while ( ( DataSet ) and ( DataSet.moveNext())) //идем по найденным ключам, заполняем свойства
			if (DataSet and (ValType(DataSet.value(0)) != 26))
				// запрос данных по ключам
				Query = " SELECT P.T_NAME, UTL_RAW.CAST_TO_VARCHAR2(V.T_FMTBLOBDATA_XXXX) T_VALUE,Q.T_NAME " +
				" FROM dregparm_dbt P, dregval_dbt V, dregparm_dbt Q " +
				" WHERE P.T_PARENTID = :Parm_1 " +
				"  AND P.T_KEYID = V.T_KEYID " +
				"  AND Q.T_KEYID = P.T_PARENTID ";
				Params = makeArray( SQLParam( "Parm_1" , DataSet.value(0) ));
				DataSet1 = execSQLselect( Query, Params , true  );

				while ( ( DataSet1 ) and ( DataSet1.moveNext())) // заполняем свойства
					if(DataSet1.value(0) == "SORT")
						if ((ValType(DataSet1.value(1)) != 26))
							Sort_(Sort_.Size()) = DataSet1.value(1);
						else
							Sort_(Sort_.Size()) = "1";
						end;
					elif(DataSet1.value(0) == "USERNAME")
						if ((ValType(DataSet1.value(1)) != 26))
							UserName(UserName.Size()) = DataSet1.value(1);
						else
							UserName(UserName.Size()) = "-1";
						end;
						NodeName(NodeName.Size()) = DataSet1.value(2);
						DBName(DBName.Size()) = "";
						if ( not CheckGrantToTable(UserName(UserName.Size()-1),ArrOfTablesUsed)) //проверка доступа по ссылкам к таблицам
							println("Нет доступа к данным узла " + NodeName(NodeName.Size()-1));
							CheckGrant(CheckGrant.Size()) = 0;
						else
							CheckGrant(CheckGrant.Size()) = 1;
						end;
					end;
				end;

			end;
		end;
	//запрос в реестре головного узла
	end;


END; // класс для ссылок к схемам

Var ArrOfRegParam = TSchemaReferences("PRBB\\БД", {Name_Bank});
/* -- EVG -- */

PRIVATE CLASS (CB_CReportTemplate) Sf_DistrReport

  var NumTableStr = 0; 

  var BeginHeadNum =1; // начало шапки
  var EndHeadNum   =8; // конец шапки
  
  var BeginBottomNum =16; // начало подписей
  var EndBottomNum   =25; // конец подписей 



  MACRO PrintMode():INTEGER
     return DL_OUTREPORT_EXCEL;
  END;

   PRIVATE MACRO PrintHead( IsNotEmpty : bool)
    var date1, date2, sqlString, rs, count, i, period = "", strPeriod = "", year = 0;
    record Party(party);
    var tmpr;
//debugbreak;
    if(IsNotEmpty == true)

      date1 = SfJournal.OpenDate;
      if(SfJournal.CloseDate == date(0,0,0))
        date2 = {CurDate};
      else     
        date2 = SfJournal.CloseDate;
      end;

			/* EVG To 2030 25/10/2011 Перенесено из локального макроса ЭВ */
			//переносим в свойство класса ссылки на удаленные схемы
			if ( UnionJournal )
				ArrOfRegParam.AddAllRef;
			end;
			//переносим в свойство класса ссылки на удаленные схемы
			/* -- EVG -- */

			/* Если не правильно подтягиваются даты в шапку - курить здесь.*/
			date1 = BeginDate;
			date2 = EndDate;
			/* ===========================================================*/
			
      ПолучитьСубъекта ({OurBank}, Party ); 

      //period = GetPeriod(date1, date2, year );

      if((period == NULL) OR (period == ""))
        strPeriod = "за период с " + string(date1) + " по " + string(date2);
      else
        strPeriod = "за "+ period + " " + year + " года";
      end;
			
      PrintFormatString( NULL,
                       "JNum"        , "ЖУРНАЛ УЧЕТА ПОЛУЧЕННЫХ И ВЫСТАВЛЕННЫХ СЧЕТОВ-ФАКТУР",
                       "RecNameTitle", "Наименование налогоплательщика",
                       "ReceiverName", Party.Name,
                       "ReceINNTitle", "ИНН/КПП налогоплательщика",
                       "ReceiverINN" , ПолучитьКодСубъекта( {OurBank}, PTCK_INN ), 
                       "DateP"       , strPeriod
                     );
   else
      PrintFormatString( NULL,
                       "JNum"        , "",
                       "RecNameTitle", "",
                       "ReceiverName", "",
                       "ReceINNTitle", "",
                       "ReceiverINN" , "", 
                       "DateP"       , ""
                     );


      DeleteRow(BeginHeadNum, EndHeadNum);
   end;

 END;

  PRIVATE MACRO BeginReport( NumCopy:INTEGER )
   NumTableStr = 0; 
   SetActiveSheet( "jrd" );
  
   SetNumberPage("Страница ", NumStr);

   PrintHead(FPrintHead);

   RegisterTable( "N1_MainTable", NULL,
                  "NN"                ,
                  "CDate"             ,
                  "Mode_Code"         ,
                  "Oper_Code"         ,
                  "CNumberSrc"        ,
                  "CDateSrc"          ,
                  "CNumberFc"         , 
                  "CDateFc"           ,  
                  "Cnumber_Corr"      ,
                  "Cdate_Corr"        ,
                  "CReceiverName"     ,
                  "CReceiverINN"      ,
                  "Valuta_NC"         ,
                  "TotalWithNDS"      ,
                  "TotalNDS"          ,
                  "MSumma_All"        ,
                  "PSumma_All"        ,
                  "MSumma_NDS"        ,
                  "PSumma_NDS"      
                );

  END;

 PRIVATE MACRO EndReport()
    var RowFrom = 0, RowTo = 0;  
    EndTable();
// debugbreak;
    if(FPrintBottom == true)
      PrintFormatString( NULL,
                        "Dolz" , Dolz_1,  
                        "FIO" , FIO_1
                         );
    else
      RowFrom = BeginBottomNum + NumTableStr;
      RowTo   = EndBottomNum + NumTableStr;

      if(FPrintHead == false)
        RowFrom = RowFrom - (EndHeadNum - BeginHeadNum + 1);
        RowTo   = RowTo   - (EndHeadNum - BeginHeadNum + 1);
      end;

      DeleteRow(RowFrom, RowTo);
    end;
   
  END;

  PRIVATE MACRO PrintLine( NN, CDate, Mode_Code, Oper_Code, CNumberSrc, CDateSrc, CNumberFc, CDateFc, Cnumber_Corr, Cdate_Corr, CReceiverName, CReceiverINN, Valuta_NC, TotalWithNDS, TotalNDS, MSumma_All, PSumma_All, MSumma_NDS, PSumma_NDS )
//     debugbreak;

     PrintTableLine( "NN"           ,  NN           ,  null,
                     "CDate"        ,  CDate        ,  null,
                     "Mode_Code"    ,  Mode_Code    ,  null,
                     "Oper_Code"    ,  Oper_Code    ,  null,
                     "CNumberSrc"   ,  CNumberSrc   ,  null,
                     "CDateSrc"     ,  CDateSrc     ,  null,
                     "CNumberFc"    ,  CNumberFc    ,  null,
                     "CDateFc"      ,  CDateFc      ,  null,
                     "Cnumber_Corr" ,  Cnumber_Corr ,  null,
                     "Cdate_Corr"   ,  Cdate_Corr   ,  null,
                     "CReceiverName",  CReceiverName,  null,
                     "CReceiverINN" ,  CReceiverINN ,  null,
                     "Valuta_NC"    ,  Valuta_NC    ,  null,
                     "TotalWithNDS" ,  TotalWithNDS ,  null,
                     "TotalNDS"     ,  TotalNDS     ,  null,
                     "MSumma_All"   ,  MSumma_All   ,  null,
                     "PSumma_All"   ,  PSumma_All   ,  null,
                     "MSumma_NDS"   ,  MSumma_NDS   ,  null,
                     "PSumma_NDS"   ,  PSumma_NDS   ,  null
                   );                                       

  END;


	PRIVATE MACRO PrintFacturaDistrWR( rs : RsdRecordset, NN : @integer )

		var CDate, Mode_Code, Oper_Code, CNumberSrc, CDateSrc, CNumberFc, CDateFc, Cnumber_Corr, Cdate_Corr, CReceiverName, CReceiverINN, Valuta_NC, TotalWithNDS, TotalNDS, MSumma_All, PSumma_All, MSumma_NDS, PSumma_NDS;
		var Assignment = 0, FacturaID = 0; 
		var SrcFacturaNumber : string;
		var SrcCDate         : date;
		var num, i, IsAmountNULL; 
		// BILFACTURA

		var TotalAmount ;
		var InBook      ;
		var FIC         ;
		var FIID        ; 
		//debugbreak;
		//rs.value("T_AMOUNT", IsAmountNULL );

		FacturaID    = rs.value("T_FACTURAID" );
		Oper_Code = "";
		Mode_Code = "";
//		msgbox("!!!!");
		ssql_ = "SELECT   ATTR.t_groupid, decode(attr.t_name, chr(1), '-', attr.t_name) t_name " 
+"\n				FROM   dobjatcor_dbt ATCOR, dobjattr_dbt attr " 
+"\n							WHERE       ATCOR.T_OBJECT = LPAD ('"+FacturaID+"', 10, 0) " 
+"\n								 AND ATCOR.T_OBJECTTYPE = 720 " 
+"\n								 AND ATCOR.T_GROUPID IN (102, 103) " 
+"\n								 AND ATTR.T_ATTRID = ATCOR.T_ATTRID " 
+"\n								 AND ATTR.T_OBJECTTYPE = ATCOR.T_OBJECTTYPE " 
+"\n								 AND ATTR.T_GROUPID = ATCOR.T_GROUPID " ;
		
msgbox(ssql_);
	   rs_ssql_ = RsdRecordset( ssql_ );
	   while( rs_ssql_.moveNext() )
		if (rs_ssql_.value(0) == 102)
			if (rs_ssql_.value(1) == "-")
				Oper_Code = "";
			else
				Oper_Code = rs_ssql_.value(1);
			end;
		elif (rs_ssql_.value(0) == 103)
			if (rs_ssql_.value(1) == "-")
				Mode_Code = "";
			else
				Mode_Code = rs_ssql_.value(1);
			end;
		end;
	   end;
		Cnumber_Corr = ""; 
		Cdate_Corr   = date(0,0,0);
		 var sql_isprav = " SELECT   NT.T_NOTEKIND, " 
	+"\n		 DECODE ( " 
	+"\n            NT.T_NOTEKIND, " 
	+"\n            101, " 
	+"\n               ASCII (SUBSTR (UTL_RAW.cast_to_varchar2 (nt.t_text), 1, 1)) " 
	+"\n            || '.' " 
	+"\n            || ASCII (SUBSTR (UTL_RAW.cast_to_varchar2 (nt.t_text), 2, 1)) " 
	+"\n            || '.' " 
	+"\n            || (ASCII (SUBSTR (UTL_RAW.cast_to_varchar2 (nt.t_text), 3, 1)) " 
	+"\n                + ASCII (SUBSTR (UTL_RAW.cast_to_varchar2 (nt.t_text), 4, 1)) " 
	+"\n                  * 16 " 
	+"\n                  * 16), " 
	+"\n            102, " 
	+"\n            UTL_RAW.cast_to_varchar2 (nt.t_text) " 
	+"\n         ) " 
	+"\n            t_text " 
	+"\n  FROM   dnotetext_dbt nt " 
	+"\n WHERE       NT.T_DOCUMENTID = LPAD ('"+FacturaID+"', 10, 0) " 
	+"\n         AND NT.T_OBJECTTYPE = 720 " 
	+"\n         AND NT.T_NOTEKIND IN (101, 102); ";
		var rsb_isprav = RSdRecordset(sql_isprav);
		while (rsb_isprav.movenext())
				if (rsb_isprav.value(0) == 102)
					Cnumber_Corr = string(rsb_isprav.value(1));
				elif ((rsb_isprav.value(0) == 101))
					Cdate_Corr = string(rsb_isprav.value(1));
				end;
		end;
	   

		
		
		Assignment   = rs.value("T_ASSIGNMENT");
		CDate        = date(rs.value("T_CREATIONDATE"));

		SrcFacturaNumber = "";
		SrcCDate        = date(0,0,0);

		CNumberSrc = rs.value("T_FACTURANUMBER" );  
		CDateSrc   = date(rs.value("T_CREATIONDATE"));

		CNumberFc  = "";
		CDateFc    = date(0,0,0);

		CReceiverName = rs.value("T_RECEIVERNAME");
		CReceiverINN  = rs.value("T_RECEIVERINN" );
		if (CReceiverINN == "0000000000000") 
			CReceiverINN = "";
		end;

		MSumma_All = "";
		PSumma_All = "";
		MSumma_NDS = "";
		PSumma_NDS = "";

		TotalWithNDS = string(rs.value("T_TOTALWITHNDS"));
		if(GetNoNDSSign( FacturaID ) == true)
			TotalNDS     = "без НДС";
		else
			TotalNDS     = string(rs.value("T_TOTALNDS"));
		end;
		Valuta_NC = rs.value("FiName");
		PrintLine( NN, CDate, Mode_Code, Oper_Code, CNumberSrc, CDateSrc, CNumberFc, CDateFc, Cnumber_Corr, Cdate_Corr, CReceiverName, CReceiverINN, Valuta_NC, TotalWithNDS, TotalNDS, MSumma_All, PSumma_All, MSumma_NDS, PSumma_NDS  );
	END;

	PRIVATE MACRO PrintFTableDistrWR(NumFIID, AmountByFIID, NDSAmountByFIID,AmountWithNDSByFIID, AllInBook)
		var i = 0;
		debugbreak;

		var NumRow = asize(NumFIID) -1; 

		MergeRow( "H8_IncludeInbook", "H8_IncludeInbook", getCurrentRow(), getCurrentRow() + NumRow);
		MergeRow( "A1_Date", "C_3_SFName", getCurrentRow(), getCurrentRow() + NumRow);

		while(i<asize(NumFIID))
			PrintTableLine( "A1_Date"         , "Всего ",                            null,
			"D4_AllSum"       ,  AmountByFIID[i],                      null,
			"E5_TaxSum"         ,  NDSAmountByFIID[i],                   null,
			"F6_AllSumWithTax"  ,  AmountWithNDSByFIID[i],               null,
			"G7_FIID"           ,  GetCompresNameCurrency(NumFIID[i]),   null,
			"H8_IncludeInbook"  ,  AllInBook,                            null
			);                           
			i = i +1;
		end;
	END;

	PRIVATE MACRO Create()
		var date1, date2, sqlString, rs, count, i;
		record Party(party);
		Array NumFIID;
		Array AmountByFIID, NDSAmountByFIID, AmountWithNDSByFIID ;
		var AllInBook : money;
		var EmptyStr = "                                                                                                   ";
		AllInBook = $0;

		/* EVG To 2030 25/10/2011 Перенесено из локального макроса ЭВ */
		var delim;
		/* -- EVG -- */

    date1 = BeginDate;
    date2 = EndDate  ;

    sqlString = "SELECT COUNT(1) FROM DBILFACTURA_DBT BF "+acssql_from+ " WHERE BF.T_REGDATE BETWEEN to_date('" + date1 +
     "', 'dd.mm.yyyy') AND to_date( '"+ date2 +"', 'dd.mm.yyyy') AND BF.T_DIRECTION = "+ Direction + 
     " AND " + acssql_query ;

    if(PrnDepartment != 0)
        sqlString = sqlString + " AND BF.T_DEPARTMENT = " + PrnDepartment;
    end;

    rs = RsdRecordset( sqlString );

    rs.moveNext();

    count = rs.value(0);

    if( count == 0 )

    else
			/* EVG To 2030 25/10/2011 Перенесено из локального макроса ЭВ - реализация печати сводного журнала */
			i = 0;
			if ( UnionJournal )
				sqlString = "SELECT * FROM (";
				while( i < (ArrOfRegParam.UserName.Size())) //цикл по собранным в свойстве класса ссылкам
					if ( ArrOfRegParam.CheckGrant[i] ) //добавляем строки запроса если проверен доступ к таблицам
						if ( i > 0 )
							sqlString = sqlString + " UNION ";
							delim = ".";
						else
							delim = "";
						end;
						sqlString = sqlString +
						" SELECT BF.T_FACTURAID, BF.T_CREATIONDATE, BF.T_FACTURANUMBER, BF.T_RECEIVERNAME, BF.T_RECEIVERINN, BF.T_TOTALAMOUNT, BF.T_TOTALNDS, BF.T_TOTALWITHNDS, BF.T_ASSIGNMENT, " + 
						"  ( SELECT SUM(BE.T_AMOUNT) FROM " + ArrOfRegParam.UserName[i] + delim + "DBILBOOKENTRY_DBT BE WHERE BE.T_FACTURAID = BF.T_FACTURAID ) AS T_AMOUNT, " + 
						"  FI.T_NAME, FI.T_ISO_NUMBER AS FiName, BF.T_FIID," +
						ArrOfRegParam.Sort_[i] + "1 AS QUERY_ID" +  
						" FROM " + ArrOfRegParam.UserName[i] + delim + "DBILFACTURA_DBT BF, " + 
						ArrOfRegParam.UserName[i] + delim + "DFININSTR_DBT FI, " +
						ArrOfRegParam.UserName[i] + delim + "DBILSFTYPE_DBT FT  " +
						" WHERE BF.T_REGDATE BETWEEN to_date( '"+date1+"', 'dd.mm.yyyy') AND to_date( '"+date2+"', 'dd.mm.yyyy')" +
						" AND BF.T_DIRECTION = "+ Direction +
						//" AND BF.T_FACTURAID = BE.T_FACTURAID(+) " +
						" AND BF.T_FIID = FI.T_FIID(+) "
						" AND BF.T_SFTYPEID = FT.T_SFTYPEID "
						" AND FT.T_POSTTOJOURNAL = 'X' " +
						" AND " + acssql_query ;         
						if(PrnDepartment != 0)
							sqlString = sqlString + " AND BF.T_DEPARTMENT = " + PrnDepartment;
						end;
					end;
					i = i + 1;
				end;
				// sqlString = sqlString + " ORDER BY BF.T_REGDATE, BF.T_FACTURANUMBER ";
				//А.Киселев 28.03.2011
				// sqlString = sqlString + " ORDER BY BF.T_REGDATE, BF.T_TOTALNDS ";
				sqlString = sqlString + ")  ORDER BY T_CREATIONDATE, QUERY_ID, T_TOTALNDS ";
				//А.Киселев 28.03.2011
			else
				/* -- EVG -- */
				/*sqlString = " SELECT distinct BF.T_CREATIONDATE, BF.T_FACTURANUMBER, BF.T_RECEIVERNAME, BF.T_TOTALAMOUNT, BF.T_TOTALNDS, BF.T_TOTALWITHNDS, " +
				//" (select sum(T_AMOUNT) from  DBILBOOKENTRY_DBT where T_FACTURANUMBER = BE.T_FACTURANUMBER) t_amount, "+ не делайте так больше А.Киселев
				" ( SELECT SUM(BE.T_AMOUNT) FROM DBILBOOKENTRY_DBT BE WHERE BE.T_FACTURAID = BF.T_FACTURAID ) AS T_AMOUNT, " +
				// BE.T_AMOUNT, 
				" FI.T_CCY, BF.T_FIID, BF.T_REGDATE, BF.T_FACTURANUMBER " +
				//" FROM DBILFACTURA_DBT BF, DBILBOOKENTRY_DBT BE, DFININSTR_DBT FI, DBILSFTYPE_DBT FT  ";
				" FROM DBILFACTURA_DBT BF, DFININSTR_DBT FI, DBILSFTYPE_DBT FT  ";
				sqlString = sqlString + acssql_from + 
				" WHERE BF.T_REGDATE BETWEEN to_date( '"+date1+"', 'dd.mm.yyyy') AND to_date( '"+date2+"', 'dd.mm.yyyy')" +
				" AND BF.T_DIRECTION = "+ Direction +
				//" AND BF.T_FACTURAID = BE.T_FACTURAID(+) " +
				" AND BF.T_FIID = FI.T_FIID(+) "
				" AND BF.T_SFTYPEID = FT.T_SFTYPEID "
				" AND FT.T_POSTTOJOURNAL = 'X' " +
				" AND " + acssql_query ; */       
				debugbreak;
				sqlString = " SELECT BF.T_FACTURAID,  BF.T_CREATIONDATE, BF.T_FACTURANUMBER, BF.T_RECEIVERNAME, BF.T_RECEIVERINN, BF.T_TOTALAMOUNT, BF.T_TOTALNDS, BF.T_TOTALWITHNDS, BF.T_ASSIGNMENT, FI.T_NAME , decode(FI.T_ISO_NUMBER, '810', '643', FI.T_ISO_NUMBER) AS FiName, BF.T_FIID "+
				" FROM DBILFACTURA_DBT BF, DFININSTR_DBT FI, DBILSFTYPE_DBT FT  ";
				sqlString = sqlString + acssql_from + 
				" WHERE BF.T_REGDATE BETWEEN to_date( '"+date1+"', 'dd.mm.yyyy') AND to_date( '"+date2+"', 'dd.mm.yyyy')" +
				" AND BF.T_DIRECTION = "+ Direction +

				" AND BF.T_FIID = FI.T_FIID(+) "
				" AND BF.T_SFTYPEID = FT.T_SFTYPEID "
				" AND FT.T_POSTTOJOURNAL = 'X' " +
				" AND " + acssql_query ; 

				if(PrnDepartment != 0)
					sqlString = sqlString + " AND BF.T_DEPARTMENT = " + PrnDepartment;
				end;
				/* EVG To 2030 25/10/2011 Перенесено из локального макроса ЭВ. Попробуем применить для всех банков. */
				// sqlString = sqlString + " ORDER BY BF.T_REGDATE, BF.T_FACTURANUMBER ";
				//А.Киселев 28.03.2011
				sqlString = sqlString + " ORDER BY BF.T_CREATIONDATE, BF.T_TOTALNDS ";
				//А.Киселев 28.03.2011
				/* -- EVG -- */
			end;   
			var total_amount:money = $0.0;
			var total_nds:money = $0.0;
			msgbox(sqlString);
			rs = RsdRecordset( sqlString );
			i = 1;
			while( rs.moveNext() )
				PrintFacturaDistrWR( rs, i );
				i = i + 1;
				total_amount = total_amount + money(rs.value("T_TOTALAMOUNT")) + money(rs.value("T_TOTALNDS"));
				total_nds = total_nds + money(rs.value("T_TOTALNDS"));
			end;
//			msgbox(total_amount);
//			msgbox(total_nds);
			PrintLine( "", "", "", "", "", "", "", "", "", "", "", "", "Итого: ",string(total_amount),string(total_nds), "", "", "", "" );
		end;
		PrintFTableDistrWR(NumFIID, AmountByFIID, NDSAmountByFIID,AmountWithNDSByFIID, AllInBook);
	END;
	initCB_CReportTemplate( null, "biljrddot_new.xls" );
END;

	/*-----------------------------------------------------------------------------------*/
PRIVATE CLASS (CB_CReportTemplate) Sf_ObtReport

  var NumTableStr = 0; 

  var BeginHeadNum =1; // начало шапки
  var EndHeadNum   =8; // конец шапки
  
  var BeginBottomNum =16; // начало подписей
  var EndBottomNum   =25; // конец подписей 



  MACRO PrintMode():INTEGER
     return DL_OUTREPORT_EXCEL;
  END;

   PRIVATE MACRO PrintHead( IsNotEmpty : bool)
    var date1, date2, sqlString, rs, count, i, period = "", strPeriod = "", year = 0;
    record Party(party);
    var tmpr;
//debugbreak;
    if(IsNotEmpty == true)

      date1 = SfJournal.OpenDate;
      if(SfJournal.CloseDate == date(0,0,0))
        date2 = {CurDate};
      else     
        date2 = SfJournal.CloseDate;
      end;

      ПолучитьСубъекта ({OurBank}, Party ); 

      period = GetPeriod(date1, date2, year );

      if((period == NULL) OR (period == ""))
        strPeriod = "за период с "+string(date1) + " по "+string(date2);
      else
        strPeriod = "за "+ period + " " + year + " года";
      end;

      PrintFormatString( NULL,
                       "JNum"        , "ЖУРНАЛ УЧЕТА ПОЛУЧЕННЫХ И ВЫСТАВЛЕННЫХ СЧЕТОВ-ФАКТУР",
                       "RecNameTitle", "Наименование налогоплательщика",
                       "ReceiverName", Party.Name,
                       "ReceINNTitle", "ИНН/КПП налогоплательщика",
                       "ReceiverINN" , ПолучитьКодСубъекта( {OurBank}, PTCK_INN ), 
                       "DateP"       , strPeriod
                     );
   else
      PrintFormatString( NULL,
                       "JNum"        , "",
                       "RecNameTitle", "",
                       "ReceiverName", "",
                       "ReceINNTitle", "",
                       "ReceiverINN" , "", 
                       "DateP"       , ""
                     );


      DeleteRow(BeginHeadNum, EndHeadNum);
   end;

 END;

	  PRIVATE MACRO BeginReport( NumCopy:INTEGER )
		NumTableStr = 0; 
		SetActiveSheet( "jro" );
	   
		SetNumberPage("Страница ", NumStr);

		PrintHead(FPrintHead);

		RegisterTable( "N1_MainTable", NULL,
					   "NN"                ,
					   "CDate"             ,
					   "Mode_Code"         ,
					   "Oper_Code"         ,
					   "CNumberSrc"        ,
					   "CDateSrc"          ,
					   "CNumberFc"         , 
					   "CDateFc"           ,  
					   "Cnumber_Corr"      ,
					   "Cdate_Corr"        ,
					   "CReceiverName"     ,
					   "CReceiverINN"      ,
					   "Valuta_NC"         ,
					   "TotalWithNDS"      ,
					   "TotalNDS"          ,
					   "MSumma_All"        ,
					   "PSumma_All"        ,
					   "MSumma_NDS"        ,
					   "PSumma_NDS"      
					 );

	  END;

	  PRIVATE MACRO EndReport()
		var RowFrom = 0, RowTo = 0;  
		EndTable();
	// debugbreak;
		if(FPrintBottom == true)
		  PrintFormatString( NULL,
							"Dolz" , Dolz_1,  
							"FIO" , FIO_1
							 );
		else
		  RowFrom = BeginBottomNum + NumTableStr;
		  RowTo   = EndBottomNum + NumTableStr;

		  if(FPrintHead == false)
			RowFrom = RowFrom - (EndHeadNum - BeginHeadNum + 1);
			RowTo   = RowTo   - (EndHeadNum - BeginHeadNum + 1);
		  end;

		  DeleteRow(RowFrom, RowTo);
		end;
	   
	  END;

																	  
	  PRIVATE MACRO PrintLine( NN, CDate, Mode_Code, Oper_Code, CNumberSrc, CDateSrc, CNumberFc, CDateFc, Cnumber_Corr, Cdate_Corr, CReceiverName, CReceiverINN, Valuta_NC, TotalWithNDS, TotalNDS, MSumma_All, PSumma_All, MSumma_NDS, PSumma_NDS )
	//     debugbreak;

		 PrintTableLine( "NN"           ,  NN           ,  null,
						 "CDate"        ,  CDate        ,  null,
						 "Mode_Code"    ,  Mode_Code    ,  null,
						 "Oper_Code"    ,  Oper_Code    ,  null,
						 "CNumberSrc"   ,  CNumberSrc   ,  null,
						 "CDateSrc"     ,  CDateSrc     ,  null,
						 "CNumberFc"    ,  CNumberFc    ,  null,
						 "CDateFc"      ,  CDateFc      ,  null,
						 "Cnumber_Corr" ,  Cnumber_Corr ,  null,
						 "Cdate_Corr"   ,  Cdate_Corr   ,  null,
						 "CReceiverName",  CReceiverName,  null,
						 "CReceiverINN" ,  CReceiverINN ,  null,
						 "Valuta_NC"    ,  Valuta_NC    ,  null,
						 "TotalWithNDS" ,  TotalWithNDS ,  null,
						 "TotalNDS"     ,  TotalNDS     ,  null,
						 "MSumma_All"   ,  MSumma_All   ,  null,
						 "PSumma_All"   ,  PSumma_All   ,  null,
						 "MSumma_NDS"   ,  MSumma_NDS   ,  null,
						 "PSumma_NDS"   ,  PSumma_NDS   ,  null
					   );                                       

	  END;


	  PRIVATE MACRO PrintFacturaObtWR( rs : RsdRecordset, NN : @integer )

		var CDate, Mode_Code, Oper_Code, CNumberSrc, CDateSrc, CNumberFc, CDateFc, Cnumber_Corr, Cdate_Corr, CReceiverName, CReceiverINN, Valuta_NC, TotalWithNDS, TotalNDS, MSumma_All, PSumma_All, MSumma_NDS, PSumma_NDS;
		var Assignment = 0, FacturaID = 0; 
		var SrcFacturaNumber : string;
		var SrcCDate         : date;
		var num, i, IsAmountNULL; 
		// BILFACTURA

		var TotalAmount ;
		var InBook      ;
		var FIC         ;
		var FIID        ; 
	//debugbreak;
		rs.value("T_AMOUNT", IsAmountNULL );
		
		FacturaID    = rs.value("T_FACTURAID" );
		Oper_Code = "";
		Mode_Code = "";
		msgbox("!!!!");
		ssql_ = "SELECT   ATTR.t_groupid, attr.t_name " 
+"\n				FROM   dobjatcor_dbt ATCOR, dobjattr_dbt attr " 
+"\n							WHERE       ATCOR.T_OBJECT = LPAD ('"+FacturaID+"', 10, 0) " 
+"\n								 AND ATCOR.T_OBJECTTYPE = 720 " 
+"\n								 AND ATCOR.T_GROUPID IN (102, 103) " 
+"\n								 AND ATTR.T_ATTRID = ATCOR.T_ATTRID " 
+"\n								 AND ATTR.T_OBJECTTYPE = ATCOR.T_OBJECTTYPE " 
+"\n								 AND ATTR.T_GROUPID = ATCOR.T_GROUPID " ;
		

	   rs_ssql_ = RsdRecordset( ssql_ );
	   while( rs_ssql_.moveNext() )
		if (rs_ssql_.value(0) == 102)
			Oper_Code = rs_ssql_.value(1);
		elif (rs_ssql_.value(0) == 103)
			Mode_Code = rs_ssql_.value(1);
		end;
	   end;
	   		
		Cnumber_Corr = ""; 
		Cdate_Corr   = date(0,0,0);


		Assignment   = rs.value("T_ASSIGNMENT" );



		CDate        = date(rs.value("T_ACQUISITIONDATE"));


		SrcFacturaNumber = "";
		SrcCDate        = date(0,0,0);


		CNumberSrc = rs.value("T_FACTURANUMBER" );  
		CDateSrc   = date(rs.value("T_CREATIONDATE"));

		CNumberFc  = "";
		CDateFc    = date(0,0,0);


		CReceiverName = rs.value("T_SUPPLIERNAME"  );
		CReceiverINN  = rs.value("T_SUPPLIERINN"   );

		MSumma_All = "";
		PSumma_All = "";
		MSumma_NDS = "";
		PSumma_NDS = "";
		TotalWithNDS = string(rs.value("T_TOTALWITHNDS"));

		if(GetNoNDSSign( FacturaID ) == true)
		  TotalNDS     = "без НДС";
		else
		  TotalNDS     = string(rs.value("T_TOTALNDS"));
		end;

		Valuta_NC = rs.value("FiName");
		
		PrintLine( NN, CDate, Mode_Code, Oper_Code, CNumberSrc, CDateSrc, CNumberFc, CDateFc, Cnumber_Corr, Cdate_Corr, CReceiverName, CReceiverINN, Valuta_NC, TotalWithNDS, TotalNDS, MSumma_All, PSumma_All, MSumma_NDS, PSumma_NDS  );
	  END;



	  PRIVATE MACRO Create()
		var date1, date2, sqlString, rs, count, i;
		record Party(party);

		var EmptyStr = "                                                                                                   ";

		date1 = BeginDate;
		date2 = EndDate;
		
		sqlString = "SELECT COUNT(1) FROM DBILFACTURA_DBT BF "+acssql_from+ " WHERE BF.T_REGDATE BETWEEN to_date('" + date1 +
		 "', 'dd.mm.yyyy') AND to_date( '"+ date2 +"', 'dd.mm.yyyy') AND BF.T_DIRECTION = "+ Direction + 
		 " AND " + acssql_query ;
		
		if(PrnDepartment != 0)
			sqlString = sqlString + " AND BF.T_DEPARTMENT = " + PrnDepartment;
		end;

		rs = RsdRecordset( sqlString );

		rs.moveNext();

		count = rs.value(0);

		if( count == 0 )

		else
		
		   sqlString = " SELECT BF.T_FACTURAID,  BF.T_CREATIONDATE, BF.T_ACQUISITIONDATE,  BF.T_FACTURANUMBER, BF.T_SUPPLIERNAME, BF.T_SUPPLIERINN, BF.T_TOTALAMOUNT, BF.T_TOTALNDS, BF.T_TOTALWITHNDS, BF.T_ASSIGNMENT, BE.T_AMOUNT, FI.T_NAME || ', ' || FI.T_ISO_NUMBER AS FiName, BF.T_FIID "+
					   " FROM DBILFACTURA_DBT BF, DBILBOOKENTRY_DBT BE, DFININSTR_DBT FI, DBILSFTYPE_DBT FT  ";
		   sqlString = sqlString + acssql_from + 
					   " WHERE BF.T_REGDATE BETWEEN to_date( '"+date1+"', 'dd.mm.yyyy') AND to_date( '"+date2+"', 'dd.mm.yyyy')" +
					   " AND BF.T_DIRECTION = "+ Direction +
					   " AND BF.T_FACTURAID = BE.T_FACTURAID(+) " +
					   " AND BF.T_FIID = FI.T_FIID(+) "
					   " AND BF.T_SFTYPEID = FT.T_SFTYPEID "
					   " AND FT.T_POSTTOJOURNAL = 'X' " +
					   " AND " + acssql_query ;         
		   if(PrnDepartment != 0)
			   sqlString = sqlString + " AND BF.T_DEPARTMENT = " + PrnDepartment;
		   end;

		   sqlString = sqlString + " ORDER BY BF.T_REGDATE, BF.T_FACTURANUMBER ";

		   rs = RsdRecordset( sqlString );

		   i = 1;
		   while( rs.moveNext() )
			 PrintFacturaObtWR( rs, i );
			 i = i + 1;
		   end;

		   NumTableStr = i-1; 
		 end;


	  END;

	  initCB_CReportTemplate( null, "biljrodot_new.xls" );
	END;


/*-----------------------------------------------------------------------------------*/
MACRO PrintDocument1( ncopy, pJournalID, pDirection, pDolz_1, pFIO_1, pPrnDepartment, pBeginDate, pEndDate, pNumStr):bool
 

  Var stat = 0;
  Var NumPage  = 1 ;
  var TempFile;
  
  JournalID      =  pJournalID;      
  Direction      =  pDirection;   
  Dolz_1         =  pDolz_1;      
  FIO_1          =  pFIO_1;       
  PrnDepartment  =  pPrnDepartment;
  BeginDate      =  pBeginDate;    
  EndDate        =  pEndDate;      
  NumStr         =  pNumStr;   

	
	/* EVG To 2030 25/10/2011 Перенесено из локального макроса ЭВ. Попробуем применить для всех банков. */
	if ( ( fgBank.is_EXV ) or (fgBank.is_VUZ) or (fgBank.is_GEB) or (fgBank.is_NBS) )
		if (MsgBoxEx ( "Выпустить сводный ЖУСФ?", MB_YES+MB_NO, IND_NO, "Режим выпуска ЖУСФ" ) == IND_YES )
			UnionJournal = 1;
		else
			UnionJournal = 0;
		end;
	end;
	/* -- EVG -- */
	
	AskPrintQ();
	
  ClearRecord(BILSFJOURNAL);
  BILSFJOURNAL.JournalID = JournalID;
  if(not GetEQ(BILSFJOURNAL))
    return false;
  end;

  if(GetObjectRestriction(acssql_query, 111, {oper}, "BF", CNTX_BilFactura,"BILFACTURA.DBT", acssql_from, true ))
    if(acssql_from != "")
      acssql_from = " , " +acssql_from;
    end;
  
    if(Direction == 1)
        Sf_DistrReport().Run();
    else if(Direction == 2)
        Sf_ObtReport().Run();
    end;
    end;
  end;

  return true;
END;
