import "or_rep_h.mac", globals, "CbReport_h.mac";
Import oralib, rsexts, PTInter, BilFacturaInter;
import BankInter;

/* EVG 3/03/2014 Для вызова FakturaReceiverAcc() и getISOCode() */
import "bilsfprn_lib.mac";
//TAM 30.04.2014 R-367552-2
import "fg_life_parm.mac";
debugbreak;
Var FacturaID; 
Var Dolz_1 = "";
Var FIO_1  = "";
Var Dolz_2 = "";
Var FIO_2  = "";
                                               
FILE BILFACTURA ("bilfactura.dbt");
FILE BILFACTURASRC ("bilfactura.dbt");
FILE FININSER   ("fininstr.dbt") KEY 0;
private VAR  Factura = BILFACTURA;
private VAR  FacturaSrc = BILFACTURASRC;

private VAR FirstFcSheet  = true;
private VAR FirstFcsSheet = true;
var FacturaArray;
private var MassPrintDocument = false;
private var fgBank = fg_life_subject({OurBank});


MACRO FindMeasure( iCode )
    file    ff      ( "measure.dbt" )        KEY 0; /* Cod */
    Var     szStr   = "";


    ff.MeasureCode        = iCode;
    if( GetEQ( ff ) )
        szStr       = ff.Cnm; /* сокращенное наимонование */
    end;


    return szStr;
END;


MACRO FillSpace(str:String, num)
  Var retstr:string = "";
  Var i = 0;
  Var mon: money = Money(0);
    
  if((str != "") and (str != string(mon)))
    retstr = str;
  else
    while(i<num)
      retstr = retstr + "-";
      i = i+1;
    end;
  end;

  return retstr;
END;

MACRO DateToStringShort (IDate)
   VAR day, month, year, ODate;
   if ((ValType (IDate) != V_DATE) and (ValType (IDate) != V_UNDEF))
      MsgBox ("Неверный формат даты: "+IDate);
      return "";
   end;
   if ((ValType (IDate) == V_UNDEF) or (IDate == Date (0,0,0)))
      return "00.00.0000";
   end;
   DateSplit (IDate, day, month, year);
   if (day < 10)
      day = String ("0"+day);
   else
      day = String (day);
   end;
   if (month < 10)
      month = String ("0"+month);
   else
      month = String (month);
   end;
   return String (day+"."+month+"."+year);
END;

/* EVG 3/03/2014 Дублируется с импортируемым из bilsfprn_lib.mac
MACRO getISOCode( FIID:integer ):integer
  record fi( "fininstr.dbt", "bank.def" );
  if( FIID >= 0 )
    if( ПолучитьФинИн( FIID, fi ) == 0 )
      return int(fi.ISO_Number);
    end;
  end;
  return 0;
END;*/


MACRO getFICcy( FIID:integer ):string
  record fi( "fininstr.dbt", "bank.def" );
  if( FIID >= 0 )
    if( ПолучитьФинИн( FIID, fi ) == 0 )
      return fi.ccy; 
    end;
  end;
  return "";
END;


MACRO getFINameNum( FIID:integer ):string
  private var finstr_code = 0;
  record fi( "fininstr.dbt", "bank.def" );
  if( FIID >= 0 )
    if( ПолучитьФинИн( FIID, fi ) == 0 )
      if(fi.iso_number == 810)
        finstr_code = 643;
      else
        finstr_code = fi.iso_number;
      end;
      return fi.Name + ", "+ finstr_code; 
    end;
  end;
  return "";
END;

MACRO FindCountryNumCode(Name)

  var sqlString, rs, cmd, i = 0;
  var NumCode = "";

  sqlString = " SELECT T_CODENUM3 FROM DCOUNTRY_DBT WHERE UPPER(T_NAME) = UPPER(?) ";

  cmd = RSDCommand( sqlString );
  cmd.addParam( "", RSDBP_IN, Name );

  rs = RsdRecordset( cmd );
  if( rs.moveNext() )
    NumCode = STRING(rs.value("T_CODENUM3"));
  end;

  return NumCode;
END;



PRIVATE CLASS (CB_CReportTemplate) SourceFacturaReport

  MACRO PrintMode():INTEGER
     return DL_OUTREPORT_EXCEL;
  END;

  PRIVATE MACRO BeginReport( NumCopy:INTEGER )

   var date1, date2, sqlString, rs, count, i = 0;

   CreateTotalBook();

  END;

  PRIVATE MACRO EndReport()
  var i = 0;
   SaveTotalBook();
   
  END;
///////////////////////////////////////////////////////////////////////////////////////////////////////////

  PRIVATE MACRO PrintLineSrc(Name1          ,
                             Name1a         ,
                             DimensionCod2  ,
                             DimensionName2a,
                             Kol3           ,
                             Price4         ,
                             Summa5         ,
                             Akciz6         ,
                             NDS7           ,
                             SumNDS8        ,
                             SumAll9        
                            )

     PrintTableLine(  "ScrName1"          ,          Name1           , null,
                      "ScrName1a"         ,          Name1a          , null,
                      "ScrDimensionCod2"  ,          DimensionCod2   , null,
                      "ScrDimensionName2a",          DimensionName2a , null,
                      "ScrKol3"           ,          Kol3            , null,
                      "ScrPrice4"         ,   String(Price4)         , null,
                      "ScrSumma5"         ,   String(Summa5)         , null,
                      "ScrAkciz6"         ,   String(Akciz6)         , null,
                      "ScrNDS7"           ,   String(NDS7)           , null,
                      "ScrSumNDS8"        ,   String(SumNDS8)        , null,
                      "ScrSumAll9"        ,   String(SumAll9)        , null
                   );                                                  
                   
  END;
                                                                                 
                                                                           
  PRIVATE MACRO PrintFacturaWRSrc( FacturaLine, FacturaLineSrc, TotalMSumma: @money, TotalPSumma: @money, TotalMSumNDS: @money, TotalPSumNDS: @money, TotalMSumAll: @money, TotalPSumAll: @money)
                                                                                                                                
    var DimensionCode       : string;
    var DimensionName       : string;
    var DimensionCodeBefore : string;
    var DimensionNameBefore : string;
    var KolBefore       : string;
    var Kol             : string;
    var PriceBefore     ;
    var Price           ;
    var Summa           : string;
    var SummaBefore     : string;
    var MSumma          : money;
    var PSumma          : money;
    var AkcizBefore     : string;
    var Akciz           : string;
    var MAkciz          : string;
    var PAkciz          : string;
    var NDS             : string;
    var NDSBefore       : string;
    var a :integer, b:integer;
    var MSumNDS         : money;
    var PSumNDS         : money;
    var MSumAll         : money;
    var PSumAll         : money;



    DimensionNameBefore = FillSpace(FindMeasure(FacturaLineSrc.Measure), 5);
    if(FacturaLine.Measure > 0)
      DimensionCodeBefore = StrSubst(String(FacturaLineSrc.Measure:3), " ", "0" );
    else
      DimensionCodeBefore = FillSpace("", 5);
    end;

    DimensionName = FillSpace(FindMeasure(FacturaLine.Measure), 5);
    if(FacturaLine.Measure > 0)
      DimensionCode = StrSubst(String(FacturaLine.Measure:3), " ", "0" );
    else
      DimensionCode = FillSpace("", 5);
    end;


    KolBefore = FillSpace(FacturaLineSrc.Quantity,5);
    Kol = FillSpace(FacturaLine.Quantity,5);

    PriceBefore  =  FillSpace(FacturaLineSrc.Price,5);
    Price        =  FillSpace(FacturaLine.Price, 5);

    if(FacturaSrc.Assignment != 2)
      SummaBefore  = FillSpace(FacturaLineSrc.Amount, 5);
    else
      SummaBefore  = FillSpace("", 5);
    end;

    if(FacturaSrc.Assignment != 2)
      Summa  = FillSpace(FacturaLine.Amount, 5);
    else
      Summa  = FillSpace("", 5);
    end;

    if((FacturaLineSrc.Amount - FacturaLine.Amount) >= 0)
      MSumma = FacturaLineSrc.Amount - FacturaLine.Amount;
      PSumma = $0;
    else 
      PSumma = -(FacturaLineSrc.Amount - FacturaLine.Amount);
      MSumma = $0;
    end;


    if(FacturaLineSrc.ExciseAmount != $0)
      AkcizBefore = FillSpace(FacturaLineSrc.ExciseAmount, 5);
    else
      AkcizBefore = "без акциза";
    end;

    if(FacturaLine.ExciseAmount != $0)
      Akciz = FillSpace(FacturaLine.ExciseAmount, 5);
    else
      Akciz = "без акциза";
    end;


    if((FacturaLineSrc.ExciseAmount - FacturaLine.ExciseAmount) >= 0)
      MAkciz = FacturaLineSrc.ExciseAmount - FacturaLine.ExciseAmount;
      PAkciz = $0;
    else 
      PAkciz = -(FacturaLineSrc.ExciseAmount - FacturaLine.ExciseAmount);
      MAkciz = $0;
    end;

    if(FacturaLine.NDSRate > 0 )
      if(FacturaSrc.Assignment == 2)
        a= Round(FacturaLine.NDSRate, 0);
        b= Round(FacturaLine.NDSRate +100, 0);
        NDS = String(a) + "/" +String(b);
      else
        NDS = FacturaLine.NDSRate;
      end;
    else
      if(FacturaLine.NDSRate == -1 )
        NDS ="без НДС";
      else
        NDS ="0";
      end;
    end;

    if(FacturaLine.NDSRate > 0 )
      if(FacturaSrc.Assignment == 2)
        a= Round(FacturaLineSrc.NDSRate, 0);
        b= Round(FacturaLineSrc.NDSRate +100, 0);
        NDSBefore = String(a) + "/" +String(b);
      else
        NDSBefore = FacturaLineSrc.NDSRate;
      end;
    else
      if(FacturaLineSrc.NDSRate == -1 )
        NDSBefore ="без НДС";
      else
        NDSBefore ="0";
      end;
    end;


    if((FacturaLineSrc.NDSAmount - FacturaLine.NDSAmount) >= 0)
      if(Factura.IsNoNds == "X")      
        MSumNDS = "без НДС";
      else
        MSumNDS = FacturaLineSrc.NDSAmount - FacturaLine.NDSAmount;
      end;

      PSumNDS = $0;
    else 
      if(Factura.IsNoNds == "X")      
        PSumNDS = "без НДС";
      else
        PSumNDS = -(FacturaLineSrc.NDSAmount - FacturaLine.NDSAmount);
      end;

      MSumNDS = $0;
    end;

    if((FacturaLineSrc.AmountWithNDS - FacturaLine.AmountWithNDS) >= 0)
      if(Factura.IsNoNds == "X")
        MSumAll = "без НДС";            
      else
        MSumAll = FacturaLineSrc.AmountWithNDS - FacturaLine.AmountWithNDS;        
      end;     
      
      PSumAll = $0;
    else 
      if(Factura.IsNoNds == "X")
        PSumAll = "без НДС";        
      else        
        PSumAll = -(FacturaLineSrc.AmountWithNDS - FacturaLine.AmountWithNDS);
      end;   
    
      MSumAll = $0;
    end;

    TotalMSumma  = TotalMSumma  + MSumma;
    TotalPSumma  = TotalPSumma  + PSumma;
    TotalMSumNDS = TotalMSumNDS + MSumNDS;
    TotalPSumNDS = TotalPSumNDS + PSumNDS;
    TotalMSumAll = TotalMSumAll + MSumAll;
    TotalPSumAll = TotalPSumAll + PSumAll;
    
    PrintLineSrc(FacturaLine.ProductName,
                 "А (до изменения)"     ,
                 DimensionCodeBefore    ,
                 DimensionNameBefore    ,
                 KolBefore              ,
                 PriceBefore            ,
                 SummaBefore            ,
                 AkcizBefore            ,
                 NDSBefore              ,
                 FacturaLineSrc.NDSAmount,
                 FacturaLineSrc.AmountWithNDS
                );


    PrintLineSrc("",
                 "Б (после изменения)"  ,
                 DimensionCode          ,
                 DimensionName          ,
                 Kol                    ,
                 Price                  ,
                 Summa                  ,
                 Akciz                  ,
                 NDS                    ,
                 FacturaLine.NDSAmount,
                 FacturaLine.AmountWithNDS
                );


    PrintLineSrc("",
                 "В (увеличение)"       ,
                 "X"                    ,
                 "X"                    ,
                 "X"                    ,
                 "X"                    ,
                 PSumma                 ,
                 PAkciz                 ,
                 "X"                    ,
                 PSumNDS                ,
                 PSumAll
                );

    PrintLineSrc("",
                 "Г (уменьшение)"       ,
                 "X"                    ,
                 "X"                    ,
                 "X"                    ,
                 "X"                    ,
                 MSumma                 ,
                 MAkciz                 ,
                 "X"                    ,
                 MSumNDS                ,
                 MSumAll
                );

  END;
  
  PRIVATE MACRO PrintFTotalTableWRSrc(TotalMSumma: money, TotalPSumma: money, TotalMSumNDS: money, TotalPSumNDS: money, TotalMSumAll: money, TotalPSumAll: money )

    var TotalMS, TotalPS, TotalMSNDS, TotalPSNDS, TotalMSAll, TotalPSAll;

    if((TotalMSumma - TotalPSumma) >= 0)
      TotalMS = TotalMSumma - TotalPSumma;
      TotalPS = "";
    else
      TotalPS = -(TotalMSumma - TotalPSumma);
      TotalMS = "";
    end;
     
    if((TotalMSumNDS - TotalPSumNDS) >= 0)
      TotalMSNDS = TotalMSumNDS - TotalPSumNDS;
      TotalPSNDS = "";
    else
      TotalPSNDS = -(TotalMSumNDS - TotalPSumNDS);
      TotalMSNDS = "";
    end;

    if((TotalMSumAll - TotalPSumAll) >= 0)
      TotalMSAll = TotalMSumAll - TotalPSumAll;
      TotalPSAll = "";
    else
      TotalPSAll = -(TotalMSumAll - TotalPSumAll);
      TotalMSAll = "";
    end;

    PrintFormatString( NULL,            
                       "TotalPSumma5" , TotalPS,
                       "TotalMSumma5" , TotalMS,
                       "TotalPSumNDS8", TotalPSNDS,
                       "TotalMSumNDS8", TotalMSNDS,                       
                       "TotalPSumAll9", TotalPSAll,                       
                       "TotalMSumAll9", TotalMSAll
                     );

  END;



  PRIVATE MACRO PrintOneFacturaSrc()

    var  cmd, rs, i, sqlString;
    file FacturaLine("bilfacturaline.dbt") key 0;
    file FacturaLineSrc("bilfacturaline.dbt") key 2;

    var TotalMS, TotalPS, TotalMSNDS, TotalPSNDS, TotalMSAll, TotalPSAll;
    var TotalMSumma: money, TotalPSumma: money, TotalMSumNDS: money, TotalPSumNDS: money, TotalMSumAll: money, TotalPSumAll: money ;
    var EmptyStr = "                                                                                                   ";

    TotalMSumma   = $0;
    TotalPSumma   = $0;
    TotalMSumNDS  = $0;
    TotalPSumNDS  = $0;
    TotalMSumAll  = $0;
    TotalPSumAll  = $0;

    SetActiveSheet( "FcS" );
    
    PrintFormatString( NULL,
                       "SrcNumSF" , Factura.FacturaNumber,
                       "SrcDateSF", DateToStringShort(Factura.CreationDate),
                       "SrcCorNumSF" , "-",
                       "SrcCorDateSF", "-",
                       "SrcNumSFSrc" , FacturaSrc.FacturaNumber,
                       "SrcDateSFSrc", DateToStringShort(FacturaSrc.CreationDate),
                       "SrcCorNumSFSrc" , "-",
                       "SrcCorDateSFSrc", "-",
                       "SrcSupplerName", Factura.SupplierName,
                       "SrcSupplierAddress",Factura.SupplierAddress,
                       "SrcSupplierINNKPP",Factura.SupplierINN,
                       "SrcReceiverName", Factura.ReceiverName,
                       "SrcReceiverAddress",Factura.ReceiverAddress,
                       "SrcReceiverINNKPP",Factura.ReceiverINN,
                       "ScrFINameCod", String(getFINameNum(Factura.FIID))
                     );

    RegisterTable( "N1_MainTableScr", NULL,
                   "ScrName1",
                   "ScrName1a",
                   "ScrDimensionCod2",
                   "ScrDimensionName2a",
                   "ScrKol3",
                   "ScrPrice4",
                   "ScrSumma5",
                   "ScrAkciz6",
                   "ScrNDS7",
                   "ScrSumNDS8",
                   "ScrSumAll9"
                 );


    sqlString = " SELECT T_FACTURALINEID  FROM DBILFACTURALINE_DBT " +
                "  WHERE  T_FACTURAID = "+ Factura.FacturaID + 
                " ORDER BY T_LINENO ";

    cmd = RsdCommand( sqlString );
    cmd.NullConversion = true;
    rs = RsdRecordset( cmd );


    i = 0;
    while( rs.moveNext() )

      ClearRecord(FacturaLine);
      FacturaLine.FacturaLineID = rs.value("T_FACTURALINEID");

      GetEQ(FacturaLine);

      ClearRecord(FacturaLineSrc);
      FacturaLineSrc.FacturaID = FacturaSrc.FacturaID;
      FacturaLineSrc.LineNo    = FacturaLine.LineNo;

      GetEQ(FacturaLineSrc);


      PrintFacturaWRSrc( FacturaLine, FacturaLineSrc, @TotalMSumma, @TotalPSumma, @TotalMSumNDS, @TotalPSumNDS, @TotalMSumAll, @TotalPSumAll );
      i = i + 1;
    end;
  
    if(i != 0)
      EndTable();

      PrintFTotalTableWRSrc(TotalMSumma, TotalPSumma, TotalMSumNDS, TotalPSumNDS, TotalMSumAll, TotalPSumAll);
    else
      // Если у СФ нет строк спецификации, то заполняются только итоговые параметры, куда переносятся значения из самого СФ.
      // При этом отрицательные значения из СФ пишутся в графу "к уменьшению" (с префиксом "-") абсолютным значением,
      // а положительные - в графу "к доплате" (с префиксом "+").

      PrintLineSrc("","","","","","","","","","","");  

      EndTable();

      if(Factura.TotalAmount < 0)
        TotalMS = Factura.TotalAmount; 
        TotalPS = ""; 
      else
        TotalPS = Factura.TotalAmount; 
        TotalMS = "";                  
      end;

      if(Factura.TotalNDS < 0)
        TotalMSNDS = Factura.TotalNDS; 
        TotalPSNDS = ""; 
      else
        TotalPSNDS = Factura.TotalNDS; 
        TotalMSNDS = "";                  
      end;

      if(Factura.TotalWithNDS < 0)
        TotalMSAll = Factura.TotalWithNDS; 
        TotalPSAll = ""; 
      else
        TotalPSAll = Factura.TotalWithNDS; 
        TotalMSAll = "";                  
      end;

    PrintFormatString( NULL,            
                       "TotalPSumma5" , TotalPS,
                       "TotalMSumma5" , TotalMS,
                       "TotalPSumNDS8", TotalPSNDS,
                       "TotalMSumNDS8", TotalMSNDS,                       
                       "TotalPSumAll9", TotalPSAll,                       
                       "TotalMSumAll9", TotalMSAll
                     );

    end;

    PrintFormatString( NULL,
                      "Dolz_1" , Dolz_1,  
                      "FIO_1"  , FIO_1 ,
                      "Dolz_2" , Dolz_2,  
                      "FIO_2"  , FIO_2
                       );

    CopyAllSheetInTotalBook( NULL, true, "N_Factura1", 0 );

    FirstFcsSheet = false;

  END;


///////////////////////////////////////////////////////////////////////////////////////////////////////////
  PRIVATE MACRO OldPrintLineSrc(Name,        
                             Dimension,   
                             KolBefore,    
                             Kol,          
                             PriceBefore,  
                             Price,        
                             SummaBefore,
                             Summa, 
                             MSumma,      
                             PSumma,      
                             AkcizBefore, 
                             Akciz,       
                             MAkciz,      
                             PAkciz,      
                             NDS,         
                             SumNDSBefore,
                             SumNDS,      
                             MSumNDS,     
                             PSumNDS,     
                             SumAllBefore,
                             SumAll,      
                             MSumAll,     
                             PSumAll 
                            )

     PrintTableLine( "OldName1",            Name,           null,
                     "OldDimension2",       Dimension,      null,
                     "OldKolBefore3",       KolBefore,      null,
                     "OldKol3a",            Kol,            null,
                     "OldPriceBefore4",     String(PriceBefore), null,
                     "OldPrice4a",          String(Price),          null, 
                     "OldSummaBefore5",     String(SummaBefore),    null, 
                     "OldSumma5a",          String(Summa)      ,    null, 
                     "OldMSumma5b",         String(MSumma),         null,
                     "OldPSumma5C",         String(PSumma),         null,
                     "OldAkcizBefore6",     String(AkcizBefore),    null,
                     "OldAkciz6a",          String(Akciz),          null,
                     "OldMAkciz6B",         String(MAkciz),         null,
                     "OldPAkciz6c",         String(PAkciz),         null,
                     "OldSNDS7",            String(NDS),            null,
                     "OldSumNDSBefore8",    String(SumNDSBefore),   null,
                     "OldSumNDS8a",         String(SumNDS),         null,
                     "OldMSumNDS8b",        String(MSumNDS),        null,
                     "OldPSumNDS8c",        String(PSumNDS),        null,
                     "OldSumAllBefore9",    String(SumAllBefore),   null,
                     "OldSumAll9a",         String(SumAll),         null,
                     "OldMSumAll9b",        String(MSumAll),        null,
                     "OldPSumAll9c",        String(PSumAll),        null
                   );                           

  END;
                                                                                 
                                                                           
  PRIVATE MACRO OldPrintFacturaWRSrc( FacturaLine, FacturaLineSrc, TotalMSumma: @money, TotalPSumma: @money, TotalMSumNDS: @money, TotalPSumNDS: @money, TotalMSumAll: @money, TotalPSumAll: @money)
                                                                                                                                
    var Dimension       : string;
    var KolBefore       : string;
    var Kol             : string;
    var PriceBefore     ;
    var Price           ;
    var Summa           : string;
    var SummaBefore     : string;
    var MSumma          : money;
    var PSumma          : money;
    var AkcizBefore     : string;
    var Akciz           : string;
    var MAkciz          : string;
    var PAkciz          : string;
    var NDS             : string;
    var a :integer, b:integer;
    var MSumNDS         : money;
    var PSumNDS         : money;
    var MSumAll         : money;
    var PSumAll         : money;




    Dimension = FillSpace(FindMeasure(FacturaLine.Measure), 5);

    KolBefore = FillSpace(FacturaLineSrc.Quantity,5);
    Kol = FillSpace(FacturaLine.Quantity,5);

    PriceBefore  =  FillSpace(FacturaLineSrc.Price,5);
    Price        =  FillSpace(FacturaLine.Price, 5);

    if(FacturaSrc.Assignment != 2)
      SummaBefore  = FillSpace(FacturaLineSrc.Amount, 5);
    else
      SummaBefore  = FillSpace("", 5);
    end;

    if(FacturaSrc.Assignment != 2)
      Summa  = FillSpace(FacturaLine.Amount, 5);
    else
      Summa  = FillSpace("", 5);
    end;

    if((FacturaLineSrc.Amount - FacturaLine.Amount) >= 0)
      MSumma = FacturaLineSrc.Amount - FacturaLine.Amount;
      PSumma = $0;
    else 
      PSumma = -(FacturaLineSrc.Amount - FacturaLine.Amount);
      MSumma = $0;
    end;

    AkcizBefore = FillSpace(FacturaLineSrc.ExciseAmount, 5);
    Akciz = FillSpace(FacturaLine.ExciseAmount, 5);


    if((FacturaLineSrc.ExciseAmount - FacturaLine.ExciseAmount) >= 0)
      MAkciz = FacturaLineSrc.ExciseAmount - FacturaLine.ExciseAmount;
      PAkciz = $0;
    else 
      PAkciz = -(FacturaLineSrc.ExciseAmount - FacturaLine.ExciseAmount);
      MAkciz = $0;
    end;

    if(FacturaLine.NDSRate > 0 )
      if(FacturaSrc.Assignment == 2)
        a= Round(FacturaLine.NDSRate, 0);
        b= Round(FacturaLine.NDSRate +100, 0);
        NDS = String(a) + "/" +String(b);
      else
        NDS = FacturaLine.NDSRate;
      end;
    else
      if(FacturaLine.NDSRate == -1 )
        NDS ="-";
      else
        NDS ="0";
      end;
    end;

    if((FacturaLineSrc.NDSAmount - FacturaLine.NDSAmount) >= 0)
      MSumNDS = FacturaLineSrc.NDSAmount - FacturaLine.NDSAmount;
      PSumNDS = $0;
    else 
      PSumNDS = -(FacturaLineSrc.NDSAmount - FacturaLine.NDSAmount);
      MSumNDS = $0;
    end;

    if((FacturaLineSrc.AmountWithNDS - FacturaLine.AmountWithNDS) >= 0)
      MSumAll = FacturaLineSrc.AmountWithNDS - FacturaLine.AmountWithNDS;
      PSumAll = $0;
    else 
      PSumAll = -(FacturaLineSrc.AmountWithNDS - FacturaLine.AmountWithNDS);
      MSumAll = $0;
    end;

    TotalMSumma  = TotalMSumma  + MSumma;
    TotalPSumma  = TotalPSumma  + PSumma;
    TotalMSumNDS = TotalMSumNDS + MSumNDS;
    TotalPSumNDS = TotalPSumNDS + PSumNDS;
    TotalMSumAll = TotalMSumAll + MSumAll;
    TotalPSumAll = TotalPSumAll + PSumAll;
    
    OldPrintLineSrc(FacturaLine.ProductName,        
                 Dimension,   
                 KolBefore,   
                 Kol,         
                 PriceBefore, 
                 Price,       
                 SummaBefore, 
                 Summa,
                 MSumma,      
                 PSumma,      
                 AkcizBefore, 
                 Akciz,       
                 MAkciz,      
                 PAkciz,      
                 NDS,         
                 FacturaLineSrc.NDSAmount,
                 FacturaLine.NDSAmount,      
                 MSumNDS,     
                 PSumNDS,     
                 FacturaLineSrc.AmountWithNDS,
                 FacturaLine.AmountWithNDS,
                 MSumAll,     
                 PSumAll 
                );

  END;
  
  PRIVATE MACRO OldPrintFTotalTableWRSrc(TotalMSumma: money, TotalPSumma: money, TotalMSumNDS: money, TotalPSumNDS: money, TotalMSumAll: money, TotalPSumAll: money )

    var TotalMS, TotalPS, TotalMSNDS, TotalPSNDS, TotalMSAll, TotalPSAll;

    if((TotalMSumma - TotalPSumma) >= 0)
      TotalMS = TotalMSumma - TotalPSumma;
      TotalPS = "";
    else
      TotalPS = -(TotalMSumma - TotalPSumma);
      TotalMS = "";
    end;
     
    if((TotalMSumNDS - TotalPSumNDS) >= 0)
      TotalMSNDS = TotalMSumNDS - TotalPSumNDS;
      TotalPSNDS = "";
    else
      TotalPSNDS = -(TotalMSumNDS - TotalPSumNDS);
      TotalMSNDS = "";
    end;

     
    
    if((TotalMSumAll - TotalPSumAll) >= 0)
      TotalMSAll = TotalMSumAll - TotalPSumAll;
      TotalPSAll = "";
    else
      TotalPSAll = -(TotalMSumAll - TotalPSumAll);
      TotalMSAll = "";
    end;

    PrintFormatString( NULL,            
                       "OldTotalMSumma5b" , TotalMS,
                       "OldTotalPSumma5c" , TotalPS,
                       "OldTotalMSumNDS8b", TotalMSNDS,                       
                       "OldTotalPSumNDS8c", TotalPSNDS,
                       "OldTotalMSumAll9b", TotalMSAll,
                       "OldTotalPSumAll9c", TotalPSAll                       
                     );
  END;



  PRIVATE MACRO OldPrintOneFacturaSrc()

    var  cmd, rs, i, sqlString;
    file FacturaLine("bilfacturaline.dbt") key 0;
    file FacturaLineSrc("bilfacturaline.dbt") key 2;

    var TotalMS, TotalPS, TotalMSNDS, TotalPSNDS, TotalMSAll, TotalPSAll;
    var TotalMSumma: money, TotalPSumma: money, TotalMSumNDS: money, TotalPSumNDS: money, TotalMSumAll: money, TotalPSumAll: money ;
    var EmptyStr = "                                                                                                   ";

    TotalMSumma   = $0;
    TotalPSumma   = $0;
    TotalMSumNDS  = $0;
    TotalPSumNDS  = $0;
    TotalMSumAll  = $0;
    TotalPSumAll  = $0;

    SetActiveSheet( "FcSOld" );
    
    PrintFormatString( NULL,
                       "OldNumSF" , Factura.FacturaNumber,
                       "OldDateSF", DateToStringShort(Factura.CreationDate),
                       "OldNumSFSrc" , FacturaSrc.FacturaNumber,
                       "OldDateSFSrc", DateToStringShort(FacturaSrc.CreationDate),
                       "OldSupplerName", Factura.SupplierName,
                       "OldSupplierAddress",Factura.SupplierAddress,
                       "OldSupplierINNKPP",Factura.SupplierINN,
                       "OldReceiverName", Factura.ReceiverName,
                       "OldReceiverAddress",Factura.ReceiverAddress,
                       "OldReceiverINNKPP",Factura.ReceiverINN
                     );

    RegisterTable( "N1_MainTableOld", NULL,
                   "OldName1"
                   "OldDimension2",
                   "OldKolBefore3",
                   "OldKol3a",
                   "OldPriceBefore4",
                   "OldPrice4a",
                   "OldSummaBefore5",
                   "OldSumma5a",
                   "OldMSumma5b",
                   "OldPSumma5C",
                   "OldAkcizBefore6",
                   "OldAkciz6a",
                   "OldMAkciz6B", 
                   "OldPAkciz6c",  
                   "OldSNDS7",
                   "OldSumNDSBefore8",
                   "OldSumNDS8a",
                   "OldMSumNDS8b",
                   "OldPSumNDS8c",
                   "OldSumAllBefore9",
                   "OldSumAll9a",
                   "OldMSumAll9b",
                   "OldPSumAll9c"
                 );


    sqlString = " SELECT T_FACTURALINEID  FROM DBILFACTURALINE_DBT " +
                "  WHERE  T_FACTURAID = "+ Factura.FacturaID + 
                " ORDER BY T_LINENO ";

    cmd = RsdCommand( sqlString );
    cmd.NullConversion = true;
    rs = RsdRecordset( cmd );


    i = 0;
    while( rs.moveNext() )

      ClearRecord(FacturaLine);
      FacturaLine.FacturaLineID = rs.value("T_FACTURALINEID");

      GetEQ(FacturaLine);

      ClearRecord(FacturaLineSrc);
      FacturaLineSrc.FacturaID = FacturaSrc.FacturaID;
      FacturaLineSrc.LineNo    = FacturaLine.LineNo;

      GetEQ(FacturaLineSrc);


      OldPrintFacturaWRSrc( FacturaLine, FacturaLineSrc, @TotalMSumma, @TotalPSumma, @TotalMSumNDS, @TotalPSumNDS, @TotalMSumAll, @TotalPSumAll );
      i = i + 1;
    end;
  
    if(i != 0)
      EndTable();

      OldPrintFTotalTableWRSrc(TotalMSumma, TotalPSumma, TotalMSumNDS, TotalPSumNDS, TotalMSumAll, TotalPSumAll);
    else
      // Если у СФ нет строк спецификации, то заполняются только итоговые параметры, куда переносятся значения из самого СФ.
      // При этом отрицательные значения из СФ пишутся в графу "к уменьшению" (с префиксом "-") абсолютным значением,
      // а положительные - в графу "к доплате" (с префиксом "+").

      OldPrintLineSrc("","","","","","","","","","","","","","","","","","","","","","","");  

      EndTable();

      if(Factura.TotalAmount < 0)
        TotalMS = Factura.TotalAmount; 
        TotalPS = ""; 
      else
        TotalPS = Factura.TotalAmount; 
        TotalMS = "";                  
      end;

      if(Factura.TotalNDS < 0)
        TotalMSNDS = Factura.TotalNDS; 
        TotalPSNDS = ""; 
      else
        TotalPSNDS = Factura.TotalNDS; 
        TotalMSNDS = "";                  
      end;

      if(Factura.TotalWithNDS < 0)
        TotalMSAll = Factura.TotalWithNDS; 
        TotalPSAll = ""; 
      else
        TotalPSAll = Factura.TotalWithNDS; 
        TotalMSAll = "";                  
      end;
      PrintFormatString( NULL,            
                       "OldTotalMSumma5b" , TotalMS,
                       "OldTotalPSumma5c" , TotalPS,
                       "OldTotalMSumNDS8b", TotalMSNDS,                       
                       "OldTotalPSumNDS8c", TotalPSNDS,
                       "OldTotalMSumAll9b", TotalMSAll,
                       "OldTotalPSumAll9c", TotalPSAll                       
                     );                  

    end;

    PrintFormatString( NULL,
                      "OldDolz_1" , Dolz_1,  
                      "OldFIO_1"  , FIO_1 ,
                      "OldDolz_2" , Dolz_2,  
                      "OldFIO_2"  , FIO_2
                       );

    CopyAllSheetInTotalBook( NULL, true, "N_Factura1Old", 0 );

    FirstFcsSheet = false;

  END;
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  PRIVATE MACRO PrintLine(FName     ,
                          FDimension,
                          FDimensionName2a,
                          FKol      , 
                          FPrice    , 
                          FSumma    , 
                          FAkciz    ,
                          FNDS      ,
                          FSumNDS   ,
                          FSumAll   ,
                          FCountry  ,
                          FCountryN10a,
                          FNTD      
                         )
     PrintTableLine( "FName1",              FName     ,    null,
                     "FDimension2",         FDimension,    null,
                     "FDimensionName2a",    FDimensionName2a, null,
                     "FKol3",               FKol      ,    null,
                     "FPrice4",             FPrice    ,    null,
                     "FSumma5",             String(FSumma),    null, 
                     "FAkciz6",             String(FAkciz),    null, 
                     "FNDS7",               String(FNDS),      null, 
                     "FSumNDS8",            String(FSumNDS),   null,
                     "FSumAll9",            String(FSumAll),   null,
                     "FCountry10",          FCountry    , null,
                     "FCountryN10a",        FCountryN10a, null,
                     "FNTD11",              FNTD        , null
                   );                  
  END;


  PRIVATE MACRO PrintFacturaWR( FacturaLine, TotalNDSAll: @money, TotalAllSum: @money)
                                                                                                                                
    var FDimensionCode : string;
    var FDimensionName : string;
    var FKol       ;
    var FNameFI    ;
    var FPrice     ;
    var FSumma     : string;
    var FAkciz     : string;
    var FNDS       : string;
    var FSumNDS    : money;
    var FSumAll    : money; 
    var FCountryCode   : string;   
    var FCountryName: string;   
    var FNTD       : string;   
    var a :integer, b:integer;

    if(fgBank.is_GEB)
      FDimensionName = "шт";
    else
      FDimensionName = FillSpace(FindMeasure(FacturaLine.Measure), 5);
    end;

    if(FacturaLine.Measure > 0)
      FDimensionCode = StrSubst(String(FacturaLine.Measure:3), " ", "0" );
    else
      if(fgBank.is_GEB)
         FDimensionCode = "796";
      else
        FDimensionCode = FillSpace("", 5);
      end;
    end;

    if(fgBank.is_GEB)
      FKol = "1";
    else
      FKol = FillSpace(FacturaLine.Quantity,5);
    end;
    FNameFI = String(getFINameNum(Factura.FIID));
    if(fgBank.is_GEB)
      FPrice = FillSpace(FacturaLine.Amount, 5);
    else
      FPrice     =  FillSpace(FacturaLine.Price, 5);
    end;
      

    if(Factura.Assignment != 2)
      FSumma  = FillSpace(FacturaLine.Amount, 5);
    else
      FSumma  = FillSpace("", 5);
    end;

    if(FacturaLine.ExciseAmount != $0)
      FAkciz = FillSpace(FacturaLine.ExciseAmount, 5);
    else
      FAkciz = "без акциза";
    end;

    if(FacturaLine.NDSRate > 0 )
      if(Factura.Assignment == 2)
        a= Round(FacturaLine.NDSRate, 0);
        b= Round(FacturaLine.NDSRate +100, 0);
        FNDS = String(a) + "/" +String(b);
      else
        FNDS = FacturaLine.NDSRate;
      end;
    else
      if(FacturaLine.NDSRate == -1 )
        FNDS ="без НДС";
      else
        FNDS ="0";
      end;
    end;

    FSumNDS = FacturaLine.NDSAmount;
    FSumAll = FacturaLine.AmountWithNDS;

    FCountryName = FillSpace(FacturaLine.Country, 5);  

    if(FacturaLine.Country != "")
      FCountryCode  = FillSpace(FindCountryNumCode(FacturaLine.Country), 5);
    else
      FCountryCode  =  FillSpace("", 5);           
    end;

    FNTD     = FillSpace(FacturaLine.GTDNumber, 5);


    TotalNDSAll = TotalNDSAll + FSumNDS;
    TotalAllSum = TotalAllSum + FSumAll;


    PrintLine(FacturaLine.ProductName,
              FDimensionCode,
              FDimensionName,
              FKol      ,
              FPrice    ,
              FSumma    ,
              FAkciz    ,
              FNDS      ,
              FSumNDS   ,
              FSumAll   ,
              FCountryCode,
              FCountryName,
              FNTD       
             );
                         
  END;

  PRIVATE MACRO PrintFTotalTableWR(TotalSum, IsNoNds, TotalNdsAll: money, TotalSumAll: money)

    var __TotalNdsAll;

    if(IsNoNds == "X")
      __TotalNdsAll = "без НДС";
    else
      __TotalNdsAll = TotalNdsAll;
    end;

    PrintFormatString( NULL,            
                       "FSummaVsego" , TotalSum,                
                       "FNDS_All" , __TotalNdsAll,
                       "FSum_All" , TotalSumAll
                     );             
  END;                              
                                    
  PRIVATE MACRO PrintOneFactura()   

    var  cmd, rs, i, sqlString;
    file FacturaLine("bilfacturaline.dbt") key 0;
    file SourceFactura("bilfactura.dbt");

    var TotalMS, TotalPS, TotalMSNDS, TotalPSNDS, TotalMSAll, TotalPSAll;
    var TotalNDSAll: money, TotalAllSum: money, TotalAmount;
    var EmptyStr = "                                                                                                   ";

    TotalNDSAll = $0;
    TotalAllSum = $0;

    var FacturaNumber1, FacturaNumber2, FacturaDate1, FacturaDate2, FacturaSupplierName, FacturaSupplierAddress;
    FacturaNumber1 = Factura.FacturaNumber;
    FacturaDate1 = DateToStringShort(Factura.CreationDate);
    FacturaNumber2 = "-";
    FacturaDate2 = "-";
	//LVV R-490532-2
    FacturaSupplierName = Factura.SupplierName;
	FacturaSupplierAddress = Factura.SupplierAddress;
    if((fgBank.is_EXV) or (fgBank.is_EXV_Volgograd) or (fgBank.is_EXV_Voronezh) or (fgBank.is_EXV_Stavropol))
        /*VDN R-567502-2
        FacturaSupplierName = "ЗАО АКБ \"ЭКСПРЕСС-ВОЛГА\""; */
        FacturaSupplierName = "АО АКБ \"ЭКСПРЕСС-ВОЛГА\""; 
        FacturaSupplierAddress = "Российская Федерация, 410002, обл. Саратовская, г.Саратов, ул. Мичурина, д. 166/168";
    end;

    if(Factura.Assignment == OBJSFASSIGNMENT_MODIFY)
      SourceFactura.facturaID = Factura.SourceFacturaID;
      SourceFactura.correctionNum = 0; 
                                      
      if( GetEQ( SourceFactura ) )
        FacturaNumber1  = SourceFactura.FacturaNumber;
        FacturaDate1    = SourceFactura.CreationDate;

        FacturaNumber2  = Factura.CorrectionNum;
        FacturaDate2    = Factura.CreationDate;
      end;                      
    end;

   
    SetActiveSheet( "Fc" );

    PrintFormatString( NULL,
                       "FcNumber" ,   FacturaNumber1,
                       "FcDate",      FacturaDate1,
                       "EditFcNumber", FacturaNumber2,
                       "EditFcDate", FacturaDate2,
                       "NameSeller" , FacturaSupplierName,
                       "AddressSeller" ,FacturaSupplierAddress,
                       "INNKPP_S",    Factura.SupplierINN,
                       "Name_Address_Otpr", FillSpace(BILFACTURA.Shipper, 20),
                       "Name_Address_Pol" , FillSpace(BILFACTURA.Consignee, 20),
                       "N_Doc",           Factura.PaymentNumber,
                       "Date_Doc",        DateToStringShort(BILFACTURA.PaymantDate),
                       "Name_Customer",   Factura.ReceiverName,
                       "Address_Customer",Factura.ReceiverAddress,
                       "INNKPP_C",        FillSpace(BILFACTURA.ReceiverINN, 10),
                       "FINameCod",       String(getFINameNum(Factura.FIID)),

                       /* EVG 3/03/2014 Вывод номера счёта получателя */
                       //"ReceiverAccNumber", ExecMacroFile( "bilsfprn_lib.mac", "FakturaReceiverAcc", Factura.FacturaId )
                       "ReceiverAccNumber", FakturaReceiverAcc( Factura.FacturaId )

                     );

    RegisterTable( "N2_MainTable", NULL,
                   "FName1",
                   "FDimension2",
                   "FDimensionName2a",
                   "FKol3",
                   "FPrice4",
                   "FSumma5",
                   "FAkciz6",
                   "FNDS7",
                   "FSumNDS8",
                   "FSumAll9",
                   "FCountry10",
                   "FCountryN10a",
                   "FNTD11"
                 );


    sqlString = " SELECT T_FACTURALINEID  FROM DBILFACTURALINE_DBT " +
                "  WHERE  T_FACTURAID = "+ Factura.FacturaID + 
                " ORDER BY T_LINENO ";

    cmd = RsdCommand( sqlString );
    cmd.NullConversion = true;
    rs = RsdRecordset( cmd );


    i = 0;
    while( rs.moveNext() )

      ClearRecord(FacturaLine);
      FacturaLine.FacturaLineID = rs.value("T_FACTURALINEID");

      GetEQ(FacturaLine);

      PrintFacturaWR( FacturaLine, @TotalNDSAll, @TotalAllSum);
      i = i + 1;
    end;

    if(i == 0)
      PrintLine("","","","","","","","","","","", "", "" );
    end;
    
    EndTable();

    if(Factura.Assignment != 2)
      TotalAmount  = Factura.TotalAmount;
    else
      TotalAmount  = FillSpace("", 5);
    end;


    PrintFTotalTableWR(TotalAmount, Factura.IsNoNds, Factura.TotalNDS, Factura.TotalWithNDS);


    PrintFormatString( NULL,
                      "TotalSumStr", CurToStrAlt(BILFACTURA.TotalWithNDS, null, null, getISOCode(BILFACTURA.FIID)),
                      "FDolzh_1", Dolz_1,  
                      "FFIO_1"  , FIO_1 ,
                      "FDolzh_2", Dolz_2,  
                      "FFIO_2"  , FIO_2
                       );

//   CopyAllSheetInTotalBook( NULL, true, "", 0 );
   CopyAllSheetInTotalBook( NULL, true, "N_Factura2", 0 );

   FirstFcSheet = false;

  END;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  PRIVATE MACRO OldPrintLine(FName     ,
                             FDimension,
                             FKol      , 
                             FNameFI   , 
                             FPrice    , 
                             FSumma    , 
                             FAkciz    ,
                             FNDS      ,
                             FSumNDS   ,
                             FSumAll   ,
                             FCountry  ,
                             FNTD      
                            )

     PrintTableLine( "OldFName1",         FName     ,    null,
                     "OldFDimension2",    FDimension,    null,
                     "OldFKol3",          FKol      ,    null,
                     "OldFNameFI4",       FNameFI   ,    null,
                     "OldFPrice5",        FPrice    ,    null,
                     "OldFSumma6",        String(FSumma),    null, 
                     "OldFAkciz7",        String(FAkciz),    null, 
                     "OldFNDS8",          String(FNDS),    null, 
                     "OldFSumNDS9",       String(FSumNDS),    null,
                     "OldFSumAll10",      String(FSumAll),    null,
                     "OldFCountry11",     FCountry  ,    null,
                     "OldFNTD12",         FNTD      ,    null
                   );                  

  END;


  PRIVATE MACRO OldPrintFacturaWR( FacturaLine, TotalNDSAll: @money, TotalAllSum: @money)
                                                                                                                                
    var FDimension : string;
    var FKol       ;
    var FNameFI    ;
    var FPrice     ;
    var FSumma     : string;
    var FAkciz     : string;
    var FNDS       : string;
    var FSumNDS    : money;
    var FSumAll    : money; 
    var FCountry   : string;   
    var FNTD       : string;   
    var a :integer, b:integer;


    FDimension = FillSpace(FindMeasure(FacturaLine.Measure), 5);
    FKol = FillSpace(FacturaLine.Quantity,5);
    FNameFI = String(getFICcy(Factura.FIID));
    FPrice     =  FillSpace(FacturaLine.Price, 5);

    if(Factura.Assignment != 2)
      FSumma  = FillSpace(FacturaLine.Amount, 5);
    else
      FSumma  = FillSpace("", 5);
    end;

    FAkciz = FillSpace(FacturaLine.ExciseAmount, 5);

    if(FacturaLine.NDSRate > 0 )
      if(Factura.Assignment == 2)
        a= Round(FacturaLine.NDSRate, 0);
        b= Round(FacturaLine.NDSRate +100, 0);
        FNDS = String(a) + "/" +String(b);
      else
        FNDS = FacturaLine.NDSRate;
      end;
    else
      if(FacturaLine.NDSRate == -1 )
        FNDS ="-";
      else
        FNDS ="0";
      end;
    end;

    FSumNDS = FacturaLine.NDSAmount;
    FSumAll = FacturaLine.AmountWithNDS;

    FCountry = FillSpace(FacturaLine.Country, 5);  
    FNTD     = FillSpace(FacturaLine.GTDNumber, 5);


    TotalNDSAll = TotalNDSAll + FSumNDS;
    TotalAllSum = TotalAllSum + FSumAll;


    OldPrintLine(FacturaLine.ProductName,
              FDimension,
              FKol      ,
              FNameFI   ,
              FPrice    ,
              FSumma    ,
              FAkciz    ,
              FNDS      ,
              FSumNDS   ,
              FSumAll   ,
              FCountry  ,
              FNTD       
             );
                         
  END;

  PRIVATE MACRO OldPrintFTotalTableWR(TotalNdsAll: money, TotalSumAll: money)
    var a = 1;

    PrintFormatString( NULL,            
                       "OldFNDS_All" , TotalNdsAll,
                       "OldFSum_All" , TotalSumAll
                     );             
  END;                              
                                    
  PRIVATE MACRO OldPrintOneFactura()   

    var  cmd, rs, i, sqlString;
    file FacturaLine("bilfacturaline.dbt") key 0;

    var TotalMS, TotalPS, TotalMSNDS, TotalPSNDS, TotalMSAll, TotalPSAll;
    var TotalNDSAll: money, TotalAllSum: money;
    var EmptyStr = "                                                                                                   ";
    
    TotalNDSAll = $0;
    TotalAllSum = $0;

   
    SetActiveSheet( "FcOld" );

    PrintFormatString( NULL,
                       "OldFcNumber" ,   Factura.FacturaNumber,
                       "OldFcDate",      DateToStringShort(Factura.CreationDate),
                       "OldNameSeller" , Factura.SupplierName,
                       "OldAddressSeller" ,Factura.SupplierAddress,
                       "OldINNKPP_S",    Factura.SupplierINN,
                       "OldName_Address_Otpr", FillSpace(BILFACTURA.Shipper, 20),
                       "OldName_Address_Pol" , FillSpace(BILFACTURA.Consignee, 20),
                       "OldN_Doc",           Factura.PaymentNumber,
                       "OldDate_Doc",        DateToStringShort(BILFACTURA.PaymantDate),
                       "OldName_Customer",   Factura.ReceiverName,
                       "OldAddress_Customer",Factura.ReceiverAddress,
                       "OldINNKPP_C",        FillSpace(BILFACTURA.ReceiverINN, 10)
                     );

    RegisterTable( "N2_MainTablO", NULL,
                   "OldFName1",
                   "OldFDimension2",
                   "OldFKol3",
                   "OldFNameFI4",
                   "OldFPrice5",
                   "OldFSumma6",
                   "OldFAkciz7",
                   "OldFNDS8",
                   "OldFSumNDS9",
                   "OldFSumAll10",
                   "OldFCountry11",
                   "OldFNTD12"
                 );


    sqlString = " SELECT T_FACTURALINEID  FROM DBILFACTURALINE_DBT " +
                "  WHERE  T_FACTURAID = "+ Factura.FacturaID + 
                " ORDER BY T_LINENO ";

    cmd = RsdCommand( sqlString );
    cmd.NullConversion = true;
    rs = RsdRecordset( cmd );


    i = 0;
    while( rs.moveNext() )

      ClearRecord(FacturaLine);
      FacturaLine.FacturaLineID = rs.value("T_FACTURALINEID");

      GetEQ(FacturaLine);

      OldPrintFacturaWR( FacturaLine, @TotalNDSAll, @TotalAllSum);
      i = i + 1;
    end;

    if(i == 0)
      OldPrintLine("","","","","","","","","","","", "" );
    end;
    
    EndTable();

    OldPrintFTotalTableWR(Factura.TotalNDS, Factura.TotalWithNDS);


    PrintFormatString( NULL,
                      "OldTotalSumStr", CurToStrAlt(BILFACTURA.TotalWithNDS, null, null, getISOCode(BILFACTURA.FIID)),
                      "OldFDolzh_1", Dolz_1,  
                      "OldFFIO_1"  , FIO_1 ,
                      "OldFDolzh_2", Dolz_2,  
                      "OldFFIO_2"  , FIO_2
                       );

   CopyAllSheetInTotalBook( NULL, true, "N_Factura2Old", 0 );


   FirstFcSheet = false;

  END;


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  PRIVATE MACRO Create()

     var size = FacturaArray.size;
     var i = 0; 
       
     while (i < size )
       FacturaID = FacturaArray(i);
       
       ClearRecord(BILFACTURA);
       BILFACTURA.FacturaID = FacturaID;

       if(not GetEQ(BILFACTURA))
         return false;
       end;

       ClearRecord(BILFACTURASRC);
       if((BILFACTURA.SourceFacturaID > 0) AND (BILFACTURA.CorrectionNum == 0))
         BILFACTURASRC.FacturaID = BILFACTURA.SourceFacturaID;

         if(not GetEQ(BILFACTURASRC))
           return false;
         end;

         if(BILFACTURA.CreationDate < date(24,01,2012))
           OldPrintOneFacturaSrc();
         else
           PrintOneFacturaSrc();
         end;
       else
         if(BILFACTURA.CreationDate < date(24,01,2012))
           OldPrintOneFactura();
         else
           PrintOneFactura();
         end;
       end;


       i = i + 1;
     end; 

  END;

  initCB_CReportTemplate( null, "bilssfdot.xls" );
END;

/*-----------------------------------------------------------------------------------*/


MACRO PrintHeader( ncopy:integer ):bool

  FacturaArray = TArray;

  MassPrintDocument = true;

  FirstFcSheet  = true;
  FirstFcsSheet = true;

  return true;
END;


MACRO PrintDocument( ncopy:integer ):bool
  debugbreak;
  var size = 0; 

  if(MassPrintDocument)
    size = FacturaArray.size;
    FacturaArray(size) = FacturaID;
  else
    FacturaArray = TArray;
    FacturaArray(0) = FacturaID;
    SourceFacturaReport().Run();
  end;

  return true;
END;

MACRO PrintFooter()

  SourceFacturaReport().Run();

  return true;
END;
