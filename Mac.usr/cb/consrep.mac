/*---------------------------------------------------------------------------\
|                       Файл    consrep.mac                                  |
|              Печать отчета по урегулированию покрытий                      |
\---------------------------------------------------------------------------*/

Import rsd, FIInter, "reg_rep_lib.mac", "globals.mac","rate_claim.mac";

private var i : integer, count : integer;
private var sqlString : string;
private var rs : RsdRecordset;

/**/
private var TotalSum : money;

private var OperName : string;
private var OperPost : string;

private var RateString : string;

/* вспомогательные переменные для печати */
private var PreviousDate       : date;
private var PreviousChapter    : integer;
private var PreviousCurrency   : integer;
private var PreviousExpAccount : string;

/* Получить значение курса за дату */
private macro GetRateString( DateRate : date, Currency : integer )

  record ratedef("ratedef.dbt");

  ПолучитьКурс( ratedef, Currency, NATCUR );
  ПолучитьЗначениеКурса( ratedef, DateRate );
  ПолучитьСтрокуЗначенияКурса( ratedef, 2, RateString );

end;

private macro GetDprt( DprtID : integer, dprt )

  file dp_dep("dp_dep.dbt") key 0;

  dp_dep.Code = DprtID;

  if( GetEQ( dp_dep ))
    copy( dprt, dp_dep );
  end;

end;                 

/* Печать данных о подразделениях */
macro PrintLogDepartment( DprtID : integer )
  var ParentDprt;
  record dprt( dp_dep );

  GetDprt( DprtID, dprt );
  if( dprt.NodeType == 1 )/*филиал*/
    ParentDprt = DprtID;
  else
    ParentDprt = dprt.ParentCode;
    while(dprt.NodeType != 1)
      GetDprt(ParentDprt, dprt);
      if(dprt.NodeType != 1)
        ParentDprt = dprt.ParentCode;
      end;
    end;
  end;
    
[

               ################################################               ]( GetDprtString(ParentDprt):c:w );
        
  if( ParentDprt != DprtID )
[               ################################################               ]( GetDprtString(DprtID):c:w );
    end;
[                                                                              ];
  end;

/* Печать заголовка реестра */
private macro PrintLogTop( RegDate : date, DprtID : integer, RestTypeString : string, Backout : bool )

  var headLine : string;

  if(Backout) 
    headLine = string( "удаленных документов по переоценке ", RestTypeString, " остатка на ", RegDate:f ); 
  else
    headLine = string( "документов по переоценке ", RestTypeString, " остатка на ", RegDate:f ); 
  end;

  PrintLogDepartment( DprtID );

[                               РЕЕСТР                                         ];
[##############################################################################]( headLine:c );
[                                                                              ];

end;

/* Печать отсутствия проводок урегулирования */
private macro PrintEmptyLog( DprtID : integer, RestTypeString : string, Backout : bool );
  
  PrintLogTop( {curdate}, DprtID, RestTypeString, Backout );
[Счетов для урегулирования не найдено];

end;

/* Печать заголовка таблицы */
private macro PrintLogTableTop( RegDate : date, Chapter : integer, Currency : integer, DprtID : integer, RestTypeString : string, Backout : bool )

  PrintLogTop( RegDate, DprtID, RestTypeString, Backout );

[Глава:                 #                                                      ]( GetChapterString(Chapter)   );
  if( Currency == NATCUR )
[Мультивалютные покрытия                                                       ];
  else
[Финансовый инструмент: #                                                      ]( GetCurrencyString(Currency) );
[Курс:                  #                                                      ]( RateString                  );
  end;
[                                                                              ];
 
[+---------+-----------------------+-----------------------+------------------+];
[|    №    |        Дебет          |       Кредит          |      Сумма       |];
[|  докум  |                       |                       |     в рублях     |];
[+---------+-----------------------+-----------------------+------------------+];

  TotalSum = $0;

end;

/* Печать нижней части таблицы */
private macro PrintLogTableBot( Currency : integer )

 if( Currency != ALLFININSTR )
   
[+---------+-----------------------+-----------------------+------------------+];
[|Итого    |                                               |##################|]( TotalSum );
[+---------+-----------------------------------------------+------------------+];
[                                                                              ];
[##############################     #######                                    ]( OperPost:w, "(" + string({oper}) + ")" );
[                                    #                                         ]( OperName );
[                                                                              ];
[Контролер                          (                        )                 ];
[                                                                              ];
[                                                                              ];

  end;

end;

/* Печать заголовка реестра */
private macro PrintLogLine( rs : RsdRecordset, DprtID : integer, RestTypeString : string, Backout : bool )

  var Date_Carry       : date;
  var Chapter          : integer;
  var Currency         : integer;
  var Numb_Document    : string;
  var ExpAccount       : string;
  var Account_Payer    : string;
  var Account_Receiver : string;
  var Sum              : money;

  Date_Carry       = rs.value("t_Date_Carry"      );
  Chapter          = rs.value("t_Chapter"         );
  Currency         = rs.value("t_Currency"        );
  Numb_Document    = rs.value("t_Numb_Document"   );
  ExpAccount       = rs.value("t_ExpAccount"      );
  Account_Payer    = rs.value("t_Account_Payer"   );
  Account_Receiver = rs.value("t_Account_Receiver");
  Sum              = rs.value("t_Sum"             );

if( (PreviousCurrency != Currency) or (PreviousDate!= Date_Carry))
    GetRateString( Date_Carry, Currency );
  end;

  if( (PreviousDate       != Date_Carry) or
      (PreviousChapter    != Chapter   ) or
      (PreviousCurrency   != Currency  ) or
      (PreviousExpAccount != ExpAccount) )

    PrintLogTableBot( PreviousCurrency );
    PrintLogTableTop( Date_Carry, Chapter, Currency, DprtID, RestTypeString, Backout );

  end;

  TotalSum = TotalSum + Sum;

[|#########|#######################|#######################|##################|]
(Numb_Document:r, Account_Payer:f, Account_Receiver:f, Sum);

  PreviousDate       = Date_Carry;
  PreviousChapter    = Chapter;
  PreviousCurrency   = Currency;
  PreviousExpAccount = ExpAccount;

end;

/* получить количество проводок */
private macro getCountCarry( DprtID : integer, Result_Carry : integer )

  var cmd : RsdCommand;
  var rs : RsdRecordset;

  cmd = RsdCommand( "SELECT count(1) FROM dovest_carry_log_tmp WHERE t_DprtID = ? AND t_Result_Carry = ?" );
  
  cmd.addParam( "", RSDBP_IN, DprtID       );
  cmd.addParam( "", RSDBP_IN, Result_Carry );

  rs = RsdRecordset( cmd );

  rs.moveNext();

  return rs.value(0);

end;


private macro procPrintCarryLog( DprtID : integer, Result_Carry : integer, RestTypeString : string, Backout : bool )

  var cmd : RsdCommand;
  var Pack202, PackOther, err; // KS 18.10.2011 Пачки для проводок

  count = getCountCarry( DprtID, Result_Carry );

  if( count == 0 )
    /* Выводим пустой отчет */
    PrintEmptyLog( DprtID, RestTypeString, Backout );

  else

    GetRegistryValue("PRBB\\ВНЕСИСТЕМНЫЙ УЧЕТ\\НОМЕРА ПАЧЕК\\ПЕРЕОЦЕНКА НЕКАССА", V_INTEGER, Pack202,   err);
    if( err == 0)
      GetRegistryValue("PRBB\\ВНЕСИСТЕМНЫЙ УЧЕТ\\НОМЕРА ПАЧЕК\\ПЕРЕОЦЕНКА КАССА"   , V_INTEGER, PackOther, err);
    end;  

    if( err == 0)
      // zmp 19.08.2014  I-00509284
      cmd = RsdCommand( "update dacctrn_dbt a \n"+
                        "   set a.t_number_pack = case \n"+
                        "                           when ((substr(a.t_account_payer,1,5)    between '20202' and '20208') or \n"+
                        "                                 (substr(a.t_account_receiver,1,5) between '20202' and '20208')) then ? \n"+
                        "                           else ? \n"+
                        "                         end \n"+
                        " where a.t_result_carry = ? \n"+
                        "   and a.t_oper = ? \n"+
                        "   and a.t_date_carry between \n"+
                        "        (SELECT min(t_Date_Carry) \n"+
                        "           FROM dovest_carry_log_tmp \n"+
                        "          WHERE t_DprtID = ? \n"+
                        "            AND t_Result_Carry = ?) and \n"+
                        "        (SELECT max(t_Date_Carry) \n"+
                        "           FROM dovest_carry_log_tmp \n"+
                        "          WHERE t_DprtID = ? \n"+
                        "            AND t_Result_Carry = ?)");

      cmd.addParam( "", RSDBP_IN, Pack202      );
      cmd.addParam( "", RSDBP_IN, PackOther    );
  
      cmd.addParam( "", RSDBP_IN, Result_Carry );
      cmd.addParam( "", RSDBP_IN, {oper} );
  
      cmd.addParam( "", RSDBP_IN, DprtID       );
      cmd.addParam( "", RSDBP_IN, Result_Carry );
  
      cmd.addParam( "", RSDBP_IN, DprtID       );
      cmd.addParam( "", RSDBP_IN, Result_Carry );

      cmd.execute;

    end;

    cmd = RsdCommand( "SELECT * FROM dovest_carry_log_tmp                                     "
                      "WHERE t_DprtID = ? AND t_Result_Carry = ?                              "
                      "ORDER BY t_Date_Carry, t_Chapter, t_Currency DESC, t_ExpAccount, t_Sum "
                    );
  
    cmd.addParam( "", RSDBP_IN, DprtID       );
    cmd.addParam( "", RSDBP_IN, Result_Carry );

    rs = RsdRecordset( cmd );

    PreviousDate       = date(0, 0, 0);
    PreviousChapter    = 0;
    PreviousCurrency   = ALLFININSTR;
    PreviousExpAccount = "";

    OperName = GetOperString( {oper}, @OperPost );

    InitProgress( count, null, "Формирование реестра" );
    i = 0;
    while( rs.moveNext() )
    
      UseProgress( i );

      PrintLogLine( rs, DprtID, RestTypeString, Backout );

      i = i + 1;

    end;

    PrintLogTableBot( PreviousCurrency );

    RemProgress();

  end;
end;

private macro PrintCarryLog( DprtID : integer, RestIn : bool, RestOut : bool, Backout : bool )

  if( RestIn )
  
    procPrintCarryLog( DprtID, DELTARATE, "входящего", Backout );
    
  end;


  if( RestOut )
  
    procPrintCarryLog( DprtID, REGRESTOUTCARRY, "исходящего", Backout );
    
  end;
  
  //LAO  C-37350 Запускаем переоценку по претензиям
  
  changeArestClaim({curdate});

end;
