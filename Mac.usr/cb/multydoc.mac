// Блок      : Вне блока
//-----------------------------------------------------------------------------
// Шаг       : Вне шага
// Назначение: Макрос скроллинга
// Описание  : Макрос скроллинга мультивалютных документов в ББ
/* SDA 10.07.2012 - по заявке I-00219070-2 */
// joy 19.02.2012 Жаворонкова Н. (joy) C-17206 + рефакторинг кода
// KS 02.12.2013 Перенос пользовательских доработок в 31ю сборку
//-----------------------------------------------------------------------------

import FIInter, globals, PaymInter, "pm_opr.mac", "pmchoper.mac", "pm_tools.mac";
import "cb_FillFactura.mac";

/* EVG */
import "GenNumber.mac";
/*joy*/
import "lib_const.mac", "KeyCodes.mac";

/*
      Макросы:
       -  Check()
      - Проверить_Документ (...)
      должны возвращать номер поля в котором произошла ошибка
*/

var НомерПоля =  -1; /*ошибки нет*/

FILE   f_account  ("account.dbt" );

record Multydoc   ( multydoc );
record OldMultydoc( multydoc );
record Paymdoc    ( pmpaym   );  
record OldPaymdoc ( pmpaym   );
record Rmdoc      ( pmrmprop );  
record OldRmdoc   ( pmrmprop );
record CurTr      ( pmcurtr  );
record OldCurTr   ( pmcurtr  );
record pmkz       ( pmkz     );
record Oldpmkz    ( pmkz     );
record Nvpi       ( pmnvpi   );
record OldNvpi    ( pmnvpi   );
const
    Тип_Документа_Любой      = 0,
    Тип_Документа_Отложенный = 1,
    Тип_Документа_Открытый   = 2,
    Тип_Документа_Закрытый   = 3,

    FLD_MCD_CHAPTER          = 1,
    FLD_MCD_CHAPTERNAME      = 2,
    FLD_MCD_DOCNUMBER        = 3,
    FLD_MCD_OPRID            = 4,
    FLD_MCD_OPRNAME          = 5,
    FLD_MCD_DOCDATE          = 6,
    FLD_MCD_DEBFIID          = 7,
    FLD_MCD_KREDFIID         = 8,
    FLD_MCD_DEBFIIDNAME      = 9,
    FLD_MCD_KREDFIIDNAME     = 10,
    FLD_MCD_DEBACCOUNT       = 11,
    FLD_MCD_KREDACCOUNT      = 12,
    FLD_MCD_DEBSUM           = 13,
    FLD_MCD_KREDSUM          = 14,
    FLD_MCD_DEBNAME          = 15,
    FLD_MCD_KREDNAME         = 16,
    FLD_MCD_PTDEBNAME        = 17,
    FLD_MCD_PTKREDNAME       = 18,
    FLD_MCD_SymbDebet        = 19,
    FLD_MCD_SymbNotBalDebet  = 20,
    FLD_MCD_SymbCredit       = 21,
    FLD_MCD_SymbNotBalCredit = 22,
    FLD_MCD_RATETYPE         = 23,
    FLD_MCD_RATETYPENAME     = 24,
    FLD_MCD_RATE             = 25,
    FLD_MCD_RATEFIID_TO      = 26,
    FLD_MCD_RATESCALE        = 27,
    FLD_MCD_RATEFIID_FROM    = 28,
    FLD_MCD_RATEPOINT        = 29,
    FLD_MCD_ISFIXPMRATE      = 30,
    FLD_MCD_TYPEDOC          = 31,
    FLD_MCD_GROUND           = 32,
    FLD_MCD_NPACK            = 33,
    FLD_MCD_DEPARTMENT       = 34,
    FLD_MCD_CARDATE          = 35,
    FLD_MCD_RECALCDIR        = 36,
    FLD_MCD_SHIFROPER        = 37,
    FLD_MCD_KINDOPER         = 38,
    FLD_MCD_MCMETHODNAME     = 39,

    СчетДебетования          = 0,
    СчетКредитования         = 1;



/* макрос проверяет счет и ругается если ему что-то не понравится*/
/* возвращает 1 - если ошибка */
macro ПроверитьСчет (FIID, Account, ТипСчета)
   var TypeAccount = "";

   f_account.Chapter       = MultyDoc.Chapter;
   f_account.Account       = Account ;
   f_account.Code_Currency = FIID ;
   if( GetEQ ( f_account ) != TRUE )
     MsgBox ("Неизвестный номер счета");
     return 1;
   else
     TypeAccount = f_account.Type_Account;
   end;
   if( ТипСчета == СчетДебетования )
     if( Index (TypeAccount, "ЧТ") > 0 )
       MsgBox("Счет закрыт для дебетования");
       return 1;
     end;
   end;
   if( ТипСчета == СчетКредитования )
     if ( Index (TypeAccount, "ЧУ") > 0 )
       MsgBox("Счет закрыт для кредитования");
       return 1;
     end;
   end;

   return 0;
end;


macro Check()
    var error;
/*     Неверно задана сумма */
    if( Paymdoc.Amount == 0 )  
        НомерПоля = FLD_MCD_DEBSUM;
        MsgBox ("Неверно задана сумма");
        return НомерПоля;
    end;

/*     Неверно задана сумма */
    if( Paymdoc.PayAmount == 0 )  
        НомерПоля = FLD_MCD_KREDSUM;
        MsgBox("Неверно задана сумма");
        return НомерПоля;
    end;

/*     Неизвестный тип валюты */
    ПолучитьКодФинИн( Paymdoc.FIID, error );
    if( error )
        НомерПоля = FLD_MCD_DEBFIID;
        MsgBox("Неизвестный тип валюты");
        return НомерПоля;
    end;

/*     Неизвестный тип валюты   */
    ПолучитьКодФинИн( Paymdoc.PayFIID, error );
    if( error )
        НомерПоля = FLD_MCD_KREDFIID;
        MsgBox("Неизвестный тип валюты");
        return НомерПоля;
    end;

/*     При одинаковых типах валюты суммы должны совпадать  */
    if( (Paymdoc.FIID == Paymdoc.PayFIID) and (Paymdoc.Amount != Paymdoc.PayAmount) )
        НомерПоля = FLD_MCD_DEBSUM;
        MsgBox("При одинаковых типах валюты суммы должны совпадать");
        return НомерПоля;
    end;

/*     Номера счетов должны различаться */
    if( ( Paymdoc.FIID == Paymdoc.PayFIID ) and        
        ( Paymdoc.PayerAccount == Paymdoc.ReceiverAccount ) )
        НомерПоля = FLD_MCD_DEBACCOUNT;
        MsgBox("Номера счетов должны различаться");
        return НомерПоля;
    end;

    if( ПроверитьСчет(Paymdoc.FIID, Paymdoc.PayerAccount, СчетДебетования) )
        НомерПоля = FLD_MCD_DEBACCOUNT;
        return НомерПоля;
    end;

    if( ПроверитьСчет(Paymdoc.PayFIID, Paymdoc.ReceiverAccount, СчетКредитования) )
        НомерПоля = FLD_MCD_KREDACCOUNT;
        return НомерПоля;
    end;

return 0;
END;


private macro    Новый_Документ( )
/*SDA 10/07/2012 - по заявке I-00219070-2 */
    private var _Chapter = Paymdoc.Chapter;
    clearrecord (Paymdoc);    
    Paymdoc.Chapter = _Chapter;
    clearrecord (OldPaymdoc); 
    OldPaymdoc.Chapter = _Chapter;
   /* EVG Ввод документа: автоматическое формирование номера по референсу */
    if( StrLen( Rmdoc.Number ) == 0 )
        Rmdoc.Number = GenNumberDocument();
    end;

    Rmdoc.shifroper = "09";
   
    return 0;
END;

/* Установка подсказки для скролингов из макроса */

private const Hint_ByValueDate:string = 
"/*+FIRST_ROWS(200) LEADING(pmpaym t pmrmprop oproper oprcurst) INDEX(pmpaym dpmpaym_dbt_idx11) USE_NL(pmpaym t pmrmprop oproper oprcurst)*/";

private const Hint_ByCloseDate:string = 
"/*+FIRST_ROWS(200) LEADING(pmpaym t pmrmprop oproper oprcurst) INDEX(pmpaym dpmpaym_dbt_idx15) USE_NL(pmpaym t pmrmprop oproper oprcurst)*/";

private const Hint_ByStatus   :string = 
"/*+FIRST_ROWS(200) LEADING(t pmpaym pmrmprop oproper oprcurst) INDEX(t dmultydoc_dbt_idx1) INDEX(pmpaym dpmpaym_dbt_idx0) USE_NL(t pmpaym pmrmprop oproper oprcurst)*/";

private const Hint_ByStep     :string = 
"/*+FIRST_ROWS(200) LEADING(t oproper multydoc pmpaym pmrmprop oprcurst) INDEX(t doprstep_dbt_idx10) INDEX(multydoc dmultydoc_dbt_idx0) INDEX(pmpaym dpmpaym_dbt_idx0) USE_NL(t oproper multydoc pmpaym pmrmprop oprcurst)*/";

MACRO УстановитьПодсказку( TableName:string, IndexNum:integer, DefaultHint:string, ScrolStates:integer ):string
  /* Возможные значения ScrolStates:
     0 - Все
     1 - Отложенные
     2 - Открытые
     3 - Закрытые
     4 - Отвергнутые
     5 - Подготовленные к шагу */
  
  /* Все, Закрытые */
    if( ( ScrolStates == 0 ) or
        ( ScrolStates == 3 ) )

    var dtflt:PMScrolDateFltr = PMScrolDateFltr();

        if( dtflt.IsSet( DTFL_CLOSEDATE ) )
            return Hint_ByCloseDate;
        elif( dtflt.IsSet( DTFL_VALUEDATE ) )
            return Hint_ByValueDate;
        else
            return Hint_ByStatus;
        end;
  
    /* Отложенные, Открытые, Отвергнутые */
    elif( ( ScrolStates == 1 ) or 
          ( ScrolStates == 2 ) or 
          ( ScrolStates == 4 ) )
        return Hint_ByStatus;

    /* Подготовленные к шагу */
    elif( ScrolStates == 5 )
        return Hint_ByStep;
    end;

    return DefaultHint;
END;


/* Режим - отложенный, открытый, закрытый*/
/* Тип_документа - тип документа куда проводим */
macro    Проверить_документ( Режим, Тип_документа )
   var stat = 0, num, i = 0, цикл = true,
       CHANG_IMPORTANT = -11,
       CHANG_NOTIMPORTANT = -10;
   var errors:TArray = TArray();

    if( (Режим == SCR_SAVE ) or (Режим == SCR_EDIT) or (Режим == SCR_INSERT) ) /*2 или 3 или 8*/
        if( StrLen( Rmdoc.Number ) == 0 )
            MsgBox("Не задан номер документа");
            return FLD_MCD_DOCNUMBER;
        end;

        if( Paymdoc.Amount <= 0 )
            MemoryError( 407 );
            return FLD_MCD_DEBSUM;
        end;

        if( Paymdoc.PayAmount <= 0 )
            MemoryError( 407 );
            return FLD_MCD_KREDSUM;
        end;
        /* Для документов по счетам с НВПИ проверим заполненность сумм в валюте-эквиваленте */
        if( PM_CheckAccount_Type( Paymdoc.PayerAccount, Paymdoc.Chapter, Paymdoc.FIID, "В" ) and PM_CheckAccount_Type( Paymdoc.ReciverAccount, Paymdoc.Chapter, Paymdoc.PayFIID, "В" ) )
          if( Nvpi.DbSumEq == $0 )
            MsgBox("Сумма дебета в валюте-эквиваленте не может быть равна нулю.");
            return 1;
          end;

          if( Nvpi.CrSumEq == $0 )
            MsgBox("Сумма кредита в валюте-эквиваленте не может быть равна нулю.");
            return 1;
          end;
        end;

        if( StrLen( Rmdoc.Ground ) == 0 )
            MsgBox("Введите основание документа");
            return FLD_MCD_GROUND;
        end;
        // проверка корректности фактического курса
        if( CheckCorrectRateTypeOnDate( Paymdoc, errors ) )
            msgbox( errors[0].name );
            return 1;
        end;
   end;

/* Если не отложенный документ, то проверяем иначе нельзя будет сохранить всё, что угодно*/
    if( (Режим == SCR_SAVE) or (Режим == SCR_EDIT) ) 
   /* непосредственная проверка ИМЕННО перед проводкой */
        if( Тип_документа != Тип_документа_Отложенный )
            stat = Check();
            if( stat )
                return stat;
            end;
        end;

        if( (Multydoc.Status != Тип_документа_Отложенный) ) 
            stat = Check();
            if( stat )
                return stat;
            end;
        end;
        if(PM_CheckCO(Paymdoc,Rmdoc,0,0))
            return 1;
        end;
    end;

    if( Режим == SCR_DELETE ) /*УДАЛЕНИЕ ДОКУМЕНТА*/
     if( MultyDoc.Origin == MULTYDOC_ORIGIN_LOANS )
       if(not Index( "Ц", StrFor(GetIdentProgram())))
         msgbox("Документ порожден п/с \"Кредитование\".|Удаление запрещено.");
         stat = 1;
       end;
     elif( MultyDoc.Origin == MULTYDOC_ORIGIN_DEPOSIT )
       if(not Index( "Д", StrFor(GetIdentProgram())))
         msgbox("Документ порожден п/с \"Депозиты\".|Удаление запрещено.");
         stat = 1;
       end;
     elif( MultyDoc.Origin == MULTYDOC_ORIGIN_RETAIL )
       if(not Index( "ВБD", StrFor(GetIdentProgram())))
         msgbox("Документ порожден п/с \"Обслуж.физ.лиц\".|Удаление запрещено.");
         stat = 1;
       end;
     end;
     if(CheckDeletePayment(Paymdoc.PaymentID))
       return 1;
     end;
   end;
 
    if( Режим == SCR_SAVE )  /* ВВОД ДОКУМЕНТА */
        if( MultyDoc.Kind_Operation ) /* Вставка документа одновременно с началом операции */
            if( Paymdoc.ValueDate == Date(0,0,0000) ) /* Дата валютирования*/
                Paymdoc.ValueDate = {curdate};
            end;
        end;
   end;

    if( Режим == SCR_EDIT)  /* РЕДАКТИРОВАНИЕ ДОКУМЕНТА */
        if( Multydoc.Origin == MULTYDOC_ORIGIN_LOANS )
            if(not Index( "Ц", StrFor(GetIdentProgram())))
                msgbox("Документ порожден п/с \"Кредитование\".|Корректировка запрещена.");
                stat = 1;
            end;
        elif( Multydoc.Origin == MULTYDOC_ORIGIN_RETAIL )
            if(not Index( "ВБD", StrFor(GetIdentProgram())))
                msgbox("Документ порожден п/с \"Обслуж.физ.лиц\".|Корректировка запрещена.");
                stat = 1;
            end;
        elif( (Multydoc.Origin == MULTYDOC_ORIGIN_AUTO) and (Paymdoc.PaymStatus == PM_REJECTED) )
            if( ПроверкаИдентичности(Paymdoc, Paymdoc, "Amount", "FuturePayerAmount", "PayAmount", "FutureReceiverAmount", "Rate", "RateType", "Point", "Scale", "RateDate", 
                                                       "IsInverse", "IsFixAmount") and
                ПроверкаИдентичности(Multydoc,OldMultydoc) and
                ПроверкаИдентичности(Rmdoc, OldRmdoc) and
                ПроверкаИдентичности(CurTr, OldCurTr)
              )
                stat = CHANG_NOTIMPORTANT;
            else
                stat = CHANG_NOTKEEP;
            end;
        end;

        if( (stat == 0) and (Multydoc.Status != Тип_Документа_Отложенный) ) /* документ находится не в отложенных*/ 
            stat = CHANG_NOTIMPORTANT;
         /*При редактировании производим проверку важности внесенных изменений */
         /* Константы важности внесенных изменений:           */
         /* CHANG_NOTIMPORTANT   - изменения неважные (сохранение без отката операции)*/
         /* CHANG_IMPORTANT      - изменения важны (сохранение изменений возможно только при откате) */
         /* CHANG_NOTKEEP        - не сохранять изменения */
         /* Если возвращаемое значение  > 1, то cчитается, что произошла ошибка (код ошибки)*/
         /* Если возвращаемое значение  = 0, то cчитается, что проверка прошла успешно*/
         /* и сохранение изменений можно производить без отката операции      */
         /* Для мультивалютных считаем любые изменения важными */       
            num = FldNumber ( Multydoc );
            while( цикл and (i < num) )
                if( MultyDoc(i) != OldMultyDoc(i) )
                    stat = CHANG_IMPORTANT;
                    цикл = false;
                end;
                i = i + 1;
            end;
            if( (Paymdoc.Amount          != OldPaymdoc.Amount         ) or
                (Paymdoc.PayAmount       != OldPaymdoc.PayAmount      ) or
                (Paymdoc.FIID            != OldPaymdoc.FIID           ) or
                (Paymdoc.PayFIID         != OldPaymdoc.PayFIID        ) or
                (Paymdoc.ValueDate       != OldPaymdoc.ValueDate      ) or
                (Rmdoc.Date              != OldRmdoc.Date             ) or
                (Paymdoc.NumberPack      != OldPaymdoc.NumberPack     ) or
                (Paymdoc.Department      != OldPaymdoc.Department     ) or
                (Rmdoc.Number            != OldRmdoc.Number           ) or
                (Paymdoc.PayerAccount    != OldPaymdoc.PayerAccount   ) or
                (Paymdoc.ReceiverAccount != OldPaymdoc.ReceiverAccount) or
                (Rmdoc.Ground            != OldRmdoc.Ground           ) or
                (Paymdoc.IsInverse       != OldPaymdoc.IsInverse      ) or
                (Paymdoc.Scale           != OldPaymdoc.Scale          ) or
                (Paymdoc.Point           != OldPaymdoc.Point          ) or
                (Paymdoc.Payer           != OldPaymdoc.Payer          ) or
                (Paymdoc.Receiver        != OldPaymdoc.Receiver       ) or
                (Rmdoc.CashSymbolDebet   != OldRmdoc.CashSymbolDebet  ) or
                (Rmdoc.CashSymbolCredit  != OldRmdoc.CashSymbolCredit ) or
                (Rmdoc.SymbNotBalDebet   != OldRmdoc.SymbNotBalDebet  ) or
                (Rmdoc.SymbNotBalCredit  != OldRmdoc.SymbNotBalCredit )
               )
                stat = CHANG_IMPORTANT;
            end;

            if( ( 
                Opr_IsStepExecuteSymb( Paymdoc.DocumentID, Paymdoc.DocKind, "К" ) Or 
                Opr_IsStepExecuteSymb( Paymdoc.DocumentID, Paymdoc.DocKind, "А" ) Or
                Opr_IsStepExecuteSymb( Paymdoc.DocumentID, Paymdoc.DocKind, "Е" ) Or
                Opr_IsStepExecuteSymb( Paymdoc.DocumentID, Paymdoc.DocKind, "е" ) ) 
                And
                ( Paymdoc.PaymStatus != PM_REJECTED) )
                if ( not( 
                        ПроверкаИдентичности(Multydoc , OldMultydoc   ) And
                        ПроверкаИдентичности(Paymdoc  , OldPaymdoc,   "FUTURERECEIVERACCOUNT") And
                        ПроверкаИдентичности(Rmdoc    , OldRmdoc      ) )
                    )                   
                    stat = CHANG_NOTKEEP;
                elif(       
                     (Not Opr_IsStepExecuteSymb( Paymdoc.DocumentID, Paymdoc.DocKind, "U", "R") ) 
                      And
                     (Not Opr_IsStepExecuteSymb( Paymdoc.DocumentID, Paymdoc.DocKind, "З", "R", 29029) )
                      And 
                     (Paymdoc.FutureReceiverAccount != OldPaymdoc.FutureReceiverAccount )
                    )
                    stat = CHANG_NOTKEEP;
                end;
            end;
        end;
    end;
    if( Режим == SCR_ROLLBACK ) /*ПОМЕЩЕНИЕ ДОКУМЕНТА В ОТЛОЖЕННЫЕ, ОТКАТ ОПЕРАЦИИ*/
    end;

    if( Режим == SCR_INSERT )  /*ВВОД В ОТЛОЖЕННЫЕ*/
    end;
  
    if(Режим == OBJ_AFTEREDIT) // Проверка важности изменений влияющей на необходимость смены опера документа
                                // (изменения в буферах не сохраняются)
        return IsImportantChangeForOperMultyDoc(Paymdoc, OldPaymdoc, Rmdoc, OldRmdoc, Multydoc, OldMultydoc, Nvpi, OldNvpi);
    end;

    return stat;
END;

private macro Функция_Пользователя( Режим:integer )
  /*
 Возможные значения Режим:
  UFN_PANEL_INPUT(1) - функция вызвана из панели ввода объекта;
  UFN_PANEL_EDIT(2) - функция вызвана из панели корректировки объекта;
  UFN_SCROL(3) - функция вызвана из панели скролинга, единичный вызов, любая корректировка объекта запрещена;
  UFN_SCROL_FMASS(4) - функция вызвана из панели скролинга, работа по нескольким записям, вызов до начала обработки, любая корректировка объекта запрещена;
 
// Пример работы: 
 if( Режим == UFN_SCROL )
   return UPDTPAGE;    // Обновить страницу записей и область скролинга
   //return UPDTREC;     // Обновить текущую запись, загрузив из файла
 end;
 */
 var PaymentObj:Rsbpayment=Rsbpayment(Paymdoc.paymentId);
    var m;
    array mn;
    /*19-02-2012 Жаворонкова Н. (joy) C-17206*/
    mn(asize(mn)) = "Изменить вид хранения";

    m=menu(mn,null, "Выберите действие");
     if (m == -2) 
        return 0; // Обработка ESC
    /*19-02-2012 Жаворонкова Н. (joy) C-17206*/
    elif(mn(m) == "Изменить вид хранения")
        if (Paymdoc.PaymStatus == PM_FINISHED) // Только для закрытых, если открыт\отложен - хоть обменяйтесь :)
            execMacroFile ("ea_checks.mac", "CheckEAGroup", Paymdoc); 
        else
            execMacroFile ("ea_checks.mac","SetEAStoreKind", Paymdoc);
        end;
        return 0;
    end;
 
 return 0;
END;

Macro ProcessPanel(mode, key, field, panel)
   var i=0;

   if (Multydoc.Origin != 1) //Кроме ручного ввода
      while (i < panel.Fields.count)
        i = i + 1;
      end;      
   else
      while (i < panel.Fields.count)
         panel.Fields.Item(i).Enabled = true;
         i = i + 1;
      end;      
   end;
// Tikh - Обработка основания КЭУ
// Покупка валюты по распоряжению КЭУ (по курсу КККККККККККК)
    if ((key == KEY_F9) or (key == KEY_F2)) /*323 или 316*/
        if (rmdoc.ground == "Покупка валюты по распоряжению КЭУ (по курсу КККККККККККК)")
            rmdoc.ground  = strsubst(rmdoc.ground,"КККККККККККК",string(panel.Fields.Item(22).value/10000/panel.Fields.Item(25).value));
        end;
    end;
    /*SDA - исправление ошибки не переданного из внешней системы шифра операции */
    OldRmdoc.ShifrOper = Rmdoc.ShifrOper = "09";
    if (trim( Multydoc.kind_oper) == "")
        OldMultydoc.kind_oper =  Multydoc.kind_oper = " 6";
    end;
END;
