/*──────────────────────────────────────────────────────────────────────────┐
  RS-Bank 6.0                                          R-Style Software Lab

  File Name   : prf203.mac
  Created     : 26.07.2007
  Programmer  : Осмаковский Е.В.
  Description : Печатная форма для мультивалютных документов
                Печатная форма для мемордеров

└───────────────────────────────────────────────────────────────────────────*/

import prpm, globals, FIInter, PTInter, PaymInter, prnlib, pmprops;
IMPORT oralib, likepy, cat_acc, prpi_lib;

var pr_multydoc:TRecHandler = TRecHandler( "multydoc.dbt", "bank.def" );
var pr_cb_doc:TRecHandler  = TRecHandler("cb_doc.dbt", "bank.def");


private macro КонвертФИ (изФИ, вФИ, Сколько, Результат, Дата )
    VAR stat;

    stat = ConvSum(Результат, Сколько, Дата, изФИ, вФИ, 0);
    if (stat == 0)
        SetParm(3, Результат);
    else
        if (Дата != Date (0,0,0))
           MsgBox("Не найден основной курс ",ПолучитьКодФинИн(изФИ), " относительно ",ПолучитьКодФинИн(вФИ), " за ", Дата);
        else
           MsgBox("Не найден основной курс ",ПолучитьКодФинИн(изФИ), " относительно ",ПолучитьКодФинИн(вФИ), " за 00.00.0000");
        end;
    end;

    return stat;
END;

//По рублевому счету первой главы найти ИНН клиента и наименование клиента
private macro GetINNandNameClient( Acc:string, Name:string, INN:string )

  RECORD accRec(account);
  var TB_Acoount:Tbfile = Tbfile("account.dbt", "r");
  TB_Acoount.rec.Account = Acc;
  TB_Acoount.rec.Chapter = 1;
  if(TB_Acoount.GetEQ())
    Copy( accRec, TB_Acoount );
    //Наименование клиннта получаем по глбальной настройке
    if( not PM_SetClientNameGlobal( accRec, Name ,INN ))
      SetParm( 1, Name );
      SetParm( 2, INN );
      return true;
    end;
  end;
  SetParm( 1, "" );
  SetParm( 2, "" );
  return false;
end;

//Получить КУ, заданной для главы 1 как "КУ реализованных положительных курсовых разниц"
//Получить КУ, главы 1 как "КУ реализованных отрицательных курсовых разниц"
private macro GetCodeCateg( КУпол, КУотр )

  var select:string;
  var rset:object;

  select = "SELECT mcp.t_id, mcm.t_id "+
           "FROM dobchaptr_dbt ch, dmccateg_dbt mcp, dmccateg_dbt mcm "+
           "WHERE ch.t_chapter = 1 "+
           "AND ch.t_realizedcatnumplus = mcp.t_number "+
           "AND mcp.t_leveltype = 1 "+ /* = 1 = MCCATEG_LEVEL_TYPE_CATEGORY*/
           "AND ch.t_realizedcatnumminus = mcm.t_number "+
           "AND mcm.t_leveltype = 1 "; /* = 1 = MCCATEG_LEVEL_TYPE_CATEGORY*/
  
  rset = execSQLselect( select, NULL, false );
  if(rset and rset.moveNext())
    SetParm(0, rset.value(0));
    SetParm(1, rset.value(1));
    return true;
  end;
  return false;
end;

private macro CheckAccIsCateg( id, account ) 

  var select:string;
  var params:TArray = TArray();
  var rset:object;

  select = "SELECT 1 "+
           "FROM DUAL "+
           "WHERE EXISTS ( "+
                    "SELECT /*+FIRST_ROWS(1)*/ 1 "+
                      "FROM dmcaccdoc_dbt doc "+
                       "WHERE doc.t_catid = :id "+
                       "AND doc.t_account = :acc "+
                       "AND doc.t_currency = 0 "+
                       "AND doc.t_chapter = 1 "+
                       "AND ROWNUM <= 1 )";
  
  params[params.size] = SQLParam( "id", id );
  params[params.size] = SQLParam( "acc", account );
  rset = execSQLselect( select, params, false );
  if(rset and rset.moveNext())
    return true;
  end;
  return false;

end;

//Печатать вторую форму?
//если печатать, то заполняет: 
//СчетДебета, СчетКредита, СуммаПроводки
private macro GetDataFromSecondForm(СчетДебета, СчетКредита, СуммаПроводки ):bool

  //Находим коды КУ-та
  var КУпол, КУотр;
  var pAcc, mAcc;

  if( not GetCodeCateg( КУпол, КУотр ) )
    return false;
  end;
  
  // Найдем проводку курсовых разниц
  var select = "select extr.t_Account_Payer, extr.t_Account_Receiver, extr.t_sum_natcur   "+
               "  from   dacctrn_dbt tr, dacctrn_dbt extr, dpmdocs_dbt pm                 "+
               " where pm.t_PaymentID        = :PaymentID                                 "+
               "   and pm.t_AcctrnID         = tr.t_AcctrnID                              "+
               "   and tr.t_ExRateAcctrnID   = extr.t_AcctrnId                            "+
               "   and extr.t_State          = 1                                          "+
               "   and extr.t_Result_Carry   = 83                                         ";
  
  var params:TArray = TArray();
  params[params.size] = SQLParam( "PaymentID", pr_multydoc.rec.autokey );
  
  var rset = execSQLselect( select, params, false );
  
  while( rset and rset.moveNext() )
    if( CheckAccIsCateg( КУотр, rset.value(0)) or
        CheckAccIsCateg( КУпол, rset.value(1)) )
      SetParm(0, rset.value(0));
      SetParm(1, rset.value(1));
      SetParm(2, rset.value(2));
      return true;
    end;
  end;

  return false;
end;

//Целые единицы валюты от дробных единиц валюты отделяются знаком тире "-";
//Если сумма выражена в целых единицах валюты, то указывается сумма в 
//целых единицах валюты и ставится знак "=", дробные единицы валюты не выводятся;
private macro MoneyToStr( Sum:money ):string
  var strSum = "";

  if(Sum != money(0))
    if((Sum - Round(Sum, 0)) != money(0))
      strSum = string(Sum:f);//Для дробных едениц валюты
    else
      strSum = string(double(Sum):0:0) +"=";//Для целых едениц валюты
    end;
  else
    strSum = "";
  end;

  return strSum;
end;

private macro MoneyToStrWord( Sum, FIID ):string 
  var strSum = "";

  if(Sum != money(0))
    if(FIID == NATCUR)
      strSum = RubToStrAlt(Sum);
    else
      strSum = CurToStrAlt(Sum, NULL, NULL, GetISOCode(FIID));
    end;
  else
    strSum = "";
  end;
  return strSum;
end;

//Получить БИК и наименование владельца кода БИК с учетом иерархии.
private macro GetBICandOwnerBIC(BankID, Name, BIC, IDOwnerBIC)
  
  var ownerCodeBIC = 0,
      _BIC,
      TR_party:TRecHandler  = TRecHandler("party.dbt", "bank.def");

  TR_party.Clear();
  if(( GetPartyCodeEx( BankID, PTCK_BIC, @_BIC, @ownerCodeBIC ) == 0) 
      and (ПолучитьСубъекта( ownerCodeBIC, TR_party ) == 0))
      SetParm(1, TR_party.rec.Name);
      SetParm(2, _BIC);
      SetParm(3, ownerCodeBIC);
      return true;
  end;
  return false;
end;

//ID по которому определяем краткое наименование нашего банка (филиала)
private macro GetIDBank( Code )
 
 var params:TArray = TArray();
 var select = "SELECT dp.t_nodetype, dp.t_partyid, dpp.t_partyid "+
              "FROM ddp_dep_dbt dp "+
              "LEFT JOIN ddp_dep_dbt dpp ON dpp.t_code = dp.t_parentcode "+
              "WHERE dp.t_code = :code ";
  params[params.size] = SQLParam( "code", Code );
  var rs = execSQLselect( select, params, false );
  
  if( rs and rs.moveNext() )
    if(rs.value(0) == 1 /*DEPARTMENT_TYPE_FILIAL*/)
      return rs.value(1);
    elif(rs.value(0) == 2 /*DEPARTMENT_TYPE_VSP*/)
      return rs.value(2);
    else
      return 0;
    end;
  end;

  return 0;     
end;

//Получить корсчет банка в РКЦ.
private macro GetCorAcc( PartyID, CorAcc )
  var TB_bankdprt = TBFile( "bankdprt.dbt", "R", 0, "bankdprt.dbt", "bank.def" );
  TB_bankdprt.rec.PartyID = PartyID;
  
  if( TB_bankdprt.GetEQ())
    SetParm(1, TB_bankdprt.rec.CorAcc);
    return true;
  end;
  return false;
end;

macro PrintDoc( ShortNameBank, /*1*/  
                SPOD_str,      /*2*/
                Number,        /*3*/  
                DateDoc,       /*4*/  
                Sum1,          /*5*/  
                Sum2,          /*5.1*/  
                PayINN,        /*6*/   
                PayName,       /*7*/   
                PayAcc,        /*8*/  
                PayBankName,   /*9*/  
                PayBankBIC,    /*10*/ 
                PayBankCorAcc, /*11*/ 
                RecBankName,   /*12*/ 
                RecBankBIC,    /*13*/ 
                RecBankCorAcc, /*14*/ 
                RecINN,        /*15*/ 
                RecAcc,        /*16*/ 
                RecName,       /*17*/ 
                ShifrOper,     /*18*/ 
                Ground,        /*19*/ 
                FIID1,
                FIID2 )         
  
  var strSum1 = "",
      strSum2 = "",
      strSum1word = "",
      strSum2word = "";
  //Получаем деньги в нужных форматах
  strSum1 = MoneyToStr( Sum1 );
  strSum2 = MoneyToStr( Sum2 );
  strSum1word = MoneyToStrWord( Sum1, FIID1 );
  strSum2word = MoneyToStrWord( Sum2, FIID2 );

  var PayNameArr:TArray,
      RecNameArr:TArray,
      PayBankNameArr:TArray,
      RecBankNameArr:TArray,
      GroundArr:TArray;

  var err,pagebreak,terminator=""; // KS 16.11.2011 Разделитель
  GetRegistryValue("PRBB\\REPORT\\ПЕЧАТЬ\\MEMORDER\\PAGE BREAK",V_BOOL,pagebreak,err);
  if (( err == 0 ) and (pagebreak))
    terminator = "";
  end;

  PayNameArr = strsplit2( PayName, 43, 43, 3 );
  RecNameArr = strsplit2( RecName, 43, 43, 4 );
  PayBankNameArr = strsplit2( PayBankName, 43, 43, 3 );
  RecBankNameArr = strsplit2( RecBankName, 43, 43, 3 );
  GroundArr = strsplit2( Ground, 87, 87, 3 );
 [
  ┌─────────────────────────────────────────────────────────────────────────────────────────┐
  │ #############################################################                  Ф.№№ 203 │
  │ ─────────────────────────────────────────────────────────────                           │
  │      Наименование филиала                                                               │
  │        ###########################################                                ####  │
  │                                                                                         │
  │  МЕМОРИАЛЬНЫЙ ОРДЕР N ###############                                                   │
  │                                                                                         │
  │        #######################                                                          │
  │                                                                                         │
  │ Сумма    │ ############################################################################ │
  │ прописью │ ############################################################################ │
  ├─────────────────────────────────────────────┬──────────┬────────────────────────────────┤
  │ ИНН ####################################### │  Сумма   │ ############################## │
  │ ########################################### │          │ ############################## │
  │ ########################################### │          │                                │
  │ ########################################### ├──────────┼────────────────────────────────┤
  │ Плательщик                                  │  Сч.N    │ #######################        │
  ├─────────────────────────────────────────────┼──────────┤                                │
  │ ########################################### │  БИК     │ #################              │
  │ ########################################### ├──────────┤                                │
  │ Банк плательщика    ####################### │  Сч.N    │ #######################        │
  ├─────────────────────────────────────────────┼──────────┼────────────────────────────────┤
  │ ########################################### │  БИК     │ #################              │
  │ ########################################### ├──────────┤                                │
  │ Банк получателя     ####################### │  Сч.N    │ #######################        │
  ├─────────────────────────────────────────────┼──────────┤                                │
  │ ИНН ####################################### │  Сч.N    │ #######################        │
  │ ########################################### ├──────────┼────────┬──────────┬────────────┤
  │ ########################################### │ Вид. Оп. │ ###### │Срок плат.│            │
  │ ########################################### ├──────────┤        ├──────────┤            │
  │ ########################################### │Назн.плат.│        │Очер.плат.│            │
  │                                             ├──────────┤        ├──────────┤            │
  │ Получатель                                  │   Код    │        │Рез.поле  │            │
  ├─────────────────────────────────────────────┴──────────┴────────┴──────────┴────────────┤
  │ Назначение платежа (содержание операции)                                                │
  │ ####################################################################################### │
  │ ####################################################################################### │
  │ ####################################################################################### │
  │                                                                                         │
  │       Подпись клиента                                                                   │
  │    /получателя ценностей/                                                               │
  │                                                                                         │
  │    __________________________________________________________________                   │
  │                         Подписи            Отметки банка                                │
  │                                                                                         │
  │                                                                                         │
  │        М.П.                                                                             │
  │              ───────────────────────────                                                │
  │                                                                                         │
  │              ───────────────────────────                                                │
  │                                                                                         │
  └─────────────────────────────────────────────────────────────────────────────────────────┘
  # 
]( ShortNameBank,
   {NAME_BANK}, //zmp 13.09.2013 R-247875
   SPOD_str,
   Number,
   DateDoc:m,
   strSum1word,
   strSum2word,
   PayINN,        strSum1,
   PayNameArr(0), strSum2,
   PayNameArr(1),
   PayNameArr(2),
   PayAcc:f,
   PayBankNameArr(0), GetCodeBik(DateDoc,PayBankBIC),
   PayBankNameArr(1),
   PayBankNameArr(2), PayBankCorAcc:f,
   RecBankNameArr(0), GetCodeBik(DateDoc,RecBankBIC),
   RecBankNameArr(1),
   RecBankNameArr(2), RecBankCorAcc:f,
   RecINN, RecAcc:f,
   RecNameArr(0),
   RecNameArr(1), ShifrOper,
   RecNameArr(2),
   RecNameArr(3),
   GroundArr(0),
   GroundArr(1),
   GroundArr(2),
   terminator); // KS 16.11.2011 Разделитель
end;

//Краткое наименование нашего банка (филиала)
private macro GetShortNameBank( Department, ShortNameBank)
  var IDBank,
      TR_party:TRecHandler  = TRecHandler("party.dbt", "bank.def");
  TR_party.Clear();
  if( (IDBank = GetIDBank( pr_pmpaym.rec.Department )) 
      and ( ПолучитьСубъекта( IDBank, TR_party ) == 0))
     SetParm(1, TR_party.rec.ShortName);
     return true;
  end;
  return false;
end;


//------------------------------------------------------------------------------------
//             Печатная форма для мультивалютных документов
//------------------------------------------------------------------------------------

MACRO PrintMC_203( ncopy ) : bool

  //Определяем необходимость печати второго листа
  var PrintSecondForm = false,
      СчетДебета = "", 
      СчетКредита = "", 
      СуммаПроводки = "";
  PrintSecondForm = GetDataFromSecondForm( СчетДебета, СчетКредита, СуммаПроводки );

  //Краткое наименование нашего банка (филиала)
  var ShortNameBank = "";
  GetShortNameBank( pr_pmpaym.rec.Department, ShortNameBank );
  
  //Суммы документа
  var Sum1, 
      Sum2, 
      FIID1,
      FIID2;
  if((pr_pmpaym.rec.FIID == NATCUR) and (pr_pmpaym.rec.PayFIID != NATCUR))
    Sum1 = pr_pmpaym.rec.PayAmount;
    Sum2 = pr_pmpaym.rec.Amount;
    FIID1 = pr_pmpaym.rec.PayFIID;
    FIID2 = pr_pmpaym.rec.FIID;
  else
    Sum1 = pr_pmpaym.rec.Amount;
    Sum2 = pr_pmpaym.rec.PayAmount; 
    FIID1 = pr_pmpaym.rec.FIID;
    FIID2 = pr_pmpaym.rec.PayFIID;
  end;

  //Наименование банка получателя и плательщика - владельца кода вида БИК и сам БИК
  var PayBankName = "",
      RecBankName = "",
      PayBankBIC = "", //──┐
      RecBankBIC = "",  // ├─Это необходимо только если печатаем второй лист
      PayIDOwnerBIC = 0,// │
      RecIDOwnerBIC = 0;// ┘

  GetBICandOwnerBIC(pr_pmpaym.rec.PayerBankID, PayBankName, PayBankBIC, PayIDOwnerBIC );
  GetBICandOwnerBIC(pr_pmpaym.rec.ReceiverBankID, RecBankName, RecBankBIC, RecIDOwnerBIC );

  //Формируем номер
  var Number1,
      Number2;
  if( PrintSecondForm )
    Number1 = pr_pmrmprop.rec.Number + "/1";
  else
    Number1 = pr_pmrmprop.rec.Number;
  end;

  var SPOD_str = IfThenElse( Index( pr_multydoc.rec.Type_Document, "З" ), "СПОД", "    " );

  var PayINN = "",   
      PayName = "",  
      RecINN = "",  
      RecName = ""; 

  var PayBankCorAcc = "",
      RecBankCorAcc = "";
  //Если проводка курсовых разниц найдена
  if( PrintSecondForm )
  
    //Формируем номер
    Number2 = pr_pmrmprop.rec.Number + "/2";

    //Получаем ИНН и наименования плательщика и получателя по счетам
    GetINNandNameClient( СчетДебета, PayName, PayINN );
    GetINNandNameClient( СчетКредита, RecName, RecINN );

    //Получаем корсчета банков плательщика и получателя в РКЦ.
    GetCorAcc( PayIDOwnerBIC, PayBankCorAcc );
    GetCorAcc( RecIDOwnerBIC, RecBankCorAcc );

  end;
  
  while( ncopy > 0 )
    ncopy = ncopy - 1;
    //Печатаем первый документ
    PrintDoc( ShortNameBank,                 /*1*/  
              SPOD_str,                      /*2*/
              Number1,                       /*3*/  
              pr_pmrmprop.rec.Date,          /*4*/  
              Sum1,                          /*5*/  
              Sum2,                          /*5.1*/  
              pr_pmrmprop.rec.PayerINN,      /*6*/   
              pr_pmrmprop.rec.PayerName,     /*7*/ 
              pr_pmpaym.rec.PayerAccount,    /*8*/  
              PayBankName,                   /*9*/  
              "",                            /*10*/ 
              "",                            /*11*/ 
              RecBankName,                   /*12*/ 
              "",                            /*13*/ 
              "",                            /*14*/ 
              pr_pmrmprop.rec.ReceiverINN,   /*15*/ 
              pr_pmpaym.rec.ReceiverAccount, /*16*/ 
              pr_pmrmprop.rec.ReceiverName,  /*17*/ 
              pr_pmrmprop.rec.ShifrOper,     /*18*/ 
              pr_pmrmprop.rec.Ground,        /*19*/ 
              FIID1,
              FIID2 );
    
    //Если надо то и второй
    if(PrintSecondForm)
      PrintDoc( ShortNameBank,             /*1*/  
                SPOD_str,                  /*2*/
                Number2,                   /*3*/  
                pr_pmrmprop.rec.Date,      /*4*/  
                СуммаПроводки,             /*5*/  
                0,                         /*5.1*/  
                PayINN,                    /*6*/   
                PayName,                   /*7*/   
                СчетДебета,                /*8*/  
                PayBankName,               /*9*/  
                PayBankBIC,                /*10*/ 
                PayBankCorAcc,             /*11*/ 
                RecBankName,               /*12*/ 
                RecBankBIC,                /*13*/ 
                RecBankCorAcc,             /*14*/ 
                RecINN,                    /*15*/ 
                СчетКредита,               /*16*/ 
                RecName,                   /*17*/ 
                pr_pmrmprop.rec.ShifrOper, /*18*/ 
                pr_pmrmprop.rec.Ground,    /*19*/ 
                NATCUR,
                NATCUR );         
    end;         
  end;

end;
//------------------------------------------------------------------------------------
//                      Печатная форма для мемордеров
//------------------------------------------------------------------------------------

macro PrintCB_DOC_203( ncopy )
      
  //Краткое наименование нашего банка (филиала)
  var ShortNameBank = "";
  GetShortNameBank( pr_pmpaym.rec.Department, ShortNameBank );

  //Если надо, то отконвертируем в NATCUR
  var Sum2 = 0;
  if(pr_pmpaym.rec.FIID != NATCUR)    
    КонвертФИ (pr_pmpaym.rec.FIID, NATCUR, pr_pmpaym.rec.Amount, Sum2, pr_pmpaym.rec.ValueDate )
  end;

  var SPOD_str = IfThenElse( Index( pr_cb_doc.rec.TypeDocument, "З" ), "СПОД", "    " );

  //Наименование банка получателя и плательщика - владельца кода вида БИК и сам БИК
  var PayBankName = "",
      RecBankName = "",
      PayBankBIC = "", 
      RecBankBIC = "",  
      PayIDOwnerBIC = 0,
      RecIDOwnerBIC = 0;

  GetBICandOwnerBIC(pr_pmpaym.rec.PayerBankID, PayBankName, PayBankBIC, PayIDOwnerBIC );
  GetBICandOwnerBIC(pr_pmpaym.rec.ReceiverBankID, RecBankName, RecBankBIC, RecIDOwnerBIC );
  
  //Получаем корсчета банков плательщика и получателя в РКЦ.
  var PayBankCorAcc = "",
      RecBankCorAcc = "";
  GetCorAcc( PayIDOwnerBIC, PayBankCorAcc );
  GetCorAcc( RecIDOwnerBIC, RecBankCorAcc );
  
  while( ncopy )
    PrintDoc( ShortNameBank,                 /*1*/  
              SPOD_str,                      /*2*/
              pr_pmrmprop.rec.Number,        /*3*/  
              pr_pmrmprop.rec.Date,          /*4*/  
              pr_pmpaym.rec.Amount,          /*5*/  
              Sum2,                          /*5.1*/  
              pr_pmrmprop.rec.PayerINN,      /*6*/   
              pr_pmrmprop.rec.PayerName,     /*7*/ 
              pr_pmpaym.rec.PayerAccount,    /*8*/  
              PayBankName,                   /*9*/
              PayBankBIC,                    /*10*/
              PayBankCorAcc,                 /*11*/
              RecBankName,                   /*12*/
              RecBankBIC,                    /*13*/
              RecBankCorAcc,                 /*14*/
              pr_pmrmprop.rec.ReceiverINN,   /*15*/ 
              pr_pmpaym.rec.ReceiverAccount, /*16*/ 
              pr_pmrmprop.rec.ReceiverName,  /*17*/ 
              pr_pmrmprop.rec.ShifrOper,     /*18*/ 
              pr_pmrmprop.rec.Ground,        /*19*/ 
              pr_pmpaym.rec.FIID,
              NATCUR );
    ncopy = ncopy - 1;         
  end;
end;
/*ф203 для каждой уточняющей записи ответного документа МБР(если среди них окажутся мультивалютные)*/
MACRO PrPIReport_f203(документ:PmAddPIDoc)

  var PmPaym:RsbPayment = RsbPayment(pr_pmpaym.rec.PaymentID);

  var PayINN, PayName, DebetAmount,  DebetAccount,  DebetFIID, 
      RecINN, RecName, CreditAmount, CreditAccount, CreditFIID;
  
  var ShortName = "", i = 0; 
  var isCredit:integer = -1; //По какой стороне берём уточняющие записи?

  if  (PmPaym.PIList( 0 ).Size() > 0)
        isCredit = 0;
  elif(PmPaym.PIList( 1 ).Size() > 0)
        isCredit = 1;
  end;

  var PayBankName, RecBankName;    

  var PayBankBIC = "", RecBankBIC = "";    
  var PayBankCorAcc = "", RecBankCorAcc = "";
  var PayIDOwnerBIC = 0,  RecIDOwnerBIC = 0;


  GetBICandOwnerBIC(pr_pmpaym.rec.PayerBankID,    PayBankName, PayBankBIC, PayIDOwnerBIC);
  GetBICandOwnerBIC(pr_pmpaym.rec.ReceiverBankID, RecBankName, RecBankBIC, RecIDOwnerBIC);

  while( i < PmPaym.PIList(IsCredit).Size() )
   
    GetShortNameBank( pr_pmpaym.rec.Department, ShortName );
    /*в списках проводок один из счетов заполнен только один раз*/
    DebetAccount  = IfThenElse( isCredit, документ.GetCarry(0).СчетДебета,  документ.GetCarry(i).СчетДебета  );
    CreditAccount = IfThenElse( isCredit, документ.GetCarry(i).СчетКредита, документ.GetCarry(0).СчетКредита );

    GetINNandNameClient(DebetAccount,  PayName, PayINN);
    GetINNandNameClient(CreditAccount, RecName, RecINN);

    GetCorAcc( PayIDOwnerBIC, PayBankCorAcc );
    GetCorAcc( RecIDOwnerBIC, RecBankCorAcc );
 
    документ.GetCarry(i).GetAmountsAndFIID(DebetAmount, CreditAmount, DebetFIID, CreditFIID); 
    PrintDoc(ShortName,
             "",
             документ.Номер + "/" + string( i + 1 ),
             pr_pmpaym.rec.ValueDate,
             DebetAmount,
             CreditAmount,
             PayINN,
             PayName,
             DebetAccount,
             PayBankName,
             PayBankBIC,
             PayBankCorAcc,
             RecBankName,
             RecBankBIC,
             RecBankCorAcc,
             RecINN,
             CreditAccount,
             RecName,
             "09",
             документ.GetCarry(i).Основание,
             DebetFIID,
             CreditFIID
            );
  i = i + 1;
  end;
END;
