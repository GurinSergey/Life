/*
 *    RS-Bank 5.1
 *
 *    Контроль противодействия легализации доходов, полученных
 *    преступным путем
 *
 *
 */

Import BankInter, FMInter, PTInter, FIInter, CTInter, "fm_out_util", "globals.mac";
import "fg_Life_parm.mac"; //Lavrenov 26.10.11

/*
 *    Настройки
 */

/* Код терр. учреждения по ОКАТО */
private var KTU : string;

/* Коды нашего банка */
private var BANK_INN : string;
private var REGN     : string;
private var NUMBF_S  : string;


/* Контактный телевон ответственного исполнителя */
private var TEL : string;

/* Путь к эталонному транспортному файлу */
private var DIR_ORIG : string;

/* Название транспортного файла */
private var OutFileName : string;

private var OutFileType : string;

private record OpContr("opcontr.dbt" );

private var fgBank;


private macro FormatDate(dt:date)
  var day, mon, year;
  var str = "";   

  DateSplit ( dt, day, mon, year );
  str = string(day:2:o)+"."+ string(mon:2:o)+"."+ substr(string(year:4:0),3,2) ;
  return str;
end;

/*
 * Определить тип транспортного файла,
 * в который необходимо выгрузить данную операцию
 */
private macro DefineFileType( Repeat )
    
  if((OpContr.Type == FM_OPER_TYPE_REJ_ACC) OR (OpContr.Type == FM_OPER_TYPE_REJ_OPR))
    if( Repeat )
      return "b"; /* передача скорректированного файла */
    else
      return "a";
    end;
  else
    if( Repeat )
      return "1"; /* передача скорректированного файла */
    elif( (OpContr.Terror != 0) and (OpContr.Action == _FM_ACTION_ADD_NEW) )
      return "5"; /* передача сведений о терроризме */
    end;

    return "0";
  end;
end;


/*
 * Сформировать название файла выгрузки
 * Возвращаемое значение: название файла
 */
private macro CreateOutFileName( Date_Seance, Seance, Repeat, FileKind )
  
  var day, mon, year, fname, ext;
  var OutFileName;

  var error;
  /* вид кода филиала */
  var BankID, DprtCodeParty, DprtCodeKind;

  OutFileType = DefineFileType( Repeat );

  DateSplit( Date_Seance, day , mon, year );

  /* имя файла для КФМ*/
  if( FileKind == 0 )
    fname = SubStr( {MFO_Bank}, 5, 5 ) + string(OutFileType);
    if( day < 10 ) 
       fname = fname + "0" ;
    end;
    fname = fname + String(day);
    
    /* расширение */
    ext = "";
    if( Seance < 10 ) 
       ext =  "0";
    end;

    if((OpContr.Type == FM_OPER_TYPE_REJ_ACC) OR (OpContr.Type == FM_OPER_TYPE_REJ_OPR))
      ext = ext + Seance + "0" ;
    else
      ext = ext + Seance + "1" ;
    end;
  end;

  /* имя файла для ВФ*/
  if( FileKind == 1 )
    
    BankID = CB_GetDprtPartyID( OpContr.Department );   

    GetRegistryValue( "COMMON\\КАТЕГОРИИ СРЕДСТВ\\ВИД_КОДА_ФИЛИАЛА", V_INTEGER, DprtCodeKind, error );    

    if(error == 0)
      DprtCodeParty = ПолучитьКодСубъекта( BankID, DprtCodeKind, error );
    else
      msgbox("Ошибка получения кода субъекта"); 
      exit;   
    end;

    if( DprtCodeParty == "" )
      msgbox("Код субъекта не определен");
      exit;
    end;

    fname = SubStr( DprtCodeParty, StrLen(DprtCodeParty) - 3 ) + string(OutFileType);
    /*fname = DprtCodeParty + string(OutFileType);*/

    if( day < 10 ) 
       fname = fname + "0" ;
    end;
    fname = fname + String( day );

    if( mon < 10 ) 
       fname = fname + "0" ;
    end;
    fname = fname + String( mon );

    fname = fname + SubStr( String( year ), 3 );
    
    /* расширение */
    ext = "";
    if( Seance < 10 ) 
       ext =  "0";
    end;
    
    if(OpContr.Type == FM_OPER_TYPE_REJ_ACC) 
      ext = ext + Seance + "0" ;
    elif(OpContr.Type == FM_OPER_TYPE_REJ_OPR)
      ext = ext + Seance + "2" ;
    else
      ext = ext + Seance + "1" ;
    end;

  end; 


  /* формируем файл */
  OutFileName = MergeFile( FM_GetOutDir(), fname, ext );
  
  return OutFileName;

end;

/* Подкорректировать незаполненные поля в транспортном файле */
private macro CorrectTransportFile(TranspFile)

  var i = 0;

  while( i < FldNumber(TranspFile) )

    if( (ValType(TranspFile(i)) == V_STRING) and ((Trim(TranspFile(i)) == "") or (Trim(TranspFile(i) ) == ",")) )
         
      TranspFile(i) = "0";
      
    elif( (ValType(TranspFile(i)) == V_DATE ) and (TranspFile(i) == Date(0,0,0)) )
         
      TranspFile(i) = Date(1, 1, 2099) ;
      
    end;

    i = i + 1;

  end;

end;


/* Макрофункция вызывается в начале выгрузки
 *
 *   Возвращаемые значения:
 *      0 - продолжить выгрузку
 *  not 0 - остановить выгрузку
 *
 */
macro OutStart()
  /* определим код территориального учреждения по ОКАТО */
  KTU = FM_GetKTU();
  if( Trim(KTU) == "" )
    msgbox( "Не определен код территории учреждения по ОКАТО" );
    return 1;
  end;
  
  BANK_INN = GetCodeParty( {OurBank}, PTCK_INN );

  ПолучитьНомерРегистрацииБанка( @REGN, @NUMBF_S );

  return 0;

end;


/* Макрофункция вызывается по завершении выгрузки
 *
 *   Возвращаемое значение не анализируется
 *
 */
macro OutFinish()
end;



private macro OutToDBF_LG( Date_Seance, Seance, First, Repeat, FileKind )

   record OpContrParty( "opcntrpt.dbt" );
   var VOmain, NOmain;
   var VO, Priz6001;
   
   var PRIM  : string;
   var DESCR : string;

   var errCode, v_branch = 0, v_ktu_s = "", v_bik_s = "", v_numbf_s = 0;

   var BankID;

   file SampleFile("fz115.dbf") dbf;
   file TranspFile("fz115.dbf") dbf write;

   file FI( "fininstr.dbt" );

   if( not Open(SampleFile, DIR_ORIG) )
     MsgBox( "Невозможно открыть эталонный файл " + DIR_ORIG + ", заданный в настройках подсистемы" );
     return 1;
   end;

   
   if( First ) /* если выгрузка первой записи - создаем файл */
     
     OutFileName = CreateOutFileName( Date_Seance, Seance, Repeat, FileKind );

     if( not clone(SampleFile, OutFileName) )
       MsgBox( "Невозможно создать файл выгрузки " + OutFileName );
       return 1;
     end;

   else

     if( OutFileType != DefineFileType(Repeat) )
       return -1;
     end;

   end;

   if( not open(TranspFile, OutFileName) )
     MsgBox( "Невозможно открыть файл выгрузки " + OutFileName );
     return 1;
   end;

   
   ПолучитьКодыОперации( OpContr, VO, Priz6001 );

   ПолучитьКодыОперации( OpContr, VOmain, NOmain, true );

   ClearRecord( TranspFile );

   /* Служебная информация */
   TranspFile.VERSION    = "2";
   TranspFile.ACTION     = OpContr.Action;
   TranspFile.NUMB_P     = OpContr.Numb_P;
   TranspFile.DATE_P     = OpContr.Date_P;
   TranspFile.DATE_S     = OpContr.DateReveal;
   TranspFile.TEL        = GetPhoneNumber(OpContr.Executer);
   TranspFile.REFER_R2   = "0";

   /* Информация о кредитной организации */
   TranspFile.REGN       = REGN;
   TranspFile.ND_KO      = BANK_INN;
   TranspFile.KTU_S      = KTU;
   TranspFile.BIK_S      = {MFO_Bank};
   TranspFile.NUMBF_S    = NUMBF_S;
   
   if( OpContr.Department != {OperDprt} )

     /* операция является экспортированной */

     BankID = CB_GetDprtPartyID( OpContr.Department );
     
     TranspFile.BRANCH = 1;
     
     TranspFile.KTU_SS = FM_GetKTU( OpContr.Department );
     
     TranspFile.BIK_SS = GetCodeParty( BankID, PTCK_BIC );
     
     ПолучитьНомерРегистрацииБанка( null, TranspFile.NUMBF_SS, BankID );

   end;

    //Lavrenov: 26.10.11

    fgBank = fg_life_subject({OurBank});
    if ( fgBank.is_EXV ) 
        // Lavrenov: I-00035745 
        // Для филиалов ЭВ проверяем заполнены ли значения реестра: 
        //   - PRBB\FM\BRANCH
        //   - PRBB\FM\KTU_S
        //   - PRBB\FM\BIK_S
        //   - PRBB\FM\NUMBF_S

        GetRegistryValue("PRBB\\FM\\BRANCH", V_STRING, v_branch, errCode);
        if ( errCode > 0 )
            msgbox("Проверьте наличие настройки \"PRBB\\FM\\BRANCH\"");
        else
            if (v_branch != 0)
                TranspFile.BRANCH = v_branch;

                GetRegistryValue("PRBB\\FM\\ktu_s", V_STRING, v_ktu_s, errCode);
                if ( errCode > 0 )
                    msgbox("Проверьте наличие настройки \"PRBB\\FM\\ktu_s\"");
                else   
                    TranspFile.KTU_SS = TranspFile.KTU_S;
                    TranspFile.KTU_S = v_ktu_s;
                end;

                GetRegistryValue("PRBB\\FM\\bik_s", V_STRING, v_bik_s, errCode);
                if ( errCode > 0 )
                    msgbox("Проверьте наличие настройки \"PRBB\\FM\\bik_s\"");
                else   
                    TranspFile.BIK_SS = TranspFile.BIK_S;
                    TranspFile.BIK_S = v_bik_s;
                end;

                GetRegistryValue("PRBB\\FM\\numbf_s", V_STRING, v_numbf_s, errCode);
                if ( errCode > 0 )
                    msgbox("Проверьте наличие настройки \"PRBB\\FM\\numbf_s\"");
                else   
                    TranspFile.NUMBF_SS = TranspFile.NUMBF_S;
                    TranspFile.NUMBF_S = v_numbf_s;
                end;
            end;
        end;
    end;


   /* Информация об операции */
   TranspFile.TERROR = OpContr.Terror;
   TranspFile.VO     = GetVO( VOmain, VO );
   TranspFile.DOP_V  = GetDOP_V( TranspFile.VO, VO );
   TranspFile.DATA   = OpContr.Date_Carry;
   TranspFile.SUME   = Double(OpContr.SumRub);
   TranspFile.SUM    = Double(OpContr.SumCur);

   FI.FIID = OpContr.Code_Currency;
   if( not GetEQ(FI) )
     MsgBox( "Не найден финансовый инструмент FIID = " + FI.FIID );
     return 1;
   end;
   
   if(FI.ISO_Number == "810")
      TranspFile.CURREN = "643";
   else
      TranspFile.CURREN = FI.ISO_Number;
   end;

   if( OpContr.Metal )

     if( OpContr.Metal == -1 )
       TranspFile.METAL = "000";
     else

       FI.FIID = OpContr.Metal;
       if( not GetEQ(FI) )
         MsgBox( "Не найден финансовый инструмент FIID = " + FI.FIID );
         return 1;
       end;
       TranspFile.METAL = FI.FI_Code;

     end;

   end;

   PRIM = OpContr.Ground;

   TranspFile.PRIM_1 = SubString( @PRIM, 254 );
   TranspFile.PRIM_2 = SubString( @PRIM, 254 );

   TranspFile.DATE_PAY_D = OpContr.PaymDocDate;

   GetPaymDocNumber( OpContr.PaymDocNumber, @TranspFile.NUM_PAY_D, @TranspFile.REFER_R2 );

   TranspFile.PRIZ6001 = GetPRIZ6001( PRIZ6001, VO, NOmain );
   TranspFile.B_PAYER  = OpContr.PayerBankSign;
   TranspFile.B_RECIP  = OpContr.ReceiverBankSign;
   TranspFile.PART     = OpContr.OprByOrderSign;

   DESCR = readNoteForObject( OBJTYPE_OPCONTR, MakeOpContrID(OpContr.OperationID), NOTEKIND_DESCR );

   TranspFile.DESCR_1 = SubString( @DESCR, 254 );
   TranspFile.DESCR_2 = SubString( @DESCR, 254 );

   TranspFile.SUM_CON = 0;

   if( OpContr.ConvOprCurrency != ALLFININSTR )
     
     FI.FIID = OpContr.ConvOprCurrency;
     if( not GetEQ(FI) )
       MsgBox( "Не найден финансовый инструмент FIID = " + FI.FIID );
       return 1;
     end;
   
     TranspFile.CURREN_CON = FI.ISO_Number;
     TranspFile.SUM_CON    = OpContr.ConvOprSum;

   end;

   TranspFile.PRIZ_SD = OpContr.MoneySign;
   
   /* Заполняем информацию об участниках */
   
   /* Плательщик */
   ПолучитьУчастникаОперации( OpContrParty, OpContr, _FM_PARTY_PAYER );

   
   ЗаполнитьОсновнуюИнформацию(
                                 OpContrParty
                                ,VO
                                ,@TranspFile.TU0      
                                ,@TranspFile.PRU0     
                                ,@TranspFile.NAMEU0   
                                ,@TranspFile.KODCR0   
                                ,@TranspFile.KODCN0   
                                ,@TranspFile.AMR_S0   
                                ,@TranspFile.AMR_R0   
                                ,@TranspFile.AMR_G0   
                                ,@TranspFile.AMR_U0   
                                ,@TranspFile.AMR_D0   
                                ,@TranspFile.AMR_K0   
                                ,@TranspFile.AMR_O0   
                                ,@TranspFile.ADRESS_S0
                                ,@TranspFile.ADRESS_R0
                                ,@TranspFile.ADRESS_G0
                                ,@TranspFile.ADRESS_U0
                                ,@TranspFile.ADRESS_D0
                                ,@TranspFile.ADRESS_K0
                                ,@TranspFile.ADRESS_O0
                                ,@TranspFile.KD0      
                                ,@TranspFile.SD0      
                                ,@TranspFile.RG0      
                                ,@TranspFile.ND0      
                                ,@TranspFile.VD01     
                                ,@TranspFile.VD02     
                                ,@TranspFile.VD03     
                                ,@TranspFile.VD04     
                                ,@TranspFile.VD05     
                                ,@TranspFile.VD06     
                                ,@TranspFile.VD07     
                                ,@TranspFile.MC_01    
                                ,@TranspFile.MC_02    
                                ,@TranspFile.MC_03    
                                ,@TranspFile.GR0      
                                ,@TranspFile.BP_0      
                              );
   
   
   ЗаполнитьИнформациюОБанках( OpContrParty
                              ,@TranspFile.VP_0       
                              ,@TranspFile.ACC_B0    
                              ,@TranspFile.ACC_COR_B0
                              ,@TranspFile.NAME_IS_B0
                              ,@TranspFile.BIK_IS_B0 
                              ,@TranspFile.CARD_B0   
                              ,@TranspFile.NAME_B0   
                              ,@TranspFile.KODCN_B0  
                              ,@TranspFile.BIK_B0    
                              ,@TranspFile.NAME_R0  
                              ,@TranspFile.KODCN_R0  
                              ,@TranspFile.BIK_R0    
                             );
   
   /* Представитель плательщика */
   ПолучитьУчастникаОперации( OpContrParty, OpContr, _FM_PARTY_PAYER_REPRESENT );


   ЗаполнитьОсновнуюИнформацию(
                                 OpContrParty
                                ,VO
                                ,@TranspFile.TU1      
                                ,@TranspFile.PRU1     
                                ,@TranspFile.NAMEU1   
                                ,@TranspFile.KODCR1   
                                ,@TranspFile.KODCN1   
                                ,@TranspFile.AMR_S1   
                                ,@TranspFile.AMR_R1   
                                ,@TranspFile.AMR_G1   
                                ,@TranspFile.AMR_U1   
                                ,@TranspFile.AMR_D1   
                                ,@TranspFile.AMR_K1   
                                ,@TranspFile.AMR_O1   
                                ,@TranspFile.ADRESS_S1
                                ,@TranspFile.ADRESS_R1
                                ,@TranspFile.ADRESS_G1
                                ,@TranspFile.ADRESS_U1
                                ,@TranspFile.ADRESS_D1
                                ,@TranspFile.ADRESS_K1
                                ,@TranspFile.ADRESS_O1
                                ,@TranspFile.KD1
                                ,@TranspFile.SD1      
                                ,@TranspFile.RG1      
                                ,@TranspFile.ND1      
                                ,@TranspFile.VD11     
                                ,@TranspFile.VD12     
                                ,@TranspFile.VD13     
                                ,@TranspFile.VD14     
                                ,@TranspFile.VD15     
                                ,@TranspFile.VD16     
                                ,@TranspFile.VD17     
                                ,@TranspFile.MC_11    
                                ,@TranspFile.MC_12    
                                ,@TranspFile.MC_13    
                                ,@TranspFile.GR1      
                                ,@TranspFile.BP_1      
                              );

   /* Представитель получателя */
   ПолучитьУчастникаОперации( OpContrParty, OpContr, _FM_PARTY_RECEIVER_REPRESENT );

   ЗаполнитьОсновнуюИнформацию(
                                 OpContrParty
                                ,VO
                                ,@TranspFile.TU2      
                                ,@TranspFile.PRU2     
                                ,@TranspFile.NAMEU2   
                                ,@TranspFile.KODCR2   
                                ,@TranspFile.KODCN2   
                                ,@TranspFile.AMR_S2   
                                ,@TranspFile.AMR_R2   
                                ,@TranspFile.AMR_G2   
                                ,@TranspFile.AMR_U2   
                                ,@TranspFile.AMR_D2   
                                ,@TranspFile.AMR_K2   
                                ,@TranspFile.AMR_O2   
                                ,@TranspFile.ADRESS_S2
                                ,@TranspFile.ADRESS_R2
                                ,@TranspFile.ADRESS_G2
                                ,@TranspFile.ADRESS_U2
                                ,@TranspFile.ADRESS_D2
                                ,@TranspFile.ADRESS_K2
                                ,@TranspFile.ADRESS_O2
                                ,@TranspFile.KD2      
                                ,@TranspFile.SD2      
                                ,@TranspFile.RG2      
                                ,@TranspFile.ND2      
                                ,@TranspFile.VD21     
                                ,@TranspFile.VD22     
                                ,@TranspFile.VD23     
                                ,@TranspFile.VD24     
                                ,@TranspFile.VD25     
                                ,@TranspFile.VD26     
                                ,@TranspFile.VD27     
                                ,@TranspFile.MC_21    
                                ,@TranspFile.MC_22    
                                ,@TranspFile.MC_23    
                                ,@TranspFile.GR2      
                                ,@TranspFile.BP_2      
                              );
 
   /* Получатель */
   ПолучитьУчастникаОперации( OpContrParty, OpContr, _FM_PARTY_RECEIVER );

   ЗаполнитьОсновнуюИнформацию(
                                 OpContrParty
                                ,VO
                                ,@TranspFile.TU3      
                                ,@TranspFile.PRU3     
                                ,@TranspFile.NAMEU3   
                                ,@TranspFile.KODCR3   
                                ,@TranspFile.KODCN3   
                                ,@TranspFile.AMR_S3   
                                ,@TranspFile.AMR_R3   
                                ,@TranspFile.AMR_G3   
                                ,@TranspFile.AMR_U3   
                                ,@TranspFile.AMR_D3   
                                ,@TranspFile.AMR_K3   
                                ,@TranspFile.AMR_O3   
                                ,@TranspFile.ADRESS_S3
                                ,@TranspFile.ADRESS_R3
                                ,@TranspFile.ADRESS_G3
                                ,@TranspFile.ADRESS_U3
                                ,@TranspFile.ADRESS_D3
                                ,@TranspFile.ADRESS_K3
                                ,@TranspFile.ADRESS_O3
                                ,@TranspFile.KD3      
                                ,@TranspFile.SD3      
                                ,@TranspFile.RG3      
                                ,@TranspFile.ND3      
                                ,@TranspFile.VD31     
                                ,@TranspFile.VD32     
                                ,@TranspFile.VD33     
                                ,@TranspFile.VD34     
                                ,@TranspFile.VD35     
                                ,@TranspFile.VD36     
                                ,@TranspFile.VD37     
                                ,@TranspFile.MC_31    
                                ,@TranspFile.MC_32    
                                ,@TranspFile.MC_33    
                                ,@TranspFile.GR3      
                                ,@TranspFile.BP_3      
                              );

   ЗаполнитьИнформациюОБанках( OpContrParty
                              ,@TranspFile.VP_3       
                              ,@TranspFile.ACC_B3    
                              ,@TranspFile.ACC_COR_B3
                              ,@TranspFile.NAME_IS_B3
                              ,@TranspFile.BIK_IS_B3 
                              ,@TranspFile.CARD_B3   
                              ,@TranspFile.NAME_B3   
                              ,@TranspFile.KODCN_B3  
                              ,@TranspFile.BIK_B3    
                              ,@TranspFile.NAME_R3  
                              ,@TranspFile.KODCN_R3  
                              ,@TranspFile.BIK_R3    
                             );
   
   /* Лицо, по поручению и от имени которого совершается операция */
   ПолучитьУчастникаОперации( OpContrParty, OpContr, _FM_PARTY_ORDER );

   ЗаполнитьОсновнуюИнформацию(
                                 OpContrParty
                                ,VO
                                ,@TranspFile.TU4      
                                ,@TranspFile.PRU4     
                                ,@TranspFile.NAMEU4   
                                ,@TranspFile.KODCR4   
                                ,@TranspFile.KODCN4   
                                ,@TranspFile.AMR_S4   
                                ,@TranspFile.AMR_R4   
                                ,@TranspFile.AMR_G4   
                                ,@TranspFile.AMR_U4   
                                ,@TranspFile.AMR_D4   
                                ,@TranspFile.AMR_K4   
                                ,@TranspFile.AMR_O4   
                                ,@TranspFile.ADRESS_S4
                                ,@TranspFile.ADRESS_R4
                                ,@TranspFile.ADRESS_G4
                                ,@TranspFile.ADRESS_U4
                                ,@TranspFile.ADRESS_D4
                                ,@TranspFile.ADRESS_K4
                                ,@TranspFile.ADRESS_O4
                                ,@TranspFile.KD4      
                                ,@TranspFile.SD4      
                                ,@TranspFile.RG4      
                                ,@TranspFile.ND4      
                                ,@TranspFile.VD41     
                                ,@TranspFile.VD42     
                                ,@TranspFile.VD43     
                                ,@TranspFile.VD44     
                                ,@TranspFile.VD45     
                                ,@TranspFile.VD46     
                                ,@TranspFile.VD47     
                                ,@TranspFile.MC_41    
                                ,@TranspFile.MC_42    
                                ,@TranspFile.MC_43    
                                ,@TranspFile.GR4      
                                ,@TranspFile.BP_4      
                              );
   
   
   /* Подкорректируем некоторые поля */
   CorrectTransportFile(TranspFile);

   if ( not Insert( TranspFile ) )
      MsgBox( "Ошибка вставки записи в транспортный файл" );
      return 1;
   end;
   
   return 0; /* Запись успешно выгружена */

end;


private macro OutToDBF_ROA( Date_Seance, Seance, First, Repeat, FileKind )

   record OpContrParty( "opcntrpt.dbt" );
   var VOmain, NOmain;
   var VO, Priz6001;
   
   var PRIM  : string;
   var DESCR : string;
   var AMR   : string;
   var VD    : string;
   var PAPER : string;
   var MK    : string;

   var BankID;

   file SampleFile("fz115rej.dbf") dbf;
   file TranspFile("fz115rej.dbf") dbf write;

   file FI( "fininstr.dbt" );

   if( not Open(SampleFile, DIR_ORIG) )
     MsgBox( "Невозможно открыть эталонный файл " + DIR_ORIG + ", заданный в настройках подсистемы" );
     return 1;
   end;

   
   if( First ) /* если выгрузка первой записи - создаем файл */
     
     OutFileName = CreateOutFileName( Date_Seance, Seance, Repeat, FileKind );

     if( not clone(SampleFile, OutFileName) )
       MsgBox( "Невозможно создать файл выгрузки " + OutFileName );
       return 1;
     end;

   else

     if( OutFileType != DefineFileType(Repeat) )
       return -1;
     end;

   end;

   if( not open(TranspFile, OutFileName) )
     MsgBox( "Невозможно открыть файл выгрузки " + OutFileName );
     return 1;
   end;

//   ПолучитьКодыОперации( OpContr, VO, Priz6001 );

//   ПолучитьКодыОперации( OpContr, VOmain, NOmain, true );

   ClearRecord( TranspFile );

   /* Служебная информация */
   TranspFile.VERSION    = "1";
   TranspFile.ACTION     = OpContr.Action;
   TranspFile.NUMB_P     = OpContr.Numb_P;
   TranspFile.DATE_P     = OpContr.Date_P;

   /* Информация о кредитной организации */
   TranspFile.REGN       = REGN;
   TranspFile.KTU_S      = KTU;
   TranspFile.BIK_S      = {MFO_Bank};
   TranspFile.NUMBF_S    = NUMBF_S;
   
   if( OpContr.Department != {OperDprt} )

     /* операция является экспортированной */

     BankID = CB_GetDprtPartyID( OpContr.Department );
     
     TranspFile.BRANCH = 1;
     
     TranspFile.KTU_SS = FM_GetKTU( OpContr.Department );
     
     TranspFile.BIK_SS = GetCodeParty( BankID, PTCK_BIC );
     
     ПолучитьНомерРегистрацииБанка( null, TranspFile.NUMBF_SS, BankID );

   end;

   TranspFile.RESRV_S = "0";

   /* Информация об операции */
   TranspFile.DATA   = OpContr.Date_Carry;
   TranspFile.SUME   = Double(OpContr.SumRub);
   TranspFile.SUM    = Double(OpContr.SumCur);

   if(OpContr.Type == FM_OPER_TYPE_REJ_OPR )
     FI.FIID = OpContr.Code_Currency;
     if( not GetEQ(FI) )
       MsgBox( "Не найден финансовый инструмент FIID = " + FI.FIID );
       return 1;
     end;
     TranspFile.CURREN = FI.ISO_Number;
   end;

   if(OpContr.Type == FM_OPER_TYPE_REJ_OPR )
     PRIM = OpContr.Ground;
   end;

   TranspFile.PRIM = SubString( @PRIM, 254 );

   TranspFile.PART = String(OpContr.RejectCode);

   DESCR = readNoteForObject( OBJTYPE_OPCONTR, MakeOpContrID(OpContr.OperationID), NOTEKIND_DESCR );

   TranspFile.DESCR = SubString( @DESCR, 254 );

   TranspFile.RESRV_P = "0";
   TranspFile.RESRV_PP = "0";

   /* Заполняем информацию об участниках */
   
   if(OpContr.Type == FM_OPER_TYPE_REJ_ACC )
     ПолучитьУчастникаОперации( OpContrParty, OpContr, _FM_PARTY_DEC_ACC_REJ );
   else
     ПолучитьУчастникаОперации( OpContrParty, OpContr, _FM_PARTY_CLN_OPR_REJ );
   end;

   TranspFile.TU = PtTypeToInt( OpContrParty.Type );

   if( Trim(OpContrParty.SuperiorName) == "" )
     TranspFile.NAMEU = Trim(OpContrParty.Name);
   else
     TranspFile.NAMEU = Trim(OpContrParty.Name) + " " + Trim(OpContrParty.SuperiorName);
   end;

   if( (OpContrParty.Type == "Ф") or (OpContrParty.Type == "П") )
   
     TranspFile.KODCR = GetKODC( OpContrParty.szCountryR, OpContrParty.szTerritoryR );

   elif( OpContrParty.Type == "Ю" )

     if( Trim(OpContrParty.SuperiorName) != "" )
       TranspFile.KODCR = GetKODC( OpContrParty.SuperiorCountry, OpContrParty.SuperiorTerritory );
     else
       TranspFile.KODCR = GetKODC( OpContrParty.szCountryR, OpContrParty.szTerritoryR );
     end;
   end;


   if( OpContrParty.Type == "Ю" )

     TranspFile.KODCN = GetKODC( OpContrParty.szCountryP, OpContrParty.szTerritoryP );

   elif( (OpContrParty.Type == "Ф") or (OpContrParty.Type == "П") )

     TranspFile.KODCN = GetKODC( OpContrParty.szCountryP, "00" );

   end;

               
   /* "<Страна (название)>, <Субъект РФ (название)>, <Район (регион)>, <Населенный пункт>, ул. <Улица>, д. <Дом>, [к.<Корпус>], кв. <Квартира>". */
   if( (OpContrParty.Type == "Ю") and (Trim(OpContrParty.SuperiorName) != "") )
       TranspFile.AMR = substr( ПолучитьАдресУчастника(OpContrParty, 3), 1, 254 );
   else
       TranspFile.AMR = substr( ПолучитьАдресУчастника(OpContrParty, 1), 1, 254 );
   end;

   TranspFile.ADRESS = substr( ПолучитьАдресУчастника(OpContrParty, 2), 1, 254 );

   /* KD */
   TranspFile.KD = "0";
   if( (OpContrParty.Type == "Ф") or (OpContrParty.Type == "П") )
     if(OpContrParty.CodeDocum == "21") 
       TranspFile.KD = "01";
     elif(substr(OpContrParty.CodeDocum,1,1) == "2")
       TranspFile.KD = "02";
     elif((substr(OpContrParty.CodeDocum,1,1) == "3") OR (OpContrParty.CodeDocum == "40") OR (OpContrParty.CodeDocum == "99"))
       TranspFile.KD = "03";
     else
       TranspFile.KD = "0";
     end;
   end;

   TranspFile.SD = GetSD( OpContrParty );

   if( OpContrParty.Type == "Ю" )
     TranspFile.RG = OpContrParty.RegNumber;
   else
     TranspFile.RG = StrSubst ( OpContrParty.PaperNumber, " ", "" );
   end;

   TranspFile.ND = OpContrParty.INN;
   
   /* VD */
   VD = "";
   if( (OpContrParty.Type == "П") or (OpContrParty.Type == "Ф") )
     if( OpContrParty.szCountryP == "643" )
       
       if( OpContrParty.Type == "П" )
         VD = VD + OpContrParty.RegNumber + " ";
       end;
       
       // "<наименование документа, удостоверяющего личность>, выдан: <наименование органа, выдавшего удостоверение личности>, дата выдачи: <дата выдачи>
       VD = VD + ПолучитьДокументУчастника(OpContrParty);
       
       if(OpContrParty.PaperIssuer != "" )
         VD = VD + ", выдан: ";
         VD = VD + OpContrParty.PaperIssuer;
       end;

       if(OpContrParty.PaperIssuedDate != date(0,0,0) )
         VD = VD + ", дата выдачи: ";
         VD = VD + string(OpContrParty.PaperIssuedDate:f);
       end;

     else
       
       if(OpContrParty.CodeDocum == "33")
         VD = "1";
       elif(OpContrParty.CodeDocum == "34")
         VD = "2";
       elif(OpContrParty.CodeDocum == "31")
         VD = "3";
       else
         VD = "4";
       end;

       VD = VD + " ";

       // <серия и номер документа слитно, приведенные к верхнему регистру, если не заданы - то '0'> 
       // <пробел><дата начала права пребывания ДД.ММ.ГГ, если не задана - то '00.00.00'><пробел><дата окончания права пребывания ДД.ММ.ГГ, если не задана - то '00.00.00'><пробел>".
       PAPER = StrUpr(OpContrParty.RightVisitDocSeries + OpContrParty.RightVisitDocNumber);
       if(PAPER != "")
         VD = VD + PAPER;
       else
         VD = VD + "0";
       end;
       VD = VD + " ";     

       if(OpContrParty.RightVisitDocDateStart != date(0,0,0))
         VD = VD + FormatDate(OpContrParty.RightVisitDocDateStart);
       else
         VD = VD + "00.00.00";
       end;
       VD = VD + " ";     

       if(OpContrParty.RightVisitDocDateStart != date(0,0,0))
         VD = VD + FormatDate(OpContrParty.RightVisitDocDateEnd);
       else
         VD = VD + "00.00.00";
       end;
       VD = VD + " ";

       if(OpContrParty.Type == "П")
        if(OpContrParty.RegNumber != "")
          VD = VD + OpContrParty.RegNumber; 
        else
          VD = VD + OpContrParty.INN;
        end;
       end;
       // "<наименование документа, удостоверяющего личность>, выдан: <наименование органа, выдавшего удостоверение личности>, дата выдачи: <дата выдачи>
       VD = VD + ПолучитьДокументУчастника(OpContrParty);
       
       if(OpContrParty.PaperIssuer != "" )
         VD = VD + ", выдан: ";
         VD = VD + OpContrParty.PaperIssuer;
       end;

       if(OpContrParty.PaperIssuedDate != date(0,0,0) )
         VD = VD + ", дата выдачи: ";
         VD = VD + string(OpContrParty.PaperIssuedDate:f);
       end;
     end;

   end;

   TranspFile.VD = Trim(VD);
   

   TranspFile.GR = GetGR( OpContrParty );

   /* MC */
   if( ((OpContrParty.Type == "П") or (OpContrParty.Type == "Ф")) and (OpContrParty.szCountryP != "643") )
   
     if(OpContrParty.MigratoryCardNumber == "")
       TranspFile.MK = "0" 
     else
       // "<пробел><номер миграционной карты><пробел>< дата начала срока пребывания ДД.ММ.ГГ> <пробел> <дата окончания срока пребывания ДД.ММ.ГГ >".
       MK = "1 " + OpContrParty.MigratoryCardNumber;
       MK = MK + " ";

       if(OpContrParty.MigratoryCardDateStart != date(0,0,0) )  
         MK = MK + FormatDate(OpContrParty.MigratoryCardDateStart);
       else
         MK = MK + "00.00.00";
       end;

       MK = MK + " ";

       if(OpContrParty.MigratoryCardDateEnd != date(0,0,0) )  
         MK = MK + FormatDate(OpContrParty.MigratoryCardDateEnd);
       else
         MK = MK + "00.00.00";
       end;

       TranspFile.MK = MK;
     end;

   end;

   
   /* Подкорректируем некоторые поля */
   CorrectTransportFile(TranspFile);

   if ( not Insert( TranspFile ) )
      MsgBox( "Ошибка вставки записи в транспортный файл" );
      return 1;
   end;
   
   return 0; /* Запись успешно выгружена */

end;


/*
 *  2. Выгрузка в транспортный файл 
 *
 *   Параметры:
 *      Date_Seance : date     - дата выгрузки
 *      Seance      : integer  - номер сеанса выгрузки
 *      First       : bool     - флаг выгрузки первой записи
 *      Repeat      : bool     - признак выгрузки в случае ошбики структурного контроля первичного файла
 *
 *   Перед вызовом макрофункции заполняются структуры:
 *      OpContr       - запись об операции, подлежащей контролю
 *
 *   Возвращаемые значения:
 *      
 *      0    - запись успешно обработана
 *    < 0    - операция должна быть выгружена другим сеансом
 *    > 0    - прерывание выполнения
 *
 */

macro OutToDBF( Date_Seance, Seance, First, Repeat, FileKind )

  var stat = 0;
  /* определим название файла-эталона */
  if(OpContr.Type == FM_OPER_TYPE_LEGAL)
    DIR_ORIG = FM_GetDirOrigUnloadFile();
  else
    GetRegistryValue( "ФИНМОНИТОРИНГ\\DIR_ORIG_UNLOAD_ROA_FILE", V_STRING, DIR_ORIG, stat );
  end;
   
  if( Trim(DIR_ORIG) == "" )
    msgbox( "В настройках подсистемы не задан эталонный файл выгрузки" );
    return 1;
  end;
  
  if(OpContr.Type == FM_OPER_TYPE_LEGAL) 
    return OutToDBF_LG( Date_Seance, Seance, First, Repeat, FileKind );
  else
    return OutToDBF_ROA( Date_Seance, Seance, First, Repeat, FileKind )
  end ;
end;