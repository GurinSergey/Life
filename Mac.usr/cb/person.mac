/*---------------------------------------------------------------------------\
|                       Файл    person.mac                                   |
|                     Проверка операциониста                                 |
\---------------------------------------------------------------------------*/
/* 
RR 22.08.2012 Добавлена возможность контроля ввода пользователя на наличие совпадений с уже существующими пользователями
*/
// KS 03.12.2013 Перенос пользовательских доработок в 31ю сборку
import  BankInter, "party.mac", cb_SQL;

record Операционист(person);
record СтарыйОперационист(person);


macro PrintHeader()
[┌────────────────────────────────────────────────────────────────────────┐
 │               Проверка на удаление операциониста #####                 │
 │                                                                        │
]
(Операционист.Oper);
end;

macro PrintFooting()
[└───────────────────────────────────────────────────┴────────────────────┘];
end;

macro PrintHeaderAccount()
[├────────────────────────────────────────────────────────────────────────┤
 │                    Рублевые счета операциониста                        │
 ├──────────────┬────────────────────────────┬────────────────────────────┤];
end;

macro PrintHeaderAccountC()
[├──────────────┴────────────────────────────┴────────────────────────────┤
 │                    Валютные счета операциониста                        │
 ├──────────────┬────────────────────────────┬────────────────────────────┤];
end;

macro PrintHeaderClient()
[├──────────────┴────────────────────────────┴────────────────────────────┤
 │                        Клиенты операциониста                           │
 ├───────────────────────────────────────────────────┬────────────────────┤];
end;

macro PrintСчета( rs )
[│ Глава: ##### │ Счет: #################### │ (#)                        │]
(rs.value(0), rs.value(1), rs.value(2));
end;

macro PrintClient( rs )
[│ Код клиента: #################################### │ Вид обслуж: #####  │
]
( rs.value(0), rs.value(1));
end;

/* Вывод отчета */
macro ПоказОтчета(TxtFileName)
  file outfile() txt;

  if(open(outfile, TxtFileName))
    ViewFile(outfile);
    close(outfile);
  end;
end;

/* Проверка операциониста перед удалением */
macro ПроверитьОперационистаПередУдалением()
  var stat = 1;
  var retval = 0;
  var rs : RsdRecordset;
  var SqlString : string;

  PrintHeader();

  /* Проверяем счета */
  PrintHeaderAccount();

  SqlString =             " SELECT t_chapter, t_account, t_open_close ";
  SqlString = SqlString + " FROM daccount_dbt ";
  SqlString = SqlString + " WHERE t_oper = " + String( Операционист.Oper );
  SqlString = SqlString + " ORDER BY t_open_close, t_chapter, t_account; ";
  
  rs = RsdRecordset( SqlString );

  while( rs.moveNext() )
    retval = 1;
    PrintСчета( rs );
  end;

  /* Проверяем клиента */
  PrintHeaderClient();

  SqlString =             " SELECT p.t_code, c.t_servicekind ";
  SqlString = SqlString + " FROM dclient_dbt c ";
  SqlString = SqlString + " JOIN dpartcode_dbt p ";
  SqlString = SqlString + " ON p.t_partyid = c.t_partyid AND p.t_codekind = 1 ";
  SqlString = SqlString + " WHERE c.t_oper = " + String( Операционист.Oper );
  SqlString = SqlString + " ORDER BY p.t_code, c.t_servicekind; ";
  
  rs = RsdRecordset( SqlString );

  while( rs.moveNext() )
    retval = 1;
    PrintClient( rs );
  end;

  PrintFooting();
  
  return retval;
end;


/* Ярмольчук А.Ю. 23.11.2009. Возвращает минимальный незанятый номер в списке операционистов. 
   Если незанятых в списке нет возвращает следующий за текущим максимальным 
*/
macro НайтиСвободныйНомер

  var rs : RsdRecordset;
  var SqlString : string;
  var ret_val;


   SqlString = " SELECT    (NVL ((SELECT MAX (p2.t_oper) ";
   SqlString = SqlString + "                           FROM dperson_dbt p2 ";
   SqlString = SqlString + "                          WHERE p2.t_oper < p1.t_oper), 0) + 1) t_freeoper ";
   SqlString = SqlString + "  FROM dperson_dbt p1 ";
   SqlString = SqlString + " WHERE p1.t_oper - NVL ((SELECT MAX (p2.t_oper) ";
   SqlString = SqlString + "                           FROM dperson_dbt p2 ";
   SqlString = SqlString + "                          WHERE p2.t_oper < p1.t_oper), 0) > 1 ";

   rs = RsdRecordset( SqlString );
   if (rs.movenext)
     ret_val=rs.value ("t_freeoper");
   else
     SqlString = " select (max (t_oper)+1) t_freeoper from dperson_dbt ";
     rs = RsdRecordset( SqlString );
     if (rs.movenext)
        ret_val=rs.value ("t_freeoper");
     else
        ret_val=0;
     end;
   end;

   return int (ret_val);

end;

macro ПроверитьОперациониста(Режим)
  var retval = 0, err;
  var txtDir, TxtFileName;
  var sqwyrt, rCmd, rRS, CutFIO, rnum, rArray = tArray, idx = 0;
  var free_oper_num;
  
  GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR",
                   V_STRING, txtDir, err);
  TxtFileName = txtDir + "\\deloper." + String(UserNumber);
  /* Режимы проверки:
   PT_DEL  - удаление операциониста
   PT_INS  - ввод операциониста
   PT_EDIT - корректировка операциониста
   Возвращаемые значения:
   0 - разрешить операцию
   1 - запретить операцию
  */
  if(Режим == PT_DEL) /* удаление */
    SetOutput(TxtFileName);
    retval = ПроверитьОперационистаПередУдалением();
    SetOutput();
    if(retval)
      ПоказОтчета(TxtFileName);
      if(GetTrue(true, "Удалить операциониста?"))
        retval = 0;
      end;
    end;
  elif(Режим == PT_INS)  /* ввод */
     if (Операционист.oper==0)
        free_oper_num=НайтиСвободныйНомер;
        if (free_oper_num>0)
           if (GetInt (free_oper_num, "Уточните номер нового пользователя:"))
              Операционист.oper=free_oper_num;
           end;
        end;
     end;
     
  //RR Доработка поиска дублей
  debugbreak;
  CutFIO = substr(strlwr(Операционист.name),1,(index(strlwr(Операционист.name), " ")) + 1);
  rArray(idx) = "Игнорировать совпадения";
  idx = idx + 1;
  sqwyrt = "SELECT PRS.T_OPER, PRS.T_NAME, decode(PRS.T_USERBLOCKED,'X', 'закр.','откр.') FROM dperson_dbt prs WHERE SUBSTR (LOWER (PRS.T_NAME), 1) LIKE '"+CutFIO+"%'";
  rRS = rsdRecordSet(sqwyrt);
  while (rRs and rRs.moveNext())
   rArray(idx) = "№ "+rRs.value("T_OPER")+" "+rRs.value("T_NAME")+" "+rrs.value(2);
   idx = idx + 1;
  end;
  
  if (rArray.size != 1)
    rnum = Menu (rArray, "Ожидание выбора", "Найдены следующие совпадения", null, null, 0);
  
    if (rnum != 0)
      return (1);
    end;
    
  end;
  //RR Доработка поиска дублей
  
  elif(Режим == PT_EDIT) /* корректировка */
  end;
  return retval;
end;