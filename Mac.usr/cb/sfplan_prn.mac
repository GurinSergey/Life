/*
Печатная форма "Тарифные планы"
*/
import SfInter, globals, rsd, RsbDataSet, "dlwreps.mac";

/*номер таблицы отчета для одного ТП*/
private var RepTableNum:integer;
/*всего таблиц отчета*/
private var RepTableTotal:integer;
/*всего таблиц в шаблоне*/
private const TemplTableTotal = 2;


private var ComissBmPostfix:integer;
private var AlgBmPostfix:integer;
private var TarifBmPostfix:integer;

private var ServKindTotal:integer;

private var OneTableRowCount:integer;
private var OneTableAlgCount:integer;
private var OneTableTarifCondCount:integer;

private var ComissRowNo:integer;
private var AlgRowNo:integer;
private var TarifCondRowNo:integer;

private const OBJTYPE_SFPLAN = 57;
private const OBJTYPE_DEPARTMENT = 80;
private const OBJTYPE_SFCONTR = 659;

private const OBJTYPE_SFPLANDEP = 0;
private const OBJTYPE_SFCONTRPLAN = 1;

private macro getBranchName( DprtID )
  var BranchName = "";
  var sqlString, rs, cmd;
  var NodeType, ShortName;

  const DPRT_TYPE_FILIAL = 1;  /*филиал*/
  /*const DPRT_TYPE_VSP = 2;*/     /*ВСП*/

  sqlString = " SELECT dep.t_NodeType, p.t_ShortName FROM ddp_dep_dbt dep, dparty_dbt p " + 
              " WHERE dep.t_Code = ? AND dep.t_PartyID = p.t_PartyID ";
  cmd = RSDCommand( sqlString );
  cmd.addParam( "", RSDBP_IN, DprtID );

  rs = RsdRecordset( cmd );
  if( rs.MoveNext() )
    NodeType = rs.value(0);
    ShortName = rs.value(1);
    if( NodeType == DPRT_TYPE_FILIAL )
      BranchName = BranchName + "Филиал ";
    else
      BranchName = BranchName + "ВСП ";
    end;
    BranchName = BranchName + ShortName;
  end;

  return BranchName;
end;

private macro getFeeTypeName( FeeType )
  var Name = "";
  if( FeeType == SF_FEE_TYPE_PERIOD )
    Name = "Периодическая";
  elif( FeeType == SF_FEE_TYPE_SINGLE )
    Name = "Единовременная";
  elif( FeeType == SF_FEE_TYPE_ONCE )
    Name = "Разовая";
  end;

  return Name;
end;

private macro GetActualTarsclID( feeType, comNumber, algKind, algNumber, ObjType, ObjID, SfPlanID )
  
  var tarSclID = 0;

  var sqlString = "";

  if(ObjID == 0)
    sqlString = " SELECT ts.t_ID FROM dsftarscl_dbt ts WHERE ts.t_FeeType = ? AND ts.t_commNumber = ? " +
                " AND ts.t_AlgKind = ? AND ts.t_AlgNumber = ? AND ts.t_ConComID = 0 "
                " ORDER BY ts.t_BeginDate DESC ";
  else
    sqlString = " SELECT ts.t_ID FROM dsftarscl_dbt ts, dsfconcom_dbt com WHERE com.t_ID = t_ConComID AND ts.t_FeeType = ? AND ts.t_commNumber = ? " +
                " AND ts.t_AlgKind = ? AND ts.t_AlgNumber = ? AND com.t_ObjectType = ? AND com.t_ObjectID = ? "
                " AND com.t_SfPlanID = ? ORDER BY ts.t_BeginDate DESC ";
  end;

  var cmd = RSDCommand( sqlString );
  cmd.addParam( "", RSDBP_IN, feeType );
  cmd.addParam( "", RSDBP_IN, comNumber );
  cmd.addParam( "", RSDBP_IN, algKind );
  cmd.addParam( "", RSDBP_IN, algNumber );

  if(ObjID != 0)
    cmd.addParam( "", RSDBP_IN, ObjType );
    cmd.addParam( "", RSDBP_IN, ObjID );
    cmd.addParam( "", RSDBP_IN, SfPlanID );
  end;

  var rs = RsdRecordset( cmd );
  if( rs.MoveNext() )
    tarSclID = rs.value(0);
  end;

  return tarSclID;
end;

private macro GetTarsclID( ObjType, feeType, comNumber, algKind, algNumber, SfPlanID, Dprt, SfContrID )

  var tarSclID = 0;

  if( ObjType == OBJTYPE_SFCONTRPLAN )
    tarSclID = GetActualTarsclID( feeType, comNumber, algKind, algNumber, OBJTYPE_SFCONTR, SfContrID, SfPlanID );
  end;

  if( tarSclID == 0 )
    tarSclID = GetActualTarsclID( feeType, comNumber, algKind, algNumber, OBJTYPE_DEPARTMENT, Dprt, SfPlanID );
  end;

  if( tarSclID == 0 )
    tarSclID = GetActualTarsclID( feeType, comNumber, algKind, algNumber, OBJTYPE_SFPLAN, SfPlanID, 0 );
  end;

  if( tarSclID == 0 )
    tarSclID = GetActualTarsclID( feeType, comNumber, algKind, algNumber, 0, 0, 0 );
  end;

  return tarSclID;

end;

private macro UpdateTableBmNames(tabNo, rowNo, incr)
  
  [~NewBmNamesForTable];
  println(tabNo);
  println(rowNo);
  println(incr);
 
end;

private macro PrintRep_TarifCond( ObjType, feeType, comNumber, algKind, algNumber, SfPlanID, Dprt, SfContrID, CondCurrency )
  var sqlString, rs, cmd;
  var Condition = "", Tarif = "", MinValue = "", MaxValue = "";
  var TarifType;

  const SF_TARIFFTYPE_SUM      = 1; /*Сумма*/
  const SF_TARIFFTYPE_PERC     = 2; /*%*/
  const SF_TARIFFTYPE_SUMONE   = 3; /*Сумма за единицу*/

  var tarsclID = GetTarsclID( ObjType, feeType, comNumber, algKind, algNumber, SfPlanID, Dprt, SfContrID );

  sqlString = " SELECT " +
     " (SELECT t_szNameAlg FROM dnamealg_dbt WHERE t_iTypeAlg = 2362 AND t_iNumberAlg = tar.t_BaseType) AS baseType, " +
     " (SELECT t_szNameAlg FROM dnamealg_dbt WHERE t_iTypeAlg = 2361 AND t_iNumberAlg = tar.t_Sign) AS condSign, " +
     " tar.t_BaseSum, tar.t_TarifType, tar.t_TarifSum, tar.t_MinValue, tar.t_MaxValue FROM dsftarif_dbt tar " +
     " WHERE tar.t_tarsclID = ? ";
  cmd = RSDCommand( sqlString );  
  cmd.addParam( "", RSDBP_IN, tarsclID );

  rs = RsdRecordset( cmd );
  while( rs.MoveNext() )
    OneTableTarifCondCount = OneTableTarifCondCount + 1;
    TarifBmPostfix = TarifBmPostfix  + 1;

    if( OneTableTarifCondCount > 1 )
      [~MultipleRow]; /*вид алгоритма*/
      println(RepTableNum);
      println(1);
      println();
      println(TarifCondRowNo);
      println(1);

      OneTableRowCount = OneTableRowCount + 1;
      TarifCondRowNo = OneTableRowCount;
    end;

    Condition = rs.value(0) + " " + rs.value(1)  + " " + rs.value(2);
    println( "~SfPlan_Condition_" + TarifBmPostfix );
    println( Condition );

    Tariftype = rs.value(3);    
    if( TarifType == SF_TARIFFTYPE_SUM )
      Tarif = money( rs.value(4) )/10000;
      Tarif = Tarif + " " + CondCurrency;
    elif( TarifType == SF_TARIFFTYPE_PERC )
      Tarif = double(rs.value(4))/10000;
      Tarif = Tarif + "%"
    elif( TarifType == SF_TARIFFTYPE_SUMONE)
      Tarif = money( rs.value(4) )/10000;
      Tarif = Tarif + " " + CondCurrency + "/Ед.";
    end;
     
    println( "~SfPlan_Tarif_" + TarifBmPostfix );
    println( Tarif );

    MinValue = "Мин. " + money(rs.value(5))/10000;
    println( "~SfPlan_Min_" + TarifBmPostfix );
    println(  MinValue );

    MaxValue = "Макс. " + money(rs.value(6))/10000;
    println( "~SfPlan_Max_" + TarifBmPostfix );
    println( MaxValue );

  end;
    
end;

private macro PrintRep_Algorithms( ObjType, ServKind, feeType, comNumber, SfPlanID, Dprt, SfContrID )
  var sqlQuery, rs, recCount, incr, stat;
  var CondCurrency = "";

  var cmd = RsdCommand;
  
  sqlQuery = RSDCommand(" SELECT " +
    " alg.t_Name, " +
    " NVL((SELECT t_szNameAlg FROM dnamealg_dbt WHERE t_iTypeAlg = 2364 AND t_iNumberAlg = alg.t_Kind),0) AS algName, " +
    " NVL((SELECT t_CCY FROM dfininstr_dbt WHERE t_FIID = alg.t_FIID_Tarscl),0) AS FIID_CCY, " +
    " alg.t_Kind, alg.t_Number, alg.t_FIID_Tarscl FROM dsfcalcal_dbt alg " +
    " WHERE alg.t_feeType = ? AND alg.t_CommNumber = ? AND alg.t_ConComID = 0 "
    " ORDER BY alg.t_Kind, alg.t_Number");
  
  sqlQuery.addParam( "", RSDBP_IN, feeType );
  sqlQuery.addParam( "", RSDBP_IN, comNumber );
  sqlQuery.execute();

  rs = TRsbDataSet( sqlQuery, RSDVAL_CLIENT, RSDVAL_STATIC );
  rs.MoveLast();
  recCount = rs.GetRecCount();
  
  if( recCount > 0 )
    stat = rs.MoveFirst();

    while( stat )      
      
      AlgBmPostfix = AlgBmPostfix + 1;
      OneTableAlgCount = OneTableAlgCount + 1;

      if( OneTableAlgCount > 1 )      
        [~MultipleRow]; /*вид алгоритма*/
        println(RepTableNum);
        println(1);
        println();
        println(AlgRowNo);
        println(1);

        OneTableRowCount = OneTableRowCount + 1;
        AlgRowNo = OneTableRowCount;
      end;

      println( "~SfPlan_AlgName" + AlgBmPostfix );
      println( rs.value(0) );
      
      println( "~SfPlan_Algorithm" + AlgBmPostfix );
      println( rs.value(1) );

      CondCurrency = rs.value(2);
      println( "~SfPlan_ConditionCurrency" + AlgBmPostfix );
      println( CondCurrency );

      PrintRep_TarifCond( ObjType, feeType, comNumber, rs.value(3), rs.value(4), SfPlanID, Dprt, SfContrID, CondCurrency );
      stat = rs.MoveNext();
    end;
  end;
end;

private macro PrintRepForServKind( ObjType, ServKind, SfPlanID, SfContrID, Dprt, DBegin, DEnd )
  var recCount, stat;
  var feeType, comNumber, incr, recN = 0, strInvdividual = "";
debugbreak;
  var cmd = RsdCommand;
  
  if( ObjType == OBJTYPE_SFPLANDEP )
    cmd.CmdText = 
       " SELECT com.t_Code, com.t_Name, com.t_FeeType, com.t_Number, " + 
       " NVL(concom2.t_IsIndividual, chr(0)) As IsInd, " +
       " NVL(concom2.t_SumMin,concom.t_SumMin) As sumMin, " + 
       " NVL(concom2.t_SumMax, concom.t_SumMax) As sumMax " +
       " FROM dsfcomiss_dbt com, dsfconcom_dbt concom, dsfconcom_dbt concom2 " +
       " WHERE com.t_ServiceKind = ? AND com.t_FeeType = concom.t_FeeType AND com.t_Number = concom.t_CommNumber " +
       " AND concom.t_ObjectType = ? AND concom.t_ObjectID = ? " +
       " AND concom2.t_feeType(+) = concom.t_feeType AND concom2.t_CommNumber(+) = concom.t_CommNumber " +
       " AND concom2.t_ObjectType(+) = ? AND concom2.t_ObjectID(+) = ? AND concom2.t_SfPlanID(+) = concom.t_ObjectID " +
       " ORDER BY com.t_FeeType, com.t_Code, com.t_Number"; 

    cmd.addParam( "", RSDBP_IN, ServKind );
    cmd.addParam( "", RSDBP_IN, OBJTYPE_SFPLAN );
    cmd.addParam( "", RSDBP_IN, SfPlanID );
    cmd.addParam( "", RSDBP_IN, OBJTYPE_DEPARTMENT );
    cmd.addParam( "", RSDBP_IN, Dprt );

  elif( ObjType == OBJTYPE_SFCONTRPLAN )
    cmd.CmdText = 
       " SELECT com.t_Code, com.t_Name, com.t_FeeType, com.t_Number, " + 
       " concom.t_IsIndividual, concom.t_SumMin, concom.t_SumMax " +
       " FROM dsfcomiss_dbt com, dsfconcom_dbt concom " +
       " WHERE com.t_ServiceKind = ? AND com.t_FeeType = concom.t_FeeType AND com.t_Number = concom.t_CommNumber " +
       " AND concom.t_ObjectType = ? AND concom.t_ObjectID = ? AND concom.t_SfPlanID = ? ";    
    cmd.addParam( "", RSDBP_IN, ServKind );
    cmd.addParam( "", RSDBP_IN, OBJTYPE_SFCONTR );
    cmd.addParam( "", RSDBP_IN, SfContrID );    
    cmd.addParam( "", RSDBP_IN, SfPlanID );

    if( DEnd == date(0,0,0) )
      cmd.CmdText = cmd.CmdText +  " AND concom.t_DateBegin >= ? ";
      cmd.addParam( "", RSDBP_IN, DBegin );
    else
      cmd.CmdText = cmd.CmdText +  " AND (concom.t_DateBegin >= ? AND concom.t_DateEnd <= ?)";
      cmd.addParam( "", RSDBP_IN, DBegin );
      cmd.addParam( "", RSDBP_IN, DEnd );
    end;   

    if( SfPlanID > 0 )
      cmd.CmdText = cmd.CmdText + "  AND concom.t_IsIndividual = chr(88) ";       
    end;

    cmd.CmdText = cmd.CmdText + " ORDER BY com.t_FeeType, com.t_Code, com.t_Number ";
  else
    return false;
  end;
  
  cmd.execute();

  var rs = TRsbDataSet( cmd, RSDVAL_CLIENT, RSDVAL_STATIC );
  rs.MoveLast();
  recCount = rs.GetRecCount();

  if( recCount > 0 )
    stat = rs.MoveFirst();

    while( stat )      
      ComissBmPostfix = ComissBmPostfix + 1;

      recN = recN + 1;
      if( recN > 1 )
        [~MultipleRow]; /*вид комиссии*/
        println(RepTableNum);
        println(1);
        println();
        println(ComissRowNo);
        println(1);

        OneTableRowCount = OneTableRowCount + 1;
        ComissRowNo = OneTableRowCount;
      end;

      feeType = rs.value(2);
      comNumber = rs.value(3);

      println( "~SfPlan_CommissionCode" + ComissBmPostfix );
      println( rs.value(0) );

      println( "~SfPlan_CommissionName" + ComissBmPostfix );
      println( rs.value(1) );

      println( "~SfPlan_ComissionType" + ComissBmPostfix );
      println( getFeeTypeName(feeType) );

      strInvdividual = "";
      println( "~SfPlan_ComissionInd" + ComissBmPostfix );
      if( ObjType == OBJTYPE_SFPLANDEP )        
        if( rs.value(4) == "X" )
          strInvdividual = "Индивидуальная"
        end;
      end;
      println( strInvdividual );

      println( "~SfPlan_ComissionMin" + ComissBmPostfix );
      println( money(rs.value(5)) );

      println( "~SfPlan_ComissionMax" + ComissBmPostfix );
      println( money(rs.value(6)) );

      PrintRep_Algorithms( Objtype, ServKind, feeType, comNumber, SfPlanID, Dprt, SfContrID );
      
      stat = rs.MoveNext();
    end;
  end;
end;


private macro SfPlan_PrintTitle( SfPlanID, Dprt, PlnBegin, PlnEnd )
  
  file sfplan ("sfplan.dbt" );
  var Num = 0, Name = "";
  
  if( SfPlanID == 0 )
    Name = "Индивидуальные условия";
  else
    sfplan.SfPlanID = SfPlanID;
    if( not GetEQ(sfplan) )
      return false;
    else
      Num = sfplan.Num;
      Name = sfplan.Name;
    end;
  end;
  
  [~SfPlan_Num];
  println( Num );

  [~SfPlan_Name];
  println( Name );

  var BranchName = getBranchName( Dprt );
  [~SfPlan_Branch];
  println( BranchName );
    
  [~SfPlan_DtBegin];
  println( PlnBegin );
  
  [~SfPlan_DtEnd];
  println( PlnEnd );

  return true;
end;

private macro InitBmPostfixes( recCount )
  if( recCount > 1 )
    ComissBmPostfix = 1;
    AlgBmPostfix = 1;
    TarifBmPostfix = 1;
  else
    ComissBmPostfix = 0;
    AlgBmPostfix = 0;
    TarifBmPostfix = 0;
  end;
end;

private macro InitTableCounts()
  OneTableRowCount = 3;
  OneTableAlgCount = 0;
  OneTableTarifCondCount = 0;
          
  ComissRowNo = 1;
  AlgRowNo = 2;
  TarifCondRowNo = 3;
end;

macro SfPlanDep_PrintForm_Process( _sfplandep, first )
  
  var sqlQuery, rs, stat, incr;  
  var ServKind, ServKindName = "";   
  
  record sfplandep ("sfplandep.dbt" );
  SetBuff( sfplandep, _sfplandep );  
  
  println("sfplan_prn.dot");
  println("sfplan_prn" + string({oper}) );  

  /*!!! sfplandep.End -> ошибки компиляции*/
  var DateEnd = string( sfplandep(FldIndex(sfplandep, "End")) );

  if( SfPlan_PrintTitle(sfplandep.SfPlanID, sfplandep.Department, sfplandep.Begin, DateEnd) == false )
    return false;
  end;
  
  sqlQuery = RSDCommand( " SELECT t_ServiseKind, t_Name FROM dservkind_dbt WHERE t_ServiseKind " + 
             " IN (SELECT t_ServiseKind FROM dsfplanservkind_dbt WHERE t_SfPlanId = ?)" );
  
  sqlQuery.addParam( "", RSDBP_IN, sfplandep.SfPlanID );
  sqlQuery.execute();

  rs = TRsbDataSet( sqlQuery, RSDVAL_CLIENT, RSDVAL_STATIC );
  rs.MoveLast();

  var recCount = rs.GetRecCount();

  var SkTable = 1, ComTable = 2;  
  
  if( recCount > 0 )
    InitBmPostfixes( recCount );

    ServKindTotal = 1;
    while( ServKindTotal < recCount )

      [~CopyTable];
      println(SkTable);      

      [~CopyTable];
      println(ComTable);      

      ComissBmPostfix = ComissBmPostfix  + 1;
      AlgBmPostfix = AlgBmPostfix + 1;
      TarifBmPostfix = TarifBmPostfix + 1;

      ServKindTotal = ServKindTotal + 1;

      SkTable = SkTable + TemplTableTotal;
      ComTable = ComTable + TemplTableTotal;
      
    end;   
    
    RepTableTotal = 0;
    RepTableNum = 0;
    stat = rs.MoveFirst();
    while( stat )
      RepTableTotal = RepTableTotal + 1;
      RepTableNum = RepTableNum + TemplTableTotal;

      InitTableCounts();

      ServKind = rs.value(0);

      if( ServKindTotal > 1)
        incr = ComissBmPostfix - RepTableTotal + 1;
        UpdateTableBmNames( RepTableNum, 1, incr );
          
        incr = AlgBmPostfix - RepTableTotal + 1;    
        UpdateTableBmNames( RepTableNum, 2, incr );    

        incr = TarifBmPostfix - RepTableTotal + 1;    
        UpdateTableBmNames( RepTableNum, 3, incr );
      end;

      println( "~SfPlan_KindOfService" + RepTableTotal );
      println( rs.value(1) );

      PrintRepForServKind( OBJTYPE_SFPLANDEP, ServKind, sfplandep.SfPlanID, 0, sfplandep.Department );

      stat = rs.MoveNext();
    end;
  end;

end;

macro SfPlanDep_PrintForm_End()  
  DLWREPS_PrintReportFromTagFile( SetOutput (GetTxtFileName ("tmpout")) );  
  SetOutput(NULL, false);
end;

macro SfPlanDep_PrintForm( _sfplandep )

  SfPlanDep_PrintForm_Process( _sfplandep, true );
  SfPlanDep_PrintForm_End();

end;


private macro GetServKindName( ServKind )
  
  var ServKindName = "";

  var cmd = RSDCommand( " SELECT t_Name FROM dservkind_dbt WHERE t_ServiseKind = ? ");
  
  cmd.addParam( "", RSDBP_IN, ServKind );
  cmd.execute();

  var rs = RsdRecordset( cmd );
  if( rs.MoveNext() )
    ServKindName = rs.value(0);
  end;

  return ServKindName;
end;

private macro GetClientShortName( ClientID )
  var ShortName = "";

  var cmd = RSDCommand( " SELECT t_ShortName FROM dparty_dbt WHERE t_PartyID = ? ");
  
  cmd.addParam( "", RSDBP_IN, ClientID );
  cmd.execute();

  var rs = RsdRecordset( cmd );
  if( rs.MoveNext() )
    ShortName = rs.value(0);
  end;

  return ShortName;
end;

macro SfCntrPln_PrintForm( _sfcntrpln )
  
  var sqlQuery, rs, stat, incr;  
  var ServKind, ServKindName = "";   
  
  record sfcntrpln ("sfcontrplan.dbt" );
  SetBuff( sfcntrpln, _sfcntrpln );

  file sfcontr ("sfcontr.dbt" );
  sfcontr.ID = sfcntrpln.SfContrID;
  if( not GetEQ(sfcontr) )
    return false;
  end;
  
  println("sfcntrpln_prn.dot");
  println("sfcntrpln_prn" + string({oper}) );

  [~SfPlan_Title];
  println( "Отличия индивидуального тарифного плана " );

  /*!!! sfplandep.End -> ошибки компиляции*/
  var DateEnd = sfcntrpln(FldIndex(sfcntrpln, "End"));

  if( SfPlan_PrintTitle(sfcntrpln.SfPlanID, sfcontr.Department, sfcntrpln.Begin, DateEnd) == false )
    return false;
  end;

  InitBmPostfixes( 1 );
  RepTableTotal = 1;
  RepTableNum = TemplTableTotal;
  InitTableCounts();  

  println( "~SfPlan_KindOfService" + RepTableTotal );
  println( GetServKindName(sfcontr.ServKind) );

  println( "~SfPlan_Contract" );
  println( sfcontr.Number );

  println( "~SfPlan_ContrDate" );
  println( sfcontr.DateConc );

  println( "~SfPlan_ContrClient" );
  println( GetClientShortName(sfcontr.PartyID) );

  PrintRepForServKind( OBJTYPE_SFCONTRPLAN, sfcontr.ServKind, sfcntrpln.SfPlanID, sfcntrpln.SfContrID, sfcontr.Department,
                       sfcntrpln.Begin, DateEnd );

  SfPlanDep_PrintForm_End();

end;


