/************************************************************************
  RS-Bank V.6

  Заполнение справочника банков из файла bnkseek.dbf
*************************************************************************/

import mfo_lib;

var RecreateTableDBF = false;

macro RunImport( ImportFileDir )

  var ErrText;
  var NotExists : string;
  array TextYN;
  array ButtonYN;
  var Result = 0;
  var rs, cmd, ret_val, CountIMP, CountDPL, CountDLT;
  var err;
  var CloseDeletedBank;

  ButtonYN( 0 ) = " Да ";
  ButtonYN( 1 ) = " Нет ";
  
  /* Переносим данные из dbf в Oracle */
  if( SubStr(ImportFileDir, strlen(ImportFileDir)) != "\\" )
    ImportFileDir = ImportFileDir + "\\";
  end;

  /* 
   * Таблица протокола bnkseek.log, 
   * таблица файла bnkseek.dbf, 
   * таблица файла корректировок korrek.dbf, 
   * таблицы логов ошибок err$_ теперь создаются апргейдом 2ой категории 
   */
  ClearImportTempTable();

  GetRegistryValue("CB\\BNKSIMPORT\\CLOSEDELETEDBANK", V_BOOL, CloseDeletedBank, err, false, {oper});

  /* Таблица bnkseek.dbf теперь создается апгрейдером 2ой категории, поэтому RecreateTableDBF = false*/
  if(not dbf2ora(ImportFileDir + "bnkseek.dbf", "bnkseek_dbf", "Загрузка файла bnkseek.dbf в БД", ErrText, RecreateTableDBF))
    msgbox(ErrText);
    return 1;
  end;

  if(not CheckBnkseekCorrectStruct())
    msgbox("Ошибка: файл " + ImportFileDir + "bnkseek.dbf" + " имеет не поддерживаемую структуру");
    return 1;
  end;

  if(not CheckExistsDprtkindNumber(@NotExists))
    TextYN(0) = "Значения " + NotExists + " поля bnkseek.PZN отсутствует в системном справочнике \"Коды банков\". Продолжить импорт?";
    Result = confwin(TextYN, ButtonYN);
    if(Result == 1)
      return 1;
    end;
  end;

  if(not CheckExistsDprtregNumber(@NotExists))
    TextYN(0) = "Значения " + NotExists + " поля bnkseek.RGN отсутствует в системном справочнике \"Регионы банков\". Продолжить импорт?";
    Result = confwin(TextYN, ButtonYN);
    if(Result == 1)
      return 1;
    end;
  end;
/*
  if(not CheckExistsDprtregInPtreg(@NotExists))
    TextYN(0) = "Регионы " + NotExists + " справочника \"Регионы банка\" отсутствуют в системном справочнике регионов месторасположения субъектов. Продолжить импорт?";
    Result = confwin(TextYN, ButtonYN);
    if(Result == 1)
      return 1;
    end;
  end;
*/
 /* if(RecreateTableDBF)
    SQL_Execute("ALTER PACKAGE rsb_convmfo COMPILE");
  end;
*/
  SQL_Execute("begin dbms_stats.gather_table_stats(ownname=>sys_context('USERENV','SESSION_USER'),tabname=>'BNKSEEK_DBF'); end;", "Сбор статистики...");

  SQL_Execute("begin dbms_stats.gather_table_stats(ownname=>sys_context('USERENV','SESSION_USER'),tabname=>'DOBJCODE_DBT'); end;", "Сбор статистики...");

  ret_val = 0;

  cmd = RsdCommand("begin ? := rsb_convmfo.convmfo_load(" + {oper} + "); end;");

  cmd.addParam("ret_val", V_INTEGER, RSDBP_OUT);

  SQL_Execute(cmd,"Выполняется импорт файла справочника банков ЦБ РФ. Ждите...");

  if (ret_val == 1) 
    msgbox("Закончился диапазон ID субъектов для данного филиала.");
    exit;
  end;

  SetDefaultRegistryValue( "CB\\BNKSIMPORT\\LASTIMPORTFILEINFO", "bnkseek " + date + " " + time + " " + {oper} );

  if(CloseDeletedBank)
    ProcessCloseDeletedBank();
  end;

  //Gurin S. 28.09.2015 R-621154-2 костыль, так как банк не грузит bnkdel.del
  rs = RsdRecordset(" SELECT   do.t_objectid id "
                    "   FROM   dbankdprt_dbt dp, dobjcode_dbt do "
                    "  WHERE       dp.T_REAL = 'ИЗМР' AND DP.T_PARTYID = DO.T_OBJECTID AND dp.T_CONTROLDATE <= trunc(sysdate) + 1 "
                    "          AND DO.T_STATE = 0 AND DO.T_CODEKIND = 3 AND EXISTS (SELECT 1 FROM dobjlink_dbt WHERE to_number(t_objectid) = DO.T_OBJECTID AND T_OBJECTTYPE = 3) ");
  while (rs and rs.movenext())
     RsdCommand("update dobjcode_dbt set t_state = 1, t_bankclosedate = trunc(sysdate) where t_objectid = " + rs.value("id") + " and t_state = 0 and t_objecttype = 3 and t_codekind = 3").execute; 
  end;

  PrintProtocol("файла справочника банков ЦБ РФ", {oper}, ImportFileDir + "bnkseek.dbf");

  return "bnkseek.dbf";

end;
