/*
$Name: mfo_lib.mac
$Module: Ядро ГКБО
$Description: Библиотека функций процедуры импорта справочника банков ЦБ
*/

import globals, dbf2ora, cb_sql, BankInter, rsd, PTInter;

var countLines = 0;

private var _outString;

private Macro _collectOutProc (str)
   if (_outString)
      _outString = _outString + " " + trim (str);
   else
      _outString = trim (str);
      _outString = StrSubst(_outString,"\n","");
   end;
end;

macro CaptureOutput
   _outString = null;
   SetOutHandler (@_collectOutProc);
end;

macro StopCaptureOutput
   var retVal = _outString;
   _outString = null;
   SetOutHandler;
   return retVal;
end;

private macro PrintTableHeader()
[┌──────────┬────────┬─────────┬────────────────────────────────────────────────────┬─────────────────────────────────────────────────────────┐];
[│ Субъект  │ VKEY   │ БИК     │ Наименование банка                                 │ Причина включения в протокол (код:описание)             │];
[├──────────┼────────┼─────────┼────────────────────────────────────────────────────┼─────────────────────────────────────────────────────────┤];
end;

private macro PrintTableFooter()
[└──────────┴────────┴─────────┴────────────────────────────────────────────────────┴─────────────────────────────────────────────────────────┘];
end;

private macro PrintTableLine(bankId, bankText, bankVKey, bankCode, bankName)
  var j;
  array _bankText;
  if(StrLen(bankText) > 0)
    StrSplit(bankText, _bankText, 55, 55, 10);
    j = 0;
    while(StrLen(_bankText(j)) > 0 )
      if(j == 0)
        if(bankId > 0)
[│##########│########│#########│####################################################│#########################################################│]
(bankId, bankVKey, bankCode, bankName, _bankText(j));
      else
[│          │########│#########│####################################################│#########################################################│]
(bankVKey, bankCode, bankName, _bankText(j));
        end;
      else
[│          │        │         │                                                    │#########################################################│]
(_bankText(j));
      end;
      j = j + 1;
    end;
    countLines = countLines + 1;
  end;
end;

private macro PrintTableProtocol1(bankId, bankText, bankVKey, bankCode, bankName)
  if(not countLines)
    PrintTableHeader();
  end;
  PrintTableLine(bankId, bankText, bankVKey, bankCode, bankName);
end;

private macro GetBankTextByOraErr(oraErrTag, oraErrOptyp, oraErrMesg)
  var bankText = "";
  if(index(oraErrTag, "BNKSEEK:010")) bankText = bankText + "ORA10: Редактирование свойств существующего субъекта."; end;
  if(index(oraErrTag, "BNKSEEK:020")) bankText = bankText + "ORA20: Присвоение роли \"Банк\"."; end;
  if(index(oraErrTag, "BNKSEEK:030")) bankText = bankText + "ORA30: Присвоение роли \"Участник БЭСП\"."; end;
  if(index(oraErrTag, "BNKSEEK:040")) bankText = bankText + "ORA40: Изъятие роли \"Участник БЭСП\"."; end;
  if(index(oraErrTag, "BNKSEEK:042")) bankText = bankText + "ORA42: Установка признака категории \"Категория участия в БЭСП\""; end;
  if(index(oraErrTag, "BNKSEEK:043")) bankText = bankText + "ORA43: Закрытие признака категории \"Категория участия в БЭСП\""; end;
  if(index(oraErrTag, "BNKSEEK:044")) bankText = bankText + "ORA44: Установка признака категории \"Отключение от БЭСП\""; end;
  if(index(oraErrTag, "BNKSEEK:045")) bankText = bankText + "ORA45: Закрытие признака категории \"Отключение от БЭСП\""; end;
  if(index(oraErrTag, "BNKSEEK:050")) bankText = bankText + "ORA50: Создание записи bankdprt."; end;
  if(index(oraErrTag, "BNKSEEK:060")) bankText = bankText + "ORA60: Редактирование блока данных банка."; end;
  if(index(oraErrTag, "BNKSEEK:070")) bankText = bankText + "ORA70: Ввод полного наименования по учету ЦБ."; end;
  if(index(oraErrTag, "BNKSEEK:080")) bankText = bankText + "ORA80: Изменение полного наименования по учету ЦБ."; end;
  if(index(oraErrTag, "BNKSEEK:090")) bankText = bankText + "ORA90: Ввод краткого наименования по учету ЦБ."; end;
  if(index(oraErrTag, "BNKSEEK:100")) bankText = bankText + "ORA100: Изменено краткого наименование по учету ЦБ."; end;
  if(index(oraErrTag, "BNKSEEK:110")) bankText = bankText + "ORA110: Изменение юридического адреса субъекта."; end;
  if(index(oraErrTag, "BNKSEEK:120")) bankText = bankText + "ORA120: Ввод юридического адреса субъекта."; end;
  if(index(oraErrTag, "BNKSEEK:130")) bankText = bankText + "ORA130: Закрытие кода вида 3 \"БИК (ЦБ РФ)\"."; end;
  if(index(oraErrTag, "BNKSEEK:140")) bankText = bankText + "ORA140: Установка кода вида 3 \"БИК (ЦБ РФ)\"."; end;
  if(index(oraErrTag, "BNKSEEK:150")) bankText = bankText + "ORA150: Закрытие кода вида 13 \"Рег. номер кред. орг-ции\"."; end;
  if(index(oraErrTag, "BNKSEEK:160")) bankText = bankText + "ORA160: Установка кода вида 13 \"Рег. номер кред. орг-ции\"."; end;
  if(index(oraErrTag, "BNKSEEK:170")) bankText = bankText + "ORA170: Установка связи с банком-правопреемником."; end;
  if(index(oraErrTag, "BNKSEEK:180")) bankText = bankText + "ORA180: Установка флага \"Блокировка\" для банка отсутствующего в импортируемом файле."; end;
  if(index(oraErrTag, "BNKSEEK:190")) bankText = bankText + "ORA190: Установка атрибута \"Не является участником электронных расчетов\" для банка отсутствующего в импортируемом файле."; end;
  if(index(oraErrTag, "BNKSEEK:200")) bankText = bankText + "ORA200: Установка даты закрытия банка"; end;
  if(index(oraErrTag, "KORREK:010" )) bankText = bankText + "ORA510: Закрытие кода вида 3 \"БИК (ЦБ РФ)\"."; end;
  if(index(oraErrTag, "KORREK:020" )) bankText = bankText + "ORA520: Закрытие кода вида 13 \"Рег. номер кред. орг-ции\"."; end;
  if(index(oraErrTag, "KORREK:030" )) bankText = bankText + "ORA530: Редактирование свойств субъекта."; end;
  if(index(oraErrTag, "KORREK:040" )) bankText = bankText + "ORA540: Присвоение роли \"Банк\"."; end;
  if(index(oraErrTag, "KORREK:050" )) bankText = bankText + "ORA550: Присвоение роли \"Участник БЭСП\"."; end;
  if(index(oraErrTag, "KORREK:052" )) bankText = bankText + "ORA552: Установка признака категории \"Категория участия в БЭСП\""; end;
  if(index(oraErrTag, "KORREK:053" )) bankText = bankText + "ORA553: Установка признака категории \"Отключение от БЭСП\""; end;
  if(index(oraErrTag, "KORREK:054" )) bankText = bankText + "ORA554: Закрытие признака категории \"Категория участия в БЭСП\""; end;
  if(index(oraErrTag, "KORREK:055" )) bankText = bankText + "ORA555: Закрытие признака категории \"Отключение от БЭСП\""; end;
  if(index(oraErrTag, "KORREK:056" )) bankText = bankText + "ORA556: Изъятие роли \"Участник БЭСП\"."; end;
  if(index(oraErrTag, "KORREK:060" )) bankText = bankText + "ORA560: Создание записи bankdprt."; end;
  if(index(oraErrTag, "KORREK:070" )) bankText = bankText + "ORA570: Редактирование блока данных банка."; end;
  if(index(oraErrTag, "KORREK:080" )) bankText = bankText + "ORA580: Изменение полного наименования по учету ЦБ."; end;
  if(index(oraErrTag, "KORREK:090" )) bankText = bankText + "ORA590: Ввод полного наименования по учету ЦБ."; end;
  if(index(oraErrTag, "KORREK:100" )) bankText = bankText + "ORA600: Изменено краткого наименование по учету ЦБ."; end;
  if(index(oraErrTag, "KORREK:110" )) bankText = bankText + "ORA610: Ввод краткого наименования по учету ЦБ."; end;
  if(index(oraErrTag, "KORREK:120" )) bankText = bankText + "ORA620: Изменение юридического адреса субъекта."; end;
  if(index(oraErrTag, "KORREK:130" )) bankText = bankText + "ORA630: Ввод юридического адреса субъекта."; end;
  if(index(oraErrTag, "KORREK:140" )) bankText = bankText + "ORA640: Закрытие кода вида 3 \"БИК (ЦБ РФ)\"."; end;
  if(index(oraErrTag, "KORREK:150" )) bankText = bankText + "ORA650: Установка кода вида 3 \"БИК (ЦБ РФ)\"."; end;
  if(index(oraErrTag, "KORREK:160" )) bankText = bankText + "ORA660: Закрытие кода вида 13 \"Рег. номер кред. орг-ции\"."; end;
  if(index(oraErrTag, "KORREK:170" )) bankText = bankText + "ORA670: Установка кода вида 13 \"Рег. номер кред. орг-ции\"."; end;
  if(index(oraErrTag, "KORREK:180" )) bankText = bankText + "ORA680: Установка связи с банком-правопреемником."; end;
  if(index(oraErrTag, "KORREK:190" )) bankText = bankText + "ORA690: Установка флага \"Блокировка\"."; end;
  if(index(oraErrTag, "KORREK:200" )) bankText = bankText + "ORA700: Установка даты закрытия банка"; end;
  if(index(oraErrOptyp, "I")) bankText = bankText + " Ошибка вставки!"  ; end;
  if(index(oraErrOptyp, "U")) bankText = bankText + " Ошибка изменения!"; end;
  if(index(oraErrOptyp, "D")) bankText = bankText + " Ошибка удаления!" ; end;
  bankText = bankText + oraErrMesg;
  return bankText;
end;

private macro PrintTableProtocol2(bankId, oraErrTag, oraErrOptyp, oraErrMesg, bankVKey, bankCode, bankName)
  if(not countLines)
    PrintTableHeader();
  end;
  PrintTableLine(bankId, GetBankTextByOraErr(oraErrTag, oraErrOptyp, oraErrMesg), bankVKey, bankCode, bankName);
end;

macro PrintProtocol(protocolName, oper, filePath)
  var sqlString : string;
  var rs, cmd;
  rs = SQL_ExecuteAndGetRs("SELECT t_name FROM dperson_dbt WHERE t_oper = " + oper);
  rs.MoveNext;
[           Протокол импорта #](protocolName);
[ ];
[Файл: #](filePath);
[Дата: ########## ########](date(), time());
[Пользователь: #### ####################################](oper, rs.value(0));
[ ];
[ ];

  sqlString = "SELECT bsl.t_partyid                                                                " + 
              "      ,bsl.t_text                                                                   " + 
              "      ,NVL(bd.t_vkey, CHR(1))                                                       " + 
              "      ,NVL(oc.t_code, CHR(1))                                                       " + 
              "      ,NVL(pt.t_name, CHR(1))                                                       " + 
              "  FROM bnkseek_log bsl                                                              " + 
              "  FULL JOIN dbankdprt_dbt bd ON (bd.t_partyid = bsl.t_partyid)                      " + 
              "  FULL JOIN dpartcode_dbt oc ON (oc.t_partyid = bsl.t_partyid AND oc.t_codekind = 3)" + 
              "  FULL JOIN dparty_dbt pt ON (pt.t_partyid = bsl.t_partyid)                         " + 
              " WHERE bsl.t_partyid >= 0                                                           " + 
              " ORDER BY bsl.t_partyid, bsl.t_text                                                 " ; 
  cmd = RsdCommand( sqlString );
  cmd.NullConversion = true;
  rs = RsdRecordset( cmd );
  while(rs.moveNext())
    PrintTableProtocol1(int(rs.value(0)), rs.value(1), rs.value(2), rs.value(3), rs.value(4));
  end;

  sqlString = "SELECT t.t_partyid                                                           " + 
              "      ,t.ora_err_tag$                                                        " + 
              "      ,t.ora_err_optyp$                                                      " + 
              "      ,t.ora_err_mesg$                                                       " + 
              "      ,bd.t_vkey                                                             " + 
              "      ,NVL(oc.t_code, CHR(1))                                                  " + 
              "      ,pt.t_name                                                             " + 
              "  FROM err$_dparty_dbt t                                                     " + 
              "  JOIN dbankdprt_dbt bd ON (bd.t_partyid = t.t_partyid)                      " + 
              "  FULL JOIN dpartcode_dbt oc ON (oc.t_partyid = t.t_partyid AND oc.t_codekind = 3)" + 
              "  JOIN dparty_dbt pt ON (pt.t_partyid = t.t_partyid)                         " + 
              " ORDER BY t.t_partyid                                                        " ; 
  cmd = RsdCommand( sqlString );
  cmd.NullConversion = true;
  rs = RsdRecordset( cmd );
  while(rs.moveNext())
    PrintTableProtocol2(int(rs.value(0)), rs.value(1), rs.value(2), rs.value(3), rs.value(4), rs.value(5), rs.value(6));
  end;

  sqlString = "SELECT t.t_partyid                                                           " + 
              "      ,t.ora_err_tag$                                                        " + 
              "      ,t.ora_err_optyp$                                                      " + 
              "      ,t.ora_err_mesg$                                                       " + 
              "      ,bd.t_vkey                                                             " + 
              "      ,NVL(oc.t_code, CHR(1))                                                " + 
              "      ,pt.t_name                                                             " + 
              "  FROM err$_dbankdprt_dbt t                                                  " + 
              "  JOIN dbankdprt_dbt bd ON (bd.t_partyid = t.t_partyid)                      " + 
              "  FULL JOIN dpartcode_dbt oc ON (oc.t_partyid = t.t_partyid AND oc.t_codekind = 3)" + 
              "  JOIN dparty_dbt pt ON (pt.t_partyid = t.t_partyid)                         " + 
              " ORDER BY t.t_partyid                                                        " ; 
  cmd = RsdCommand( sqlString );
  cmd.NullConversion = true;
  rs = RsdRecordset( cmd );
  while(rs.moveNext())
    PrintTableProtocol2(int(rs.value(0)), rs.value(1), rs.value(2), rs.value(3), rs.value(4), rs.value(5), rs.value(6));
  end;

  sqlString = "SELECT t.t_objectid                                                           " + 
              "      ,t.ora_err_tag$                                                         " + 
              "      ,t.ora_err_optyp$                                                       " + 
              "      ,t.ora_err_mesg$                                                        " + 
              "      ,bd.t_vkey                                                              " + 
              "      ,NVL(oc.t_code, CHR(1))                                                 " + 
              "      ,pt.t_name                                                              " + 
              "  FROM err$_dobjcode_dbt t                                                    " + 
              "  JOIN dbankdprt_dbt bd ON (bd.t_partyid = t.t_objectid)                      " + 
              "  FULL JOIN dpartcode_dbt oc ON (oc.t_partyid = t.t_objectid AND oc.t_codekind = 3)" + 
              "  JOIN dparty_dbt pt ON (pt.t_partyid = t.t_objectid)                         " + 
              " ORDER BY t.t_objectid                                                        " ; 
  cmd = RsdCommand( sqlString );
  cmd.NullConversion = true;
  rs = RsdRecordset( cmd );
  while(rs.moveNext())
    PrintTableProtocol2(int(rs.value(0)), rs.value(1), rs.value(2), rs.value(3), rs.value(4), rs.value(5), rs.value(6));
  end;

  sqlString = "SELECT t.t_partyid                                                           " + 
              "      ,t.ora_err_tag$                                                        " + 
              "      ,t.ora_err_optyp$                                                      " + 
              "      ,t.ora_err_mesg$                                                       " + 
              "      ,bd.t_vkey                                                             " + 
              "      ,NVL(oc.t_code, CHR(1))                                                " + 
              "      ,pt.t_name                                                             " + 
              "  FROM err$_dpartyown_dbt t                                                  " + 
              "  JOIN dbankdprt_dbt bd ON (bd.t_partyid = t.t_partyid)                      " + 
              "  FULL JOIN dpartcode_dbt oc ON (oc.t_partyid = t.t_partyid AND oc.t_codekind = 3)" + 
              "  JOIN dparty_dbt pt ON (pt.t_partyid = t.t_partyid)                         " + 
              " ORDER BY t.t_partyid                                                        " ; 
  cmd = RsdCommand( sqlString );
  cmd.NullConversion = true;
  rs = RsdRecordset( cmd );
  while(rs.moveNext())
    PrintTableProtocol2(int(rs.value(0)), rs.value(1), rs.value(2), rs.value(3), rs.value(4), rs.value(5), rs.value(6));
  end;

  sqlString = "SELECT t.t_partyid                                                           " + 
              "      ,t.ora_err_tag$                                                        " + 
              "      ,t.ora_err_optyp$                                                      " + 
              "      ,t.ora_err_mesg$                                                       " + 
              "      ,bd.t_vkey                                                             " + 
              "      ,NVL(oc.t_code, CHR(1))                                                " + 
              "      ,pt.t_name                                                             " + 
              "  FROM err$_dpartyname_dbt t                                                 " + 
              "  JOIN dbankdprt_dbt bd ON (bd.t_partyid = t.t_partyid)                      " + 
              "  FULL JOIN dpartcode_dbt oc ON (oc.t_partyid = t.t_partyid AND oc.t_codekind = 3)" + 
              "  JOIN dparty_dbt pt ON (pt.t_partyid = t.t_partyid)                         " + 
              " ORDER BY t.t_partyid                                                        " ; 
  cmd = RsdCommand( sqlString );
  cmd.NullConversion = true;
  rs = RsdRecordset( cmd );
  while(rs.moveNext())
    PrintTableProtocol2(int(rs.value(0)), rs.value(1), rs.value(2), rs.value(3), rs.value(4), rs.value(5), rs.value(6));
  end;

  sqlString = "SELECT t.t_objectid                                                           " + 
              "      ,t.ora_err_tag$                                                         " + 
              "      ,t.ora_err_optyp$                                                       " + 
              "      ,t.ora_err_mesg$                                                        " + 
              "      ,bd.t_vkey                                                              " + 
              "      ,NVL(oc.t_code, CHR(1))                                                 " + 
              "      ,pt.t_name                                                              " + 
              "  FROM err$_dobjlink_dbt t                                                    " + 
              "  JOIN dbankdprt_dbt bd ON (bd.t_partyid = t.t_objectid)                      " + 
              "  FULL JOIN dpartcode_dbt oc ON (oc.t_partyid = t.t_objectid AND oc.t_codekind = 3)" + 
              "  JOIN dparty_dbt pt ON (pt.t_partyid = t.t_objectid)                         " + 
              " ORDER BY t.t_objectid                                                        " ; 
  cmd = RsdCommand( sqlString );
  cmd.NullConversion = true;
  rs = RsdRecordset( cmd );
  while(rs.moveNext())
    PrintTableProtocol2(int(rs.value(0)), rs.value(1), rs.value(2), rs.value(3), rs.value(4), rs.value(5), rs.value(6));
  end;

  sqlString = "SELECT t.t_partyid                                                           " + 
              "      ,t.ora_err_tag$                                                        " + 
              "      ,t.ora_err_optyp$                                                      " + 
              "      ,t.ora_err_mesg$                                                       " + 
              "      ,bd.t_vkey                                                             " + 
              "      ,NVL(oc.t_code, CHR(1))                                                " + 
              "      ,pt.t_name                                                             " + 
              "  FROM err$_dadress_dbt t                                                    " + 
              "  JOIN dbankdprt_dbt bd ON (bd.t_partyid = t.t_partyid)                      " + 
              "  FULL JOIN dpartcode_dbt oc ON (oc.t_partyid = t.t_partyid AND oc.t_codekind = 3)" + 
              "  JOIN dparty_dbt pt ON (pt.t_partyid = t.t_partyid)                         " + 
              " ORDER BY t.t_partyid                                                        " ; 
  cmd = RsdCommand( sqlString );
  cmd.NullConversion = true;
  rs = RsdRecordset( cmd );
  while(rs.moveNext())
    PrintTableProtocol2(int(rs.value(0)), rs.value(1), rs.value(2), rs.value(3), rs.value(4), rs.value(5), rs.value(6));
  end;

  sqlString = "SELECT TO_NUMBER(t.t_object)                                                           " + 
              "      ,t.ora_err_tag$                                                                  " + 
              "      ,t.ora_err_optyp$                                                                " + 
              "      ,t.ora_err_mesg$                                                                 " + 
              "      ,bd.t_vkey                                                                       " + 
              "      ,NVL(oc.t_code, CHR(1))                                                          " + 
              "      ,pt.t_name                                                                       " + 
              "  FROM err$_dobjatcor_dbt t                                                            " + 
              "  JOIN dbankdprt_dbt bd ON (bd.t_partyid = TO_NUMBER(t.t_object))                      " + 
              "  FULL JOIN dpartcode_dbt oc ON (oc.t_partyid = TO_NUMBER(t.t_object) AND oc.t_codekind = 3)" + 
              "  JOIN dparty_dbt pt ON (pt.t_partyid = TO_NUMBER(t.t_object))                         " + 
              " ORDER BY TO_NUMBER(t.t_object)                                                        " ; 
  cmd = RsdCommand( sqlString );
  cmd.NullConversion = true;
  rs = RsdRecordset( cmd );
  while(rs.moveNext())
    PrintTableProtocol2(int(rs.value(0)), rs.value(1), rs.value(2), rs.value(3), rs.value(4), rs.value(5), rs.value(6));
  end;

  if(countLines)
    PrintTableFooter();
  end;
end;

macro CreateBnkseekDbf()
  SQL_Execute(
      "DECLARE                                            " +
      "  e_object_exists EXCEPTION;                       " +
      "  PRAGMA EXCEPTION_INIT(e_object_exists, -955);    " +
      "BEGIN                                              " +
      "  EXECUTE IMMEDIATE 'CREATE TABLE bnkseek_dbf  ' ||" +
      "                    '(                         ' ||" +
      "                    '  t_vkey     VARCHAR2(8), ' ||" +
      "                    '  t_real     VARCHAR2(4), ' ||" +
      "                    '  t_pzn      VARCHAR2(2), ' ||" +
      "                    '  t_uer      VARCHAR2(1), ' ||" +
      "                    '  t_rgn      VARCHAR2(2), ' ||" +
      "                    '  t_ind      VARCHAR2(6), ' ||" +
      "                    '  t_tnp      VARCHAR2(1), ' ||" +
      "                    '  t_nnp      VARCHAR2(25),' ||" +
      "                    '  t_adr      VARCHAR2(30),' ||" +
      "                    '  t_rkc      VARCHAR2(9), ' ||" +
      "                    '  t_namep    VARCHAR2(45),' ||" +
      "                    '  t_namen    VARCHAR2(30),' ||" +
      "                    '  t_newnum   VARCHAR2(9), ' ||" +
      "                    '  t_newks    VARCHAR2(9), ' ||" +
      "                    '  t_permfo   VARCHAR2(6), ' ||" +
      "                    '  t_srok     VARCHAR2(2), ' ||" +
      "                    '  t_at1      VARCHAR2(7), ' ||" +
      "                    '  t_at2      VARCHAR2(7), ' ||" +
      "                    '  t_telef    VARCHAR2(25),' ||" +
      "                    '  t_regn     VARCHAR2(9), ' ||" +
      "                    '  t_okpo     VARCHAR2(8), ' ||" +
      "                    '  t_dt_izm   DATE,        ' ||" +
      "                    '  t_cks      VARCHAR2(6), ' ||" +
      "                    '  t_ksnp     VARCHAR2(20),' ||" +
      "                    '  t_date_in  DATE,        ' ||" +
      "                    '  t_date_ch  DATE,        ' ||" +
      "                    '  t_vkeydel  VARCHAR2(8), ' ||" +
      "                    '  t_partyid  NUMBER(10)   ' ||" +
      "                    ')                         ';  " +
      "EXCEPTION WHEN e_object_exists THEN NULL;          " +
      "END;                                               ");
end;

macro CreateKorrekDbf()
  SQL_Execute(
      "DECLARE                                            " +
      "  e_object_exists EXCEPTION;                       " +
      "  PRAGMA EXCEPTION_INIT(e_object_exists, -955);    " +
      "BEGIN                                              " +
      "  EXECUTE IMMEDIATE 'CREATE TABLE korrek_dbf   ' ||" +
      "                    '(                         ' ||" +
      "                    '  t_num_     VARCHAR2(9), ' ||" +
      "                    '  t_opr_     FLOAT(53),   ' ||" +
      "                    '  t_dbf_     VARCHAR2(10),' ||" +
      "                    '  t_vkey_    VARCHAR2(8), ' ||" +
      "                    '  t_field_   VARCHAR2(12),' ||" +
      "                    '  t_new_     VARCHAR2(45),' ||" +
      "                    '  t_old_     VARCHAR2(45),' ||" +
      "                    '  t_partyid  NUMBER(10)   ' ||" +
      "                    ')                         ';  " +
      "EXCEPTION WHEN e_object_exists THEN NULL;          " +
      "END;                                               ");
end;

macro CreateBnkseekLog()
  SQL_Execute(
      "DECLARE                                                 " +
      "  e_tab_not_exist EXCEPTION;                            " +
      "  PRAGMA EXCEPTION_INIT(e_tab_not_exist, -942);         " +
      "BEGIN                                                   " +
      "  EXECUTE IMMEDIATE 'DROP TABLE bnkseek_log';           " +
      "  EXECUTE IMMEDIATE 'CREATE TABLE bnkseek_log (         " +
      "                            t_partyid NUMBER(10),       " +
      "                            t_text    VARCHAR2(500))';  " +
      "EXCEPTION WHEN e_tab_not_exist THEN                     " +
      "  EXECUTE IMMEDIATE 'CREATE TABLE bnkseek_log (         " +
      "                            t_partyid NUMBER(10),       " +
      "                            t_text    VARCHAR2(500))';  " +
      "END;                                                    ");
end;

macro CreateOraErrLog()
  SQL_Execute(
      "DECLARE                                                 " +
      "  e_tab_not_exist EXCEPTION;                            " +
      "  PRAGMA EXCEPTION_INIT(e_tab_not_exist, -942);         " +
      "BEGIN                                                   " +
      "  EXECUTE IMMEDIATE 'DROP TABLE err$_dparty_dbt';       " +
      "  dbms_errlog.create_error_log('dparty_dbt');           " +
      "EXCEPTION WHEN e_tab_not_exist THEN                     " +
      "  dbms_errlog.create_error_log('dparty_dbt');           " +
      "END;                                                    ");

  SQL_Execute(
      "DECLARE                                                 " +
      "  e_tab_not_exist EXCEPTION;                            " +
      "  PRAGMA EXCEPTION_INIT(e_tab_not_exist, -942);         " +
      "BEGIN                                                   " +
      "  EXECUTE IMMEDIATE 'DROP TABLE err$_dbankdprt_dbt';    " +
      "  dbms_errlog.create_error_log('dbankdprt_dbt');        " +
      "EXCEPTION WHEN e_tab_not_exist THEN                     " +
      "  dbms_errlog.create_error_log('dbankdprt_dbt');        " +
      "END;                                                    ");

  SQL_Execute(
      "DECLARE                                                 " +
      "  e_tab_not_exist EXCEPTION;                            " +
      "  PRAGMA EXCEPTION_INIT(e_tab_not_exist, -942);         " +
      "BEGIN                                                   " +
      "  EXECUTE IMMEDIATE 'DROP TABLE err$_dobjcode_dbt';     " +
      "  dbms_errlog.create_error_log('dobjcode_dbt');         " +
      "EXCEPTION WHEN e_tab_not_exist THEN                     " +
      "  dbms_errlog.create_error_log('dobjcode_dbt');         " +
      "END;                                                    ");

  SQL_Execute(
      "DECLARE                                                 " +
      "  e_tab_not_exist EXCEPTION;                            " +
      "  PRAGMA EXCEPTION_INIT(e_tab_not_exist, -942);         " +
      "BEGIN                                                   " +
      "  EXECUTE IMMEDIATE 'DROP TABLE err$_dpartyown_dbt';    " +
      "  dbms_errlog.create_error_log('dpartyown_dbt');        " +
      "EXCEPTION WHEN e_tab_not_exist THEN                     " +
      "  dbms_errlog.create_error_log('dpartyown_dbt');        " +
      "END;                                                    ");

  SQL_Execute(
      "DECLARE                                                 " +
      "  e_tab_not_exist EXCEPTION;                            " +
      "  PRAGMA EXCEPTION_INIT(e_tab_not_exist, -942);         " +
      "BEGIN                                                   " +
      "  EXECUTE IMMEDIATE 'DROP TABLE err$_dpartyname_dbt';   " +
      "  dbms_errlog.create_error_log('dpartyname_dbt');       " +
      "EXCEPTION WHEN e_tab_not_exist THEN                     " +
      "  dbms_errlog.create_error_log('dpartyname_dbt');       " +
      "END;                                                    ");

  SQL_Execute(
      "DECLARE                                                 " +
      "  e_tab_not_exist EXCEPTION;                            " +
      "  PRAGMA EXCEPTION_INIT(e_tab_not_exist, -942);         " +
      "BEGIN                                                   " +
      "  EXECUTE IMMEDIATE 'DROP TABLE err$_dobjlink_dbt';     " +
      "  dbms_errlog.create_error_log('dobjlink_dbt');         " +
      "EXCEPTION WHEN e_tab_not_exist THEN                     " +
      "  dbms_errlog.create_error_log('dobjlink_dbt');         " +
      "END;                                                    ");
      
  SQL_Execute(
      "DECLARE                                                 " +
      "  e_tab_not_exist EXCEPTION;                            " +
      "  PRAGMA EXCEPTION_INIT(e_tab_not_exist, -942);         " +
      "BEGIN                                                   " +
      "  EXECUTE IMMEDIATE 'DROP TABLE err$_dadress_dbt';      " +
      "  dbms_errlog.create_error_log('dadress_dbt');          " +
      "EXCEPTION WHEN e_tab_not_exist THEN                     " +
      "  dbms_errlog.create_error_log('dadress_dbt');          " +
      "END;                                                    ");
      
  SQL_Execute(
      "DECLARE                                                 " +
      "  e_tab_not_exist EXCEPTION;                            " +
      "  PRAGMA EXCEPTION_INIT(e_tab_not_exist, -942);         " +
      "BEGIN                                                   " +
      "  EXECUTE IMMEDIATE 'DROP TABLE err$_dobjatcor_dbt';    " +
      "  dbms_errlog.create_error_log('dobjatcor_dbt');        " +
      "EXCEPTION WHEN e_tab_not_exist THEN                     " +
      "  dbms_errlog.create_error_log('dobjatcor_dbt');        " +
      "END;                                                    ");
end;

macro ClearImportTempTable()
  SQL_Execute("TRUNCATE TABLE bnkseek_log");
  SQL_Execute("TRUNCATE TABLE bnkseek_dbf");
  SQL_Execute("TRUNCATE TABLE korrek_dbf");
  SQL_Execute("TRUNCATE TABLE err$_dparty_dbt");
  SQL_Execute("TRUNCATE TABLE err$_dbankdprt_dbt");
  SQL_Execute("TRUNCATE TABLE err$_dobjcode_dbt");
  SQL_Execute("TRUNCATE TABLE err$_dpartyown_dbt");
  SQL_Execute("TRUNCATE TABLE err$_dpartyname_dbt");
  SQL_Execute("TRUNCATE TABLE err$_dobjlink_dbt");
  SQL_Execute("TRUNCATE TABLE err$_dadress_dbt");
  SQL_Execute("TRUNCATE TABLE err$_dobjatcor_dbt");
end;

macro ClearCompareTempTable()
  SQL_Execute("TRUNCATE TABLE bik_swif_log");
  SQL_Execute("TRUNCATE TABLE bik_swif_dbf");
end;

macro CheckBnkseekCorrectStruct()
  var rs;
  rs = RsdRecordset("SELECT      " +
                    "   t_vkey   " +
                    "  ,t_real   " +
                    "  ,t_pzn    " +
                    "  ,t_uer    " +
                    "  ,t_rgn    " +
                    "  ,t_ind    " +
                    "  ,t_tnp    " +
                    "  ,t_nnp    " +
                    "  ,t_adr    " +
                    "  ,t_rkc    " +
                    "  ,t_namep  " +
                    "  ,t_namen  " +
                    "  ,t_newnum " +
                    "  ,t_newks  " +
                    "  ,t_permfo " +
                    "  ,t_srok   " +
                    "  ,t_at1    " +
                    "  ,t_at2    " +
                    "  ,t_telef  " +
                    "  ,t_regn   " +
                    "  ,t_okpo   " +
                    "  ,t_dt_izm " +
                    "  ,t_cks    " +
                    "  ,t_ksnp   " +
                    "  ,t_date_in" +
                    "  ,t_date_ch" +
                    "  ,t_vkeydel" +
                    "  FROM bnkseek_dbf WHERE ROWNUM = 1");
  rs.movenext;
  return true;
  OnError(err);
  return false;
end;

macro CheckBikSwifCorrectStruct()
  var rs;
  rs = RsdRecordset("SELECT           " +
                    "   t_kod_rus     " +
                    "  ,t_kod_swift   " +
                    "  ,t_name_srus   " +
                    "  FROM bik_swif_dbf WHERE ROWNUM = 1");
  rs.movenext;
  return true;
  OnError(err);
  return false;
end;

macro CheckExistsDprtkindNumber(NotExists : @string)
  var rs;
  rs = RsdRecordset("SELECT DISTINCT t_pzn FROM bnkseek_dbf WHERE NOT EXISTS(SELECT 1 FROM ddprtkind_dbt WHERE t_numberkind = t_pzn) ORDER BY t_pzn");
  NotExists = "";
  while(rs.movenext)
    if(NotExists != "")
      NotExists = NotExists + ",";
    end;
    NotExists = NotExists + rs.value(0);
  end;
  if(NotExists != "")
    return false;
  end;
  return true;
end;

macro CheckExistsDprtregNumber(NotExists : @string)
  var rs;
  rs = RsdRecordset("SELECT DISTINCT t_rgn FROM bnkseek_dbf WHERE NOT EXISTS(SELECT 1 FROM ddprtreg_dbt WHERE t_szregion = t_rgn) ORDER BY t_rgn");
  NotExists = "";
  while(rs.movenext)
    if(NotExists != "")
      NotExists = NotExists + ",";
    end;
    NotExists = NotExists + rs.value(0);
  end;
  if(NotExists != "")
    return false;
  end;
  return true;
end;

macro CheckExistsDprtregInPtreg(NotExists : @string)
  var rs;
  rs = RsdRecordset("SELECT DISTINCT dr.t_nameregion                                                                                     " +
                    "  FROM ddprtreg_dbt dr                                                                                              " +
                    " WHERE NOT EXISTS                                                                                                   " +
                    "       (                                                                                                            " +
                    "         SELECT 1                                                                                                   " +
                    "           FROM dptregion_dbt pr                                                                                    " +
                    "          WHERE REPLACE (REPLACE (REPLACE (UPPER (pr.t_nameregion), '  ', ' '||CHR(2)), CHR(2)||' ', ''), CHR(2)) = " +
                    "                REPLACE (REPLACE (REPLACE (UPPER (dr.t_nameregion), '  ', ' '||CHR(2)), CHR(2)||' ', ''), CHR(2))   " +
                    "       )                                                                                                            " +
                    "   AND TRIM(dr.t_szRegion) <> '00'                                                                                  " +
                    " ORDER BY dr.t_nameregion                                                                                           ");
  NotExists = "";
  while(rs.movenext)
    if(NotExists != "")
      NotExists = NotExists + ",";
    end;
    NotExists = NotExists + rs.value(0);
  end;
  if(NotExists != "")
    return false;
  end;
  return true;
end;

macro CheckKorrekCorrectStruct()
  var rs;
  rs = RsdRecordset("SELECT      " +
                    "   t_num_   " +
                    "  ,t_opr_   " +
                    "  ,t_dbf_   " +
                    "  ,t_vkey_  " +
                    "  ,t_field_ " +
                    "  ,t_new_   " +
                    "  ,t_old_   " +
                    "  FROM korrek_dbf WHERE ROWNUM = 1");
  rs.movenext;
  return true;
  OnError(err);
  return false;
end;

macro AlterAddPartyId()
  SQL_Execute(
      "DECLARE                                                                  " +
      "  e_field_exists EXCEPTION;                                              " +
      "  PRAGMA EXCEPTION_INIT(e_field_exists, -1430);                          " +
      "BEGIN                                                                    " +
      "  EXECUTE IMMEDIATE 'ALTER TABLE bnkseek_dbf ADD (t_partyid NUMBER(10))';" +
      "EXCEPTION                                                                " +
      "  WHEN e_field_exists THEN NULL;                                         " +
      "END;                                                                     ");

  SQL_Execute(
      "DECLARE                                                                  " +
      "  e_field_exists EXCEPTION;                                              " +
      "  PRAGMA EXCEPTION_INIT(e_field_exists, -1430);                          " +
      "BEGIN                                                                    " +
      "  EXECUTE IMMEDIATE 'ALTER TABLE korrek_dbf ADD (t_partyid NUMBER(10))'; " +
      "EXCEPTION                                                                " +
      "  WHEN e_field_exists THEN NULL;                                         " +
      "END;                                                                     ");
end;

macro GetLastImportFileName(LastImportFileInfo)
  var LastImportFileName;
  LastImportFileInfo = trim(LastImportFileInfo);
  LastImportFileName = substr(LastImportFileInfo, 1, index(LastImportFileInfo, " ") - 1);
  return LastImportFileName;
end;

macro GetLastImportFileKor(LastImportFileInfo)
  var i;
  i = 0;
  while(i < 4)
    LastImportFileInfo = trim(LastImportFileInfo);
    LastImportFileInfo = substr(LastImportFileInfo, index(LastImportFileInfo, " ") + 1);
    i = i + 1;
  end;
  return trim(LastImportFileInfo);
end;

macro GetCurrImportFileKor(LastImportFileInfo)
  var CurrImportFileKor, rs;
  rs = SQL_ExecuteAndGetRs("SELECT t_new_ FROM korrek_dbf WHERE TRIM(t_dbf_) = 'korrek' AND TRIM(t_field_) = 'KOR'");
  if(rs.MoveNext)
    CurrImportFileKor = rs.value(0);
  else
    CurrImportFileKor = "";
  end;
  return trim(CurrImportFileKor);
end;

private macro CloseDeletedBank(PartyID : integer)
  var party : RsbParty;
  party = RsbParty(PartyID);
  party.Lock();
OnError(err)
  return;
end;

macro ProcessCloseDeletedBank()
  var rs;
  rs = SQL_ExecuteAndGetRs("SELECT t_partyid FROM bnkseek_log WHERE t_text LIKE '010:%'");
  while(rs.MoveNext)
    CloseDeletedBank(rs.value(0));
  end;
end;

private macro PrintBikSwifTableHeader()
[┌────────────┬────────────────┬───────────────────────────────────────────────┬─────────────┬───────────────────────────────────────────────┐];
[│ БИК        │ БИК СВИФТ      │ Наименование                                  │ ID субъекта │ Описание                                      │];
end;

private macro PrintBikSwifTableFooter()
[└────────────┴────────────────┴───────────────────────────────────────────────┴─────────────┴───────────────────────────────────────────────┘];
end;

private macro PrintBikSwifTableLine(bankBik, bankSwift, bankName, bankId, bankText)
  var j;
  array _bankText;
  if(StrLen(bankText) > 0)
[├────────────┼────────────────┼───────────────────────────────────────────────┼─────────────┼───────────────────────────────────────────────┤];
    StrSplit(bankText, _bankText, 45, 45, 10);
    j = 0;
    while(StrLen(_bankText(j)) > 0 )
      if(j == 0)
        if(bankId != 0)
[│############│################│###############################################│#############│###############################################│]
(bankBik, bankSwift, bankName, bankId, _bankText(j));
        else
[│############│################│###############################################│             │###############################################│]
(bankBik, bankSwift, bankName, _bankText(j));
        end;
      else
[│            │                │                                               │             │###############################################│]
(_bankText(j));
      end;
      j = j + 1;
    end;
    countLines = countLines + 1;
  end;
end;

macro PrintBikSwifProtocol(dlg_rec)
  var modesStr = "";
  var sqlString : string;
  var rs, cmd;
  rs = SQL_ExecuteAndGetRs("SELECT t_name FROM dperson_dbt WHERE t_oper = " + {oper});
  rs.MoveNext;
[          Протокол работы процедуры сверки Справочника БИК и БИК СВИФТ         ];
[-------------------------------------------------------------------------------];
[Дата: ##########](date());
[Время: ########](time());
[Пользователь: #### ####################################]({oper}, rs.value(0));
[ ];
[Файл: #](dlg_rec.FileName);
  rs = SQL_ExecuteAndGetRs("SELECT COUNT(*) FROM bik_swif_dbf");
  rs.MoveNext;
[Количество записей: ######](int(rs.value(0)));
[ ];

  if(dlg_rec.Param1 == "X")
    if(strlen(modesStr) > 0)
      modesStr = modesStr + ", ";
    end;
    modesStr = modesStr + "Проверять отсутствие кодов";
  end;
  if(dlg_rec.Param2 == "X")
    if(strlen(modesStr) > 0)
      modesStr = modesStr + ", ";
    end;
    modesStr = modesStr + "Проверять несуществующие коды";
  end;
  if(dlg_rec.Param3 == "X")
    if(strlen(modesStr) > 0)
      modesStr = modesStr + ", ";
    end;
    modesStr = modesStr + "Проверять наименования банков";
  end;
  if(dlg_rec.Param4 == "X")
    if(strlen(modesStr) > 0)
      modesStr = modesStr + ", ";
    end;
    modesStr = modesStr + "Импортировать значения кода SWIFT BIC";
  end;

[Режимы: #](modesStr);

  sqlString = "SELECT                      " + 
              "  t_kod_rus                 " + 
              " ,t_kod_swift               " + 
              " ,t_name_srus               " + 
              " ,t_partyid                 " + 
              " ,t_text                    " + 
              "  FROM bik_swif_log         " + 
              " ORDER BY DECODE(t_kod_rus, CHR(1), '999999999', t_kod_rus), NVL(t_partyid, 0), t_texttype " ; 
  cmd = RsdCommand(sqlString);
  cmd.NullConversion = true;
  rs = RsdRecordset(cmd);

  PrintBikSwifTableHeader();
  
  while(rs.moveNext())
    PrintBikSwifTableLine(rs.value(0), rs.value(1), rs.value(2), rs.value(3), rs.value(4));
  end;

  PrintBikSwifTableFooter();
end;
