/*
 * Импорт BIC Directory
 */
Import BankInter, PTInter, rsd, "globals.mac";

file FBICDir("") txt;  /* Текстовый файл импорта */

var fName : string;
var nCount : integer;

var stat : bool;

var LoadOnlyBank : integer;

var IDArray : TArray;
var ImportStringArray : TArray;


/* Очистить временную таблицу */
macro ClearTempTable() : bool

  var cmd : RsdCommand;
  var sqlstr;

  cmd = RsdCommand("TRUNCATE TABLE dbicimp_tmp");

  cmd.execute();

  // Таблица DBICIMPCPY_TMP при импорте не нужна, но т.к. BIC Directory и BIC Directory Plus используют один пакет придется ее создать  
  sqlstr = " DECLARE "
             " e_table_already_exist EXCEPTION;"
             " PRAGMA EXCEPTION_INIT( e_table_already_exist, -955 ); "
             " BEGIN "
             "   EXECUTE IMMEDIATE 'CREATE GLOBAL TEMPORARY TABLE DBICIMPCPY_TMP AS SELECT * FROM dbicimp_tmp WHERE 1 = 0'; "
             " EXCEPTION "
             "   WHEN e_table_already_exist THEN NULL; "
             " END; ";

  cmd = RsdCommand(sqlstr);
  cmd.execute();

  cmd = RsdCommand("TRUNCATE TABLE DBICIMPCPY_TMP");

  cmd.execute();

end;

/* Добавить запись во временную таблицу */
macro AddToTempTable( ID : integer, ImportString : string )

  IDArray(IDArray.Size) = ID;

  ImportStringArray(ImportStringArray.Size) = ImportString;

end;

/* Добавить запись во временную таблицу */
macro InsertIntoTempTable( Flush : bool ) : bool

  var ins : RsbSQLInsert;

  var stat = true;

  if( Flush == null ) Flush = false; end;

  if( (IDArray.Size == 5000) or ((Flush) and (IDArray.Size > 0)) )

    ins = RsbSQLInsert("INSERT INTO dbicimp_tmp (t_ID, t_ImportString) VALUES (?, ?)", 2, ImportStringArray.Size );

    ins.AddParam( V_INTEGER, IDArray );

    ins.AddParam( V_STRING, ImportStringArray, 1000 );

    stat = ins.Insert();

    IDArray.Size = 0;
    ImportStringArray.Size = 0;

  end;

  return stat;

end;

/* получить общее количество записей во временной таблице */
private macro GetAllRecCount()

  var rs : RsdRecordset;
  var RecCount : integer;

  RecCount = 0;

  rs = RsdRecordset("SELECT count(1) FROM dbicimp_tmp" );

  if( rs.MoveNext() )

    RecCount = rs.value(0);

  end;

  return RecCount;

end;

/* получить количество записей определеннго вида */
private macro GetRecCount( ModificationFlag : string )
  
  var rs : RsdRecordset;
  var RecCount : integer;

  RecCount = 0;

  rs = RsdRecordset("SELECT count(1) FROM dbicimp_tmp WHERE t_PartyID <> 0 AND t_ModificationFlag = '" + ModificationFlag + "'" );

  if( rs.MoveNext() )

    RecCount = rs.value(0);

  end;

  return RecCount;

end;

/* печать блока "Список записей в Справочнике участников SWIFT, подлежащих удалению" */
private macro PrintDeletedRecord( RecCount : @integer )

  var rs : RsdRecordset;

  var BIC_ISO : string;
  var PtName  : string;
  var Notes   : string;
  var IsNull : bool;

  RecCount = 0;

  rs = RsdRecordset("SELECT party.t_Name a_Name, bicimp.t_SwiftCode a_BicIso, " +
                    "(SELECT count(1) FROM dpartyown_dbt t WHERE t.t_PartyID = party.t_PartyID AND t.t_PartyKind <> " + PTK_SWIFT + ") a_PtKind, "
                    "(SELECT count(1) FROM dobjcode_dbt t WHERE t.t_ObjectType = 3 AND t.t_ObjectID = party.t_PartyID AND t.t_CodeKind <> 6" + PTCK_SWIFT + ") a_ObjCode "
                    "FROM dparty_dbt party, dbicimp_tmp bicimp " +
                    "WHERE bicimp.t_PartyID = party.t_PartyID AND bicimp.t_ModificationFlag = 'D'"
                    );

  while( rs.MoveNext() )

    if( RecCount == 0 )
[Список записей в Справочнике участников SWIFT, подлежащих удалению            ];
[                                                                              ];
[+-------+-----------+--------------------------------------------------------+];
[| № п/п |  BIC ISO  |  Наименование субъекта    |     Примечание             |];
[+-------+-----------+--------------------------------------------------------+];
    end;
    
    RecCount = RecCount + 1;

    PtName = rs.value("a_Name", IsNull);
    if( IsNull ) PtName = ""; end;

    BIC_ISO = rs.value("a_BicIso", IsNull);
    if( IsNull ) BIC_ISO = ""; end;

    Notes = "";

    if( rs.value("a_ObjCode") != 0 )
      if( Notes != "" ) Notes = Notes + "\n"; end;
      Notes = Notes + "Имеет другие активные коды.";
    end;

    if( rs.value("a_PtKind") != 0 )
      if( Notes != "" ) Notes = Notes + "\n"; end;
      Notes = Notes + "Имеет другие принадлежности.";
    end;

[|#######|###########|###########################|############################|] (RecCount:r, BIC_ISO:l, PtName:w, Notes:w);
[+-------+-----------+--------------------------------------------------------+];

  end;

  return RecCount;

end;

/* печать блока "Список записей в Справочнике участников SWIFT, отсутствующих в BIC Directory" */
private macro PrintAbsentParty( RecCount : @integer )

  var rs : RsdRecordset;

  var BIC_ISO : string;
  var PtName  : string;
  var IsNull  : bool;

  RecCount = 0;

  rs = RsdRecordset("SELECT party.t_Name a_Name, code.t_Code a_BicIso " +
                    "FROM dparty_dbt party, dpartyown_dbt partyown, dpartcode_dbt code " +
                    "WHERE partyown.t_PartyID = party.t_PartyID AND partyown.t_PartyKind = " + PTK_SWIFT + " " +
                    "AND party.t_PartyID NOT IN (SELECT t_PartyID FROM dbicimp_tmp WHERE t_PartyID <> 0) " +
                    "AND code.t_PartyID(+) = party.t_PartyID AND code.t_CodeKind(+) = " + PTCK_SWIFT
                    );

  while( rs.MoveNext() )

    if( RecCount == 0 )
[Список записей в Справочнике участников SWIFT, отсутствующих в BIC Directory  ];
[                                                                              ];
[+-------+-----------+--------------------------------------------------------+];
[| № п/п |  BIC ISO  |                Наименование субъекта                   |];
[+-------+-----------+--------------------------------------------------------+];
    end;
    
    RecCount = RecCount + 1;

    rs.value("a_Name", IsNull);
    if( IsNull )
      PtName = "";
    else
      PtName = rs.value("a_Name", IsNull);
    end;

    rs.value("a_BicIso", IsNull);
    if( IsNull )
      BIC_ISO = "";
    else
      BIC_ISO = rs.value("a_BicIso", IsNull);
    end;

[|#######|###########|########################################################|] (RecCount:r, BIC_ISO:l, PtName:w);
[+-------+-----------+--------------------------------------------------------+];

  end;

  return RecCount;

end;

/* Печать протокола */
private macro PrintProtocol( StartTime : time, EndTime : time )

  var RecCountA : integer;
  var RecCountM : integer;
  var RecCountD : integer;
  var RecCountU : integer;
  var RecDeletedCount : integer;
  var RecAbsentCount  : integer;

  RecCountA = GetRecCount( "A" );
  RecCountM = GetRecCount( "M" );
  RecCountD = GetRecCount( "D" );
  RecCountU = GetRecCount( "U" );

[Протокол выполнения процедуры "Импорт справочника BIC Directory"              ];
[                                                                              ];
[ Дата выполнения:      ########## г.                                          ] (date:f);
[ Время импортирования: ######## - ########                                    ] (StartTime:f, EndTime:f);
[ Исполнитель:          ##### #                                                ] ({oper}, {Name_Oper});
[                                                                              ];
[Импортированные записи из справочника BIC Directory                           ];
[                                                                              ];
[ +-------------+----------------------+----------------+                      ];
[ |   Признак   | Операция модификации | Кол-во записей |                      ];
[ | модификации |                      |                |                      ];
[ +-------------+----------------------+----------------+                      ];
[ | A           | добавление           |################|                      ] (RecCountA:c);
[ +-------------+----------------------+----------------+                      ];
[ | M           | изменение            |################|                      ] (RecCountM:c);
[ +-------------+----------------------+----------------+                      ];
[ | D           | удаление             |################|                      ] (RecCountD:c);
[ +-------------+----------------------+----------------+                      ];
[ | U           | без изменения        |################|                      ] (RecCountU:c);
[ +-------------+----------------------+----------------+                      ];
[                                                                              ];

  PrintDeletedRecord( @RecDeletedCount );

  PrintAbsentParty( @RecAbsentCount );

[                                                                              ];
[Всего обработано записей:                     #####                           ] (GetAllRecCount():r);
[Успешно импортированных записей:              #####                           ] ((RecCountA + RecCountM + RecCountD + RecCountU):r);
[Всего записей, подлежащих удалению:           #####                           ] (RecDeletedCount:r);
[Всего записей, отсутствующих в BIC Directory: #####                           ] (RecAbsentCount:r);

end;

/* Запустить импорт */
macro RunImport()

  var cmd : RsdCommand;
  var StartTime : time;
  var EndTime   : time;

  cmd = RsdCommand("BEGIN RsbBicImport.ImportBICDirectory(?); END;");

  cmd.addParam( "LoadOnlyBank", RSDBP_IN );
  cmd.value("LoadOnlyBank") = LoadOnlyBank;

  StartTime = time;

  cmd.execute();

  EndTime = time;

  PrintProtocol( StartTime, EndTime );

end;

/* Выбираем текстовый файл с данными для импорта */
stat = SelectFile( fName, "*.dat", "Выбор файла импорта" );

if( stat )
  
  stat = Open( FBICDir, fName );
  
  if( not stat )

     msgbox( "Ошибка открытия файла импорта " + fName );
  
  else
      LoadOnlyBank = 0;

      IDArray           = TArray;
      ImportStringArray = TArray;

      ClearTempTable();

      nCount = 0;
      InitProgress( -1, " ~Ctrl-Brk~ Прервать", "Обработка файла импорта" );

      next(FBICDir);

      if ( (substr(FBICDir.str, 1, 2) != "FI") /*OR (strlen(FBICDir.str) != 848)*/ )
         msgbox( "Формат файла не соответствует требуемому" );
         stat = false;
      else
        if( (stat) and (GetTrue(null, "Загружать только банки?")) ) LoadOnlyBank = 1; end;

        while( stat )
      
          nCount = nCount + 1;

          AddToTempTable( nCount, FBICDir.str );

          stat = InsertIntoTempTable();
             
          UseProgress( nCount );

          if(stat)
            stat = next(FBICDir);
          end;
        end;

        RemProgress();
        stat = InsertIntoTempTable( true );
      end;
  end;

end;

/* если пользователь отказался от выбора, выходим без сообщений */
if( not stat ) exit(1); end;

/* запуск процедуры импорта */
RunImport();
