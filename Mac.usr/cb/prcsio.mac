/************************************************************************/
/*         Автоматизированная банковская система RS-Bank                */
/*                 Copyright (c) R-Style Software Lab 2002              */
/*                                                                      */
/*  Имя файла      : prcsio.mac                                         */
/*                                                                      */
/*  Описание       : Печать приходного кассового ордера из ББ и РКО     */
/*                   согласно Постановления Госкомстата №88             */
/*                                                                      */
/*  Программист    : Смирнов С.В. SMR PRN                               */
/*                                                                      */
/*  Создан         : 18.07.02                                           */
/*                                                                      */
// KS 04.12.2013 Перенос пользовательских доработок в 31ю сборку
/************************************************************************/

import globals, FIInter, PTInter, PaymInter, oprinter;
import prpmbuff, prcs;
IMPORT oralib, likepy;
import "fg_Life_parm.mac";
debugbreak;
private Const fdBank = fg_life_subject({OurBank});
    
/* -----------------------------------------------------------
   Структура данных печатной формы приходного ордера

   ----------------------------------------------------------- */

PRIVATE CLASS TIncOrderPrintData

  PRIVATE CLASS TPayInstruction
    var Account    : string,
        FIID       : integer,
        FICode     : string,
        Amount     : string;
  END;

  var Number               : string,
      DateStr              : string,
      Client               : string,
      PayerAccount         : string,
      FICode               : string,
      Amount               : money,
      ArrayReceiverName    : TArray,
      CreditList           : TArray,
      ReceiverINN          : string,
      ReceiverKPP          : string,
      ReceiverOKATO        : string,
      BankName             : string,
      BIC                  : string,
      ArraySym             : TArray,
      ArrayPartSum         : TArray,
      ArraySum             : TArray,
      Ground               : string;
      
  private var IsCurrency : string;
  
  private macro GetFICodeForReport( FIID )
    if(IsCurrency == "X")
      return GetFICodeCCY( FIID );
    end;
    return "";
  end;
  
  /* Заполнение счетов и сумм по кредиту.
     Если по платежу имеется разноска по кредиту, то берём из разноски.
     Иначе из платежа Pmpaym только счет */
  private macro FillCreditList( CreditList:TArray, pmpaym:TRecHandler )
    
    var i : integer = 0;
    var pi : TPayInstruction;
    for(i, 0, 1, 1)
      pi = TPayInstruction();
      pi.Account = pi.FICode = pi.Amount = "";
      CreditList.value(i) = pi; 
    end;

    // есть ли разноска?
    var payment : RsbPayment = RsbPayment(pmpaym.rec.PaymentID),
        pmaddpi : TRecHandler = TRecHandler( "pmaddpi.dbt" ),
        stat    : integer = payment.PIList( PRT_Credit ).First();

    if ( not stat ) // если есть, заполняем из разноски
      i = 0;
      while( not stat )
        stat = payment.PIList( PRT_Credit ).Current( pmaddpi );
        if( not stat )
          pi = TPayInstruction();
          pi.Account    = pmaddpi.rec.Account;
          pi.FIID       = pmaddpi.rec.FIID;
          pi.FICode     = GetFICodeForReport(pi.FIID);
          pi.Amount     = string(pmaddpi.rec.Amount:f);
          CreditList.value( i ) = pi;
          i = i + 1;
          stat = payment.PIList( PRT_Credit ).Next();
        end;
      end;
    else // если нет разноски, берем счет из pmpaym
      CreditList.value(0).Account = pmpaym.rec.ReceiverAccount;
      CreditList.value(0).FIID = pmpaym.rec.PayFIID;      
      if(pmpaym.rec.PayFIID != pmpaym.rec.FIID)
        CreditList.value(0).Amount = string(pmpaym.rec.PayAmount:f);
        CreditList.value(0).FICode = GetFICodeForReport(pmpaym.rec.PayFIID);
      end;
    end;
  end;

  private macro FillTArrayFromArray( TArr : TArray, Arr )
  
    var i : integer = 0;
    for (i, 0, asize(Arr) - 1, 1)
      TArr.value(i) = Arr(i);
    end;
    
  end;
  
  /* -----------------------------------
     Проинициализировать данными кассового ордера
     ----------------------------------- */
  MACRO InitByCashOrder( pmpaym:TRecHandler, pmrmprop:TRecHandler, pscshdoc:TRecHandler )

    Number       = pmrmprop.rec.Number;
    DateStr      = FillDateString();

    /* Клиент */
    Client = pscshdoc.rec.FIOClient;     
    
    IsCurrency = pscshdoc.rec.IsCurrency;
    
    PayerAccount = pmpaym.rec.PayerAccount;
    FICode = GetFICodeForReport(pmpaym.rec.FIID);
    Amount = pmpaym.rec.Amount;

    CreditList = TArray;
    FillCreditList( CreditList, pmpaym );
    
    array aReceiverName;
    FillReceiverInOrd( aReceiverName, @ReceiverINN, @ReceiverKPP, @ReceiverOKATO );
    ArrayReceiverName = TArray;
    FillTArrayFromArray(ArrayReceiverName, aReceiverName);

    BankName = pmrmprop.rec.ReceiverBankName;
    BIC = {MFO_Bank};
  
    array aSym, aPartSum;
    FillCashSymbolsAndSum( aPartSum, aSym, SYMB_KIND_INCOME );
    ArraySym = TArray;
    FillTArrayFromArray(ArraySym, aSym);
    ArrayPartSum = TArray;
    FillTArrayFromArray(ArrayPartSum, aPartSum);

    array aSum;
    FillAmountStr( aSum );
    ArraySum = TArray;
    FillTArrayFromArray(ArraySum, aSum);

    Ground = pmrmprop.rec.Ground;
                                                                                        
  END;
  
  /* -----------------------------------
     Проинициализировать данными мемориального документа
     ----------------------------------- */
  MACRO InitByMemorialDocument( pmpaym:TRecHandler, pmrmprop:TRecHandler )
  
    macro FillReceiverInOrdMemDoc(acc, FIID, ReceiverName, ReceiverINN:@string,
                                             ReceiverKPP:@string, ReceiverOKATO:@string )
      /*Получатель*/
      StrSplit(pmrmprop.rec.ReceiverName, ReceiverName, 35, 25, 3);
      
      var receiver:TRecHandler = TRecHandler("party.dbt",    "bank.def");
      var attr    :TRecHandler = TRecHandler("objattr.dbt" , "bank.def");      
      GetAccountClient(acc, FIID, receiver);
      
      /* ИНН и КПП */
      SplitINN_KPP(ПолучитьКодСубъекта(receiver.rec.PartyID, PTCK_INN), ReceiverINN, ReceiverKPP);

      /* ОКАТО получателя*/
      var ObjCat = RsbObjCategories( OBJTYPE_PARTY, UniID(receiver, OBJTYPE_PARTY));
      ObjCat.GetMainAttr(12, {curdate}, attr);
      ReceiverOKATO = attr.rec.NameObject;
    end;
    
    Number       = pmrmprop.rec.Number;
    DateStr      = FillDateString();

    /* Клиент */
    Client = "";
    if (pmrmprop.rec.ReceiverName)                                            
      Client = pmrmprop.rec.ReceiverName;                                     
    else                                                          
      var strSQL : string = "SELECT t.t_NameAccount " +                        
                            "FROM dpmaddpi_dbt t, dparty_dbt p " +               
                            "WHERE t.t_PaymentID = " + pmpaym.rec.PaymentID + 
                            "  AND p.t_partyID = t.t_accountClient " +           
                            "  AND p.t_LegalForm = 2 " + // физ. лицо            
                            "  ORDER BY t.t_pmaddpiID";                          
      VAR rs : RsdRecordset = RsdRecordset( strSQL );                            
      if ( rs.moveNext() )                                                       
        Client = rs.value("t_NameAccount");                                    
      end;                                                                 
    end;     

    // есть ли среди счетов плательщика, получателя или разноски хотя бы один не в национальной валюте?
    IsCurrency = "";        
    if ( pmpaym.rec.FIID != NATCUR )
      IsCurrency = "X";
    else 
      // выясняем, есть ли разноска
      var CurrAddPI:TRecHandler = TRecHandler( "pmaddpi.dbt" );
      var PaymentObj:RsbPayment = RsbPayment(pmpaym.rec.PaymentID);
      var AddPI:RsbPIPayment  = PaymentObj.PIList(1),
          IsCreditAddPI = AddPI.Size > 0,
          stat = 0;
      if(IsCreditAddPI)                                        
        stat = AddPI.First;
        while( (stat == 0) and (IsCurrency != "X") )
          stat = AddPI.Current( CurrAddPI );
          if(stat == 0)
            if ( CurrAddPI.rec.FIID != NATCUR )
              IsCurrency = "X";  
            end;
            stat = AddPI.Next;              
          end;              
        end;      
      elif (pmpaym.rec.PayFIID != NATCUR )
        IsCurrency = "X"; 
      end;
    end;
      
    PayerAccount = pmpaym.rec.PayerAccount;
    FICode = GetFICodeForReport(pmpaym.rec.FIID);
    Amount = pmpaym.rec.Amount;

    CreditList = TArray;
    FillCreditList( CreditList, pmpaym );
    
    array aReceiverName;
    FillReceiverInOrdMemDoc(CreditList.value(0).Account, CreditList.value(0).FIID, 
                            aReceiverName, @ReceiverINN, @ReceiverKPP, @ReceiverOKATO );
    ArrayReceiverName = TArray;
    FillTArrayFromArray(ArrayReceiverName, aReceiverName);

    BankName = pmrmprop.rec.ReceiverBankName;
    BIC = {MFO_Bank};
  
    ArraySym = TArray;
    ArrayPartSum = TArray;
    var i: integer = 0;                                  
    while( i < 6 )                                
      ArraySym.value(i) = "";                                     
      ArrayPartSum.value(i) = "";                              
      i = i + 1;                                         
    end;                                                 
    ArraySym.value(0) = pmrmprop.rec.cashSymbolDebet;       
    if (ArraySym.value(0))                                     
      ArrayPartSum.value(0) = string(pmpaym.rec.Amount:f);  
    end;

    array aSum;
    FillAmountStr( aSum );
    ArraySum = TArray;
    FillTArrayFromArray(ArraySum, aSum);

    Ground = pmrmprop.rec.Ground;
                                
  END;

END;
    
/* -----------------------------------------------
   Непосредственно печать по подготовленным данным
   ----------------------------------------------- */

PRIVATE MACRO PrintIncCashOrder( d : TIncOrderPrintData, ncopy : integer ):bool                                                                                

  var CashSymbCount;
  var ReceiverINN="", ReceiverKPP="", ReceiverOKATO="",ReceiverAccount="";
  var j = 0;

  /* EVG 30/05/2011 */
  var n = 0;

  array ArrayClient, ArrayBankName, ArrayGround;
  
  if ( fdBank.is_EXV )
    CashSymbCount = 6;
    StrSplit (d.Client, ArrayClient, 33, 33, 3);
    StrSplit(d.BankName, ArrayBankName, 56, 27, 3);
    StrSplit(d.Ground, ArrayGround, 77, 56, 2);
  else
    CashSymbCount = 7;
    StrSplit (d.Client, ArrayClient, 35, 28, 3);
    StrSplit(d.BankName, ArrayBankName, 65, 50, 2);
    StrSplit(d.Ground, ArrayGround, 91, 91, 2);
  end;

/* EVG Для валютных ордеров символ кассы не печатается */
  if (pr_pmpaym.rec.FIID != 0)
     while ( j < CashSymbCount )
        d.ArraySym.value(j)     = "";
        d.ArrayPartSum.value(j) = "";
        j = j + 1;
     end;
  end;

  /* EVG Для ордеров, получателем по которым является счёт 20209, в
     графах ИНН, КПП, ОКАТО и счёт получателя печатаются прочерки. */
  ReceiverINN = " " + d.ReceiverINN;
  ReceiverKPP = " " + d.ReceiverKPP;
  ReceiverOKATO = " " + d.ReceiverOKATO;

  ReceiverAccount = d.CreditList.value(0).Account;
  if ( fdBank.is_EXV )
      if ( substr(ReceiverAccount,1,5) == "60308" )
         ReceiverINN     = "-------------------";
         ReceiverKPP     = "--------------------";
         ReceiverOKATO   = "-----------------";
         ReceiverAccount = "----------------------------------------------------------";
      end;
  else
      if ( substr(ReceiverAccount,1,5) == "20209" )
         ReceiverINN     = "-------------------";
         ReceiverKPP     = "--------------------";
         ReceiverOKATO   = "-----------------";
         ReceiverAccount = "----------------------------------------------------------";

      end;
  end;


  /*Печать*/
  while(ncopy > 0)  
    ncopy = ncopy - 1;

      if ( fdBank.is_EXV )
         if ( n == 0 )
            println ("(3R(s0p13.50h8.5v0s0b20T&l1X&l8D&l0O&a7L&l2E&l8D");
         else
            println (" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ");
         end;
      end;

    var i : integer = 2;

    if ( fdBank.is_EXV )
         /* EVG 30/05/2011 Форма изменена для ЭВ Воронеж */
        [
                                                                  ┌─────────────────────┐
                                                                  │Кодформы документа по│
                                                                  │         ОКУД        │
                                                   ┌──────────┐   ├─────────────────────┤
                       ПРИХОДНЫЙ КАССОВЫЙ ОРДЕР N  │ ######## │   │        0402008      │
                       #########################   └──────────┘   └─────────────────────┘
                                                     ДЕБЕТ          
           От кого                           ┌──────────────────────┬───────────────────┐
           ################################# │ сч.№                 │                   │
           ################################# │ #################### │                   │
           ################################# │                      │                   │
           ──────────────────────────────────┴──────────────────────┤###################│
                                                      КРЕДИТ        │                   │
           ──────────────────────────────────┬──────────────────────┤                   │
           Получатель                        │ сч.№                 │                   │
           ################################# │ #################### │                   │
           ################################# │ сч.№                 │ Сумма цифрами     │]
         (d.Number:c, 
          d.DateStr, 
          ArrayClient(0), 
          ArrayClient(1),
          d.PayerAccount:l, 
          ArrayClient(2), d.Amount:f:l, 
          d.ArrayReceiverName.value(0), d.CreditList.value(0).Account:l,
          d.ArrayReceiverName.value(1) ); 

        while( i < d.CreditList.size )

       [                                       │  ################### │ ### ############## │
                                               ├──────────────────────┤                    │
                                               │  сч.№                │                    │]
           (d.CreditList.value(i).Account:l, d.CreditList.value(i).FICode, d.CreditList.value(i).Amount:r);
           i = i + 1;
        end;
        
        [  ──────────────────┬───────────────┴─┬────────────────────┼───────────────────┤
           ИНН ############# │  КПП ########## │  ОКАТО ########### │    в том числе    │
           ──────────────────┴─────────────────┴────────────────────┤    по символам:   │
           р/счет N ############################################### ├──────┬────────────│
           ─────────────────────────────────────────────────────────┤символ│   сумма    │
           Наименование банка-вносителя ########################### ├──────┼────────────┤
           ######################################################## │ #### │ ########## │
           ######################################## БИК ########### ├──────┼────────────┤
           ─────────────────────────────────────────────────────────┤ #### │ ########## │
           Наименование банка-получателя ########################## ├──────┼────────────┤
           ######################################################## │ #### │ ########## │
           ######################################## БИК ########### ├──────┼────────────┤
           ─────────────────────────────────────────────────────────┤ #### │ ########## │
           Сумма прописью с указанием наименования валюты           ├──────┼────────────┤
           ######################################################## │ #### │ ########## │]
         (ReceiverINN, ReceiverKPP, ReceiverOKATO, 
          ReceiverAccount:l,
          ArrayBankName(0),
          ArrayBankName(1), d.ArraySym.value(0):c, d.ArrayPartSum.value(0):c,  
          ArrayBankName(2), {MFO_Bank},
          d.ArraySym.value(1):c, d.ArrayPartSum.value(1):c,  
          ArrayBankName(0),
          ArrayBankName(1), d.ArraySym.value(2):c, d.ArrayPartSum.value(2):c,  
          ArrayBankName(2), {MFO_Bank}, 
          d.ArraySym.value(3):c, d.ArrayPartSum.value(3):c, 
          d.ArraySum.value(0), d.ArraySym.value(4):c, d.ArrayPartSum.value(4):c
         );

        if( d.ArraySym.size <= 5 )
        [  ─────────────────────────────────────────────────────────┴──────┴────────────┘ ];
        else
          while( CashSymbCount < d.ArraySym.size )
        [                                                           │ #### │ ########## │](d.ArraySym.value(CashSymbCount):c, d.ArrayPartSum.value(CashSymbCount):c );
            CashSymbCount = CashSymbCount + 1;
          end;
        [  ─────────────────────────────────────────────────────────┴──────┴────────────┘];
        end;

        [  Источник поступления ########################################################
           #############################################################################   
           ──────────────────────────────────────────────────────────────────────────────
           Подпись                  Бухгалтерский                   Кассовый
           вносителя                работник                        работник


         ]
         (ArrayGround(0),
          ArrayGround(1)           
         );

    else
        [                                                                      ┌─────────────────────┐
                                                                               │      Код формы      │
                                                                               │  документа по ОКУД  │
                                                                               │       0402008       │
                                                                               └─────────────────────┘
                                      ┌────────────┐                        
           Приходный кассовый ордер N │ ########## │
                                      └────────────┘
           #########################                                                            
                                                            ДЕБЕТ
                                                ┌─────────────────────────────┬───────────────────────┐
           От кого ############################ │ счет № #################### │ ### ################# │
            ################################### └─────────────────────────────┤                       │
            ###################################             КРЕДИТ            │                       │
           ─────────────────────────────────────┬─────────────────────────────┤     Сумма цифрами     │
           Получатель ######################### │ счет № #################### │ ### ################# │
            ################################### ├─────────────────────────────┤                       │
            ################################### │ счет № #################### │ ### ################# │]
            
         (d.Number:c, 
          d.DateStr, 
          ArrayClient(0), d.PayerAccount:l, d.FICode, d.Amount:f:r, 
          ArrayClient(1), 
          ArrayClient(2), 
          d.ArrayReceiverName.value(0), d.CreditList.value(0).Account:l, d.CreditList.value(0).FICode, d.CreditList.value(0).Amount:r,
          d.ArrayReceiverName.value(1),
          d.ArrayReceiverName.value(2), d.CreditList.value(1).Account:l, d.CreditList.value(1).FICode, d.CreditList.value(1).Amount:r); 

        while( i < d.CreditList.size )

        [                                       ├─────────────────────────────┤                       │
                                                │ счет № #################### │ ### ################# │]
           (d.CreditList.value(i).Account:l, d.CreditList.value(i).FICode, d.CreditList.value(i).Amount:r);
           i = i + 1;
        end;
        
        [                                       └─────────────────────────────┼───────────────────────┤
           ИНН ############      КПП ############       ОКАТО ############    │      в том числе      │
           р/счет N #########################                                 │      по символам:     │
           ───────────────────────────────────────────────────────────────────┼──────┬────────────────┤                   
           Наименование банка-вносителя                                       │символ│      сумма     │
            ################################################## БИК ########## ├──────┼────────────────┤
            ################################################################# │ #### │ ############## │
           Наименование банка-получателя                                      │ #### │ ############## │
            ################################################## БИК ########## │ #### │ ############## │
            ################################################################# │ #### │ ############## │
           Сумма прописью с указанием наименования валюты                     │ #### │ ############## │
            ################################################################# │ #### │ ############## │]
         (ReceiverINN, ReceiverKPP, ReceiverOKATO, 
          ReceiverAccount:l, 
          ArrayBankName(0), d.BIC,
          ArrayBankName(1),  
          d.ArraySym.value(0):c, d.ArrayPartSum.value(0):r, 
          d.ArraySym.value(1):c, d.ArrayPartSum.value(1):r,  
          ArrayBankName(0), d.BIC, d.ArraySym.value(2):c, d.ArrayPartSum.value(2):r, 
          ArrayBankName(1), d.ArraySym.value(3):c, d.ArrayPartSum.value(3):r, 
          d.ArraySym.value(4):c, d.ArrayPartSum.value(4):r, 
          d.ArraySum.value(0), d.ArraySym.value(5):c, d.ArrayPartSum.value(5):r
         );
         if( d.ArraySym.size <= 6 )
         [   ################################################################# └──────┴────────────────┘ 
           Источник поступления                                                                        ](d.ArraySum.value(1));
         else
         [   ################################################################# │ #### │ ############## │](d.ArraySum.value(1), d.ArraySym.value(6):c, d.ArrayPartSum.value(6):r );
          while( CashSymbCount < d.ArraySym.size )
         [                                                                     │ #### │ ############## │](d.ArraySym.value(CashSymbCount):c, d.ArrayPartSum.value(CashSymbCount):r );
            CashSymbCount = CashSymbCount + 1;
          end;
         [                                                                     └──────┴────────────────┘
           Источник поступления                                                                        ];
         end;

         [   ###########################################################################################        
             ###########################################################################################   
           
            Подпись вносителя         Бухгалтерский работник          Кассовый работник


          ]
          (ArrayGround(0),
          ArrayGround(1)           
          );
    end;
/* EVG 30/05/2011 */
     n = n + 1;
  end;
  
  return TRUE;

END;

/* Буфер мультивалютного документа, чтобы печать не ругалась */
var pr_multydoc:TRecHandler = TRecHandler( "multydoc.dbt" );
/* Буфер мемордера, чтобы печать не ругалась */
var pr_cb_doc  :TRecHandler = TRecHandler( "cb_doc.dbt"   ); 

/*------------------------------------------------------------------------
  Печать приходного кассового ордера из ББ и РКО
  согласно Положению от 24.04.2008 г. N 318-П, Указанию ЦБ № 2054-У от 14.08.2008г 
    ncopy:integer - число копий
  ------------------------------------------------------------------------*/

MACRO PrintDocument(ncopy:integer):bool

  var DocKind:integer = pr_pmpaym.rec.DocKind;
  var data : TIncOrderPrintData = TIncOrderPrintData();

  if( ( DocKind == 410/*CASH_PS_INCORDER*/ ) or ( DocKind == 430/*CASH_BOF_INCORDER*/ ) )
    data.InitByCashOrder( pr_pmpaym, pr_pmrmprop, pr_pscshdoc );  
  elif( ( DocKind == CB_MULTYDOC ) or ( DocKind == DLDOC_MEMORIALORDER ) )
    data.InitByMemorialDocument( pr_pmpaym, pr_pmrmprop );
  else
    MsgBox("Данный вид документа не поддерживается макросом");
    return FALSE;
  end;
  if( pr_PrintEA )
    PrintEAHeader();
  end;

  return PrintIncCashOrder(data, ncopy);

END;
