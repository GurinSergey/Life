import PaymInter, PTInter, BankInter, OprInter, oralib, likepy;
                                             
//-----------------------------------------------------------------------------
// Является ли субъект резидентом
//-----------------------------------------------------------------------------
PRIVATE MACRO IsResident( PartyID ):bool
  VAR select:string = " select party.T_NotResident " +
                      " from   dparty_dbt party "+
                      " where  party.T_PARTYID = :PartyID";
  VAR params:TArray = makeArray( SQLParam( "PartyID", PartyID ) );
  VAR rset:RsdRecordset = execSQLselect( select, params, TRUE );

  if( rset and rset.moveNext() )
    if( rset.value(0) == "X" )
      return false;
    end;
  end;     

  return true;
END;

//-----------------------------------------------------------------------------
// Проверка полей сообщения
//-----------------------------------------------------------------------------
PRIVATE MACRO CheckMessageField( TpID:integer, RlsFormID:integer, FieldName:string, FieldContent:string, err )
 
  var Directory, Incompatibility;
  var chr:string, temp:string;
  var i, j, i_, j_, n, m;
  var Code:TArray = TArray();
  var CodeS:TArray = TArray();
  var Len = StrLen(FieldContent);
  var Cod = 0;

  if( (not TpID) or (not RlsFormID) )
    return 0;
  end;
  
  var select:string = string( "select fld.t_Type, fld.t_TPFIELDID ",
                              " from dwltpfld_dbt fld ",
                             " where fld.T_TPID = :TpID ",
                               " and fld.T_NAME = :FieldName" );
  
  var param:TArray = makeArray( SQLParam( "TpID", TpID), SQLParam( "FieldName", FieldName ) );
  var rs:RsdRecordset = execSQLSelect (select,param,true);

  if( not rs.MoveNext() )
    if( ValType(err) == V_STRING )
      SetParm( 4, string("Поле ", FieldName, " не является полем транспорта ",TpID ));
    else
      MsgBox( "Поле ", FieldName, " не является полем транспорта ",TpID );
    end;
    return 1;
  end;
  
  if( not(rs.value(0) == 6) and not(rs.value(0) == 19))
    return 0;
  end;
 
  select = string("select mesfld.t_DirectoryID ",
                  "from   dwlmesfld_dbt mesfld ",
                  "where  mesfld.T_RLSFORMID = :RlsFormID ",
                  "and    mesfld.T_TPFIELDID = :TPFIELDID ");
  param.size = 0;
  param[param.size] = SQLParam( "RlsFormID", RlsFormID);
  param[param.size] = SQLParam( "TPFIELDID", rs.value(1));
  rs = execSQLSelect (select,param,true);

  if ( not rs.MoveNext() )
    return 0;
  end;
  Directory = rs.value(0);
  if( Directory == 0 )
    return 0;
  end;

  i = 1;
  if( FieldName == "23E" )
    j = Code.size;
    Code[j] = "";
    while( i <= Len )
      chr = SubStr(FieldContent,i,1);
      if ( chr == "\\" )
        j = Code.size;
        Code[j] = ""; 
      else
        Code[j] = string(Code[j],chr);
      end;
      i = i + 1;
    end;
  else
    while( i <= Len )
      chr = SubStr(FieldContent,i,1);
      if ( chr == "/" )
        temp = "";
        Cod = false;
        while((i <= Len) and (chr != " ") and not Cod)          
          temp = string(temp,chr);
          if((chr == "/") and (StrLen(temp)>1))
            j = Code.size;
            Code[j] = string(temp); 
            Cod = true;
          end;
          i = i + 1;
          chr = SubStr(FieldContent,i,1);
        end;
      end;
      i = i + 1;
    end;
  end;
  i = 0;
  while(i<=j)
    select = string("select wlc.t_Incompatibility ",
                    "from dwlcodes_dbt wlc, dwllist_dbt wll ",
                    "where wll.T_LISTID = :DirectoryID "
                    "and wlc.T_ALGNUM = wll.T_ALGNUM ",
                    "and wlc.T_CODE = :Code");
    param.size = 0;
    param[param.size] = SQLParam("DirectoryID",Directory);
    param[param.size] = SQLParam("Code", Code[i]);
    rs = execSQLSelect (select,param,true);
    if(not rs.MoveNext())
      if(ValType(err) == V_STRING)
        SetParm(4,string("Не найден код '",Code[i],"' в справочнике кодов для поля ", FieldName));
      else
        MsgBox("Не найден код '",Code[i],"' в справочнике кодов для поля ", FieldName);
      end;
      return 1;
    end;
    Incompatibility = rs.value(0);
    if( not(Incompatibility == "") )      
      Len = StrLen(Incompatibility);
      i_= 1;
      j_= 0;
      CodeS = TArray();
      CodeS[j_] = "";
      while( i_ <= Len )
        chr = SubStr(Incompatibility,i_,1);
        if(chr == ",")
          j_= j_ + 1;
          CodeS[j_] = "";
        else
          if( not(chr == " " ) )
            CodeS[j_] = string(CodeS[j_],chr);
          end;
        end;
        i_= i_+ 1;
      end;
      i_= 0;
      while(i_<= j_)
        n = 0;
        while( n <= j )
          if( not (n == i) and (CodeS[i_] == Code[n]) )
            if(ValType(err) == V_STRING)
              SetParm( 4, string("Поле ",FieldName," не может одновременно содержать коды ",Code[i]," и ", Code[n]));
            else
              MsgBox("Поле ",FieldName," не может одновременно содержать коды ",Code[i]," и ", Code[n]);
            end;
            return 1;
          end;
          n = n + 1;
        end;
        i_= i_+ 1;
      end;
    end;

    i = i + 1;
  end;

  return 0;
END;

//-----------------------------------------------------------------------------
// Проверка внешних платежей
//-----------------------------------------------------------------------------
MACRO CheckExternalPayment( Payment:RsbPayment, DocKind:integer, err:string ):integer

  var stat   :integer = 0;
  var err_str:string  = "";
  var BankID :integer = 0, AccLen:integer = 0, CodeKind:integer = 0, retval:integer = 0;
  var ExtAcc :string  = "", ExtAccNew :string  = "", BankCode:string = "";
  var params:TArray = NULL;
  var rs:object;
  var select:string;
  var TpID:integer = -1, RlsFrmID:integer = -1;

  if( ( DocKind == DLDOC_BANKPAYMENT ) or ( DocKind == BBANK_CPORDER ) )
    BankID   = Payment.ReceiverBankID;
    ExtAcc   = Payment.ReceiverAccount;
    CodeKind = Payment.ReceiverBankCodeKind;
    BankCode = Payment.ReceiverBankCode;
  elif( DocKind == DLDOC_BANKCLAIM )
    BankID = Payment.PayerBankID;
    ExtAcc = Payment.PayerAccount;
    CodeKind = Payment.PayerBankCodeKind;
    BankCode = Payment.PayerBankCode;
  elif( ( DocKind == PS_PAYORDER ) or ( DocKind == PS_CPORDER ) or ( DocKind == PS_INRQ ) )
    BankID = Payment.ReceiverBankID;
    ExtAcc = Payment.ReceiverAccount;
    CodeKind = Payment.ReceiverBankCodeKind;
    BankCode = Payment.ReceiverBankCode;
  end;   
  
  // Если банк российский
  if( ( stat == 0 ) and ( BankID > 0 ) and ( IsResident( BankID )) )
    AccLen = strlen( ExtAcc );
    
/*    stat = PT_CheckBankControlDate( BankID );
    if( stat > 0 )
      err_str = GetErrMsg();
    end;*/
    
    // Проверить длину счета
    if( ( stat == 0 ) and ( AccLen > 0 ) )
      if( AccLen != 20 )
        stat = 1;
        err_str = "Длина счета должна быть равна 20 символам!";
      else // Проверить ключ счета
        if( CodeKind != PTCK_BIC )
          params = makeArray( SQLParam( "p_PartyID"    , BankID               ),
                              SQLParam( "p_CodeKind"   , PTCK_BIC             ),
                              SQLParam( "p_Code"       , V_STRING , RSDBP_OUT ),
                              SQLParam( "p_CodeOwnerID", V_INTEGER, RSDBP_OUT )
                            );
          retval = execStoredFunc( "RSBPARTY.PT_GetPartyCodeEx", V_INTEGER, params );
          if( retval == 0 )
            BankCode = params.Value(2).value;
          end;
        end;
        //Gurin S. 28.01.2015 Если не нашли 3-й код у субъекта - ключ не проверяем
        if (retval == 0 )
           ExtAccNew = GetKey( ExtAcc, BankCode );
           if(( ExtAccNew != ExtAcc ) and (ExtAcc!="00000000000000000000"))
             err_str = "В номере счета " + ExtAcc + " неверно значение ключа.|Должно быть "
                        + ExtAccNew;
             if (not GetTrue(false, "Ключ в счете "+ExtAcc+" не верен.| Должно быть "+ExtAccNew+"  | Продолжить операцию?"))
               stat = 1;
             end;
           end;
        end;
      end;
    end;
  end;
  select = string("select frm.T_TPID, mes.T_RLSFORMID " ,
                  "from dwlmes_dbt mes, dwlmeslnk_dbt lnk, dwlmesrls_dbt rls, dwlmesfrm_dbt frm, dwlpm_dbt wlpm ",
                  "where wlpm.T_PAYMENTID = :PaymentID ",
                  "and lnk.T_OBJID = wlpm.T_WLPMID ",
                  "and lnk.T_OBJKIND = 501 ",
                  "and lnk.T_MESID = mes.T_MESID ",
                  "and mes.T_RLSFORMID = rls.T_RLSFORMID ",
                  "and rls.T_FORMID = frm.T_FORMID ");
  params = makeArray( SQLParam("PaymentID",Payment.PaymentID));
  rs = execSQLSelect (select,params,true);
  if(rs.MoveNext())
    if( (rs.value(0) == 2) or (rs.value(0) == 8) )
     TpID = rs.value(0);
     RlsFrmID = rs.value(1);
    end;
  else
    if( (Payment.OutTransport == 2) or (Payment.OutTransport == 8) )
      TpID = Payment.OutTransport;
      if  ( (TpID == 2) and (DocKind == PS_CPORDER) )
        RlsFrmID = 139;
      elif( (TpID == 2) and (DocKind == BBANK_CPORDER) )                                  
        RlsFrmID = 141;
      elif( (TpID == 8) and (DocKind == PS_CPORDER) )
        RlsFrmID =  212;
      elif( (TpID == 8) and (DocKind == BBANK_CPORDER) )                                  
        RlsFrmID =  215;
      end;
    end;  
  end;     

  if( (TpID != -1) and (RlsFrmID != -1) )
    if( ( DocKind == PS_CPORDER ) or ( DocKind == BBANK_CPORDER ) )
      if(Payment.AdditionalInfo and (stat == 0))  
        stat = CheckMessageField( TpID, RlsFrmID,"72" , Payment.AdditionalInfo, err_str);
      end;
    end;
    if( DocKind == PS_CPORDER )
      if(Payment.InstructionCode and (stat == 0)) 
        stat = CheckMessageField( TpID, RlsFrmID,"23E", Payment.InstructionCode, err_str);
      end;
      if(Payment.Ground and  (stat == 0))
        stat = CheckMessageField( TpID, RlsFrmID,"70" , Payment.Ground, err_str);
      end;
    end;
  end;

  SetParm( 2, err_str );
  return stat;
END;
