//-----------------------------------------------------------------------------
// Блок      : Вне блока
// Шаг       : Вне шага
// Назначение: Различные функции
// Описание  : Классы для работы со счетами КУ
//-----------------------------------------------------------------------------
import OprInter, payments, "cat_acc.mac";

//-----------------------------------------------------------------------------
// Первичный документ для счета КУ "ВнебалСчетКорресп"
//-----------------------------------------------------------------------------
CLASS (TCommonFirstDoc) NotBalCorrAcc_FirstDoc( parm1 )

  VAR AccKind:string;

  // Вернуть параметр первого рода
  MACRO GetParametrTemplate ( ObjectID, Classificator, OperDate, FIRole )         
    VAR Parametr = -1;

    // Для КУ "ВнебалСчетКорресп"
    // Classificator = 1622 // LLCLASS_SIDEBALANCE_CORACCKIND
    // ObjectID      = 1000 // OBJTYPE_SIDEBALANCE
    if( ( ObjectID == OBJTYPE_SIDEBALANCE ) and ( Classificator = LLCLASS_SIDEBALANCE_CORACCKIND ) )
      if( AccKind == "П" )
        Parametr = 1;  // Пассивный
      elif( AccKind == "А" )
        Parametr = 2;  // Активный
      else
        Parametr = -1; // Не нужен
      end;
    end;
    return Parametr;
  END;

  // Конструктор
  Id   = 0;
  Kind = 0;
  AccKind = parm1;
  InitTCommonFirstDoc();

END;

//-----------------------------------------------------------------------------
// Первичный документ для счета КУ "Карт ОР"
//-----------------------------------------------------------------------------
class (TCommonFirstDoc) TIndexWPPrimDocMass(PaymentID:integer, DocKind:integer, PayerFIID:integer, Payer:integer, Department:integer, PayDate:date, IdSf:integer, BaseFIID:integer)

   InitTCommonFirstDoc();
   ParmA[regList.registration(MC_TYPE_PARAMETR_DOCKIND   )] = DocKind;
   ParmA[regList.registration(MC_TYPE_PARAMETR_DOCID     )] = PaymentID;
   ParmA[regList.registration(MC_TYPE_PARAMETR_FIID      )] = PayerFIID;
   ParmA[regList.registration(MC_TYPE_PARAMETR_OWNER     )] = Payer;
   ParmA[regList.registration(MC_TYPE_PARAMETR_DEPARTMENT)] = Department;
   ParmA[regList.registration(MC_TYPE_PARAMETR_INDEXDATE )] = PayDate;
   ParmA[regList.registration(MC_TYPE_PARAMETR_CONTRACTOR)] = Payer;
   ParmA[regList.registration(MC_TYPE_PARAMETR_CONTR_CLIENT)] = IdSf;              
   ParmA[regList.registration(MC_TYPE_PARAMETR_PAYCURRENCY)] = BaseFIID;
   FIRoleBArray[0] = 0;

/*   
   MACRO FindAndOpenIWPAccount( Open_Date )
      
      var opendate:Date = {curDate};
      
      if ( ValType(Open_Date) == V_DATE )
         opendate = Open_Date;
      end;

      return MC_FindAndOpenAccount( "Карт ОР", this, opendate, IsOprMultiExec(), MC_OPENACC_CREATE, null, null, null, null, null, null );
   END;
*/   
end;

CLASS (TIndexWPPrimDocMass) TIndexWPPrimDoc( IdSf, PaymentID )

   VAR m_PaymentObj:RsbPayment = RsbPayment( PaymentID );
   VAR m_Payment = m_PaymentObj;

   InitTIndexWPPrimDocMass( m_PaymentObj.PaymentID, 
                            m_PaymentObj.DocKind, 
                            m_PaymentObj.PayerFIID, 
                            m_PaymentObj.Payer, 
                            m_PaymentObj.Department, 
                            m_PaymentObj.PayDate, 
                            IdSf, 
                            m_PaymentObj.BaseFIID );


   MACRO CorrectAccount( account, accblnc, ORScheme, categ, templ, accdoc, OperDate )
      account.rec.NameAccount = m_PaymentObj.PayerName + " (Картотека ОР)";
      account.rec.Client      = m_PaymentObj.Payer;
  /*SDA - фикс ошибки 1233 для сотрудников ВСП - указанный номер операциониста не входит и т.д.  */
      account.rec.Branch      = {OperDprtNode};
      return true;
   END;

END;
