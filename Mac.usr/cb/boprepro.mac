//-----------------------------------------------------------------------------
// Блок     : 29037 - "Предобработка платежа из бэк-офиса"
// Шаг      : 10    - "Предобработка"
// Описание : Макрос шага
//-----------------------------------------------------------------------------
import PaymInter, pmdefbo, pm_syscont, pmchk117, bochkrst, pmterror, pmprepromass;
// KS 29.07.2011 //Seleznev
import FrontRoute, FrontCommon;
import OprInter, oralib; //Jushmanov 2014-02-21 C-19151

var PaymentObj:RsbPayment;

MACRO ExecuteStep( doc, paymDoc )
    var stat:integer = 0;

    // KS 29.07.2011
    //Seleznev Установка Выгрузка во Фронт = Требуется 
    //для платежей которым назначена категория "внешняя систма"
    if (IsFrontPayment(PaymentObj))
        InsertOprStatus(OPR_STATUS_FRONT, OPRSTAT_FRONT_YES);
    end;

    if( stat == 0 ) // Системный контроль
        stat = ExecuteSysControlStep( PaymentObj, true);
    end;

    if( stat == 0 ) // Проверка на причастность к терроризму
        stat = ПроверкаПричастностиТерроризму( PaymentObj );
        if( stat < 0 )
            stat = 1;
        elif( stat > 0 )
            stat = 0;
        end;
    end;

    if( stat == 0 ) // Контроль по 117-И
        stat = КонтрольПо117И( PaymentObj );
        if( stat < 0 )
            return 1;
        elif( stat > 0 )
            return 0;
        end;
    end;

    if( stat == 0 ) // Проверка остатков по счетам
        stat = BO_CheckAccRest( PaymentObj );
    end;

    //если отвергли, сбросить ручную обработку, чтобы можно было после перезапуска запланировать предобработку
    if (GetOprStatus(OPR_PAYM_STATE)==OPR_PM_ST_REJECT) 
        stat = УстановитьСтатусыПлатежа( OPR_PAYM_MANUAL, OPR_PAYM_ST_MANUAL_NOTNEED );
    end;

    return stat;
END;


//Jushmanov 2014-02-21 C-19151
macro PostStepAction( message,      /* 1 - выполнение шага; 2 - откат шага;   */
                      errTrn,       /* статус выполнения шага. 0 - ошибки нет */
                      FirstDoc,     /* указатель на первичный документ        */
                      ID_Oper,      /* внутренний идентификатор операции      */
                      Number_Step,  /* Номер шага операции (из настроек)      */
                      KindOper,     /* номер вида операции                    */
                      KindDoc,      /* номер вида первичного документа        */
                      KindStep,     /* вид шага операции                      */
                      ID_Step )     /* внутренний идентификатор шага операции */
    private var logquery;

    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(ID_Oper) != V_INTEGER) and (valtype(ID_Oper) != V_STRING)) ID_Oper = 0; end;
        if ((valtype(ID_Step) != V_INTEGER) and (valtype(id_Step) != V_STRING)) ID_Step = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + ID_Oper + " AND t_id_step = " + ID_Step;
        ExecSQL(logquery, null, false);
    end;

    return 0;
end;

/* -----------------------------------------------------------------------------
   Массовое выполнение шага "Предобработка платежа банка"
   ----------------------------------------------------------------------------- */

/* -----------------------------------------------------------------------------
   Предтранзакционные действия 
   Все проверки отражаются только на временной таблице dpmprepro_tmp,
   никакие изменения в БД не делаются
   ----------------------------------------------------------------------------- */
macro PrepMassExecuteStep() 

    // Подготовительные действия
    var stat:integer = execStoredFunc( "PM_BOPREPRO.MassPreprocessPrepare", V_INTEGER );

    if( not stat )
        stat = PM_MassPreproPrepare();
    end;

    // Системный контроль
    if( not stat )
        stat = execStoredFunc( "PM_BOPREPRO.MassSysControlPrepare", V_INTEGER );
    end;

    // Проверка остатка
    if( not stat )
        stat = execStoredFunc( "PM_BOPREPRO.MassCheckRestPrepare", V_INTEGER );
    end;

    if( stat )
        MemoryError( stat );
    end;

    return stat;
end;

/* -----------------------------------------------------------------------------
   Транзакционные действия 
   Всё, что напроверяли, отражается на статусах документа, платежа, операции 
   ----------------------------------------------------------------------------- */
macro MassExecuteStep()

    var stat:integer = execStoredFunc( "PM_BOPREPRO.MassPreprocessExecute", V_INTEGER );

    if( not stat )
        stat = PM_MassPreproExecute();
    end;

    if( stat )
        MemoryError( stat );
    end;

    return stat;
end;

/* -----------------------------------------------------------------------------
   Действия после транзакции
   Заполняем лог обработки платежей для отчета 
   ----------------------------------------------------------------------------- */
macro PostMassExecuteStep()

    var stat:integer = execStoredFunc( "PM_PREPRO.MassFillLog", V_INTEGER );

    if( stat )
        MemoryError( stat );
    end;

    return stat;
end;