// KS 26.1.2013 Адаптация под 31ю сборку
Import rsexts;
import fileop;     
import BankInter, FIInter, globals, dlwreps, likepy;

import "or_rep_h.mac", globals;
Import oralib, likepy, rcw, rsexts, PTInter, BilFacturaInter;
import "fg_Life_parm.mac";

const FontAdd = "ex_FZ(6):ex_FN(Arial Cyr)"; //"ex_FS(i)";
const FontBold   = "ex_FS(b)";
const FontTitle  = "ex_FS(b):ex_FN(Arial):ex_FZ(12)";

const TYPEBOOK_BASE = 1 ;// основной      
const TYPEBOOK_ADD  = 2 ;// дополнительный

Var BookID;
Var Direction;
Var Dolz_1;
Var FIO_1;
Var PrnDepartment = 0;
Var BeginDate     : DATE;
Var EndDate       : DATE;
Var NumStr        = 1;
Var TypeBook      = 0;
Var UnionBook = 0;
Var OldTemplate   = false;
Var OldTemplate2   = false;

var TotalAmount18 : money, TotalNDSAmount18 : money, TotalAmount10 : money, TotalNDSAmount10 : money, TotalAmount0 : money, TotalAmount20 : money, TotalNDSAmount20 : money, TotalFree : money , TotalWithNDS : money ;
var date1, date2;
Var AddListNum = 0, AddListNumber = 0, FirstAddList = true ;
private VAR  acssql_query:string;
private VAR  acssql_from:string;

FILE BILBOOK     ("bilbook.dbt");

                                               
private var Table1 = "┌────────────────┬──────────────┬────────────┬────────────┬──────────┬─────────┬────────────────────────────────────────────────────────────────────────────────┐\n" +
                     "│ Дата и номер   │ Наименование │    ИНН     │    КПП     │ Дата     │ Всего   │                                    В том числе                                 │\n" +
                     "│ счета-фактуры  │  покупателя  │ покупателя │ покупателя │ оплаты   │ продаж, ├──────────────────────────────────────────────────────────────────────┬─────────┤\n" +
                     "│   продавца     │              │            │            │ счета-   │ включая │                     продажи, облагаемые налогом по ставке            │ продажи,│\n" +
                     "│                │              │            │            │ фактуры  │ НДС     ├──────────────────┬───────────────────┬─────────────┬─────────────────┤ освобож-│\n" +
                     "│                │              │            │            │ продавца │         │    18 процентов  │   10 процентов    │ 0 процентов │  20 процентов * │ даемые  │\n" +
                     "│                │              │            │            │          │         ├─────────┬────────┼──────────┬────────┼─────────────┼─────────┬───────┤   от    │\n" +
                     "│                │              │            │            │          │         │стоимость│ сумма  │ стоимость│ сумма  │             │стоимость│ сумма │ налога  │\n" +
                     "│                │              │            │            │          │         │ продаж  │  НДС   │  продаж  │  НДС   │             │ продаж  │  НДС  │         │\n" +
                     "│                │              │            │            │          │         │ без НДС │        │  без НДС │        │             │ без НДС │       │         │\n" +
                     "│                │              │            │            │          │         │         │        │          │        │             │         │       │         │\n" +
                     "├────────────────┼──────────────┼────────────┼────────────┼──────────┼─────────┼─────────┼────────┼──────────┼────────┼─────────────┼─────────┼───────┼─────────┤\n" +
                     "│      (1)       │     (2)      │     (3)    │    (3а)    │   (3б)   │   (4)   │  (5а)   │  (5б)  │   (6а)   │  (6б)  │     (7)     │  (8а)   │ (8б)  │   (9)   │\n" +
                     "├────────────────┼──────────────┼────────────┼────────────┼──────────┼─────────┼─────────┼────────┼──────────┼────────┼─────────────┼─────────┼───────┼─────────┤";
                                                                                                                        



private var Table1New = "┌────────────────┬────────────┬────────────┬────────────┬──────────────┬────────────┬────────────┬──────────┬─────────┬────────────────────────────────────────────────────────────────────────────────┐\n" +
                        "│ Дата и номер   │Номер и дата│Номер и дата│Номер и дата│ Наименование │    ИНН     │    КПП     │ Дата     │Стоимость│                                    В том числе                                 │\n" +
                        "│ счета-фактуры  │ исправления│ корректиро-│ исправления│  покупателя  │ покупателя │ покупателя │ оплаты   │ продаж, ├──────────────────────────────────────────────────────────────────────┬─────────┤\n" +
                        "│   продавца     │ счета-     │ вочного    │ корректиро-│              │            │            │ счета-   │ включая │                     стоимость продаж, облагаемых налогом по ставке   │стоимость│\n" +
                        "│                │ фактуры    │ счета-     │ вочного    │              │            │            │ фактуры  │ НДС, -  ├──────────────────┬───────────────────┬─────────────┬─────────────────┤ продаж, │\n" +
                        "│                │ продавца   │ фактуры    │ счета-     │              │            │            │ продавца │ всего   │    18 процентов  │   10 процентов    │ 0 процентов │  20 процентов * │ освобож-│\n" +
                        "│                │            │ продавца   │ фактуры    │              │            │            │          │         ├─────────┬────────┼──────────┬────────┼─────────────┼─────────┬───────┤ даемых  │\n" +
                        "│                │            │            │ продавца   │              │            │            │          │         │стоимость│ сумма  │ стоимость│ сумма  │             │стоимость│ сумма │от налога│\n" +
                        "│                │            │            │            │              │            │            │          │         │ продаж  │  НДС   │  продаж  │  НДС   │             │ продаж  │  НДС  │         │\n" +
                        "│                │            │            │            │              │            │            │          │         │ без НДС │        │  без НДС │        │             │ без НДС │       │         │\n" +
                        "│                │            │            │            │              │            │            │          │         │         │        │          │        │             │         │       │         │\n" +
                        "├────────────────┼────────────┼────────────┼────────────┼──────────────┼────────────┼────────────┼──────────┼─────────┼─────────┼────────┼──────────┼────────┼─────────────┼─────────┼───────┼─────────┤\n" +
                        "│      (1)       │    (1а)    │    (1б)    │    (1в)    │     (2)      │     (3)    │    (3а)    │   (3б)   │   (4)   │  (5а)   │  (5б)  │   (6а)   │  (6б)  │     (7)     │  (8а)   │ (8б)  │   (9)   │\n" +
                        "├────────────────┼────────────┼────────────┼────────────┼──────────────┼────────────┼────────────┼──────────┼─────────┼─────────┼────────┼──────────┼────────┼─────────────┼─────────┼───────┼─────────┤";

                     
private var Table2 = "┌───┬─────────┬──────────┬─────────┬──────────┬──────────┬──────────┬──────────┬─────────┬────────────────────────────────────────────────────────────────────────────────┐\n" +
                     "│ № │ Дата и  │ Дата     │  Дата   │ Наиме-   │   ИНН    │   КПП    │ Страна   │ Всего   │                                    В том числе                                 │\n" +
                     "│п/п│ номер   │оплаты    │принятия │ нование  │ продавца │ продавца │ проис-   │ покупок,├──────────────────────────────────────────────────────────────────────┬─────────┤\n" +
                     "│   │ счета-  │счета-    │на учет  │ продавца │          │          │ хождения │ включая │                     покупки, облагаемые налогом по ставке            │ покупки,│\n" +
                     "│   │фактуры  │фактуры   │товаров  │          │          │          │ товара.  │ НДС     ├──────────────────┬───────────────────┬─────────────┬─────────────────┤ освобож-│\n" +
                     "│   │продавца │продавца  │(работ,  │          │          │          │  Номер   │         │    18 процентов  │   10 процентов    │ 0 процентов │  20 процентов * │ даемые  │\n" +
                     "│   │         │          │ услуг), │          │          │          │таможенной│         ├─────────┬────────┼──────────┬────────┼─────────────┼─────────┬───────┤   от    │\n" +
                     "│   │         │          │имуществе│          │          │          │декларации│         │стоимость│ сумма  │ стоимость│ сумма  │             │стоимость│ сумма │ налога  │\n" +
                     "│   │         │          │нных прав│          │          │          │          │         │ покупок │  НДС   │  покупок │  НДС   │             │ покупок │  НДС  │         │\n" +
                     "│   │         │          │         │          │          │          │          │         │ без НДС │        │  без НДС │        │             │ без НДС │       │         │\n" +
                     "│   │         │          │         │          │          │          │          │         │         │        │          │        │             │         │       │         │\n" +
                     "├───┼─────────┼──────────┼─────────┼──────────┼──────────┼──────────┼──────────┼─────────┼─────────┼────────┼──────────┼────────┼─────────────┼─────────┼───────┼─────────┤\n" +
                     "│(1)│   (2)   │   (3)    │   (4)   │   (5)    │   (5а)   │  (5б)    │   (6)    │   (7)   │  (8а)   │  (8б)  │   (9а)   │  (9б)  │    (10)     │  (11а)  │ (11б) │  (12)   │\n" +
                     "├───┼─────────┼──────────┼─────────┼──────────┼──────────┼──────────┼──────────┼─────────┼─────────┼────────┼──────────┼────────┼─────────────┼─────────┼───────┼─────────┤";
                                                



private var Table2New = "┌───┬─────────┬─────────┬─────────┬─────────┬──────────┬─────────┬──────────┬──────────┬──────────┬──────────┬─────────┬────────────────────────────────────────────────────────────────────────────────┐\n" +
                        "│ № │ Дата и  │ Номер и │ Номер и │ Номер и │ Дата     │  Дата   │ Наиме-   │   ИНН    │   КПП    │ Страна   │Стоимость│                                    В том числе                                 │\n" +
                        "│п/п│ номер   │ дата    │ дата    │ дата    │оплаты    │принятия │ нование  │ продавца │ продавца │ проис-   │ покупок,├──────────────────────────────────────────────────────────────────────┬─────────┤\n" +
                        "│   │ счета-  │ исправ- │корректи-│ исправ- │счета-    │на учет  │ продавца │          │          │ хождения │ включая │            стоимость покупок, облагаемых налогом по ставке           │стоимость│\n" +
                        "│   │фактуры  │ ления   │ровочного│ ления   │фактуры   │товаров  │          │          │          │ товара   │ НДС, -  ├──────────────────┬───────────────────┬─────────────┬─────────────────┤ покупок,│\n" +
                        "│   │продавца │ счета-  │ счета-  │корректи-│продавца  │(работ,  │          │          │          │ (цифровой│ всего   │    18 процентов  │   10 процентов    │ 0 процентов │  20 процентов * │ освобож-│\n" +
                        "│   │         │ фактуры │ фактуры │ровочного│          │ услуг), │          │          │          │  код),   │         ├─────────┬────────┼──────────┬────────┼─────────────┼─────────┬───────┤ даемых  │\n" +
                        "│   │         │ продавца│ продавца│ счета-  │          │имуществе│          │          │          │  номер   │         │стоимость│ сумма  │ стоимость│ сумма  │             │стоимость│ сумма │от налога│\n" +
                        "│   │         │         │         │ фактуры │          │нных прав│          │          │          │таможенной│         │ покупок │  НДС   │  покупок │  НДС   │             │ покупок │  НДС  │         │\n" +
                        "│   │         │         │         │ продавца│          │         │          │          │          │декларации│         │ без НДС │        │  без НДС │        │             │ без НДС │       │         │\n" +
                        "│   │         │         │         │         │          │         │          │          │          │          │         │         │        │          │        │             │         │       │         │\n" +
                        "├───┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼──────────┼──────────┼──────────┼──────────┼─────────┼─────────┼────────┼──────────┼────────┼─────────────┼─────────┼───────┼─────────┤\n" +
                        "│(1)│   (2)   │   (2а)  │   (2б)  │   (2в)  │   (3)    │   (4)   │   (5)    │   (5а)   │  (5б)    │   (6)    │   (7)   │  (8а)   │  (8б)  │   (9а)   │  (9б)  │    (10)     │  (11а)  │ (11б) │  (12)   │\n" +
                        "├───┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼──────────┼──────────┼──────────┼──────────┼─────────┼─────────┼────────┼──────────┼────────┼─────────────┼─────────┼───────┼─────────┤";




private var Rep;

FILE BILSFJOURNAL ("bilsfjournal.dbt");


/*разделить ИНН+КПП, хранящееся в системе как одна строка <ИНН>/<КПП> на две строки*/
MACRO splitINN_KPP(fullINN:string, INN:string, KPP:string)
	var parts:TArray;
	INN = "";
	KPP = "";
	parts = split(fullINN, "/");
	if(parts.Size > 0)
		INN = parts.Value(0);
		if(parts.Size > 1)
			KPP = join(subArray(parts, 1), "/");
		end;
	end;
	SetParm(1, INN);
	SetParm(2, KPP);
END;

MACRO GetPeriod(dt1:date, dt2:date, year: integer)
	var day1, mon1, year1;
	var day2, mon2, year2;
	datesplit(dt1, day1, mon1, year1);  
	datesplit(dt2, day2, mon2, year2);  

	if(year1 != year2)
		return "";
	end;

	SetParm(2, year1);

	if(mon1 == mon2)
		return MonName(mon1);
	end;

	if((mon1<=3) AND (mon2<=3))
		return "I - квартал";
	end; 

	if((mon1>=4) AND (mon2>=4) AND (mon1<=6) AND (mon2<=6))
		return "II - квартал";
	end; 

	if((mon1>=7) AND (mon2>=7) AND (mon1<=9) AND (mon2<=9) )
		return "III - квартал";
	end; 

	if((mon1>=10) AND (mon2>=10) AND (mon1<=12) AND (mon2<=12) )
		return "IV - квартал";
	end; 

	return "";
END;

macro PrintFTableDistr(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS )
	Rep.AddPrintCell( "Всего ",              Rep.GetColWidthTable(0)+Rep.GetColWidthTable(1)+Rep.GetColWidthTable(2)+Rep.GetColWidthTable(3)+Rep.GetColWidthTable(4)+Rep.GetColWidthTable(5)+Rep.GetColWidthTable(6)+Rep.GetColWidthTable(7)+7, NULL, "l"  );
	Rep.AddPrintCell( TotalWithNDS     ,     Rep.GetColWidthTable(8),  NULL, "r" );
	Rep.AddPrintCell( TotalAmount18    ,     Rep.GetColWidthTable(9),  NULL, "r" );
	Rep.AddPrintCell( TotalNDSAmount18 ,     Rep.GetColWidthTable(10), NULL, "r" );
	Rep.AddPrintCell( TotalAmount10    ,     Rep.GetColWidthTable(11), NULL, "r" );
	Rep.AddPrintCell( TotalNDSAmount10 ,     Rep.GetColWidthTable(12), NULL, "r" );
	Rep.AddPrintCell( TotalAmount0     ,     Rep.GetColWidthTable(13), NULL, "r" );
	Rep.AddPrintCell( TotalAmount20    ,     Rep.GetColWidthTable(14), NULL, "r" );
	Rep.AddPrintCell( TotalNDSAmount20 ,     Rep.GetColWidthTable(15), NULL, "r" );
	Rep.AddPrintCell( TotalFree        ,     Rep.GetColWidthTable(16), NULL, "r" );
	Rep.AddStr();
	Rep.AddPrintCell( " ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
	Rep.AddStr();
end;

macro PrintTotalTableDistr(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS )
    Rep.AddPrintCell( "Итого ",              Rep.GetColWidthTable(0)+Rep.GetColWidthTable(1)+Rep.GetColWidthTable(2)+Rep.GetColWidthTable(3)+Rep.GetColWidthTable(4)+Rep.GetColWidthTable(5)+Rep.GetColWidthTable(6)+Rep.GetColWidthTable(7)+7, NULL, "l"  );
    Rep.AddPrintCell( TotalWithNDS     ,     Rep.GetColWidthTable(8),  NULL, "r" );
    Rep.AddPrintCell( TotalAmount18    ,     Rep.GetColWidthTable(9),  NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount18 ,     Rep.GetColWidthTable(10), NULL, "r" );
    Rep.AddPrintCell( TotalAmount10    ,     Rep.GetColWidthTable(11), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount10 ,     Rep.GetColWidthTable(12), NULL, "r" );
    Rep.AddPrintCell( TotalAmount0     ,     Rep.GetColWidthTable(13), NULL, "r" );
    Rep.AddPrintCell( TotalAmount20    ,     Rep.GetColWidthTable(14), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount20 ,     Rep.GetColWidthTable(15), NULL, "r" );
    Rep.AddPrintCell( TotalFree        ,     Rep.GetColWidthTable(16), NULL, "r" );
    Rep.AddStr();
end;

macro PrintFTableDistrOld(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS )
    Rep.AddPrintCell( "Всего ",              Rep.GetColWidthTable(0)+Rep.GetColWidthTable(1)+Rep.GetColWidthTable(2)+Rep.GetColWidthTable(3)+Rep.GetColWidthTable(4)+4, NULL, "l"  );
    Rep.AddPrintCell( TotalWithNDS     ,     Rep.GetColWidthTable(5),  NULL, "r" );
    Rep.AddPrintCell( TotalAmount18    ,     Rep.GetColWidthTable(6),  NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount18 ,     Rep.GetColWidthTable(7),  NULL, "r" );
    Rep.AddPrintCell( TotalAmount10    ,     Rep.GetColWidthTable(8),  NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount10 ,     Rep.GetColWidthTable(9),  NULL, "r" );
    Rep.AddPrintCell( TotalAmount0     ,     Rep.GetColWidthTable(10), NULL, "r" );
    Rep.AddPrintCell( TotalAmount20    ,     Rep.GetColWidthTable(11), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount20 ,     Rep.GetColWidthTable(12), NULL, "r" );
    Rep.AddPrintCell( TotalFree        ,     Rep.GetColWidthTable(13), NULL, "r" );
    Rep.AddStr();
    Rep.AddPrintCell( " ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();
end;

macro PrintTotalTableDistrOld(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS )
    Rep.AddPrintCell( "Итого ",              Rep.GetColWidthTable(0)+Rep.GetColWidthTable(1)+Rep.GetColWidthTable(2)+Rep.GetColWidthTable(3)+Rep.GetColWidthTable(4)+4, NULL, "l"  );
    Rep.AddPrintCell( TotalWithNDS     ,     Rep.GetColWidthTable(5),  NULL, "r" );
    Rep.AddPrintCell( TotalAmount18    ,     Rep.GetColWidthTable(6),  NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount18 ,     Rep.GetColWidthTable(7),  NULL, "r" );
    Rep.AddPrintCell( TotalAmount10    ,     Rep.GetColWidthTable(8),  NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount10 ,     Rep.GetColWidthTable(9),  NULL, "r" );
    Rep.AddPrintCell( TotalAmount0     ,     Rep.GetColWidthTable(10), NULL, "r" );
    Rep.AddPrintCell( TotalAmount20    ,     Rep.GetColWidthTable(11), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount20 ,     Rep.GetColWidthTable(12), NULL, "r" );
    Rep.AddPrintCell( TotalFree        ,     Rep.GetColWidthTable(13), NULL, "r" );
    Rep.AddStr();
end;

/* Печать заголовка реестра */
macro PrintBilBookDistr( rs : RsdRecordset, TotalAmount18 : @money, TotalNDSAmount18 : @money, TotalAmount10 : @money, TotalNDSAmount10 : @money, TotalAmount0 : @money, TotalAmount20 : @money, TotalNDSAmount20 : @money, TotalFree : @money, AllTotalWithNDS : @money)
  FILE bilfactura("bilfactura.dbt") key 4;
  FILE bilfacturaSecond("bilfactura.dbt") key 4;

  var BookEntryID      : integer;
  var CDate            : string;
  var FacturaNumber    : string;
  var SrcFacturaNumber : string;
  var SrcCDate         : date;
  var CDate_Corr       : string;
  var SrcCDate_Corr    : string;
  var Number_Corr      : string;
  var SrcNumber_Corr   : string;
  var ReceiverName     : string;
  var ReceiverINN      : string;
  var PayDate          : date;
  var TotalWithNDS     : money;
  var NDSRate;
  var INN :string, KPP :string;
  var rst : RsdRecordset;
  var sqlString = "";
  var ZeroDate = date( 0, 0, 0 );
  var FcDirection = Direction; // по умолчанию направление СФ совпадает с направлением ЗК
  //TAM 6.11.11 I-00081740-2  из rs необходимо по знаечнию сортировки опредлеть имя схемы
  var schem_sort, schema = "";

  var Amount18 : money, NDSAmount18 : money, Amount10 : money, NDSAmount10 : money, Amount0 : money, NDSAmount0 : money, Amount20 : money, NDSAmount20 : money, Free : money ;
  Amount18 = $0;  NDSAmount18 = $0; Amount10 = $0;  NDSAmount10 = $0; Amount0 = $0; NDSAmount0 = $0; Amount20 = $0;  NDSAmount20 = $0; Free = $0;
  var strAmount18, strNDSAmount18, strAmount10, strNDSAmount10, strAmount0, strNDSAmount0, strAmount20, strNDSAmount20, strFree ;
  var Assignment = 0;
  var RevertSum = false;
  var modifyRecord:bool = false;
  var IsAnnul = 0;


  var num, i, IsCDateNULL, IsFacturaNumberNULL, IsTotalWithNDSNULL, IsNDSRateNULL, IsAssignmentNULL, IsSrcFacturaNumberNULL, IsSrcCDateNULL, IsFcDirectionNULL; 

  
  rs.value("T_CREATIONDATE"  , IsCDateNULL           );
  rs.value("T_FACTURANUMBER" , IsFacturaNumberNULL   );
  rs.value("CalcTotalWithNds", IsTotalWithNDSNULL    );
  rs.value("T_ASSIGNMENT"    , IsAssignmentNULL      );
  rs.value("SrcFacturaNumber", IsSrcFacturaNumberNULL);
  rs.value("SrcCreationDate" , IsSrcCDateNULL        );
  rs.value("T_DIRECTION"     , IsFcDirectionNULL     );

  IsAnnul = rs.value("IsAnnul");

	//TAM 6.11.11 I-00081740-2 
	if(UnionBook)
		schem_sort = rs.value("QUERY_ID");
		if (schem_sort == 2)
			schema = "rsbank_evv";
		elif (schem_sort == 4)
			schema = "rsbank_evu";
		elif (schem_sort == 5)
			schema = "rsbank_evvor";
		elif (schem_sort == 6)
			schema = "RSBANK_EVSTA_02";
		else
			schema = "";
		end;
	end;

  BookEntryID    = rs.value("T_BOOKENTRYID"     );    
  if(IsCDateNULL != true)
    CDate        = rs.value("T_CREATIONDATE"  );
  else
    CDate        =date(0,0,0);
  end;


  if(IsFacturaNumberNULL != true)
    FacturaNumber = rs.value("T_FACTURANUMBER" );
  else
    FacturaNumber = "";
  end;

  if(IsSrcFacturaNumberNULL != true)
    SrcFacturaNumber = rs.value("SrcFacturaNumber" );
  else
    SrcFacturaNumber = "";
  end;

  if(IsSrcCDateNULL != true)
    SrcCDate        = rs.value("SrcCreationDate"  );
  else
    SrcCDate        = date(0,0,0);
  end;

  if(IsAssignmentNULL != true)
    Assignment = rs.value("T_ASSIGNMENT" );
  else
    Assignment = 0;
  end;

  if(IsFcDirectionNULL != true)
    FcDirection = rs.value("T_DIRECTION");
  else
    FcDirection = Direction;
  end;

  ReceiverName = rs.value("T_RECEIVERNAME"  );
  ReceiverINN  = rs.value("T_RECEIVERINN"   );
  PayDate      = rs.value("T_PAYDATE"       );

  if(IsTotalWithNDSNULL != true)
   TotalWithNDS = rs.value("CalcTotalWithNds"  );
  else 
   TotalWithNDS = $0;
  end;

    SrcCDate          = date(rs.value("t_CreationDate"));  
    CDate             = "";
    SrcFacturaNumber  = rs.value("t_FacturaNumber");   
    FacturaNumber     = "";
                                    
    if(Assignment == OBJSFASSIGNMENT_MODIFY) // Исправление 

      bilfactura.facturaID = rs.value("srcFacturaID");
      if(getEQ(bilfactura))
        if(bilfactura.Assignment == OBJSFASSIGNMENT_RECALC)
          modifyRecord = true;    
        end;  
      end;                                     
    end; 

    if((Assignment == OBJSFASSIGNMENT_RECALC) AND (modifyRecord)) // Пересчет после исправления
      bilfacturaSecond.facturaID = bilfactura.SourcefacturaID;
      if(getEQ(bilfacturaSecond))
        SrcFacturaNumber = bilfacturaSecond.facturaNumber; 
        SrcCDate         = bilfacturaSecond.creationDate;
      end; 
    elif(Assignment == OBJSFASSIGNMENT_RECALC) // Пересчет
      SrcFacturaNumber = rs.value("srcfacturanumber");
      FacturaNumber    = rs.value("t_FacturaNumber");
      
      if(rs.value("srcCorrectionNum") == 0)
        SrcCDate  = date(rs.value("srcCreationDate"));
        CDate     = date(rs.value("t_CreationDate"));
      end;                                  
    end;
    
    if(rs.value("SrcCorrectionNum"))
      SrcNumber_Corr  = rs.value("SrcCorrectionNum");
      SrcCDate_Corr   = date(rs.value("SrcCreationDate"));
    elif(rs.value("CorrectionNum"))
      SrcNumber_Corr = rs.value("CorrectionNum");
      SrcCDate_Corr  = date(rs.value("t_CreationDate"));
    else
      SrcNumber_Corr = SrcCDate_Corr = "";
    end;

    if(Assignment == OBJSFASSIGNMENT_RECALC)
      Number_Corr = rs.value("CorrectionNum");
      CDate_Corr  = date(rs.value("t_CreationDate"));
    else
      Number_Corr = CDate_Corr = "";
    end;
  
    /*if(rs.value("SrcCorrectionNum"))
      SrcCNumber_Corr  = rs.value("SrcCorrectionNum");
      SrcCDate_Corr    = rs.value("SrcCreationDate");
    elif(rs.value("CorrectionNum"))
      CNumber_Corr  = rs.value("CorrectionNum");
      CDate_Corr    = rs.value("t_CreationDate");
    else
      CDate_Corr    = CNumber_Corr = "";
    end; */

	//TAM 6.11.11 I-00081740-2 
	if (schema != "")
		sqlString = "   SELECT T_NDSRATE, SUM(T_AMOUNT), SUM(T_NDSAMOUNT), SUM(T_AMOUNTWITHNDS)" +
		" FROM " + schema + "." + "DBKENTSUM_DBT  WHERE T_BOOKENTRYID = " + BookEntryID +" AND T_FIID = 0  GROUP BY T_NDSRATE" ;
	else 
		sqlString = "   SELECT T_NDSRATE, SUM(T_AMOUNT), SUM(T_NDSAMOUNT), SUM(T_AMOUNTWITHNDS)" +
		" FROM DBKENTSUM_DBT  WHERE T_BOOKENTRYID = " + BookEntryID +" AND T_FIID = 0  GROUP BY T_NDSRATE" ;
	end;


rst = RsdRecordset( sqlString );


  while( rst.moveNext() )
     rst.value("T_NDSRATE",IsNDSRateNULL );
   
     if(IsNDSRateNULL != true)
       NDSRate = rst.value("T_NDSRATE" );

       if (NDSRate == -1)
         Free = rst.value("SUM(T_AMOUNT)");
       end;

       if(NDSRate == 18)
         Amount18 = rst.value("SUM(T_AMOUNT)"  );
         NDSAmount18 = rst.value("SUM(T_NDSAMOUNT)");
       end;

       if(NDSRate == 10)
         Amount10 = rst.value("SUM(T_AMOUNT)"  );
         NDSAmount10 = rst.value("SUM(T_NDSAMOUNT)");
       end;

       if(NDSRate == 0)
         Amount0 = rst.value("SUM(T_AMOUNT)"  );
       end;

       if(NDSRate == 20)
         Amount20 = rst.value("SUM(T_AMOUNT)"  );
         NDSAmount20 = rst.value("SUM(T_NDSAMOUNT)");
       end;

     else
       Free = rst.value("SUM(T_AMOUNT)");
     end;
  end;

  if( OldTemplate == false)
    if(IsAnnul == 1)
      Amount18     = -Amount18    ;
      NDSAmount18  = -NDSAmount18 ;
      Amount10     = -Amount10    ;
      NDSAmount10  = -NDSAmount10 ;
      Amount0      = -Amount0     ;
      Amount20     = -Amount20    ; 
      NDSAmount20  = -NDSAmount20 ;
      Free         = -Free        ;
      TotalWithNDS = -TotalWithNDS;
    end;

    if(Assignment == OBJSFASSIGNMENT_PREPAYMENT) // Аванс 
      Amount0  = $0;
      Amount18 = $0; 
      Amount10 = $0; 
      Amount20 = $0; 
      Free = $0; 
    elif((Assignment == OBJSFASSIGNMENT_RECALC) AND (FcDirection != Direction)) // Пересчет
      Amount18     = -Amount18    ;
      NDSAmount18  = -NDSAmount18 ;
      Amount10     = -Amount10    ;
      NDSAmount10  = -NDSAmount10 ;
      Amount0      = -Amount0     ;
      Amount20     = -Amount20    ; 
      NDSAmount20  = -NDSAmount20 ;
      Free         = -Free        ;
      TotalWithNDS = -TotalWithNDS;
    end;
  end;

//  println("OldTemplate = ", OldTemplate);
//  println("Assignment  = ", Assignment);
//  println("FcDirection = ", FcDirection);
//  println("Direction   = ", Direction);


  TotalAmount18     =  TotalAmount18     +  Amount18     ;
  TotalNDSAmount18  =  TotalNDSAmount18  +  NDSAmount18  ;
  TotalAmount10     =  TotalAmount10     +  Amount10     ;
  TotalNDSAmount10  =  TotalNDSAmount10  +  NDSAmount10  ;
  TotalAmount0      =  TotalAmount0      +  Amount0      ;
  TotalAmount20     =  TotalAmount20     +  Amount20     ;
  TotalNDSAmount20  =  TotalNDSAmount20  +  NDSAmount20  ;
  TotalFree         =  TotalFree         +  Free         ;
  AllTotalWithNDS   =  AllTotalWithNDS   +  TotalWithNDS ; 


  if( (OldTemplate == false) AND (Assignment == OBJSFASSIGNMENT_PREPAYMENT))
      strAmount0  = "";
      strAmount18 = ""; 
      strAmount10 = ""; 
      strAmount20 = ""; 
      strFree = ""; 
  else
      strAmount0  = Amount0;
      strAmount18 = Amount18; 
      strAmount10 = Amount10; 
      strAmount20 = Amount20; 
      strFree     = Free    ; 

      if(OldTemplate == true)
        if(Assignment == OBJSFASSIGNMENT_PREPAYMENT)
          if((NDSAmount18 > $0) OR (NDSAmount18 < $0))
            strAmount18 = "-";
          end;

          if((NDSAmount10 > $0) OR (NDSAmount10 < $0))
            strAmount10 = "-";
          end;
        end;
      end;
  end;

  var strDate ; 
  if(PayDate == ZeroDate)
    if(OldTemplate == true)
      strDate = "-";
    else
      strDate = "";
    end;
  else
    strDate = PayDate;
  end;

  splitINN_KPP(ReceiverINN, INN, KPP);

  
  if((OldTemplate == true) AND (ReceiverINN == ""))
    INN = "-";
    KPP = "-";
  end;

  if (TypeBook == TYPEBOOK_BASE )
    if( OldTemplate == true)
      Rep.AddPrintCell( CDate + "\n" +FacturaNumber,      0, NULL, "c" );
    else
      if(SrcFacturaNumber != "")
        Rep.AddPrintCell( SrcCDate + "\n" +SrcFacturaNumber,      0, NULL, "c" );
      else
        Rep.AddPrintCell( CDate + "\n" +FacturaNumber,      0, NULL, "c" );
      end;
    end;

    if( OldTemplate == false) //новый вид шаблона
      Rep.AddPrintCell( SrcCDate_Corr + "\n" + SrcNumber_Corr,  0, NULL, "c" );  // 1А
      //if(SrcFacturaNumber != "")
        //Rep.AddPrintCell( CDate + "\n" + FacturaNumber,       0, NULL, "c" ); // 1Б
      //else
      Rep.AddPrintCell( FacturaNumber + "\n" + CDate,           0, NULL, "c" );  // 1Б
      //end;
      Rep.AddPrintCell( Number_Corr + "\n" + CDate_Corr,        0, NULL, "c" );  // 1В
    end;
    Rep.AddPrintCell( ReceiverName,                     0, NULL, "c" );
    Rep.AddPrintCell( INN,                              0, NULL, "c" );
    Rep.AddPrintCell( KPP,                              0, NULL, "c" );
    Rep.AddPrintCell( strDate,                          0, NULL, "c" );
    Rep.AddPrintCell( TotalWithNDS ,                    0, NULL, "r" );
    Rep.AddPrintCell( strAmount18 ,                     0, NULL, "r" );
    Rep.AddPrintCell( NDSAmount18 ,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount10 ,                     0, NULL, "r" );
    Rep.AddPrintCell( NDSAmount10 ,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount0  ,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount20 ,                     0, NULL, "r" );
    Rep.AddPrintCell( NDSAmount20 ,                     0, NULL, "r" );
    Rep.AddPrintCell( strFree     ,                     0, NULL, "r" );
    Rep.AddStr();                                          
  end;

end;                                                     

//Класс для ссылок к схемам 10101(debug)
private Class TSchemaReferences(StrFromReg :string, RootNodeName :string)
Var
	NodeName = TArray,
	UserName = TArray,
	DBName = TArray,
	Sort_ = TArray,
	CheckGrant = TArray,
	RegStr :string;

private var ArrOfTablesUsed = TArray;
ArrOfTablesUsed = makeArray("dbilbookentry_dbt",
                            "dbilfactura_dbt",
                            "dbkentsum_dbt");

//Конструктор по умолчанию
 NodeName(NodeName.Size()) = RootNodeName;
 UserName(UserName.Size()) = "";
 DBName(DBName.Size()) = "";
 Sort_(Sort_.Size()) = "1";
 CheckGrant(CheckGrant.Size()) = "1";
 RegStr = StrFromReg;
//Конструктор по умолчанию


 private macro CheckGrantToTable(UserName_, ArrOfTablesUsed_) :integer
	var Query = "", 
	i = 0,
	DataSet :RsdRecordset,
	Params :TArray;
	while( i < ArrOfTablesUsed_.Size())
		Query =" SELECT 1 FROM dba_tab_privs P " +                           
			"  WHERE P.PRIVILEGE = 'SELECT' " +
			"   AND GRANTEE = USER " +
			"   AND P.GRANTOR = UPPER(:USERNAME_1) " +
			"   AND P.TABLE_NAME = UPPER(:TABLENAME) " +
			"   OR USER = UPPER(:USERNAME_2) ";
		Params = makeArray( SQLParam( "USERNAME_1" , UserName_),
		SQLParam( "TABLENAME" , ArrOfTablesUsed_[i]),
		SQLParam( "USERNAME_2" , UserName_));
		DataSet = execSQLselect( Query, Params, true );
	//	msgbox(Query + "  -  " + ArrOfTablesUsed_[i]  + "  -  " + UserName_);
		if ( (not DataSet ) or ( not DataSet.moveNext()))
			return 0;
		end;
		i = i + 1;
	end;
	return 1;
 end;


 macro AddAllRef; //заполняем свойства из реестра
	//Запрос в реестре головного узла
	var Query = "",
	DataSet, DataSet1 :RsdRecordset,
	Params :TArray;


	Query = " SELECT REG.T_KEYID " +
		" FROM (SELECT T.T_KEYID, SYS_CONNECT_BY_PATH(T.T_NAME, '\\') FLD, LEVEL LV, T.T_DESCRIPTION " +
		"       FROM dregparm_dbt T " +
		"            START WITH T.T_PARENTID = 0 " +
		"            CONNECT BY PRIOR T.T_KEYID = T.T_PARENTID) REG, " +
		"      dregval_dbt VAL " +
		" WHERE REG.FLD LIKE :PARM_1 " +
		"  AND REG.FLD NOT LIKE :PARM_2 " +
		"  AND VAL.T_KEYID=REG.T_KEYID ";

	Params = makeArray( SQLParam( "Parm_1" , "\\" + RegStr + "\\%" ),
	SQLParam( "Parm_2" , "\\" + RegStr + "\\%\\%" ));
	DataSet = execSQLselect( Query, Params , true  );


	while ( ( DataSet ) and ( DataSet.moveNext())) //Идём по найденым ключам
		if (DataSet and (ValType(DataSet.value(0)) != 26))
			// запрос данных по ключам
			Query = " SELECT P.T_NAME, UTL_RAW.CAST_TO_VARCHAR2(V.T_FMTBLOBDATA_XXXX) T_VALUE,Q.T_NAME " +
				" FROM dregparm_dbt P, dregval_dbt V, dregparm_dbt Q " +
				" WHERE P.T_PARENTID = :Parm_1 " +
				"  AND P.T_KEYID = V.T_KEYID " +
				"  AND Q.T_KEYID = P.T_PARENTID ";
			Params = makeArray( SQLParam( "Parm_1" , DataSet.value(0) ));
			DataSet1 = execSQLselect( Query, Params , true  );

			while ( ( DataSet1 ) and ( DataSet1.moveNext())) // заполняем свойства
				if(DataSet1.value(0) == "SORT")
					if ((ValType(DataSet1.value(1)) != 26))
						Sort_(Sort_.Size()) = DataSet1.value(1);
					else
						Sort_(Sort_.Size()) = "1";
					end;
				elif(DataSet1.value(0) == "USERNAME")
					if ((ValType(DataSet1.value(1)) != 26))
						UserName(UserName.Size()) = DataSet1.value(1);
					else
						UserName(UserName.Size()) = "-1";
					end;
					NodeName(NodeName.Size()) = DataSet1.value(2);
					DBName(DBName.Size()) = "";
					if ( not CheckGrantToTable(UserName(UserName.Size()-1),ArrOfTablesUsed)) //Проверка доступа по ссылкам к таблице
						println("Нет доступа к данным узла " + NodeName(NodeName.Size()-1));
						CheckGrant(CheckGrant.Size()) = 0;
					else
						CheckGrant(CheckGrant.Size()) = 1;
					end;
				end;
			end;

		end;
	end;
	//Запрос в реестре головного узла
 end;



end; // Класс для ссылок к схема

macro  PrintBBookDistr(BBook)
   var TemplateName = "", sqlString, rs, count, i,cmd, cmd2, delim, sqlStringAdd;
   record Party(party);
   /*var TotalAmount18 : money, TotalNDSAmount18 : money, TotalAmount10 : money, TotalNDSAmount10 : money, TotalAmount0 : money, TotalAmount20 : money, TotalNDSAmount20 : money, TotalFree : money , TotalWithNDS : money ;*/
   var EmptyStr = "                                                                                                   ";
   TotalAmount18 = $0; TotalNDSAmount18 = $0; TotalAmount10 = $0; TotalNDSAmount10 = $0; TotalAmount0 = $0; TotalAmount20 = $0; TotalNDSAmount20 = $0; TotalFree = $0; TotalWithNDS = $0;

	//переносим в свойство класса ссылки на удаленные схемы
	var ArrOfRegParam = TSchemaReferences("PRBB\\БД", {Name_Bank});
	if ( UnionBook )
		ArrOfRegParam.AddAllRef;
	end;
	//переносим в свойство класса ссылки на удаленные схемы

   ПолучитьСубъекта ({OurBank}, Party ); 

  if (TypeBook == TYPEBOOK_BASE )
    if(OldTemplate == true)
      Rep.AddPrintCell( "Приложение № 3", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
      Rep.AddPrintCell( "к Правилам ведения журналов учета полученных и выставленных счетов-фактур,", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
      Rep.AddPrintCell( "книг покупок и книг продаж при расчетах по налогу на добавленную стоимость,", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
      Rep.AddPrintCell( "утвержденным постановлением Правительства РФ от 2 декабря 2000 г. № 914", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
      Rep.AddPrintCell( "(в ред. постановления Правительства РФ от 16 февраля 2004 г. № 84)", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
    end;

    Rep.AddPrintCell( "КНИГА ПРОДАЖ", Rep.GetHeaderWidth(), 0, "c:" + FontTitle, REP_ELEM_STR);
    Rep.AddStr();
    Rep.AddPrintCell( " ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();
    Rep.AddPrintCell( "Продавец:"+Party.Name, Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();   
    Rep.AddPrintCell( "Идентификационный номер и код причины постановки ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();   
    Rep.AddPrintCell( "на учет налогоплательщика-продавца " + ПолучитьКодСубъекта( {OurBank}, PTCK_INN ), Rep.GetHeaderWidth(), 0, "l" , REP_ELEM_STR);
    Rep.AddStr();
    Rep.AddPrintCell( "Продажа за период с " + string(date1) + " по "+string(date2), Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();
    Rep.AddPrintCell( " ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();
  end;



  sqlString = "SELECT COUNT(1) FROM DBILBOOKENTRY_DBT BILBOOKENTRY "+acssql_from+ " WHERE BILBOOKENTRY.T_REGDATE BETWEEN to_date('" + date1 +
     "', 'dd.mm.yyyy') AND to_date( '"+ date2 +"', 'dd.mm.yyyy') AND BILBOOKENTRY.T_DIRECTION = "+ Direction +
     " AND " + acssql_query; 

  if(PrnDepartment != 0)
      sqlString = sqlString + " AND BILBOOKENTRY.T_DEPARTMENT = " + PrnDepartment;
  end;


  cmd = RsdCommand( sqlString );
  cmd.NullConversion = true;
  rs = RsdRecordset( cmd );

//  rs = RsdRecordset( sqlString );

  rs.moveNext();

  count = rs.value(0);

  if( count == 0 )

  else
		i = 0;
		if ( UnionBook )
			sqlString = "SELECT * FROM (";
			while( i < (ArrOfRegParam.UserName.Size())) //цикл по собранным в свойстве класса ссылкам
				if ( ArrOfRegParam.CheckGrant[i] ) //добавляем строки запроса если проверен доступ к таблицам
					//msgbox(ArrOfRegParam.CheckGrant[i]);
					if ( i > 0 )
						sqlString = sqlString + " UNION ";
						delim = ".";             
						sqlStringAdd = "";
					else
						delim = "";
						sqlStringAdd = " AND BE.T_BOOKID = "+ BookID; // не учитывать номер книги для филиалов, для головы учитывать
					end;

					// А.Киселев 18.03.2011 считаем сумму CalcTotalWithNds по реальным оплатам наряд № I-00015018 для группы Life

					/*     sqlString = " SELECT BE.T_BOOKENTRYID, BE.t_ReceiverName, BE.t_ReceiverINN, BE.t_PayDate, BF.t_CreationDate, BF.t_FacturaNumber, RSB_FIInstr.ConvSum(bf.t_totalwithnds, bf.t_fiid, 0,  decode(be.t_paydate,TO_DATE('01 01 0001','DD MM YYYY'), be.t_regdate, be.t_paydate  ) ) CalcTotalWithNds, bf.t_fiid, bf.t_Assignment" +
					" FROM DBILBOOKENTRY_DBT BE, DBILFACTURA_DBT BF" ;
					sqlString = sqlString + acssql_from + 
					" WHERE BE.T_REGDATE BETWEEN to_date( '"+date1+"', 'dd.mm.yyyy') AND to_date( '"+date2+"', 'dd.mm.yyyy')" +
					" AND BE.T_BOOKID = "+ BookID +
					" AND BE.T_DIRECTION = "+ Direction +
					" AND " + acssql_query ;
					*/

					sqlString = sqlString +
					" SELECT BE.T_BOOKENTRYID, BE.t_ReceiverName, BE.t_ReceiverINN, BE.t_PayDate, BF.t_CreationDate, BF.t_FacturaNumber, " +
					" RSB_FIInstr.ConvSum( " +
					" DECODE((SELECT NVL(SUM(Z.T_AMOUNTWITHNDS),0) FROM " + ArrOfRegParam.UserName[i] + delim + "dbkentsum_dbt Z WHERE Z.T_BOOKENTRYID = BE.T_BOOKENTRYID ), 0, BF.T_TOTALWITHNDS , " +
					" (SELECT SUM(Z.T_AMOUNTWITHNDS) FROM " + ArrOfRegParam.UserName[i] + delim + "dbkentsum_dbt Z WHERE Z.T_BOOKENTRYID = BE.T_BOOKENTRYID )  ) " +
					" , bf.t_fiid, 0,  decode(be.t_paydate,TO_DATE('01 01 0001','DD MM YYYY'), be.t_regdate, be.t_paydate  ) " + 
					"                    ) CalcTotalWithNds, bf.t_fiid, bf.t_Assignment, " +
					ArrOfRegParam.Sort_[i] + " AS QUERY_ID " +  
					" FROM " + ArrOfRegParam.UserName[i] + delim + "dbilbookentry_dbt BE, " +
					ArrOfRegParam.UserName[i] + delim + "dbilfactura_dbt BF " +
					" WHERE BE.T_REGDATE BETWEEN to_date( '"+date1+"', 'dd.mm.yyyy') AND to_date( '"+date2+"', 'dd.mm.yyyy') " +
					sqlStringAdd +
					" AND BE.T_DIRECTION = "+ Direction +
					" AND " + acssql_query ;

					// А.Киселев 18.03.2011 считаем сумму CalcTotalWithNds по реальным оплатам наряд № I-00015018 для группы Life
					if(PrnDepartment != 0)
						//        sqlString = sqlString + " AND BE.T_DEPARTMENT = " + PrnDepartment;
					end;
					sqlString = sqlString + 	" AND BE.T_FACTURAID = BF.T_FACTURAID(+)" ;
				end;
				i = i + 1;
			end;

			//Kozina упорядочить по первому столбцу I-117000
			//  sqlString = sqlString + " order by BF.t_CreationDate, BF.t_FacturaNumber ";
			//     sqlString = sqlString + " order by BF.t_CreationDate, CalcTotalWithNds, BF.t_FacturaNumber "; //А.Киселев 18.03.2011
			sqlString = sqlString + ")  ORDER BY t_CreationDate, QUERY_ID, CalcTotalWithNds, t_FacturaNumber ";  //А.Киселев 18.03.2011
		else
			// А.Киселев 18.03.2011 считаем сумму CalcTotalWithNds по реальным оплатам наряд № I-00015018 для группы Life
			/*     sqlString = " SELECT BE.T_BOOKENTRYID, BE.t_ReceiverName, BE.t_ReceiverINN, BE.t_PayDate, BF.t_CreationDate, BF.t_FacturaNumber, RSB_FIInstr.ConvSum(bf.t_totalwithnds, bf.t_fiid, 0,  decode(be.t_paydate,TO_DATE('01 01 0001','DD MM YYYY'), be.t_regdate, be.t_paydate  ) ) CalcTotalWithNds, bf.t_fiid, bf.t_Assignment" +
			" FROM DBILBOOKENTRY_DBT BE, DBILFACTURA_DBT BF" +
			" WHERE BE.T_REGDATE BETWEEN to_date( '"+date1+"', 'dd.mm.yyyy') AND to_date( '"+date2+"', 'dd.mm.yyyy')" +
			" AND BE.T_BOOKID = "+ BookID +
			" AND BE.T_DIRECTION = "+ Direction +
			" AND " + acssql_query ;
			*/

			sqlString = " SELECT BE.T_BOOKENTRYID, BE.t_ReceiverName, BE.t_ReceiverINN, BE.t_PayDate, BF.t_CreationDate, BF.t_FacturaNumber, " +
			" RSB_FIInstr.ConvSum( " +
			" DECODE((SELECT NVL(SUM(Z.T_AMOUNTWITHNDS),0) FROM dbkentsum_dbt Z WHERE Z.T_BOOKENTRYID = BE.T_BOOKENTRYID ), 0, BF.T_TOTALWITHNDS , " +
			" (SELECT SUM(Z.T_AMOUNTWITHNDS) FROM dbkentsum_dbt Z WHERE Z.T_BOOKENTRYID = BE.T_BOOKENTRYID )  ) " +
			" , bf.t_fiid, 0,  decode(be.t_paydate,TO_DATE('01 01 0001','DD MM YYYY'), be.t_regdate, be.t_paydate  ) " + 
			"                    ) CalcTotalWithNds, bf.t_fiid, bf.t_Assignment" +
			" FROM DBILBOOKENTRY_DBT BE, DBILFACTURA_DBT BF " +
			" WHERE BE.T_REGDATE BETWEEN to_date( '"+date1+"', 'dd.mm.yyyy') AND to_date( '"+date2+"', 'dd.mm.yyyy')" +
			" AND BE.T_BOOKID = "+ BookID +
			" AND BE.T_DIRECTION = "+ Direction +
			" AND " + acssql_query ;

			// А.Киселев 18.03.2011 считаем сумму CalcTotalWithNds по реальным оплатам наряд № I-00015018 для группы Life
			if(PrnDepartment != 0)
				sqlString = sqlString + " AND BE.T_DEPARTMENT = " + PrnDepartment;
			end;

			sqlString = sqlString + 
			" AND BE.T_FACTURAID = BF.T_FACTURAID(+)" ;
			//Kozina упорядочить по первому столбцу I-117000
			//  sqlString = sqlString + " order by BF.t_CreationDate, BF.t_FacturaNumber ";
			sqlString = sqlString + " order by BF.t_CreationDate, CalcTotalWithNds, BF.t_FacturaNumber "; //А.Киселев 18.03.2011
		end;

		//sqlString = sqlString + " AND BE.T_FACTURAID = BF.T_FACTURAID(+)" ;		// ASV Если что то с запросом курить здесь
		//sqlString = sqlString + " ORDER BY BE.T_REGDATE, BE.T_ENTRYNUMBER "; 	// ASV Если что то с запросом курить здесь
		//msgbox(sqlString);	
		//println(sqlString);
		cmd2 = RsdCommand( sqlString );
		cmd2.NullConversion = true;
		rs = RsdRecordset( cmd2 );

		i = 0;
		while( rs.moveNext() )
			PrintBilBookDistr( rs, @TotalAmount18, @TotalNDSAmount18, @TotalAmount10, @TotalNDSAmount10, @TotalAmount0, @TotalAmount20, @TotalNDSAmount20, @TotalFree, @TotalWithNDS );
				i = i + 1;
		end;
	end;

   if (TypeBook == TYPEBOOK_BASE )
     if(OldTemplate == true)
       PrintFTableDistrOld(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS );
     else
       PrintFTableDistr(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS );
     end;
     if(FIO_1 == "")
       FIO_1 = "__________________";
     end;

     Rep.AddPrintCell( Dolz_1 + " _______________     " + FIO_1, Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   
     Rep.AddPrintCell(SubStr(EmptyStr,1, strlen(Dolz_1)*2 )+"(подпись)              (ф.и.о.)  ", Rep.GetHeaderWidth(), 0, "l:ex_FS(t)", REP_ELEM_STR);  
     Rep.AddStr();   

     Rep.AddPrintCell( "Индивидуальный предприниматель " + "  _______________ " + "  ____________________", Rep.GetHeaderWidth(), 0, "l" , REP_ELEM_STR);
     Rep.AddStr();   
     Rep.AddPrintCell( "                                                      (подпись)                   (ф.и.о.)  ", Rep.GetHeaderWidth(), 0, "l:ex_FS(t)", REP_ELEM_STR); //
     Rep.AddStr();                                                         

     Rep.AddPrintCell( "Реквизиты свидетельства о государственной ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   
     Rep.AddPrintCell( "регистрации индивидуального предпринимателя " + " _____________________________ ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   

     Rep.AddPrintCell( "_______________________", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   

     Rep.AddPrintCell( "* До завершения расчетов по товарам (работам, услугам), отгруженным (выполненным, оказанным) до 1 января 2004 г.", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   

   end;
   
   return 0;
end;
/*-----------------------------------------------------------------------------------*/

macro PrintFTableObt(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS )
    Rep.AddPrintCell( "Всего ",              Rep.GetColWidthTable(0)+Rep.GetColWidthTable(1)+Rep.GetColWidthTable(2)+Rep.GetColWidthTable(3)+Rep.GetColWidthTable(4)+Rep.GetColWidthTable(5)+Rep.GetColWidthTable(6)+Rep.GetColWidthTable(7)+Rep.GetColWidthTable(8)+Rep.GetColWidthTable(9)+Rep.GetColWidthTable(10)+10, NULL, "l"  );
    Rep.AddPrintCell( TotalWithNDS     ,     Rep.GetColWidthTable(11), NULL, "r" );
    Rep.AddPrintCell( TotalAmount18    ,     Rep.GetColWidthTable(12), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount18 ,     Rep.GetColWidthTable(13), NULL, "r" );
    Rep.AddPrintCell( TotalAmount10    ,     Rep.GetColWidthTable(14), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount10 ,     Rep.GetColWidthTable(15), NULL, "r" );
    Rep.AddPrintCell( TotalAmount0     ,     Rep.GetColWidthTable(16), NULL, "r" );
    Rep.AddPrintCell( TotalAmount20    ,     Rep.GetColWidthTable(17), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount20 ,     Rep.GetColWidthTable(18), NULL, "r" );
    Rep.AddPrintCell( TotalFree        ,     Rep.GetColWidthTable(19), NULL, "r" );
    Rep.AddStr();
    Rep.AddPrintCell( " ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();
end;

macro PrintTotalTableObt(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS )
    Rep.AddPrintCell( "Итого ",              Rep.GetColWidthTable(0)+Rep.GetColWidthTable(1)+Rep.GetColWidthTable(2)+Rep.GetColWidthTable(3)+Rep.GetColWidthTable(4)+Rep.GetColWidthTable(5)+Rep.GetColWidthTable(6)+Rep.GetColWidthTable(7)+Rep.GetColWidthTable(8)+Rep.GetColWidthTable(9)+Rep.GetColWidthTable(10)+10, NULL, "l"  );
    Rep.AddPrintCell( TotalWithNDS     ,     Rep.GetColWidthTable(11), NULL, "r" );
    Rep.AddPrintCell( TotalAmount18    ,     Rep.GetColWidthTable(12), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount18 ,     Rep.GetColWidthTable(13), NULL, "r" );
    Rep.AddPrintCell( TotalAmount10    ,     Rep.GetColWidthTable(14), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount10 ,     Rep.GetColWidthTable(15), NULL, "r" );
    Rep.AddPrintCell( TotalAmount0     ,     Rep.GetColWidthTable(16), NULL, "r" );
    Rep.AddPrintCell( TotalAmount20    ,     Rep.GetColWidthTable(17), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount20 ,     Rep.GetColWidthTable(18), NULL, "r" );
    Rep.AddPrintCell( TotalFree        ,     Rep.GetColWidthTable(19), NULL, "r" );
    Rep.AddStr();
end;

macro PrintFTableObtOld(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS )
    Rep.AddPrintCell( "Всего ",              Rep.GetColWidthTable(0)+Rep.GetColWidthTable(1)+Rep.GetColWidthTable(2)+Rep.GetColWidthTable(3)+Rep.GetColWidthTable(4)+Rep.GetColWidthTable(5)+Rep.GetColWidthTable(6)+Rep.GetColWidthTable(7)+7, NULL, "l"  );
    Rep.AddPrintCell( TotalWithNDS     ,     Rep.GetColWidthTable(8),  NULL, "r" );
    Rep.AddPrintCell( TotalAmount18    ,     Rep.GetColWidthTable(9),  NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount18 ,     Rep.GetColWidthTable(10), NULL, "r" );
    Rep.AddPrintCell( TotalAmount10    ,     Rep.GetColWidthTable(11), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount10 ,     Rep.GetColWidthTable(12), NULL, "r" );
    Rep.AddPrintCell( TotalAmount0     ,     Rep.GetColWidthTable(13), NULL, "r" );
    Rep.AddPrintCell( TotalAmount20    ,     Rep.GetColWidthTable(14), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount20 ,     Rep.GetColWidthTable(15), NULL, "r" );
    Rep.AddPrintCell( TotalFree        ,     Rep.GetColWidthTable(16), NULL, "r" );
    Rep.AddStr();
    Rep.AddPrintCell( " ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();
end;

macro PrintTotalTableObtOld(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS )
    Rep.AddPrintCell( "Итого ",              Rep.GetColWidthTable(0)+Rep.GetColWidthTable(1)+Rep.GetColWidthTable(2)+Rep.GetColWidthTable(3)+Rep.GetColWidthTable(4)+Rep.GetColWidthTable(5)+Rep.GetColWidthTable(6)+Rep.GetColWidthTable(7)+7, NULL, "l"  );
    Rep.AddPrintCell( TotalWithNDS     ,     Rep.GetColWidthTable(8),  NULL, "r" );
    Rep.AddPrintCell( TotalAmount18    ,     Rep.GetColWidthTable(9),  NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount18 ,     Rep.GetColWidthTable(10), NULL, "r" );
    Rep.AddPrintCell( TotalAmount10    ,     Rep.GetColWidthTable(11), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount10 ,     Rep.GetColWidthTable(12), NULL, "r" );
    Rep.AddPrintCell( TotalAmount0     ,     Rep.GetColWidthTable(13), NULL, "r" );
    Rep.AddPrintCell( TotalAmount20    ,     Rep.GetColWidthTable(14), NULL, "r" );
    Rep.AddPrintCell( TotalNDSAmount20 ,     Rep.GetColWidthTable(15), NULL, "r" );
    Rep.AddPrintCell( TotalFree        ,     Rep.GetColWidthTable(16), NULL, "r" );
    Rep.AddStr();
end;




/* Печать заголовка реестра */
macro PrintBilBookObt( rs : RsdRecordset, TotalAmount18 : @money, TotalNDSAmount18 : @money, TotalAmount10 : @money, TotalNDSAmount10 : @money, TotalAmount0 : @money, TotalAmount20 : @money, TotalNDSAmount20 : @money, TotalFree : @money, AllTotalWithNDS : @money, inum)
  FILE bilfactura("bilfactura.dbt") key 4;
  FILE bilfacturaSecond("bilfactura.dbt") key 4;

  var BookEntryID      : integer;
  var EntryNumber      : string;
  var FacturaID        : integer;  
  var CDate            : string;
  var EntryDate        : date;
  var FacturaNumber    : string;
  var SrcFacturaNumber : string;
  var SrcCDate         : date;
  var CDate_Corr       : string;
  var SrcCDate_Corr    : string;
  var Number_Corr      : string;
  var SrcNumber_Corr   : string;
  var SupplierName     : string;
  var SupplierINN      : string;
  var Country          : string;
  var GTDNum           : string;
  var CountryGTD       : string;
  var PayDate          : date;
  var TotalWithNDS     : money;
  var NDSRate;
  var INN :string, KPP :string;
  var rst : RsdRecordset;
  var sqlString = "";
  var FIID = NATCUR;

  var ZeroDate = date( 0, 0, 0 );
  var FcDirection = Direction; // по умолчанию направление СФ совпадает с направлением ЗК
  var Amount18 : money, NDSAmount18 : money, Amount10 : money, NDSAmount10 : money, Amount0 : money, NDSAmount0 : money, Amount20 : money, NDSAmount20 : money, Free : money ;
  var strAmount18, strNDSAmount18, strAmount10, strNDSAmount10, strAmount0, strNDSAmount0, strAmount20, strNDSAmount20, strFree ;
  Amount18 = $0;  NDSAmount18 = $0; Amount10 = $0;  NDSAmount10 = $0; Amount0 = $0; NDSAmount0 = $0; Amount20 = $0;  NDSAmount20 = $0; Free = $0;
  var Assignment = 0;
  var RevertSum = false;
  var num, i, IsCDateNULL, IsFacturaNumberNULL, IsTotalWithNDSNULL, IsNDSRateNULL, IsCountyNULL, IsGTDNumNULL, IsAssignmentNULL, IsSrcFacturaNumberNULL, IsSrcCDateNULL, IsFcDirectionNULL; 
  var modifyRecord:bool = false;
  var IsAnnul = 0;


  rs.value("T_CREATIONDATE"  , IsCDateNULL           );
  rs.value("T_FACTURANUMBER" , IsFacturaNumberNULL   );
  rs.value("T_TOTALWITHNDS"  , IsTotalWithNDSNULL    );
  rs.value("T_ASSIGNMENT"    , IsAssignmentNULL      );
  rs.value("SrcFacturaNumber", IsSrcFacturaNumberNULL);
  rs.value("SrcCreationDate" , IsSrcCDateNULL        );
  rs.value("T_DIRECTION"     , IsFcDirectionNULL     );


  IsAnnul = rs.value("IsAnnul");

  BookEntryID    = rs.value("T_BOOKENTRYID"     );    
  EntryNumber    = rs.value("T_ENTRYNUMBER"     );    
  if(EntryNumber == StrFor(1))
    EntryNumber = ""
  end;

  FacturaID      = rs.value("T_FACTURAID"     );    
  if(IsCDateNULL != true)
    CDate        = rs.value("T_CREATIONDATE"  );
  else
    CDate        =date(0,0,0);
  end;

  if(IsFacturaNumberNULL != true)
    FacturaNumber = rs.value("T_FACTURANUMBER" );
  else
    FacturaNumber = "";
  end;

  if(IsSrcFacturaNumberNULL != true)
    SrcFacturaNumber = rs.value("SrcFacturaNumber" );
  else
    SrcFacturaNumber = "";
  end;
  
  if(IsSrcCDateNULL != true)
    SrcCDate        = rs.value("SrcCreationDate"  );
  else
    SrcCDate        = date(0,0,0);
  end;

  if(IsAssignmentNULL != true)
    Assignment = rs.value("T_ASSIGNMENT" );
  else
    Assignment = 0;
  end;

  if(IsFcDirectionNULL != true)
    FcDirection = rs.value("T_DIRECTION");
  else
    FcDirection = Direction;
  end;

  EntryDate    = rs.value("t_ENTRYDATE"  );

  SupplierName = rs.value("T_SUPPLIERNAME"  );
  SupplierINN  = rs.value("T_SUPPLIERINN"   );
  PayDate      = rs.value("T_PAYDATE"       );

  if(IsTotalWithNDSNULL != true)
   TotalWithNDS = rs.value("CalcTotalWithNds");
  else 
   TotalWithNDS = $0;
  end;
 
    SrcCDate          = date(rs.value("t_CreationDate"));  
    CDate             = "";
    SrcFacturaNumber  = rs.value("t_FacturaNumber");   
    FacturaNumber     = "";
                                    
    if(Assignment == OBJSFASSIGNMENT_MODIFY) // Исправление 

      bilfactura.facturaID = rs.value("srcFacturaID");
      if(getEQ(bilfactura))
        if(bilfactura.Assignment == OBJSFASSIGNMENT_RECALC)
          modifyRecord = true;    
        end;  
      end;                                     
    end; 

    if((Assignment == OBJSFASSIGNMENT_RECALC) AND (modifyRecord)) // Пересчет после исправления
      bilfacturaSecond.facturaID = bilfactura.SourcefacturaID;
      if(getEQ(bilfacturaSecond))
        SrcFacturaNumber = bilfacturaSecond.facturaNumber; 
        SrcCDate         = bilfacturaSecond.creationDate;
      end; 
    elif(Assignment == OBJSFASSIGNMENT_RECALC) // Пересчет
      SrcFacturaNumber = rs.value("srcfacturanumber");
      FacturaNumber    = rs.value("t_FacturaNumber");
      
      if(rs.value("srcCorrectionNum") == 0)
        SrcCDate  = date(rs.value("srcCreationDate"));
        CDate     = date(rs.value("t_CreationDate"));
      end;                                  
    end;
    
    if(rs.value("SrcCorrectionNum"))
      SrcNumber_Corr  = rs.value("SrcCorrectionNum");
      SrcCDate_Corr   = date(rs.value("SrcCreationDate"));
    elif(rs.value("t_CorrectionNum"))
      SrcNumber_Corr = rs.value("t_CorrectionNum");
      SrcCDate_Corr  = date(rs.value("t_CreationDate"));
    else
      SrcNumber_Corr = SrcCDate_Corr = "";
    end;

    if(Assignment == OBJSFASSIGNMENT_RECALC)
      Number_Corr = rs.value("t_CorrectionNum");
      CDate_Corr  = date(rs.value("t_CreationDate"));
    else
      Number_Corr = CDate_Corr = "";
    end;
  
 

  if(BookEntryID != 0) 
    sqlString = "   SELECT T_NDSRATE, SUM(T_AMOUNT), SUM(T_NDSAMOUNT), SUM(T_AMOUNTWITHNDS)" +
                  " FROM DBKENTSUM_DBT  WHERE T_BOOKENTRYID = " + BookEntryID +" AND T_FIID = 0 GROUP BY T_NDSRATE" ;

    rst = RsdRecordset( sqlString );

    while( rst.moveNext() )
       rst.value("T_NDSRATE",IsNDSRateNULL );
     
       if(IsNDSRateNULL != true)
         NDSRate = rst.value("T_NDSRATE" );

         if (NDSRate == -1)
           Free = rst.value("SUM(T_AMOUNT)");
         end;

         if(NDSRate == 18)
           Amount18 = rst.value("SUM(T_AMOUNT)"  );
           NDSAmount18 = rst.value("SUM(T_NDSAMOUNT)");
         end;

         if(NDSRate == 10)
           Amount10 = rst.value("SUM(T_AMOUNT)"  );
           NDSAmount10 = rst.value("SUM(T_NDSAMOUNT)");
         end;

         if(NDSRate == 0)
           Amount0 = rst.value("SUM(T_AMOUNT)"  );
         end;

         if(NDSRate == 20)
           Amount20 = rst.value("SUM(T_AMOUNT)"  );
           NDSAmount20 = rst.value("SUM(T_NDSAMOUNT)");
         end;
       else
         Free = rst.value("SUM(T_AMOUNT)");
       end;
    end;
  end;                 

  if( OldTemplate == true)
    sqlString = " SELECT DISTINCT T_COUNTRY AS COUNTRY,  DECODE(T_GTDNUMBER,chr(1),NULL,T_GTDNUMBER ) AS GTDNUMBER FROM DBILFACTURALINE_DBT " + 
                " WHERE T_FACTURAID  = " + FacturaID + 
                " AND T_COUNTRY != CHR(1) "+
                " ORDER BY COUNTRY "; 
  else
    sqlString = " SELECT DISTINCT C.T_CODENUM3 AS COUNTRY, DECODE(F.T_GTDNUMBER,chr(1),NULL,F.T_GTDNUMBER ) AS GTDNUMBER FROM DBILFACTURALINE_DBT F, DCOUNTRY_DBT C " + 
                " WHERE F.T_FACTURAID  = " + FacturaID + 
                " AND F.T_COUNTRY != CHR(1) "+
                " AND UPPER(F.T_COUNTRY) =  UPPER(C.T_NAME)"
                " ORDER BY COUNTRY "; 
  end;    

  rst = RsdRecordset( sqlString );

  CountryGTD = "";
  if((OldTemplate == true) OR (Assignment != 2))
    while( rst.moveNext() )
      rst.value("COUNTRY" , IsCountyNULL);
      rst.value("GTDNUMBER" , IsGTDNumNULL);

      if( IsCountyNULL != true )
        Country = rst.value("COUNTRY" );
      else
        Country = "";
      end;

      if( IsGTDNumNULL != true )
        GTDNum = rst.value("GTDNUMBER" );
      else
        GTDNum = "";
      end;

      if(Country != "")
       if(CountryGTD != "")
         CountryGTD = CountryGTD + ", "
       end;

       CountryGTD = CountryGTD + Country;

       if(GTDNum != "")
         CountryGTD = CountryGTD + " (" +GTDNum +")";
       end;
      end;
    end;
  end;

  if( OldTemplate == true)
    if(CountryGTD == "")
      CountryGTD ="-";
    end;
  end;

  if( OldTemplate == false)
    if(IsAnnul == 1)
      Amount18     = -Amount18    ;
      NDSAmount18  = -NDSAmount18 ;
      Amount10     = -Amount10    ;
      NDSAmount10  = -NDSAmount10 ;
      Amount0      = -Amount0     ;
      Amount20     = -Amount20    ; 
      NDSAmount20  = -NDSAmount20 ;
      Free         = -Free        ;
      TotalWithNDS = -TotalWithNDS;
    end;

    if(Assignment == 2)   // Аванс
      Amount0  = $0;
      Amount18 = $0; 
      Amount10 = $0; 
      Amount20 = $0; 
      Free = $0; 
    elif((Assignment == 5) AND (FcDirection != Direction)) // Пересчет
      Amount18     = -Amount18    ;
      NDSAmount18  = -NDSAmount18 ;
      Amount10     = -Amount10    ;
      NDSAmount10  = -NDSAmount10 ;
      Amount0      = -Amount0     ;
      Amount20     = -Amount20    ; 
      NDSAmount20  = -NDSAmount20 ;
      Free         = -Free        ;
      TotalWithNDS = -TotalWithNDS;
    end;
  end;

  TotalAmount18     =  TotalAmount18     +  Amount18     ;
  TotalNDSAmount18  =  TotalNDSAmount18  +  NDSAmount18  ;
  TotalAmount10     =  TotalAmount10     +  Amount10     ;
  TotalNDSAmount10  =  TotalNDSAmount10  +  NDSAmount10  ;
  TotalAmount0      =  TotalAmount0      +  Amount0      ;
  TotalAmount20     =  TotalAmount20     +  Amount20     ;
  TotalNDSAmount20  =  TotalNDSAmount20  +  NDSAmount20  ;
  TotalFree         =  TotalFree         +  Free         ;
  AllTotalWithNDS   =  AllTotalWithNDS   +  TotalWithNDS ; 

  if( (OldTemplate == false) AND (Assignment == 2))
      strAmount0  = "";
      strAmount18 = ""; 
      strAmount10 = ""; 
      strAmount20 = ""; 
      strFree = ""; 
  else
      strAmount0  = Amount0;
      strAmount18 = Amount18; 
      strAmount10 = Amount10; 
      strAmount20 = Amount20; 
      strFree     = Free    ; 
  end;


  splitINN_KPP(SupplierINN, INN, KPP);

  if( OldTemplate == true)
    if(SupplierINN == "")
      INN = "-";
      KPP = "-";
    end;
  end;

  var strEntryDate;

  if( OldTemplate == true)
    if(EntryDate == ZeroDate)
      strEntryDate = "-";
    else
      strEntryDate = EntryDate;
    end;
  else
    if(Assignment == 2)
       strEntryDate = "";
    else
      if(EntryDate == ZeroDate)
        strEntryDate = "";
      else
        strEntryDate = EntryDate;
      end;
    end;
  end;

  if (TypeBook == TYPEBOOK_BASE ) // основной      
    Rep.AddPrintCell( inum/*EntryNumber*/,              0, NULL, "c" );

    if( OldTemplate == true)
      Rep.AddPrintCell( CDate + "\n" +FacturaNumber,      0, NULL, "c" );
    else
      if(SrcFacturaNumber != "")
        Rep.AddPrintCell( SrcFacturaNumber + "\n" + SrcCDate,      0, NULL, "c" );
      else
        Rep.AddPrintCell( FacturaNumber + "\n" + CDate,      0, NULL, "c" );
      end;
    end;

    if( OldTemplate == false) //новый вид шаблона
      Rep.AddPrintCell( SrcCDate_Corr + "\n" + SrcNumber_Corr,  0, NULL, "c" );  // 2А
      Rep.AddPrintCell( FacturaNumber + "\n" + CDate,           0, NULL, "c" );  // 2Б
      Rep.AddPrintCell( Number_Corr + "\n" + CDate_Corr,        0, NULL, "c" );  // 2В
    end;
    /*if( OldTemplate == false)
      Rep.AddPrintCell( "",                             0, NULL, "c" );
      if(SrcFacturaNumber != "")
        Rep.AddPrintCell( CDate + "\n" +FacturaNumber,  0, NULL, "c" );
      else
        Rep.AddPrintCell( "",                           0, NULL, "c" );
      end;
      Rep.AddPrintCell( "",                             0, NULL, "c" );
    end; */
    Rep.AddPrintCell( PayDate,                          0, NULL, "c" );
    Rep.AddPrintCell( strEntryDate,                     0, NULL, "c" );
    Rep.AddPrintCell( SupplierName,                     0, NULL, "c" );
    Rep.AddPrintCell( INN,                              0, NULL, "c" );
    Rep.AddPrintCell( KPP,                              0, NULL, "c" );
    Rep.AddPrintCell( CountryGTD,                       0, NULL, "c" );
                                                           
    Rep.AddPrintCell( TotalWithNDS ,                    0, NULL, "r" );
    Rep.AddPrintCell( strAmount18 ,                     0, NULL, "r" );
    Rep.AddPrintCell( NDSAmount18 ,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount10 ,                     0, NULL, "r" );
    Rep.AddPrintCell( NDSAmount10 ,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount0  ,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount20 ,                     0, NULL, "r" );
    Rep.AddPrintCell( NDSAmount20 ,                     0, NULL, "r" );
    Rep.AddPrintCell( strFree     ,                     0, NULL, "r" );
    Rep.AddStr();
  end;
  
end;

macro  PrintBBookObt(BBook)
   var TemplateName = "", sqlString, rs, count, i,cmd, cmd2;
   record Party(party);
/*   var TotalAmount18 : money, TotalNDSAmount18 : money, TotalAmount10 : money, TotalNDSAmount10 : money, TotalAmount0 : money, TotalAmount20 : money, TotalNDSAmount20 : money, TotalFree : money , TotalWithNDS : money ;*/
   var EmptyStr = "                                                                                                   ";
   TotalAmount18 = $0; TotalNDSAmount18 = $0; TotalAmount10 = $0; TotalNDSAmount10 = $0; TotalAmount0 = $0; TotalAmount20 = $0; TotalNDSAmount20 = $0; TotalFree = $0; TotalWithNDS = $0;

   ПолучитьСубъекта ({OurBank}, Party ); 

  if (TypeBook == TYPEBOOK_BASE ) // основной 
    if(OldTemplate == true)     
      Rep.AddPrintCell( "Приложение № 2", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
      Rep.AddPrintCell( "к Правилам ведения журналов учета полученных и выставленных счетов-фактур,", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
      Rep.AddPrintCell( "книг покупок и книг продаж при расчетах по налогу на добавленную стоимость,", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
      Rep.AddPrintCell( "утвержденным постановлением Правительства РФ от 2 декабря 2000 г. № 914", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
      Rep.AddPrintCell( "(в ред. постановления Правительства РФ от 11 мая 2006 г. №283)", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
    end;

    Rep.AddPrintCell( "КНИГА ПОКУПОК", Rep.GetHeaderWidth(), 0, "c:" + FontTitle, REP_ELEM_STR);
    Rep.AddStr();
    Rep.AddPrintCell( " ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();
    Rep.AddPrintCell( "Покупатель: " + Party.Name, Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();   
    Rep.AddPrintCell( "Идентификационный номер и код причины постановки ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();   
    Rep.AddPrintCell( "на учет налогоплательщика-покупателя " + ПолучитьКодСубъекта( {OurBank}, PTCK_INN ), Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();
    Rep.AddPrintCell( "Покупка за период с "+string(date1) + " по " + string(date2), Rep.GetHeaderWidth(), 0, "l"  , REP_ELEM_STR);
    Rep.AddStr();
    Rep.AddPrintCell( " ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();
  end;

  sqlString = "SELECT COUNT(1) FROM DBILBOOKENTRY_DBT BILBOOKENTRY "+acssql_from+" WHERE BILBOOKENTRY.T_REGDATE BETWEEN to_date('" + date1 +
     "', 'dd.mm.yyyy') AND to_date( '"+ date2 +"', 'dd.mm.yyyy') AND BILBOOKENTRY.T_DIRECTION = "+ Direction +
     " AND " + acssql_query;

  if(PrnDepartment != 0)
      sqlString = sqlString + " AND BILBOOKENTRY.T_DEPARTMENT = " + PrnDepartment;
  end;



  cmd = RsdCommand( sqlString );
  cmd.NullConversion = true;
  rs = RsdRecordset( cmd );

//  rs = RsdRecordset( sqlString );


  rs.moveNext();

  count = rs.value(0);

  if( count == 0 )

else
     sqlString = " SELECT BILBOOKENTRY.T_BOOKENTRYID, BILBOOKENTRY.T_ENTRYNUMBER, BILBOOKENTRY.T_FACTURAID, BILBOOKENTRY.t_SupplierName, BILBOOKENTRY.t_SupplierINN, BILBOOKENTRY.t_PayDate, BILBOOKENTRY.t_EntryDate, BF.t_CorrectionNum, NVL(BF.t_CreationDate, to_date('01.01.0001', 'dd.mm.yyyy')) AS t_CreationDate, NVL(BF.t_FacturaNumber, CHR(1)) as t_FacturaNumber, BF.t_TotalWithNDS, BF.t_Assignment, BF.t_Direction, NVL(BFSRC.t_FacturaNumber, chr(1)) AS SrcFacturaNumber, BFSRC.t_CreationDate AS SrcCreationDate, RSB_FIInstr.ConvSum(BILBOOKENTRY.T_AMOUNT, bf.t_fiid, " + NatCur + ",  decode(BILBOOKENTRY.t_paydate,TO_DATE('01 01 0001','DD MM YYYY'), BILBOOKENTRY.t_regdate, BILBOOKENTRY.t_paydate  ) ) CalcTotalWithNds, BF.t_TotalWithNDS, NVL(BFSRC.t_FacturaID, 0) AS SrcFacturaID, NVL(BFSRC.t_CorrectionNum, 0) as SrcCorrectionNum, BILBOOKENTRY.T_REGDATE AS RegDate, BILBOOKENTRY.T_ENTRYNUMBER AS EntryNumber, 0 AS IsAnnul  " +
                 " FROM DBILBOOKENTRY_DBT BILBOOKENTRY, DBILFACTURA_DBT BF, DBILFACTURA_DBT BFSRC";
     sqlString = sqlString + acssql_from +                                     
                 " WHERE BILBOOKENTRY.T_REGDATE BETWEEN to_date( '"+date1+"', 'dd.mm.yyyy') AND to_date( '"+date2+"', 'dd.mm.yyyy')" +
                 " AND BILBOOKENTRY.T_BOOKID = "+ BookID +
                 " AND BILBOOKENTRY.T_DIRECTION = "+ Direction +
                 " AND BILBOOKENTRY.T_FACTURAID = BF.T_FACTURAID(+)" +
                 " AND BF.T_SOURCEFACTURAID = BFSRC.T_FACTURAID(+)" +
                 " AND " + acssql_query;

     if(PrnDepartment != 0)
         sqlString = sqlString + " AND BILBOOKENTRY.T_DEPARTMENT = " + PrnDepartment;
     end;

     sqlString = sqlString + " UNION ";

     sqlString = sqlString +
                 " SELECT BILBOOKENTRY.T_BOOKENTRYID, BILBOOKENTRY.T_ENTRYNUMBER, BILBOOKENTRY.T_FACTURAID, BILBOOKENTRY.t_SupplierName, BILBOOKENTRY.t_SupplierINN, BILBOOKENTRY.t_PayDate, BILBOOKENTRY.t_EntryDate, BF.t_CorrectionNum, NVL(BF.t_CreationDate, to_date('01.01.0001', 'dd.mm.yyyy')) AS t_CreationDate, NVL(BF.t_FacturaNumber, CHR(1)) as t_FacturaNumber, BF.t_TotalWithNDS, BF.t_Assignment, BF.t_Direction, NVL(BFSRC.t_FacturaNumber, chr(1)) AS SrcFacturaNumber, BFSRC.t_CreationDate AS SrcCreationDate, RSB_FIInstr.ConvSum(BILBOOKENTRY.T_AMOUNT, bf.t_fiid, " + NatCur + ",  decode(BILBOOKENTRY.t_paydate,TO_DATE('01 01 0001','DD MM YYYY'), BILBOOKENTRY.t_regdate, BILBOOKENTRY.t_paydate  ) ) CalcTotalWithNds, BF.t_TotalWithNDS, NVL(BFSRC.t_FacturaID, 0) AS SrcFacturaID, NVL(BFSRC.t_CorrectionNum, 0) as SrcCorrectionNum, BILBOOKENTRY.T_ANNULDATE AS RegDate, BILBOOKENTRY.T_ENTRYNUMBER AS EntryNumber, 1 AS IsAnnul  " +
                 " FROM DBILBOOKENTRY_DBT BILBOOKENTRY, DBILFACTURA_DBT BF, DBILFACTURA_DBT BFSRC";
     sqlString = sqlString + acssql_from +                                     
                 " WHERE BILBOOKENTRY.T_REGDATE BETWEEN to_date( '" + date1 + "', 'dd.mm.yyyy') AND to_date( '"+date2+"', 'dd.mm.yyyy')" +
                 " AND BILBOOKENTRY.T_BOOKID = " + BookID +
                 " AND BILBOOKENTRY.T_ANNULENTRY <> 0 " +
                 " AND BILBOOKENTRY.T_ANNULDATE <= to_date( '"+date2+"', 'dd.mm.yyyy')" +
                 " AND BILBOOKENTRY.T_DIRECTION = " + Direction +
                 " AND BILBOOKENTRY.T_FACTURAID = BF.T_FACTURAID(+)" +
                 " AND BF.T_SOURCEFACTURAID = BFSRC.T_FACTURAID(+)" +
                 " AND " + acssql_query;

     if(PrnDepartment != 0)
         sqlString = sqlString + " AND BILBOOKENTRY.T_DEPARTMENT = " + PrnDepartment;
     end;


     sqlString = sqlString + " ORDER BY RegDate, EntryNumber ";

     cmd2 = RsdCommand( sqlString );
     cmd2.NullConversion = true;
     rs = RsdRecordset( cmd2 );

     i = 0;
     while( rs.moveNext() )
       PrintBilBookObt( rs, @TotalAmount18, @TotalNDSAmount18, @TotalAmount10, @TotalNDSAmount10, @TotalAmount0, @TotalAmount20, @TotalNDSAmount20, @TotalFree, @TotalWithNDS, i+1 );
       i = i + 1;
     end;

   end;



  
   if (TypeBook == TYPEBOOK_BASE ) // ??   
     if(OldTemplate == true)
       PrintFTableObtOld(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS );
     else
       PrintFTableObt(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS );
     end;

     if(FIO_1 == "")
       FIO_1 = "__________________";
     end;

     Rep.AddPrintCell( Dolz_1 + " _______________     " + FIO_1, Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   
     Rep.AddPrintCell(SubStr(EmptyStr,1, strlen(Dolz_1)*2 )+"(подпись)              (ф.и.о.)  ", Rep.GetHeaderWidth(), 0, "l:ex_FS(t)", REP_ELEM_STR);  
     Rep.AddStr();   

     Rep.AddPrintCell( "Индивидуальный предприниматель " + "  _______________ " + "  ____________________", Rep.GetHeaderWidth(), 0, "l" , REP_ELEM_STR);
     Rep.AddStr();   
     Rep.AddPrintCell( "                                                      (подпись)                   (ф.и.о.)  ", Rep.GetHeaderWidth(), 0, "l:ex_FS(t)", REP_ELEM_STR); //
     Rep.AddStr();                                                         

     Rep.AddPrintCell( "Реквизиты свидетельства о государственной ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   
     Rep.AddPrintCell( "регистрации индивидуального предпринимателя " + " _____________________________ ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   

     Rep.AddPrintCell( "_______________________", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   

     Rep.AddPrintCell( "* До завершения расчетов по товарам (работам, услугам), отгруженным (выполненным, оказанным) до 1 января 2004 г.", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   
   end;
   return 0;
end;

/*-----------------------------------------------------------------------------------*/
macro PrintAddBilBookDistr( rs : RsdRecordset, TotalAmount18 : @money, TotalNDSAmount18 : @money, TotalAmount10 : @money, TotalNDSAmount10 : @money, TotalAmount0 : @money, TotalAmount20 : @money, TotalNDSAmount20 : @money, TotalFree : @money, AllTotalWithNDS : @money, fromdate : date)
  var BookEntryID        : integer;
  var AnnulEntry                  ;
  var CDate            : date;
  var FacturaNumber     : string;
  var SrcFacturaNumber : string;
  var SrcCDate         : date;
  var ReceiverName     : string;
  var ReceiverINN      : string;
  var PayDate          : date;
  var TotalWithNDS     : money;
  var NDSRate;
  var INN :string, KPP :string;
  var rst : RsdRecordset;
  var sqlString = "";
  var ZeroDate = date( 0, 0, 0 );
  var FcDirection = Direction; // ЇR г┐R<з -Ёо - Їа ў<?-Ё? '" бRўЇ ¤ ?в б - Їа ў<?-Ё?┐ ╪?

  var Amount18 : money, NDSAmount18 : money, Amount10 : money, NDSAmount10 : money, Amount0 : money, NDSAmount0 : money, Amount20 : money, NDSAmount20 : money, Free : money ;
  Amount18 = $0;  NDSAmount18 = $0; Amount10 = $0;  NDSAmount10 = $0; Amount0 = $0; NDSAmount0 = $0; Amount20 = $0;  NDSAmount20 = $0; Free = $0;
  var strAmount18, strNDSAmount18, strAmount10, strNDSAmount10, strAmount0, strNDSAmount0, strAmount20, strNDSAmount20, strFree ;
  var Assignment = 0;
  var RevertSum = false;

  var num, i, IsCDateNULL, IsFacturaNumberNULL, IsTotalWithNDSNULL, IsNDSRateNULL, IsAssignmentNULL, IsSrcFacturaNumberNULL, IsSrcCDateNULL, IsFcDirectionNULL; 

  
  rs.value("T_CREATIONDATE"  , IsCDateNULL         );
  rs.value("T_FACTURANUMBER" , IsFacturaNumberNULL  );
  rs.value("CalcTotalWithNds", IsTotalWithNDSNULL  );
  rs.value("T_ASSIGNMENT"    , IsAssignmentNULL  );
  rs.value("SrcFacturaNumber", IsSrcFacturaNumberNULL);
  rs.value("SrcCreationDate" , IsSrcCDateNULL        );
  rs.value("T_DIRECTION"     , IsFcDirectionNULL     );

  
  BookEntryID    = rs.value("T_BOOKENTRYID"     );    
  AnnulEntry     = rs.value("T_ANNULENTRY"      );    

  if(IsCDateNULL != true)
    CDate        = rs.value("T_CREATIONDATE"  );
  else
    CDate        =date(0,0,0);
  end;

  if(IsFacturaNumberNULL != true)
    FacturaNumber = rs.value("T_FACTURANUMBER" );
  else
    FacturaNumber = "";
  end;
  if(IsSrcFacturaNumberNULL != true)
    SrcFacturaNumber = rs.value("SrcFacturaNumber" );
  else
    SrcFacturaNumber = "";
  end;

  if(IsSrcCDateNULL != true)
    SrcCDate        = rs.value("SrcCreationDate"  );
  else
    SrcCDate        = date(0,0,0);
  end;

  if(IsAssignmentNULL != true)
    Assignment = rs.value("T_ASSIGNMENT" );
  else
    Assignment = 0;
  end;

  if(IsFcDirectionNULL != true)
    FcDirection = rs.value("T_DIRECTION");
  else
    FcDirection = Direction;
  end;

  ReceiverName = rs.value("T_RECEIVERNAME"  );
  ReceiverINN  = rs.value("T_RECEIVERINN"   );
  PayDate      = rs.value("T_PAYDATE"       );
  if(IsTotalWithNDSNULL != true)
   TotalWithNDS = rs.value("CalcTotalWithNds"  );
  else 
   TotalWithNDS = $0;
  end;

  sqlString = "   SELECT T_NDSRATE, SUM(T_AMOUNT), SUM(T_NDSAMOUNT), SUM(T_AMOUNTWITHNDS)" +
                " FROM DBKENTSUM_DBT  WHERE T_BOOKENTRYID = " + BookEntryID +" AND T_FIID = 0  GROUP BY T_NDSRATE" ;

  rst = RsdRecordset( sqlString );


  while( rst.moveNext() )
     rst.value("T_NDSRATE",IsNDSRateNULL );
   
     if(IsNDSRateNULL != true)
       NDSRate = rst.value("T_NDSRATE" );

       if (NDSRate == -1)
         Free = rst.value("SUM(T_AMOUNT)");
       end;

       if(NDSRate == 18)
         Amount18 = rst.value("SUM(T_AMOUNT)"  );
         NDSAmount18 = rst.value("SUM(T_NDSAMOUNT)");
       end;

       if(NDSRate == 10)
         Amount10 = rst.value("SUM(T_AMOUNT)"  );
         NDSAmount10 = rst.value("SUM(T_NDSAMOUNT)");
       end;

       if(NDSRate == 0)
         Amount0 = rst.value("SUM(T_AMOUNT)"  );
       end;

       if(NDSRate == 20)
         Amount20 = rst.value("SUM(T_AMOUNT)"  );
         NDSAmount20 = rst.value("SUM(T_NDSAMOUNT)");
       end;

     else
       Free = rst.value("SUM(T_AMOUNT)");
     end;
  end;

  if((OldTemplate == false) AND NOT ((Assignment == 5) AND (FcDirection != Direction))) // пересчет
     Free        = - Free        ;
     Amount18    = - Amount18    ;
     NDSAmount18 = - NDSAmount18 ;            
     Amount10    = - Amount10    ;
     NDSAmount10 = - NDSAmount10 ; 
     Amount0     = - Amount0     ;
     Amount20    = - Amount20    ;
     NDSAmount20 = - NDSAmount20 ;
     TotalWithNDS = -TotalWithNDS;
  end;

  if((OldTemplate == false) AND (Assignment == 2)) // Аванс
      Amount0  = $0;
      Amount18 = $0; 
      Amount10 = $0; 
      Amount20 = $0; 
      Free = $0; 
  end;

  if(((AnnulEntry != 0) AND (OldTemplate == true)) OR ((OldTemplate == false) AND (AnnulEntry == 0)))
    TotalAmount18     =  TotalAmount18     -  Amount18     ;
    TotalNDSAmount18  =  TotalNDSAmount18  -  NDSAmount18  ;
    TotalAmount10     =  TotalAmount10     -  Amount10     ;
    TotalNDSAmount10  =  TotalNDSAmount10  -  NDSAmount10  ;
    TotalAmount0      =  TotalAmount0      -  Amount0      ;
    TotalAmount20     =  TotalAmount20     -  Amount20     ;
    TotalNDSAmount20  =  TotalNDSAmount20  -  NDSAmount20  ;
    TotalFree         =  TotalFree         -  Free         ;
    AllTotalWithNDS   =  AllTotalWithNDS   -  TotalWithNDS  ; 
  else
    TotalAmount18     =  TotalAmount18     +  Amount18     ;
    TotalNDSAmount18  =  TotalNDSAmount18  +  NDSAmount18  ;
    TotalAmount10     =  TotalAmount10     +  Amount10     ;
    TotalNDSAmount10  =  TotalNDSAmount10  +  NDSAmount10  ;
    TotalAmount0      =  TotalAmount0      +  Amount0      ;
    TotalAmount20     =  TotalAmount20     +  Amount20     ;
    TotalNDSAmount20  =  TotalNDSAmount20  +  NDSAmount20  ;
    TotalFree         =  TotalFree         +  Free         ;
    AllTotalWithNDS   =  AllTotalWithNDS   +  TotalWithNDS  ; 
  end;

  if( (OldTemplate == false) AND (Assignment == 2))
      strAmount0  = "";
      strAmount18 = ""; 
      strAmount10 = ""; 
      strAmount20 = ""; 
      strFree = ""; 
  else
      strAmount0  = Amount0;
      strAmount18 = Amount18; 
      strAmount10 = Amount10; 
      strAmount20 = Amount20; 
      strFree     = Free    ; 
      if(OldTemplate == true)
        if(Assignment == 2)
          if(NDSAmount18 > $0)
            strAmount18 = "-";
          end;

          if(NDSAmount10 > $0)
            strAmount10 = "-";
          end;
        end;
      end;
  end;

  splitINN_KPP(ReceiverINN, INN, KPP);

  var strDate ; 
  if(PayDate == ZeroDate)
    if(OldTemplate == true)
      strDate = "-";
    else
      strDate = "";
    end;
  else
    strDate = PayDate;
  end;

  if((OldTemplate == true) AND (ReceiverINN == ""))
    INN = "-";
    KPP = "-";
  end;

  if ((BeginDate <= fromdate) AND (fromdate <= EndDate))
    if( OldTemplate == true)
      Rep.AddPrintCell( CDate + "\n" +FacturaNumber,      0, NULL, "c" );
    else
      if(SrcFacturaNumber != "")
        Rep.AddPrintCell( SrcCDate + "\n" +SrcFacturaNumber,      0, NULL, "c" );
      else
        Rep.AddPrintCell( CDate + "\n" +FacturaNumber,      0, NULL, "c" );
      end;
    end;

    if( OldTemplate == false)
      Rep.AddPrintCell( "",                             0, NULL, "c" );
      if(SrcFacturaNumber != "")
        Rep.AddPrintCell( CDate + "\n" +FacturaNumber,  0, NULL, "c" );
      else
        Rep.AddPrintCell( "",                           0, NULL, "c" );
      end;
      Rep.AddPrintCell( "",                             0, NULL, "c" );
    end;
    Rep.AddPrintCell( ReceiverName,                     0, NULL, "c" );
    Rep.AddPrintCell( INN,                              0, NULL, "c" );
    Rep.AddPrintCell( KPP,                              0, NULL, "c" );
    Rep.AddPrintCell( strDate,                          0, NULL, "c" );
    Rep.AddPrintCell( TotalWithNDS,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount18 ,                     0, NULL, "r" );
    Rep.AddPrintCell( NDSAmount18 ,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount10 ,                     0, NULL, "r" );
    Rep.AddPrintCell( NDSAmount10 ,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount0  ,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount20 ,                     0, NULL, "r" );
    Rep.AddPrintCell( NDSAmount20 ,                     0, NULL, "r" );
    Rep.AddPrintCell( strFree     ,                     0, NULL, "r" );
    Rep.AddStr();                                          
  end;
end;                                                     
                                                         
macro  PrintAddBBookDistr(BBook, fromdate)               
   var TemplateName = "", sqlString, rs, count, i,cmd,cmd2;
   record Party(party);
   /*var TotalAmount18 : money, TotalNDSAmount18 : money, TotalAmount10 : money, TotalNDSAmount10 : money, TotalAmount0 : money, TotalAmount20 : money, TotalNDSAmount20 : money, TotalFree : money , TotalWithNDS : money ;*/
   var EmptyStr = "                                                                                                   ";
    var period = "", year ; 
  /* TotalAmount18 = $0; TotalNDSAmount18 = $0; TotalAmount10 = $0; TotalNDSAmount10 = $0; TotalAmount0 = $0; TotalAmount20 = $0; TotalNDSAmount20 = $0; TotalFree = $0; TotalWithNDS = $0;*/

  ПолучитьСубъекта ({OurBank}, Party ); 

  period = GetPeriod(date1, date2, year );

  if ((BeginDate <= fromdate) AND (fromdate <= EndDate))

    AddListNumber = AddListNumber + 1;  
                   
    if(FirstAddList == true)
      Rep.GetCurSheet().SetSheetName( "Дополнительный лист " + AddListNumber);
      FirstAddList = false;
    else
      if(OldTemplate == true)
        Rep.AddNewSheetBreak("Дополнительный лист " + AddListNumber , Table1);
      else
        Rep.AddNewSheetBreak("Дополнительный лист " + AddListNumber , Table1New);
      end;
    end;
  end;                  

  if ((BeginDate <= fromdate) AND (fromdate <= EndDate))
    if(OldTemplate == true)
      Rep.AddPrintCell( "Приложение № 5", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
      Rep.AddPrintCell( "к Правилам ведения журналов учета полученных и выставленных счетов-фактур,", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
      Rep.AddPrintCell( "книг покупок и книг продаж при расчетах по налогу на добавленную стоимость,", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
      Rep.AddPrintCell( "утвержденным постановлением Правительства РФ от 2 декабря 2000 г. № 914", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
      Rep.AddPrintCell( "(в ред. постановления Правительства РФ от 11 мая 2006 г. № 283)", Rep.GetHeaderWidth(), 0, "r:" + FontAdd, REP_ELEM_STR);
      Rep.AddStr();
    end;

    Rep.AddPrintCell( "ДОПОЛНИТЕЛЬНЫЙ ЛИСТ " + AddListNum, Rep.GetHeaderWidth(), 0, "c:" + FontTitle, REP_ELEM_STR);
    Rep.AddStr();
    Rep.AddPrintCell( " ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();
    Rep.AddPrintCell( "Продавец: " + Party.Name, Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();   
    Rep.AddPrintCell( "Идентификационный номер и код причины постановки на учет налогоплательщика-продавца: " + ПолучитьКодСубъекта( {OurBank}, PTCK_INN ), Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();
    
    if(OldTemplate == true)
      if((period == NULL) OR (period == ""))
        Rep.AddPrintCell( "Период: с "+string(date1) + " по "+string(date2), Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
      else
        Rep.AddPrintCell( "Налоговый период (месяц, квартал), год, в котором зарегистрирован счет-фактура до внесения в него исправлений "+ period + " "+year, Rep.GetHeaderWidth(), 0, "l" , REP_ELEM_STR);
      end;
    else
      if(OldTemplate2 == true)
        Rep.AddPrintCell( "Налоговый период, год, в котором зарегистрированы счет-фактура, корректировочный счет-фактура до внесения в них исправлений, или налоговый период," , Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
        Rep.AddStr();        
        Rep.AddPrintCell( "в котором осуществлена отгрузка товаров (выполнение работ, оказание услуг), передача имущественных прав, в случае изменения их стоимости " , Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
        Rep.AddStr();        
        if((period == NULL) OR (period == ""))
          Rep.AddPrintCell( "в последующих налоговых периодах в сторону увеличения с "+string(date1) + " по "+string(date2), Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
        else
          Rep.AddPrintCell( "в последующих налоговых периодах в сторону увеличения "+ period + " "+year, Rep.GetHeaderWidth(), 0, "l" , REP_ELEM_STR);
        end;
      else
        if((period == NULL) OR (period == ""))
          Rep.AddPrintCell( "Налоговый период, год с "+string(date1) + " по "+string(date2), Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
        else
          Rep.AddPrintCell( "Налоговый период, год "+ period + " "+year, Rep.GetHeaderWidth(), 0, "l" , REP_ELEM_STR);
        end;
    end;
    end;
    Rep.AddStr();
    if(OldTemplate == true)
      Rep.AddPrintCell( "Дополнительный лист оформлен " + string(fromdate), Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    else
      Rep.AddPrintCell( "Дополнительный лист составлен " + string(fromdate), Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    end;
    Rep.AddStr();

    Rep.AddPrintCell( " ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
    Rep.AddStr();

    if(OldTemplate == true)
      PrintTotalTableDistrOld(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS );
    else
      PrintTotalTableDistr(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS );
    end;
  end;
  if(0)
  else
     sqlString = " SELECT DISTINCT BILBOOKENTRY.T_BOOKENTRYID, BILBOOKENTRY.T_ANNULENTRY,  BILBOOKENTRY.t_ReceiverName, BILBOOKENTRY.t_ReceiverINN, BILBOOKENTRY.t_PayDate, BF.t_CreationDate, BF.t_FacturaNumber, RSB_FIInstr.ConvSum(BILBOOKENTRY.T_AMOUNT, bf.t_fiid, 0,  BILBOOKENTRY.t_paydate ) CalcTotalWithNds, bf.t_fiid, bf.T_ASSIGNMENT, bf.t_Direction, NVL(BFSRC.t_FacturaNumber,chr(1)) AS SrcFacturaNumber, BFSRC.t_CreationDate AS SrcCreationDate" +
                 " FROM DBILBOOKENTRY_DBT BILBOOKENTRY, DBILFACTURA_DBT BF, DBILFACTURA_DBT BFSRC"; 
     sqlString = sqlString + acssql_from +                   
                 " WHERE (( BILBOOKENTRY.T_REGDATE BETWEEN to_date( '"+date1+"', 'dd.mm.yyyy') AND to_date( '"+date2+"', 'dd.mm.yyyy') " +
                 " AND BILBOOKENTRY.T_ANNULENTRY <> 0  AND BILBOOKENTRY.T_ANNULDATE = to_date( '"+fromdate+"', 'dd.mm.yyyy')) " +
                 " OR (T_BOOKENTRYID IN(SELECT T_ANNULENTRY  FROM DBILBOOKENTRY_DBT WHERE T_ANNULENTRY <>0 " +
                 "                      AND T_REGDATE BETWEEN to_date( '"+date1+"', 'dd.mm.yyyy') AND to_date( '"+date2+"', 'dd.mm.yyyy') " + 
                 "                      AND T_ANNULDATE = to_date( '"+fromdate+"', 'dd.mm.yyyy'))) "+
                 " OR ( BILBOOKENTRY.T_REGDATE > to_date( '"+date2+"', 'dd.mm.yyyy') AND BILBOOKENTRY.T_REGDATE = to_date( '"+fromdate+"', 'dd.mm.yyyy')   )"
                 "    ) " +
                 " AND BILBOOKENTRY.T_BOOKID = "+ BookID +
                 " AND BILBOOKENTRY.T_DIRECTION = "+ Direction +
                 " AND BILBOOKENTRY.T_FACTURAID = BF.T_FACTURAID(+) " +
                 " AND BF.T_SOURCEFACTURAID = BFSRC.T_FACTURAID(+)" +
                 " AND " + acssql_query ; 

     if(PrnDepartment != 0)
         sqlString = sqlString + " AND BILBOOKENTRY.T_DEPARTMENT = " + PrnDepartment;
     end;
       
     cmd2 = RsdCommand( sqlString );
     cmd2.NullConversion = true;
     rs = RsdRecordset( cmd2 );


     i = 0;
     while( rs.moveNext() )
       PrintAddBilBookDistr( rs, @TotalAmount18, @TotalNDSAmount18, @TotalAmount10, @TotalNDSAmount10, @TotalAmount0, @TotalAmount20, @TotalNDSAmount20, @TotalFree, @TotalWithNDS , fromdate);
       i = i + 1;
     end;

   end;

  if ((BeginDate <= fromdate) AND (fromdate <= EndDate))
     if(OldTemplate == true)
       PrintFTableDistrOld(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS );
     else
       PrintFTableDistr(TotalAmount18, TotalNDSAmount18, TotalAmount10, TotalNDSAmount10, TotalAmount0, TotalAmount20, TotalNDSAmount20, TotalFree, TotalWithNDS );
     end;

     if(FIO_1 == "")
       FIO_1 = "__________________";
     end;

     Rep.AddPrintCell( Dolz_1 + " _______________     " + FIO_1, Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   
     Rep.AddPrintCell(SubStr(EmptyStr,1, strlen(Dolz_1)*2 )+"(подпись)              (ф.и.о.)  ", Rep.GetHeaderWidth(), 0, "l:ex_FS(t)", REP_ELEM_STR);  
     Rep.AddStr();   

     Rep.AddPrintCell( "Индивидуальный предприниматель " + "  _______________ " + "  ____________________", Rep.GetHeaderWidth(), 0, "l" , REP_ELEM_STR);
     Rep.AddStr();   
     Rep.AddPrintCell( "                                                      (подпись)                   (ф.и.о.)  ", Rep.GetHeaderWidth(), 0, "l:ex_FS(t)", REP_ELEM_STR); //
     Rep.AddStr();                                                         

     Rep.AddPrintCell( "Реквизиты свидетельства о государственной ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   
     Rep.AddPrintCell( "регистрации индивидуального предпринимателя " + " _____________________________ ", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   

     Rep.AddPrintCell( "_______________________", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   

     Rep.AddPrintCell( "* До завершения расчетов по товарам (работам, услугам), отгруженным (выполненным, оказанным) до 1 января 2004 г.", Rep.GetHeaderWidth(), 0, "l", REP_ELEM_STR);
     Rep.AddStr();   
   end;
   return 0;
end;

macro  PrintAllAddBBookDistr(BBook)
  var sqlString, rs; 
  var fromdate: date;

  sqlString = "SELECT DISTINCT annuldate FROM  (" +
              "SELECT BILBOOKENTRY.T_ANNULDATE as annuldate FROM DBILBOOKENTRY_DBT BILBOOKENTRY " + acssql_from +
              " WHERE BILBOOKENTRY.T_REGDATE BETWEEN to_date('" + date1 +
     "', 'dd.mm.yyyy') AND to_date( '"+ date2 +"', 'dd.mm.yyyy') AND BILBOOKENTRY.T_DIRECTION = "+ Direction +
     " AND BILBOOKENTRY.T_BOOKID = " + BookID +" AND BILBOOKENTRY.T_ANNULENTRY <> 0 " +
     " AND " + acssql_query ;

     if(PrnDepartment != 0)
         sqlString = sqlString + " AND BILBOOKENTRY.T_DEPARTMENT = " + PrnDepartment;
     end;

     sqlString = sqlString + 
     " UNION  SELECT   BILBOOKENTRY.t_regdate as annuldate FROM DBILBOOKENTRY_DBT BILBOOKENTRY"  + acssql_from + 
     "        WHERE BILBOOKENTRY.t_regdate > to_date( '"+ date2 +"', 'dd.mm.yyyy')"             +
     "        AND BILBOOKENTRY.T_DIRECTION = "+ Direction +
     "        AND BILBOOKENTRY.T_BOOKID = " + BookID +
     "        AND " + acssql_query;
     if(PrnDepartment != 0)
         sqlString = sqlString + " AND BILBOOKENTRY.T_DEPARTMENT = " + PrnDepartment;
     end;
     sqlString = sqlString + 
          " ) ORDER BY annuldate" ;

  rs = RsdRecordset( sqlString );

  while( rs.moveNext() )
    fromdate = rs.value("annuldate" );
    PrintAddBBookDistr(BBook, fromdate);
    AddListNum = AddListNum + 1;
  end;
end;

/*-Отчет "Дополнительные листы книги покупок"-----------------------------------------*/
macro PrintAddBilBookObt( rs : RsdRecordset, TotalAmount18 : @money, TotalNDSAmount18 : @money, TotalAmount10 : @money, TotalNDSAmount10 : @money, TotalAmount0 : @money, TotalAmount20 : @money, TotalNDSAmount20 : @money, TotalFree : @money, AllTotalWithNDS : @money, inum, fromdate: date )
  var BookEntryID      : integer;
  var AnnulEntry                ;
  var EntryNumber      : string;
  var FacturaID        : integer;  
  var CDate            : date;
  var EntryDate        : date;
  var FacturaNumber    : string;
  var SrcFacturaNumber : string;
  var SrcCDate         : date;
  var SupplierName     : string;
  var SupplierINN      : string;
  var Country          : string;
  var GTDNum           : string;
  var CountryGTD       : string;
  var PayDate          : date;
  var TotalWithNDS     : money;
  var NDSRate;
  var INN :string, KPP :string;
  var rst : RsdRecordset;
  var sqlString = "";
  var FIID = NATCUR;

  var ZeroDate = date( 0, 0, 0 );
  var FcDirection = Direction; // ЇR г┐R<з -Ёо - Їа ў<?-Ё? '" бRўЇ ¤ ?в б - Їа ў<?-Ё?┐ ╪?
  var Amount18 : money, NDSAmount18 : money, Amount10 : money, NDSAmount10 : money, Amount0 : money, NDSAmount0 : money, Amount20 : money, NDSAmount20 : money, Free : money ;
  Amount18 = $0;  NDSAmount18 = $0; Amount10 = $0;  NDSAmount10 = $0; Amount0 = $0; NDSAmount0 = $0; Amount20 = $0;  NDSAmount20 = $0; Free = $0;
  var strAmount18, strNDSAmount18, strAmount10, strNDSAmount10, strAmount0, strNDSAmount0, strAmount20, strNDSAmount20, strFree ;
  var Assignment = 0;
  var RevertSum = false;
  var num, i, IsCDateNULL, IsFacturaNumberNULL, IsTotalWithNDSNULL, IsNDSRateNULL, IsCountyNULL, IsGTDNumNULL, IsAssignmentNULL, IsSrcFacturaNumberNULL, IsSrcCDateNULL, IsFcDirectionNULL;

  
  rs.value("T_CREATIONDATE"  , IsCDateNULL           );
  rs.value("T_FACTURANUMBER" , IsFacturaNumberNULL   );
  rs.value("T_TOTALWITHNDS"  , IsTotalWithNDSNULL    );
  rs.value("T_ASSIGNMENT"    , IsAssignmentNULL      );
  rs.value("SrcFacturaNumber", IsSrcFacturaNumberNULL);
  rs.value("SrcCreationDate" , IsSrcCDateNULL        );
  rs.value("T_DIRECTION"     , IsFcDirectionNULL     );



  BookEntryID    = rs.value("T_BOOKENTRYID"     );    
  EntryNumber    = rs.value("T_ENTRYNUMBER"     );    
  if(EntryNumber == StrFor(1))
    EntryNumber = ""
  end;

  FacturaID      = rs.value("T_FACTURAID"     );    
  
  if(IsCDateNULL != true)
    CDate        = rs.value("T_CREATIONDATE"  );
  else
    CDate        =date(0,0,0);
  end;

  if(IsFacturaNumberNULL != true)
    FacturaNumber = rs.value("T_FACTURANUMBER" );
  else
    FacturaNumber = "";
  end;

  if(IsSrcFacturaNumberNULL != true)
    SrcFacturaNumber = rs.value("SrcFacturaNumber" );
  else
    SrcFacturaNumber = "";
  end;
  
  if(IsSrcCDateNULL != true)
    SrcCDate        = rs.value("SrcCreationDate"  );
  else
    SrcCDate        = date(0,0,0);
  end;

  if(IsAssignmentNULL != true)
    Assignment = rs.value("T_ASSIGNMENT" );
  else
    Assignment = 0;
  end;

  if(IsFcDirectionNULL != true)
    FcDirection = rs.value("T_DIRECTION");
  else
    FcDirection = Direction;
  end;

  EntryDate    = rs.value("t_ENTRYDATE"  );

  SupplierName = rs.value("T_SUPPLIERNAME"  );
  SupplierINN  = rs.value("T_SUPPLIERINN"   );
  PayDate      = rs.value("T_PAYDATE"       );

  AnnulEntry   = rs.value("T_ANNULENTRY"      );    

  if(IsTotalWithNDSNULL != true)
   TotalWithNDS = rs.value("T_TOTALWITHNDS"  );
  else 
   TotalWithNDS = $0;
  end;


  if(BookEntryID != 0) 
    sqlString = "   SELECT T_NDSRATE, SUM(T_AMOUNT), SUM(T_NDSAMOUNT), SUM(T_AMOUNTWITHNDS)" +
                  " FROM DBKENTSUM_DBT  WHERE T_BOOKENTRYID = " + BookEntryID +" AND T_FIID = 0 GROUP BY T_NDSRATE" ;

    rst = RsdRecordset( sqlString );

    while( rst.moveNext() )
       rst.value("T_NDSRATE",IsNDSRateNULL );
     
       if(IsNDSRateNULL != true)
         NDSRate = rst.value("T_NDSRATE" );

         if (NDSRate == -1)
           Free = rst.value("SUM(T_AMOUNT)");
         end;

         if(NDSRate == 18)
           Amount18    = rst.value("SUM(T_AMOUNT)"  );
           NDSAmount18 = rst.value("SUM(T_NDSAMOUNT)");
         end;

         if(NDSRate == 10)
           Amount10    = rst.value("SUM(T_AMOUNT)"  );
           NDSAmount10 = rst.value("SUM(T_NDSAMOUNT)");
         end;

         if(NDSRate == 0)
           Amount0 = rst.value("SUM(T_AMOUNT)"  );
         end;

         if(NDSRate == 20)
           Amount20    = rst.value("SUM(T_AMOUNT)"  );
           NDSAmount20 = rst.value("SUM(T_NDSAMOUNT)");
         end;
       else
         Free =  rst.value("SUM(T_AMOUNT)");
       end;
    end;
  end;

  if((OldTemplate == false) AND (Assignment == 2)) // Аванс
      Amount0  = $0;
      Amount18 = $0; 
      Amount10 = $0; 
      Amount20 = $0; 
      Free = $0; 
  end;

  if((OldTemplate == false) AND NOT ((Assignment == 5) AND (FcDirection != Direction))) // Пересчет
     Free        = - Free        ;
     Amount18    = - Amount18    ;
     NDSAmount18 = - NDSAmount18 ;            
     Amount10    = - Amount10    ;
     NDSAmount10 = - NDSAmount10 ; 
     Amount0     = - Amount0     ;
     Amount20    = - Amount20    ;
     NDSAmount20 = - NDSAmount20 ;
     TotalWithNDS = -TotalWithNDS;
  end;


  if( OldTemplate == true)
    sqlString = " SELECT DISTINCT T_COUNTRY AS COUNTRY,  DECODE(T_GTDNUMBER,chr(1),NULL,T_GTDNUMBER ) AS GTDNUMBER FROM DBILFACTURALINE_DBT " + 
                " WHERE T_FACTURAID  = " + FacturaID + 
                " AND T_COUNTRY != CHR(1) "+
                " ORDER BY COUNTRY "; 
  else
    sqlString = " SELECT DISTINCT C.T_CODENUM3 AS COUNTRY, DECODE(F.T_GTDNUMBER,chr(1),NULL,F.T_GTDNUMBER ) AS GTDNUMBER FROM DBILFACTURALINE_DBT F, DCOUNTRY_DBT C " + 
                " WHERE F.T_FACTURAID  = " + FacturaID + 
                " AND F.T_COUNTRY != CHR(1) "+
                " AND UPPER(F.T_COUNTRY) =  UPPER(C.T_NAME)"
                " ORDER BY COUNTRY "; 
  end;   
              

  rst = RsdRecordset( sqlString );

  CountryGTD = "";
  while( rst.moveNext() )
    rst.value("COUNTRY" , IsCountyNULL);
    rst.value("GTDNUMBER" , IsGTDNumNULL);

    if( IsCountyNULL != true )
      Country = rst.value("COUNTRY" );
    else
      Country = "";
    end;

    if( IsGTDNumNULL != true )
      GTDNum = rst.value("GTDNUMBER" );
    else
      GTDNum = "";
    end;

    if(Country != "")
     if(CountryGTD != "")
       CountryGTD = CountryGTD + ", "
     end;

     CountryGTD = CountryGTD + Country;

     if(GTDNum != "")
       CountryGTD = CountryGTD + " (" +GTDNum +")";
     end;
    end;
  end;

  if( OldTemplate == true)
    if(CountryGTD == "")
      CountryGTD ="-";
    end;
  end;

  if( OldTemplate == false)
    if(Assignment == 2)
      Amount0  = $0;
      Amount18 = $0; 
      Amount10 = $0; 
      Amount20 = $0; 
      Free = $0; 
    end;
  end;

  if(((AnnulEntry != 0) AND (OldTemplate == true)) OR ((OldTemplate == false) AND (AnnulEntry == 0)))
    TotalAmount18     =  TotalAmount18     -  Amount18     ;
    TotalNDSAmount18  =  TotalNDSAmount18  -  NDSAmount18  ;
    TotalAmount10     =  TotalAmount10     -  Amount10     ;
    TotalNDSAmount10  =  TotalNDSAmount10  -  NDSAmount10  ;
    TotalAmount0      =  TotalAmount0      -  Amount0      ;
    TotalAmount20     =  TotalAmount20     -  Amount20     ;
    TotalNDSAmount20  =  TotalNDSAmount20  -  NDSAmount20  ;
    TotalFree         =  TotalFree         -  Free         ;
    AllTotalWithNDS   =  AllTotalWithNDS   -  TotalWithNDS  ; 
  else
    TotalAmount18     =  TotalAmount18     +  Amount18     ;
    TotalNDSAmount18  =  TotalNDSAmount18  +  NDSAmount18  ;
    TotalAmount10     =  TotalAmount10     +  Amount10     ;
    TotalNDSAmount10  =  TotalNDSAmount10  +  NDSAmount10  ;
    TotalAmount0      =  TotalAmount0      +  Amount0      ;
    TotalAmount20     =  TotalAmount20     +  Amount20     ;
    TotalNDSAmount20  =  TotalNDSAmount20  +  NDSAmount20  ;
    TotalFree         =  TotalFree         +  Free         ;
    AllTotalWithNDS   =  AllTotalWithNDS   +  TotalWithNDS  ; 
  end;

  if( (OldTemplate == false) AND (Assignment == 2))
      strAmount0  = "";
      strAmount18 = ""; 
      strAmount10 = ""; 
      strAmount20 = ""; 
      strFree = ""; 
  else
      strAmount0  = Amount0;
      strAmount18 = Amount18; 
      strAmount10 = Amount10; 
      strAmount20 = Amount20; 
      strFree     = Free    ; 
  end;

  splitINN_KPP(SupplierINN, INN, KPP);

  if( OldTemplate == true)
    if(SupplierINN == "")
      INN = "-";
      KPP = "-";
    end;
  end;

  var strEntryDate;

  if( OldTemplate == true)
    if(EntryDate == ZeroDate)
      strEntryDate = "-";
    else
      strEntryDate = EntryDate;
    end;
  else
    if(Assignment == 2)
       strEntryDate = "";
    else
      if(EntryDate == ZeroDate)
        strEntryDate = "";
      else
        strEntryDate = EntryDate;
      end;
    end;
  end;

  if ((BeginDate <= fromdate) AND (fromdate <= EndDate))
    Rep.AddPrintCell( inum/*EntryNumber*/,              0, NULL, "c" );

    if( OldTemplate == true)
      Rep.AddPrintCell( CDate + "\n" +FacturaNumber,      0, NULL, "c" );
    else
      if(SrcFacturaNumber != "")
        Rep.AddPrintCell( SrcCDate + "\n" +SrcFacturaNumber,      0, NULL, "c" );
      else
        Rep.AddPrintCell( CDate + "\n" +FacturaNumber,      0, NULL, "c" );
      end;
    end;

    if( OldTemplate == false)
      Rep.AddPrintCell( "",                             0, NULL, "c" );
      if(SrcFacturaNumber != "")
        Rep.AddPrintCell( CDate + "\n" +FacturaNumber,  0, NULL, "c" );
      else
        Rep.AddPrintCell( "",                           0, NULL, "c" );
      end;
      Rep.AddPrintCell( "",                             0, NULL, "c" );
    end;
    Rep.AddPrintCell( PayDate,                          0, NULL, "c" );
    Rep.AddPrintCell( strEntryDate,                     0, NULL, "c" );
    Rep.AddPrintCell( SupplierName,                     0, NULL, "c" );
    Rep.AddPrintCell( INN,                              0, NULL, "c" );
    Rep.AddPrintCell( KPP,                              0, NULL, "c" );
    Rep.AddPrintCell( CountryGTD,                       0, NULL, "c" );
                                                           
    Rep.AddPrintCell( TotalWithNDS,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount18 ,                     0, NULL, "r" );
    Rep.AddPrintCell( NDSAmount18 ,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount10 ,                     0, NULL, "r" );
    Rep.AddPrintCell( NDSAmount10 ,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount0  ,                     0, NULL, "r" );
    Rep.AddPrintCell( strAmount20 ,                     0, NULL, "r" );
    Rep.AddPrintCell( NDSAmount20 ,                     0, NULL, "r" );
    Rep.AddPrintCell( strFree     ,                     0, NULL, "r" );
    Rep.AddStr();
  end;
end;





