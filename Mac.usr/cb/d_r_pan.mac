// процедура списания доходов-расходов. Панель.
//
// изменил vihrov 28.12.2011 C-8028
// KS 26.11.2013 Адаптация под 31ю сборку


import "d_r_imp.mac", Календарь;

file Опер( person );

var NewOper = true, Depart = 0, Date_Carry = Date(0,0,0);

var BalanceFrom = "", BalanceTo = "", AccountFrom = "", AccountTo = "", CurrencyFrom = ALLFININSTR, CurrencyTo = ALLFININSTR;

array mnuAccount, mnuRestType, mnuDepart, mnuBalance, DepartCode, DepartName;

var ServOper = false;

macro ListAccountBalDprtFrom(dlg) 
  record accRec(account);
  var Balance;
  if((strlen(dlg.BalanceFrom) == 3) or (strlen(dlg.BalanceFrom) == 5))
    Balance = dlg.BalanceFrom + "*";
  end;
  
  if(ListAccount(accRec, 1, ALLFININSTR, dlg.AccountFrom, null, Balance, dlg.Department, true))
    dlg.AccountFrom = accRec.Account;
    CurrencyFrom = accRec.Code_Currency;
    if(dlg.BalanceFrom == "")
      dlg.BalanceFrom = accRec.Balance;
    end;
  end;
end;

macro ListAccountBalDprtTo(dlg) 
  record accRec(account);
  var Balance;
  if((strlen(dlg.BalanceTo) == 3) or (strlen(dlg.BalanceTo) == 5))
    Balance = dlg.BalanceTo + "*";
  end;
  
  if(ListAccount(accRec, 1, ALLFININSTR, dlg.AccountTo, null, Balance, dlg.Department, true))
    CurrencyTo = accRec.Code_Currency;
    dlg.AccountTo = accRec.Account;
  end;
end;

macro InitRestTypeMenu()

  asize(mnuRestType, 0);
  mnuRestType(0) = Исходящий + "          ";
  mnuRestType(1) = Входящий  + "          ";

  return true;
end;

macro InitDepartMenu()
  var i = 0, NullDepart = false;

  i = 1;
  asize(mnuDepart,0);
  asize(DepartCode,0);
  asize(DepartName,0);
  while(next(dep))
    if(dep.Code == 0)
      NullDepart = true;
    end; 
    if((dep.Status == 2) AND (dep.NodeType == 1) )
      mnuDepart(i)  = string(dep.Code) + " - " + dep.Name;
      DepartCode(i) = dep.Code;
      DepartName(i) = dep.Name;
      i = i + 1;
    end;
  end;
  if(not NullDepart)
    mnuDepart(0)  = "0 - Все филиалы";
    DepartCode(0) = 0;
    DepartName(0) = "Все филиалы";
  end;

  return true;
end;

macro InitBalanceMenu()
  var flag = true, i = 0;

  asize(mnuBalance,0);
  bal.Chapter  = 1;
  bal.iNumPlan = 0;
  bal.Balance  = "";
  if(GetGE(bal))    
    while(flag)
      mnuBalance(i) = bal.Balance + "                ";
      i = i + 1;
      flag = next(bal);

      if((bal.Chapter != 1) OR (bal.iNumPlan != 0))
        flag = false;
      end;
    end;
  end;

  return true;
end;

macro InitMenu()
  InitDepartMenu();
  InitBalanceMenu();
  InitRestTypeMenu();

  return true;
end;

macro Init(dlg_rec)
  var stat;
  ClearRecord(dlg_rec);
  dlg_rec.Date_Oper   = {curdate};
  dlg_rec.Date_Carry  = {curdate} - 1;
  GetRegistryValue("COMMON\\СЕРВИСНЫЕ ПРОЦЕДУРЫ\\ЗАПУСК СЕРВИСНЫХ ПРОЦЕДУР", V_BOOL, ServOper, stat, null, {oper});

  if(({NumDprt} == {OperDprtNode}) and (ServOper)) 
    dlg_rec.Department  = 0;
  else
    dlg_rec.Department  = {OperDprt};
  end;
  dlg_rec.Oper        = {oper};
  dlg_rec.RestDate    = {curdate} - 1;
  dlg_rec.RestType    = Исходящий;
  dlg_rec.BalanceFrom = "";
  dlg_rec.AccountFrom = "";
  dlg_rec.BalanceTo   = "";
  dlg_rec.AccountTo   = "";
  dlg_rec.LastChar1   = "X";
  dlg_rec.LastChar2   = "";
  dlg_rec.IsDepSave   = "X";
  dlg_rec.IsSPOD      = "X";
  dlg_rec.Ground      = "Перенос финансового результата";

  CurrencyFrom = ALLFININSTR; 
  CurrencyTo = ALLFININSTR;
end;

macro Read(temp_rec, rec, read_panel)
  ClearRecord(temp_rec);

  temp_rec.Date_Oper   = rec.Date_Oper  ;
  temp_rec.Date_Carry  = rec.Date_Carry ;
  temp_rec.Department  = rec.Department ;
  temp_rec.RestDate    = rec.RestDate   ;
  temp_rec.Oper        = rec.Oper       ;
  temp_rec.BalanceFrom = rec.BalanceFrom;
  temp_rec.BalanceTo   = rec.BalanceTo  ;
  temp_rec.AccountFrom = rec.AccountFrom;
  temp_rec.AccountTo   = rec.AccountTo  ;
  temp_rec.Ground      = rec.Ground     ;
  temp_rec.CurrencyFrom= CurrencyFrom   ;
  temp_rec.CurrencyTo  = CurrencyTo     ;
 
  if(read_panel)
    if(rec.LastChar1 == "X")
      temp_rec.LastChar = 1;
    elif(rec.LastChar2 == "X")
      temp_rec.LastChar = 2;
    end;

    if(rec.RestType == Входящий)
      temp_rec.RestType = ТипВходящий;
    elif(rec.RestType == Исходящий)
      temp_rec.RestType = ТипИсходящий;
    end;
  else
    if(rec.LastChar = 1)
      temp_rec.LastChar1 = "X";
      temp_rec.LastChar2 = "";
    elif(rec.LastChar = 2)
      temp_rec.LastChar1 = "";
      temp_rec.LastChar2 = "X";
    end;

    if(rec.RestType = ТипВходящий)
      temp_rec.RestType = Входящий;
    elif(rec.RestType = ТипИсходящий)
      temp_rec.RestType = Исходящий;
    end;
  end;
  
  temp_rec.IsDepSave   = rec.IsDepSave  ;
  temp_rec.IsSPOD      = rec.IsSPOD     ;
end;

macro EventPan(dlg, cmd, id, key)
  var itemsel;

  if(cmd == DLG_INIT)
    if(NewOper)
      if( not InitMenu() )
        return CM_CANCEL;
      end;
      Init(dlg);
      dlg.Department_Name    = CheckNameDepartment(dlg.Department);
      dlg.Oper               = {oper};
      dlg.Oper_Name          = CheckNameOper(dlg.Oper);
      DisableFields(dlg, fldindex(dlg, "IsDepSave"));
    else
      Read(dlg, dr);
    end;
    if(({NumDprt} != {OperDprtNode}) or (not ServOper))
      DisableFields(dlg, fldindex(dlg, "Department"));
    end;

    UpdateFields(dlg);

  elif(CMD == DLG_SETFOCUS)
    if(trim(fldname(dlg, id))    == "BalanceFrom")
      BalanceFrom =  dlg.BalanceFrom;
    elif (trim(fldname(dlg, id)) == "BalanceTo")
      BalanceTo = dlg.BalanceTo;
    elif (trim(fldname(dlg, id)) == "AccountFrom")
      AccountFrom = dlg.AccountFrom;
    elif (trim(fldname(dlg, id)) == "AccountTo")
      AccountTo = dlg.AccountTo;
    elif (trim(fldname(dlg, id)) == "Department")
      Depart = dlg.Department;
    end;

  elif(CMD == DLG_REMFOCUS)
    if((trim(fldname(dlg, id)) == "BalanceFrom") and (BalanceFrom != dlg.BalanceFrom) and (dlg.BalanceFrom != ""))
      if(not CheckBalance(dlg.BalanceFrom, true))
        return CM_CANCEL;
      end;
      dlg.AccountFrom = "";
    elif((trim(fldname(dlg, id)) == "BalanceTo") and (BalanceTo   != dlg.BalanceTo) and (dlg.BalanceTo != ""))
      if(not CheckBalance(dlg.BalanceTo, true))
        return CM_CANCEL;
      end;
      dlg.AccountTo = "";
    elif((trim(fldname(dlg, id)) == "AccountFrom") and (AccountFrom   != dlg.AccountFrom))
      if(not CheckAccount(dlg.AccountFrom, NULL, @CurrencyFrom))
        return CM_CANCEL;
      end;
    elif((trim(fldname(dlg, id)) == "AccountTo") and (AccountTo   != dlg.AccountTo))
      if(not CheckAccount(dlg.AccountTo, NULL, @CurrencyTo ))
        return CM_CANCEL;
      end;
    elif((trim(fldname(dlg, id)) == "Department") and (Depart     != dlg.Department))
      dlg.Department_Name = CheckNameDepartment(dlg.Department);
      UpdateFields(dlg);
      Depart = dlg.Department;
    end;

  elif((CMD == DLG_KEY) and (key == 32/*K_SPACE*/))
    if(trim(fldname(dlg, id)) == "LastChar1")
      if(dlg.LastChar1 == "")
        dlg.LastChar1 = "X";
        dlg.LastChar2 = "";
        DisableFields(dlg, fldindex(dlg, "IsDepSave"));
        dlg.IsDepSave = "X";
      end;
    elif(trim(fldname(dlg, id)) == "LastChar2")
      if(dlg.LastChar2 == "")
        dlg.LastChar2 = "X";
        dlg.LastChar1 = "";
        if(({NumDprt} == {OperDprtNode}) and (ServOper))
          EnableFields(dlg, fldindex(dlg, "IsDepSave"));
        end;
      end;
    elif(trim(fldname(dlg, id)) == "IsDepSave")
      if(dlg.IsDepSave == "")
        dlg.IsDepSave = "X";
      else
        dlg.IsDepSave = "";
      end;
    elif(trim(fldname(dlg, id)) == "IsSPOD")
      if(dlg.IsSPOD == "")
        dlg.IsSPOD = "X";
      else
        dlg.IsSPOD = "";
      end;
    elif((({NumDprt} == {OperDprtNode}) and (ServOper)) and (trim(fldname(dlg, id)) == "Department"))
      dlg.Department      = 0;
      dlg.Department_Name = CheckNameDepartment(dlg.Department);
    elif( trim(fldname(dlg, id)) == "AccountFrom")
      dlg.AccountFrom = "";
    elif( trim(fldname(dlg, id)) == "AccountTo")
      dlg.AccountTo = "";
    elif( trim(fldname(dlg, id)) == "RestType")
      if(dlg.RestType == Входящий)
        dlg.RestType = Исходящий;
      elif(dlg.RestType == Исходящий)
        dlg.RestType = Входящий;
      end;
    end;
    UpdateFields(dlg);

  elif((CMD == DLG_KEY) and (key == 317/*K_F3*/))
    if(trim(fldname(dlg, id)) == "BalanceFrom")
      itemsel = Menu(mnuBalance, " ~Esc~ Выход  ~Enter~ Выбор", "Список балансовых счетов");
      if(itemsel >= 0)
        dlg.BalanceFrom = trim(mnuBalance(itemsel));
      end;
      if(BalanceFrom != dlg.BalanceFrom)
        dlg.AccountFrom = "";
      end;
    
    elif(trim(fldname(dlg, id)) == "BalanceTo")
      itemsel = Menu(mnuBalance, " ~Esc~ Выход  ~Enter~ Выбор", "Список балансовых счетов");
      if(itemsel >= 0)
        dlg.BalanceTo = trim(mnuBalance(itemsel));
      end;
      if(BalanceFrom != dlg.BalanceFrom)
        dlg.AccountTo = "";
      end;

    elif( trim(fldname(dlg, id)) == "AccountFrom")
      ListAccountBalDprtFrom(dlg);
      
    elif( trim(fldname(dlg, id)) == "AccountTo")
      ListAccountBalDprtTo(dlg);

    elif((trim(fldname(dlg, id)) == "Department") and (({NumDprt} == {OperDprtNode}) and (ServOper)))
      itemsel = Menu(mnuDepart, " ~Esc~ Выход  ~Enter~ Выбор", "Список филиалов");
      if(itemsel >= 0)
        dlg.Department_Name = DepartName(itemsel);
        dlg.Department      = DepartCode(itemsel);
      end;
    
    elif( trim(fldname(dlg, id)) == "Date_Carry")
      dlg.Date_Carry = GetDateByCalendar( dlg.Date_Carry );

    elif( trim(fldname(dlg, id)) == "RestDate")
      dlg.RestDate = GetDateByCalendar( dlg.RestDate );

    elif(trim(fldname(dlg, id)) == "RestType")
      itemsel = Menu(mnuRestType, " ~Esc~ Выход  ~Enter~ Выбор", "Список типов остатка");
      if(itemsel >= 0)
        dlg.RestType = trim(mnuRestType(itemsel));
      end;

    end;
    UpdateFields(dlg);

  elif(CMD == DLG_SAVE)

    if((dlg.BalanceFrom == "") AND (dlg.AccountFrom == "") )
      MsgBox("Должен быть задан счет или балансовый счет, с которого будет проводиться списание.");
      SetFocus(dlg, fldindex(dlg, "BalanceFrom"));
      return CM_CANCEL;     
    elif(not CheckBalance(dlg.BalanceFrom, true))
      SetFocus(dlg, fldindex(dlg, "BalanceFrom"));
      return CM_CANCEL;
    elif(dlg.Ground == "")
      MsgBox("Введите основание документа");
      SetFocus(dlg, fldindex(dlg, "Ground"));
      return CM_CANCEL;
    elif((dlg.BalanceTo == "") AND (dlg.AccountTo == "") )
      MsgBox("Должен быть задан счет или балансовый счет, на который будет проводиться списание.");
      SetFocus(dlg, fldindex(dlg, "BalanceTo"));
      return CM_CANCEL;     
    end;

    if(NewOper)
      Read(dr, dlg, true);
      RunOperation(ВидПДДоходыРасходы, dr, true, ВидОперацииДоходыРасходы);
    end;
  else
    return CM_DEFAULT;
  end;
end;

Опер.Oper = {oper};
getEQ( Опер );
if( Опер.CTypePerson == "У")
  msgbox("Вам запрещено вызывать эту функцию");
  exit(1);
end;

RunDialog(dpan, "EventPan");
exit (1);
