//-----------------------------------------------------------------------------
// Блок     : 29017 - "Предобработка кассового документа"
// Шаг      : 10    - "Предобработка"
// Описание : Макрос шага
// Изменил  : Gurin S. N. I-00157268-2 07.03.2012
// Изменил  : Gurin S. N. убрал вопрос системы помещения чека на согласование (письмо Николаевой Ж.)
//-----------------------------------------------------------------------------
// KS 26.11.2013 Адаптация под 31ю сборку
import PaymInter, pm_syscont, pmchk117, cschkrst, pmterror, pmprepromass;
/* EVG */
import FrontCommon, FrontRoute;
import OprInter, oralib; //Jushmanov 2014-02-20 C-19151

//Dex
import "AvtoCode.mac";
import "doc_comiss.mac";
import "fg_Life_parm.mac";
import "NaSogl.mac";

private const fgBank = fg_life_subject({OurBank});

private var PaymentObj:RsbPayment;
var obj = GenObject("RsbPayment",PaymentObj.PaymentID);
var PrichSogl;

/* EVG 15/04/2011 Проверка счёта по маске счетов банка:
   - true  - счёт банка;
   - false - не счёт банка.
*/
MACRO isBancAccount( account )
    var accBank, err;

    GetRegistryValue( "PS\\REQOPENACC\\СЧЕТА БАНКА", V_STRING, accBank, err );

    if ( not err )
        if ( not CompareStrWithMasks ( accBank, account ) )
            return true;
        end;
    end;

    return false;
END;


MACRO ExecuteStep( doc, paymDoc )
    var stat:integer = 0;


    if( stat == 0 )

        //Контроль
        //Seleznev контроль не нужен, т.к. это происходит во Фронт, но для чека нужен

        //Dex - установка страны нерезидента
        AvCodeVo(paymentObj); 

        if( PaymentObj.DocKind != CASH_PS_OUTORDER  )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL );
        else
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_NOTCONTROL );
        end;

        //Направление
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_INTERNAL );
        end;

        //Уточнение причастности к терроризму - Не требуется
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_TERR, OPR_PAYM_ST_TERR_NOTNEED );
        end;

        //Квитовка - не сквитован
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_OUT_KVIT, OPR_PM_ST_UNKVIT );
        end;

        //ЦАБС - проведен по счетам МФР 
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_CABS, OPR_PM_ST_MFR_YES );
        end;

        //Обработка в БО - нет
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_BO_PROCESS, OPR_PAYM_ST_BO_NO );
        end;

        // ПЗО
        if( stat == 0 )
            if( PaymentObj.DocKind == CASH_PS_OUTORDER )
                if (fgBank.is_EXV)
                /* EVG 15/04/2011 Добавлена проверка для ОВН: комиссия берётся только в случае, если получатель-
                                  счёт клиента. */
                    if ( (PaymentObj.DocKind == CASH_PS_INCORDER) and not isBancAccount( PaymentObj.ReceiverAccount ))
                        stat = УстановитьСтатусыПлатежа( OPR_PAYM_PZO, OPR_PAYM_ST_PZO_NEED );
                    else
                        stat = УстановитьСтатусыПлатежа( OPR_PAYM_PZO, OPR_PAYM_ST_PZO_NOTNEED );
                    end;
                else
                    stat = УстановитьСтатусыПлатежа( OPR_PAYM_PZO, OPR_PAYM_ST_PZO_NEED );
                end;
            else
                stat = УстановитьСтатусыПлатежа( OPR_PAYM_PZO, OPR_PAYM_ST_PZO_NOTNEED );
            end;
        end;

        // РО - не требуется
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_MANUAL, OPR_PAYM_ST_MANUAL_NOTNEED );
        end;

        // МФ
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_BRANCH, OPR_PAYM_ST_BRANCH_NO );
        end;

        // КАРТ - нет
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_NO );
        end;

        if( stat != 0 )      
            msgbox("Ошибка при установке статуса платежа");
            return 1;
        end;
    end;

    //Seleznev
    if (IsFrontPayment(PaymentObj))
        InsertOprStatus(OPR_STATUS_FRONT, OPRSTAT_FRONT_YES);
    end;

    if( stat == 0 ) // Системный контроль
        debugbreak;
        stat = ExecuteSysControlStep( PaymentObj );
        if( stat < 0 )
            return 1;
        elif( stat > 0 )
            return 0;
        end;
    end;

    if( stat == 0 ) // Проверка на причастность к терроризму
        if(not ПлатежПоКомиcсии(PaymentObj.DocKind, PaymentObj.PaymentID)) // A.Gregeradsky - 22.12.2009 - Платеж по комиссии не проверяется на терроризм
            stat = ПроверкаПричастностиТерроризму( PaymentObj );
            if( stat < 0 )
                return 1;
            elif( stat > 0 )
                return 0;
            end;
        end;
    end;

    if( stat == 0 ) // Контроль по 117-И
        stat = КонтрольПо117И( PaymentObj );
        if( stat < 0 )
            return 1;
        elif( stat > 0 )
            return 0;
        end;
    end;

    debugbreak;
    //Gurin S. N. I-00157268-2
    if (stat == 0)
        if (PaymentObj.DocKind == 420)
            If (NaSogl(PrichSogl, PaymentObj, obj.origin)) 
                msgbox("Исполнение документа требует согласования| тк. "+PrichSogl);          
                PaymentObj.notes.addnote(123,PrichSogl);
                stat = УстановитьСтатусыПлатежа(118,2);
            end;
        end;  
    end;
  
    if( stat == 0 ) // Проверка остатков по счетам
        stat = CS_CheckAccRest( PaymentObj );
    end;

    // TAM      10.12.2014 C-35081 Шаг комплайенс-контроля для чеков
    // Golovkin 28.01.2015 C-36679 Изменение последовательности шага Комплаэнс-контроля при проводке чеков  
    if (PaymentObj.DocKind == CASH_PS_OUTORDER)
       var sql = " SELECT 1 FROM dobjatcor_dbt                       " +
                 "         WHERE t_objecttype = 3                    " +
                 "           AND t_groupid = 300                     " +
                //LAO C-38649 27.04.15 добавляем уровень 4,5     "           AND t_attrid = 3                        " +
                 "           AND t_attrid in (3,5,6)                 " +
                 "           AND t_object = LPAD (:partyid, 10, '0') " +
                 "           AND T_VALIDTODATE = to_date('31.12.9999','dd.mm.yyyy') " ;
       sql = execSQLSelect( sql, makeArray( SQLParam( "partyid",  PaymentObj.Payer ) ) );
       if ( sql.movenext )
          УстановитьСтатусыПлатежа(400,1);
       end;
    end;

    //если отвергли, сбросить ручную обработку, чтобы можно было после перезапуска запланировать предобработку
    if (GetOprStatus(OPR_PAYM_STATE)==OPR_PM_ST_REJECT) 
        stat = УстановитьСтатусыПлатежа( OPR_PAYM_MANUAL, OPR_PAYM_ST_MANUAL_NOTNEED );
    end;

    return stat;
END;


//Jushmanov 2014-02-20 C-19151
macro PostStepAction( message,      /* 1 - выполнение шага; 2 - откат шага;   */
                      errTrn,       /* статус выполнения шага. 0 - ошибки нет */
                      FirstDoc,     /* указатель на первичный документ        */
                      ID_Oper,      /* внутренний идентификатор операции      */
                      Number_Step,  /* Номер шага операции (из настроек)      */
                      KindOper,     /* номер вида операции                    */
                      KindDoc,      /* номер вида первичного документа        */
                      KindStep,     /* вид шага операции                      */
                      ID_Step )     /* внутренний идентификатор шага операции */
    private var logquery;

    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(ID_Oper) != V_INTEGER) and (valtype(ID_Oper) != V_STRING)) ID_Oper = 0; end;
        if ((valtype(ID_Step) != V_INTEGER) and (valtype(id_Step) != V_STRING)) ID_Step = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + ID_Oper + " AND t_id_step = " + ID_Step;
        ExecSQL(logquery, null, false);
    end;

    return 0;
end;

/* -----------------------------------------------------------------------------
   Массовое выполнение шага "Предобработка кассового документа"
   ----------------------------------------------------------------------------- */

/* -----------------------------------------------------------------------------
   Предтранзакционные действия 
   Все проверки отражаются только на временной таблице dpmprepro_tmp,
   никакие изменения в БД не делаются
   ----------------------------------------------------------------------------- */
macro PrepMassExecuteStep() 

    // Подготовительные действия
    var stat:integer = execStoredFunc( "RSI_PM_CSPREPRO.MassPreprocessPrepare", V_INTEGER );

    if( not stat )
        stat = PM_MassPreproPrepare();
    end;

    // Системный контроль
    if( not stat )
        stat = execStoredFunc( "RSI_PM_CSPREPRO.MassSysControlPrepare", V_INTEGER );
    end;

    // Проверка остатка
    if( not stat )
        stat = execStoredFunc( "RSI_PM_CSPREPRO.MassCheckRestPrepare", V_INTEGER );
    end;

    if( stat )
        MemoryError( stat );
    end;

    return stat;

end;

/* -----------------------------------------------------------------------------
   Транзакционные действия 
   Всё, что напроверяли, отражается на статусах документа, платежа, операции 
   ----------------------------------------------------------------------------- */
macro MassExecuteStep()

    var stat:integer = execStoredFunc( "RSI_PM_CSPREPRO.MassPreprocessExecute", V_INTEGER );

    if( not stat )
        stat = PM_MassPreproExecute();
    end;

    if( stat )
        MemoryError( stat );
    end;

    return stat;

end;

/* -----------------------------------------------------------------------------
   Действия после транзакции
   Заполняем лог обработки платежей для отчета 
   ----------------------------------------------------------------------------- */
macro PostMassExecuteStep()

    var stat:integer = execStoredFunc( "RSI_PM_PREPRO.MassFillLog", V_INTEGER );

    if( stat )
        MemoryError( stat );
    end;

    return stat;

end;