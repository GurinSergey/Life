/************************************************************************/
/*         Автоматизированная банковская система RS-Bank                */
/*                 Copyright (c) R-Style Software Lab 2002              */
/*                                                                      */
/*  Имя файла      : prcsoo.mac                                         */
/*                                                                      */
/*  Описание       : Печать расходного кассового ордера из ББ и РКО     */
/*                   согласно Постановления Госкомстата №88             */
/*                                                                      */
/*  Программист    : Смирнов С.В. SMR PRN                               */
/*                                                                      */
/*  Создан         : 18.07.02                                           */
/*                                                                      */
// KS 04.12.2013 Пересон пользовательских доработок в 31ю сборку
/************************************************************************/

import globals, FIInter, PTInter, PaymInter, oprinter;
import prpm, prcs;
IMPORT oralib, likepy;
import "fg_Life_parm.mac";
debugbreak;
private Const fdBank = fg_life_subject({OurBank});

// KS 21.06.2011 C-1183 Подпись получателя
macro getInstructionDateFromRegistry(registryName : String, defaultValue : Date)
    const DEFAULT_REGISTRY_PATH : String = "REPTREG/REP_GROUPS/COMMON";

    var errorCode : Integer = 0;
    var value : string = "";
    var valueType : Integer = V_UNDEF;

    valueType = getRegistryValue(DEFAULT_REGISTRY_PATH + "/" + registryName, V_STRING, value, errorCode);

    if ((errorCode != 0) or (valueType != V_STRING))
        runError("Ошибка чтения даты начала действия инструкции из реестра: " + DEFAULT_REGISTRY_PATH + "/" + registryName);
    end;

    var position = 0;
    var day   = 0; 
    var month = 0;
    var year  = 0;

    position = strBrk(value, "./-");
    day      = Int(subStr(value, 1, position));
    value    = subStr(value, position + 1);

    position = strBrk(value, "./-");
    month    = Int(subStr(value, 1, position));
    value    = subStr(value, position + 1);

    year = Int(value);

    return Date(day, month, year);

    OnError(err);
    return defaultValue;
end;


/* -----------------------------------------------------------
   Структура данных печатной формы расходного ордера

   ----------------------------------------------------------- */

PRIVATE CLASS TOutOrderPrintData

  var Number               : string,
      DateStr              : string,
      Client               : string,
      PayerAccount         : string,
      ReceiverAccount      : string,
      PayerAmount          : money,
      ReceiverAmount       : money = $0,
      PayerFICode          : string = "",
      ReceiverFICode       : string = "",
      BankName             : string,
      BIC                  : string,
      ArraySym             : TArray,
      ArrayPartSum         : TArray,
      ArraySum             : TArray,
      Ground               : string,
      ArrayPaperName       : TArray;

  private var
      PaperKind            : integer,
      PaperSeries          : string,
      PaperNumber          : string,
      PaperIssuer          : string,
      PaperIssuedDate      : date;
  
  private macro FillTArrayFromArray( TArr : TArray, Arr )
  
    var i : integer = 0;
    for (i, 0, asize(Arr) - 1, 1)
      TArr.value(i) = Arr(i);
    end;
    
  end;

  private macro FillPaperName(PaperName : TArray, PaperKind : integer, PaperSeries : string,
                              PaperNumber : string, PaperIssuer : string, PaperIssuedDate : date)
    var d:integer;
    PaperName.value(0) = "";
    PaperName.value(1) = "";
    PaperName.value(2) = "";

    PaperName.value(0) = string( GetPaperKindName( PaperKind ), " № ");
    if( strlen( PaperSeries ) )
      PaperName.value(0) = string( PaperName.value(0), PaperSeries, " " );
    end;
    if( strlen(PaperNumber ) )
      PaperName.value(0) = string( PaperName.value(0), PaperNumber );
    end;
    
    PaperName.value(1) = "";
    PaperName.value(2) = "";
    
    if( strlen(PaperIssuer ) )
      PaperName.value(1) = string( "Выдан ", PaperIssuer );
    end;

    DateSplit( PaperIssuedDate, d );      
    if(d > 0) 
      PaperName.value(1) = string( PaperName.value(1), 
                             IfThenElse( PaperIssuer != "", " ", "Выдан " ),
                             "\"", 
                             SubStr( string(PaperIssuedDate:m:f), 1, 2 ), 
                             "\"", 
                             SubStr( string(PaperIssuedDate:m:f), 3, strlen(string(PaperIssuedDate:m:f) ) - 3 ),
                             "ода"                                
                           );
    end; 

    if( StrLen( PaperName.value(1) ) > 89 )
      PaperName.value(2) = SubStr( PaperName.value(1), 89     );
      PaperName.value(1) = SubStr( PaperName.value(1),  1, 89 );
    end;        
  
  end;

  /* -----------------------------------
     Проинициализировать данными кассового ордера
     ----------------------------------- */
  MACRO InitByCashOrder( pmpaym:TRecHandler, pmrmprop:TRecHandler, pscshdoc:TRecHandler )

    Number       = pmrmprop.rec.Number;
    DateStr      = FillDateString();

    /* Клиент */
    Client = pscshdoc.rec.FIOClient;     
        
    PayerAccount = pmpaym.rec.PayerAccount;
    ReceiverAccount = pmpaym.rec.ReceiverAccount;
    PayerAmount = pmpaym.rec.Amount;
    if((pmpaym.rec.FIID > 0) or (pmpaym.rec.PayFIID > 0))
      PayerFICode = GetFICodeCCY(pmpaym.rec.FIID);
    end;

    if( pmpaym.rec.FIID != pmpaym.rec.PayFIID )
      ReceiverFICode = GetFICodeCCY(pmpaym.rec.PayFIID);
      ReceiverAmount = pmpaym.rec.PayAmount;
    end;
    
    BankName = pmrmprop.rec.PayerBankName;
    BIC = {MFO_Bank};
  
    array aSym, aPartSum;
    FillCashSymbolsAndSum( aPartSum, aSym, SYMB_KIND_OUTGO );
    ArraySym = TArray;
    FillTArrayFromArray(ArraySym, aSym);
    ArrayPartSum = TArray;
    FillTArrayFromArray(ArrayPartSum, aPartSum);

    array aSum;
    FillPayAmountStr( aSum );
    ArraySum = TArray;
    FillTArrayFromArray(ArraySum, aSum);

    Ground = pmrmprop.rec.Ground;

    //документ, удостоверяющий личность
    ArrayPaperName = TArray;
    PaperKind = pscshdoc.rec.PaperKind;
    PaperSeries = pscshdoc.rec.PaperSeries;
    PaperNumber = pscshdoc.rec.PaperNumber;
    PaperIssuer = pscshdoc.rec.PaperIssuer;
    PaperIssuedDate = pscshdoc.rec.PaperIssuedDate;
    FillPaperName(ArrayPaperName, PaperKind, PaperSeries, PaperNumber, PaperIssuer, PaperIssuedDate);
                                                                                        
  END;
  
  /* -----------------------------------
     Проинициализировать данными мемориального документа
     ----------------------------------- */
  MACRO InitByMemorialDocument( pmpaym:TRecHandler, pmrmprop:TRecHandler )
  
    Number       = pmrmprop.rec.Number;
    DateStr      = FillDateString();

    /* Клиент */
    Client = pmrmprop.rec.PayerName;     
        
    PayerAccount = pmpaym.rec.PayerAccount;
    ReceiverAccount = pmpaym.rec.ReceiverAccount;
    PayerAmount = pmpaym.rec.Amount;
    if((pmpaym.rec.FIID > 0) or (pmpaym.rec.PayFIID > 0))
      PayerFICode = GetFICodeCCY(pmpaym.rec.FIID);
    end;

    if( pmpaym.rec.FIID != pmpaym.rec.PayFIID )
      ReceiverFICode = GetFICodeCCY(pmpaym.rec.PayFIID);
      ReceiverAmount = pmpaym.rec.PayAmount;
    end;
    
    BankName = pmrmprop.rec.ReceiverBankName;
    BIC = {MFO_Bank};
  
    ArraySym = TArray;
    ArrayPartSum = TArray;
    var i: integer = 0;                                  
    while( i < 5 )                                
      ArraySym.value(i) = "";                                     
      ArrayPartSum.value(i) = "";                              
      i = i + 1;                                         
    end;                                                 
    ArraySym.value(0) = pmrmprop.rec.cashSymbolCredit;       
    if (ArraySym.value(0))                                     
      ArrayPartSum.value(0) = string(pmpaym.rec.PayAmount:f);  
    end;

    array aSum;
    FillPayAmountStr( aSum );
    ArraySum = TArray;
    FillTArrayFromArray(ArraySum, aSum);

    Ground = pmrmprop.rec.Ground;

    //документ, удостоверяющий личность
    ArrayPaperName = TArray;
    ArrayPaperName.value(0) = "";
    ArrayPaperName.value(1) = "";
    // pmpaym.Payer является физ.лицом?
    var strSQL : string = "SELECT t_LegalForm " +                        
                          "FROM dparty_dbt " +               
                          "WHERE t_partyID = " + pmpaym.rec.Payer;                          
    var rs : RsdRecordset = RsdRecordset( strSQL );                            
    if ( (rs.moveNext() ) and ( rs.value("t_LegalForm") == 2) ) // физ. лицо                                  
      //Получить документ persnidc
      strSQL = "SELECT t_paperkind, t_paperseries, t_papernumber, t_paperissuer, t_paperissueddate " +                        
               "FROM dpersnidc_dbt " +               
               "WHERE t_PersonID = " + pr_pmpaym.rec.Payer +
               "  AND t_IsMain = 'X' ";                          
      var persnidc : RsdRecordset = RsdRecordset( strSQL );                            
      if ( persnidc.moveNext() )
        PaperKind = persnidc.value("t_PaperKind");
        PaperSeries = persnidc.value("t_PaperSeries" );
        PaperNumber = persnidc.value("t_PaperNumber");
        PaperIssuer = persnidc.value("t_PaperIssuer");
        PaperIssuedDate = date( persnidc.value("t_PaperIssuedDate") );
        FillPaperName(ArrayPaperName, PaperKind, PaperSeries, PaperNumber, PaperIssuer, PaperIssuedDate);
      end;
    end;

  END;

END;
    
/* -----------------------------------------------
   Непосредственно печать по подготовленным данным
   ----------------------------------------------- */

MACRO PrintOutCashOrder(d : TOutOrderPrintData, ncopy : integer):bool

  var CashSymbCount = 5, MaxCountSymbPrint = 9;
  array ArrayClient, ArrayBankName, ArrayGround;
  var j = 0;
  /* EVG 30/05/2011 */
  var n = 0;

 if ( fdBank.is_EXV )
    StrSplit( d.BankName, ArrayBankName, 33, 14, 3);
    StrSplit(d.Ground, ArrayGround, 58, 39, 3);
 else
    StrSplit( d.BankName, ArrayBankName, 47, 34, 2);
    /*Основание платежа*/
    StrSplit(d.Ground, ArrayGround, 65, 47, 3);
 end;

  StrSplit( d.Client, ArrayClient, 34, 28, 3);
  if( ArrayBankName(1) == "" )
    ArrayBankName(1) = ArrayBankName(0);
    ArrayBankName(0) = "";
  end; 

// KS 21.06.2011 C-1183 Подпись получателя Инициализация из REPTREG\REP_GROUPS\COMMON\ДАТА_2632У
  var Signature;
  private var RCB_I2632_DATE = getInstructionDateFromRegistry("ДАТА_2632У",  Date(27, 06, 2011));
  if (pr_pmpaym.rec.ValueDate<RCB_I2632_DATE)
   Signature = "(личная подпись)";
  else
   Signature = "(подпись получателя)";
  end;   

/* EVG Для валютных ордеров символ кассы не печатается */
  if (pr_pmpaym.rec.FIID != 0)
     while ( j < CashSymbCount )
        d.ArraySym.value(j)     = "";
        d.ArrayPartSum.value(j) = "";
        j = j + 1;
     end;
  end;


  /*Печать*/
  while(ncopy > 0)
    ncopy = ncopy - 1;

     if ( fdBank.is_EXV )
         if ( n == 0 )
            println ("(3R(s0p13.50h8.5v0s0b20T&l1X&l8D&l0O&a7L&l2E&l8D");
         else
            println (" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ");
         end;
         /* EVG 30/05/2011 Форма изменена для ЭВ Воронеж */
         /* DAI 07/06/2011 В паспортных данных добавлена строка для длинных фраз Выдан*/
         [
                                          ┌──────────┐              ┌─────────────────────┐
           РАСХОДНЫЙ КАССОВЫЙ ОРДЕР N     │ ######## │              │Кодформы документа по│
           #########################      └──────────┘              │         ОКУД        │
                                                                    ├─────────────────────┤
                                                                    │        0402009      │
                                                                    └─────────────────────┘
                                                  ┌---------------------------------------┐
                                                  |           ОТРЫВНОЙ ТАЛОН              |
                                                  | к расходному кассовому ордеру N ##### |
                                                  └---------------------------------------┘
                                                     ДЕБЕТ          
                                             ┌───────────────────────┌────────────────────┐
           Выдать                            │  сч.№                 │ Место для наклейки │
           ################################# │  #################### │  отрывного талона  │
           ################################# │                       │                    │
           ──────────────────────────────────┴───────────────────────┼────────────────────┤
                                                        КРЕДИТ       │                    │
           ──────────────────────────────────┬───────────────────────┤####################│
           Наименование банка ############## │  сч.№                 │                    │
           ################################# │  #################### │   Сумма цифрами    │
           ################################# └───────────────────────┼────────────────────┤
                                                      БИК  ######### │    в том числе     │
           ──────────────────────────────────────────────────────────┤    по символам:    │
           Сумма прописью с указанием наименования валюты            ├──────┬─────────────┤
           ##########################################################│символ│    сумма    │
           ##########################################################├──────┼─────────────┤
           ##########################################################│ #### │ ########### │
           ──────────────────────────────────────────────────────────┼──────┼─────────────┤
           Направление выдачи #######################################│ #### │ ########### │
           ##########################################################├──────┼─────────────┤
           ##########################################################│ #### │ ########### │
          ]( d.Number:c, d.DateStr, d.Number:l, 
             ArrayClient(0), d.PayerAccount:l,  
             ArrayClient(1),
             //Gurin S. 05.11.2014
             //d.Amount:l:f,
             d.ArraySum.value(0):l:f,
             ArrayBankName(0),
             ArrayBankName(1),
             d.ReceiverAccount:l,
             ArrayBankName(2),
             {MFO_Bank}, 
             d.ArraySum.value(0), 
             d.ArraySum.value(1), 
             d.ArraySum.value(2), 
             d.ArraySym.value(0), d.ArrayPartSum.value(0):c, 
             ArrayGround(0), 
             d.ArraySym.value(1), d.ArrayPartSum.value(1):c, 
             ArrayGround(1),
             ArrayGround(2), 
             d.ArraySym.value(2), d.ArrayPartSum.value(2):c
           );
           
        if( d.ArraySym.size <= 3 )
          [ ──────────────────────────────────────────────────────────┴──────┴─────────────┘ ];
        else
          while( CashSymbCount < d.ArraySym.size )
          [                                                           ├──────┼─────────────┤
                                                                      │ #### │ ########### │ ]
            (d.ArraySym.value(CashSymbCount), d.ArrayPartSum.value(CashSymbCount):c);
            CashSymbCount = CashSymbCount + 1;
          end;                      
          [ ──────────────────────────────────────────────────────────┴──────┴─────────────┘ ];
        end;

          [ Предъявлен документ,удостоверяющий личность ####################################  
            ################################################################################ 
            ################################################################################ 
            Указанную в расходном кассовом 
            ордере сумму получил                                                             
                                             ──────────────────────
                                              ####################

            Бухгалтерский работник              Контролер                  Кассовый работник


          ]( d.ArrayPaperName.value(0), 
             d.ArrayPaperName.value(1),
             d.ArrayPaperName.value(2),
             Signature:c
           );

         /* EVG 30/05/2011 */
     else

     [                                                                         ┌─────────────────────┐
                                                                               │      Код формы      │
                                                                               │  документа по ОКУД  │
                                                                               │       0402009       │
                                                                               └─────────────────────┘
                                      ┌──────────┐                          ┌────────────────────────┐
           Расходный кассовый ордер N │ ######## │                          │     Отрывной талон     │
                                      └──────────┘                          │ к расходному кассовому │
                                                                            │    ордеру N ########   │
                                                                            └────────────────────────┘
       #########################                                                
                                                                         ┌───────────────────────┐ 
                                                          ДЕБЕТ          │   Место для наклейки  │
                                                                         │   отрывного талона    │
                                           ┌─────────────────────────────┼───────────────────────┤
       Выдать ############################ │счет № ####################  │ ###  ################ │
        ################################## └─────────────────────────────┤                       │
        ##################################                КРЕДИТ         │     Сумма цифрами     │
       ────────────────────────────────────┬─────────────────────────────┤                       │
       Наименование банка                  │счет № ####################  │ ###  ################ │
        ################################## └─────────────────────────────┼───────────────────────┤
        ###############################################   БИК  ######### │      в том числе      │
       ──────────────────────────────────────────────────────────────────┤      по символам:     │
       Сумма прописью с указанием наименования валюты                    ├──────┬────────────────┤
        #################################################################│символ│     сумма      │
        #################################################################├──────┼────────────────┤
        #################################################################│ #### │ ############## │
       ──────────────────────────────────────────────────────────────────┤ #### │ ############## │
       Направление выдачи ###############################################│ #### │ ############## │
        #################################################################│ #### │ ############## │
        #################################################################│ #### │ ############## │
      ]( d.Number:c, d.Number:l, 
         d.DateStr,
         ArrayClient(0), d.PayerAccount:l,
         d.PayerFICode,
         d.PayerAmount:r:f,
         ArrayClient(1), 
         ArrayClient(2),
         d.ReceiverAccount:l,
         d.ReceiverFICode,
         d.ReceiverAmount:r:f:z, 
         ArrayBankName(0),
         ArrayBankName(1),
         d.BIC, 
         d.ArraySum.value(0), 
         d.ArraySum.value(1), 
         d.ArraySum.value(2), 
         d.ArraySym.value(0), d.ArrayPartSum.value(0):c, 
         d.ArraySym.value(1), d.ArrayPartSum.value(1):c, 
         ArrayGround(0), 
         d.ArraySym.value(2), d.ArrayPartSum.value(2):c, 
         ArrayGround(1),
         d.ArraySym.value(3), d.ArrayPartSum.value(3):c, 
         ArrayGround(2), 
         d.ArraySym.value(4), d.ArrayPartSum.value(4):c
       );
    if( d.ArraySym.size <= 5 )
      [ ──────────────────────────────────────────────────────────────────┴──────┴────────────────┘ ];
    else
      while( ( CashSymbCount < d.ArraySym.size ) AND ( CashSymbCount < MaxCountSymbPrint ) )
      [                                                                   │ #### │ ############## │ ]
        (d.ArraySym.value(CashSymbCount), d.ArrayPartSum.value(CashSymbCount):c);
        CashSymbCount = CashSymbCount + 1;
      end;                      
      [                                                                   └──────┴────────────────┘ ];
    end;

          [ Предъявлен документ, удостоверяющий личность ##############################################  
            ########################################################################################### 
                                                                                                                                                                                                      
                                                                                                          
            Указанную в ордере сумму получил                                                             
                                             ──────────────────────
                                              ####################                                 


            ───────────────────────────────────────────────────────────────────────────────────────────
            Бухгалтерский работник               Контролер                   Кассовый работник

         ]( d.ArrayPaperName.value(0), 
             d.ArrayPaperName.value(1),
             Signature:c
           );
     end;      
     
     n = n + 1;
    
  end;

  return TRUE;

END;

/* Буфер мультивалютного документа, чтобы печать не ругалась */
var pr_multydoc:TRecHandler = TRecHandler( "multydoc.dbt" );
/* Буфер мемордера, чтобы печать не ругалась */
var pr_cb_doc  :TRecHandler = TRecHandler( "cb_doc.dbt"   );

/*------------------------------------------------------------------------
  Печать расходного кассового ордера из ББ и РКО
  согласно Положению от 24.04.2008 г. N 318-П, Указанию ЦБ № 2054-У от 14.08.2008г 
    record pr_pmpaym.rec   ("pmpaym.dbt",   "bank.def");
    record pr_pscshdoc.rec ("pscshdoc.dbt", "bank.def");
    ncopy:integer - число копий
  ------------------------------------------------------------------------*/

MACRO PrintDocument(ncopy:integer):bool

  var DocKind:integer = pr_pmpaym.rec.DocKind;
  var data : TOutOrderPrintData = TOutOrderPrintData();

  if( ( DocKind == 420/*CASH_PS_OUTORDER*/ ) or ( DocKind == 440/*CASH_BOF_OUTORDER*/ ) )
    data.InitByCashOrder( pr_pmpaym, pr_pmrmprop, pr_pscshdoc );  
  elif( ( DocKind == CB_MULTYDOC ) or ( DocKind == DLDOC_MEMORIALORDER ) )
    data.InitByMemorialDocument( pr_pmpaym, pr_pmrmprop );
  else
    MsgBox("Данный вид документа не поддерживается макросом");
    return FALSE;
  end;
  if( pr_PrintEA )
    PrintEAHeader();
  end;

  return PrintOutCashOrder(data, ncopy);

END;
