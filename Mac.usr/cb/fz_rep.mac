/*
   "Финансовый мониторинг"
   Макрос печати реестра операций
*/
// KS 02.12.2013 Перенос пользовательских доработок в 31ю сборку

Import FMInter, PTInter, FIInter, rsd, "fm_str.mac", "globals.mac", rsbdataset;

/* Параметры отчета, определяемые системой */
var ДатаНачалаПериода : date;
var ДатаКонцаПериода  : date;
var Статус            : integer;
var Операционист      : integer;
var Исполнитель       : integer;
var ТипОперации       : integer;
var ClientID          : integer;
var ФормаОтчета       : integer;
var Группировка       : integer;


/* Другие параметры отчета */
/* - длины полей */
const TypeLength         = 3;
const DateLength         = 10;
const CodeCurrencyLength = 5;
const SumLength          = 19;
const SumRubLength       = 19;
const PayerLength        = 30;
const ReceiverLength     = 30;
const GroundLength     = 40;
const StatusLength       = 17;
const CodeOKLength       = 6;
const AddCodeOKLength    = 6;
const CodeNOLength       = 6;

var RepLength = 1
              //+ TypeLength         + 1
              + DateLength         + 1
              + CodeCurrencyLength + 1
              + SumLength          + 1
              + SumRubLength       + 1
              + PayerLength        + 1
              + ReceiverLength     + 1
              + GroundLength       + 1
              + StatusLength       + 1
              + CodeOKLength       + 1
              + AddCodeOKLength    + 1
              + CodeNOLength       + 1
              ;

var nSections;
var FirstCall;
var TabLine, SplitLine;

var CodeOK, AddCodeOK, CodeNO;
var LastDocKind;
var LastClientID, LastKind;

var DocKind_КолОК;
var DocKind_КолНО;
var DocKind_КолОС;
var DocKind_КолОО;

var DocKind_Всего;

var КолОК;
var КолНО;
var КолОС;
var КолОО;


var Всего;


MACRO GetDocGround(paymid)
 var rs, str;
 str = "SELECT t_ground " +
       "  FROM dpmrmprop_dbt " +
       " WHERE t_paymentid = "+paymid ;
 rs = trsbdataset(str);
 if(rs and rs.movenext)
    return rs.ground;
 else
    return "";
 end;
END;

private macro НазваниеБанка()
  file bank_file("party.dbt");
  bank_file.PartyID = {OurBank};
  if( getEQ(bank_file) ) return bank_file.Name; end;
  return {Name_Bank};
end;

private macro ИмяОперациониста( Oper )
  file person("person.dbt");
  person.Oper = Oper;
  if( getEQ(person) ) return person.Name; end;
  return "";
end;

private macro СтрокаТипОперации( Тип )
  if( Тип == OPCONTR_TYPE_OC )   return "ОК"; end;
  if( Тип == OPCONTR_TYPE_UO )   return "НО"; end;
  if( Тип == OPCONTR_TYPE_RA )   return "ОС"; end;
  if( Тип == OPCONTR_TYPE_RO )   return "ОО"; end;
  return "";
end;

private macro СтрокаПервичныйДокумент( DocKind )
  file oprkdoc("oprkdoc.dbt");
  var DocKindString = "Первичный документ: " + string(DocKind) + " - ";

  oprkdoc.DocKind = DocKind;
  if( getEQ(oprkdoc) )
    DocKindString = DocKindString + oprkdoc.Name;
  end;
  
  return DocKindString;
end;

private macro СтрокаКлиент( ClientID )
  
  record party("party.dbt");

  var ClientString = "не задан";

  if( ClientID > 0 )

    var ClientCode = "";
    var ClientName = "";

    ClientCode = GetCodeParty( ClientID, PTCK_CONTR );

    if( ПолучитьСубъекта(ClientID, party) == 0 )
      ClientName = party.Name;
    end;

    ClientString = ClientCode + " - " + ClientName;

  end;

  return "Клиент: " + ClientString;

end;

private macro СтрокаУчастОперации( Kind )
  if( Kind == _FM_PARTY_PAYER )              return "Плательщик в операции:"; end;
  if( Kind == _FM_PARTY_PAYER_REPRESENT )    return "Представитель плательщика в операции:"; end;
  if( Kind == _FM_PARTY_RECEIVER )           return "Получатель платежа в операции:"; end;
  if( Kind == _FM_PARTY_RECEIVER_REPRESENT ) return "Представитель плательщика в операции:"; end;
  if( Kind == _FM_PARTY_ORDER )              return "Лицо, по поручению и от имени которого совершается операция:"; end;
  if( Kind == _FM_PARTY_DEC_ACC_REJ )        return "Заявитель по отказному договору счета:"; end;
  if( Kind == _FM_PARTY_CLN_OPR_REJ )        return "Клиент по отказной операции:"; end;

  return "";
end;

/* Получить коды операции */
private macro GetCodes( opcontr )
  var ArrayCodeOK : TArray;
  var ArrayCodeNO : TArray;

  macro FormCodeString( CodeString, ArrayCode, MainCode )
    var i, N;
    N = ArrayCode.Size();
    i = 0;
    while( i < N )
      if( MainCode != ArrayCode(i) ) CodeString = CodeString + " " + ArrayCode(i); end;
      i = i + 1;
    end;
    return Trim(CodeString);
  end;
  
  CodeOK = ""; AddCodeOK = ""; CodeNO = "";
  ПолучитьКодыОперации( opcontr, CodeOK, CodeNO, true );

  if( ПолучитьКодыОперации( opcontr, ArrayCodeOK, ArrayCodeNO ) )
    AddCodeOK = FormCodeString( AddCodeOK, ArrayCodeOK, CodeOK );
    CodeNO    = FormCodeString( CodeNO   , ArrayCodeNO, CodeNO );
  end;
end;



private macro SplitString( CageArray )
  var i, N;
  var CurN, nString = 0;

  i = 0; N = CageArray.Size();
  
  while( i < N )
    CurN = CageArray(i).Split();
    if( nString < CurN )
      nString = CurN;
    end;
    i = i + 1;
  end;
  
  return nString;
end;

private macro print_string( CurLine, CageArray )
  var i, N;
  var TabLine = "";

  i = 0; N = CageArray.Size();
  while( i < N )
    TabLine = FM_AddToTabLine(TabLine, CageArray(i).GetLine(CurLine), CageArray(i).GetCageLength(), CageArray(i).GetTypeIndent);
    i = i + 1;
  end;
  
  println( TabLine );
end;


/* Напечатать одну запись с разбитием на строки */
private macro PrintString()
  var i, nString;
  var TabLine;
  array FigureArray, PropertyArray, ValuesArray;
  var Cage;
  var CageArray : TArray;

  CageArray = TArray(0);
  i = 0;
  while( GetParm(i, Cage) )
    CageArray(i) = Cage;
    i = i + 1;
  end;

  nString = SplitString( CageArray );
  
  i = 0;
  while( i < nString )
    
    print_string( i, CageArray );

    i = i + 1;
  end;

end;

private macro PrintResult( КолОК, КолНО, КолОС, КолОО, Всего )
  println( FM_AddToTabLine( "", "Всего количество операций ОК: " + КолОК, RepLength, "l", true ) );
  println( FM_AddToTabLine( "", "Всего количество операций НО: " + КолНО, RepLength, "l", true ) );
  println( FM_AddToTabLine( "", "Всего количество операций ОС: " + КолОС, RepLength, "l", true ) );
  println( FM_AddToTabLine( "", "Всего количество операций ОО: " + КолОО, RepLength, "l", true ) );
  println( FM_AddToTabLine( "", "   Всего количество операций: " + Всего, RepLength, "l", true ) );
end;

private macro PrintResultDocKind()
  PrintResult( DocKind_КолОК, DocKind_КолНО, DocKind_КолОС, DocKind_КолОО, DocKind_Всего );
  println;
end;


macro PrintHeader()
  var hour = 0, min = 0;   
  TimeSplit ( Time(), hour, min, NULL );  

  const HeadFirstString  = "Реестр документов, включенных в отчет "+ НазваниеБанка();
  const HeadSecondString = "в соответствии с Федеральным законом \"О противодействии легализации (отмыванию) доходов, полученных преступным путем, и финансированию терроризма\" №115-ФЗ";
  const HeadDateString   = "Период: с " + string(ДатаНачалаПериода:f) + " по " + string(ДатаКонцаПериода:f);
  const HeadDateTimeString   = "Дата и время выпуска реестра " + string(Date():f) + " " + StrSubst( string(hour:2), " ", "0" )+"."+StrSubst( string(min:2), " ", "0" );

//  println( НазваниеБанка() );
  println();
  println( FM_AddToTabLine( "", HeadFirstString , RepLength, "c", true ) );
  println( FM_AddToTabLine( "", HeadSecondString, RepLength, "c", true ) );
  println();
  println( FM_AddToTabLine( "", HeadDateString, RepLength, "c", true ) );

  println( FM_AddToTabLine( "", HeadDateTimeString, RepLength, "l", true ) );
  if( Исполнитель != 0 )
    println( FM_AddToTabLine("", "Исполнитель: " + Исполнитель + " " + ИмяОперациониста(Исполнитель), RepLength, "l", true) );
  end;
  println();
    
  SplitLine = "";
//  SplitLine = FM_AddToSplitLine( SplitLine, TypeLength         );
  SplitLine = FM_AddToSplitLine( SplitLine, CodeOKLength       );
  SplitLine = FM_AddToSplitLine( SplitLine, AddCodeOKLength    );
  SplitLine = FM_AddToSplitLine( SplitLine, CodeNOLength       );
  SplitLine = FM_AddToSplitLine( SplitLine, DateLength         );
  SplitLine = FM_AddToSplitLine( SplitLine, CodeCurrencyLength );
  SplitLine = FM_AddToSplitLine( SplitLine, SumLength          );
  SplitLine = FM_AddToSplitLine( SplitLine, SumRubLength       );
  SplitLine = FM_AddToSplitLine( SplitLine, GroundLength       );
  SplitLine = FM_AddToSplitLine( SplitLine, PayerLength        );
  SplitLine = FM_AddToSplitLine( SplitLine, ReceiverLength     );
  SplitLine = FM_AddToSplitLine( SplitLine, StatusLength       );
  println( SplitLine );

  PrintString(/* FM_RepCage("Тип"         , TypeLength        , 0, 0, "c")
              ,*/
               FM_RepCage("Код ОК"      , CodeOKLength      , 0, 0, "c")
              ,FM_RepCage("Доп. код"    , AddCodeOKLength   , 0, 0, "c")
              ,FM_RepCage("Код НО"      , CodeNOLength      , 0, 0, "c")
              ,FM_RepCage("Дата"        , DateLength        , 0, 0, "c")
              ,FM_RepCage("Код вал"     , CodeCurrencyLength, 0, 0, "c")
              ,FM_RepCage("Сумма"       , SumLength         , 0, 0, "c")
              ,FM_RepCage("Сумма в руб.", SumRubLength      , 0, 0, "c")
              ,FM_RepCage("Основание"   , GroundLength      , 0, 0, "c")
              ,FM_RepCage("Плательщик"  , PayerLength       , 0, 0, "c")
              ,FM_RepCage("Получатель"  , ReceiverLength    , 0, 0, "c")
              ,FM_RepCage("Статус"      , StatusLength      , 0, 0, "c")
             );
   println( SplitLine );

   КолОК = 0;
   КолНО = 0;
   КолОС = 0;
   КолОО = 0;
   Всего = 0;

end;


macro PrintLine( Doc, ClientID, Kind )
  
  record opcontr("opcontr.dbt");
  record oppt_pay("opcntrpt.dbt");
  record oppt_rec("opcntrpt.dbt");
  var КодОперации;
  var Плательщик, Получатель;
  var ground;
  var FMOpr : RsbFMOperation;
  
  SetBuff( opcontr, Doc );

  FMOpr = RsbFMOperation(opcontr.OperationID);

  Плательщик = "";
  Получатель = "";
  ПолучитьУчастникаОперации( oppt_pay, OpContr, 1 );
  ПолучитьУчастникаОперации( oppt_rec, OpContr, 4 );
  if( ФормаОтчета == 0 )
    /* с названиями клиентов */
    Плательщик = oppt_pay.Name;
    Получатель = oppt_rec.Name;
  else
    /* с номерами счетов */
    if( oppt_pay.BankCode == "" ) Плательщик = string(oppt_pay.Account:f); end;
    if( oppt_rec.BankCode == "" ) Получатель = string(oppt_rec.Account:f); end;
  end;

  GetCodes( opcontr );

  if( LastDocKind != opcontr.DocKind )
  if(Группировка == 1)
    
/*    if( not FirstCall )
      PrintResultDocKind();
      println( SplitLine );
    end;
    
    LastDocKind = opcontr.DocKind;
  */
    nSections = nSections + 1; /* кол-во секций */
    
    DocKind_КолОК = 0;
    DocKind_КолНО = 0;
    DocKind_КолОС = 0;
    DocKind_КолОО = 0;
    DocKind_Всего = 0;

/*    if( opcontr.DocKind )
      PrintString( FM_RepCage(СтрокаПервичныйДокумент(opcontr.DocKind ), RepLength - 2, 0, 0, "l") );
      println( SplitLine );
    end;
  */

  elif(Группировка == 0)

    if( LastClientID != ClientID )
      if( not FirstCall )
        PrintResultDocKind();
        println( SplitLine );
      end;

      LastClientID = ClientID;

      nSections = nSections + 1; /* кол-во секций */
    
      DocKind_КолОК = 0;
      DocKind_КолНО = 0;
      DocKind_КолОС = 0;
      DocKind_КолОО = 0;   
      DocKind_Всего = 0;

      if( ClientID )
        PrintString( FM_RepCage(СтрокаКлиент( ClientID ), RepLength - 2, 0, 0, "l") );
        println( SplitLine );
      end;
    end;
    if (LastKind != Kind)
       LastKind = Kind;
       PrintString( FM_RepCage(СтрокаУчастОперации( Kind ), RepLength - 2, 0, 0, "l") );
       println( SplitLine );
    end;

  end;
  end;  

    if( FMOpr.Type == OPCONTR_TYPE_OC ) КолОК = КолОК + 1; DocKind_КолОК = DocKind_КолОК + 1;
  elif( FMOpr.Type == OPCONTR_TYPE_UO ) КолНО = КолНО + 1; DocKind_КолНО = DocKind_КолНО + 1;
  elif( FMOpr.Type == OPCONTR_TYPE_RA ) КолОС = КолОС + 1; DocKind_КолОС = DocKind_КолОС + 1;  
  elif( FMOpr.Type == OPCONTR_TYPE_RO ) КолОО = КолОО + 1; DocKind_КолОО = DocKind_КолОО + 1; end;
  Всего = Всего + 1; DocKind_Всего = DocKind_Всего + 1;
  //ground = getdocground(opcontr.documentid);
  PrintString(/* FM_RepCage(СтрокаТипОперации(FMOpr.Type)          , TypeLength        , 0, 0, "r")
              ,*/
               FM_RepCage(CodeOK                                 , CodeOKLength      , 0, 0, "c")
              ,FM_RepCage(AddCodeOK                              , AddCodeOKLength   , 0, 0, "c")
              ,FM_RepCage(CodeNO                                 , CodeNOLength      , 0, 0, "c")
              ,FM_RepCage(string(opcontr.Date_Carry:f)           , DateLength        , 0, 0, "c")
              ,FM_RepCage(ПолучитьКодФинИн(opcontr.Code_Currency), CodeCurrencyLength, 0, 0, "r")
              ,FM_RepCage(opcontr.SumCur                         , SumLength         , 0, 0, "r")
              ,FM_RepCage(opcontr.SumRub                         , SumRubLength      , 0, 0, "r")
              ,FM_RepCage(opcontr.ground                         , GroundLength       , 0, 0, "l")
              ,FM_RepCage(Плательщик                             , PayerLength       , 0, 0, "l")
              ,FM_RepCage(Получатель                             , ReceiverLength    , 0, 0, "l")
              ,FM_RepCage(НазваниеСтатусаОперации(opcontr)       , StatusLength      , 0, 0, "c")
             );
   println( SplitLine );
   
   FirstCall = false;

end;


macro PrintFooter()
/*  if( nSections > 1 )
    PrintResultDocKind();
  end;*/

 // PrintResult( КолОК, КолНО, КолОС, КолОО, Всего );

  var errcode, name_boss, name_book, name_oper, is_oper;

  GetRegistryValue("PRBB\\FM\\NAMEBOSS", V_STRING, name_boss, errCode);
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки \"PRBB\\FM\\NAMEBOSS\"");
  end;
  
  GetRegistryValue("PRBB\\FM\\NAMEBOOK", V_STRING, name_book, errCode);
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки \"PRBB\\FM\\NAMEBOOK\"");
  end;
 
  GetRegistryValue("PRBB\\FM\\ISOPER", V_BOOL, is_oper, errCode);
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки \"PRBB\\FM\\ISOPER\"");
  end;

  if (not is_oper)
     GetRegistryValue("PRBB\\FM\\NAMEOPER", V_STRING, name_oper, errCode);
     if ( errCode > 0 )
       msgbox("Проверьте наличие настройки \"PRBB\\FM\\NAMEOPER\"");
     end;
  else
     name_oper = {Name_Oper};
  end;

//msgbox(name_boss,"||", name_book,"||", name_oper,"||", is_oper);
[ 
   Ответственный сотрудник                  ###############################################


   Зам.Председателя Правления               ###############################################


   Главный бухгалтер                        ###############################################

](name_oper, name_boss, name_book);

end;

/* Точка входа в макрос */
ДатаНачалаПериода = {curdate};
ДатаКонцаПериода  = {curdate};  
Статус            = 0;
Операционист      = 0;
Исполнитель       = {oper};
ТипОперации       = 0;
ClientID          = 0;
ФормаОтчета       = 0;
Группировка       = 0;

nSections = 0;
FirstCall = true;
LastDocKind = -1;
