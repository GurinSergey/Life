/************************************************************************/
/*         Автоматизированная банковская система RS-Bank                */
/*                 Copyright (c) R-Style Software Lab 2002              */
/*  Имя файла      : prcs.mac                                           */
/*  Описание       : Печать кассовых документов.                        */
/*                   Буферы и вспомогательные функции.                  */
/*  Программист    : Смирнов С.В. SMR PRN                               */
/*  Создан         : 30.09.02                                           */
// KS 04.12.2013 Перенос пользовательских доработок в 31ю сборку
/************************************************************************/
//zmp 03.11.2014  HF по 3352-У
import CashInter, CTInter, likepy, OprInter, PTInter, FIInter, prpm;
import globals, "fg_Life_parm.mac", "lib_compare.mac", padej;

debugbreak;

private Const fdBank = fg_life_subject({OurBank});

var pr_pscshdoc:TRecHandler = TRecHandler( "pscshdoc.dbt", "bank.def" );

/* виды символов */
CONST SYMB_KIND_INCOME:integer = 1,
      SYMB_KIND_OUTGO :integer = 2,
      SYMB_KIND_OUTBAL:integer = 3;

/* виды документов для symbcash.DocKind */
CONST SYMB_DOCKIND_RUR:integer = 1,
      SYMB_DOCKIND_CUR:integer = 7;
      
/*------------------------------------------------------------------------
  Класс - кассовый сивол в документе.
  Инициализируется записью в таблице symbcash.dbt
  ------------------------------------------------------------------------*/
CLASS TCashSymbol(rsymbcash)
  var kind:integer = rsymbcash.rec.Kind,
      code:string  = rsymbcash.rec.Symbol,
      sum :moneyl  = rsymbcash.rec.Sum;
END;

/*------------------------------------------------------------------------
  Класс - список кассовых сиволов в документе.
  Инициализируется записью в таблице pscshdoc.dbt
  (первичным кассовым документом) и видом символов
  ------------------------------------------------------------------------*/
CLASS (TArray)TCashSymbolList(rpscshdoc:TRecHandler, kind:integer)

  private var m_kind    :integer     = kind;
  private var m_pscshdoc:TRecHandler = rpscshdoc;

  MACRO append(item)
    Value(Size) = item;
  END;
  
  MACRO kind_filter( symb:TRecHandler )
    if( symb.rec.Kind == m_kind )
      append( TCashSymbol( symb ) );
    end;
  END;
  
  MACRO get( )
    record pscshdoc_rec ( "pscshdoc.dbt" );
    Copy( pscshdoc_rec, m_pscshdoc );
    foreach( GetCashSymb( pscshdoc_rec ), R2M( this, "kind_filter" ) );
  END;

  // Конструктор
  InitTArray();
  get();

END;

/*------------------------------------------------------------------------
  Получить клиента счета
    acc_num:string       - номер счета
    FIID:integer         - идентификатор валюты (для рублей должен быть 0)
    client:TRecHandler   - буфер клиента
    Возвращает id клиента и заполняет client, если он передан.
  ------------------------------------------------------------------------*/
MACRO GetAccountClient(accnum:string, FIID:integer, client:TRecHandler):integer
  var faccount:TBFile = TBFile("account.dbt" , "R", 0, "account.dbt" , "bank.def");
  faccount.rec.Chapter       = 1;
  faccount.rec.Code_Currency = FIID;
  faccount.rec.Account       = accnum;
  if( faccount.GetEQ() )
    if( ПолучитьСубъекта(faccount.rec.Client, client) )
      ClearRecord(client);
    end;
    return faccount.rec.Client;
  else
    return 0;
  end;
END;

/*------------------------------------------------------------------------
  Получить вид документа, удостоверяющего личность
    PaperKind:integer     - ID вида
    rpaprkind:TRecHandler - буфер записи
  Заполняет rpaprkind.
  ------------------------------------------------------------------------*/
MACRO GetPAPRKIND(PaperKind:integer, rpaprkind:TRecHandler):bool
  var fpaprkind:TBFile = TBFile("paprkind.dbt", "R", 0, "paprkind.dbt", "bank.def");
  fpaprkind.rec.PaperKind = PaperKind;
  if(fpaprkind.GetEQ())
    Copy(rpaprkind, fpaprkind);
    return TRUE;
  else
    ClearRecord(rpaprkind);
    return FALSE;
  end;
END;

macro usr_getFullDate(_d) 
   var dd, mm, yyyy, mon;
   dateSplit (date(trim(_d)), dd, mm, yyyy);
   if   (mm == 1)  mon = "января";
   elif (mm == 2)  mon = "февраля";
   elif (mm == 3)  mon = "марта";
   elif (mm == 4)  mon = "апреля";
   elif (mm == 5)  mon = "мая";
   elif (mm == 6)  mon = "июня";
   elif (mm == 7)  mon = "июля";
   elif (mm == 8)  mon = "августа";
   elif (mm == 9)  mon = "сентября";
   elif (mm == 10) mon = "октября";
   elif (mm == 11) mon = "ноября";
   elif (mm == 12) mon = "декабря";
   end;
   return string (string(dd:o:2),  " ", mon, " ", yyyy, " года");
end;

macro getOfficerData(id, officerPost:@string,officerName:@string )
   var rs = "  SELECT   t_Post post, (SELECT   PT.T_SHORTNAME "+
            "  FROM   DPARTY_DBT PT                           "+
            "  WHERE   PT.T_PARTYID = P.T_PARTYID) name       "+
            "  FROM   dofficer_dbt o,                         "+
            " dperson_dbt p,                                  "+
            " dpmpaym_dbt pm,                                 "+
            "  ddp_dep_dbt dep                                "+
            " WHERE       P.T_OPER = PM.T_OPER                "+
            " AND P.T_PARTYID = o.t_PersonID                  "+
            " AND P.T_CODEDEPART = DEP.T_CODE                 "+
            " AND O.T_PARTYID = DEP.T_PARTYID                 "+
            " AND PM.T_PAYMENTID =                            " + id;
   rs = rsdRecordset(rs);
   if(rs and rs.movenext())  
      officerPost = rs.value("post", null, v_string);
      officerName = rs.value("name", null, v_string);
   else
      officerPost = "";
      officerName = "";
   end;
   
end;


/*------------------------------------------------------------------------
  Получить наименование вида документа, удостоверяющего личность
    PaperKind:integer  - ID вида
  Возвращает наименование вида или пустую строку.
  ------------------------------------------------------------------------*/
MACRO GetPaperKindName(PaperKind:integer):string
  var rpaprkind:TRecHandler = TRecHandler( "paprkind.dbt", "bank.def" );
  if( GetPAPRKIND(PaperKind, rpaprkind) ) return rpaprkind.rec.Name;
  else                                    return "";
  end;
END;

macro GetFICodeCCY(FIID)
  var fi:TRecHandler = TRecHandler("fininstr.dbt", "bank.def");
  if((ПолучитьФинИн(FIID, fi) == 0))
    return fi.rec.ccy;
  end;
  return "";
end;
  

/*------------------------------------------------------------------------
  Заполнение атрибутов для печатных форм рублевых кассовых согласно 318-П
  ------------------------------------------------------------------------*/


/* Заполнить строку даты в формате: "01" февраля 2008 года */
MACRO FillDateString():string

  return  string( "\"", 
                  SubStr( string(pr_pmpaym.rec.ValueDate:m:f), 1, 2 ), 
                  "\"", 
                  SubStr( string(pr_pmpaym.rec.ValueDate:m:f), 3, strlen(string(pr_pmpaym.rec.ValueDate:m:f) ) - 3 ),
                  "ода"
                 ) ;
END;

MACRO GetBankShortName( PartyID, ShortName )
  file Субъекты (party) key 0;
  if ( ПолучитьСубъекта (PartyID, Субъекты ) == 0 )
     SetParm( 1, Субъекты.ShortName ); /* Заполним имя банка */
  end;
END;  


/* Заполнить имя и аттрибуты получателя - для приходных и ордеров подкрепления */
MACRO FillReceiverInOrd( ReceiverName, 
                         ReceiverINN:@string, 
                         ReceiverKPP:@string, 
                         ReceiverOKATO:@string )


  /*Получатель*/
  var receiver:TRecHandler = TRecHandler("party.dbt",    "bank.def");
  var fi      :TRecHandler = TRecHandler("fininstr.dbt", "bank.def"); ПолучитьФинИн(pr_pmpaym.rec.FIID, fi);
  var attr    :TRecHandler = TRecHandler("objattr.dbt" , "bank.def");

  var BankShortName:string;
  var ObjCat;
  
  GetAccountClient(pr_pmpaym.rec.ReceiverAccount, fi.rec.FIID, receiver);

   if ( fdBank.is_EXV)
       StrSplit(pr_pmrmprop.rec.ReceiverName, ReceiverName, 33, 33, 2);
   else
       StrSplit(pr_pmrmprop.rec.ReceiverName, ReceiverName, 35, 25, 3);
   end;

  /* ИНН и КПП */
  SplitINN_KPP(ПолучитьКодСубъекта(receiver.rec.PartyID, PTCK_INN), ReceiverINN, ReceiverKPP);

  /* ОКАТО получателя*/
  ObjCat = RsbObjCategories( OBJTYPE_PARTY, UniID(receiver, OBJTYPE_PARTY));
  ObjCat.GetMainAttr(12, {curdate}, attr);
  ReceiverOKATO = attr.rec.NameObject;

END;

/* Заполнить имя и название предъявленного документа получателя - для расходных */
MACRO FillReceiverOutOrd( ReceiverName, PaperName )

  var d:integer;

   if ( fdBank.is_EXV)
     StrSplit( pr_pscshdoc.rec.FIOClient, ReceiverName, 33, 33, 2);
   else
     StrSplit( pr_pscshdoc.rec.FIOClient, ReceiverName, 34, 28, 3);
   end;

  PaperName(0) = string(GetPaperKindName(pr_pscshdoc.rec.PaperKind), " № ");
  if( strlen( pr_pscshdoc.rec.PaperSeries ) )
    PaperName(0) = string( PaperName(0), pr_pscshdoc.rec.PaperSeries, " " );
  end;
  if( strlen(pr_pscshdoc.rec.PaperNumber) )
    PaperName(0) = string( PaperName(0), pr_pscshdoc.rec.PaperNumber );
  end;
  
  PaperName(1) = "";
  PaperName(2) = "";
  
  if( strlen(pr_pscshdoc.rec.PaperIssuer) )
    PaperName(1) = string( "Выдан ", pr_pscshdoc.rec.PaperIssuer );
  end;

  DateSplit( pr_pscshdoc.rec.PaperIssuedDate,d );      
  if(d > 0) 
    PaperName(1) = string( PaperName(1), 
                           IfThenElse( pr_pscshdoc.rec.PaperIssuer != "", ", ", "Выдан " ), 
                           StrSubSt(string(pr_pscshdoc.rec.PaperIssuedDate:m:f), ".", "ода") );
  end; 

    if ( fdBank.is_EXV)
      /* DAI 07/06/2011 Исправлена расчетная длина строк для вывода сведений о выдаче паспорта в две строки*/
      if( StrLen( PaperName(1) ) > 80 )
        PaperName(2) = SubStr( PaperName(1), 81     );
        PaperName(1) = SubStr( PaperName(1),  1, 80 );
      end;
    else
      if( StrLen( PaperName(1) ) > 89 )
        PaperName(2) = SubStr( PaperName(1), 90     );
        PaperName(1) = SubStr( PaperName(1),  1, 89 );
      end;
    end;

END;

/* Сумма прописью */
MACRO FillAmountStr( ArraySum, StrLen)

  var CURtext = "", 
      KOPstr  = "";
  var fi:TRecHandler = TRecHandler("fininstr.dbt", "bank.def");

  var IsCurrency = "";
  var DocKind:integer = pr_pmpaym.rec.DocKind;
  if( ( DocKind == CB_MULTYDOC ) or ( DocKind == DLDOC_MEMORIALORDER ) )
    if( pr_pmpaym.rec.FIID != 0 )
      IsCurrency = "X";
    end;
  else
    IsCurrency = pr_pscshdoc.rec.IsCurrency;
  end;
  
  if( IsCurrency == "X" )
    ПолучитьФинИн(pr_pmpaym.rec.FIID, fi);
    //CURtext = "(" + fi.rec.Name + ") " +
           CURtext =  CurToStrAlt(pr_pmpaym.rec.Amount, NULL, KOPstr, GetISOCode(pr_pmpaym.rec.FIID));
           CURtext  =  substr(CURtext, 1, StrBrk(CURtext, KOPstr) - 2);
    //StrSet( CURtext, StrBrk(CURtext, KOPstr), + KOPstr + "/100                            " );
  else  
    CURtext = RubToStrAlt(pr_pmpaym.rec.Amount);
  end;
  if (StrLen == null)
    StrLen = 65;
  end;
  StrSplit(CURtext, ArraySum, StrLen, StrLen, 3); 
END;

MACRO FillPayAmountStr( ArraySum, StrLen)

  var CURtext = "", 
      KOPstr  = "";
  var fi:TRecHandler = TRecHandler("fininstr.dbt", "bank.def");
  
  if( pr_pmpaym.rec.PayFIID != 0 )
    ПолучитьФинИн(pr_pmpaym.rec.PayFIID, fi);
    //CURtext = "(" + fi.rec.Name + ") " +
          CURtext  =  CurToStrAlt(pr_pmpaym.rec.PayAmount, NULL, KOPstr, GetISOCode(pr_pmpaym.rec.PayFIID));
          CURtext  =  substr(CURtext, 1, StrBrk(CURtext, KOPstr) - 2);
   // StrSet( CURtext, StrBrk(CURtext, KOPstr), + KOPstr + "/100                            " );
  else  
    CURtext = RubToStrAlt(pr_pmpaym.rec.PayAmount);
  end;
  if (StrLen == null)
    StrLen = 65;
  end;
  StrSplit(CURtext, ArraySum, StrLen, StrLen, 3); 
END;

/* Заполнить массив кассовых символов и суммы по этим символам */
MACRO FillCashSymbolsAndSum( ArraySum, ArraySym, SymbolKind: integer )

  var SymbList:TCashSymbolList = TCashSymbolList( pr_pscshdoc, SymbolKind );
  var i: integer = 0;
  var count:integer = IfThenElse( SymbolKind == SYMB_KIND_INCOME, 6, 5 );

  while( i < SymbList.Size )
      ArraySym(i) = SymbList.Value(i).code;
      ArraySum(i) = string(SymbList.Value(i).sum:f);
    i = i + 1;
    end;
  /* если символов меньше, чем на них отведено строк в таблице, недостающие заполним пробелами */
  while( i < count )
    ArraySym(i) = 
    ArraySum(i) = " ";
    i = i + 1;
  end;

END;

macro GetFICodeName(FIID)
  var fi:TRecHandler = TRecHandler("fininstr.dbt", "bank.def");
  if((ПолучитьФинИн(FIID, fi) == 0))
    return fi.rec.Name;
  end;
  return "";
end;


macro MakeMoneyStr3352(_Money:money)

  VAR StrRub  :string = "";
  VAR StrKop  :string = "";
  VAR StrSep  :string = "-";
  VAR RetValue:string = ""; 
  if ( _Money != $0 )
    var FractionalPartNumber: bool = false;
    GetRegistryValue( "COMMON\\ПЕЧАТЬ\\ОРДЕР\\КАССА\\РАЗДЕЛИТЕЛЬ_СУММЫ", V_STRING, StrSep ); 
    GetRegistryValue( "COMMON\\ПЕЧАТЬ\\ОРДЕР\\КАССА\\ДРОБНАЯ_ЧАСТЬ_ЦИФРАМИ", V_BOOL, FractionalPartNumber ); 
    
    if(ValType(_Money) == V_MONEY)
      StrRub = Trim(String((Floor(Double(_Money))):16:0));
      StrKop = Trim(String((100.0 * (Double(_Money) - Floor(Double(_Money)))):16:0));
      if(StrLen(StrKop) < 2)
        StrKop = "0" + StrKop;
      end;
    
      RetValue = StrRub;
      if( not (not FractionalPartNumber and ( StrKop == "00" )) )
        RetValue = StrRub + StrSep + StrKop;
      end;
    end;
  end;
  return RetValue;

end; /* MakeMoneyStr3352 */

macro MakeDateStr3352()
  var FormatDate: integer = 0;
  GetRegistryValue( "COMMON\\ПЕЧАТЬ\\ОРДЕР\\КАССА\\ФОРМАТ_ДАТЫ", V_INTEGER, FormatDate ); 
  if ( FormatDate == 1 )
    return FillDateString();
  else
    return pr_pmpaym.rec.ValueDate;
  end;
end; /* MakeDateStr3352 */

macro GetFICodeForReport( FIID, IsCurrency )
  if(IsCurrency == "X")
    var FICodeName: integer = 0;
    GetRegistryValue( "COMMON\\ПЕЧАТЬ\\ОРДЕР\\КАССА\\НАИМЕНОВАНИЕ_ВАЛЮТЫ", V_INTEGER, FICodeName ); 
    if (FICodeName == 0)    
      return GetFICodeCCY( FIID );
    elif (FICodeName == 1)    
      return GetFICodeName( FIID );
    end;
  end;
  return "";
end;


CLASS TPayInstruction
  var Account    : string,
      FIID       : integer,
      FICode     : string,
      Amount     : string;
END;

macro СчетСвязансКУ( Account:string, FIID:integer, Chapter:integer )

  var query:string ="SELECT 1        " +
                    "  FROM DUAL     " +
                    " WHERE EXISTS ( " +
                                     "SELECT /*+FIRST_ROWS(1)*/ 1                " +
                                     "  FROM dmccateg_dbt cat, dmcaccdoc_dbt doc " +
                                     " WHERE doc.t_catid    =  cat.t_id          " +
                                     "   AND doc.t_account  = :Account           " +
                                     "   AND doc.t_currency = :FIID              " +
                                     "   AND doc.t_chapter  = :Chapter           " +
                                     "   AND ROWNUM <= 1 )                       " ;

  var params:TArray = makeArray( SQLParam( "Account", Account    ),
                                 SQLParam( "FIID"   , FIID       ),
                                 SQLParam( "Chapter", Chapter    ) );

  var rs:RsdRecordset = execSQLselect( query, params, TRUE );

  if( rs and rs.moveNext() )
    return true;
  elif( rs )
    return false;
  end;
end;  

  /* Заполнение счетов и сумм по кредиту.
     Если по платежу имеется разноска по кредиту, то берём из разноски.
     Иначе из платежа Pmpaym только счет */
macro FillCreditList1( CreditList:TArray, pmpaym:TRecHandler, IsCurrency )
debugbreak;    
  var i : integer = 0;
  var pi : TPayInstruction;
  for(i, 0, 2, 1)
    pi = TPayInstruction();
    pi.Account = pi.FICode = pi.Amount = "";
    CreditList.value(i) = pi; 
  end;

  // есть ли разноска?
  var payment : RsbPayment = RsbPayment(pmpaym.rec.PaymentID),
      pmaddpi : TRecHandler = TRecHandler( "pmaddpi.dbt" ),
      stat    : integer = payment.PIList( PRT_Credit ).First();

  if ( not stat ) // если есть, заполняем из разноски
    i = 0;
    while( not stat )
      stat = payment.PIList( PRT_Credit ).Current( pmaddpi );
      if( not stat )
        pi = TPayInstruction();
        pi.Account    = pmaddpi.rec.Account;
        pi.FIID       = pmaddpi.rec.FIID;
        pi.FICode     = GetFICodeForReport(pi.FIID,IsCurrency);
        pi.Amount     = MakeMoneyStr3352(pmaddpi.rec.Amount);
        CreditList.value( i ) = pi;
        i = i + 1;
        stat = payment.PIList( PRT_Credit ).Next();
      end;
    end;
  else // если нет разноски
    var cmd : RsdCommand;
    var sqlString;
    var rs : RsdRecordset;
    sqlString =  " select acctrn.t_Account_Receiver " +
                 " from dpmdocs_dbt doc, dacctrn_dbt acctrn " +
                 " where acctrn.t_acctrnid = doc.t_acctrnid and doc.t_PaymentID = ? ";
    cmd = RsdCommand( sqlString );
    cmd.addParam( "", RSDBP_IN, pmpaym.rec.PaymentID ); 
    rs = RsdRecordset(cmd);
    if( rs.moveNext() )
      // Проводка есть
      CreditList.value(0).Account = rs.value(0);
    else
      CreditList.value(0).Account = pmpaym.rec.FutureReceiverAccount ;
    end;
    
    CreditList.value(0).FIID = pmpaym.rec.PayFIID;      
    if(pmpaym.rec.PayFIID != pmpaym.rec.FIID)
      CreditList.value(0).Amount = MakeMoneyStr3352(pmpaym.rec.PayAmount);
      CreditList.value(0).FICode = GetFICodeForReport(pmpaym.rec.PayFIID,IsCurrency);
    end;
  end;
end;

macro FillCreditList2( CreditList:TArray, pmpaym:TRecHandler, IsCurrency )
debugbreak;    
  var i : integer = 0;
  var pi : TPayInstruction;
  for(i, 0, 0, 1)
    pi = TPayInstruction();
    pi.Account = pi.FICode = pi.Amount = "";
    CreditList.value(i) = pi; 
  end;

  // есть ли разноска?
  var payment : RsbPayment = RsbPayment(pmpaym.rec.PaymentID),
      pmaddpi : TRecHandler = TRecHandler( "pmaddpi.dbt" ),
      stat    : integer = payment.PIList( PRT_Credit ).First();

  if ( not stat ) // если есть, заполняем из разноски
    var ShowAllAcc: bool = false;
    GetRegistryValue( "COMMON\\ПЕЧАТЬ\\ОРДЕР\\КАССА\\ПОКАЗЫВАТЬ_ВСЕ_СЧЕТА", V_BOOL, ShowAllAcc ); 

    i = 0;
    while( not stat )
      stat = payment.PIList( PRT_Credit ).Current( pmaddpi );
      if( not stat and (ShowAllAcc or (not ShowAllAcc and not СчетСвязансКУ(pmaddpi.rec.Account,pmaddpi.rec.FIID,pmaddpi.rec.Chapter))))
        pi = TPayInstruction();
        pi.Account    = pmaddpi.rec.Account;
        pi.FIID       = pmaddpi.rec.FIID;
        pi.FICode     = GetFICodeForReport(pi.FIID,IsCurrency);
        pi.Amount     = MakeMoneyStr3352(pmaddpi.rec.Amount);
        CreditList.value( i ) = pi;
        i = i + 1;
        stat = payment.PIList( PRT_Credit ).Next();
      end;
    end;
  else // если нет разноски
    CreditList.value(0).Account = pmpaym.rec.ReceiverAccount;
  end;
end;

macro FillReceiverINNKPP(acc, FIID, ReceiverINN:@string,
                                           ReceiverKPP:@string )
  var receiver:TRecHandler = TRecHandler("party.dbt",    "bank.def");
  GetAccountClient(acc, FIID, receiver);
    
  /* ИНН и КПП */
  SplitINN_KPP(ПолучитьКодСубъекта(receiver.rec.PartyID, PTCK_INN), ReceiverINN, ReceiverKPP);

end;


macro FillBIC(acc, FIID)
  //zmp
  //var party:TRecHandler = TRecHandler("party.dbt",    "bank.def");
  //GetAccountClient(acc, FIID, party);
  //return ПолучитьКодСубъекта(party.rec.PartyID, PTCK_BIC, 1);
  return {MFO_BANK};
end;

macro FillPayerBankName(pmpaym:TRecHandler,_PayerBankName:@string,_BIC:@string, PayerAccount )
  file acc ("account.dbt" ) key 0;
  file dp_dep("dp_dep.dbt") key 0;
  file party("party.dbt");
  record pt(party);
  FILE persn(persn) key 0;
  _PayerBankName = "";
  
  _BIC = FillBIC(PayerAccount,pmpaym.rec.FIID,PayerAccount );
  
  acc.Chapter       = pmpaym.rec.Chapter;
  acc.Account       = PayerAccount;
  acc.Code_Currency = pmpaym.rec.FIID;
  if( getEQ( acc ) )
    dp_dep.Code = acc.Department;
    if(getEQ(dp_dep))
      if(dp_dep.PartyID)
        party.PartyID = dp_dep.PartyID;
        if(getEQ(party))
          _PayerBankName = party.Name;
        end;
      end;
    end;
    if (acc.Department != acc.Branch)
      dp_dep.Code = acc.Branch;
      if(getEQ(dp_dep))
        if(dp_dep.PartyID)
          party.PartyID = dp_dep.PartyID;
          if(getEQ(party))
            _PayerBankName = party.Name + "," + _PayerBankName;
          end;
        end;
      end;
    end;
  end;  
end;



macro FillTArrayFromArray( TArr : TArray, Arr )

  var i : integer = 0;
  for (i, 0, asize(Arr) - 1, 1)
    TArr.value(i) = Arr(i);
  end;
  
end;

private macro EMPLOYER_PREFIX(id)
   var rs = RsdRecordset("select 1 from dpersn_dbt where T_ISEMPLOYER = chr(88) and T_PERSONID = " + id);
   if(rs.movenext()) return "ИП "; end;
   return " ";
end;

macro Fill_ReceiverBankName_ReceiverName_BIC(pmpaym:TRecHandler,_ReceiverBankName:@string,_ReceiverName:@string,_BIC:@string,_Account)
  var CurrAddPI:TRecHandler = TRecHandler( "pmaddpi.dbt" );
  var PaymentObj:RsbPayment = RsbPayment(pmpaym.rec.PaymentID);
  var AddPI:RsbPIPayment  = PaymentObj.PIList(1);
  var Code_Currency;
  var stat = AddPI.First;
  _ReceiverName = "";
  _ReceiverBankName = "";
  if(stat == 0)                                        
    stat = AddPI.Current( CurrAddPI );
    if(stat == 0)
      Code_Currency = CurrAddPI.rec.FIID;
    end;              
  else   
    Code_Currency = pmpaym.rec.PayFIID;
  end;     
   
  _BIC = FillBIC(_Account,Code_Currency);

  file acc ("account.dbt" ) key 0;
  file dp_dep("dp_dep.dbt") key 0;
  file party("party.dbt");
  record pt(party);
  FILE persn(persn) key 0;
  
  acc.Chapter       = pmpaym.rec.Chapter;
  acc.Account       = _Account;
  acc.Code_Currency = Code_Currency;
  if( getEQ( acc ) )
    dp_dep.Code = acc.Department;
    if(getEQ(dp_dep))
      if(dp_dep.PartyID)
        party.PartyID = dp_dep.PartyID;
        if(getEQ(party))
          _ReceiverBankName = party.Name;
        end;
      end;
    end;
    if (acc.Department != acc.Branch)
      dp_dep.Code = acc.Branch;
      if(getEQ(dp_dep))
        if(dp_dep.PartyID)
          party.PartyID = dp_dep.PartyID;
          if(getEQ(party))
            _ReceiverBankName = party.Name + "," +  _ReceiverBankName;
          end;
        end;
      end;
    end;

    if(ПолучитьСубъекта(acc.Client, pt))
      MsgBox("Не найден субъект ID = ",acc.Client);
      return 1;
    end;
    
    if(pt.LegalForm == PTLEGF_PERSN)
      persn.PersonID = acc.Client;
      if(GetEQ(persn))
        _ReceiverName = EMPLOYER_PREFIX(pt.partyid) + persn.Name1 + " " + persn.Name2 + " " + persn.Name3;
      end;
    else
         // zmp 09.12.2014 I-00537955-2
        _ReceiverName = pt.Name;       
    end;
  end;  
end;


/* -----------------------------------------------------------
   Структура данных печатной формы приходного ордера

   ----------------------------------------------------------- */

CLASS TIncOrderPrintData3352

  var Number               : string, 
      DateStr              : string, 
      Client               : string, 
      PayerAccount         : string, 
      FICode               : string, 
      AmountStr            : string, 
      ReceiverName         : string, 
      CreditList           : TArray, 
      CreditList2          : TArray, 
      ReceiverINN          : string, 
      ReceiverKPP          : string, 
      PayerBankName        : string, 
      ReceiverBankName     : string, 
      BIC1                 : string,
      BIC2                 : string,
      ArraySym             : TArray, 
      ArrayPartSum         : TArray, 
      ArraySum             : TArray, 
      Ground               : string, 
      ShifrOper            : string, 
      officerShortName      ,
      officerPost;

      
  private var IsCurrency : string;
  
  /* -----------------------------------
     Проинициализировать данными кассового ордера
     ----------------------------------- */
  MACRO InitByCashOrder( pmpaym:TRecHandler, pmrmprop:TRecHandler, pscshdoc:TRecHandler )

    Number       = pmrmprop.rec.Number;
    getOfficerData(pmpaym.rec.paymentid,@officerPost,@officerShortName);
    DateStr      = MakeDateStr3352();

    /* Клиент */
    var rs =  "select USR_NOTETEXT.ConvertRAWtoSTRING(NT.T_TEXT, NK.T_NOTETYPE) T_TEXT "+
              "from dnotekind_dbt nk, dnotetext_dbt nt " +
              "WHERE NK.T_NOTEKIND = NT.T_NOTEKIND " +
              "and Nt.t_notekind = 49"+ 
              "and nk.T_OBJECTTYPE = 3 and NT.T_DOCUMENTID (+) = lpad('" + pscshdoc.rec.clientid +"',10,'0')";
    rs = RSDRecordset(rs);

    if(rs.MoveNext() and (rs.value(0) != " ") and  (valtype(rs.value(0)) != 26) ) client = rs.value(0);
    else                                                                          client = Падеж(pscshdoc.rec.FIOClient);    
    end;

    //Client = pscshdoc.rec.FIOClient;     

    IsCurrency = pscshdoc.rec.IsCurrency;
    
    PayerAccount = pmpaym.rec.PayerAccount;

    FICode = GetFICodeForReport(pmpaym.rec.FIID,IsCurrency);

    AmountStr = MakeMoneyStr3352(pmpaym.rec.Amount);

    CreditList = TArray;
    FillCreditList1( CreditList, pmpaym, IsCurrency );
    
    
    FillReceiverINNKPP(CreditList.value(0).Account, CreditList.value(0).FIID, 
                            @ReceiverINN, @ReceiverKPP);

    Fill_ReceiverBankName_ReceiverName_BIC(pmpaym,@ReceiverBankName,@ReceiverName,@BIC2,CreditList.value(0).Account );
    
    array aSum;
    FillAmountStr( aSum );
    ArraySum = TArray;
    FillTArrayFromArray(ArraySum, aSum);
    
    Ground = pmrmprop.rec.Ground;

    array aSym, aPartSum;
    FillCashSymbolsAndSum( aPartSum, aSym, SYMB_KIND_INCOME );
    ArraySym = TArray;
    FillTArrayFromArray(ArraySym, aSym);
    ArrayPartSum = TArray;
    FillTArrayFromArray(ArrayPartSum, aPartSum);
    
    CreditList2 = TArray;
    FillCreditList2( CreditList2, pmpaym, IsCurrency );
    
    
    FillPayerBankName(pmpaym,@PayerBankName,@BIC1,PayerAccount);
    ReceiverBankName  = PayerBankName;

    ShifrOper = pmrmprop.rec.ShifrOper;
                                                                                        
  END;
  
  /* -----------------------------------
     Проинициализировать данными мемориального документа
     ----------------------------------- */
  MACRO InitByMemorialDocument( pmpaym:TRecHandler, pmrmprop:TRecHandler )
  
    Number       = pmrmprop.rec.Number;
    
    DateStr      = MakeDateStr3352();

    /* Клиент */
    Client = "";
    if (pmrmprop.rec.ReceiverName)                                            
      Client = pmrmprop.rec.ReceiverName;                                     
    else                                                          
      var strSQL : string = "SELECT t.t_NameAccount " +                        
                            "FROM dpmaddpi_dbt t, dparty_dbt p " +               
                            "WHERE t.t_PaymentID = " + pmpaym.rec.PaymentID + 
                            "  AND p.t_partyID = t.t_accountClient " +           
                            "  AND p.t_LegalForm = 2 " + // физ. лицо            
                            "  ORDER BY t.t_pmaddpiID";                          
      VAR rs : RsdRecordset = RsdRecordset( strSQL );                            
      if ( rs.moveNext() )                                                       
        Client = rs.value("t_NameAccount");                                    
      end;                                                                 
    end;     

    // есть ли среди счетов плательщика, получателя или разноски хотя бы один не в национальной валюте?
    IsCurrency = "";        
    if ( pmpaym.rec.FIID != NATCUR )
      IsCurrency = "X";
    else 
      // выясняем, есть ли разноска
      var CurrAddPI:TRecHandler = TRecHandler( "pmaddpi.dbt" );
      var PaymentObj:RsbPayment = RsbPayment(pmpaym.rec.PaymentID);
      var AddPI:RsbPIPayment  = PaymentObj.PIList(PRT_Credit),
          IsCreditAddPI = AddPI.Size > 0,
          stat = 0;
      if(IsCreditAddPI)                                        
        stat = AddPI.First;
        while( (stat == 0) and (IsCurrency != "X") )
          stat = AddPI.Current( CurrAddPI );
          if(stat == 0)
            if ( CurrAddPI.rec.FIID != NATCUR )
              IsCurrency = "X";  
            end;
            stat = AddPI.Next;              
          end;              
        end;      
      elif (pmpaym.rec.PayFIID != NATCUR )
        IsCurrency = "X"; 
      end;
    end;
      
    PayerAccount = pmpaym.rec.PayerAccount;

    FICode = GetFICodeForReport(pmpaym.rec.FIID,IsCurrency);

    AmountStr = MakeMoneyStr3352(pmpaym.rec.Amount);

    CreditList = TArray;
    FillCreditList1( CreditList, pmpaym, IsCurrency );
    
    FillReceiverINNKPP(CreditList.value(0).Account, CreditList.value(0).FIID, 
                            @ReceiverINN, @ReceiverKPP);
                            
    Fill_ReceiverBankName_ReceiverName_BIC(pmpaym,@ReceiverBankName,@ReceiverName,@BIC2,CreditList.value(0).Account );

    array aSum;
    FillAmountStr( aSum );
    ArraySum = TArray;
    FillTArrayFromArray(ArraySum, aSum);
    
    Ground = pmrmprop.rec.Ground;
    
    array aSym, aPartSum;
    FillCashSymbolsAndSum( aPartSum, aSym, SYMB_KIND_INCOME );
    ArraySym = TArray;
    FillTArrayFromArray(ArraySym, aSym);
    ArrayPartSum = TArray;
    FillTArrayFromArray(ArrayPartSum, aPartSum);
    
    CreditList2 = TArray;
    FillCreditList2( CreditList2, pmpaym, IsCurrency );
    
    FillPayerBankName(pmpaym,@PayerBankName,@BIC1,PayerAccount);
    
    ShifrOper = pmrmprop.rec.ShifrOper;
    
  END;

END;

/* -----------------------------------------------------------
   Структура данных печатной формы расходного ордера

   ----------------------------------------------------------- */

CLASS TOutOrderPrintData3352

  var Number               : string,
      DateStr              : string,
      Client               : string,
      DebitList            : TArray,
      ReceiverAccount      : string,
      ReceiverFICode       : string,
      ReceiverAmountStr    : string,
      BankName             : string,
      BIC                  : string,
      ArraySym             : TArray, 
      ArrayPartSum         : TArray, 
      ArraySum             : TArray, 
      Ground               : string,
      ArrayPaperName       : TArray,
      ShifrOper            : string,       
      officerShortName      ,
      officerPost;

  private var
      PaperKind            : integer,
      PaperSeries          : string,
      PaperNumber          : string,
      PaperIssuer          : string,
      PaperIssuedDate      : date;
      



  private var IsCurrency : string;
      
  
  private macro FillTArrayFromArray( TArr : TArray, Arr )
  
    var i : integer = 0;
    for (i, 0, asize(Arr) - 1, 1)
      TArr.value(i) = Arr(i);
    end;
    
  end;

  macro Fill_BankName_BIC(pmpaym:TRecHandler,_BankName:@string,_BIC:@string )
    var CurrAddPI:TRecHandler = TRecHandler( "pmaddpi.dbt" );
    var PaymentObj:RsbPayment = RsbPayment(pmpaym.rec.PaymentID);
    var AddPI:RsbPIPayment  = PaymentObj.PIList(1);
    var Code_Currency;
    var stat = AddPI.First;
    _BankName = "";
    if(stat == 0)                                        
      stat = AddPI.Current( CurrAddPI );
      if(stat == 0)
        Code_Currency = CurrAddPI.rec.FIID;
      end;              
    else   
      Code_Currency = pmpaym.rec.PayFIID;
    end;     
     
    _BIC = FillBIC(DebitList.value(0).Account,Code_Currency);

    file acc ("account.dbt" ) key 0;
    file dp_dep("dp_dep.dbt") key 0;
    file party("party.dbt");
    record pt(party);
    FILE persn(persn) key 0;
    
    acc.Chapter       = pmpaym.rec.Chapter;
    acc.Account       = DebitList.value(0).Account;
    acc.Code_Currency = Code_Currency;
    if( getEQ( acc ) )
      dp_dep.Code = acc.Department;
      if(getEQ(dp_dep))
        if(dp_dep.PartyID)
          party.PartyID = dp_dep.PartyID;
          if(getEQ(party))
            _BankName = party.Name;
          end;
        end;
      end;
      if (acc.Department != acc.Branch)
        dp_dep.Code = acc.Branch;
        if(getEQ(dp_dep))
          if(dp_dep.PartyID)
            party.PartyID = dp_dep.PartyID;
            if(getEQ(party))
              _BankName = party.Name + "," +  _BankName;
            end;
          end;
        end;
      end;
    end;  
  end;
  
  private macro FillDebitList( DebitList:TArray, pmpaym:TRecHandler )
debugbreak;    
    var i : integer = 0;
    var pi : TPayInstruction;
    pi = TPayInstruction();
    pi.Account = pi.FICode = pi.Amount = "";
    DebitList.value(0) = pi; 

    // есть ли разноска?
    var payment : RsbPayment = RsbPayment(pmpaym.rec.PaymentID),
        pmaddpi : TRecHandler = TRecHandler( "pmaddpi.dbt" ),
        stat    : integer = payment.PIList( PRT_Debet ).First();

    if ( not stat ) // если есть, заполняем из разноски
      i = 0;
      while( not stat )
        stat = payment.PIList( PRT_Debet ).Current( pmaddpi );
        if( not stat )
          pi = TPayInstruction();
          pi.Account    = pmaddpi.rec.Account;
          pi.FIID       = pmaddpi.rec.FIID;
          pi.FICode     = GetFICodeForReport(pi.FIID,IsCurrency);
          pi.Amount     = MakeMoneyStr3352(pmaddpi.rec.Amount);
          DebitList.value( i ) = pi;
          i = i + 1;
          stat = payment.PIList( PRT_Debet ).Next();
        end;
      end;
    else // если нет разноски
      DebitList.value(0).Account = pmpaym.rec.PayerAccount ;
      DebitList.value(0).FIID = pmpaym.rec.FIID;      
      DebitList.value(0).Amount = MakeMoneyStr3352(pmpaym.rec.Amount);
      if(pmpaym.rec.PayFIID != pmpaym.rec.FIID)
        DebitList.value(0).FICode = GetFICodeForReport(pmpaym.rec.FIID,IsCurrency);
      end;
    end;
  end;
  

  private macro FillPaperName(PaperName : TArray, PaperKind : integer, PaperSeries : string,
                              PaperNumber : string, PaperIssuer : string, PaperIssuedDate : date)
    var d:integer;
    var PaperNameStr:string = "";
    PaperName.value(0) = "";
    PaperName.value(1) = "";
    PaperName.value(2) = "";
    
    if( strlen( PaperSeries ) )
      PaperNameStr = string( GetPaperKindName( PaperKind ), " № ");
      PaperNameStr = string( PaperNameStr, PaperSeries, " " );
      if( strlen(PaperNumber ) )
        PaperNameStr = string( PaperNameStr, PaperNumber );
      end;
    end;
    
    if( strlen(PaperIssuer ) )
      PaperNameStr = string( PaperNameStr, " Выдан ", PaperIssuer );
    end;

    DateSplit( PaperIssuedDate, d );      
    if(d > 0) 
      PaperNameStr = string(PaperNameStr, 
                             IfThenElse( PaperIssuer != "", " ", "Выдан " ),
                             "\"", 
                             SubStr( string(PaperIssuedDate:m:f), 1, 2 ), 
                             "\"", 
                             SubStr( string(PaperIssuedDate:m:f), 3, strlen(string(PaperIssuedDate:m:f) ) - 3 ),
                             "ода"                                
                           );
    end; 

    StrSplit(PaperNameStr, PaperName, 77, 23, 3);
  
    if( StrLen( PaperNameStr ) > 100 )
      PaperName.value(2) = SubStr( PaperNameStr, 90    );
    end;   

    if( StrLen( PaperNameStr ) > 23 )
      PaperName.value(1) = SubStr( PaperNameStr,  23, 67 );
    end;   

    PaperName.value(0) = SubStr( PaperNameStr,  1, 22 );
    
  end;
  
  /* -----------------------------------
     Проинициализировать данными кассового ордера
     ----------------------------------- */
  MACRO InitByCashOrder( pmpaym:TRecHandler, pmrmprop:TRecHandler, pscshdoc:TRecHandler )
    debugbreak;
    getOfficerData(pmpaym.rec.paymentid, @officerPost, @officerShortName);

    Number       = pmrmprop.rec.Number;
    
    DateStr      = MakeDateStr3352();

    /* Клиент */

    Client = pscshdoc.rec.FIOClient;     
    
    IsCurrency = pscshdoc.rec.IsCurrency;
        
    DebitList = TArray;    
    FillDebitList( DebitList, pmpaym );
    
    ReceiverAccount = pmpaym.rec.ReceiverAccount;
    
    ReceiverFICode = GetFICodeForReport(pmpaym.rec.PayFIID,IsCurrency);

    ReceiverAmountStr = MakeMoneyStr3352(pmpaym.rec.PayAmount);
   
    Fill_BankName_BIC(pmpaym,@BankName,@BIC );
    
  
    array aSym, aPartSum;
    FillCashSymbolsAndSum( aPartSum, aSym, SYMB_KIND_OUTGO );
    ArraySym = TArray;
    FillTArrayFromArray(ArraySym, aSym);
    ArrayPartSum = TArray;
    FillTArrayFromArray(ArrayPartSum, aPartSum);

    array aSum;
    FillPayAmountStr( aSum );
    ArraySum = TArray;
    FillTArrayFromArray(ArraySum, aSum);

    Ground = pmrmprop.rec.Ground;

    //документ, удостоверяющий личность
    ArrayPaperName = TArray;
    PaperKind = pscshdoc.rec.PaperKind;
    PaperSeries = pscshdoc.rec.PaperSeries;
    PaperNumber = pscshdoc.rec.PaperNumber;
    PaperIssuer = pscshdoc.rec.PaperIssuer;
    PaperIssuedDate = pscshdoc.rec.PaperIssuedDate;
    FillPaperName(ArrayPaperName, PaperKind, PaperSeries, PaperNumber, PaperIssuer, PaperIssuedDate);
    
    ShifrOper = pmrmprop.rec.ShifrOper;
                                                                                        
  END;
  
  /* -----------------------------------
     Проинициализировать данными мемориального документа
     ----------------------------------- */
  MACRO InitByMemorialDocument( pmpaym:TRecHandler, pmrmprop:TRecHandler )
  
    Number       = pmrmprop.rec.Number;
    
    DateStr      = MakeDateStr3352();

    /* Клиент */
    Client = pmrmprop.rec.PayerName;    
    
    // есть ли среди счетов плательщика, получателя или разноски хотя бы один не в национальной валюте?
    IsCurrency = "";        
    if ( pmpaym.rec.PayFIID != NATCUR )
      IsCurrency = "X";
    else 
      // выясняем, есть ли разноска
      var CurrAddPI:TRecHandler = TRecHandler( "pmaddpi.dbt" );
      var PaymentObj:RsbPayment = RsbPayment(pmpaym.rec.PaymentID);
      var AddPI:RsbPIPayment  = PaymentObj.PIList(PRT_Debet),
          IsCreditAddPI = AddPI.Size > 0,
          stat = 0;
      if(IsCreditAddPI)                                        
        stat = AddPI.First;
        while( (stat == 0) and (IsCurrency != "X") )
          stat = AddPI.Current( CurrAddPI );
          if(stat == 0)
            if ( CurrAddPI.rec.FIID != NATCUR )
              IsCurrency = "X";  
            end;
            stat = AddPI.Next;              
          end;              
        end;      
      elif (pmpaym.rec.FIID != NATCUR )
        IsCurrency = "X"; 
      end;
    end;

    DebitList = TArray;    
    FillDebitList( DebitList, pmpaym );

    ReceiverAccount = pmpaym.rec.ReceiverAccount;
    
    ReceiverFICode = GetFICodeForReport(pmpaym.rec.PayFIID,IsCurrency);
   
    ReceiverAmountStr = MakeMoneyStr3352(pmpaym.rec.PayAmount);

    Fill_BankName_BIC(pmpaym,@BankName,@BIC );
    
    
  
    ArraySym = TArray;
    ArrayPartSum = TArray;
    var i: integer = 0;                                  
    while( i < 1 )                                
      ArraySym.value(i) = "";                                     
      ArrayPartSum.value(i) = "";                              
      i = i + 1;                                         
    end;                                                 
    ArraySym.value(0) = pmrmprop.rec.cashSymbolCredit;       
    if (ArraySym.value(0))                                     
      ArrayPartSum.value(0) = string(pmpaym.rec.PayAmount:f);  
    end;

    array aSum;
    FillPayAmountStr( aSum );
    ArraySum = TArray;
    FillTArrayFromArray(ArraySum, aSum);

    Ground = pmrmprop.rec.Ground;

    //документ, удостоверяющий личность
    ArrayPaperName = TArray;
    ArrayPaperName.value(0) = "";
    ArrayPaperName.value(1) = "";
    ArrayPaperName.value(2) = "";
    // pmpaym.Payer является физ.лицом?
    var strSQL : string = "SELECT t_LegalForm " +                        
                          "FROM dparty_dbt " +               
                          "WHERE t_partyID = " + pmpaym.rec.Payer;                          
    var rs : RsdRecordset = RsdRecordset( strSQL );                            
    if ( (rs.moveNext() ) and ( rs.value("t_LegalForm") == 2) ) // физ. лицо                                  
      //Получить документ persnidc
      strSQL = "SELECT t_paperkind, t_paperseries, t_papernumber, t_paperissuer, t_paperissueddate " +                        
               "FROM dpersnidc_dbt " +               
               "WHERE t_PersonID = " + pr_pmpaym.rec.Payer +
               "  AND t_IsMain = 'X' ";                          
      var persnidc : RsdRecordset = RsdRecordset( strSQL );                            
      if ( persnidc.moveNext() )
        PaperKind = persnidc.value("t_PaperKind");
        PaperSeries = persnidc.value("t_PaperSeries" );
        PaperNumber = persnidc.value("t_PaperNumber");
        PaperIssuer = persnidc.value("t_PaperIssuer");
        PaperIssuedDate = date( persnidc.value("t_PaperIssuedDate") );
        FillPaperName(ArrayPaperName, PaperKind, PaperSeries, PaperNumber, PaperIssuer, PaperIssuedDate);
      end;
    end;
   
    ShifrOper = pmrmprop.rec.ShifrOper;

  END;

END;

/* -----------------------------------------------------------
   Структура данных печатной формы объявления на взнос наличными

   ----------------------------------------------------------- */

CLASS TCashOrderPrintData3352

  var Number               : string, 
      DateStr              : string, 
      Client               : string, 
      PayerAccount         : string, 
      FICode               : string, 
      AmountStr            : string, 
      ReceiverName         : string, 
      CreditList           : TArray, 
      CreditList2          : TArray, 
      ReceiverINN          : string, 
      ReceiverKPP          : string, 
      PayerBankName        : string, 
      ReceiverBankName     : string, 
      BIC1                 : string,
      BIC2                 : string,
      ArraySym             : TArray, 
      ArrayPartSum         : TArray, 
      ArraySum             : TArray, 
      Ground               : string, 
      ShifrOper            : string, 
      officerShortName      ,
      officerPost;
  debugbreak;
      
  private var IsCurrency : string;
  
  MACRO Init( pmpaym:TRecHandler, pmrmprop:TRecHandler, pscshdoc:TRecHandler )
    debugbreak;
    Number       = pmrmprop.rec.Number;
    getOfficerData(pmpaym.rec.paymentid,@officerPost,@officerShortName);  

    DateStr      = MakeDateStr3352();

    /* Клиент */
    var rs =  "select USR_NOTETEXT.ConvertRAWtoSTRING(NT.T_TEXT, NK.T_NOTETYPE) T_TEXT "+
              "from dnotekind_dbt nk, dnotetext_dbt nt " +
              "WHERE NK.T_NOTEKIND = NT.T_NOTEKIND " +
              "and Nt.t_notekind = 49"+ 
              "and nk.T_OBJECTTYPE = 3 and NT.T_DOCUMENTID (+) = lpad('" + pscshdoc.rec.clientid +"',10,'0')";
    rs = RSDRecordset(rs);

    if(rs.MoveNext() and (rs.value(0) != " ") and  (valtype(rs.value(0)) != 26) ) client = rs.value(0);
    else                                    client = Падеж(pscshdoc.rec.FIOClient);    
    end;    
    
    //IsCurrency = pscshdoc.rec.IsCurrency;
    // есть ли среди счетов плательщика, получателя или разноски хотя бы один не в национальной валюте?
    IsCurrency = "";        
    if ( pmpaym.rec.PayFIID != NATCUR )
      IsCurrency = "X";
    else 
      // выясняем, есть ли разноска
      var CurrAddPI:TRecHandler = TRecHandler( "pmaddpi.dbt" );
      var PaymentObj:RsbPayment = RsbPayment(pmpaym.rec.PaymentID);
      var AddPI:RsbPIPayment  = PaymentObj.PIList(PRT_Credit),
          IsCreditAddPI = AddPI.Size > 0,
          stat = 0;
      if(IsCreditAddPI)                                        
        stat = AddPI.First;
        while( (stat == 0) and (IsCurrency != "X") )
          stat = AddPI.Current( CurrAddPI );
          if(stat == 0)
            if ( CurrAddPI.rec.FIID != NATCUR )
              IsCurrency = "X";  
            end;
            stat = AddPI.Next;              
          end;              
        end;      
      elif (pmpaym.rec.FIID != NATCUR )
        IsCurrency = "X"; 
      end;
    end;
  

    
    PayerAccount = pmpaym.rec.PayerAccount;
    
    FICode = GetFICodeForReport(pmpaym.rec.FIID,IsCurrency);
    
    AmountStr = MakeMoneyStr3352(pmpaym.rec.Amount);
 
    CreditList = TArray;
    FillCreditList1( CreditList, pmpaym );
 
    FillReceiverINNKPP(CreditList.value(0).Account, CreditList.value(0).FIID, 
                       @ReceiverINN, @ReceiverKPP);

    FillReceiverINNKPP(CreditList.value(0).Account, CreditList.value(0).FIID, 
                       @ReceiverINN, @ReceiverKPP);

    CreditList2 = TArray;
    FillCreditList2( CreditList2, pmpaym, IsCurrency );
 
    FillPayerBankName(pmpaym,@PayerBankName,@BIC1,PayerAccount);
 
    array aSym, aPartSum;
    FillCashSymbolsAndSum( aPartSum, aSym, SYMB_KIND_INCOME );
    ArraySym = TArray;
    FillTArrayFromArray(ArraySym, aSym);
    ArrayPartSum = TArray;
    FillTArrayFromArray(ArrayPartSum, aPartSum);

    Fill_ReceiverBankName_ReceiverName_BIC(pmpaym,@ReceiverBankName,@ReceiverName,@BIC2,CreditList.value(0).Account );
    ReceiverBankName =  PayerBankName;
    array aSum;
    FillAmountStr( aSum, 200 );
    ArraySum = TArray;
    FillTArrayFromArray(ArraySum, aSum);    
  
    ShifrOper = pmrmprop.rec.ShifrOper;
    
    Ground = pmrmprop.rec.Ground;
  
  END;
  
END;





