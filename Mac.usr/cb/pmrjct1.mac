//-----------------------------------------------------------------------------
// Блок     : 29008 - "Обработка отвергнутого"
// Шаг      : 10    - "Обработка отвергнутого"
// Описание : Макрос шага
//-----------------------------------------------------------------------------
// KS 03.12.2013 Перенос пользовательских доработок
import pm_setst, cbsttls, pm_common, likepy;
import "pm_answerret.mac", "wlglobal.mac";
/* EVG */
import CTInter, cb_sql;
import OprInter, oralib; //Jushmanov 2014-02-24 C-19151

var PaymentObj:RsbPayment;

private macro ValueDateForProcessRejectedPayment(Paym : RsbPayment) : date
    var ValueDate : date = {curdate};
    var DocKind = Paym.PrimDocKind;

    if( GetParentOrEqualDocKindFromList( DocKind, 
        PMDOC_BANKPAYMENT, PMDOC_BANKCLAIM, CASH_BOF_ADDORDER, CASH_BOF_INCORDER,
        CASH_BOF_OUTORDER, PMDOC_MEMORIALDOCUMENT, DLDOC_BANKORDER, WL_INDOC )
      )
        ValueDate = PM_GetOperDay_Balance(Paym.Department);
    elif( GetParentOrEqualDocKindFromList( DocKind,
          PMDOC_CLIENTPAYMENT, CASH_PS_INCORDER, CASH_PS_OUTORDER )
        )
        ValueDate = PM_GetOperDay_BankServiceBalance(Paym.Department);
    end;

    return ValueDate;
end;


MACRO ExecuteStep( doc, paymDoc )

    if( ( PaymentObj.DemandIsESID == "" ) and ( PM_NeedDocumentRestart() == true ) )
    
        PaymentObj.ValueDate = ValueDateForProcessRejectedPayment(PaymentObj);

        if( (PaymentObj.DocKind == WL_INDOC) OR
            (PaymentObj.DocKind == WL_WIPM) ) 
            PaymentObj.PaymStatus = PM_IS_RECEIVING;
            PaymentObj.PropStatus = PM_PROP_RECEIVED;
        elif( (PaymentObj.PropStatus == PM_PROP_REJECTED) or (PaymentObj.PropStatus == PM_PROP_CORREJECTED) )
            PaymentObj.PaymStatus = PM_READIED;
            PaymentObj.PropStatus = PM_PROP_PREPARING;
        else
            PaymentObj.PaymStatus = PM_READIED;
        end;

        PM_SetPrimDocumentState( PaymentObj, DOCUMENT_ST_WORKING );

        if( УстановитьСтатусыПлатежа( OPR_PAYM_STATE, OPR_PM_ST_OPEN ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;

        if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_PREP ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;

        if( УстановитьСтатусыПлатежа( OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_NO ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;

        if( GetOprStatus(OPR_PAYM_CONTROL) == OPR_PAYM_ST_CTRL_CONTROL)
            if( УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_NOTCONTROL ) )
                msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                return 1;
            end;
        end;

        if((PaymentObj.PayerGroup == PAYMENTS_GROUP_INTERNAL) and (PaymentObj.ReceiverGroup == PAYMENTS_GROUP_INTERNAL))
            if( УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_INTERNAL ) )
                msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                return 1;
            end;
        elif( (PaymentObj.PayerGroup == PAYMENTS_GROUP_EXTERNAL) and (PaymentObj.ReceiverGroup == PAYMENTS_GROUP_EXTERNAL))
            if( УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_TRANZIT ) )
                msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                return 1;
            end;
        elif( (PaymentObj.PayerGroup == PAYMENTS_GROUP_EXTERNAL)    and ( PaymentObj.IsCredit ) or
              (PaymentObj.ReceiverGroup == PAYMENTS_GROUP_EXTERNAL) and ( not PaymentObj.IsCredit ) )
            if( УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_IN ) )
                msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                return 1;
            end;
        elif( (PaymentObj.PayerGroup == PAYMENTS_GROUP_EXTERNAL)    and ( not PaymentObj.IsCredit ) or
              (PaymentObj.ReceiverGroup == PAYMENTS_GROUP_EXTERNAL) and ( PaymentObj.IsCredit ) )
            if( УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_OUT ) )
                msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                return 1;
            end;
        end;

        // Установить дату начала операции равной дате операционного дня пользователя
        SetOprDate(29000000, {curdate});

        if( not IsChildTranzitOrigin(PaymentObj) )
            PaymentObj.FreeReserve( PaymentObj.PayerAccount, CHAPT1, PaymentObj.PayerFIID );
        end;

    else
        if( ( PaymentObj.PrimDocKind == WL_INDOC ) )

            if( PM_GetRejectESIDProcessKind() == REJESID_PROCKIND_EXECUTE ) /*Исполнить*/
                if( УстановитьСтатусыПлатежа( OPR_PAYM_STATE, OPR_PM_ST_OPEN, OPR_PAYM_DO, OPR_PM_ST_EXEC_ORDER ) )
                    msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                    return 1;
                else
                    return 0;
                end;

            elif( PM_GetRejectESIDProcessKind() == REJESID_PROCKIND_REFUSE ) /*Отказать*/
                var DenialGround = PaymentObj.Notes.ReadNote( PM_NOTEKIND_DENIALGROUND, {curdate} );

                if( DenialGround == "" )
                    msgbox( "Причина отказа не заполнена.|Формирования подтверждения с отказом невозможно.|Запишите причину отказа в примечания платежа" );
                    PM_SetRejectESIDProcessKind( REJESID_PROCKIND_NONE );
                    return 1;
                elif( ( Index( DenialGround, ";" ) <= 1 ) or 
                    ( IsDigitalNumber( SubStr( DenialGround, 1, Index( DenialGround, ";" ) - 1 ) ) != 0 ) or
                    ( StrLen( SubStr( DenialGround, Index( DenialGround, ";" ) + 1 ) ) == 0 ) )
                    msgbox("В причине отказа, указанной в примечании платежа, невозможно выделить код и текстовое пояснение.|Введите сведения в формате <код>;<текстовое пояснение>");
                    PM_SetRejectESIDProcessKind( REJESID_PROCKIND_NONE );
                    return 1;
                end;

                if( УстановитьСтатусыПлатежа( OPR_PAYM_STATE, OPR_PM_ST_OPEN, OPR_PAYM_DO, OPR_PM_ST_REFUSAL_ORDER ) )
                    msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                    return 1;
                else
                    return 0;
                end;

            elif( PM_GetRejectESIDProcessKind() == REJESID_PROCKIND_FINISH ) /*Завершить*/
                if( not IsOprMultiExec() )
                    var ExecRejectESIDDemand = "Обработка поручения на списание будет завершена без формирования инкассового поручения или подтверждения для ФНС.";

                    if( ConfWin( makeArray( string( ExecRejectESIDDemand + " Продолжить?" ) ), makeArray( " Да", " Нет" ) ) == 1/*Нет*/ )
                        PM_SetRejectESIDProcessKind( REJESID_PROCKIND_NONE );
                        return 1;
                    end;
                end;
            end;
        end;

        if( PaymentObj.PrimDocKind == PS_PAYORDER )
            var obj = GenObject( "RsbPSPayOrder", PaymentObj.PaymentID );

            if( obj.PreacptID )
                PM_UnLinkPreAcpt( PaymentObj.PaymentID );
            end;
        end;

        if( PaymentObj.PrimDocKind == DOC_BO_PAYMENT )
            msgbox("Документ из бэк-офиса должен быть обработан");
            return 1;
        end;

        if( УстановитьСтатусыПлатежа( OPR_PAYM_STATE, OPR_PM_ST_CLOSE ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;

        PaymentObj.FreeReserve( PaymentObj.PayerAccount, CHAPT1, PaymentObj.PayerFIID );

    end;

    if(OV_GetOverdraftProcMode() == RBOV_MODE_INTEGRATED)
        if(not RejectLimitUse())
            msgbox("Ошибка при отвержении использования лимита");
            return 1;
        end;

        if(not RejectLimitRestore())
            msgbox("Ошибка при отвержении востановления лимита");
            return 1;
        end;
    end;

    /* EVG Удаление значения категории вида 120 "Причина отвержения валютным контролером" */
    var sql;
    /* ID Категории "Причина отвержения валютным контролером" */
    const GroupID = 120;

    SQL =       " DELETE FROM dobjatcor_dbt ocor ";
    SQL = SQL + "  WHERE ocor.t_objecttype = " + OBJTYPE_PAYMENT;
    SQL = SQL + "    AND ocor.t_groupid = " + GroupID;
    SQL = SQL + "    AND ocor.t_object = LPAD ('" + PaymentObj.PaymentID + "', 10, 0) ";
    SQL_Execute (SQL);

    return 0;
END;


macro PostStep( message,     /* данный параметр может принимать следующие       */
                             /* значения: 1 - выполнение шага; 2 - откат шага;  */
                errTrn,      /* статус выполнения шага. Если параметр не равен 0*/
                             /* произошла ошибка                                */
                FirstDoc,    /* указатель на первичный документ                 */
                ID_Oper,     /* внутренний идентификатор операции               */
                Num_Step,    /* Номер шага операции (из настроек)               */
                KindOper,    /* номер вида операции                             */
                KindDoc,     /* номер вида первичного документа                 */
                KindStep,    /* вид шага операции                               */
                ID_Step )    /* внутренний идентификатор шага операции          */

    var stat = 0;
    private var logquery, idStep = ID_Step, idOper = ID_Oper;

    //Jushmanov 2014-02-21 C-19151
    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(idOper) != V_INTEGER) and (valtype(idOper) != V_STRING)) idOper = 0; end;
        if ((valtype(idStep) != V_INTEGER) and (valtype(idStep) != V_STRING)) idStep = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + idOper + " AND t_id_step = " + idStep;
        ExecSQL(logquery, null, false);
    end;

    if( ( errTrn == 0 ) and ( message == 1 ) )// на выполнении шага
        if( (PM_NeedDocumentRestart() == false) // Если действие - завершить
        and (PaymentObj.DocKind == PS_PAYORDER) )
            var PsOrder : RsbPsPayOrder = RsbPsPayOrder(PaymentObj.PaymentID);
            //TAM 26.03.2013 HF_71      
            var Queries : string = "InfoCode:7";
            //Gurin S. 26.03.2015 HF2031_19_25_148
            //var Narrative : string = PaymentObj.Notes.ReadNote( PM_NOTEKIND_DENIALGROUND, {curdate} );
            var Narrative : string = 
               "Уведомляем об аннулировании " + 
               IfThenElse( PsOrder.DocKind == PSPOKIND_REQUEST, 
               "инкассового поручения", "платежного требования" ) + ". " + 
               PaymentObj.Notes.ReadNote( PM_NOTEKIND_DENIALGROUND, {curdate} );
            CreateED274(PsOrder, Queries, Narrative, ID_Oper, ID_Step, true);
            //end TAM HF_71
        end;
    end;

    return stat;
end;