//-----------------------------------------------------------------------------
// Блок     : 29015 - "Предобработка требования банка"
// Шаг      : 10    - "Предобработка"
// Описание : Макрос шага
//-----------------------------------------------------------------------------
// KS 25.11.2013 Адаптация под 31ю сборку
import PaymInter, pmdefbo, pm_syscont, pmchk117, bcchkrst, pmterror, naVK, pmprepromass;
/* EVG */
import FrontCommon;
//EVG
import "SetVOStaff.mac";
import "doc_comiss.mac";
import OprInter, oralib; //Jushmanov 2014-02-20 C-19151

private var PaymentObj:RsbPayment;

MACRO ExecuteStep( doc, paymDoc )
    var stat:integer       = 0;
    var DO_segment:integer = OPR_PM_ST_DISCHARGE;

    if( stat == 0 )
    
        /* EVG Заполнение параметров, необходимых для валютного контроля */

        /* EVG Заполнение примечания вида 111 "Паспорта, коды валютного контроля"
           шаблоном для ввода информации */
        if ( strLen (ReadNoteForPayment (PaymentObj.paymentID, 111)) == 0 )
            InsertNoteForPayment(PaymentObj.paymentID, 111, "ХХХХХХХХ/2412/0000/Х/0{xxxxx}$;ХХХХХХХХ/2412/0000/Х/0{xxxxx}$;");
        end;


        /* EVG Заполнение данных о валютной операции исходя из
           паспорта сделки, если он есть в назначении платежа. */
        УстановитьКодВОиПаспортСделкиИзПримечания( PaymentObj );

        /* EVG Для плательщика-нерезидента - перенос страны нерезидента в категорию платежа 
           118 "Код страны нерезидента-отправителя". */
        UpdateNRCountryInPaymetnCat( PaymentObj, PaymentObj.Payer, 118 );

        /* EVG Для получателя-нерезидента - перенос страны нерезидента в категорию платежа 
           119 "Код страны нерезидента-получателя". */
        UpdateNRCountryInPaymetnCat( PaymentObj, PaymentObj.Receiver, 119 );
    
        //Контроль
        if( PaymentObj.Origin == PAYMENT_OR_AUTO )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL );
        else
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_NOTCONTROL );
        end;

        //Направление
        if( stat == 0 )
            if( PaymentObj.PayerGroup == PAYMENTS_GROUP_EXTERNAL )
                stat = УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_OUT );
            else
                stat = УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_INTERNAL );
            end;
        end;      

        //Уточнение причастности к терроризму - Не требуется
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_TERR, OPR_PAYM_ST_TERR_NOTNEED );
        end;  
          
        //Квитовка - не сквитован
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_OUT_KVIT, OPR_PM_ST_UNKVIT );
        end;

        //Квитанция - не сквитован
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_KVT, OPR_PM_ST_UNKVIT );
        end;  
    
        //ЦАБС - не проведен по счетам МФР 
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_CABS, OPR_PM_ST_MFR_NO );
        end;  
          
        //Обработка в БО - нет
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_BO_PROCESS, OPR_PAYM_ST_BO_NO );
        end;  
    
        // ПЗО
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_PZO, OPR_PAYM_ST_PZO_NOTNEED );
        end;

        // РО - не требуется
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_MANUAL, OPR_PAYM_ST_MANUAL_NOTNEED );
        end;  

        // МФ
        if( stat == 0 )
            if( PaymentObj.StartDepartment != PaymentObj.EndDepartment )
                stat = УстановитьСтатусыПлатежа( OPR_PAYM_BRANCH, OPR_PAYM_ST_BRANCH_YES );
            else
                stat = УстановитьСтатусыПлатежа( OPR_PAYM_BRANCH, OPR_PAYM_ST_BRANCH_NO );
            end;
        end;      

        // КАРТ - нет
        if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_NO );
        end;

        //необходимость ВК Str! Контроль по 117и закоментарен ниже, вместо него статус платежа
        if( stat == 0 )
            if (paymentObj.Basefiid==0)
                /* EVG Изменил параметризацию naVK()
                If (naVK(PaymentObj.PayerAccount,PaymentObj.ReceiverAccount,stat))*/
                If ( naVK(PaymentObj) )
                    stat = УстановитьСтатусыПлатежа(117,1);

                    /* EVG 7/09/2011 Добавил простановку флажка "Платеж по валютной операции" в реквизитах ВО */
                    PaymentObj.IsVO = "X";
                End;
            else
                stat = УстановитьСтатусыПлатежа(117,1);
            End;//fiid
        End;//Str!

        if( stat != 0 )      
            msgbox("Ошибка при установке статуса платежа");
            return 1;
        end;
    end;

    //Seleznev Установка Выгрузка во Фронт = Требуется 
    //для платежей которым назначена категория "внешняя систма"
    if (IsFrontPayment(PaymentObj))
        InsertOprStatus(OPR_STATUS_FRONT, OPRSTAT_FRONT_YES);
    end;
  
    if( stat == 0 ) // Системный контроль
        stat = ExecuteSysControlStep( PaymentObj );
        if( stat < 0 )
            return 1;
        elif( stat > 0 )
            return 0;
        end;
    end;
  
    if( stat )
        return stat;
    end;

    if( PaymentObj.DemandAcceptTerm == PM_DEMAND_TERM_ACCEPT )
  
        if( ПлатежВнутренний( PaymentObj ) )
            if( УстановитьСтатусыПлатежа( OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_TP ) )
                msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                return 1;
            end;
            DO_segment = OPR_PM_ST_ENTER;
        end;

        if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, DO_segment ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;

    else

        if( stat == 0 ) // Проверка на причастность к терроризму
            if(not ПлатежПоКомиcсии(PaymentObj.DocKind, PaymentObj.PaymentID)) // A.Gregeradsky - 22.12.2009 - Платеж по комиссии не проверяется на терроризм
                stat = ПроверкаПричастностиТерроризму( PaymentObj );
                if( stat < 0 )
                    return 1;
                elif( stat > 0 )
                    return 0;
                end;
            end;
        end;

        if( stat == 0 ) // Проверка остатков по счетам
            stat = BC_CheckAccRest( PaymentObj );
        end;

    end;

    //если отвергли, сбросить ручную обработку, чтобы можно было после перезапуска запланировать предобработку
    if (GetOprStatus(OPR_PAYM_STATE)==OPR_PM_ST_REJECT) 
        stat = УстановитьСтатусыПлатежа( OPR_PAYM_MANUAL, OPR_PAYM_ST_MANUAL_NOTNEED );
    end;

    return stat;
END;


//Jushmanov 2014-02-20 C-19151
macro PostStepAction( message,      /* 1 - выполнение шага; 2 - откат шага;   */
                      errTrn,       /* статус выполнения шага. 0 - ошибки нет */
                      FirstDoc,     /* указатель на первичный документ        */
                      ID_Oper,      /* внутренний идентификатор операции      */
                      Number_Step,  /* Номер шага операции (из настроек)      */
                      KindOper,     /* номер вида операции                    */
                      KindDoc,      /* номер вида первичного документа        */
                      KindStep,     /* вид шага операции                      */
                      ID_Step )     /* внутренний идентификатор шага операции */
    private var logquery;

    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(ID_Oper) != V_INTEGER) and (valtype(ID_Oper) != V_STRING)) ID_Oper = 0; end;
        if ((valtype(ID_Step) != V_INTEGER) and (valtype(id_Step) != V_STRING)) ID_Step = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + ID_Oper + " AND t_id_step = " + ID_Step;
        ExecSQL(logquery, null, false);
    end;

    return 0;
end;

/* -----------------------------------------------------------------------------
   Массовое выполнение шага "Предобработка требования банка"
   ----------------------------------------------------------------------------- */

/* -----------------------------------------------------------------------------
   Предтранзакционные действия 
   Все проверки отражаются только на временной таблице dpmprepro_tmp,
   никакие изменения в БД не делаются
   ----------------------------------------------------------------------------- */
macro PrepMassExecuteStep() 

    // Подготовительные действия
    var stat:integer = execStoredFunc( "BB_BCPREPRO.MassPreprocessPrepare", V_INTEGER );

    if( not stat )
        stat = PM_MassPreproPrepare();
    end;
  
    // Системный контроль
    if( not stat )
        stat = execStoredFunc( "BB_BCPREPRO.MassSysControlPrepare", V_INTEGER );
    end;

    // Проверка остатка
    if( not stat )
        stat = execStoredFunc( "BB_BCPREPRO.MassCheckRestPrepare", V_INTEGER );
    end;

    if( stat )
        MemoryError( stat );
    end;

    return stat;

end;

/* -----------------------------------------------------------------------------
   Транзакционные действия 
   Всё, что напроверяли, отражается на статусах документа, платежа, операции 
   ----------------------------------------------------------------------------- */
macro MassExecuteStep()
  
    var stat:integer = execStoredFunc( "BB_BCPREPRO.MassPreprocessExecute", V_INTEGER );

    if( not stat )
        stat = PM_MassPreproExecute();
    end;

    if( stat )
        MemoryError( stat );
    end;

    return stat;

end;