/* -@H------------------------------------------------------------------
*            Автоматизированная банковская система RS-Bank
*                 Библиотека интерпретируемых модулей
*
*   File Name        : sfchcom.mac
*
*   Description      : Макрос отбора единовременных комиссий
*
*   Respons.         : Стасевич В.
*
*   History          : Создан : 07.03.02
*
*----------------------------------------------------------------------*/
IMPORT OprInter, CTInter, PTInter, FIInter, "globals.mac", pmchcom;
IMPORT SFInter, sfcomcat;

/* EVG */
IMPORT CommissLib;

const OP_COM_CHOOSE_NOT_INS = 1;

RECORD comiss( sfcomiss );
RECORD contr ( sfcontr );

/*Макрос выбирает комиссии, которые попадут в комиссии операции*/
/*возвращаемые значения:*/
/*  0 - макрос не отобрал комиссию, отобрать должны дальше - системные процедуры*/
/*  1 - комиссия не вставляется и не рассчитывается*/
/*  2 - комиссия вставляется, но не рассчитывается*/
/*  3 - комиссия вставляется и рассчитывается*/
/**/
/*  если произошла ошибка, нужно вернуть не V_INTEGER*/

RECORD ps ( pscpord );
RECORD payord( pspayord );
RECORD dl_tick( dl_tick );
RECORD dvdeal( dvdeal );
PRIVATE RECORD rpscshdoc( pscshdoc );


private var SfConComm = TBFile("sfconcom.dbt");


/* EVG Глобальные переменные - определяются один раз во время выполнения шага */
Var IsCom53:bool,
    IsAntre:bool;

/*проверка единовременных комиссий в сделках с ценнми бумагами*/
macro SP_CheckOnceComiss( pDoc, contr, comiss )
   var Group, ReceiverCode = "", MarketCode = "", MarketLeaderCode = "";

   setbuff( dl_tick, pDoc );      
   Group = GetOperationGroup ( dl_tick.DealType );       

   /*проверим на то, что обрабатываемая комиссия входит в договор*/
   SfConComm.Clear();
   /*SfConComm.rec.ObjectID   = contr.Id; 
   SfConComm.rec.FeeType    = comiss.FeeType;
   SfConComm.rec.CommNumber = comiss.Number;
   SfConComm.rec.ObjectType = OBJTYPE_SFCONTR;
   if( SfConComm.GetEQ() == false )
      return 1; /*не считаем и не вставляем*/
   end;*/
   if( FindSfConCom_OnDate(contr.Id, comiss.FeeType, comiss.Number, OBJTYPE_SFCONTR, -1, {curdate}, SfConComm) )
     return 1;
   end;   


   if( IsEXCHANGE( Group ) == true )/*биржевая сделка*/

      /*для биржевых сделок получатель комиссии должен совпадать с биржей, указанной в сделке*/
      /*или получатель - наш банк*/
      ReceiverCode = ПолучитьКодСубъекта( comiss.ReceiverID, PTCK_CONTR );
      MarketCode   = ПолучитьКодСубъекта( dl_tick.MarketID, PTCK_CONTR );

      if(GetIdentProgram() == CodeFor("S")) /*операция выполняется из БОЦБ*/
         MarketLeaderCode = ExecMacroFile( "secinter.mac", "ПолучитьКодГруппыБиржи", dl_tick.MarketID );
      end;

      if(   (comiss.ReceiverID == {OurBank}) OR   
            ((MarketCode != "") AND (MarketCode == ReceiverCode)) OR
            ((MarketLeaderCode != "") AND (MarketLeaderCode == ReceiverCode))
      ) 
         return 3;
      else
         return 1;
      end;    
   end;
   return 0;
end;

private macro ПолучитьЗначениеКатегории( Obj, KindCateg, ObjType )
  var AttrID;
  if( GetMainObjAttr( null, ObjType, UniID(Obj, ObjType), KindCateg, AttrID) )
     return AttrID;
  end;
  return 0;
end;

private record rec_fi( fininstr );
private record rec_party( party );

/*проверка единовременных комиссий в сделках с ПИ (производными инструментами)*/
macro DV_CheckOnceComiss( pDoc, contr, comiss )

   var ContractorID:integer = -1, ExecCalc:bool = false;

   setbuff( dvdeal, pDoc );      

   /*проверим на то, что обрабатываемая комиссия входит в договор*/
   SfConComm.Clear();
   if( FindSfConCom_OnDate(contr.Id, comiss.FeeType, comiss.Number, OBJTYPE_SFCONTR, -1, dvdeal.Date, SfConComm) )
      return 1;
   end;   

   if( comiss.ReceiverID == {OurBank} ) /*комиссии банку*/
      if( dvdeal.Client > 0 )
         return 3;
      else
         return 1;
      end;
   else
      /*проверим признак "расчет итоговых сумм сделок" для контрагента по сделке*/   
      /* определим контрагента */
      if( dvdeal.Broker == -1 )
         if( ПолучитьФинИн( dvdeal.FIID, rec_fi ) == 0 )
            ContractorID = rec_fi.Issuer; 
         end;
      else
         ContractorID = dvdeal.Broker;
      end;

      if( ContractorID != -1 )
         if( ПолучитьСубъекта( ContractorID, rec_party ) == 0 )
            /*получим для Party значение категории "Расчет итог. сумм сделок по ПИ" */
            if( ПолучитьЗначениеКатегории( rec_party, 29 /**/, OBJTYPE_PARTY ) == 1 /*Не выполняется*/ )
               return 1;
            else /* Выполняется или не задано */
               return 3;
            end;                 
         end;
      end;
   end;

   return 0;
end;

/*проверка единовременных комиссий в сделках с учтенными векселями*/
private macro VA_CheckOnceComiss( contr, comiss)

   /*проверим на то, что обрабатываемая комиссия входит в договор*/
   SfConComm.Clear();
   /*SfConComm.rec.ObjectID   = contr.Id; 
   SfConComm.rec.FeeType    = comiss.FeeType;
   SfConComm.rec.CommNumber = comiss.Number;
   SfConComm.rec.ObjectType = OBJTYPE_SFCONTR;
   if( SfConComm.GetEQ() == false )
      return 1; /*не считаем и не вставляем*/
   end;*/
   if( FindSfConCom_OnDate(contr.Id, comiss.FeeType, comiss.Number, OBJTYPE_SFCONTR, -1, {curdate}, SfConComm) )
     return 1;
   end; 

   return 0;
end;

macro ChooseCom
( 
   docKind, /*вид первичного документа*/
   pDoc,    /*указатель на первичный документ*/
   pContr,  /*указатель на договор обслуживания*/
   pComiss  /*указатель на комиссию*/
)
   setbuff( contr,  pContr  );
   setbuff( comiss, pComiss );

   /* EVG */
   var PaymentObj;
   record Paym( pmpaym );
   var retVal, Attrid, Code, Num;
   
   /* ID Категории "Комиссия 5.3 за выдачу наличных" */
   const GroupID = 20;

   /* Номер категории, которая устанавливается в случае, если выдача производится без предварительной заявки */
   const TarifCatNumber = "1";



   // Валютные платежи РКО и ББ
   if( ( docKind == PS_CPORDER ) OR ( docKind == BBANK_CPORDER ) )
      /* EVG Отключаем функции макросовой фильтрации комиссий
      setbuff( ps, pDoc );      
      if( PM_ChooseComPayment( comiss, RsbPayment( ps.OrderID ) ) )
        return 0;
      else
        return OP_COM_CHOOSE_NOT_INS;
      end;*/

      /* EVG Теперь фильтруем */
      /* Комиссии банков-корреспондентов рассчитываем только если это подходящий платёж */
      setbuff( ps, pDoc );
      if ( index(strLwr(comiss.Code), "банк") > 0 )
         PaymentObj = RsbPayment( ps.OrderID );
         if ( not IsPaymentForBankCommission( PaymentObj, PaymentObj.PayerAccount ) )
            return OP_COM_CHOOSE_NOT_INS;
         end;
      end;
      
      /* EVG 19/06/2012 Убрал вывод в список комиссий, у которых дата окончания действия меньше даты платежа */
      // Чтобы не инициализировать RsbPayment() всегда, сделаем сначала проверку на {CurDate}.
      if( ( ( comiss.dateBegin > {CurDate} ) or ( comiss.dateEnd < {CurDate} ) )
          and ( comiss.dateEnd != date(0,0,0) ) )
         /* EVG 19/06/2012 Что-то я боюсь, что из-за лишней инициализации объекта, начнутся доп. тормоза.
            Уберу лучше - не так это принципиально, хватит проверки на {CurDate}.
         // Если текущий день не входит в период действия комиссии, то уже инициализируем платёж.
         PaymentObj = RsbPayment( payord.OrderID );
         if( ( comiss.dateBegin > PaymentObj.ValueDate ) or ( comiss.dateEnd < PaymentObj.ValueDate ) )
            return OP_COM_CHOOSE_NOT_INS;
         end;*/
         return OP_COM_CHOOSE_NOT_INS;
      end;

      
      return 0;
   // Рублёвый платёж РКО
   elif ( docKind==PS_PAYORDER )
      setBuff( payord, pDoc );

      /* EVG Отключаем функции макросовой фильтрации комиссий
      if( PM_ChooseComPayment( comiss, RsbPayment( payord.OrderID ) ) )
        return 0;
      else
        return OP_COM_CHOOSE_NOT_INS;
      end;
      */

      /* EVG 23/09/2011 Выбор единовременной комиссии за внутренний платёж 3.2.*.
         Используется в Экспресс-Волге, но остальным банкам не мешает. */
      if ( (comiss.Code == "3.2.1e") or (comiss.Code == "3.2.2e") )

         // msgbox ( payord.Origin , " - ", PSPO_OR_FINEREADER );
         // Только внутренние платежи
         PaymentObj = RsbPayment( payord.OrderID );
         if( PaymentObj.ReceiverGroup != PAYMENTS_GROUP_EXTERNAL )

            /* EVG 29/09/2011 Доп. проверка по счетам получателя */
            if ( ( ( int(subStr( PaymentObj.ReceiverAccount, 1, 3 )) >= 450 )
                   and
                   ( int(subStr( PaymentObj.ReceiverAccount, 1, 3 )) <= 455 ) )
                 or
                 ( int(subStr( PaymentObj.ReceiverAccount, 1, 5 )) == 70601 )
               )
               return OP_COM_CHOOSE_NOT_INS;
            end;
            
            // Комиссия 3.2.1е - за ручной ввод и FR
            if   ( (comiss.Code == "3.2.1e") and ( (payord.Origin == PSPO_OR_MANUAL) or (payord.Origin == PSPO_OR_FINEREADER) ) )
                 return 0;
            // Комиссия 3.2.2е - за документы Клиент-Банка
            elif ( (comiss.Code == "3.2.2e") and (payord.Origin == PSPO_OR_CLB) )
                 return 0;
            end;
         end;   

         return OP_COM_CHOOSE_NOT_INS;
      end;

      /* EVG 19/06/2012 Убрал вывод в список комиссий, у которых дата окончания действия меньше даты платежа */
      // Чтобы не инициализировать RsbPayment() всегда, сделаем сначала проверку на {CurDate}.
      if( ( ( comiss.dateBegin > {CurDate} ) or ( comiss.dateEnd < {CurDate} ) )
          and ( comiss.dateEnd != date(0,0,0) ) )
         /* EVG 19/06/2012 Что-то я боюсь, что из-за лишней инициализации объекта, начнутся доп. тормоза.
            Уберу лучше - не так это принципиально, хватит проверки на {CurDate}.
         // Если текущий день не входит в период действия комиссии, то уже инициализируем платёж.
         PaymentObj = RsbPayment( payord.OrderID );
         if( ( comiss.dateBegin > PaymentObj.ValueDate ) or ( comiss.dateEnd < PaymentObj.ValueDate ) )
            return OP_COM_CHOOSE_NOT_INS;
         end;*/
         return OP_COM_CHOOSE_NOT_INS;
      end;
      
      
      return 0;
   // Кассовый документ
   elif( ( docKind == CASH_BOF_ADDORDER ) or
         ( docKind == CASH_PS_INCORDER  ) or
         ( docKind == CASH_PS_OUTORDER  ) or
         ( docKind == CASH_BOF_INCORDER ) or
         ( docKind == CASH_BOF_OUTORDER ) )
      /* EVG Отключаем функции макросовой фильтрации комиссий
      setBuff( rpscshdoc, pDoc );
      if( not PM_IsProperComission( RsbPayment( rpscshdoc.AutoKey ), comiss ) )
        return OP_COM_CHOOSE_NOT_INS;
      end;
      */
      return 0;
   elif ( (docKind==WL_INDOC) OR (docKind==WL_WIPM) )
      /* EVG Отключаем функции макросовой фильтрации комиссий
      /* Для входящего платежа АРМ расчитываем только наши комиссии */
      if (comiss.ReceiverID!={OurBank})
         return OP_COM_CHOOSE_NOT_INS;
      end;
      */
      return 0;
   elif( (docKind== DL_SECURITYDOC) OR (docKind== DL_RETIREMENT) )
      return OP_COM_CHOOSE_NOT_INS;
   elif(docKind == DL_VEKSELACCOUNTED)
      return VA_CheckOnceComiss( contr, comiss );    

   elif( docKind == DL_DVDEAL )
      return DV_CheckOnceComiss( pDoc, contr, comiss );          
   else 
      return 0;
   end;   
   
end;


macro ChooseComBatch()
  var stat = 0;
  stat = execStoredFunc( "PM_SFSTEP.ChoosePmComBatch", V_INTEGER );
  return 0;
end;

