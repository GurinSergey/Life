/*
   Единый способ формирования документов оплаты удержанных комиссий и ТО
*/

/*                                                                          */
/*  Имя файла: sfpay.mac                                                    */
/*  Создан: 23.07.2001                                        Стасевич В.   */
/*  Переработан: 22.01.2010                                   SolAN         */
/*  Изменения:                                                              */
/* joy 28.04.2014 Добавила обпределения счета НДС в кредите (нужно для НБС) */
/****************************************************************************/
import sfcommon, sfpaym, sfpayord, sfpaydoc, sfbnkclm, sfpaycor, sfpaycash;
import "sf_prbb.mac", "CommissLib.mac";

private macro IsOurBank( BankID )
  if( (BankID == {HeadBankID}) OR (BankID == {OurBank}) )
    return true;
  else
    return false;
  end;
end;

private macro CheckIfCashDocPossible( objectType, objectBuf, sfcomiss, sidebet, sicredit, IsCashDoc:@bool )
  
  IsCashDoc = false;
  
  if( (objectType == OBJTYPE_SFSINGDF) AND (sfcomiss.InstantPayment == "X") AND IsOurBank(sicredit.rec.BankID) )
    return SfCheckCashAccountType( sidebet.Rec.Account, sidebet.Rec.FIID, @IsCashDoc );
  else
    return 0;
  end;

end;

private macro SfFormPayDoc( sidebet, sicredit, sfcomiss, payParams:TSfPayParams,
                            sfinvlnk, SumInInvFIID, IsBatchMode,  
                            bilfDocArray:@TArray,  oprchild)
  var sum = $0;
  var converted_sum = $0;

  var paymStatus = null;

  var bSayError = true;
  
  /* EVG */
  var NDS_Account = "",
      isEnoughRest;

  if( IsOprMultiExec() )
    bSayError = false;
  end;
  
  payParams.correctSums( sfcomiss );
  payParams.getPlusCalcAccounts( sicredit );
      
  var IsCashDoc = false;
  var stat = CheckIfCashDocPossible( payParams.objectType, payParams.objectBuf, sfcomiss, sidebet, sicredit, @IsCashDoc );
  if( stat != 0 )
    return SfPayErrorTreat( stat, bSayError );
  end;

  if( IsCashDoc == true )
    stat = SfCheckCashDocParams( sicredit, sidebet );
    if( stat )
      return SfPayErrorTreat( stat, bSayError );
    else
      return SfFormCashOrderExt( sidebet, sicredit, sfcomiss, payParams, IsBatchMode, oprchild );
    end;
  elif( (IsOurBank(sidebet.rec.PartyID)) OR (sidebet.rec.PartyID == 0) )   //Если направление комиссии (ТО) к банку
    if( sidebet.rec.Department == 0)       
      return SfPayErrorTreat( SFPAY_ERROR_PAYERACC_NOTAINOURBANK, bSayError );
    end;

    if( sicredit.rec.Department == 0 )
      paymStatus = PM_READY_TO_SEND;
    end;

    return SfFormBankPaymentExt( sidebet, sicredit, sfcomiss, payParams, paymStatus, sfinvlnk, null, IsBatchMode, oprchild );
  else /*Если направление комиссии (ТО) к клиенту*/

    /* joy 28.04.2014 Раскомментировала, добавила проверку на то, определен ли уже счет НДС. В НБС счет определяется именно здесь*/
    /* EVG 28/11/2013 Перенёс из старого макроса, но пока оставил в камменте, до тестирования. */
    /* EVG Определение категории -НДС */
    if ((payParams.taxSum > 0) and (sicredit.Rec.ReceiverNDSAccount == ""))

       /*
       PlusCalc_Account    = SfComPD.FindAndOpenAccount( PlusCalc_CatCode, payDate, payParams.FIID );
       PlusCalcNDS_Account = SfComPD.FindAndOpenAccount( PlusCalcNDS_CatCode, payDate, payParams.FIID );
       */
       NDS_Account         = payParams.SfComPD.FindAndOpenAccount( "-НДС", payParams.payDate, payParams.FIID );
       
       sicredit.Rec.ReceiverNDSAccount = NDS_Account;

       //msgbox (sidebet.Rec.Account, " - ", sidebet.Rec.ReceiverNDSAccount, "|", sicredit.Rec.Account, " - ", sicredit.Rec.ReceiverNDSAccount);
    end;
    
 

    if( sicredit.rec.Department == 0 )
      return SfPayErrorTreat( SFPAY_ERROR_RECEIVERACC_NOTAINOURBANK, bSayError );
    end;
        
    if( sidebet.rec.Department == 0 )
      return SfPayErrorTreat( SFPAY_ERROR_CLAIM_IMPOSSIBLE, bSayError );
    end;

    //Если счет плательщика и счет получателя в нашем филиале и настройка "CB\BANKORDERFORCOMM" = YES, то
    if( (bBankorderForComm_Setting()) AND bSfRightFilial(sidebet, sicredit) )
      return SfFormBankOrderExt( sidebet, sicredit, sfcomiss, payParams, sfinvlnk, null,
                                 IsBatchMode, oprchild );
    else                                      
      /* Иначе (счет плательщика и счет получателя открыты в разных on-line филиалах),
         1. Если счет плательщика и счет получателя рублевые, то*/
      if( (sidebet.rec.FIID == NATCUR) AND (sicredit.rec.FIID == NATCUR) )
        /*2. Формируем рублевое клиентское требование. Параметры акцепта берем согласно СПИ ДО. 
        Если комиссия взимается без ДО, то формируется безакцептное требование. 
        3. Сформированное требование выгружаем в РКО в том филиале, в котором открыт счет плательщика. */
        return SfFormClientOrderExt( sidebet, sicredit, sfcomiss, payParams, sfinvlnk, null, 
                                     IsBatchMode, oprchild );

      else/*4. Иначе (счета плательщика или счет получателя не рубли). 
        Создаем валютный клиентский платеж и вставляем его в РКО в том филиале, где открыт счет плательщика.*/
        return SfFormClientPaymExt( sidebet, sicredit, sfcomiss, payParams, sfinvlnk, null,
                                  IsBatchMode, oprchild );
      end;
    end;

  end;

  return 0;
end;

macro SfFormDocsCommon
( 
   OutBuffer, 
   sidebet,                 // Дт. - СПИ по счету плательщика                   
   sicredit,                // Кт. - СПИ по счет получателя                     
   sfcomiss,                // буфер вида комиссии                              
   payParams:TSfPayParams,  // параметры оплаты ПЗО - объект класса TSfPayParams
   sfinvlnk,                // параметр связи ТО с платежом                     
   SumInInvFIID,            // сумма оплтаты в валюте ТО                       
   bilfDocArray:@TArray,    // массив параметров ЗК СФ                          
   IsBatchMode,             // пакетный режим формирования РДД                  
   oprchild                 // буфер записи таблицы oprchild.dbt                
)
  var retval = 0;

  payParams.feeType = SF_FEE_TYPE_PERIOD; /*objectType == OBJTYPE_SFDEFCOM или */
  if( payParams.objectType == OBJTYPE_OPRSFCOM )
    payParams.feeType = SF_FEE_TYPE_SINGLE;
  elif( payParams.objectType == OBJTYPE_SFSINGDF )
    payParams.feeType = SF_FEE_TYPE_ONCE;
  elif( payParams.objectType == OBJTYPE_SFINVOICE )
    payParams.feeType = SF_FEE_TYPE_INVOICE;
  end;    

  if( payParams.ground == "" )
      payParams.ground = "Оплата комиссии " + sfcomiss.Code;
  end;  

  if( OutBuffer != null )
    if( SfPayCorrect(sfcomiss, payParams.payDate, payParams.ground, payParams.paySum, payParams.taxSum, 
                     payParams.FIID, payParams.primKind, payParams.primID, payParams.feeType, payParams.objectBuf,
                     payParams.payMethod, sidebet, sicredit, OutBuffer) )
      return 1;
    end;
  end;

  if( (not Sf_IsInstalledRKO()) OR (payParams.payMethod == SF_PAY_METHOD_DOCUMENT) )

    retval = SfFormDocuments( sidebet, sicredit, sfcomiss, payParams.payDate, payParams.paySum, payParams.taxSum, 
                              payParams.FIID, payParams.SfComPD, payParams.IsIncluded, payParams.isNVPI,
                              payParams.FacturaID, @bilfDocArray, payParams.objectType, payParams.objectBuf, oprchild.ID_Operation, oprchild.ID_Step );

  else
    retval = SfFormPayDoc( sidebet, sicredit, sfcomiss, payParams, sfinvlnk, SumInInvFIID,
                           isBatchMode, @bilfDocArray, oprchild );
  end;

  return retval;

end;

/*Универсальная функция формирования документов(   
  Из sfcontr берется 
    FIID    -- валюта сумм
    FIIDPayer
    AccountPayer
    payMethod)*/

macro SfFormDocs
(
  OutBuffer,   /* буфер для формирования выходного документа для Insert...Document */
  sidebet,
  sicredit,
  sfcomiss,    /* запись sfcomiss.dbt */
  payDate,     /* дата оплаты */
  ground,      /* основание   */
  paySum,      /* сумма в валюте FIID */
  taxSum,      /* НДС в валюте FIID   */
  FIID,
  primKind,    /* тип первички KIND_OF_DOC */
  primID,      /* ID первички */
  objectType,  /* вид объекта   */
  objectBuf,   /* объект */
  payMethod,
  SfComPD,     /* для единовременных и период объект класса SfConComPrimDoc, для разовых - SfSingDfPrimDoc */
  IsIncluded,
  isNVPI,
  FacturaID,
  bilfDocArray:@TArray,
  sfinvlnk,
  IsBatchMode, ID_Operation, ID_Step, ChildDocKind:@integer, ChildDocID:@string, PreAcptID
   
)
  var payParams = TSfPayParams;
  var stat = 0;

  payParams.payDate = payDate; 
  payParams.ground = ground; 
  payParams.paySum = paySum; 
  payParams.taxSum = taxSum; 
  payParams.FIID = FIID;
  payParams.primKind = primKind; 
  payParams.primID = primID; 
  payParams.objectType = objectType; 
  payParams.objectBuf = objectBuf; 
  payParams.payMethod = payMethod; 
  payParams.SfComPD = SfComPD; 
  payParams.IsIncluded = IsIncluded; 
  payParams.isNVPI = isNVPI; 
  payParams.FacturaID = FacturaID;
  payParams.PreAcptID = PreAcptID;

  if(PreAcptID != null)
    payParams.PreAcptID = PreAcptID
  end;

  var oprchild = TRecHandler("oprchild.tmp");
  ClearRecord( oprchild );
  if(ID_Operation != null)
    oprchild.rec.ID_Operation = ID_Operation;
    oprchild.rec.ID_Step      = ID_Step;     
  end;

  /* EVG 28/11/2013 Перенесено определение счёта из старого макроса */
  /*{MEV: Обновить СПИ - проверить достаточность средств на счёте из договора */
  var Acc;
  if( sfcomiss.FeeType == SF_FEE_TYPE_SINGLE )    /* для единовременных комиссий */

     /* EVG В процедуру Мефёда идём только в случае, если 
        счёт оплаты комиссии не удалось получить из платежа
        (счёт и валюта счёта сразу сохраняются в sidebet). */
     if ( not GetComissAccountFromPayment( objectBuf.id_operation, @sidebet.rec.Account, @sidebet.rec.Fiid ) )

        DebugBreak;
        selectAccountForSfPay( paySum+taxSum, Fiid, payDate, sidebet.rec.partyid, SF_FEE_TYPE_SINGLE, -1, 
                               objectBuf.SfContrID );
        
        Acc = null;
        Acc = getFoundedAcc();

        //DebugBreak;
        if (Acc!=null)
          /* 1. Сохранить информацию для обновления комиссии в макросе постобработки */
          prepareSingleCommSi( objectBuf.id_operation, objectBuf.id_step, objectBuf.oprcommnumber, Acc.account, Acc.Fiid );
          /* 2. Обновить структуры для корректного формирования документов оплаты */
          sidebet.rec.Account = Acc.account;
          sidebet.rec.Fiid = Acc.Fiid;
        end;

     end;

     //msgbox (sidebet.rec.Account);
  end;
  /*MEV}*/

  stat = SfFormDocsCommon( OutBuffer, sidebet, sicredit, sfcomiss, 
    payParams, sfinvlnk, null, @bilfDocArray, IsBatchMode, oprchild.rec );

  ChildDocKind = oprchild.rec.Child_DocKind   ;
  ChildDocID   = oprchild.rec.Child_DocumentID;

  /* EVG 28/11/2013 Пришло из старого макроса */
  if (stat != 0)
      InitError();
      MemoryError(null,GetSfPay_ErrMsg()); /* Golovkin 07.02.2013 Сохраняем ошибку для обработчика */
  end;

  return stat;
end;

macro SfInvFormDocs( OutBuffer, sidebet, sicredit, sfcomiss, payParams:TSfPayParams, sfinvlnk, SumInInvFIID, bilfDocArray:@TArray )

  var oprchild = TRecHandler("oprchild.tmp");
  ClearRecord( oprchild );
 
  return SfFormDocsCommon( OutBuffer, sidebet, sicredit, sfcomiss, payParams, sfinvlnk, SumInInvFIID, @bilfDocArray, null, oprchild.rec );

end;

