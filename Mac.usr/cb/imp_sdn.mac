/*
    Импорт справочника лиц, участвующих в террористической деятельности
*/
Import BankInter;

file dbt_terrorist_file     ("terror.dbt"  ) write;
file dbt_terrorist_note_file("ter_note.dbt") write;

var DateUpdate,
    inst      ,
    individual,
    vessel    ,
    country   ,
    city      ,
    address   ,
    note      ;


const null_string = "-0-";

/* type of SDN */
const str_SDN_Type_Inst    = null_string;  /* юридическое лицо */
const str_SDN_Type_Individ = "individual"; /* физическое лицо  */
const str_SDN_Type_Vessel  = "vessel";     /* судно            */

const int_SDN_Type_Inst    = 0;   /* юридическое лицо */
const int_SDN_Type_Individ = 1;   /* физическое лицо  */
const int_SDN_Type_Vessel  = 2;   /* судно            */

macro TxtNRecords( id_file )
  
  var i = 0;
  rewind( id_file );
  while( next(id_file) ) i = i + 1; end;
  return i;

end;

macro CheckSDNType( SDN_Type, inst, individual, vessel )
  
  macro _check_type( SDN_Type, str_SDN_Type, int_SDN_Type )
    return ((valtype(SDN_Type) == V_STRING ) and (SDN_Type == str_SDN_Type))
     or ((valtype(SDN_Type) == V_INTEGER) and (SDN_Type == int_SDN_Type));
  end;
  
    if( _check_type( SDN_Type, str_SDN_Type_Inst   , int_SDN_Type_Inst    ) )    /* юр.лицо  */
     return inst;
  elif( _check_type( SDN_Type, str_SDN_Type_Individ, int_SDN_Type_Individ ) )   /* физ.лицо */
     return individual;
  elif( _check_type( SDN_Type, str_SDN_Type_Vessel , int_SDN_Type_Vessel  ) )   /* судно    */
     return vessel;
  end;
  
  return false;

end;

macro DefineSDNType( SDN_Type )
  
    if( SDN_Type == str_SDN_Type_Inst    )  /* юр.лицо  */
     return int_SDN_Type_Inst;
  elif( SDN_Type == str_SDN_Type_Individ )  /* физ.лицо */
     return int_SDN_Type_Individ;
  elif( SDN_Type == str_SDN_Type_Vessel  )  /* судно    */
     return int_SDN_Type_Vessel;
  end;
  return int_SDN_Type_Inst;

end;

macro CopyString( DestStr, SrcStr )
  
  if( Trim(SrcStr) != null_string )
    SetParm( 0, Trim(SrcStr) );
    return;
  end;
  
  SetParm( 0, "" );

end;

macro SDN_AddString( DestStr, AddStr, Delimiter )
  
  var make_string;

  if( (Trim( AddStr ) != "") and (Trim( AddStr ) != null_string) )
    if( Trim(DestStr) == "" )
      return Trim(AddStr);
    else
      return DestStr + Delimiter + Trim(AddStr);
    end;
  end;

  return DestStr;

end;

/*
  Найти запись о субъекте
*/
macro FindSDN( EntNum )
  dbt_terrorist_file.EntNum = EntNum;
  return GetEQ( dbt_terrorist_file );
end;

/*
  Вставить запись с дополинтельной информацией
*/
macro Insert_SDN_Note( EntNum, Note )
  
  ClearRecord( dbt_terrorist_note_file );
  dbt_terrorist_note_file.EntNum = EntNum;
  CopyString( dbt_terrorist_note_file.Note, Trim( Note ) );
  
  if( Trim(dbt_terrorist_note_file.Note) != "" )
    if( not insert(dbt_terrorist_note_file) )
      msgbox( "Ошибка вставки записи" );
      return false;
    end;
  end;

  return true;

end;


/*
  Разобрать строку из файла sdn.ff
*/
macro SdnParseString( TerrorString )
  
  var EntNum, SDN_Type;

  SDN_Type = Trim( SubStr(TerrorString, 361, 12) );
  if( CheckSDNType( SDN_Type, inst, individual, vessel ) )
    
    EntNum = int( Trim(SubStr(TerrorString, 1, 10)) );

    if( EntNum != 0 )
        
      ClearRecord( dbt_terrorist_file );
      dbt_terrorist_file.EntNum     = EntNum;
      dbt_terrorist_file.Type       = DefineSDNType( SDN_Type );
      dbt_terrorist_file.Name       = Trim( SubStr(TerrorString, 11, 350) );
      dbt_terrorist_file.DateUpdate = DateUpdate;
      if( not insert(dbt_terrorist_file) )
        msgbox( "Ошибка вставки записи" );
        return false;
      end;
      
      if( note )
        if( not Insert_SDN_Note( EntNum, Trim(SubStr(TerrorString, 868, 1000))) )
          return false;
        end;
      end;
    
    end;
  
  end;

  return true;

end;

/*
  Разобрать строку из файла alt.ff - дополнительные наименования
*/
macro AltParseString( AltString )
  
  if( FindSDN( int(Trim(SubStr(AltString, 1, 10))) ) )
    
    if( CheckSDNType( dbt_terrorist_file.Type, inst, individual, vessel ) )
      
      dbt_terrorist_file.Aka = SDN_AddString( dbt_terrorist_file.Aka, Trim(SubStr(AltString, 29, 350)), ";" );

      if( not update(dbt_terrorist_file) )
        msgbox( "Ошибка вставки записи" );
        return false;
      end;
    end;
  
  end;

  return true;

end;

/*
  Разобрать строку из файла add.ff - дополнительные данные
*/
macro AddParseString( AddString )
  
  var EntNum = int( Trim(SubStr(AddString, 1, 10)) );
  var Note;

  if( FindSDN( EntNum ) )
    
    if( CheckSDNType( dbt_terrorist_file.Type, inst, individual, vessel ) )
      
      if( address )
        Note = SDN_AddString( Note, SubStr(AddString, 21, 750), "," );
      end;

      if( city )
        Note = SDN_AddString( Note, SubStr(AddString, 771, 50), "," );
      end;

      if( country )
        Note = SDN_AddString( Note, SubStr(AddString, 821, 250), "," );
      end;

      if( not Insert_SDN_Note( EntNum, Note ) )
        return false;
      end;

    end;
  
  end;

  return true;

end;


macro SelectTxtFile( ParseStringFun, TxtFile, i )
  
  var stat = true;

  rewind( TxtFile );
  while( stat and next(TxtFile) )

    UseProgress( i = i + 1 );
    stat = ExecMacro2( ParseStringFun, TxtFile.str );

  end;

  SetParm( 2, i );
  
  return stat;

end;

/*
    Основная функция - вызывается из С-кода

    Принимаемые параметры:
      _DateUpdate - дата обновления
      _inst       - включить в справочник сведения об юр.лицах;
      _individual - включить в справочник сведения о физ.лицах;
      _vessel     - включить в справочник сведения о судах;
      _country    - Включить в графу "Примечание" страну субъекта
      _city       - Включить в графу "Примечание" город субъекта
      _address    - Включить в графу "Примечание" адрес субъекта
      _note       - Включить в графу "Примечание" примечание файла sdn.ff
*/
macro ImportTERRORIST( _DateUpdate,_inst, _individual, _vessel, _country, _city, _address, _note )
  
  var stat;
  var nRec, i;
  var SDNPath;

  file sdn_file() txt;
  file alt_file() txt;
  file add_file() txt;

  DateUpdate = _DateUpdate;
  inst       = _inst      ;
  individual = _individual;
  vessel     = _vessel    ;
  country    = _country   ;
  city       = _city      ;
  address    = _address   ;
  note       = _note      ;

  SDNPath = "..\\Import\\ter\\sdn";
  GetRegistryValue( "BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR",V_STRING, SDNPath, null );
    
    
    if( not open(sdn_file, SDNPath + "\\sdn.ff") )
      msgbox( "Не удается открыть файл " + SDNPath + "\\sdn.ff" )
  elif( not open(alt_file, SDNPath + "\\alt.ff") )
      msgbox( "Не удается открыть файл " + SDNPath + "\\alt.ff" )
  elif( not open(add_file, SDNPath + "\\add.ff") )
      msgbox( "Не удается открыть файл " + SDNPath + "\\add.ff" )
  else
      
      if( not clone(dbt_terrorist_note_file) )
        msgbox( "Не удается создать файл " + "terrorist.dbt" )
    elif( not clone(dbt_terrorist_file) )
        msgbox( "Не удается создать файл " + "ter_note.dbt" )
    else
      stat = true;

      nRec = TxtNRecords( sdn_file );
      nRec = nRec + TxtNRecords( alt_file );
      nRec = nRec + TxtNRecords( add_file );

      i = 0;
      InitProgress( nRec, "~Ctrl-Break~ Прервать", "Импорт справочника лиц, причастных к терроризму" );

      if( stat ) stat = SelectTxtFile( "SdnParseString", sdn_file, i ); end;

      if( stat ) stat = SelectTxtFile( "AltParseString", alt_file, i ); end;

      if( stat ) stat = SelectTxtFile( "AddParseString", add_file, i ); end;

      RemProgress();

      if( stat )
        msgbox( "Импорт выполнен успешно" );
      end;
      
    end;

  end;

end;
