/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   ████████   ████████
   ███   ███  ███   ███
   ███  ████  ███  ████
   ███████    ███████
   ███  ███   ███  ███
   ███   ███  ███   ███

   RR Рахмедов Р.С.
   
   Имя файла: imp_kfm.mac

   Описание: Импорт справочника лиц, причастных к терроризму (КФМ РФ)
   
   ChangeLog:
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 29.01.2014 В рамках перехода на 31 патч, добавил возможность копирования справочника во все банки группы  - ReplicateTerrReff()
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 16.06.2014 Добавлен линк на Солидарность
-----------------------------------------------------------------------------------------------------------------------------------------------------
   //RR 30.03.2015 Убрал из информационных сообщений номер своего телефона
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

Import "globals.mac", rsd, fg_Life_parm;

private file terr_kfm_file    ("terr_kfm.dbt"    ) write;
private file terrinfo_file    ("terrinfo.dbt"    ) write;
private file terr_kfm_aka_file("terr_kfm_aka.dbt") write;
private file fmkfmchk_file    ("fmkfmchk.dbt"    ) write;

private var Description  = TArray;
private var Citizen      = TArray;
private var Resolution   = TArray;
private var LegalAddress = TArray;
private var Address      = TArray;
private var Founder      = TArray;
private var Director     = TArray;
private var OKPO         = TArray;
private var RegNumber    = TArray;
private var PaperSeries  = TArray;
private var PaperNumber  = TArray;
private var NameDocum    = TArray;
private var BirthPlace   = TArray;

private var Bank_name = fg_life_subject({OurBank});

 MACRO ReplicateTerrReff(NeedRepDistribReff)
  debugbreak;
/*  
  if ( not Bank_Name.is_PRBB)
    msgbox("Запускать репликацию разрешено только из ПРББ");
    return 0;
  end;
*/  
  var cmd, i = 0;
  private var DBLINSK = Tarray();
  
  DBLINSK(0) = "GEBPRIM";
  DBLINSK(1) = "VUZPRIM";
  /*
  DBLINSK(2) = "RSBANK_EVS_DBLINK";
  DBLINSK(3) = "RSBANK_EVVOR_DBLINK";
  DBLINSK(4) = "RSBANK_EVV_DBLINK";
  DBLINSK(5) = "RSBANK_EVU_DBLINK";
  DBLINSK(6) = "RSBANK_EVSTA_02_DBLINK";
  */
  DBLINSK(2) = "RSBANK_GO_DBLINK";
  DBLINSK(3) = "RSBANK_NBS_DBLINK";
  DBLINSK(4) = "RSBANK_SLD_DBLINK";
  
  begAction(100, "Копирование справочника КФМ в банки группы LIFE", false);
  RslDefCon.BeginTrans();
  while (i < DBLINSK.Size)
    
    if (NeedRepDistribReff == true)
      
      cmd = RsdCommand("delete from dfmpartychk_dbt@"+DBLINSK[i]+" where t_checklist = 1");
      cmd.execute();
      
      cmd = RSDCommand("delete from dterr_kfm_dbt@"+DBLINSK[i]+"");
      cmd.execute;
      cmd = RSDCommand("insert into dterr_kfm_dbt@"+DBLINSK[i]+" value (SELECT * FROM dterr_kfm_dbt)");
      cmd.execute;
    
      cmd = RSDCommand("delete from dterrinfo_dbt@"+DBLINSK[i]+"");
      cmd.execute;
      cmd = RSDCommand("insert into dterrinfo_dbt@"+DBLINSK[i]+" value (select * from dterrinfo_dbt)");
      cmd.execute;
    
      cmd = RSDCommand("delete from dterr_kfm_aka_dbt@"+DBLINSK[i]+"");
      cmd.execute;
      cmd = RSDCommand("insert into dterr_kfm_aka_dbt@"+DBLINSK[i]+" value (SELECT * FROM dterr_kfm_aka_dbt)");
      cmd.execute;
    
      cmd = RSDCommand("delete from dfmkfmchk_dbt@"+DBLINSK[i]+"");
      cmd.execute;
      cmd = RSDCommand("insert into dfmkfmchk_dbt@"+DBLINSK[i]+" value (select * from dfmkfmchk_dbt)");
      cmd.execute;

    elif (NeedRepDistribReff == false)

      cmd = RSDCommand("delete from dstop_dbt@"+DBLINSK[i]+"");
      cmd.execute;
      cmd = RSDCommand("insert into dstop_dbt@"+DBLINSK[i]+" value (select * from dstop_dbt)");
      cmd.execute;

    else
      msgbox("Неверный тип параметра NeedRepDistribReff при вызове ReplicateTerrReff()");
    end;
    i = i + 1;
  end;
  RslDefCon.CommitTrans();
  endAction();
   onerror()
   RslDefCon.RollbackTrans();
   msgbox("Во время выполнения процедуры возникла ошибка");
 END;

private macro GetNameOper( Oper : integer )
  file person("person.dbt");
  person.Oper = Oper;
  if( getEQ(person) ) return person.Name; end;
  return "";
end;

private macro toDate( dbfDate : variant )
  var bdDate : date;
  
  bdDate = date(0,0,0);

  if( valtype(dbfDate) == V_DATE )
    bdDate = dbfDate;
  else
    bdDate = date(dbfDate);
  end;

  return bdDate;
end;

/* Печать шапки протокола */
private macro PrintHeader( ImportFileName : string )
[                  ПРОТОКОЛ ОБНОВЛЕНИЯ СПРАВОЧНИКА ЛИЦ,
             ПРИЧАСТНЫХ К ТЕРРОРИСТИЧЕСКОЙ ДЕЯТЕЛЬНОСТИ (ФСФМ РФ)

Дата и время запуска процедуры импорта: ########## #####
Исполнитель: #### #
Файл импорта: #

] (string(date:f), string(time:f), {oper}, GetNameOper({oper}), ImportFileName );
end;

private macro AddString(list, num , str)
  var isExists = false;
  var i = 0;
  while (i < num)
   if(str == list(i))
     isExists = true;
   end;
     i = i + 1;
  end;

  if(isExists)
    list(num) = "";
  else
    list(num) = str;
  end;
end;


private macro SplitAndInsertName( Name:String, TerroristID  )
  var pos = 0;
  var TempStr = "";
  var SaveStr = "";

  var StrList = TArray;
  var numArray = 0;
  var i = 0;

  // Приводим строку к верхнему регистру.
  TempStr = StrUpr(Name);
  // Исключаем из строки все подстроки "A.K.A.".
  TempStr = StrSubst(TempStr, "A.K.A.", "");

  // Заменяем скобки на точки с запятой.
  TempStr = StrSubst(TempStr, "(", ";");
  TempStr = StrSubst(TempStr, ")", ";");

  // Исключаем точки с запятой в начале и конце строки.
  TempStr = Trim(TempStr);
  if (SubStr(TempStr, 1, 1) == ";")
    TempStr = SubStr(TempStr, 2 );
  end;

  if (SubStr(TempStr, StrLen(TempStr), 1) == ";")
    TempStr = SubStr(TempStr, 1, StrLen(TempStr) -1);
  end;

  // Исключаем двойные точки с запятой и лишние пробелы
  while (Index ( TempStr, ";;" ) )
    TempStr = StrSubst(TempStr, ";;", ";");
  end;
  while (Index ( TempStr, "  " ) )
    TempStr = StrSubst(TempStr, "  ", " ");
  end;

  pos = StrBrk ( TempStr, ";" );
  while(pos)
    SaveStr = SubStr(TempStr, 1, pos - 1); 
    SaveStr = Trim(SaveStr);
    if(StrLen(SaveStr))
      AddString(StrList, numArray , SaveStr);
      numArray = numArray + 1 ;
    end;

    TempStr = SubStr(TempStr, pos + 1);
    pos = StrBrk ( TempStr, ";" )
  end;

  SaveStr = Trim(TempStr); 

  if(StrLen(SaveStr))
    AddString(StrList, numArray , SaveStr);
    numArray = numArray + 1 ;
  end;

  i = 0;
  while (i < numArray)
    if(StrList(i) != "")
      ClearRecord( terr_kfm_aka_file );
      terr_kfm_aka_file.TerroristID = TerroristID;
      terr_kfm_aka_file.Name = StrList(i);
      Insert( terr_kfm_aka_file );
    end;

    i = i + 1;
  end;

end;

private macro SplitString( list, num )
  var str = "";
  var i = 0;

  while (i < num)
    str = str + list(i);
    i = i + 1;
  end;

  return str;
end;

private macro FillRecord( Num : integer)
  terrinfo_file.Description  = SplitString(Description , Num);
                                                
  terrinfo_file.Citizen      = SplitString(Citizen     , Num);
                                                
  terrinfo_file.Resolution   = SplitString(Resolution  , Num);
                                                
  terrinfo_file.LegalAddress = SplitString(LegalAddress, Num);
  terrinfo_file.Address      = SplitString(Address     , Num);
                                                
  terrinfo_file.Founder      = SplitString(Founder     , Num);
  terrinfo_file.Director     = SplitString(Director    , Num);
                                                
  terrinfo_file.OKPO         = SplitString(OKPO        , Num);
  terrinfo_file.RegNumber    = SplitString(RegNumber   , Num);
                                                
  terrinfo_file.PaperSeries  = SplitString(PaperSeries , Num);
  terrinfo_file.PaperNumber  = SplitString(PaperNumber , Num);
  terrinfo_file.NameDocum    = SplitString(NameDocum   , Num);
  terrinfo_file.BirthPlace   = SplitString(BirthPlace  , Num);

end;

private macro FillListRecord( KFMList, Type : integer, Num : integer)

  AddString(Description, Num, Trim(KFMList.DESCRIPT) );
  
  if(FldIndex(KFMList,"CITIZEN") != -1)
    AddString(Citizen, Num, Trim(KFMList.CITIZEN));
  else
    Citizen(Num)    = "";
  end;

  AddString(Resolution, Num, Trim(KFMList.TERRTYPE));
  
  AddString(LegalAddress, Num, Trim(KFMList.AMR));
  AddString(Address, Num, Trim(KFMList.ADRESS));
  AddString(Founder, Num, Trim(KFMList.FOUNDER));
  AddString(Director, Num, Trim(KFMList.DIRECTOR));
    
  if( (Type == 1) or (Type == 2) )
    AddString(OKPO, Num, Trim(KFMList.SD));
    AddString(RegNumber, Num, Trim(KFMList.RG));

    PaperSeries(Num)  = "";
    PaperNumber(Num)  = "";
    NameDocum(Num)    = "";
    BirthPlace(Num)   = "";
  elif( Type == 3 )
    AddString(PaperSeries, Num, Trim(KFMList.SD));
    AddString(PaperNumber, Num, Trim(KFMList.RG));
    AddString(NameDocum, Num, Trim(KFMList.VD));
    AddString(BirthPlace, Num, Trim(KFMList.MR));

    OKPO(Num)      = "";
    RegNumber(Num) = "";
  end;
end;


private macro DefineCharType( terr_kfm_file )
  if( terr_kfm_file.Type == 3 ) terr_kfm_file.chType = "Ф"; end;
  return terr_kfm_file.chType = "Ю";
end;


private macro ProcessRecord( KFMList, DateUpdate : date, ProgressNumber : @integer )
  
  var stat : bool;
  var Number : integer;
  var SaveTerroristID = 0;
  var FullTerrName = "";
  var statins = true;
  var isnext :bool = false;


  Number = 0;

  /* Сначала заполним данные о террористе */
  ClearRecord( terr_kfm_file );
  terr_kfm_file.Number     = int(KFMList.NUMBER);
  terr_kfm_file.Type       = int(KFMList.TU);
  terr_kfm_file.TerrorType = int(KFMList.TERROR);
  
  terr_kfm_file.CodCR      = Trim(KFMList.KODCR);
  terr_kfm_file.CodCN      = Trim(KFMList.KODCN);
  terr_kfm_file.INN        = Trim(KFMList.ND);

  if( (terr_kfm_file.Type != 1) and (terr_kfm_file.Type != 2) )
    terr_kfm_file.CodeDocum  = Trim(KFMList.KD);
  end;

  terr_kfm_file.RegDate    = toDate(KFMList.GR);
  terr_kfm_file.BirthYear  = int(KFMList.YR);

  DefineCharType( terr_kfm_file );

  terr_kfm_file.DateInput  = toDate(KFMList.CB_DATE);
  terr_kfm_file.DateDelete = toDate(KFMList.CE_DATE);
  terr_kfm_file.DateUpdate = DateUpdate;
  
  stat = Insert( terr_kfm_file );
  
  isnext = false;
  if(stat)
    while( (stat) and (terr_kfm_file.Number == int(KFMList.NUMBER)) and (not isnext))

      ProgressNumber = ProgressNumber + 1;
      UseProgress( ProgressNumber );
/*
      if(ProgressNumber == 489)
        debugbreak;
      end;
*/
      FillListRecord( KFMList, terr_kfm_file.Type, Number );
      Number = Number + 1;

      SaveTerroristID = terr_kfm_file.TerroristID;

      if( (FullTerrName != "") and ( trim(KFMList.TERROR) != "") )
        FullTerrName = FullTerrName + ";";
      end;

      FullTerrName = FullTerrName + Trim(KFMList.NAMEU);  

      if( stat ) stat = next( KFMList ); end;
      
      if (stat)
         if(int(KFMList.TU) != 0)
           isnext = true;
         end;
      end;
      
    end;
      ClearRecord( terrinfo_file );

      FillRecord( Number );

      terrinfo_file.TerroristID = terr_kfm_file.TerroristID;
      terrinfo_file.Number      = 1;
      statins = Insert( terrinfo_file );
      
      if(not statins )
        stat = statins;
      end;

      SplitAndInsertName( FullTerrName, SaveTerroristID ); 
  end;
  

  return stat;

end;

private macro RunImport( KFMList, DateUpdate : date )
  var stat : bool;
  var Nrec : integer, i : integer;

  stat = true;

  Nrec = NRecords( KFMList );
  i = 0;

  InitProgress( Nrec, " ~Ctrl-Break~ Прервать", "Импорт справочника лиц, причастных к терроризму (ФСФМ РФ)" );

  rewind( KFMList );
  stat = next( KFMList );
  while( stat )
      
    stat = ProcessRecord( KFMList, DateUpdate, @i );
    
  end;

  RemProgress();
end;

private macro ImportFun( ImportFileName : string, DateUpdate : date )
/*  
  if ( not Bank_Name.is_PRBB)
    msgbox("Запускать загрузку разрешено только из ПРББ");
    return 0;
  end;
*/  
  file KFMList() dbf;
  var cmd : RsdCommand;

  Array Text;
  Array Buttons;
                                                         
  Text(0) = "После импорта справочника вся информация о причастности субъектов к терроризму по справочнику ФСФМ " +
            "будет потеряна. По окончанию процедуры импорта необходимо запустить процедуру проверки субъектов " +
            "на причастность к терроризму по справочнику ФСФМ.";                                                       

  Buttons(0) = " Прервать ";
  Buttons(1) = " Продолжить ";

  if(ConfWin(Text,Buttons) == 1)
    PrintHeader( ImportFileName );
    if( not open(KFMList, ImportFileName) )
      msgbox( "Ошибка при открытии файла " + ImportFileName );
      exit(1);
    else

      if( not Clone(terrinfo_file) or not Clone(terr_kfm_file) or not Clone(terr_kfm_aka_file) or not Clone(fmkfmchk_file) )
        msgbox( "Ошибка при пересоздании справочника" );
        exit(1);
      end;

      cmd = RsdCommand("delete from dfmpartychk_dbt where t_checklist = 1");
      cmd.execute();

      RunImport( KFMList, DateUpdate );
    end;
  end;
  
  //RR
  if (GetTrue(false, "Выполнить репликацию справочника во все банки группы?"))
    ReplicateTerrReff(true);
  end;
  
end;

