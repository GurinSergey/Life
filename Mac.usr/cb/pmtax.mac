/*
 $Name: pmtax.mac
 $Module: Ядро Banking
 $Description: Проверка налогового платежа
*/

/************************************************************************/
/*         Автоматизированная банковская система RS-Bank                */
/*                 Copyright (c) R-Style Software Lab 2002              */
/*                                                                      */
/*  Имя файла      : pmtax.mac                                          */
/*                                                                      */
/*  Описание       : Проверка налогового платежа.                       */
/*                                                                      */
/*  Программист    : Копачев Д.В.                                       */
/*                                                                      */
/*  Создан         : 16.01.04                                           */
/*                                                                      */
/************************************************************************/

import Globals, PaymInter, BankInter, likepy, oralib, "bnk_common.mac";


private MACRO PM_CheckTaxProp( PaymentID:integer ):integer

  execSQL("DELETE FROM dpmtax_tmp");

  execSQL( "INSERT INTO dpmtax_tmp ( t_PaymentID ) values ( :PaymentID ) ",
           makeArray( SQLParam( "", PaymentID ) ) 
         );

  var retval = execStoredFunc( "RSI_PM_TAXPROP.MassCheckTaxProp", V_INTEGER );  
  if( retval > 0 )
    return retval;
  end;

  var rs = execSQLselect( "select t_Message from dpmtax_tmp where t_PaymentID = :PaymentID", makeArray( SQLParam( "", PaymentID )), FALSE );

  if( rs.moveNext() )

    if( strlen(rs.value("t_Message")) == 0 )
      RsbPayment(PaymentID).Notes.DelNote( NOTEKIND_PAYM_TAXWARNING );
    else
//      if ( ( not (index(rs.value("t_Message"), "В наименовании получателя не указано наименование администратора доходов, выделенное скобками") > 0)) and
//           ( not (index(rs.value("t_Message"), "Некорректно задана дата в поле 109 (Дата налогового документа)") > 0))) //R-644915 DPN Временное решение, пока не будет залит пакет
      if ( not (index(rs.value("t_Message"), "В наименовании получателя не указано наименование администратора доходов, выделенное скобками") > 0))
         RsbPayment(PaymentID).Notes.AddNote( NOTEKIND_PAYM_TAXWARNING, SubStr(StrSubst(rs.value(0), "|", "\n"), 1, 1499)); // 1499 - ограничение на длинну примечания
         CreateWarning( null, PAYMERR_TAXWARNING, rs.value("t_Message") );
      end;
    end;    
  else
    msgbox("Ошибка при проверке налоговых реквизитов.");
    return 1;
  end;
  
  return 0;

end;

// -----------------------------------------------------------------
// Проверка налоговых реквизитов при вводе/редактировании документа
// !!!вызывается в транзакции!!!, вопросы задвать нельзя
// -----------------------------------------------------------------
MACRO PM_CheckTaxPropForSave( PaymentID:integer ):integer
  return PM_CheckTaxProp( PaymentID );  
END;

// -----------------------------------------------------------------
// Проверка налоговых реквизитов на шаге операции (единичный режим)
// -----------------------------------------------------------------
MACRO PM_CheckTaxPropForStep( PaymentID:integer ):integer
  return PM_CheckTaxProp( PaymentID );
end;
 //LAO adaptation HF20
/*private*/ macro IsLikeKINDBUDGPAY( BttTICode : string, RecAccount : string, 
                                 RegBranchName : string,
                                 DefaultMaskBtt : string, 
                                 DefaultMaskAcc : string ) : bool

  var CommonPath = "CB\\PAYMENTS\\DEPARTMENTALINFO\\KINDBUDGPAY\\" + RegBranchName + "\\",
      PathBtt = CommonPath + "КБК",
      PathAcc = CommonPath + "СЧЕТ ПОЛУЧАТЕЛЯ";

  if( (CompareStrWithMasks( Bnk_GetRegistryValue(PathBtt, V_STRING, DefaultMaskBtt), 
                            BttTICode
                          ) == 0)
      and
      (CompareStrWithMasks( Bnk_GetRegistryValue(PathAcc, V_STRING, DefaultMaskAcc), 
                            RecAccount
                          ) == 0)
    )
    return TRUE;
  end;

  return FALSE;
end;
                                                                                       
// Определение типа платежа
macro GetPayType(CheckedAccount, BttTICode : string):integer

  if  ( IsLikeKINDBUDGPAY(BttTICode, CheckedAccount, "НАЛОГОВЫЙ",  "182*", "40101*") )
    return BPT_TAX;
  elif( IsLikeKINDBUDGPAY(BttTICode, CheckedAccount, "ТАМОЖЕННЫЙ", "153*", "40101*") )
    return BPT_CUSTOM;
  elif( IsLikeKINDBUDGPAY(BttTICode, CheckedAccount, "СТРАХОВОЙ ВЗНОС", "392*, 393*, 394*", "40101*") )
    return BPT_INSURANCE;
  elif( IsLikeKINDBUDGPAY(BttTICode, CheckedAccount, "ОПЛАТА ГОС. УСЛУГ", "*", "40302*, 40501????????2*, 40601????????1*, 40601????????3*, 40701????????1*, 40701????????3*, 40503????????4*, 40603????????4*, 40703????????4*") )
    return BPT_PUBLIC_SERVICES;
  end;
  
  return BPT_COMMON;

end;
