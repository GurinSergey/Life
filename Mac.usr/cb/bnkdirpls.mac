/*
$Name:           bnkdirpls.mac
$Module:         Ядро ГКБО
$Description:    Процедура импорта Bank Directory Plus. Диалог с пользователем, вызов ХП импорта и печать протокола.
*/

import BankInter, PTInter, rsd, "globals.mac";

private const digit_abc   = "0123456789";

file FileBnkDirPls("") txt;  /* Текстовый файл импорта */

var fullFileName : string;
var regFileName  : string;
var regFileNameBI: string;
var file_name    : string;
var file_ext     : string;
var file_path    : string;

var nCount : integer;

var LoadDelta  : integer;

var ImportStringArray : TArray;

var RecompilePackage = false;

/* Очистить временную таблицу */
macro ClearTempTable() : bool
  var cmd : RsdCommand;
  var sqlstr;
  cmd = RsdCommand("TRUNCATE TABLE dbnkdirpls_log");
  cmd.execute();
  cmd = RsdCommand("TRUNCATE TABLE dbnkdirpls_tmp");
  cmd.execute();
end;

//TAM 19.03.2015
macro ManipulateMDMTRiggers(Option:integer)
   var cmd:RsdCommand;
   var Action:string = "";
   if(Option == 0) //отключить
      Action = "DISABLE";
   else
      Action = "ENABLE";
   end;
   RsdCommand("ALTER TRIGGER DADRESS_DBT_MDM_DELETE_SEND "   + Action).execute;
   RsdCommand("ALTER TRIGGER DADRESS_DBT_MDM_INSERT_SEND "   + Action).execute;
   RsdCommand("ALTER TRIGGER DADRESS_DBT_MDM_UPDATE_SEND "   + Action).execute;
   RsdCommand("ALTER TRIGGER DOBJCODE_DBT_MDM_DELETE_SEND "  + Action).execute;
   RsdCommand("ALTER TRIGGER DOBJCODE_DBT_MDM_INSERT_SEND "  + Action).execute;
   RsdCommand("ALTER TRIGGER DOBJCODE_DBT_MDM_UPDATE_SEND "  + Action).execute;
   RsdCommand("ALTER TRIGGER DOBJRGDOC_DBT_MDM_DELETE_SEND " + Action).execute;
   RSdCommand("ALTER TRIGGER DOBJRGDOC_DBT_MDM_INSERT_SEND " + Action).execute;
   RsdCommand("ALTER TRIGGER DOBJRGDOC_DBT_MDM_UPDATE_SEND " + Action).execute;
   RsdCommand("ALTER TRIGGER DPARTY_DBT_MDM_DALETE_SEND "    + Action).execute;
   RsdCommand("ALTER TRIGGER DPARTY_DBT_MDM_INSERT_SEND "    + Action).execute;
   RsdCommand("ALTER TRIGGER DPARTY_DBT_MDM_UPDATE_SEND "    + Action).execute;
   RsdCommand("ALTER TRIGGER DPERSNIDC_DBT_MDM_DELETE_SEND " + Action).execute;
   RsdCommand("ALTER TRIGGER DPERSNIDC_DBT_MDM_INSERT_SEND " + Action).execute;
   RsdCommand("ALTER TRIGGER DPERSNIDC_DBT_MDM_UPDATE_SEND " + Action).execute;
   RsdCommand("ALTER TRIGGER DPERSN_DBT_MDM_DELETE_SEND "    + Action).execute;
   RsdCommand("ALTER TRIGGER DPERSN_DBT_MDM_INSERT_SEND "    + Action).execute;
   RsdCommand("ALTER TRIGGER DPERSN_DBT_MDM_UPDATE_SEND "    + Action).execute;
end;


/* Добавить запись во временную таблицу */
macro AddToTempTable(ImportString : string )
  ImportStringArray(ImportStringArray.Size) = ImportString;
end;

/* Добавить запись во временную таблицу */
macro InsertIntoTempTable( Flush : bool ) : bool
  var ins : RsbSQLInsert;
  var stat = true;
  if( Flush == null ) Flush = false; end;
  if((ImportStringArray.Size == 5000) or ((Flush) and (ImportStringArray.Size > 0)))
    ins = RsbSQLInsert("INSERT INTO dbnkdirpls_tmp (t_id, t_importstring) VALUES (0, ?)", 1, ImportStringArray.Size );
    ins.AddParam( V_STRING, ImportStringArray, 1100 );
    stat = ins.Insert();
    ImportStringArray.Size = 0;
  end;
  return stat;
end;

private macro _GetRegOfficeType()
  var stat;
  var regValue : string;
  GetRegistryValue( "CB\\PARTY\\SWIFT\\ВИДЫ ПОДРАЗДЕЛЕНИЙ", V_STRING, regValue, stat );
  return regValue;
end;

private macro _GetRegInstStatus()
  var stat;
  var regValue : string;
  GetRegistryValue( "CB\\PARTY\\SWIFT\\ВИДЫ ЛИЦЕНЗИЙ", V_STRING, regValue, stat );
  return regValue;
end;

private macro _GetRegSubTypeInd()
  var stat;
  var regValue : string;
  GetRegistryValue( "CB\\PARTY\\SWIFT\\ТИПЫ УЧАСТНИКОВ", V_STRING, regValue, stat );
  return regValue;
end;

/* получить общее количество обработанных записей во временной таблице */
private macro _GetAllRecCount()
  var rs : RsdRecordset;
  var RecCount : integer;
  RecCount = 0;
  rs = RsdRecordset("SELECT count(1) FROM dbnkdirpls_tmp WHERE t_processrecord >= 0" );
  if( rs.MoveNext() )
    RecCount = rs.value(0);
  end;
  return RecCount;
end;

/* получить количество записей определеннго вида */
private macro _GetRecCount( ModificationFlag : string )
  var rs : RsdRecordset;
  var RecCount : integer;
  RecCount = 0;
  rs = RsdRecordset("SELECT COUNT(1) FROM dbnkdirpls_tmp WHERE t_processrecord >= 0 AND t_modification_flag = '" + ModificationFlag + "'" );
  if( rs.MoveNext() )
    RecCount = rs.value(0);
  end;
  return RecCount;
end;

/* получить количество добавленных субъектов */
private macro _GetNewRecCount()
  var rs : RsdRecordset;
  var RecCount : integer;
  RecCount = 0;
  rs = RsdRecordset("SELECT COUNT(1) FROM dbnkdirpls_tmp WHERE t_processrecord = 1" );
  if( rs.MoveNext() )
    RecCount = rs.value(0);
  end;
  return RecCount;
end;

/* получить количество измененных субъектов */
private macro _GetCngRecCount()
  var rs : RsdRecordset;
  var RecCount : integer;
  RecCount = 0;
  rs = RsdRecordset("SELECT COUNT(1)                                                                   " +
                    "  FROM                                                                            " +
                    "  (SELECT DISTINCT t_PartyID                                                      " +
                    "     FROM                                                                         " +
                    "     (SELECT tmp.t_PartyID                                                        " +
                    "        FROM dbnkdirpls_tmp tmp                                                   " +
                    "       WHERE tmp.t_processrecord = 2                                              " +
                    "         AND tmp.t_partyid > 0                                                    " +
                    "      UNION ALL                                                                   " +
                    "      SELECT lg.t_PartyID                                                         " +
                    "        FROM dbnkdirpls_log lg                                                    " +
                    "       WHERE lg.t_type = 4                                                        " +
                    "         AND NOT EXISTS                                                           " +
                    "             (SELECT 1                                                            " +
                    "                FROM dbnkdirpls_tmp bnk                                           " +
                    "               WHERE DECODE(bnk.t_PartyID, 0, NULL, bnk.t_PartyID) = lg.t_PartyID " +
                    "                 AND bnk.t_processrecord = 1                                      " +
                    "             )                                                                    " +
                    "     )                                                                            " +
                    "  )                                                                               "
                   );
  if( rs.MoveNext() )
    RecCount = rs.value(0);
  end;
  return RecCount;
end;

/* получить количество измененных субъектов */
private macro _GetDelRecCount()
  var rs : RsdRecordset;
  var RecCount : integer;
  RecCount = 0;
  rs = RsdRecordset("SELECT COUNT(1) FROM dbnkdirpls_tmp bic WHERE bic.t_partyid > 0 AND bic.t_modification_flag IN ('D') AND NOT EXISTS(SELECT 1 FROM dparty_dbt pt WHERE pt.t_PartyID = bic.t_partyid AND pt.t_NotUpdateOnImport = 'X')" );
  if( rs.MoveNext() )
    RecCount = rs.value(0);
  end;
  return RecCount;
end;

private macro _GetAbsRecCount()
  var rs : RsdRecordset;
  var RecCount : integer;
  RecCount = 0;
  rs = RsdRecordset("SELECT COUNT(1) FROM dbnkdirpls_log bic WHERE bic.t_partyid > 0 AND bic.t_type = 3" );
  if( rs.MoveNext() )
    RecCount = rs.value(0);
  end;
  return RecCount;
end;

private macro _GetNotUpdRecCount()
  var rs : RsdRecordset;
  var RecCount : integer;
  RecCount = 0;
  rs = RsdRecordset("SELECT COUNT(1) FROM dbnkdirpls_tmp bic WHERE bic.t_partyid > 0 AND bic.t_processrecord = 0 AND EXISTS(SELECT 1 FROM dparty_dbt pt WHERE pt.t_PartyID = bic.t_partyid AND pt.t_NotUpdateOnImport = 'X')" );
  if( rs.MoveNext() )
    RecCount = rs.value(0);
  end;
  return RecCount;
end;

private macro _GetErrorCount()
  var rs : RsdRecordset;
  var RecCount : integer;
  RecCount = 0;
  rs = RsdRecordset("SELECT COUNT(1) FROM dbnkdirpls_log bic WHERE bic.t_partyid > 0 AND bic.t_type IN (1, 2)" );
  if( rs.MoveNext() )
    RecCount = rs.value(0);
  end;
  return RecCount;
end;

/* печать блока "Введены новые субъекты - участники SWIFT" */
private macro _PrintInsertedParty()
  var rs : RsdRecordset;
  var RecCount = 0;
  rs = RsdRecordset("SELECT bic.t_record_key, bic.t_partyid, pt.t_name " +
                    "  FROM dbnkdirpls_tmp bic JOIN dparty_dbt pt ON (bic.t_partyid = pt.t_partyid) " +
                    " WHERE bic.t_processrecord = 1 " +
                    " ORDER BY bic.t_record_key"
                    );
  while( rs.MoveNext() )
    if( RecCount == 0 )
[-------------------------------------------------------                           ];
[Введены новые субъекты - участники SWIFT:                                         ];
[                                                                                  ];
    end;
    RecCount = RecCount + 1;
[############ ########## #                                                         ] (rs.value(0), rs.value(1), rs.value(2));
  end;
[                                                                                  ];
end;

/* печать блока "Изменены данные субъектов экономки" */
private macro _PrintChangedParty()
  var rs : RsdRecordset;
  var RecCount = 0;
  rs = RsdRecordset("SELECT bic.t_BDPRecordKey, bnk.t_partyid, pt.t_name                               " +
                    "  FROM                                                                            " +
                    "  (SELECT DISTINCT t_PartyID                                                      " +
                    "     FROM                                                                         " +
                    "     (SELECT tmp.t_PartyID                                                        " +
                    "        FROM dbnkdirpls_tmp tmp                                                   " +
                    "       WHERE tmp.t_processrecord = 2                                              " +
                    "         AND tmp.t_partyid > 0                                                    " +
                    "      UNION ALL                                                                   " +
                    "      SELECT lg.t_PartyID                                                         " +
                    "        FROM dbnkdirpls_log lg                                                    " +
                    "       WHERE lg.t_type = 4                                                        " +
                    "         AND NOT EXISTS                                                           " +
                    "             (SELECT 1                                                            " +
                    "                FROM dbnkdirpls_tmp bnk                                           " +
                    "               WHERE DECODE(bnk.t_PartyID, 0, NULL, bnk.t_PartyID) = lg.t_PartyID " +
                    "                 AND bnk.t_processrecord = 1                                      " +
                    "             )                                                                    " +
                    "     )                                                                            " +
                    "  ) bnk JOIN dparty_dbt pt ON (pt.t_partyid = bnk.t_partyid)                      " +
                    "  JOIN dptbicdir_dbt bic ON (bic.t_partyid = bnk.t_partyid)                       " +
                    "ORDER BY bic.t_BDPRecordKey                                                       "
                    );
  while( rs.MoveNext() )
    if( RecCount == 0 )
[-------------------------------------------------------                           ];
[Изменены данные субъектов экономики:                                              ];
[                                                                                  ];
    end;
    RecCount = RecCount + 1;
[############ ########## #                                                         ] (rs.value(0), rs.value(1), rs.value(2));
  end;
[                                                                                  ];
end;

/* печать блока "Закрыто участие в SWIFT субъектов экономики" */
private macro _PrintClosedParty()
  var rs : RsdRecordset;
  var RecCount = 0;
  rs = RsdRecordset("SELECT bic.t_record_key, bic.t_partyid, pt.t_name " +
                    "  FROM dbnkdirpls_tmp bic JOIN dparty_dbt pt ON (bic.t_partyid = pt.t_partyid) " +
                    " WHERE bic.t_partyid > 0 AND bic.t_modification_flag IN ('D', 'E') AND bic.t_processrecord = 0 " +
                    "   AND NOT EXISTS(SELECT 1 FROM dparty_dbt pt WHERE pt.t_PartyID = bic.t_partyid AND pt.t_NotUpdateOnImport = 'X') " +
                    " ORDER BY bic.t_record_key"
                    );
  while( rs.MoveNext() )
    if( RecCount == 0 )
[-------------------------------------------------------                           ];
[Закрыто участие в SWIFT субъектов экономики:                                      ];
[                                                                                  ];
    end;
    RecCount = RecCount + 1;
[############ ########## #                                                         ] (rs.value(0), rs.value(1), rs.value(2));
  end;
[                                                                                  ];
end;

/* печать блока "Отсутствуют в справочнике субъекты экономики (участие в SWIFT закрыто)" */
private macro _PrintAbsentParty()
  var rs : RsdRecordset;
  var RecCount = 0;
  rs = RsdRecordset("SELECT bic.t_partyid, pt.t_name " +
                    "  FROM dbnkdirpls_log bic JOIN dparty_dbt pt ON (bic.t_partyid = pt.t_partyid) " +
                    " WHERE bic.t_partyid > 0 AND bic.t_type = 3 " +
                    " ORDER BY bic.t_partyid"
                    );
  while( rs.MoveNext() )
    if( RecCount == 0 )
[-------------------------------------------------------                           ];
[Закрыто участие из-за отсутствия в справочнике:                                   ];
[                                                                                  ];
    end;
    RecCount = RecCount + 1;
[######## #                                                                        ] (rs.value(0), rs.value(1));
  end;
[                                                                                  ];
end;

/* печать блока "Не обновлены субъекты, у которых установлен флаг "Не обновлять при импорте"" */
private macro _PrintNotUpdParty()
  var rs : RsdRecordset;
  var RecCount = 0;
  rs = RsdRecordset("SELECT bic.t_record_key, bic.t_partyid, pt.t_name " +
                    "  FROM dbnkdirpls_tmp bic JOIN dparty_dbt pt ON (bic.t_partyid = pt.t_partyid) " +
                    " WHERE bic.t_partyid > 0 AND bic.t_modification_flag IN ('A', 'M', 'U') AND bic.t_processrecord = 0 " +
                    "   AND EXISTS(SELECT 1 FROM dparty_dbt pt WHERE pt.t_PartyID = bic.t_partyid AND pt.t_NotUpdateOnImport = 'X') " +
                    " ORDER BY bic.t_record_key"
                    );
  while( rs.MoveNext() )
    if( RecCount == 0 )
[-------------------------------------------------------                           ];
[Не обновлены субъекты, у которых установлен флаг "Не обновлять при импорте":      ];
[                                                                                  ];
    end;
    RecCount = RecCount + 1;
[############ ########## #                                                         ] (rs.value(0), rs.value(1), rs.value(2));
  end;
[                                                                                  ];
end;

private macro _PrintError()
  var rs : RsdRecordset;
  var RecCount = 0;
  rs = RsdRecordset("SELECT bic.t_record_key, biclog.t_partyid, pt.t_name, biclog.t_message " +
                    "  FROM dbnkdirpls_log biclog, dbnkdirpls_tmp bic, dparty_dbt pt " +
                    " WHERE biclog.t_type IN (1,2) " +
                    "   AND biclog.t_partyid = pt.t_partyid " +
                    "   AND biclog.t_partyid = bic.t_partyid " +
                    " ORDER BY bic.t_record_key"
                    );
  while( rs.MoveNext() )
    if( RecCount == 0 )
[-------------------------------------------------------                           ];
[Ошибки:                                                                           ];
[                                                                                  ];
    end;
    RecCount = RecCount + 1;
[############ ######## #                                                           ] (rs.value(0), rs.value(1), rs.value(2));
[#                                                                                 ] (rs.value(3));
  end;
[                                                                                  ];
end;

/* Печать протокола */
private macro _PrintProtocol( StartTime : time, EndTime : time )
[Протокол выполнения процедуры импорта справочника SWIFT Bank Directory Plus       ];
[                                                                                  ];
[Дата:         ########## г.            Операционный день: ##########              ] (date:f, {curdate}:f);                
[Время:        ######## - ########                                                 ] (StartTime:f, EndTime:f);
[Пользователь: ##### #                                                             ] ({oper}, {Name_Oper});   
[                                                                                  ];
[-------------------------------------------------------                           ];
[Обобщенные результаты импорта:                                                    ];
[                                                                                  ];
[Имя импортированного файла: #                                                     ] (fullFileName:l);
[Вариант импорта:                                                                  ];
[       виды подразделений: #                                                      ] (_GetRegOfficeType());
[       виды лицензий:      #                                                      ] (_GetRegInstStatus());
[       типы участников:    #                                                      ] (_GetRegSubTypeInd());
[Всего записей в файле:                                          ######            ] (nCount:l);
[Количество обработанных записей:                                ######            ] (_GetAllRecCount():l);
[Количество обработанных записей по типам: A:###### M:###### D:##### U:######      ] (_GetRecCount("A"):l, _GetRecCount("M"):l, _GetRecCount("D"):l, _GetRecCount("U"):l);
[Созданы новые субъекты экономики:                               ######            ] (_GetNewRecCount():l);
[Изменены существующие субъекты экономики:                       ######            ] (_GetCngRecCount():l);
[Закрыто участие в SWIFT субъектов экономики:                    ######            ] (_GetDelRecCount():l);
[Закрыто участие из-за отсутствия в справочнике:                 ######            ] (_GetAbsRecCount():l);
[Субъекты, у которых установлен флаг "Не обновлять при импорте": ######            ] (_GetNotUpdRecCount():l);
[Ошибки:                                                         ######            ] (_GetErrorCount():l);
[                                                                                  ];
  _PrintInsertedParty();
  _PrintChangedParty();
  _PrintClosedParty();
  _PrintAbsentParty();
  _PrintNotUpdParty();
  _PrintError();
[------------------- КОНЕЦ ПРОТОКОЛА -------------------                           ];
end;

/* Запустить импорт */
macro RunImport(importPathName)
  var i = 0;
  var cmd : RsdCommand;
  var strFile : string;
  var strDate : string;

  SplitFile(importPathName, strFile);

  strDate = substr(strFile, strlen(strFile) - 7);
  
  cmd = RsdCommand("BEGIN RsbBicImport.ImportBnkDirPls(?, ?, ?); END;");
  cmd.addParam( "p_Oper", RSDBP_IN );
  cmd.addParam( "p_Date", RSDBP_IN );
  cmd.addParam( "p_LoadDelta", RSDBP_IN );
  cmd.value("p_Oper") = {oper};
  cmd.value("p_Date") = strDate;
  cmd.value("p_LoadDelta") = LoadDelta;
  cmd.execute();
  OnError(err);
  PrintLn( "Строка: ", err.line );
  PrintLn( err.message );
  while( i < cmd.connection.environment.ErrorCount )
    PrintLn( cmd.connection.environment.Error(i).Descr);
    i = i + 1;
  end;
  RunError();
end;

macro FillFieldsBnkDirPls()
  var cmd : RsdCommand;

  if(RecompilePackage)
    cmd = RsdCommand("ALTER PACKAGE RsbBicImport COMPILE");
    cmd.execute();
  end;

  cmd = RsdCommand("BEGIN RsbBicImport.FillFieldsBnkDirPls; END;");
  cmd.execute();
end;

private macro isdigit(symbol) : bool
  if(index(digit_abc, symbol) != 0)
    return true;
  end;
  return false;
end;

private macro isalldigit(strTest) : bool
  var retVal = true;
  var i;

  if(strlen(strTest) == 0)
    retVal = false;
  end;

  i = 1;
  while(retVal and (i <= strlen(strTest)))
    if(not isdigit(substr(strTest, i, 1)))
      retVal = false;
    end;
    i = i + 1;
  end;
  return retVal;
end;

private macro IsRightFileName(importPathName)
  var strFile : string;
  var strExt : string;
  var strDate : string;
  var IsRight = true;

  SplitFile(importPathName, strFile, strExt);

  if(IsRight and (index(strupr(strFile), "BANKDIRECTORYPLUS_V3_FULL_") == 0) and (index(strupr(strFile), "BANKDIRECTORYPLUS_V3_DELTA_") == 0))
    IsRight = false;
  end;

  if(IsRight)
    strDate = substr(strFile, strlen(strFile) - 7);
    IsRight = isalldigit(strDate);
  end;

  if(IsRight and (strlen(strDate) != 8))
    IsRight = false;
  end;

  if(IsRight and (strupr(strExt) != ".TXT"))
    IsRight = false;
  end;

  return IsRight;
end;

macro CheckFileNameDate()
  var stat = true;
  var fullOnlyFileName : string;
  var regOnlyFileName  : string;
  var regOnlyFileNameBI: string;
  var fullDateFileName : string;
  var regDateFileName  : string;
  var regDateFileNameBI: string;

  SplitFile(fullFileName , fullOnlyFileName );
  SplitFile(regFileName  , regOnlyFileName  );
  SplitFile(regFileNameBI, regOnlyFileNameBI);

  fullDateFileName  = substr(fullOnlyFileName , strlen(fullOnlyFileName ) - 7);
  regDateFileName   = substr(regOnlyFileName  , strlen(regOnlyFileName  ) - 7);
  regDateFileNameBI = substr(regOnlyFileNameBI, strlen(regOnlyFileNameBI) - 7);

  if(stat) 
    if(not IsRightFileName(fullFileName))
      msgbox("Импорт файла ", file_name, " прерван: имя выбранного файла имеет формат, не соответствующий Bank Directory Plus. Импортируйте файл с оригинальным именем.");
      stat = false;
    end;
  end;

  if(stat)
    if(regFileName != "")
      if(not IsRightFileName(regFileName))
        msgbox("Импорт файла ", file_name, " прерван: имя файла, содержащееся в значении настройки реестра \"CB\\PARTY\\SWIFT\\ИМПОРТИРОВАН BDPLUS ФАЙЛ\", имеет формат, не соответствующий Bank Directory Plus. Исправте значение настройки.");
        stat = false;
      end;
    end;
  end;

  if(stat)
    if(regFileName == "")
      if(index(strupr(fullOnlyFileName), "DELTA") != 0)
        msgbox("Импорт файла ", file_name, " прерван: делается попытка импортировать файл DELTA, но нет данных о предварительном импорте файла FULL. Импортируйте файл FULL.");
        stat = false;
      end;
    end;
  end;

  if(stat)
    if(index(strupr(fullOnlyFileName), "DELTA") != 0)
      if(isalldigit(regDateFileNameBI) and ((isalldigit(regDateFileName) and (regDateFileName < regDateFileNameBI)) or (not isalldigit(regDateFileName))))
        msgbox("Импорт файла ", file_name, " прерван: делается попытка импортировать файл DELTA, но предварительно был импортирован справочник BICPlusIBAN Directory. Импортируйте файл FULL справочника Bank Directory Plus.");
        stat = false;
      end;
    end;
  end;

  if(stat)
    if(index(strupr(fullOnlyFileName), "DELTA") != 0)
      if(isalldigit(regDateFileName) and isalldigit(fullDateFileName) and (fullDateFileName < regDateFileName))
        msgbox("Импорт файла ", file_name, " прерван: дата активации выбранного файла DELTA меньше даты ранее уже импортированного файла.");
        stat = false;
      end;
    end;
  end;

  if(stat)
    if(fullOnlyFileName == regOnlyFileName)
      msgbox("Импорт файла ", file_name, " прерван: файл уже импортирован");
      stat = false;
    end;
  end;

  return stat;
end;

macro Main()
  var stat : bool;
  var StartTime : time;
  var EndTime   : time;

  fullFileName = "";
  regFileName  = "";
  LoadDelta  = 0;

  GetRegistryValue( "CB\\PARTY\\SWIFT\\ИМПОРТИРОВАН BI ФАЙЛ", V_STRING, regFileNameBI, stat );

  GetRegistryValue( "CB\\PARTY\\SWIFT\\ИМПОРТИРОВАН BDPLUS ФАЙЛ", V_STRING, regFileName, stat );
  if(regFileName != "")

    file_path = SplitFile(regFileName, file_name, file_ext);
    if(file_path != "")
      file_path = file_path + "\\" + "*.txt";
    else
      file_path = "*.txt";
    end;
  else
    file_path = "*.txt";
  end;

  /* Выбираем текстовый файл с данными для импорта */
  stat = SelectFile( fullFileName, file_path, "Выбор файла импорта" );

  StartTime = time;

  if(stat)
    SplitFile(fullFileName, file_name, file_ext);
    file_name = file_name + file_ext;

    stat = CheckFileNameDate();
  end;
  
  if(stat)
    stat = Open( FileBnkDirPls, fullFileName );

    if(not stat)
      msgbox("Импорт файла ", file_name, " прерван: ошибка открытия файла импорта.");
    end;
  end;

  if(stat)
    //TAM 19.03.2015 - отключаем MDM триггеры
    ManipulateMDMTRiggers(0);
    
    if(index(strupr(file_name), "DELTA") > 0)
      LoadDelta = 1;
    end;

    ImportStringArray = TArray;
  
    ClearTempTable();
  
    nCount = 0;
    InitProgress(-1, " ~Ctrl-Brk~ Прервать", "Обработка файла импорта");
  
    next(FileBnkDirPls);
    next(FileBnkDirPls);
  
    while( stat )
      nCount = nCount + 1;
  
      AddToTempTable(FileBnkDirPls.str);
      stat = InsertIntoTempTable();
      UseProgress( nCount );
      if(stat)
        stat = next(FileBnkDirPls);
      end;
/*  
      if(nCount == 2000) stat = false; end;
*/  
    end;
    RemProgress();
    stat = InsertIntoTempTable( true );
  end;

  /* если произошла ошибка или пользователь отказался от выбора, выходим без сообщений */
  if( not stat ) 
    exit(1); 
  end;

  FillFieldsBnkDirPls();

  /* запуск процедуры импорта */
  RunImport(fullFileName);

  SetDefaultRegistryValue( "CB\\PARTY\\SWIFT\\ИМПОРТИРОВАН BDPLUS ФАЙЛ", fullFileName);

  EndTime = time;
  //TAM 19.03.2015 - включаем MDM триггеры
  ManipulateMDMTRiggers(1);
  
  _PrintProtocol( StartTime, EndTime );
end;

Main();
