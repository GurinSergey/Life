//-----------------------------------------------------------------------------
// Блок     : 29010 - "Обработка в БО"
// Шаг      : 20    - "Ожидание реакции бэк-офиса"
// Описание : Макрос шага
//-----------------------------------------------------------------------------
import PaymInter, cbsttls, pm_setst, OprInter, lnpaym;
import oralib; //Jushmanov 2014-02-21 C-19151

var PaymentObj:RsbPayment;

//-----------------------------------------------------------------------------
// Выполнение шаг
//-----------------------------------------------------------------------------
MACRO ExecuteCaseStep(Kind_Operation, Number_Step, paymDoc, KindDoc)

    if( PaymentObj.ToBackOffice == "В" )
        PaymentObj.ReplicationSession = 0;
    end;

    // Установить статус платежа
    if( PaymentObj.PaymStatus == PM_FINISHED )
        if( УстановитьСтатусыПлатежа( OPR_PAYM_STATE, OPR_PM_ST_CLOSE ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;

        // Установить статус первички "Закрыт"
        PM_SetPrimDocumentState( PaymentObj, DOCUMENT_ST_CLOSED );

        return ""; // Завершить выполнение блока

    elif( PaymentObj.PaymStatus == PM_REJECTED )
        if( УстановитьСтатусыПлатежа( OPR_PAYM_STATE, OPR_PM_ST_REJECT_BO, OPR_PAYM_DO, OPR_PM_ST_RETURN ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;

        return ""; // Завершить выполнение блока

    elif( PaymentObj.PaymStatus == PM_READIED )
        if( PaymentObj.PrimDocKind == WL_INDOC )
            PaymentObj.PaymStatus = PM_KVITPROCESSING;
        end;
        return "30";

    else
        msgbox("Не закончена обработка документа в бэк-офисе");
        return "";
    end;

    return "";
END;


MACRO CheckStepAction( mes )
  
    if( mes == OP_BACKOUT_STEP )
        if( PaymentObj.ReplicationSession != 0 )
            msgbox("Невозможно откатить шаг операции,|т.к. платеж обрабатывается в ПС " + LnFindType(PaymentObj.ReplicationBO) );
            return 1;
        end;
    end;

    return 0;
END;


//Jushmanov 2014-02-21 C-19151
macro PostStepAction( message,      /* 1 - выполнение шага; 2 - откат шага;   */
                      errTrn,       /* статус выполнения шага. 0 - ошибки нет */
                      FirstDoc,     /* указатель на первичный документ        */
                      ID_Oper,      /* внутренний идентификатор операции      */
                      Number_Step,  /* Номер шага операции (из настроек)      */
                      KindOper,     /* номер вида операции                    */
                      KindDoc,      /* номер вида первичного документа        */
                      KindStep,     /* вид шага операции                      */
                      ID_Step )     /* внутренний идентификатор шага операции */
    private var logquery;

    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(ID_Oper) != V_INTEGER) and (valtype(ID_Oper) != V_STRING)) ID_Oper = 0; end;
        if ((valtype(ID_Step) != V_INTEGER) and (valtype(id_Step) != V_STRING)) ID_Step = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + ID_Oper + " AND t_id_step = " + ID_Step;
        ExecSQL(logquery, null, false);
    end;

    return 0;
end;