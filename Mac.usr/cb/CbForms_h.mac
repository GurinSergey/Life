/*******************************************************************************
 DESCRIPTION  :   Базовые классы для форм и скроллингов
 PROGRAMMED BY:   Леонов И. Е.
 CREATION DATE:   05.10.06
*******************************************************************************/
import rsd;

private CONST KEY_ENTER = 13, KEY_F2 = 316, KEY_F3 = 317, KEY_ALTF3 = 362, KEY_CTRLF3 = 352, KEY_SPACE = 32, EXITFIELD = 530;

private CONST DLG_CHANGEVALUE = -1;
/*Панель ввода данных
  Параметры конструктора:
     ResFile - имя файла ресурсов (lbr)
     Name    - название ресурса (тип ресурса должен быть "панель")
*/
CLASS DL_CPanel( ResFile:STRING, Name:STRING )
  PRIVATE VAR m_Panel = TRecHandler( Name, ResFile, TRUE ),
              m_RunKey:INTEGER, 
              m_CurrentNumberInPanel:INTEGER, m_CurrentFieldGroup:INTEGER;

  PRIVATE VAR m_Groups = TArray();

  CLASS CField( Group:INTEGER, Id:INTEGER, NumberInPanel:INTEGER, Proc:ProcRef, DefaultValue:VARIANT, X:INTEGER, Y:INTEGER )
     VAR m_Id            = Id,
         m_Group         = Group,
         m_NumberInPanel = NumberInPanel,
         m_Proc          = Proc, 
         m_X             = X, 
         m_Y             = Y,
         m_SaveShowValue = null,
         m_SaveRealValue = null,
         m_RealValue     = DefaultValue;
  END;

  /*******************************************************************************
   Методы, которые необходимо переопределять в производных классах
   *******************************************************************************/
  PRIVATE MACRO Init()
  END;

  PRIVATE MACRO Check():BOOL
     return true;
  END;
  /*******************************************************************************/

  MACRO AddFieldProc( Group:INTEGER, NumberInPanel:INTEGER, FieldName:INTEGER, Proc:ProcRef, DefaultValue:VARIANT, X:INTEGER, Y:INTEGER )
     if( m_Groups[Group] == null ) 
        m_Groups[Group] = TArray();
     end;
     if( m_Groups[Group][NumberInPanel] == null )
        m_Groups[Group][NumberInPanel] = CField( Group, FieldName, NumberInPanel, Proc, DefaultValue, X, Y );
     end;
  END;

  PRIVATE MACRO GetField( NumberInPanel:INTEGER ):CField
     VAR i = 0;

     while( i < m_Groups.Size )
        if( m_Groups[i][NumberInPanel] != null )
           return m_Groups[i][NumberInPanel];
        end;
        i = i + 1;
     end;
     return null;
  END;

  MACRO GetFieldByName( Group:INTEGER, FieldName:INTEGER ):CField
     VAR j = 0;

     if( Group == NULL ) 
        Group = m_CurrentFieldGroup;
     end;

     if( m_Groups[Group] != null )
        while( j < m_Groups[Group].Size )
           if( (m_Groups[Group][j] != null) AND (m_Groups[Group][j].m_Id == FieldName) )
              return m_Groups[Group][j];
           end;
           j = j + 1
        end;
     end;
     return null;
  END;

  PRIVATE MACRO SendMessageFld( NumberInPanel:INTEGER, Cmd:INTEGER, Key:INTEGER ):INTEGER
     VAR i = 0, j = 0, refFld, ProcRetVal = CM_DEFAULT;

     if( (NumberInPanel == null) OR (NumberInPanel < 0) ) /*послать сообщение всем полям*/
        while( i < FldNumber(m_Panel) )

           refFld = GetField( i );
           if( refFld != null )
              m_CurrentFieldGroup = refFld.m_Group;
              SendMessageFld( i, Cmd, Key );
           end;
           i = i + 1;
        end;
     else /*послать сообщение конкретному полю*/
        refFld = GetField( NumberInPanel );
        if( refFld != null )
           ProcRetVal = ExecMacro2( refFld.m_Proc, this, Cmd, Key, @(m_Panel.Item(NumberInPanel)), @(refFld.m_RealValue) );

           if( (ProcRetVal != CM_IGNORE) AND
               ( (Cmd == DLG_INIT ) OR 
                 (refFld.m_SaveShowValue != m_Panel.Item(NumberInPanel) ) OR
                 (refFld.m_SaveRealValue != refFld.m_RealValue)
               )
             )
              ProcRetVal = ExecMacro2( refFld.m_Proc, this, DLG_CHANGEVALUE, Key, @(m_Panel.Item(NumberInPanel)), @(refFld.m_RealValue) );
              if( ProcRetVal != CM_IGNORE )
                 refFld.m_SaveShowValue = m_Panel.Item(NumberInPanel);
                 refFld.m_SaveRealValue = refFld.m_RealValue;
              end;
           end;

           if( (ProcRetVal == CM_IGNORE) and
              (refFld.m_SaveShowValue != null))
              m_Panel.Item(NumberInPanel) = refFld.m_SaveShowValue;
              refFld.m_RealValue          = refFld.m_SaveRealValue;
           end;
        end;
     end;
     return ProcRetVal;
  END;

  MACRO CurrentFldX()
     VAR refFld = GetField( m_CurrentNumberInPanel );
     if( refFld != null )
        return refFld.m_X;
     end;
     return null;
  END;

  MACRO CurrentFldY()
     VAR refFld = GetField( m_CurrentNumberInPanel );
     if( refFld != null )
        return refFld.m_Y;
     end;
     return null;
  END;

  /*Получить значение из поля формы
    NumberInPanel:INTEGER - номер поля в ресурсе (lbr)
    ShowValue:@VARIANT    - значение, отображаемое на экране
    RealValue:@VARIANT    - идентификатор значения поля 
  */
  MACRO GetFieldValue( NumberInPanel:INTEGER, ShowValue:@VARIANT, RealValue:@VARIANT )
     VAR refFld = GetField(NumberInPanel);

     ShowValue = m_Panel.Item(NumberInPanel);
     if( refFld != null )
        RealValue = refFld.m_RealValue;
     else
        RealValue = null;
     end;
     return RealValue;
  END;

  MACRO SetLinkedValue( FieldName:INTEGER, RealValue:VARIANT ):INTEGER
     VAR refFld = GetFieldByName( m_CurrentFieldGroup, FieldName );

     if( (refFld != null) AND (refFld.m_RealValue != RealValue) )
        refFld.m_RealValue = RealValue;
        return SendMessageFld( refFld.m_NumberInPanel, DLG_INIT, refFld.m_RealValue );
     end;
     return CM_IGNORE;
  END;

  MACRO GetLinkedValue( FieldName:INTEGER, ShowValue:@VARIANT, RealValue:@VARIANT )
     VAR refFld = GetFieldByName( m_CurrentFieldGroup, FieldName );
     if( refFld != null )
        return GetFieldValue( refFld.m_NumberInPanel, @ShowValue, @RealValue );
     end;
     return null;
  END;

  MACRO ExistField( FieldName:INTEGER ):BOOL
     return (GetFieldByName( m_CurrentFieldGroup, FieldName ) != NULL);
  END;

  MACRO KeyProc( Pan:Variant, Cmd:INTEGER, FldId:INTEGER, Key:INTEGER )
     VAR RetKey = CM_DEFAULT, refFld;

     PRIVATE MACRO GetFld( FldId )
        refFld = GetField( FldId );
        if( refFld != NULL )
           m_CurrentNumberInPanel = FldId;
           m_CurrentFieldGroup    = refFld.m_Group;
        end;
     END;

     if( Cmd == DLG_INIT )
        GetFld( FldId );
        Init();
        RetKey = SendMessageFld( null, Cmd, Key );
        UpdateFields( Pan );

     elif( (Cmd == DLG_KEY) OR (Key == EXITFIELD) )
        GetFld( FldId );
        RetKey = SendMessageFld( FldId, Cmd, Key );

        if( (RetKey != CM_IGNORE) AND (Key == m_RunKey) )
           RetKey = CM_SAVE;
        end;
        UpdateFields( Pan );
     elif( cmd == DLG_SAVE )
        GetFld( FldId );
        if( Check() == false )
           RetKey = CM_CANCEL;
        end;
     elif( cmd == DLG_SETFOCUS )
        GetFld( FldId );
        if( refFld != NULL )
           refFld.m_SaveShowValue = m_Panel.Item( FldId );
           refFld.m_SaveRealValue = refFld.m_RealValue;
        end;
     end;

     return RetKey;
  END;

  /*Показать панель на экране.
    Параметры:
      RunKey - кнопка запуска панели на выполнение. По умолчанию - F2
    Возвращаемое значение:
      true - запустили панель на выполнение (нажали RunKey), false - отказались от выполнения панели (Esc)
  */
  MACRO Run( RunKey:INTEGER ):BOOL
     if( RunKey == null )
        m_RunKey = KEY_F2;
     else
        m_RunKey = RunKey;
     end;

     return RunDialog( m_Panel, R2M( this, "KeyProc") );
  END;

  /*Получить данные панели. Названия полей - поле "Имя" в ресурсе*/
  MACRO Data():TRecHandler
     return m_Panel;
  END;
END;

/* Список строк. 
   Пример вызова:
      DL_ListString( "Список значений", 10, 20, @ShowValue, @RealValue, "1", 1, "2", 3, "3", 3 );
*/
MACRO DL_ListString( Header:STRING, x:INTEGER, y:INTEGER, ShowValue:@STRING, RealValue:@VARIANT /*...*/)

  var MenuValues   = TArray,
      ReturnValues = TArray,
      i, Choice, ParmShow, ParmValue;

  i = 5;
  while( GetParm(i, ParmShow) AND GetParm(i+1, ParmValue) )              
     MenuValues[MenuValues.Size]     = ParmShow; 
     ReturnValues[ReturnValues.Size] = ParmValue;
     i = i + 2;
  end;   

  Choice = menu( MenuValues, null, Header, x, y );
  if( Choice >= 0 )
     ShowValue = MenuValues[Choice]; 
     RealValue = ReturnValues[Choice];
     return RealValue;
  end;
  return null;
END;

/* Пример вызова :
   DL_ComboBox( "select t_szNameAlg, t_iNumberAlg from dnamealg_dbt where t_itypealg = " + string(AlgName),
                "t_szNameAlg", "t_iNumberAlg", @ShowValue, @RealValue, 10, 20
              );*/
MACRO DL_ComboBox( Select:STRING, ShowField:STRING, ReturnField:STRING, ShowValue:@STRING, RealValue:@VARIANT, X:INTEGER, Y:INTEGER )

  var rs = RsdRecordset( Select ),
      MenuValues   = TArray,
      ReturnValues = TArray,
      Choice;

  while( rs.moveNext() )
     MenuValues[MenuValues.Size]     = rs.Value(ShowField);
     ReturnValues[ReturnValues.Size] = rs.Value(ReturnField);
  end;

  Choice = menu( MenuValues, null, null, X, Y );
  if( Choice >= 0 )
     ShowValue = MenuValues[Choice]; 
     RealValue = ReturnValues[Choice];
     return RealValue;
  end;
  return null;
END;

/* Пример вызова:
   DL_Scroll("select t_szNameAlg, t_iNumberAlg from dnamealg_dbt where t_itypealg = 2263",
             "Список значений", 10, 20, "t_szNameAlg", "Имя"
            );*/
MACRO DL_Scroll( Select:STRING, Header:STRING, X:INTEGER, Y:INTEGER /*...*/):RsdRecordset

  var rs     = RsdRecordset( Select, null, RSDVAL_STATIC ),
      Column = TArray(),
      i, ColumnValue, ColumnName, NumColumns = 0;

  macro EvProc( rs, cmd, id, key )
    if( (cmd == DLG_KEY) and (key == KEY_ENTER) )
       return CM_SELECT;
    end;
    return CM_DEFAULT;
  end;
  
  /* атрибуты полей */
  macro AddColumn( ar,ind, fld, head )
     ar.value( ind * 6 + 0 ) = fld;  // fieldName
     ar.value( ind * 6 + 1 ) = head; // header 
     ar.value( ind * 6 + 2 ) = null; // width
     ar.value( ind * 6 + 3 ) = 2;    // fldType (2 = FBT)
     ar.value( ind * 6 + 4 ) = null; // decPoint
     ar.value( ind * 6 + 5 ) = 0;    // reserv
     NumColumns = NumColumns + 1;
  end;
 
  i = 4;
  while( GetParm(i, ColumnValue ) AND GetParm(i+1, ColumnName) )              
     AddColumn( Column, NumColumns, ColumnValue, ColumnName );
     i = i + 2;
  end;   

  if( rs.moveNext() )
    if( RunScroll( rs, NumColumns, Column, null, @EvProc, Header, "Esc Выход F4 Поиск Enter Выбор", true, X, Y, null, 25 ) )
       return rs;
    end;
  end;

  return null;
END;
