/*
    ПЗО

    Оплата клиентскими требованиями на шаге
                27.07.2001, Fr
*/

import  sfcommon, sfpaym,
        BankInter/*PSPO_OR_..., PSPO_ST_...*/,
        OprInter/*PS_PAYORDER*/,
        PaymInter/*PM_PREPARING*/,
        Календарь;

private macro SfPayDocGetRefNumber( RefNumber:@string )

  var RefID;
  if( GetReferenceIDByType( OBJTYPE_PSPAYORD, /*Рублевый платежный документ*/
                            REFOBJ_SVORDER,   /*ObjectType = 500; номер требования банка к клиентам (РКО)*/
                            RefID ) != 0 )
    MsgBox( "Ошибка при генерации номера требования" );
    return 1;
  end;
    
  if( GenerateReference( RefID, RefNumber ) != 0 )
    MsgBox( "Ошибка при генерации номера требования" );
    return 1;
  end;

  return 0;
end;

/*
        ----------------- Оплата требованием ------------------------------
*/
macro SfFormClientOrderExt( sidebet, sicredit, sfcomiss, payParams:TSfPayParams, sfinvlnk, SumInInvFIID, 
                            IsBatchMode, oprchild )

  var Payment : RsbPayment;
  var ClnPaym : object; /*RsbPSPayOrder*/;

  var PmAmount = payParams.paySum;
  if( (SumInInvFIID != null) AND (sidebet.rec.FIID != payParams.payFIID) )
    PmAmount = SumInInvFIID;
  end;

  if( payParams.paySum != 0 )
    
    ClnPaym = GenObject( "RsbPSPayOrder", 0 );
    
    Payment = ClnPaym.Payment;

    ClnPaym.Origin  = PSPO_OR_SF;
    ClnPaym.Oper    = {oper}; 
    ClnPaym.CurrentState = 0 /*PSPO_ST_DEFERRED*/;
    ClnPaym.DocKind = PSPOKIND_DEMAND;

    if(( sidebet.rec.NoAccept == null ) or ( sidebet.rec.NoAccept == "X" ))
      ClnPaym.AcceptTerm = PSPAYDEM_TERM_WITHOUTACCEPT;
      ClnPaym.Accept     = PSPAYDEM_ST_ACCEPT;
    else
      ClnPaym.AcceptTerm = PSPAYDEM_TERM_ACCEPT;
      ClnPaym.Accept     = PSPAYDEM_ST_WAIT;
    end;
    
    ClnPaym.LaunchOper = true;
    ClnPaym.ReqSum       = payParams.paySum + payParams.taxSum;
    if( ClnPaym.AcceptTerm == PSPAYDEM_TERM_ACCEPT )
      ClnPaym.AcceptPeriod = 5;
      ClnPaym.AcceptDate   = GetDateAfterWorkDays( {curdate}, ClnPaym.AcceptPeriod );
    end;
    Payment.ShifrOper    = "02";

    /* EVG */
    Payment.NumberPack = 1;

    /* EVG */
    if( payParams.ground == "" )
      Payment.Ground = "Комиссия за обслуживание";
    else
      Payment.Ground = payParams.ground;
    end;

    if( SfFillPaymentExt( Payment, sidebet, sicredit, sfcomiss, payParams, PmAmount )) 
      return 1; 
    end;
    
    Payment.DocKind   = PS_PAYORDER;
    Payment.Purpose   = PM_PURP_POPRIMARY;

    /* EVG Перенёс выше
    if( payParams.ground == "" )
      Payment.Ground = "Комиссия за обслуживание";
    else
      Payment.Ground = payParams.ground;
    end;*/
    
    if( SfPayDocGetRefNumber(@Payment.Number) != 0 )
      return 1;
    end;

    if( sfinvlnk != null )
      Payment.LinkSfInvoice( sfinvlnk.rec.InvoiceID, sfinvlnk.rec.PayAmount, sfinvlnk.rec.PaidNDS, sfinvlnk.rec.PayFIID );
    end;

    Payment.FeeType = payParams.feeType;
    if( payParams.objectID != null )
      Payment.DefComID = payParams.objectID;
    end;

    if( (sidebet.rec.NoAccept != "X" ) AND (payParams.PreAcptID > 0))
      ClnPaym.PreAcptID = payParams.PreAcptID;
    end;
      
    if( SfPayDocConnectToOperation(ClnPaym, IsBatchMode, oprchild) != 0 )
        return 1;
    end;

  end;

  return 0;
end;

macro SfFormClientOrder( sidebet, sicredit, sfcomiss, payDate, ground, paySum, taxSum, payFIID, sfinvlnk, 
                         PlusCalc_Account, PlusCalcNDS_Account, feeType, DefComID, SumInInvFIID, NoAccept, 
                         IsBatchMode, ID_Operation, ID_Step, ChildDocKind:@integer, ChildDocID:@string )
  var payParams = TSfPayParams;
  
  payParams.payDate = payDate;
  payParams.ground = ground; 
  payParams.paySum = paySum; 
  payParams.taxSum = taxSum;
  payParams.payFIID = payFIID;
  
  payParams.feeType = feeType;
  payParams.objectID = DefComID;

  payParams.PlusCalc_Account = PlusCalc_Account;
  payParams.PlusCalcNDS_Account = PlusCalcNDS_Account;
    
  return SfFormClientOrderExt( sidebet, sicredit, sfcomiss, payParams, sfinvlnk, SumInInvFIID,
                               IsBatchMode, ID_Operation, ID_Step, @ChildDocKind, @ChildDocID );

end;


/*
        ----------------- Оплата платежом ------------------------------
*/
macro SfFormClientPaymExt( sidebet, sicredit, sfcomiss, payParams, sfinvlnk, SumInInvFIID,
                        IsBatchMode, oprchild )

  var Payment : RsbPayment;
  var ClnPaym : object; /*RsbPSPayOrder*/;

  var PmAmount = payParams.paySum;
  if( (SumInInvFIID != null) AND (sidebet.rec.FIID != payParams.payFIID) )
    PmAmount = SumInInvFIID;
  end;

  if( payParams.paySum != 0 )

    /* все проверки плат. и получ. в sfpay.mac.
    if( sidebet.Rec.BankID != {OurBank} )
      MsgBox("При оплате ПЗО требованием банка|плательщик должен быть в нашем банке");
      return 1;
    end;
    */

    if( (payParams.payFIID == NATCUR) AND (sidebet.rec.FIID == NATCUR) AND (sicredit.rec.FIID == NATCUR) )
      ClnPaym = GenObject( "RsbPSPayOrder", 0 );    

      ClnPaym.Origin  = PSPO_OR_SF;
      ClnPaym.Oper    = {oper}; 
      ClnPaym.CurrentState  = 0 /*CP_ST_DEFERRED*/;
      ClnPaym.DocKind = PSPOKIND_ORDER;
      ClnPaym.LaunchOper = true;    

      Payment = ClnPaym.Payment;      
      
      Payment.PayerFIID = sidebet.rec.FIID; 
      Payment.DocKind   = PS_PAYORDER;
      Payment.Purpose   = PM_PURP_POPRIMARY;

      /* EVG */
      if( payParams.ground == "" )
        Payment.Ground = "Комиссия за обслуживание";
      else
        Payment.Ground = payParams.ground;
      end;

      if( SfFillPaymentExt( Payment, sidebet, sicredit, sfcomiss, payParams, PmAmount )) 
        return 1; 
      end;
            
    else
      ClnPaym = GenObject( "RsbPsCpOrder", 0 );

      ClnPaym.Origin  = PSPO_OR_SF;
      ClnPaym.Oper    = {oper}; 
      ClnPaym.CurrentState  = 0 /*CP_ST_DEFERRED*/;
      /*ClnPaym.DocKind = PSPOKIND_ORDER;PS_CPORDER*/
      ClnPaym.LaunchOper = true;    

      Payment = ClnPaym.Payment;      
      
      Payment.PayerFIID = sidebet.rec.FIID; 
      Payment.DocKind   = PS_CPORDER;
      Payment.Purpose   = PM_PURP_POPRIMARY;

      /* EVG */
      if( payParams.ground == "" )
        Payment.Ground = "Комиссия за обслуживание";
      else
        Payment.Ground = payParams.ground;
      end;

      if( SfFillPaymentExt( Payment, sidebet, sicredit, sfcomiss, payParams, PmAmount )) 
        return 1; 
      end;
    end;    

    /* EVG */
    Payment.NumberPack = 1;

    /* EVG Перенёс выше
    if( payParams.ground == "" )
      Payment.Ground = "Комиссия за обслуживание";
    else
      Payment.Ground = payParams.ground;
    end;*/

    if( SfPayDocGetRefNumber(@Payment.Number) != 0 )
      return 1;
    end;

    if( sfinvlnk != null )
      Payment.LinkSfInvoice( sfinvlnk.rec.InvoiceID, sfinvlnk.rec.PayAmount, sfinvlnk.rec.PaidNDS, sfinvlnk.rec.PayFIID );
    end;

    Payment.FeeType = payParams.feeType;
    if( payParams.objectID != null )
      Payment.DefComID = payParams.objectID;
    end;

    if( SfPayDocConnectToOperation(ClnPaym, IsBatchMode, oprchild) != 0 )
      return 1;
    end;

  end;

  return 0;

end;


macro SfFormClientPaym( sidebet, sicredit, sfcomiss, PayDate, ground, paySum, taxSum, payFIID, sfinvlnk, 
                        PlusCalc_Account, PlusCalcNDS_Account, feeType, DefComID, SumInInvFIID,
                        IsBatchMode, ID_Operation, ID_Step, ChildDocKind:@integer, ChildDocID:@string )

  var payParams = TSfPayParams;
  
  payParams.payDate = payDate;
  payParams.ground = ground; 
  payParams.paySum = paySum; 
  payParams.taxSum = taxSum;
  payParams.payFIID = payFIID;
  
  payParams.feeType = feeType;
  payParams.objectID = DefComID;

  payParams.PlusCalc_Account = PlusCalc_Account;
  payParams.PlusCalcNDS_Account = PlusCalcNDS_Account;

  return SfFormClientPaym( sidebet, sicredit, sfcomiss, payParams, sfinvlnk, SumInInvFIID,
                           IsBatchMode, ID_Operation, ID_Step, @ChildDocKind, @ChildDocID );
end;
