/*
 * Макрос скроллинга договоров обслуживания
 *
   Changes:
   26.03.2014 joy R-338686 Проверка периодических комиссий на ДО по  СКС
   RR 04.12.2015 Добавлена возможность удалять индивидуальные настройки комиссий
 */
import sfacrpay, CTinter;

record DO(sfcontr);
record Old_DO(sfcontr);

PRIVATE MACRO GetIndComRS(SFContrID)
 var cmd, rs;
  cmd = RSDCommand(" SELECT   * " +
                   "   FROM   dsfconcom_dbt com " +
                   "  WHERE   COM.T_OBJECTTYPE = 659 AND COM.T_OBJECTID = :1 " +
                   "          AND COM.T_SFPLANID = " +
                   "                (SELECT   PL.T_SFPLANID " +
                   "                   FROM   dsfcontrplan_dbt pl " +
                   "                  WHERE   PL.T_SFCONTRID = COM.T_OBJECTID " +
                   "                          AND PL.T_BEGIN = " +
                   "                                (SELECT   MAX (t_begin) " +
                   "                                   FROM   dsfcontrplan_dbt pl " +
                   "                                  WHERE   PL.T_SFCONTRID = COM.T_OBJECTID)) " +
                   "          AND COM.T_ISINDIVIDUAL = CHR (88) " +
                   "          AND COM.T_DATEBEGIN >= (SELECT   MAX (t_begin) " +
                   "                                    FROM   dsfcontrplan_dbt pl " +
                   "                                   WHERE   PL.T_SFCONTRID = COM.T_OBJECTID)");
  cmd.AddParam("1", RSDBP_IN, SFContrID);
  rs = RSDRecordSet(cmd);
  return rs;
END;

PRIVATE MACRO GetComName(Number, FeeType)
 var cmd, rs;
  cmd = RSDCommand(" SELECT   SUBSTR ( (t_code || ' - ' || t_name), 1, 50) name " +
                   "   FROM   dsfcomiss_dbt " +
                   "  WHERE   t_number = :1 AND t_feetype = :2");
  cmd.AddParam("1", RSDBP_IN, Number);
  cmd.AddParam("2", RSDBP_IN, FeeType);
  rs = RSDRecordSet(cmd);
  
  if (rs.movenext())
    return rs.value("name");
  else
    return "Имя комиссии не найдено";
  end;
END;

PRIVATE MACRO GetComTarSCLID(concomid)
 var cmd, rs;
  cmd = RSDCommand(" SELECT   TAR.T_TARSCLID " +
                   "   FROM   dsfcomtarscl_dbt tar " +
                   "  WHERE   tar.t_level NOT IN (3, 4) AND TAR.T_CONCOMID = :1 ");
  cmd.AddParam("1", RSDBP_IN, concomid);
  rs = RSDRecordSet(cmd);
  
  if (rs.movenext())
    return rs.value("T_TARSCLID");
  else
    return -1;
  end;
END;

PRIVATE MACRO SetComGeneral(concomid)
 var cmd, rs, cmd1;
  cmd = RSDCommand(" SELECT   * " +
                   "   FROM   dsfconcom_dbt com " +
                   "  WHERE   COM.T_OBJECTTYPE = 57 " +
                   "          AND COM.T_OBJECTID = " +
                   "                (SELECT   PL.T_SFPLANID " +
                   "                   FROM   dsfcontrplan_dbt pl " +
                   "                  WHERE   PL.T_SFCONTRID = (SELECT   t_objectid " +
                   "                                              FROM   dsfconcom_dbt " +
                   "                                             WHERE   t_id = :1) " +
                   "                          AND PL.T_BEGIN = " +
                   "                                (SELECT   MAX (t_begin) " +
                   "                                   FROM   dsfcontrplan_dbt pl " +
                   "                                  WHERE   PL.T_SFCONTRID = " +
                   "                                             (SELECT   t_objectid " +
                   "                                                FROM   dsfconcom_dbt " +
                   "                                               WHERE   t_id = :2))) " +
                   "          AND (COM.T_COMMNUMBER, COM.T_FEETYPE) = " +
                   "                (SELECT   t_commnumber, t_feetype " +
                   "                   FROM   dsfconcom_dbt " +
                   "                  WHERE   t_id = :3) ");
  cmd.AddParam("1", RSDBP_IN, concomid);
  cmd.AddParam("2", RSDBP_IN, concomid);
  cmd.AddParam("3", RSDBP_IN, concomid);
  rs = RSDRecordSet(cmd);
  rs.movenext();
  debugbreak;
  cmd1 = RSDCommand(" UPDATE   dsfconcom_dbt com " +
                    "    SET   COM.T_STATUS = :1, " +
                    "          COM.T_CALCPERIODTYPE = :2, " +
                    "          COM.T_CALCPERIODNUM = :3, " +
                    "          COM.T_DATE = :4, " +
                    "          COM.T_GETSUMMIN = :5, " +
                    "          COM.T_SUMMIN = :6, " +
                    "          COM.T_SUMMAX = :7, " +
                    "          COM.T_DATEEND = :8, " +
                    "          COM.T_ISFREEPERIOD = :9, " +
                    "          COM.T_ISINDIVIDUAL = CHR(0) " +
                    "  WHERE   COM.T_ID = :10 ");
  cmd1.AddParam("1",  RSDBP_IN, rs.value("T_STATUS"));
  cmd1.AddParam("2",  RSDBP_IN, rs.value("T_CALCPERIODTYPE"));
  cmd1.AddParam("3",  RSDBP_IN, rs.value("T_CALCPERIODNUM"));
  cmd1.AddParam("4",  RSDBP_IN, rs.value("T_DATE"));
  cmd1.AddParam("5",  RSDBP_IN, rs.value("T_GETSUMMIN"));
  cmd1.AddParam("6",  RSDBP_IN, rs.value("T_SUMMIN"));
  cmd1.AddParam("7",  RSDBP_IN, rs.value("T_SUMMAX"));
  cmd1.AddParam("8",  RSDBP_IN, rs.value("T_DATEEND"));
  cmd1.AddParam("9", RSDBP_IN, rs.value("T_ISFREEPERIOD"));
  cmd1.AddParam("10", RSDBP_IN, concomid);
  cmd1.execute();
END;

PRIVATE MACRO GetSCLID(tarsclid)
 var cmd, rs;
  cmd = RSDCommand(" SELECT   SCL.T_ID " +
                   "   FROM   dsftarscl_dbt scl  " +
                   "  WHERE   SCL.T_ID = :1 ");
  cmd.AddParam("1", RSDBP_IN, tarsclid);
  rs = RSDRecordSet(cmd);
  return rs;
END;

PRIVATE MACRO GetTARID(sclid)
 var cmd, rs;
  cmd = RSDCommand(" SELECT   TAR.T_ID " +
                   "   FROM   dsftarif_dbt tar " +
                   "  WHERE   TAR.T_TARSCLID = :1 ");
  cmd.AddParam("1", RSDBP_IN, sclid);
  rs = RSDRecordSet(cmd);
  return rs;
END;

PRIVATE MACRO DeleteTAR(tarid)
 var cmd;
  cmd = RSDCommand(" DELETE FROM   dsftarif_dbt tar " +
                   "  WHERE   TAR.T_ID = :1 ");
  cmd.AddParam("1", RSDBP_IN, tarid);
  cmd.execute();
END;

PRIVATE MACRO DeleteSCL(slcid)
 var cmd;
  cmd = RSDCommand(" DELETE FROM  dsftarscl_dbt scl  " +
                   "  WHERE   SCL.T_ID = :1 ");
  cmd.AddParam("1", RSDBP_IN, slcid);
  cmd.execute();
END;

PRIVATE MACRO DeleteCOMSCL(concomid)
 var cmd;
  cmd = RSDCommand(" DELETE FROM dsfcomtarscl_dbt tar " +
                   "  WHERE   tar.t_level NOT IN (3, 4) AND TAR.T_CONCOMID = :1 ");
  cmd.AddParam("1", RSDBP_IN, concomid);
  cmd.execute();
END;

private macro Функция_Пользователя()
 
 var m, i, Rmenu;
 array mn;
 var cmd, rs;
 private array com, comid; //Использование экземпляров класса в массиве не работает для menu, используем 2 массива
 private var ComTarSCL, SCLID, TARID;
 // 26.03.2014 joy R-338686
   mn(asize(mn)) = "Проверка комиссий на счетах СКС";
   mn(asize(mn)) = "Удаление индивидуальных настроек комиссии";
    
   m=menu(mn,null,"Выберите действие");
  
   if (m == -2) 
       return 0; // Обработка ESC
   elif(mn(m) == "Проверка комиссий на счетах СКС")
       execMacroFile ("CommissChecks", "CheckSKSPeriodCom");
   elif(mn(m) == "Удаление индивидуальных настроек комиссии")
       rs = GetIndComRS(DO.ID);
       i = 0;
       while (rs and rs.movenext())
         com[i] = GetComName(rs.value("T_COMMNUMBER"), rs.value("T_FEETYPE"));
         comid[i] = rs.value("T_ID");
         i = i + 1;
       end;

       if (i != 0)
         i = 0;
         Rmenu = Menu(com, "Выберите комиссию для удаления индивидуальных настроек");
         while (i < asize(com))
           if (Rmenu == i)
             break;
           end;
           i = i + 1;
         end;
         
         if(Rmenu < 0)
           return 0;
         end;

         if (gettrue(true,"Удаляем настроки комиссии:\n """+com[i]+""" ?"))
           RslDefCon.BeginTrans();  
           ComTarSCL = GetComTarSCLID(comid[i]);
           if(ComTarSCL == -1)
             SetComGeneral(comid[i]);
             RslDefCon.CommitTrans();
             msgbox("Удалено");
             return 0;
           else
             SCLID = GetSCLID(ComTarSCL);
             while (SCLID and SCLID.movenext())
               TARID = GetTARID(SCLID.value("T_ID"));
               while(TARID and TARID.movenext())
                 DeleteTar(TARID.value("T_ID"));
               end;
               DeleteSCL(SCLID.value("T_ID"));
             end;
           end;
           DeleteCOMSCL(comid[i]);
           SetComGeneral(comid[i]);
           RslDefCon.CommitTrans();
           
           msgbox("Удалено");
          
         end;
         
       else
         msgbox("Комиссий с индивидуальными настройкам не найдено");
       end;
   else
       return 0;
   end;
  
  return 0;

           onerror(x)
            if (RslDefCon.isInTrans)
             RslDefCon.RollbackTrans();
            end;
            msgbox("Ошибка");
            return 0;
end;

/*   Функция установки подсказки для скроллинга ДО:
 *     параметр ServKind обозначает вид обслуживания, для к-го строится список ДО и может иметь значения: 
 *     PTSK_ALL     = 0  - Все
 *     PTSK_STOCKDL = 1  - Фондовый дилинг
 *     PTSK_CURRDL  = 2  - Валютный дилинг
 *     PTSK_PAY     = 3  - РКО
 *     PTSK_DEPOS   = 7  - Депозитарное обслуживание
 *     PTSK_SVO     = 8  - Сектор вексельного обращения
 *                  = 9  - АРМ-позиционера
 *     PTSK_PERSN   = 10 - Клиент - физическое лицо
 *     PTSK_VEKSACC = 14 - Учтенные векселя
 *     PTSK_DV      = 15 - Срочные контракты (ПИ - производные инструменты)
 * 
 *      Если функция возвращает пустую строку, то используется хинт по умолчанию */
private macro УстановитьПодсказку( ServKind )
  
  return "";
end;
