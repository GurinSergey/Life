//-----------------------------------------------------------------------------
// Блок      : Вне блока
// Шаг       : Вне шага
// Назначение: Функции проверки важности, влияющей на необходимость смены 
//             опера в документе
//-----------------------------------------------------------------------------

import PaymInter, "pm_tools.mac";

// 201 Рублевый клиентский платеж
// Заявления на выдачу наличными (pmpaym.DocKind = 201, pspayord.DocKind = PSPOKIND_CASH_REQUEST)
macro IsImportantChangeForOperPayOrder(psDocKind, Pmpaym, OldPmpaym, Pmrmprop, OldPmrmprop, Pmprop, OldPmprop, 
                                                Pmakkr, OldPmakkr, Pspaydem, OldPspaydem)
  
  var eqf = true;
  
 /*SDA 17.04.2012 - I-00166831-2 принадлежность операционисту не должна меняться при редактировании */
  return CHANGE_NOT_IMPORTANT;

  if(psDocKind == PSPOKIND_CASH_REQUEST)
    if(eqf)
      eqf = IsEqualField(Pmrmprop, OldPmrmprop, "Number", "Date", "Priority") and
            IsEqualField(Pmpaym, OldPmpaym, "ValueDate", "Amount", "FIID","PayerAccount","ReceiverAccount");
    end;
  else    
    if(eqf)
      eqf = IsEqualField(Pmrmprop, OldPmrmprop, "Number", "Date", "PaymentKind", "PayerINN","ReceiverINN", "Priority", "Instancy") and
            IsEqualField(Pmpaym, OldPmpaym, "ValueDate", "Amount", "PayerAccount","ReceiverAccount") and
            IsEqualField(Pmprop, OldPmprop, "Codekind", "BankCode");
    end;                                                                            
    
    if(eqf and ((psDocKind == PSPOKIND_ORDER) or (psDocKind == PSPOKIND_REQUEST)))
      eqf = IsEqualField(Pmrmprop, OldPmrmprop, "TaxAuthorState", "BttTICode", "OKATOCode", "TaxPmGround","TaxPmPeriod", "TaxPmNumber", "TaxPmDate", "TaxPmType");
    end;
    
    if(eqf and (psDocKind == PSPOKIND_DEMAND))
      eqf = IsEqualField(Pspaydem, OldPspaydem, "acceptterm", "AcceptDate", "AcceptPeriod");
    end;
    
    if(eqf and (psDocKind == PSPOKIND_AKKREDITIV))
      eqf = IsEqualField(Pmakkr, OldPmakkr, "Type", "PayCondition", "date", "Representation", "AccRealReceiver");
    end;
  end;

  return IfThenElse(not eqf, CHANGE_IMPORTANT, CHANGE_NOT_IMPORTANT);
end;

// 202 Валютный клиентский платеж
macro IsImportantChangeForOperPsCpOrder(Pmpaym, OldPmpaym, Pmrmprop, OldPmrmprop, Pmprop, OldPmprop)
 /*SDA 17.04.2012 - I-00166831-2 принадлежность операционисту не должна меняться при редактировании */
  return CHANGE_NOT_IMPORTANT;

  return IfThenElse( not ( IsEqualField(Pmrmprop, OldPmrmprop, "Number", "Date", "ReceiverINN",  "ComissCharges", "Instancy") and
                           IsEqualField(Pmpaym, OldPmpaym, "ValueDate", "PayAmount", "PayFIID", "PayerCodeKind", "PayerCode", 
                                                           "FIID", "PayerAccount", "RateType", "Rate", "Point", "Scale", "ReceiverCodeKind", 
                                                           "ReceiverCode", "ReceiverAccount", "ComissFIID", "ComissAccount") and
                           IsEqualField(Pmprop, OldPmprop, "Codekind", "BankCode")
                         ), CHANGE_IMPORTANT, CHANGE_NOT_IMPORTANT
                   );
end;

// 203 Инкассовое поручение к валютному счету
macro IsImportantChangeForOperRequestOrder(pmpaym, oldpmpaym, pmrmprop, oldpmrmprop, pmprop, oldpmprop)
 /*SDA 17.04.2012 - I-00166831-2 принадлежность операционисту не должна меняться при редактировании */
  return CHANGE_NOT_IMPORTANT;
  
  return IfThenElse( not ( IsEqualField(pmrmprop, oldpmrmprop, "Number", "Date", "PaymentKind", "PayerINN", "ReceiverINN", 
                                        "Priority", "TaxAuthorState", "BttTICode", "OkatoCode", "TaxPmGround", "TaxPmPeriod", 
                                        "TaxPmNumber", "TaxPmDate", "TaxPmType") and
                           IsEqualField(pmpaym, oldpmpaym, "ValueDate", "PayAmount", "PayerAccount", "ReceiverAccount") and
                           IsEqualField(pmprop, oldpmprop, "Codekind", "BankCode")
                         ), CHANGE_IMPORTANT, CHANGE_NOT_IMPORTANT
                   );
end;


// 410 Клиентское объявление о взносе
// 420 Клиентский чек
macro IsImportantChangeForOperPSCashOrder(Pscashord, OldPscashord, Pmpaym, OldPmpaym, Pmrmprop, OldPmrmprop)
 /*SDA 17.04.2012 - I-00166831-2 принадлежность операционисту не должна меняться при редактировании */
  return CHANGE_NOT_IMPORTANT;

  return IfThenElse( not ( IsEqualField(Pmpaym, OldPmpaym, "ValueDate", "FIID", "PayerAccount", "ReceiverAccount", "Amount") and
                           IsEqualField(Pmrmprop, OldPmrmprop, "Date") and
                           IsEqualField(Pscashord, OldPscashord, "PaperNumber", "PaperSeries", "ClientAccount")
                         ), CHANGE_IMPORTANT, CHANGE_NOT_IMPORTANT
                   );
end;
   
// 200 Поручение на конвертацию валюты
macro IsImportantChangeForOperBuyCurOrder(Pmpaym, OldPmpaym, Pmrmprop, OldPmrmprop, bo, old_bo, Pmprop, OldPmprop)
 /*SDA 17.04.2012 - I-00166831-2 принадлежность операционисту не должна меняться при редактировании */
  return CHANGE_NOT_IMPORTANT;

  return IfThenElse( not ( IsEqualField(Pmpaym, OldPmpaym, "ValueDate", "PayerAccount", "FIID", "PayFIID", "Amount", 
                                        "PayAmount", "RateType", "Rate", "Scale", "Point", "ReceiverAccount") and
                           IsEqualField(Pmrmprop, OldPmrmprop, "Number", "Date", "ReceiverINN") and
                           IsEqualField(bo, old_bo, "BankFunds", "ExchangeID", "ExchangeFIID", "LimRate", 
                                        "LimRateScale", "LimRatePoint") and
                           IsEqualField(Pmprop, OldPmprop, "CodeKind", "BankCode")
                         ), CHANGE_IMPORTANT, CHANGE_NOT_IMPORTANT
                   );
end;

// 16 Рублевый платеж банка
// 17 Требование банка
macro IsImportantChangeForOperBankPaym(Payment, OldPayment, RmProp, OldRmProp, CrProp, OldCrProp, DbProp, OldDbProp, Demand, OldDemand)
 /*SDA 17.04.2012 - I-00166831-2 принадлежность операционисту не должна меняться при редактировании */
  return CHANGE_NOT_IMPORTANT;
  
  if(Payment.DocKind == DLDOC_BANKPAYMENT)

    return IfThenElse( not ( IsEqualField(Payment, OldPayment, "ValueDate", "Amount", "PayerAccount", "ReceiverAccount") and
                             IsEqualField(RmProp, OldRmProp, "Number", "PaymentKind", "Date", "PayerINN", "ReceiverINN", "Priority", 
                                          "Instancy", "TaxAuthorState", "BttTICode", "OkatoCode", "TaxPmGround", "TaxPmPeriod", 
                                          "TaxPmNumber", "TaxPmDate", "TaxPmType") and
                             IsEqualField(CrProp, OldCrProp, "CodeKind", "BankCode")
                           ), CHANGE_IMPORTANT, CHANGE_NOT_IMPORTANT

                     );

  elif(Payment.DocKind == DLDOC_BANKCLAIM)                     
                                                                                 
    return IfThenElse( not ( IsEqualField(Payment, OldPayment, "ValueDate", "FIID", "Amount", "PayerAccount", "ReceiverAccount", 
                                          "BaseFIID", "BaseAmount", "RateType", "Rate", "Point", "Scale", "IsInverse", "RateDate", 
                                          "BaseRateType", "BaseRate", "BasePoint", "BaseScale", "IsBaseInverse", "BaseRateDate") and
                             IsEqualField(RmProp, OldRmProp, "Number", "Date", "PaymentKind", "PayerINN", "ReceiverINN", "Instancy") and
                             IsEqualField(DbProp, OldDbProp, "CodeKind", "BankCode" ) and
                             IsEqualField(Demand, OldDemand, "AcceptTerm" )
                           ), CHANGE_IMPORTANT, CHANGE_NOT_IMPORTANT
                     );
  end;                                         
end;

// 27 Валютный платеж банка
macro IsImportantChangeForOperBbCpOrder(Pmpaym, OldPmpaym, Pmrmprop, OldPmrmprop, Pmprop, OldPmprop)
 /*SDA 17.04.2012 - I-00166831-2 принадлежность операционисту не должна меняться при редактировании */
  return CHANGE_NOT_IMPORTANT;
    
    return IfThenElse( not ( IsEqualField(Pmpaym, OldPmpaym, "ValueDate", "PayAmount", "PayFIID", "PayerCodeKind", "PayerCode", "FIID", "PayerAccount", "RateType", "Rate", "Point", "Scale", "ReceiverCode", "ReceiverCodeKind", "ReceiverAccount", "ComissFIID", "ComissAccount") and
                             IsEqualField(Pmrmprop, OldPmrmprop, "Number", "Date", "ComissCharges", "Instancy") and
                             IsEqualField(Pmprop, OldPmprop, "CodeKind", "BankCode")
                           ), CHANGE_IMPORTANT, CHANGE_NOT_IMPORTANT
                     );
end;

// 15 Мемориальный ордер
macro IsImportantChangeForOperMemorialOrder(pm_paym, pm_paymOld, pm_rmprop, pm_rmpropOld, cb_doc, cb_docOld, nvpi, nvpiold)
 /*SDA 17.04.2012 - I-00166831-2 принадлежность операционисту не должна меняться при редактировании */
  return CHANGE_NOT_IMPORTANT;
    
  return IfThenElse( not ( IsEqualField(pm_paym, pm_paymOld, "FIID", "PayerAccount", "ReceiverAccount", "Amount") and
                           IsEqualField(pm_rmprop, pm_rmpropOld, "Number", "Date") and
                           IsEqualField(cb_doc, cb_docOld, "TypeDocument") and
                           IsEqualField(nvpi, nvpiold, "CrCurEqID", "CrRecalcMethod", "CrSumEq", "DbCurEqID", "DbRecalcMethod", "DbSumEq")
                         ), CHANGE_IMPORTANT, CHANGE_NOT_IMPORTANT
                   );
end;

// 70 Мультивалютный документ
macro IsImportantChangeForOperMultyDoc(Paymdoc, OldPaymdoc, Rmdoc, OldRmdoc, Multydoc, OldMultydoc, Nvpi, OldNvpi)
 /*SDA 17.04.2012 - I-00166831-2 принадлежность операционисту не должна меняться при редактировании */
  return CHANGE_NOT_IMPORTANT;
  
  return IfThenElse( not ( IsEqualField(Paymdoc, OldPaymdoc, "FIID", "PayerAccount", "Amount", "PayFIID", "ReceiverAccount", "PayAmount", "RateType", "Rate", "Point", "Scale", "IsInverse", "RateDate", "ValueDate") and
                           IsEqualField(Rmdoc, OldRmdoc, "Number", "Date") and
                           IsEqualField(Multydoc, OldMultydoc, "Type_Document") and
                           IsEqualField(Nvpi, OldNvpi, "CrCurEqID", "CrRecalcMethod", "CrSumEq", "DbCurEqID", "DbRecalcMethod", "DbSumEq")
                         ), CHANGE_IMPORTANT, CHANGE_NOT_IMPORTANT
                   );
end;

// 74 Сводный мемориальный ордер
macro IsImportantChangeForOperSummaryMemorialOrder(Payment, OldPayment, RmProp, OldRmProp)
 /*SDA 17.04.2012 - I-00166831-2 принадлежность операционисту не должна меняться при редактировании */
  return CHANGE_NOT_IMPORTANT;

  return IfThenElse( not ( IsEqualField(Payment, OldPayment, "FIID", "Amount", "PayFIID", "PayAmount", "RateType", "Rate", "Point", 
                                        "Scale", "ValueDate") and
                           IsEqualField(RmProp, OldRmProp, "Number", "Date")
                         ), CHANGE_IMPORTANT, CHANGE_NOT_IMPORTANT
                   );
end;

// Кассовый ордер банка(400 Ордер подкрепления, 430 Приходный ордер, 440 Расходный ордер)
macro IsImportantChangeForOperBbCashOrder(Pmpaym, OldPmpaym, Pmrmprop, OldPmrmprop, Pscashord, OldPscashord)
 /*SDA 17.04.2012 - I-00166831-2 принадлежность операционисту не должна меняться при редактировании */
  return CHANGE_NOT_IMPORTANT;
  
  return IfThenElse( not ( IsEqualField(Pmpaym, OldPmpaym, "ValueDate", "FIID", "DocKind", "PayerAccount", "ReceiverAccount", "Amount") and
                           IsEqualField(Pmrmprop, OldPmrmprop, "Number", "Date") and
                           IsEqualField(Pscashord, OldPscashord, "ClientAccount")
                         ), CHANGE_IMPORTANT, CHANGE_NOT_IMPORTANT
                   );
end;

// Банковский ордер(286)
macro IsImportantChangeBankOrder(Pmpaym, OldPmpaym)
 /*SDA 17.04.2012 - I-00166831-2 принадлежность операционисту не должна меняться при редактировании */
  return CHANGE_NOT_IMPORTANT;
  
  return IfThenElse( not ( IsEqualField(Pmpaym, OldPmpaym, "ValueDate", "BaseAmount", "BaseFIID", "PayerAccount", "ReceiverAccount", "NumberPack", "TypeDocument", "UserTypeDocument")
                         ), CHANGE_IMPORTANT, CHANGE_NOT_IMPORTANT
                   );
end;
