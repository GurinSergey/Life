/*                                                                          */
/*                         R-Style SoftWare Lab                             */
/*                                                                          */
/****************************************************************************/
/*                       Подсистема "ГКБО"                                  */
/*                                                                          */
/*                             ПЗО                                          */
/*                                                                          */
/*                                                                          */
/*  Имя файла: sfcomcat.mac                                                 */
/*  Создан: 24.07.2007                                               СолАН  */
/*                                                                          */
/****************************************************************************/

import sfcommon, PTInter, rsd, "globals.mac";
/* EVG */
import "op_lib.mac";

macro SfIsOurFilial( ReceiverID )
  
  var rs;
  
  rs = RsdRecordset( "SELECT T_PARTYID FROM DDP_DEP_DBT WHERE T_PARTYID = " + ReceiverID );
                    
  if( rs.movenext )    
    return true;   
  end;

  return false;

end;


/* EVG Функция возвращает PartyID отделения ТС */
macro GetOfficePartyID ( Off )
  var query, rs;

  query = " Select t_PartyID From DDp_dep_dbt Where t_Code = " + Off;
  rs = rsdRecordSet(query);
  if (rs and rs.moveNext())
     return rs.Value(0, null, V_INTEGER);
  end;

  return {OurBank};
end;


/* EVG Добавил приём Primdoc - первичного документа */
macro CountComissAsIncome( DateCarry, debetFIID, debetAccount, creditFIID, creditAccount, Sum, Ground, 
                           TypeDocument, EqSumPayer, OperationID, StepID, linkKind, objectType, objectBuf, Primdoc )    

  var ret = 0;

  var Doc = RsbAccTransaction;

  if( (Sum > $0) OR ((EqSumPayer != NULL) AND (EqSumPayer > $0)) )

    Doc.Chapter    = 1;
    Doc.Date_Carry = DateCarry;   
    Doc.Ground     = Ground;
   
    Doc.SumPayer    = Sum;    

    Doc.FIIDPayer       = debetFIID;   
    Doc.AccountPayer    = debetAccount;
 
    Doc.FIIDReceiver    = creditFIID;   
    Doc.AccountReceiver = creditAccount;   

    Doc.Department = {OperDprt};

    /* EVG Определение шифра / вида операции */
    /* EVG Использовать getkindcarry нельзя, т.к. там нет необходимых
       правил.
    getkindcarry (Primdoc, doc.Shifr_Oper, doc.Kind_Oper);*/
    doc.Shifr_Oper = "09";
    doc.Kind_Oper  = " 6";
    //msgbox (doc.Shifr_Oper,"|",doc.Kind_Oper);


     /* EVG 14/12/2011 Для документа оплаты единовременной комиссии выполним поиск
        операциониста, вводившего родительский ПД (т.к. шаг оплаты комиссии может выполнять
        автомат Фронта). Функция из sf_lib.mac */
    if ( ( Primdoc.FeeType == 3 ) and ( Primdoc.DefComID > 0 ) )
       Doc.Oper = ExecMacroFile( "sf_lib", "FindParentDocOper", Primdoc.DefComID, Doc.Oper );
    end;


    if(TypeDocument != NULL)
      Doc.TypeDocument = TypeDocument;
    end;

    if( EqSumPayer != NULL )
      Doc.SumEqPayer  = EqSumPayer;
    end;

    if( (OperationID != NULL) AND (StepID != NULL) )
      Doc.ID_Operation = OperationID;
      Doc.ID_Step = StepID;
    end;

    if( not Doc.Carry() )
      ret = 1;
      msgbox( "Ошибка при вставке проводки" );
    else
      if( (linkKind  != NULL ) AND (objectType != NULL) AND (objectBuf != NULL) )
        SfPay_ConnectSfDocs( linkKind, objectType, objectBuf, Doc.AccTrnID, Doc.ID_Operation, Doc.ID_Step );
      end;
    end; 
  
  end;

  return ret;

end;


class SfComPrimDoc( DocKind, SfContr )
  /* данные класса ---------------------------------------------------- */  
  private var ServKind;
  private var PartyID;
  private var Department;

  private var FIRoleBArray = TArray;

  var Error = 0, Kind, ID;

  /* вернуть параметр второго рода ------------------------------------ */ 
  macro GetParametr( ParmKind, OperDate, CatCode, FIRole )
    var Parametr = -1;
    
    if( ParmKind == MC_TYPE_PARAMETR_CONTRACTOR )
      Parametr = PartyID;  /*контрагентом является плательщик по договору*/
    elif( ParmKind == MC_TYPE_PARAMETR_DEPARTMENT )
      Parametr = Department;
    end;

    return Parametr;
  end; 

  /* вернуть параметр первого рода ------------------------------------ */ 
  macro GetParametrTemplate( ObjectID, Classificator, OperDate, FIRole )
    var Parametr = -1;

    /* значение параметра БэкОфисКУ выбирается по виду обслуживания договора */
    if( Classificator == LLCLASS_BACKOFFICE )

      if( ServKind == PTSK_STOCKDL )  /* Ценные бумаги - Фондовый дилинг */
        Parametr = 5;
      
      elif( ServKind == PTSK_PAY )  /* PKO */
        Parametr = 9;

      /*elif( ServKind == PTSK_CREDIT )  /* MБK - Кредиты юр.лиц */
        Parametr = 2;*/

      elif( ServKind == PTSK_DEPOS )  /* Депозитарное обслуживание */
        Parametr = 10;

      elif( ServKind == PTSK_SVO )  /* Сектор вексельного обращения */
        Parametr = 1;

      elif( ServKind == PTSK_VEKSACC )  /* Учтенные векселя */
        Parametr = 7;

      elif( ServKind == PTSK_DV )  /* ПИ - производные инструменты */
        Parametr = 8;

      /* elif( ServKind == <конверcионные операции> )
         Parametr =  3;
      */ 
      end;

    end;

    return Parametr;
  end;

  /* остновная роль фИ ------------------------------------------------ */
  macro GetBasisFIRole(FIRole)
    return FIROLE_UNDEF;
  end;

/* вернуть весь базис ролей ----------------------------------------- */
  macro GetFIRoleBArray()
    return FIRoleBArray;
  end;

/* найти/открыть счет ---------------------------------------------- */
  macro FindAndOpenAccount( CatCode : string, DateCarry : date, Currency : integer )
    return MC_FindAndOpenAccount( CatCode, this, DateCarry, IsOprMultiExec(), MC_OPENACC_CREATE, null, Currency, null, MC_PAIRACCMODE_MANUAL );
  end;


/* найти счет ------------------------------------------------------- */
  macro FindAccount( CatCode : string, DateCarry : date, Currency : integer )
    return MC_FindAndOpenAccount( CatCode, this, DateCarry, IsOprMultiExec(), MC_OPENACC_ACT, null, Currency, null, MC_PAIRACCMODE_MANUAL );
  end;

  /* Корректировка счета ---------------------------------------------- */
   MACRO CorrectAccount( account, accblnc, ORScheme, categ, templ, accdoc, OperDate )
      
      /* EVG Вызов функции формирования названия счёта */
      ExecMacroFile("sf_lib", "MakeAccountNameForCat", account, @account.rec.NameAccount);

      return true;
   END;

  /* Конструктор */
   Kind = DocKind;
   ID   = SfContr.ID;
   
   ServKind = SfContr.ServKind;
   PartyID  = SfContr.PartyID;
   Department = SfContr.Department;
   
   FIRoleBArray[0] = 0;
/* ------------------------------------------------------------------ */

end; 

class SfConComPrimDoc( DocKind, SfConCom, SfContr, FIID_Sum )
  /* данные класса ---------------------------------------------------- */  
  private var ServKind;
  private var PartyID;
  private var Department;
  private var feeType;

  /* EVG Центр ответственности */
  var Office;

  private var CurrencyEQ;
  private var CurrencyEQ_RateType;
  private var CurrencyEQ_RateDate;
  private var CurrencyEQ_RateExtra;

  private var FIRoleBArray = TArray;
 
  var sfcomiss  = TBFile("sfcomiss.dbt");  

  var Error = 0, Kind, ID;

  /* вернуть параметр второго рода ------------------------------------ */ 
  macro GetParametr( ParmKind, OperDate, CatCode, FIRole )
    var Parametr = -1;
    debugbreak;
    if( ParmKind == MC_TYPE_PARAMETR_CONTRACTOR )
      Parametr = PartyID;  /*контрагентом является плательщик по договору*/
    elif( ParmKind == MC_TYPE_PARAMETR_DEPARTMENT )
      Parametr = Department;
    elif( ParmKind == MC_TYPE_PARAMETR_CURRENCYEQ )
      Parametr = CurrencyEQ;    
    elif( ParmKind == MC_TYPE_PARAMETR_CURRENCYEQ_RATETYPE )
      Parametr = CurrencyEQ_RateType;
    elif( ParmKind == MC_TYPE_PARAMETR_CURRENCYEQ_RATEDATE )
      Parametr = CurrencyEQ_RateDate;
    elif( ParmKind == MC_TYPE_PARAMETR_CURRENCYEQ_RATEEXTRA )
      Parametr = CurrencyEQ_RateExtra;
    
    /* EVG ЦО */
    elif ( ParmKind == MC_TYPE_PARAMETR_CENTR )
       Parametr = GetOfficePartyID (Office);
    /* EVG Пока не понятно, что это
    elif ( ParmKind == MC_TYPE_PARAMETR_CENTROFFICE )
       Parametr = GetOfficePartyID (Office);
    */

    /* EVG Владелец */
    elif ( ParmKind == MC_TYPE_PARAMETR_OWNER )
      Parametr = PartyID;
    end;

    return Parametr;
  end; 

  /* вернуть параметр первого рода ------------------------------------ */ 
  macro GetParametrTemplate( ObjectID, Classificator, OperDate, FIRole )
    var Parametr = -1;

    /* значение параметра БэкОфисКУ выбирается по виду обслуживания договора */
    if( Classificator == LLCLASS_BACKOFFICE )

      if( ServKind == PTSK_STOCKDL )  /* Ценные бумаги - Фондовый дилинг */
        Parametr = 5;
      
      elif( ServKind == PTSK_PAY )  /* PKO */
        Parametr = 9;

      /*elif( ServKind == PTSK_CREDIT )  /* MБK - Кредиты юр.лиц */
        Parametr = 2;*/

      elif( ServKind == PTSK_DEPOS )  /* Депозитарное обслуживание */
        Parametr = 10;

      elif( ServKind == PTSK_SVO )  /* Сектор вексельного обращения */
        Parametr = 1;

      elif( ServKind == PTSK_VEKSACC )  /* Учтенные векселя */
        Parametr = 7;

      elif( ServKind == PTSK_DV )  /* ПИ - производные инструменты */
        Parametr = 8;

      /* elif( ServKind == <конверcионные операции> )
         Parametr =  3;
      */ 
      end;

    end;

    return Parametr;
  end;

  /* остновная роль фИ ------------------------------------------------ */
  macro GetBasisFIRole(FIRole)
    return FIROLE_UNDEF;
  end;

/* вернуть весь базис ролей ----------------------------------------- */
  macro GetFIRoleBArray()
    return FIRoleBArray;
  end;

  macro FindAndOpenAccountEx( CatCode:string, DateCarry:date, Currency:integer, ID_Operation:integer, ID_Step:integer )
    var AccCat : RsbAccCategory;
        
    AccCat.PrimaryDoc = this;
    AccCat.ActionDate = DateCarry;
    AccCat.IsMass = IsOprMultiExec();
    AccCat.OpenMode = MC_OPENACC_CREATE;    
    AccCat.CurryCurrency = Currency;
    AccCat.ORScheme = null;
    AccCat.PairAccMode = MC_PAIRACCMODE_MANUAL;    
    
    return AccCat.FindAndOpenAccount( CatCode, ID_Operation, ID_Step );
  end;

/* найти/открыть счет ---------------------------------------------- */
  macro FindAndOpenAccount( CatCode:string, DateCarry:date, Currency:integer, ID_Operation:integer, ID_Step:integer )
    if( ((ID_Operation == null) OR (ID_Operation == 0)) OR ((ID_Step == null) OR (ID_Step == 0)) )
      return MC_FindAndOpenAccount( CatCode, this, DateCarry, IsOprMultiExec(), MC_OPENACC_CREATE, null, Currency, null, MC_PAIRACCMODE_MANUAL );
    else
      return FindAndOpenAccountEx( CatCode, DateCarry, Currency, ID_Operation, ID_Step );
    end;
  end;


/* найти счет ------------------------------------------------------- */
  macro FindAccount( CatCode : string, DateCarry : date, Currency : integer )
    return MC_FindAndOpenAccount( CatCode, this, DateCarry, IsOprMultiExec(), MC_OPENACC_ACT, null, Currency, null, MC_PAIRACCMODE_MANUAL );
  end;

  /* Корректировка счета ---------------------------------------------- */
   MACRO CorrectAccount( account, accblnc, ORScheme, categ, templ, accdoc, OperDate )

      /* EVG Вызов функции формирования названия счёта */
      ExecMacroFile("sf_lib", "MakeAccountNameForCat", account, @account.rec.NameAccount);
      
      /* EVG 9.12.2011 Перенесён чикс, который Дмитрий делал для категории КартОР. */
      /* SDA - фикс ошибки 1233 для сотрудников ВСП - указанный номер операциониста не входит и т.д.  */
      account.rec.Branch = {OperDprtNode};

      return true;
   END;

   macro GetDefComSfSiAccount( defComID:integer, kindSfSi:integer, CatName:string, ActionDate:date, 
                               Currency:integer, SfSi:@TRecHandler )
     return GetDefComSfSi( feeType, defComID, kindSfSi, CatName, this, ActionDate, Currency, SfSi );
   end;

  /* Конструктор */
   Kind = DocKind;
   ID   = SfConCom.ID;
   
   ServKind = SfContr.ServKind;
   PartyID  = SfContr.PartyID;
   Department = SfContr.Department;
   feeType = SfConCom.feeType;

   if( SfConCom.FeeType == 1 ) 
     CurrencyEQ = FIID_Sum;
     CurrencyEQ_RateType = SfContr.PayRateID;
     if( SfContr.PayRateDateKind == 3 )  /*SFINV_RATEDATEKIND_PAYDAY = 3  // Оплаты - 1 день*/    
       CurrencyEQ_RateDate = 1;
     else 
       CurrencyEQ_RateDate = 0;
     end;
     CurrencyEQ_RateExtra = money(SfContr.PayRatePercent);
   elif( SfConCom.FeeType == 3 ) /*OBJTYPE_OPRSFCOM   = 665, // Удержанная единовременная комиссия*/
     CurrencyEQ = FIID_Sum;
     sfcomiss.rec.feeType = SfConCom.FeeType;
     sfcomiss.rec.number  = SfConCom.CommNumber;  
     if( sfcomiss.GetEQ )
       CurrencyEQ_RateType = sfcomiss.rec.RateType;
     else
       CurrencyEQ_RateType = 0;
     end;     
     CurrencyEQ_RateDate = 0;
     CurrencyEQ_RateExtra = $0;
   end;
   
   FIRoleBArray[0] = 0;

   /* EVG Определение центра ответственности */
   Office = SfContr.Branch;
/* ------------------------------------------------------------------ */

end;


/*Класс первичного документа по удержанной разовой комиссии*/
class SfSingDfPrimDoc( DocKind, SfSingDf )
  /* данные класса ---------------------------------------------------- */  
  private var ServKind;
  private var PartyID;
  private var Department;
  private var feeType;

  private var CurrencyEQ;
  private var CurrencyEQ_RateType;
  private var CurrencyEQ_RateDate;
  private var CurrencyEQ_RateExtra;

  private var FIRoleBArray = TArray;
 
  var sfcomiss  = TBFile("sfcomiss.dbt");  

  var Error = 0, Kind, ID;

  /* EVG */
  var Office;

  /* вернуть параметр второго рода ------------------------------------ */ 
  macro GetParametr( ParmKind, OperDate, CatCode, FIRole )
    var Parametr = -1;
    
    if( ParmKind == MC_TYPE_PARAMETR_CONTRACTOR )
      Parametr = PartyID;  /*контрагентом является плательщик по договору*/
    elif( ParmKind == MC_TYPE_PARAMETR_DEPARTMENT )
      Parametr = Department;
    elif( ParmKind == MC_TYPE_PARAMETR_CURRENCYEQ )
      Parametr = CurrencyEQ;    
    elif( ParmKind == MC_TYPE_PARAMETR_CURRENCYEQ_RATETYPE )
      Parametr = CurrencyEQ_RateType;
    elif( ParmKind == MC_TYPE_PARAMETR_CURRENCYEQ_RATEDATE )
      Parametr = CurrencyEQ_RateDate;
    elif( ParmKind == MC_TYPE_PARAMETR_CURRENCYEQ_RATEEXTRA )
      Parametr = CurrencyEQ_RateExtra;
    
    /* EVG ЦО */
    elif ( ParmKind == MC_TYPE_PARAMETR_CENTR )
       Parametr = GetOfficePartyID (Office);
    /* EVG Пока не понятно, что это
    elif ( ParmKind == MC_TYPE_PARAMETR_CENTROFFICE )
       Parametr = GetOfficePartyID (Office);
    */

    /* EVG Владелец */
    elif ( ParmKind == MC_TYPE_PARAMETR_OWNER )
      Parametr = PartyID;
    end;

    return Parametr;
  end; 

  /* вернуть параметр первого рода ------------------------------------ */ 
  macro GetParametrTemplate( ObjectID, Classificator, OperDate, FIRole )
    var Parametr = -1;

    /* значение параметра БэкОфисКУ выбирается по виду обслуживания договора */
    if( Classificator == LLCLASS_BACKOFFICE )

      if( ServKind == PTSK_STOCKDL )  /* Ценные бумаги - Фондовый дилинг */
        Parametr = 5;
      
      elif( ServKind == PTSK_PAY )  /* PKO */
        Parametr = 9;

      /*elif( ServKind == PTSK_CREDIT )  /* MБK - Кредиты юр.лиц */
        Parametr = 2;*/

      elif( ServKind == PTSK_DEPOS )  /* Депозитарное обслуживание */
        Parametr = 10;

      elif( ServKind == PTSK_SVO )  /* Сектор вексельного обращения */
        Parametr = 1;

      elif( ServKind == PTSK_VEKSACC )  /* Учтенные векселя */
        Parametr = 7;

      elif( ServKind == PTSK_DV )  /* ПИ - производные инструменты */
        Parametr = 8;

      /* elif( ServKind == <конверcионные операции> )
         Parametr =  3;
      */ 
      end;

    end;

    return Parametr;
  end;

  /* остновная роль фИ ------------------------------------------------ */
  macro GetBasisFIRole(FIRole)
    return FIROLE_UNDEF;
  end;

  /* вернуть весь базис ролей ----------------------------------------- */
  macro GetFIRoleBArray()
    return FIRoleBArray;
  end;

  /* найти/открыть счет ---------------------------------------------- */
  macro FindAndOpenAccount( CatCode : string, DateCarry : date, Currency : integer )
    return MC_FindAndOpenAccount( CatCode, this, DateCarry, IsOprMultiExec(), MC_OPENACC_CREATE, null, Currency, null, MC_PAIRACCMODE_MANUAL );
  end;


  /* найти счет ------------------------------------------------------- */
  macro FindAccount( CatCode : string, DateCarry : date, Currency : integer )
    return MC_FindAndOpenAccount( CatCode, this, DateCarry, IsOprMultiExec(), MC_OPENACC_ACT, null, Currency, null, MC_PAIRACCMODE_MANUAL );
  end;

  /* Корректировка счета ---------------------------------------------- */
  MACRO CorrectAccount( account, accblnc, ORScheme, categ, templ, accdoc, OperDate )
    
    /* EVG Вызов функции формирования названия счёта */
    ExecMacroFile("sf_lib", "MakeAccountNameForCat", account, @account.rec.NameAccount);

    /* EVG 9.12.2011 Перенесён чикс, который Дмитрий делал для категории КартОР. */
    /* SDA - фикс ошибки 1233 для сотрудников ВСП - указанный номер операциониста не входит и т.д.  */
    account.rec.Branch = {OperDprtNode};

    return true;
  END;

  macro GetDefComSfSiAccount( defComID:integer, kindSfSi:integer, CatName:string, ActionDate:date, 
                              Currency:integer, SfSi:@TRecHandler )
    return GetDefComSfSi( feeType, defComID, kindSfSi, CatName, this, ActionDate, Currency, SfSi );
  end;

  macro GetAccountClientID( Account, FIID, Office:@integer /*EVG*/)
    record AccRec ("account");
    var ClientID = 0;
    if( SfCommon_GetAccount(AccRec, Account, FIID, 1) == true )
      ClientID = AccRec.Client;
      /* EVG */
      Office = AccRec.Branch;
    end;    
    return ClientID;
  end; 

  /* Конструктор */
  Kind = DocKind;
  ID   = SfSingDf.ID;

  sfcomiss.rec.feeType = SfSingDf.FeeType;
  sfcomiss.rec.number  = SfSingDf.CommNumber;   
  if( sfcomiss.GetEQ )   
    ServKind = sfcomiss.rec.ServiceKind;
  else
    ServKind = 0;
  end;

  /* EVG Добавил определение центра ответственности (Office)
  PartyID  = this.GetAccountClientID( SfSingDf.AccountPayer, SfSingDf.FIIDPayer );*/
  PartyID  = this.GetAccountClientID( SfSingDf.AccountPayer, SfSingDf.FIIDPayer, @Office );

  Department = SfSingDf.Department;
  feeType = SfSingDf.feeType;
   
  CurrencyEQ = SfSingDf.FIID_paySum;
  CurrencyEQ_RateType = 0;
  CurrencyEQ_RateDate = 0;
  CurrencyEQ_RateExtra = $0;
   
  FIRoleBArray[0] = 0;
  /* ------------------------------------------------------------------ */
end; 

