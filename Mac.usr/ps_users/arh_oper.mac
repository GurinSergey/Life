/* ЗАМЕНА ОПЕРА НА ПРОВОДКЕ                                                     */
/*17.10.2012 LAO согласно ТЗ С -14564                                           */
/*--заменяем опера в проводке, документе и шагах, записываем в фискальный журнал*/
// 2012-10-30 zip_z. private var
// 13.12.2012 LAO добавил возможность изменения для внебаланса
// LVV 08.12.2014 I-00537160-2 скоростная адаптация под 31.
// LAO 15.05.2015 I-00545048-2 доадаптация после "скоростной"
import Globals;
import lib_sqltools;
import "charh_print.mac";
private var fulloutput = GetTxtFileName("control302p");
private var Fulloutputl, outl, outputl="control302p.lbr";


/********Используется для записи в фискальный***************/

file d ( acctrn );
record f ( acctrn ) write;
//file dv ( "acctrn$" );
//record fv ( "acctrn$" ) write;
file paym_f ( pmpaym );
record paym_r ( pmpaym ) write;
file step_f (oprstep);
record step_r (oprstep) write;

/**********************************************************/



GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
Fulloutputl = FindPath(outputl,outl);
private var dlg = TRecHandler("oper_arh", Fulloutputl, TRUE); 
private var akey,date_n,oper_n,checks,num_n,ch_r;
private var               
      col, 
      cmd,rs,cn;
/*Скролинги */
FILE f_rep_out() txt;
var f_rep_change = GetTXTFileName("change_oper_ondocs");
var  COMISS;
private var   mcmd,
     sql,
     arhsql,
     PAYMENTID,
     k,
     OPERATION,doc_kind,
     dokind,
     move,
     predicate="",
     tr,acc_trn,acc_trn2,acc_trn3,pred="";
private var ch_operat,ch_paym,chek_value,st;
private 
const  KEY_TAB        =9,                        /*Константы для скролинга*/
       KEY_CTRL_ENTER =10,
       KEY_ALT_F2     =361,
       KEY_ENTER      =13,
       KEY_ESC        =27,
       KEY_F8         =322,
       KEY_F9         =323;
private const  KEY_F1         =315;
private const  KEY_F2         =316;
private const  KEY_F3         =317;
private const  KEY_SPACE      =32;
private const
c_dockind_cash_in             = 430,   /*кассовый приходный*/
c_dockind_cash_out            = 440,   /*кассовый расходный*/
c_dockind_cash_inout          = 400,  /*кассовый подкрепление*/
c_dockind_memorder            = 70,   /*мемордер*/
c_dockind_memorder_bank_order = 286,  /*банковский ордер*/
c_dockind_multycarry          = 15,   /*мультивалютный*/
c_dockind_bank_paym           = 16,   /*платеж ББ*/
c_dockind_bank_order          = 17,   /*требование ББ*/
c_dockind_client_paym         = 2011,   /*платеж РКО*/
c_dockind_client_paym_rur     = 201,   /*рублевый клиентский платеж*/
c_dockind_client_order        = 2012,  /*требование РКО*/
c_dockind_client_cash_in      = 410,   /*Объявление на взнос наличных*/
c_dockind_client_cash_out     = 420,   /*клиентский чек*/
c_dockind_external_in         = 320,   /*внешний входящий*/
c_dockind_client_paym_b       = 2001,   /*покупка валюты*/
c_dockind_client_paym_s       = 2002,   /*продажа валюты*/
c_dockind_client_paym_k       = 2003,   /*конверсия*/
c_dockind_client_paym_val     = 202,   /*Валютный платеж РКО*/
c_dockind_bank_paym_val       = 27;   /*Валютный платеж банка*/


private MACRO GetChapter(acc)
  var balacc, chapter;

  if(strbrk(acc, "ОВП") > 0)
     return 1;
  else
     balacc = int(SUBSTR (acc, 1, 5));
  end;

  IF ((balacc >= 98000) AND (balacc <= 98090))
      chapter = 5;
  ELIF ((balacc >= 93001) AND (balacc <= 97001))
      chapter = 4;
  ELIF (   ((balacc >= 90601) AND (balacc <= 91904))
        OR (balacc == 99999) OR (balacc == 99998))
      chapter = 3;
  ELIF ((balacc >= 80101) AND (balacc <= 85501))
      chapter = 2;
  ELSE
     chapter = 1;
  END;

 return chapter;
END;

macro savechangesF(akey,operold,opern,val);
/*замена опера  и запись в фискальный*/
var save_arh,dval;
debugbreak;
dval="dacctrn_dbt";
ClearRecord(d);
d.acctrnid= akey/*sql.Value ("t_acctrnid")*/;
d.oper= operold /*sql.value("t_oper")*/;
GetEq(d);
copy(f,d);
d.oper=opern /*dlg.rec.NOperNEW*/;
WriteFiscLog ( OLupdate, d, f, d );
save_arh = RSDCommand("Update dacctrn_dbt set t_oper= "+opern+" where t_acctrnid=?");
save_arh.addparam("t_acctrnid", RSDBP_IN, akey);
save_arh.Execute();
  

 /********************************/
end;

macro savechangesP(paymid,opernew,dokind);
var save_paym;
/*Меняем опера на платеже и на взаимосвязанных таблицах...*/
debugbreak;
 ClearRecord(paym_f);
 paym_f.paymentid = paymid;
 GetEq(paym_f);
 copy(paym_r,paym_f);
 paym_f.oper=opernew /*dlg.rec.NOperNEW*/;
 WriteFiscLog ( OLupdate, paym_f, paym_r, paym_f );
 /*обновляем */
 save_paym = RSDCommand("Update dpmpaym_dbt set t_oper= "+opernew+" where t_paymentid=?");
 save_paym.addparam("paymid", RSDBP_IN, paymid);
 save_paym.Execute();
 
 save_paym = RSDCommand("Update dpmhist_dbt set t_oper= "+opernew+" where t_paymentid=?");
 save_paym.addparam("paymid", RSDBP_IN, paymid);
 save_paym.Execute();
 if (dokind==c_dockind_memorder)
  save_paym = RSDCommand("Update dcb_doc_dbt set t_oper= "+opernew+" where t_documentid=?");
  save_paym.addparam("paymid", RSDBP_IN, paymid);
  save_paym.Execute();
 elif (dokind==c_dockind_client_paym_rur)
  save_paym = RSDCommand("Update dpspayord_dbt set t_oper= "+opernew+" where t_orderid=?");
  save_paym.addparam("paymid", RSDBP_IN, paymid);
  save_paym.Execute();
   
  save_paym = RSDCommand("Update dpspohist_dbt set t_oper= "+opernew+" where t_orderid=?");
  save_paym.addparam("paymid", RSDBP_IN, paymid);
  save_paym.Execute();
 elif ((dokind==c_dockind_bank_paym) or (dokind==c_dockind_bank_order)) 
  save_paym = RSDCommand("Update dmemorder_dbt set t_oper= "+opernew+" where t_orderid=?");
  save_paym.addparam("paymid", RSDBP_IN, paymid);
  save_paym.Execute();
  save_paym = RSDCommand("Update dpscshdoc_dbt set t_oper= "+opernew+" where t_acctrnid=?");
  save_paym.addparam("paymid", RSDBP_IN, paymid);
  save_paym.Execute();
  save_paym = RSDCommand("Update dmultydoc_dbt set t_oper= "+opernew+" where t_acctrnid=?");
  save_paym.addparam("paymid", RSDBP_IN, paymid);
  save_paym.Execute();
 end;
  
  
end;

macro savechangesStep(IDOPERATION,IDSTEP,BLOCK, NUMBERSTEP,opernew);
var save_operat;
debugbreak;
 ClearRecord(step_f);
 step_f.ID_OPERATION = IDOPERATION;
 step_f.ID_STEP=IDSTEP;
 step_f.BLOCKID=BLOCK;
 step_f.NUMBER_STEP=NUMBERSTEP;
 GetEq(step_f);
 copy(step_r,step_f);
 step_f.oper=opernew /*dlg.rec.NOperNEW*/;
 WriteFiscLog ( OLupdate, step_f, step_r, step_f );
 
 save_operat = RSDCommand("Update doprstep_dbt set t_oper= "+opernew+" where T_ID_OPERATION=? and T_ID_STEP=? and T_BLOCKID=? and T_NUMBER_STEP=? ");
 save_operat.addparam("IDOP", RSDBP_IN, IDOPERATION);
 save_operat.addparam("ISTEP", RSDBP_IN, IDSTEP);
 save_operat.addparam("LOCK", RSDBP_IN, BLOCK);
 save_operat.addparam("NUMB", RSDBP_IN, NUMBERSTEP);
 
 save_operat.Execute();
 
end;

macro searchStep(PAYMENTID,dokind,operation,k)
var search;
debugbreak;
 startQueryCapture ();
   [ SELECT  op.T_ID_OPERATION,
           step.T_ID_STEP,
           step.T_BLOCKID,
           step.T_NUMBER_STEP,
           ostep.t_name,
           step.T_PLAN_DATE,
           step.T_FACT_DATE,
           step.T_SYST_DATE,
           step.t_oper
     FROM   doproper_dbt op, doprstep_dbt step, doprostep_dbt ostep
     WHERE       op.t_documentid = LPAD (?, 34, 0)
           AND op.t_dockind = ?
           AND step.T_ID_OPERATION = op.T_ID_OPERATION
           AND step.T_BLOCKID = ostep.T_BLOCKID
           AND step.T_NUMBER_STEP = ostep.T_NUMBER_STEP
     ORDER BY   t_id_step                                                 ];
   search = endQueryCapture ();
   search = execSqlSelect (search, makeArray (SqlParam ("t_paym",PAYMENTID),SqlParam ("t_dockind",dokind))); 
   k=1;
   while (search.movenext)
  
    print_step(search.Value ("T_ID_STEP"),
               search.Value ("T_BLOCKID"),
               search.Value ("t_name"),
               search.Value ("T_PLAN_DATE"),
               search.Value ("T_FACT_DATE"),
               search.Value ("T_SYST_DATE"),
               search.Value ("t_oper"),
               k=k+1,dlg.rec.NOper);
    if ((search.value("t_oper")!=dlg.rec.NOperNEW) and (dlg.rec.NOper==search.Value ("t_oper")))           
     savechangesStep(search.Value ("T_ID_OPERATION"),search.Value ("T_ID_STEP"),search.Value ("T_BLOCKID"),search.Value ("T_NUMBER_STEP"),dlg.rec.NOperNEW);
    end;
   end; 
   if (k!=1)
     operation=search.value("T_ID_OPERATION");
     setparm (2,operation);
     setparm (3,k);
    end;
end;    

macro change_oper()

 startQueryCapture ();/*проверяем не было ли уже по ней произведено операций*/
 [select ur.T_autokey from USR_DARHDOC_CHOPER_TMP ur where ur.T_autokey=? ];
 mcmd = endQueryCapture ();
 mcmd = execSqlSelect (mcmd, makeArray (SqlParam ("t_autokey",sql.Value ("T_acctrnid"))));
 if (not mcmd.movenext)
  tr = RSDCommand("insert into USR_DARHDOC_CHOPER_TMP (t_autokey) values ("+sql.Value ("t_acctrnid")+")"); 
  tr.Execute;
  move=1;
  /*T_CHAPTER T_ACCOUNT_PAYER T_ACCOUNT_RECEIVER T_SUM_NATCUR T_DATE_CARRY T_OPER*/
  /*ID_DOC,N_DOC,CHAPT,ACCPAYER,ACCRECIEVER,SUM,VAL,NPACK,DATEARH,OPER)*/
  /*Печать проводок*/
  print_arh(sql.Value ("t_acctrnid"),
            sql.Value ("T_NUMB_DOCUMENT"),
            sql.Value ("T_CHAPTER"),
            sql.Value ("T_ACCOUNT_PAYER"),
            sql.Value ("T_ACCOUNT_RECEIVER"),
            sql.Value ("T_SUM_NATCUR"),
            sql.Value ("T_FIID_PAYER"),
            sql.Value ("T_NUMBER_PACK"),
            sql.Value ("T_DATE_CARRY"),
            sql.Value ("T_OPER"),move,"",dlg.rec.NOper);
            
  
  startQueryCapture ();/*находим привязку проводки к платежу!*/
   [SELECT   pm.t_paymentid,pm.t_dockind,pm.T_FIID,pm.T_AMOUNT,pm.T_VALUEDATE,pm.T_OPER,prop.T_NUMBER  
    FROM   dpmdocs_dbt pmd,dpmpaym_dbt pm,dpmrmprop_dbt prop
    WHERE       pmd.t_acctrnid = ?     and pm.t_paymentid=pmd.t_paymentid and prop.t_paymentid= pmd.t_paymentid     ];
         
   mcmd = endQueryCapture ();
   mcmd = execSqlSelect (mcmd, makeArray (SqlParam ("t_appkey",sql.Value ("t_acctrnid"))));
  if (mcmd.movenext)
   PAYMENTID=mcmd.Value ("T_PAYMENTID");
   dokind=mcmd.Value ("t_dockind");
 
   /*startQueryCapture ();*/
   /*Находим  все проводки по платежу!*/
   arhsql= "SELECT doc.* "+
           " FROM   "+acc_trn2+", dpmdocs_dbt pmd, dpmpaym_dbt pm"+
           " WHERE  " +  
           " pm.t_paymentid = pmd.t_paymentid"+
           " AND pmd.t_paymentid=?"+
           " and doc.t_acctrnid = pmd.t_acctrnid "+ 
           " and pmd.t_acctrnid!=?  "                          ;
  /* arhsql = endQueryCapture ();*/
   arhsql = execSqlSelect (arhsql, makeArray (SqlParam ("PAYMENTID",PAYMENTID),SqlParam ("APPKEY",sql.Value ("t_acctrnid"))));     
   while (arhsql.movenext)
    tr = RSDCommand("insert into USR_DARHDOC_CHOPER_TMP (t_autokey) values ("+arhsql.Value ("t_acctrnid")+")"); 
    tr.Execute;
    print_arh(arhsql.Value ("t_acctrnid"),
              arhsql.Value ("T_NUMB_DOCUMENT"),
              arhsql.Value ("T_CHAPTER"),
              arhsql.Value ("T_ACCOUNT_PAYER"),
              arhsql.Value ("T_ACCOUNT_RECEIVER"),
              arhsql.Value ("T_SUM_NATCUR"),
              arhsql.Value ("T_FIID_PAYER"),
              arhsql.Value ("T_NUMBER_PACK"),
              arhsql.Value ("T_DATE_CARRY"),
              arhsql.Value ("T_OPER"), move=move+1,"",dlg.rec.NOper);
              /*сохраняем в фискальный*/
     if ((arhsql.value("t_oper")!=dlg.rec.NOperNEW) and (dlg.rec.NOper==arhsql.Value ("t_oper")))         
     savechangesF(arhsql.Value ("t_acctrnid"),
                  arhsql.value("t_oper"),
                  dlg.rec.NOperNEW,checks);
      end;  
     move=4;   /*Спец. увеличиваем счетчик. что бы не печаталась шапка*/    
    end;
     
    print_paym(mcmd.Value ("t_paymentid"),
               mcmd.Value ("T_NUMBER"),
               mcmd.Value ("T_AMOUNT"),
               mcmd.Value ("T_FIID"),
               mcmd.Value ("T_VALUEDATE"),
               mcmd.Value ("T_OPER"),dlg.rec.NOper);
    savechangesP(PAYMENTID,dlg.rec.NOperNEW,dokind);
             
        
  else
   [Платеж по проводке отсутствует]; 
   PAYMENTID=0;
  end;
  if (PAYMENTID!=0)
    OPERATION=0;
    searchStep(PAYMENTID,dokind,operation,k);
  if (k==1)
    [Шаги отсутствуют ];
   else
    [└─────────────┴───────────┴──────────────────────────────┴──────────────────┴──────────────────┴───────────────────┴──┴───────────────┘]; 
   /* OPERATION=mcmd.Value ("T_ID_OPERATION");*/
   /*определяем валюту комиссии, не могу точно сказать что оно правильно работает*/
   
   
   startQueryCapture ();/*находим проводки комиссии по операции */
   [SELECT                                           /*+ ordered use_nl(df paym)*/
         T_COMISSFIID
      FROM  dsfdef_dbt df,
          dpmpaym_dbt paym
      WHERE  df.T_ID_OPERATION = ?
          AND paym.t_defcomid = df.t_id                                                 ];
           
    arhsql = endQueryCapture ();
    arhsql = execSqlSelect (arhsql, makeArray (SqlParam ("oper",OPERATION))); 
    
    if (arhsql.movenext)
     if ((arhsql.value("T_COMISSFIID")==0) or (arhsql.value("T_COMISSFIID")==-1))
      acc_trn3="dacctrn_dbt arh";
      chek_value=false;
     else 
      acc_trn3="dacctrn$_dbt arh";
      chek_value=true;
     end; 
   
   /*находим проводки комиссии по операции */
     arhsql= " SELECT                                           /*+ ordered use_nl(df paym)*/"+
          " paym.t_paymentid,paym.t_dockind,"+
          " paym.T_OPER as oper_paym,"+
          " arh.t_acctrnid,"+
          " arh.T_NUMB_DOCUMENT,"+
          " arh.T_CHAPTER,"+
          " arh.T_ACCOUNT_PAYER,"+
          " arh.T_ACCOUNT_RECEIVER,"+
          " arh.T_SUM_NATCUR,"+
          " arh.T_FIID_PAYER,"+
          " arh.T_NUMBER_PACK,"+
          " arh.T_DATE_CARRY,"+
          " arh.T_OPER,"+
          " arh.t_acctrnid"+
          " FROM  dsfdef_dbt df,"+
          " dpmpaym_dbt paym,"+
          " dpmdocs_dbt pmd,"+
          acc_trn3+
          " WHERE       df.T_ID_OPERATION = ?"+
          " AND paym.t_defcomid = df.t_id"+
          " AND paym.t_paymentid = pmd.t_paymentid"+
          " AND arh.t_acctrnid = pmd.t_acctrnid  order by  paym.t_paymentid ";
      /* arhsql = endQueryCapture ();*/
      arhsql = execSqlSelect (arhsql, makeArray (SqlParam ("oper",OPERATION))); 
       k=2;
  
    /*комиссий может быть несколько, а значит и платежей и операций*/
     while (arhsql.movenext)
      k=k+1;
      tr = RSDCommand("insert into USR_DARHDOC_CHOPER_TMP (t_autokey) values ("+arhsql.Value ("t_acctrnid")+")"); 
      tr.Execute;
      print_arh(arhsql.Value ("t_acctrnid"),
              arhsql.Value ("T_NUMB_DOCUMENT"),
              arhsql.Value ("T_CHAPTER"),
              arhsql.Value ("T_ACCOUNT_PAYER"),
              arhsql.Value ("T_ACCOUNT_RECEIVER"),
              arhsql.Value ("T_SUM_NATCUR"),
              arhsql.Value ("T_FIID_PAYER"),
              arhsql.Value ("T_NUMBER_PACK"),
              arhsql.Value ("T_DATE_CARRY"),
              arhsql.Value ("T_OPER"),k,arhsql.Value ("T_PAYMENTID"),dlg.rec.NOper);
       if ((dlg.rec.NOperNEW!=arhsql.Value ("oper_paym")) and (dlg.rec.NOper==arhsql.Value ("oper_paym")))
         //Gurin S. 26.06.2015 R-597411-2
         ch_paym=arhsql.Value ("T_PAYMENTID");
         doc_kind=arhsql.Value ("t_dockind");
        if (k==3)
         savechangesP(arhsql.Value ("T_PAYMENTID"),dlg.rec.NOperNEW,doc_kind);
      /*   [Шаги по связанному  платежу:#################](arhsql.Value ("T_PAYMENTID"));
         searchStep(arhsql.Value ("T_PAYMENTID"),arhsql.Value ("t_dockind"),operation,k);
         [└─────────────┴───────────┴──────────────────────────────┴──────────────────┴────────────────────┴───────────────────┴────────────────┘]; 
       */  
        elif (ch_paym!=arhsql.Value ("T_PAYMENTID"))
          [Шаги по связанному  платежу:#################](arhsql.Value ("T_PAYMENTID"));
         searchStep(ch_paym,doc_kind,operation,k);
          [└─────────────┴───────────┴──────────────────────────────┴──────────────────┴──────────────────┴───────────────────┴──┴───────────────┘];  
                
         ch_paym=arhsql.Value ("T_PAYMENTID");
         doc_kind=arhsql.Value ("t_dockind");
         savechangesP(arhsql.Value ("T_PAYMENTID"),dlg.rec.NOperNEW,doc_kind);
       
        end; 
        savechangesF(arhsql.Value ("t_acctrnid"),
                     arhsql.value("t_oper"),
                     dlg.rec.NOperNEW,chek_value);   
       end;   
      end;
       if (k>2)
         [Шаги по связанному  платежу:#################](arhsql.Value ("T_PAYMENTID"));
         searchStep(arhsql.Value ("T_PAYMENTID"),arhsql.Value ("t_dockind"),operation,k);
         [└─────────────┴───────────┴──────────────────────────────┴──────────────────┴──────────────────┴───────────────────┴──┴───────────────┘]; 
       end;    
    end;
    /* if (k!=2) 
      if ((dlg.rec.NOperNEW!=arhsql.Value ("t_oper")) and (dlg.rec.NOper==arhsql.Value ("t_oper")))
        savechangesP(arhsql.Value ("T_PAYMENTID"),dlg.rec.NOperNEW);
      end;
     end;*/
   end; 
   /*if (k!=2)
    [Шаги по связанному  платежу:#################](arhsql.Value ("T_PAYMENTID"));
    searchStep(arhsql.Value ("T_PAYMENTID"),arhsql.Value ("t_dockind"),operation,k);
    if (k==1)
     [Шаги отсутствуют ];
    else
     [└─────────────┴───────────┴──────────────────────────────┴──────────────────┴────────────────────┴───────────────────┴────────────────┘]; 
    end; 
   end; */
  end;
  /*записываем и меняем*/
  if ((dlg.rec.NOperNEW!=sql.Value ("t_oper")) and (dlg.rec.NOper==sql.Value ("t_oper")))    
   savechangesF(sql.Value ("t_acctrnid"),
                sql.value("t_oper"),
                dlg.rec.NOperNEW,checks);
  end; 
 end;
ONERROR(x)
 Println(x.Message);
 AbortTrn();
end;
/**/

private macro EvProc (rs, Command, id, key )  
      if   ((Command == DLG_KEY) and (key == KEY_ENTER))
        return CM_SELECT;
      elif ((Command == DLG_KEY) and (key == KEY_ESC))
       return CM_CANCEL;
      else
       CM_IGNORE;
      end;
end;
private macro AddCol (ar,ind, fld, head, width, rdonly)
    ar.value (ind * 6)     = fld;
    ar.value (ind * 6 + 1) = head;
    ar.value (ind * 6 + 2) = width;
    ar.value (ind * 6 + 3 ) = 1;   // fldType
    ar.value (ind * 6 + 4 ) = 0;   // decPoint
    ar.value (ind * 6 + 5 ) = 0;   // reserv
end;
/*Для оперов*/

private MACRO GetOper;  
  var kodop;
  var stquery;

 col = TArray;
 
 cmd = RSDCommand (cn,"select t_oper, t_name"
                     +" from dperson_dbt"
                     +" where t_oper in "
                     +"(select t_oper "
                   +"from dop_otdel_dbt "
                   +"where (t_dateend >= to_date('" +{curDate} + "','DD-MM-YYYY') or t_dateend = '01.01.0001') and t_datebegin <= to_date('" + {curDate} + "','DD-MM-YYYY')) "
                   +"order by t_oper");

  rs = RSDRecordset(cmd , RSDVAL_CLIENT, RSDVAL_Static );
 
  AddCol (col, 0, "t_oper", "N" , 5 , false);
  AddCol (col, 1, "t_name", "N2" , 5 , false);
   
  if (RunScroll(rs,
                 2,
               col,
              null,
           @EvProc, "Список операционистов","'Enter'- Выбор' ESC'- Выход",false,null,null,50,15))
    kodop=rs.Value("t_oper"); // тащим
   return kodop;
 
  
 end;
end;
/*Массовое изменения опера на проводке и документе*/
private macro mass_change_oper
var ch_b;
debugbreak;
 if (checks)
  acc_trn="dacctrn_dbt doc";
  acc_trn2="dacctrn_dbt doc";
  pred="";
 else
 /*покрытие обрабатываем в валюте*/
 /*но если внебаланс, тогда вообще не делаем проверку!*/
 ch_b=GetChapter(ch_r);
 
  acc_trn="dacctrn_dbt doc,daccount_dbt acc,daccount_dbt acc2";
 
  acc_trn2="dacctrn_dbt doc";
 
  pred=   " AND acc.t_chapter = doc.t_chapter"+
          " AND acc2.t_chapter = doc.t_chapter"+
          " AND acc2.t_account = doc.t_account_receiver"+
          " AND acc.t_account = doc.t_account_payer";
  if (ch_b!=3)/*если это не внебаланс, тогда осуществляем проверку LAO 13.12.2012*/
   pred= pred+ " and doc.T_RESULT_CARRY not in (14, 18, 83) "+
          " and acc.t_type_account  not  like '%П%'  and acc.t_type_account not like '%Н%'"+ 
          " and acc.t_type_account not like '%U%'"+
          " and acc2.t_type_account  not  like '%П%'  and acc2.t_type_account not like '%Н%'"+ 
          " and acc2.t_type_account not like '%U%'";  
  end;        
 end;
 predicate="";
 if (dlg.rec.NArh !="")
  predicate=" and doc.T_NUMB_DOCUMENT='"+dlg.rec.NArh+"'";
 
 end; 
 if (dlg.rec.IdArh !="")
  predicate=predicate+" and doc.T_acctrnid='"+dlg.rec.IdArh+"'";
 end; 

/*очищаем таблицу, если она заполнена, табл. нужна для исключения дублей по проводкам*/

  tr = RSDCommand("truncate table USR_DARHDOC_CHOPER_TMP"); 
  tr.Execute;

 /* startQueryCapture ();*//*находим проводки!*/
 sql="SELECT * FROM "+ acc_trn+" WHERE   doc.T_DATE_CARRY BETWEEN ? AND ? and  doc.t_oper=? ";
          
   

  sql = sql+predicate+pred;
  sql = execSqlSelect (sql, makeArray (SqlParam ("dateb",dlg.rec.BDate),
  SqlParam ("datee",dlg.rec.EDate),SqlParam ("oper",dlg.rec.NOper)));
  move=0;

  SetOutput(f_rep_change,false);
 /* dlg.rec.IdArh=akey;
  dlg.rec.BDate=date_n;
  dlg.rec.EDate=date_n;
  dlg.rec.NArh=num_n;
  dlg.rec.NOper=oper_n;
  dlg.rec.NOperNEW={oper};*/
 WriteFiscLog(OLstrproc, "Начало процедуры изменения операциониста на проводке/документе\n" + 
                                                       "Начало периода: " + dlg.rec.BDate + "\n"
                                                       "Конец периода: " + dlg.rec.EDate+ "\n"
                                                       "ID проводки: " + dlg.rec.IdArh + "\n"
                                                       "Номер проводки: " + dlg.rec.NArh + "\n"
                                                       "Старый операционист: " +  dlg.rec.NOper + "\n"
                                                       "Новый операционист : " + dlg.rec.NOperNEW+ "\n");
while ((sql)and(sql.moveNext()))
 LoopInTrn(true);
 st=ProcessTrn(NULL, "change_oper" );
 if (not st)
 [Произошла ошибка! операция изменения операциониста по проводке(t_acctrnid):############## не зафисксирована](sql.value("T_acctrnid"));
  
 end; 
end;
            
            

 
 
WriteFiscLog(OLfinproc, "Окончание процедуры изменения операциониста на проводке/документе");  
if (move==0)
 msgbox("По заданным параметрам проводок не найдено");
 SetOutput(null,false);
 close(f_rep_out);
else
 SetOutput(null,false);
 if ((ExistFile(f_rep_change,0)) and (open(f_rep_out,f_rep_change)))
  viewFile(f_rep_out);
  close(f_rep_out);	
 end;
end;

end;



//обработка нажатий клавиш, работа с диалоговыми формами...
  macro event_op (dlg, cmd, id, key)
 if(cmd == DLG_INIT)
  dlg.rec.IdArh=akey;
  dlg.rec.BDate=date_n;
  dlg.rec.EDate=date_n;
  dlg.rec.NArh=num_n;
  dlg.rec.NOper=oper_n;
  dlg.rec.NOperNEW={oper};
  UpdateFields(dlg); 
 end;
 if (cmd == DLG_KEY)
     /**/
     if (KEY == KEY_ESC)
       return exit(1);//CM_CANCEL;
     /*Выбор данных из списка*/
      elif ( KEY == KEY_F3)
       if (FldName(dlg,id) == "NOper")
        dlg.rec.NOper =GetOper();
        UpdateFields(dlg);
       end; 
       if (FldName(dlg,id) == "NOperNEW")
        dlg.rec.NOperNEW =GetOper();
        UpdateFields(dlg);
       end; 
      elif ( KEY == KEY_F2)
       if  (dlg.rec.NOper==dlg.rec.NOperNEW)
        msgbox("Ошибка. Новый операционист = Старый операционист!");
        return CM_IGNORE;
       else 
        mass_change_oper;
       end;
      
      
      
      
      elif ( KEY == KEY_ENTER)
       if (FldName(dlg,id) == "NOperNEW")
        return CM_IGNORE;
       end; 
     /* msgbox(akey+"  "+koper+"  "+soper+"   "+string(checks));
     */
     end;
  end;   
end;

macro strartoperchange(acctrnid,d_date,d_oper,d_num,ch,ac_chapt)
 akey=acctrnid;
 date_n=d_date;
 oper_n=d_oper;
 num_n=d_num;
 checks=ch;
 ch_r=ac_chapt;
 if (RunDialog(dlg, "Event_op"))

 end;
end;

end;