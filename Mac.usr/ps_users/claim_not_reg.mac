/*Тихомиров А.Н. Макрос Отчета по Незарегистрированным претензиям*/

import RSD, bankinter, globals, календарь;
debugbreak;
var DateRep, datedoc;
GetRegistryValue("PRBB\\USR_CLAIM\\CLAIM_DATE_REG",2,DateRep);
DateRep = date(DateRep);

var datebegin, dateend;                            

var Fulloutputl, outl, outputl="Calim_acc.lbr";                    
GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
Fulloutputl = FindPath(outputl, outl);
   if (not Fulloutputl)
      msgbox("Не найдена LBR");
      exit();
   end;

var dlg = TRecHandler("arm", fulloutputl, TRUE); 

const  KEY_F1      =315;
const  KEY_F2      =316;
const  KEY_F3      =317;
const KEY_ESC      = 27;
const KEY_SPACE    = 32;
const KEY_ENTER    = 13;

private macro Name(id)
var c = rsdcommand("select t_name from dperson_dbt where t_oper = ?" );
c.addparam("ID",RSDBP_IN,id);
c.execute;
var r = rsdrecordset(c);
if (r.movenext())
return r.value(0);
end;
return " ";
end;

private macro outall()
/*
var cmd = rsdcommand(" SELECT cl.t_account, t_claimid, 'Претензия' as type "+
"  FROM dacclaim_dbt cl "+
" WHERE cl.t_sysdate >= ? "+
"   AND cl.t_initiator = 1 "+
"   AND not EXISTS (SELECT 1 "+
"                 FROM usr_claim "+
"                WHERE t_claimid = cl.t_claimid and t_changedoc = CHR (0) and t_flag = CHR(88)) "+
"union all "+
" select t_Account, t_claimid, 'Изменяющий' as type  "+
" from dacclaim_dbt where t_claimid in ( "+
" SELECT distinct(cl.t_claimid) "+
"  FROM dacclmcng_dbt cl "+
" WHERE cl.t_sysdate >= ? "+
"   AND cl.t_initiator = 1 "+
"   AND not EXISTS (SELECT 1 "+
"                 FROM usr_claim "+
"                WHERE t_claimid = cl.t_claimid and t_changedoc = CHR (88) and t_flag = CHR(88))) "+
"                order by t_account");  */

var cmd = rsdcommand("SELECT   * "+
  "  FROM ( (SELECT init.t_name, cl.t_sysdate, cl.t_docdate, cl.t_account, "+
  "               pers.t_name AS NAME, cl.t_oper, cl.t_claimid, cl.t_docnumber, cl.t_comment, "+
  "               'Претензия' AS TYPE "+
  "          FROM dacclaim_dbt cl, dacclaiminit_dbt init, dperson_dbt pers "+
  "         WHERE cl.t_sysdate BETWEEN ? AND ? "+
  "           AND cl.t_initiator = 1 "+
  "           AND init.t_initiatorid = cl.t_initiator "+
  "           AND pers.t_oper = cl.t_oper "+
  "           AND (   NOT EXISTS ( "+
  "                      SELECT 1 "+
  "                        FROM usr_claim "+
  "                       WHERE t_claimid = cl.t_claimid "+
  "                         AND t_changedoc = CHR (0) "+
  "                         AND t_flag = CHR (88)) "+
  "                OR EXISTS ( "+
  "                      SELECT 1 "+
  "                        FROM usr_claim c "+
  "                       WHERE c.t_claimid = cl.t_claimid "+
  "                         AND c.t_changedoc = CHR (0) "+
  "                         AND c.t_flag = CHR (88) "+
  "                         AND c.t_enternum = '0') "+
  "               ) "+
  "               ) "+
  "        UNION ALL "+
  "       ( SELECT init.t_name, cc1.t_sysdate, cc1.t_docdate, cl1.t_account, "+
  "               pers.t_name AS NAME, cc1.t_oper, "+
  "               cc1.t_changedocid AS t_claimid,  cl1.t_docnumber, cc1.t_comment, 'Изменяющий' AS TYPE "+
  "          FROM dacclmcng_dbt cc1, "+
  "               dacclaim_dbt cl1, "+
  "               dacclaiminit_dbt init, "+
  "               dperson_dbt pers "+
  "         WHERE cc1.t_sysdate BETWEEN ? AND ? "+
  "           AND cc1.t_initiator = 1 "+
  "           AND (   NOT EXISTS ( "+
  "                      SELECT 1 "+
  "                        FROM usr_claim cc "+
  "                       WHERE cc.t_claimid = cc1.t_changedocid "+
  "                         AND cc.t_changedoc = CHR (88) "+
  "                         AND cc.t_flag = CHR (88)) "+
  "                OR EXISTS ( "+
  "                      SELECT 1 "+
  "                        FROM usr_claim ccc "+
  "                       WHERE ccc.t_claimid = cc1.t_changedocid "+
  "                         AND ccc.t_changedoc = CHR (88) "+
  "                         AND ccc.t_flag = CHR (88) "+
  "                         AND ccc.t_enternum = '0') "+
  "               ) "+
  "           AND init.t_initiatorid = cc1.t_initiator "+
  "           AND pers.t_oper = cc1.t_oper "+
  "           AND cl1.t_claimid = cc1.t_claimid "+
  "           )) "+
" ORDER BY  t_sysdate, t_account"); 
//println(cmd.cmdtext);
//getstring(cmd.cmdtext);
cmd.addparam("date",RSDBP_IN, Datebegin);
cmd.addparam("date2",RSDBP_IN, Dateend);
cmd.addparam("date3",RSDBP_IN, Datebegin);
cmd.addparam("date4",RSDBP_IN, Dateend);
var rsd = rsdrecordset(cmd);
[            Незарегистрированные претензии за период с ############# по ###########
┌────────────────────┬─────────────┬───────────┬───────────────────┬──────────┬──────────┬───────┬────────────────────────┬───────────────────────────┐
│####################│#############│###########│###################│##########│##########│#######│########################│###########################│
├────────────────────┼─────────────┼───────────┼───────────────────┼──────────┼──────────┼───────┼────────────────────────┼───────────────────────────┤]
(datebegin, dateend, "Номер счета":w:c, "Тип документа":w:c, "Дата регистрации":w:c, "Инициатор претензии":w:c, "Номер док-та":w:c, "Дата док-та":w:c, "Номер опер":w:c, "ФИО опер":w:c, "Примечание":w);
while (rsd.movenext())

if (rsd.value("t_docdate") == " 1.01.0001 (00:00:00.00)")
datedoc = "";
else
datedoc = date(rsd.value("t_docdate"));
end;

[│####################│#############│###########│###################│##########│##########│#######│########################│###########################│]
(rsd.value("t_account"), rsd.value("type"), date(rsd.value("t_sysdate")), rsd.value("t_name"), rsd.value("t_docnumber"):c, datedoc, rsd.value("t_oper"), rsd.value("name"):w, rsd.value("t_comment"):w);
end;
[└────────────────────┴─────────────┴───────────┴───────────────────┴──────────┴──────────┴───────┴────────────────────────┴───────────────────────────┘

Исполнитель: ############################# 
Дата выпуска: ##########
Время: ##########]

(name({oper}), {curdate}, time());

end;

 /*Обработчик диалоговой панели ввода исходных данных для печати*/
MACRO Event (dlg, cmd, id, key) 

   var const_mess = "~F2~ Продолжить ~ESC~ Выход ";
   var const_mess2 = "~F2~ Продолжить ~SPACE~ ~ESC~ Выход ";

   /*Первоначальная инициализация полей*/
   if(cmd == DLG_INIT)
      dlg.rec.DateBegin = DateRep;
      dlg.rec.DateEnd = {curDate};
      UpdateFields(dlg); 
   end;
   
   /*Установка подсказок в строке состояния*/
   if (cmd==DLG_SETFOCUS)
     if (FldName(dlg,id)=="DateBegin")
       message(" ~F3~ Выбор даты из календаря "+const_mess);
     elif (FldName(dlg,id)=="DateEnd")
       message(" ~F3~ Выбор даты из календаря "+const_mess);
    end;
   end;
   
   if (cmd == DLG_REMFOCUS)
     /*Проверка корректности дат отчета*/
     if (FldName(dlg,id) == "DateBegin")
       if ( dlg.rec.DateBegin > {curdate} )
         MsgBox("Дата начала периода не может быть больше даты текущего операционного дня");
        return CM_CANCEL;
       elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
         MsgBox("Дата начала периода не может быть больше даты окончания периода");
        return CM_CANCEL;
       end;
     end;
     if (FldName(dlg,id) == "DateEnd")
       if ( dlg.rec.DateEnd > {curdate} )
         MsgBox("Дата не может быть больше даты текущего операционного дня");
        return CM_CANCEL;
       elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
         MsgBox("Дата окончания периода не может быть меньше даты начала периода");
        return CM_CANCEL;
       end;

    end;
      UpdateFields(dlg); 
   end;

   if (cmd == DLG_KEY)
     /*Выход из диалогового окна формирования отчета*/
     if (KEY == KEY_ESC)
       return exit(1);//CM_CANCEL;
     /*Выбор данных из списка*/
     elif ( KEY == KEY_F3)
        /*Выбор даты из календаря*/
        if (FldName(dlg,id) == "DateBegin")
          dlg.rec.datebegin = GetDateByCalendar ({curDate});
        end;
        if (FldName(dlg,id) == "DateEnd")
          dlg.rec.dateend = GetDateByCalendar ({curDate});
        end;
        

     elif (( KEY == KEY_F2 )  or ( KEY == KEY_ENTER ))         //Проверки при вводе
         if ( dlg.rec.DateBegin > {curdate} )
                MsgBox("Дата начала периода не может быть больше даты текущего операционного дня");
                return CM_IGNORE;
          elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
                MsgBox("Дата начала периода не может быть больше даты окончания периода");
                return CM_IGNORE;
         end;
          if ( dlg.rec.DateEnd > {curdate} )
                MsgBox("Дата не может быть больше даты текущего операционного дня");
                return CM_IGNORE;
          elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
                MsgBox("Дата окончания периода не может быть меньше даты начала периода");
                return CM_IGNORE;
          end;
          if ( dlg.rec.DateEnd < date(DateRep) )
                MsgBox("Вы ввели дату, меньшую, чем начало действия регистрации в V6");
                return CM_IGNORE;
          end;
        Datebegin  = dlg.rec.Datebegin;
        Dateend = dlg.rec.DateEnd;
         if ((Datebegin < {curDate}))    
           Return CM_SAVE;
        elif (gettrue(true,"Дата равна текущему опрерационному дню. Продолжить?"))
           Return CM_SAVE;
           
        end;
      else
           Return CM_IGNORE;
     end;
   end;
        
END;






if (RunDialog(dlg, "Event"))                  
  OutAll;
end;
