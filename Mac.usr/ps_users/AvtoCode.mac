//Автоматическое проставление кодов ВО в п\п\к
// после констант в "Предобработка п/п/к"*/
//получить код страны нерезидента из карточки субъекта {GBR}
// EVG 26/06/2014 Сделал подстановку номера кода ВО везде, где задаётся его id 
// TAM 27.02.2015 C-37160 
// VDN R-627272-2 13.11.2015

Import "SetVOStaff.mac";

var pm_co = trechandler("pmco");

private macro GetCodNer(ppID:integer)
    var query:string = "select T_nrcountry from dparty_dbt where t_partyid=" + PPid;
    var rs:RsdRecordset = execSQLselect(query);
    if( rs.moveNext() )
        return rs.Value(0);
    else
        msgbox("Ошибка получения кода страны нерезидента");
        return "";
    end;
end;

//получить ID признака по коду страны строго для 5 группы!!!   //возможно t_ojecttype=501
private macro GetAttrid(CC:string) 
    var query:string = "select t_attrid from dobjattr_dbt where t_groupID=5 and t_codelist= " + "'"+ CC +"'";
    //  msgbox(query);
    var rs:RsdRecordset = execSQLselect(query);
    if( rs.moveNext() )
        //   msgbox(rs.Value(0));
        return rs.Value(0);
    else
        msgbox("Ошибка получения кода признака");
        return "";
    end;
end;

/* EVG 26/06/2014 Слизал из asvkb.mac */
//Возвращает 5тизначный код ВО
private macro GetCodVO(element:integer)
  var query:string = "select t_code from dllvalues_dbt where t_list=1805 and t_element=" + element;
  var rs:RsdRecordset = execSQLselect(query);
  if( rs.moveNext() )
    return rs.Value(0);
  else
  msgbox("Ошибка получения ");
   return "";
  end;
end; 

MACRO AvCodeVoPPK(Obj,paymentObj, fl)
    var MaskaD="";
    var MaskaK="";
    //if(fl==2)
    //Str! Если конверсия, то КВО=01040 
    If(obj.bcordkind==3)
        MaskaD="401-407, 40802????????0*";
        MaskaK="401-407, 40802????????0*";
        If (not(CompareStrWithMasks (MaskaD,PaymentObj.PayerAccount))And
            not(CompareStrWithMasks (MaskaK,PaymentObj.ReceiverAccount)))
            //msgBox("Конверсия валюты резидентом");
            //PaymentObj.VO_code=5; //01040;
            //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
            if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                pm_co.rec.vo_code = 5;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                //09.10.2012 TAM I-00263198-2
                pm_co.rec.contractfiid = -1;
                paymentObj.pmco.update(pm_co);
            else
                pm_co.clear();
                pm_co.rec.vo_code = 5;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                //09.10.2012 TAM I-00263198-2
                pm_co.rec.contractfiid = -1;
                paymentObj.pmco.insert(pm_co);
            end;
            Paymentobj.categories.ConnectAttr(117,165,null,null,{curdate});
        End;
    End;
    //Str! Если покупка 
    If(obj.bcordkind==1)
        MaskaD="401-407,40802810*";
        MaskaK="401-407,40802????????0*";
        If (not(CompareStrWithMasks (MaskaD,PaymentObj.PayerAccount))And
            not(CompareStrWithMasks (MaskaK,PaymentObj.ReceiverAccount)))
            //msgBox("Покупка валюты резидентом с зачислением на  текущий валютный счет");
            //PaymentObj.VO_code=4; //01030
            //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
            if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                pm_co.rec.vo_code = 4;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                //09.10.2012 TAM I-00263198-2
                pm_co.rec.contractfiid = -1;
                paymentObj.pmco.update(pm_co);
            else
                pm_co.clear();
                pm_co.rec.vo_code = 4;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                //09.10.2012 TAM I-00263198-2
                pm_co.rec.contractfiid = -1;
                paymentObj.pmco.insert(pm_co);
            end;
            Paymentobj.categories.ConnectAttr(117,165,null,null,{curdate});
            /* // Заполнить примечание
                note="333222111";
                if( Obj.Notes.AddNote( 101,note, err_mes ) != 0 )
                msgbox( "Ошибка при вставке примечания платежа" );
                return -1;
                end;*/
        end;
        MaskaD="40807810*";
        MaskaK="40807*";
        If (not(CompareStrWithMasks (MaskaD,PaymentObj.PayerAccount))and
            not(CompareStrWithMasks (MaskaK,PaymentObj.ReceiverAccount)))
            //MsgBox("Покупка валюты нерезидентом");
            //PaymentObj.VO_code=8;//02020
            //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
            if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                pm_co.rec.vo_code = 8;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                //09.10.2012 TAM I-00263198-2
                pm_co.rec.contractfiid = -1;
                //TAM 14.12.12 I-00294771-3 - заглушка на неверное заполнение суммы операции по ВК из ИК
                if(paymentObj.origin == 2) //ИК
                  pm_co.rec.amount = 0;
                end;
                paymentObj.pmco.update(pm_co);
            else
                pm_co.clear();
                pm_co.rec.vo_code = 8;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                //09.10.2012 TAM I-00263198-2
                pm_co.rec.contractfiid = -1;
                //TAM 14.12.12 I-00294771-3 - заглушка на неверное заполнение суммы операции по ВК из ИК
                if(paymentObj.origin == 2) //ИК
                  pm_co.rec.amount = 0;
                end;
                paymentObj.pmco.insert(pm_co);
            end;
            Paymentobj.categories.ConnectAttr(117,165,null,null,{curdate});
            //вставка кода страны плательщика нерезидента в 5 категорию Платежа
            Paymentobj.categories.ConnectAttr(5,GetAttrid(GetCodNer(PaymentObj.payer)),null,null,{curdate});
        End; 
    End;
    //Str! Если продажа 
    If(obj.bcordkind==2)
        MaskaD="40807*";
        MaskaK="40807810*";
        If (not(CompareStrWithMasks (MaskaD,PaymentObj.PayerAccount))And
            not(CompareStrWithMasks (MaskaK,PaymentObj.ReceiverAccount)))
            //msgBox("Продажа валюты нерезидентом");
            //PaymentObj.VO_code=7;//02010
            //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
            if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                pm_co.rec.vo_code = 7;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                //09.10.2012 TAM I-00263198-2
                pm_co.rec.contractfiid = -1;
                //TAM 14.12.12 I-00294771-3 - заглушка на неверное заполнение суммы операции по ВК из ИК
                if(paymentObj.origin == 2) //ИК
                  pm_co.rec.amount = 0;
                end;
                paymentObj.pmco.update(pm_co);
            else
                pm_co.clear();
                pm_co.rec.vo_code = 7;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                //09.10.2012 TAM I-00263198-2
                pm_co.rec.contractfiid = -1;
                //TAM 14.12.12 I-00294771-3 - заглушка на неверное заполнение суммы операции по ВК из ИК
                if(paymentObj.origin == 2) //ИК
                  pm_co.rec.amount = 0;
                end;
                paymentObj.pmco.insert(pm_co);
            end;
            Paymentobj.categories.ConnectAttr(117,165,null,null,{curdate});
            //вставка кода страны плательщика нерезидента в 5 категорию Платежа
            Paymentobj.categories.ConnectAttr(5,GetAttrid(GetCodNer(PaymentObj.payer)),null,null,{curdate});
            /* // Заполнить примечание
                note="333222111";
                if( Obj.Notes.AddNote( 101,note, err_mes ) != 0 )
                msgbox( "Ошибка при вставке примечания платежа" );
                return -1;
                end;*/
        end;
        MaskaD="401-407,40802*"; //"401-407,40802????????0*"; TAM 13.09.2012 I-00251889-2
        MaskaK="401-407,40802810*";
        If (not(CompareStrWithMasks (MaskaD,PaymentObj.PayerAccount))and
            not(CompareStrWithMasks (MaskaK,PaymentObj.ReceiverAccount)))
            //      MsgBox("Продажа валюты резидентом с текущего валютного счета");
            //PaymentObj.VO_code=2;//01010
            //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
            if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                pm_co.rec.vo_code = 2;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                //09.10.2012 TAM I-00263198-2
                pm_co.rec.contractfiid = -1;
                paymentObj.pmco.update(pm_co);
            else
                pm_co.clear();
                pm_co.rec.vo_code = 2;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                //09.10.2012 TAM I-00263198-2
                pm_co.rec.contractfiid = -1;
                paymentObj.pmco.insert(pm_co);
            end;
            Paymentobj.categories.ConnectAttr(117,165,null,null,{curdate});
        End; 
    End;
End; //MACRO AvCodeVoPPK


/* A.Gregeradsky - 16.11.2009 */
private macro ПлатежКомиссии(acnt)
    var q, cmd, rs;
    q="SELECT * FROM daccount_dbt WHERE t_chapter = 1 AND t_account = '"+acnt+"'";
    cmd = RsdCommand(q);
    rs = RsdRecordSet(cmd);
    if(rs.MoveNext())
        if(index(rs.Value("t_nameaccount"),"Комисс") == 1)
            return true;
        end;
        return false;
    else
        return null;
    end;
end;
/* End Gregeradsky */

/*********************************************************************************************************************/
MACRO AvCodeVo(paymentObj)
    var MaskaD="";
    var MaskaK="";
    var AccReceiver = "", ok = "";
    var pi :TRecHandler = TRecHandler( "pmaddpi.dbt" );
    getRegistryValue("PS\\REQOPENACC\\173-ФЗ СЧЕТА НЕРЕЗИДЕНТОВ\\СЧЕТА НЕРЕЗИДЕНТОВ", V_string, MaskaD);
    /* EVG Если комиссия с НДС, то счета-получатели находятся в уточняющих записях. Перебираем их
    и находим счёт доходов. */
    if( paymentObj.PIList( PRT_Credit ).Size > 0 )
        ok = ((paymentObj.PIList( PRT_Credit ).First() == 0) and (paymentObj.PIList( PRT_Credit ).Current( pi ) == 0));
        while( ok )
            if ( subStr(pi.rec.Account, 1, 5) == "70601" )
                AccReceiver = pi.rec.Account;
            end;
            ok = ((paymentObj.PIList( PRT_Credit ).Next() == 0) and (paymentObj.PIList( PRT_Credit ).Current( pi ) == 0) );
        end;
    else
        AccReceiver = PaymentObj.ReceiverAccount;
    end;
    /*надо доделывать*/
    /*
    //комиссии в пользу уполномоченных банков за совершение операций по счету
    */
    //If(Paymentobj.origin==3)   // бестолковое условие
    /* EVG MaskaD - счета нерезидентов (PS\\REQOPENACC\\173-ФЗ СЧЕТА НЕРЕЗИДЕНТОВ\\СЧЕТА НЕРЕЗИДЕНТОВ)
    MaskaD="40807810*";*/
    MaskaK="70601810?????2102*, 70601810?????2101*";
    //msgbox (AccReceiver);
    If (not(CompareStrWithMasks (MaskaD, PaymentObj.PayerAccount))And
        not(CompareStrWithMasks (MaskaK, AccReceiver)))
        //msgBox("комиссии в пользу уполномоченных банков за совершение операций по счету");
        //PaymentObj.VO_code=204; //99020;
        //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
        if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
            //TAM 10.10.2012 R-111420-2
            //pm_co.rec.vo_code = 204;
            pm_co.rec.vo_code = 343;
            /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
            pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

            paymentObj.pmco.update(pm_co);
        else
            pm_co.clear();
            //TAM 10.10.2012 R-111420-2
            //pm_co.rec.vo_code = 204;
            pm_co.rec.vo_code = 343;
            /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
            pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

            paymentObj.pmco.insert(pm_co);
        end;
        Paymentobj.categories.ConnectAttr(117,165,null,null,{curdate});   
    End;
    //End;
    //комиссии в пользу уполномоченных банков прочие
    /* EVG MaskaD - счета нерезидентов (PS\\REQOPENACC\\173-ФЗ СЧЕТА НЕРЕЗИДЕНТОВ\\СЧЕТА НЕРЕЗИДЕНТОВ)
    MaskaD="40807810*";*/
    MaskaK="70601810?????6203*, 70601810?????6301*, 70601810?????6304*, ";
    MaskaK=MaskaK+"70601810?????7102*, 70601810?????7103*, 70601810?????7202*, ";
    MaskaK=MaskaK+ "70601810?????720304*, 70601810?????6306*";
    If (not(CompareStrWithMasks (MaskaD, PaymentObj.PayerAccount))And
        not(CompareStrWithMasks (MaskaK, AccReceiver)))
        //msgBox("комиссии в пользу уполномоченных банков прочие");
        //PaymentObj.VO_code=212; //99090;
        if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
            pm_co.rec.vo_code = 212;
            /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
            pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

            paymentObj.pmco.update(pm_co);
        else
            pm_co.clear();
            pm_co.rec.vo_code = 212;
            /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
            pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

            paymentObj.pmco.insert(pm_co);
        end;
        Paymentobj.categories.ConnectAttr(117,165,null,null,{curdate});     
    End;
    //комиссии в пользу  банка за совершение операций по счету
    /* EVG Только для валютных платежей */
    if (PaymentObj.BaseFIID > 0)
        MaskaD="401-407, 40802????????0*";
        MaskaK="70601810?????2102*, 70601810?????2101*";
        If (not(CompareStrWithMasks (MaskaD, PaymentObj.PayerAccount))And
            not(CompareStrWithMasks (MaskaK, AccReceiver)))
            //msgBox("комиссии в пользу  банка за совершение операций по счету");
            //PaymentObj.VO_code=203; //99020;
            //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
            if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                pm_co.rec.vo_code = 203;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );
   
                paymentObj.pmco.update(pm_co);
            else
                pm_co.clear();
                pm_co.rec.vo_code = 203;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                paymentObj.pmco.insert(pm_co);
            end;
            Paymentobj.categories.ConnectAttr(117,165,null,null,{curdate});         
        End;
    end;
    //комиссии в пользу  банка  прочие
    /* EVG Только для валютных платежей */
    if (PaymentObj.BaseFIID > 0)
        MaskaD="401-407, 40802????????0*";
        MaskaK="70601810?????6203*, 70601810?????6301*, 70601810?????6304*, ";
        MaskaK=MaskaK+"70601810?????7102*, 70601810?????7103*, 70601810?????7202*, ";
        MaskaK=MaskaK+ "70601810?????720304*, 70601810?????6306*";
        If (not(CompareStrWithMasks (MaskaD, PaymentObj.PayerAccount))And
            not(CompareStrWithMasks (MaskaK, AccReceiver)))
            //msgBox("комиссии в пользу  банка  прочие");
            //PaymentObj.VO_code=212; //99090;
            //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
            if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                pm_co.rec.vo_code = 212;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                paymentObj.pmco.update(pm_co);
            else
                pm_co.clear();
                pm_co.rec.vo_code = 212;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                paymentObj.pmco.insert(pm_co);
            end;
            Paymentobj.categories.ConnectAttr(117,165,null,null,{curdate});         
        End;
    End;
    //Операции по списанию комиссий в ин.валюте с транзитных  счетов резидентов 
    If(paymentObj.docKind==27)
        MaskaD="401-407, 40802????????1*";
        MaskaK="70601810?????2102*, 70601810?????2101*, ";
        MaskaK=MaskaK+"70601810?????6203*, 70601810?????6301*, 70601810?????6304*, ";
        MaskaK=MaskaK+"70601810?????7102*, 70601810?????7103*, 70601810?????7202*, ";
        MaskaK=MaskaK+ "70601810?????720304*, 70601810?????6306*";
        If (not(CompareStrWithMasks (MaskaD, PaymentObj.PayerAccount))And
            not(CompareStrWithMasks (MaskaK, AccReceiver)))
            //msgBox("комиссии в ин.валюте с транзитных  счетов резидентов");
            //PaymentObj.VO_code=186; //61090;
            //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
            if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                pm_co.rec.vo_code = 186;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                paymentObj.pmco.update(pm_co);
            else
                pm_co.clear();
                pm_co.rec.vo_code = 186;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                paymentObj.pmco.insert(pm_co);
            end;
            Paymentobj.categories.ConnectAttr(117,165,null,null,{curdate});         
        End;
    End;
    //Dex - простановка кода 99090 для погашения кредитов (Кредит счета 47422)
    //if(paymentObj.docKind==201)
    if (not PaymentObj.IsExternal)
        if ( PaymentObj.BaseFIID > 0 )
            MaskaD="401*,402*,403*,404*,405*,406*,407*,40802*";
            MaskaK="47422*";
            If (not(CompareStrWithMasks (MaskaD, PaymentObj.PayerAccount))And
                not(CompareStrWithMasks (MaskaK, PaymentObj.ReceiverAccount)))
                if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                    pm_co.rec.vo_code = 212;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );
   
                    paymentObj.pmco.update(pm_co);
                else
                    pm_co.clear();
                    pm_co.rec.vo_code = 212;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.insert(pm_co);
                end;
                //PaymentObj.VO_code=212;
            end;
        end;
        MaskaD="40807*";
        MaskaK="47422*";
        If (not(CompareStrWithMasks (MaskaD, PaymentObj.PayerAccount))And
            not(CompareStrWithMasks (MaskaK, PaymentObj.ReceiverAccount)))
            //PaymentObj.VO_code=212;
            //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
            if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                pm_co.rec.vo_code = 212;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                paymentObj.pmco.update(pm_co);
            else
                pm_co.clear();
                pm_co.rec.vo_code = 212;
                /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                paymentObj.pmco.insert(pm_co);
            end;
            UpdateNRCountryInPaymetnCat(PaymentObj,PaymentObj.Payer, 118);
        end;
    end;
    VAR AcNer = "";
    var AccBank  = "";
    var errAn;
    // Dex - код 99090 для платежей на банковские счета нашего банка
    /*счета нерезидентов*/  
    GetRegistryValue("PS\\REQOPENACC\\173-ФЗ СЧЕТА НЕРЕЗИДЕНТОВ\\ДЛЯ ВК", V_STRING, AcNer, errAn);
    /* EVG Счета банка */
    GetRegistryValue("PS\\REQOPENACC\\СЧЕТА БАНКА", V_STRING, AccBank, errAn);
    if (not PaymentObj.IsExternal) //внутренний 
        if( not(CompareStrWithMasks (AcNer, PaymentObj.PayerAccount)) and
            not(CompareStrWithMasks (AccBank, AccReceiver/*PaymentObj.ReceiverAccount*/)) ) //TAM 27.02.2015 C-37160
            /* A.Gregeradsky - 16.11.2009 - Анализ внутреннего платежа на предмет того, не является ли он платежом по комиссии */
            If(ПлатежКомиссии(AccReceiver/*PaymentObj.ReceiverAccount*/)) //TAM 27.02.2015 C-37160
                //PaymentObj.VO_code=204; /* 99020 - Комиссии */
                //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
                if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                    //TAM 10.10.2012 R-111420-2
                    //pm_co.rec.vo_code = 204;
                    pm_co.rec.vo_code = 343;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );
  
                    paymentObj.pmco.update(pm_co);
                else
                    pm_co.clear();
                    //TAM 10.10.2012 R-111420-2
                    //pm_co.rec.vo_code = 204;
                    pm_co.rec.vo_code = 343;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.insert(pm_co);
                end;
            elif((substr(PaymentObj.PayerAccount,1,5) == "30114") and (substr(PaymentObj.ReceiverAccount,1,5) == "30114"))
                //PaymentObj.VO_code=0; /* Для документов с корреспонденцией 30114 - 30114 коды ВО не нужны. Доработка выполнена по запросу пользователя от 08.12.2009 */
                //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
                if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                    pm_co.rec.vo_code = 0;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.update(pm_co);
                else
                    pm_co.clear();
                    pm_co.rec.vo_code = 0;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.insert(pm_co);
                end;
            else
                //PaymentObj.VO_code=212;
                //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
                if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                    pm_co.rec.vo_code = 212;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.update(pm_co);
                else
                    pm_co.clear();
                    pm_co.rec.vo_code = 212;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.insert(pm_co);
                end;
            end;
        end;
        //AccD = "401*,402*,403*,404*,405*,406*,407*,40802*";
        if ( PaymentObj.BaseFIID > 0 ) // валюта
            MaskaD = "401*,402*,403*,404*,405*,406*,407*,40802*";
            if( not(CompareStrWithMasks (MaskaD, PaymentObj.PayerAccount)) and
                not(CompareStrWithMasks (AccBank, PaymentObj.ReceiverAccount)) )
                //PaymentObj.VO_code=212;
                //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
                if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                    pm_co.rec.vo_code = 212;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.update(pm_co);
                else
                    pm_co.clear();
                    pm_co.rec.vo_code = 212;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.insert(pm_co);
                end;
            end;
        end;
    end;
    //Dex на кассовые(страна нерезмдента)
    if((paymentObj.docKind==410) or (paymentObj.docKind==420) or (paymentObj.docKind==430) or (paymentObj.docKind==440))
        MaskaD="40807*";
        MaskaK="20202*";
        If (not(CompareStrWithMasks (MaskaD, PaymentObj.PayerAccount))And
            not(CompareStrWithMasks (MaskaK, PaymentObj.ReceiverAccount)))
            //PaymentObj.VO_code=212;
            UpdateNRCountryInPaymetnCat(PaymentObj,PaymentObj.Payer, 118);
        end;
        MaskaD="20202*";
        MaskaK="40807*";
        If (not(CompareStrWithMasks (MaskaD, PaymentObj.PayerAccount))And
            not(CompareStrWithMasks (MaskaK, PaymentObj.ReceiverAccount)))
            //PaymentObj.VO_code=212;
            UpdateNRCountryInPaymetnCat(PaymentObj,PaymentObj.Receiver, 119);
        end;
    end;
    //Dex(с тарнзитного на текущий - 61100)
    MaskaD="401*,402*,403*,404*,405*,406*,407*,40802*";
    MaskaK="401*,402*,403*,404*,405*,406*,407*,40802*";
    If (not(CompareStrWithMasks (MaskaD, PaymentObj.PayerAccount))And
        not(CompareStrWithMasks (MaskaK, PaymentObj.ReceiverAccount)))
        if(((substr(PaymentObj.PayerAccount,6,3))!=810)  and ((substr(PaymentObj.ReceiverAccount,6,3))!=810) )
            if((substr(PaymentObj.PayerAccount,1,5)) == (substr(PaymentObj.ReceiverAccount,1,5)))
                if (PaymentObj.Payer == PaymentObj.Receiver)
                    if ((((substr(PaymentObj.PayerAccount,14,1)) == 1) or ((substr(PaymentObj.PayerAccount,14,1)) == 9)) and //TAM 04.09.2014 R-444217
                        ((substr(PaymentObj.ReceiverAccount,14,1)) == 0))
                        //PaymentObj.VO_code=187;
                        //Lavrenov: В 2030 поле PaymentObj.VO_code удалено
                        if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                            pm_co.rec.vo_code = 187;
                            /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                            pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                            paymentObj.pmco.update(pm_co);
                        else
                            pm_co.clear();
                            pm_co.rec.vo_code = 187;
                            /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                            pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                            //TAM 25.06.2012
                            pm_co.rec.contractfiid = paymentObj.BaseFIID;
                            paymentObj.pmco.insert(pm_co);
                        end;
                    end;
                end;
            end;
        end 
    end;
    //TAM 17.04.2012 C-10313
    //Операции по начислению банком процентов на вклады физлиц - нерезидентов
    MaskaD = "706*,47411*";
    MaskaK = "426*,40820*";
    if (not PaymentObj.IsExternal) // для внутренних документов
        if (not (CompareStrWithMasks(MaskaD,PaymentObj.PayerAccount)) and 
            not (CompareStrWithMasks(MaskaK,PaymentObj.ReceiverAccount)))
                //99090 код ВО
                if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                    pm_co.rec.vo_code = 212;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.update(pm_co);
                else
                    pm_co.clear();
                    pm_co.rec.vo_code = 212;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.insert(pm_co);
                end;
        end;
    end;
    //Операции связанные с выдачей кредитов юр. лицам
    MaskaD = "452*,453*,454*";
    MaskaK = "401*,402*,403*,404*,405*,406*,407*,40802*,40807*";
    if (not PaymentObj.IsExternal) // для внутренних документов
        if ( PaymentObj.BaseFIID > 0 ) // валюта
            if (not (CompareStrWithMasks(MaskaD,PaymentObj.PayerAccount)) and 
                not (CompareStrWithMasks(MaskaK,PaymentObj.ReceiverAccount)))
                    //99090 код ВО
                    if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                        pm_co.rec.vo_code = 212;
                        /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                        pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                        paymentObj.pmco.update(pm_co);
                    else
                        pm_co.clear();
                        pm_co.rec.vo_code = 212;
                        /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                        pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                        paymentObj.pmco.insert(pm_co);
                    end;
            end;
        end;
    end;
    //TAM 14.02.2013 C-17433
    MaskaD = "40701*,40702*";
    MaskaK = "30601*";
    if (PaymentObj.BaseFIID > 0) //для валютных документов
        if ((not (CompareStrWithMasks(MaskaD,PaymentObj.PayerAccount)) and 
             not (CompareStrWithMasks(MaskaK,PaymentObj.ReceiverAccount))) or 
            //обратная корреспонденция
            (not (CompareStrWithMasks(MaskaK,PaymentObj.PayerAccount)) and
             not (CompareStrWithMasks(MaskaD,PaymentObj.ReceiverAccount))))
                //80150 код ВО
                if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                    pm_co.rec.vo_code = 347;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.update(pm_co);
                else
                    pm_co.clear();
                    pm_co.rec.vo_code = 347;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.insert(pm_co);
                end;
        end;
    end;
    MaskaD = "40807**";
    MaskaK = "30606*";
    if (PaymentObj.BaseFIID == 0) //для рублевых документов
        if ((not (CompareStrWithMasks(MaskaD,PaymentObj.PayerAccount)) and 
             not (CompareStrWithMasks(MaskaK,PaymentObj.ReceiverAccount))) or
            //обратная корреспонденция
            (not (CompareStrWithMasks(MaskaK,PaymentObj.PayerAccount)) and 
             not (CompareStrWithMasks(MaskaD,PaymentObj.ReceiverAccount))))
                //80050 код ВО
                if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                    pm_co.rec.vo_code = 343;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.update(pm_co);
                else
                    pm_co.clear();
                    pm_co.rec.vo_code = 343;
                    /* EVG 26/06/2014 В 2031 нужно заполнять также и номер кода */
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );

                    paymentObj.pmco.insert(pm_co);
                end;
        end;
    end;
    // TAM C-37160 27.02.2015
    MaskaD = "401*,402*,403*,404*,405*,406*,407*,40802*,40807*";
    if (InList(PaymentObj.docKind, 320, 322) and (PaymentObj.BaseFIID != 0)) 
        if ((not (CompareStrWithMasks(MaskaD,   PaymentObj.PayerAccount)) and 
             not (CompareStrWithMasks("30114*", PaymentObj.ReceiverAccount))))
                //99090 код ВО
                if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
                    pm_co.rec.vo_code = 212;
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );
                    paymentObj.pmco.update(pm_co);
                else
                    pm_co.clear();
                    pm_co.rec.vo_code = 212;
                    pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );
                    paymentObj.pmco.insert(pm_co);
                end;
        end;
    end;

    //VDN R-627272-2 13.11.2015 Валютный банковский ордер код 80150
    MaskaD = "401*,402*,403*,404*,405*,406*,407*,40802*";
    if ( InList(PaymentObj.dockind, 286) and
        (PaymentObj.BaseFIID != 0) and
        (not CompareStrWithMasks(MaskaD, PaymentObj.PayerAccount)) )
       if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
          pm_co.rec.vo_code = 347;
          pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );
          paymentObj.pmco.update(pm_co);
       else
          pm_co.clear();
          pm_co.rec.vo_code = 347;
          pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );
          paymentObj.pmco.insert(pm_co);
       end;
    end;
    
    //VDN R-627272-2 13.11.2015 Взнос наличными в рублях код 60095
    MaskaD = "202*";
    MaskaK = "40807*";
    if ( InList(PaymentObj.dockind, 410) and
        (PaymentObj.BaseFIID == 0) and
        ( (not CompareStrWithMasks(MaskaD, PaymentObj.PayerAccount   ) ) and 
          (not CompareStrWithMasks(MaskaK, PaymentObj.ReceiverAccount) ) ) )
       if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
          pm_co.rec.vo_code = 316;
          pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );
          paymentObj.pmco.update(pm_co);
       else
          pm_co.clear();
          pm_co.rec.vo_code = 316;
          pm_co.rec.vo_codeStr = GetCodVO( pm_co.rec.vo_code );
          paymentObj.pmco.insert(pm_co);
       end;
    end;
End;//MACRO AvCodeVo