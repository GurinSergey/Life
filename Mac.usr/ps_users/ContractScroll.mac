// -------------------------------------------------------------------------------------------------
// @filename: ContractScroll.mac v.1
// @author  : 2013-06-03 TeleshovaAM C-17621
// @desc    : Скроллинг договор к счету
// @changes : 24.07.2013 TeleshovaAM C-22139
//            22.08.2013 TeleshovaAM C-22284
// -------------------------------------------------------------------------------------------------

import Календарь, globals, RSD, "KeyCodes.mac", "ContrProcPanel.mac";

var column_orders = TArray(); // колонки скроллинга
var num_c = 0; //нумерация колонок
var restart_contracts_scroll = true; //перестроить скроллинг
var panel_mode = 0; //0=ввод, 1=просмотр\редактирование;
var procParm:ContrProcParm;
var KeyProc = 0; //код клавиши при выходе из панели договора
var g_Client_ID, g_Client_Account;// счет и идентификатор клиента из списка счетов (account.mac)

macro AddColumn( col, fld, head, width )
   Col.value( num_c * 6 + 0 ) = fld;  // fieldName
   Col.value( num_c * 6 + 1 ) = head; // header 
   Col.value( num_c * 6 + 2 ) = width; // width
   Col.value( num_c * 6 + 3 ) = 2;    // fldType (2 = FBT)
   Col.value( num_c * 6 + 4 ) = null; // decPoint
   Col.value( num_c * 6 + 5 ) = 0;    // reserv
   num_c = num_c + 1;
end;

//Вставка в таблицу информации о договоре к счету
macro InsertContrInfo(params:@ContrProcParm)
   debugbreak;
   var command, rsdcmd, v_last_pay;
   //Спрашиваем дату последней оплаты по договору 01.04.13 
   getDate(v_last_pay,"Обязательно укажите дату последней оплаты по договору!");
   if(v_last_pay == "")
      v_last_pay = (date(1,1,2) - 365);
   end;
   command = " INSERT INTO usr_regular_contr_dbt (t_account, t_client_id, t_contragent_id, " +
               " t_contragent_name, t_contragent_acc, t_contragent_inn, t_contragent_kpp, " +
               " t_contrbank_id, t_contr_number, t_contr_date, t_enter_date, " +
               " t_contr_end_date, t_max_contr_amount, t_sum_by_oblig, t_sum_by_once, " +
               " t_sum, t_pay_day, t_periodical_basis, t_last_day_pay, t_paid_amount, " + 
               " t_form_pay, t_payment_priority, t_ground, t_bound_account, t_add_info, t_last_pay, t_get_acc_rest) " +
      " VALUES   (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ";
   rsdcmd = RSDCommand(command);
   rsdcmd.addparam("account"         ,  RSDBP_IN,  g_Client_Account);
   rsdcmd.addparam("client_id"       ,  RSDBP_IN,  g_Client_ID);
   rsdcmd.addparam("contragent_id"   ,  RSDBP_IN,  params.PartnerId);
   rsdcmd.addparam("contr_name"      ,  RSDBP_IN,  ifthenelse(params.PartnerId == 0, 
                                                   params.PartnerName, null));//TAM 24.07.2013 C-22139
   rsdcmd.addparam("contr_acc"       ,  RSDBP_IN,  params.PartnerAcc);
   rsdcmd.addparam("contr_inn"       ,  RSDBP_IN,  ifthenelse(params.PartnerId == 0, 
                                                   params.PartnerInn, null));//TAM 24.07.2013 C-22139
   rsdcmd.addparam("contr_kpp"       ,  RSDBP_IN,  params.PartnerKPP);
   rsdcmd.addparam("contrbank_id"    ,  RSDBP_IN,  params.PartnerBankId);
   rsdcmd.addparam("contr_number"    ,  RSDBP_IN,  params.ContrNumber);
   rsdcmd.addparam("contr_date"      ,  RSDBP_IN,  params.ContrDate);
   rsdcmd.addparam("enter_date"      ,  RSDBP_IN,  params.ContrEnterDate);
   rsdcmd.addparam("contr_end_date"  ,  RSDBP_IN,  params.ContrValidity);
   rsdcmd.addparam("max_contr_amount",  RSDBP_IN,  params.ContrMaxSum);
   rsdcmd.addparam("sum_by_oblig"    ,  RSDBP_IN,  params.ContrSumByOblig);
   rsdcmd.addparam("sum_by_once"     ,  RSDBP_IN,  params.ContrSumByOnce);
   rsdcmd.addparam("sum"             ,  RSDBP_IN,  params.ContrSum);
   rsdcmd.addparam("pay_day"         ,  RSDBP_IN,  params.ContrPayDay);
   rsdcmd.addparam("periodical_basis",  RSDBP_IN,  params.ContrPeriod);
   rsdcmd.addparam("last_pay"        ,  RSDBP_IN,  ifthenelse((params.ContrLastDayPay == 1), "X",""));
   rsdcmd.addparam("paid_amount"     ,  RSDBP_IN,  params.ContrPaidAmount);
   rsdcmd.addparam("from_pay"        ,  RSDBP_IN,  params.ContrFormPay);
   rsdcmd.addparam("payment_priority",  RSDBP_IN,  params.ContrPaymentPriority); //TAM 21.08.2013 C-22284
   rsdcmd.addparam("ground"          ,  RSDBP_IN,  params.ContrGround);
   rsdcmd.addparam("bound_account"   ,  RSDBP_IN,  params.ContrBoundAccount);
   rsdcmd.addparam("add_info"        ,  RSDBP_IN,  params.ContrAddInfo);
   rsdcmd.addparam("last_pay_day"    ,  RSDBP_IN,  v_last_pay);
   rsdcmd.addparam("get_acc_rest"    ,  RSDBP_IN,  ifthenelse((params.ContrGetAccRest == 1), "X",""));
   rsdcmd.execute();
   restart_contracts_scroll = true;
   return CM_SAVE;
end;

//Вставка в таблицу информации о договоре к счету
macro UpdateContrInfo(params:@ContrProcParm, cntr_id:integer)
   debugbreak;
   var command, rsdcmd;
   command = " UPDATE usr_regular_contr_dbt SET t_account = ?, t_client_id = ?, t_contragent_id = ?, t_contragent_name = ? ," +
   " t_contragent_acc = ?, t_contragent_inn = ?, t_contragent_kpp = ?, t_contrbank_id = ?, t_contr_number = ?, t_contr_date = ?, t_enter_date = ?, " +
            " t_contr_end_date = ?, t_max_contr_amount = ?, t_sum_by_oblig = ?, t_sum_by_once = ?, t_sum = ?, " +
            " t_pay_day = ?, t_periodical_basis = ?, t_last_day_pay = ?, t_paid_amount = ?, t_form_pay = ?, t_payment_priority = ?," +
            " t_ground = ?, t_bound_account = ?, t_add_info = ?, t_get_acc_rest = ? where T_CONTR_ID = ?";
   rsdcmd = RSDCommand(command);
   rsdcmd.addparam("account"         ,  RSDBP_IN,  g_Client_Account);
   rsdcmd.addparam("client_id"       ,  RSDBP_IN,  g_Client_ID);
   rsdcmd.addparam("contragent_id"   ,  RSDBP_IN,  params.PartnerId);
   rsdcmd.addparam("contr_name"      ,  RSDBP_IN,  ifthenelse(params.PartnerId == 0, 
                                                   params.PartnerName, null));//TAM 24.07.2013 C-22139
   rsdcmd.addparam("contr_acc"       ,  RSDBP_IN,  params.PartnerAcc);
   rsdcmd.addparam("contr_inn"       ,  RSDBP_IN,  ifthenelse(params.PartnerId == 0, 
                                                   params.PartnerInn, null));//TAM 24.07.2013 C-22139
   rsdcmd.addparam("contr_kpp"       ,  RSDBP_IN,  params.PartnerKPP);
   rsdcmd.addparam("contrbank_id"    ,  RSDBP_IN,  params.PartnerBankId);
   rsdcmd.addparam("contr_number"    ,  RSDBP_IN,  params.ContrNumber);
   rsdcmd.addparam("contr_date"      ,  RSDBP_IN,  params.ContrDate);
   rsdcmd.addparam("enter_date"      ,  RSDBP_IN,  params.ContrEnterDate);
   rsdcmd.addparam("contr_end_date"  ,  RSDBP_IN,  params.ContrValidity);
   rsdcmd.addparam("max_contr_amount",  RSDBP_IN,  params.ContrMaxSum);
   rsdcmd.addparam("sum_by_oblig"    ,  RSDBP_IN,  params.ContrSumByOblig);
   rsdcmd.addparam("sum_by_once"     ,  RSDBP_IN,  params.ContrSumByOnce);
   rsdcmd.addparam("sum"             ,  RSDBP_IN,  params.ContrSum);
   rsdcmd.addparam("pay_day"         ,  RSDBP_IN,  params.ContrPayDay);
   rsdcmd.addparam("periodical_basis",  RSDBP_IN,  params.ContrPeriod);
   rsdcmd.addparam("last_pay"        ,  RSDBP_IN,  ifthenelse((params.ContrLastDayPay == 1), "X",""));
   rsdcmd.addparam("paid_amount"     ,  RSDBP_IN,  params.ContrPaidAmount);
   rsdcmd.addparam("from_pay"        ,  RSDBP_IN,  params.ContrFormPay);
   rsdcmd.addparam("payment_priority",  RSDBP_IN,  params.ContrPaymentPriority);//TAM 21.08.2013 C-22284
   rsdcmd.addparam("ground"          ,  RSDBP_IN,  params.ContrGround);
   rsdcmd.addparam("bound_account"   ,  RSDBP_IN,  params.ContrBoundAccount);
   rsdcmd.addparam("add_info"        ,  RSDBP_IN,  params.ContrAddInfo);
   rsdcmd.addparam("get_acc_rest"    ,  RSDBP_IN,  ifthenelse((params.ContrGetAccRest == 1), "X",""));
   rsdcmd.addparam("contr_id"        ,  RSDBP_IN,  cntr_id);
   rsdcmd.execute();
   restart_contracts_scroll = true;
   return CM_SAVE;
end;

//Удаление договора к счету
macro DeleteContrInfo(cntr_id:integer)
   var rsdcmd;
   rsdcmd = RSDCommand(" delete from USR_REGULAR_CONTR_DBT where t_contr_id = ? ");
   rsdcmd.addparam("contr_id" , RSDBP_IN, cntr_id);
   rsdcmd.execute();
   restart_contracts_scroll = true;
   return CM_SAVE;
end;

//Обработчик списка договоров к счету
macro ContractsScroll_Proc(rs, cmd, id, key)
   var rsdcmd,rsdrs;
   if(cmd == DLG_KEY)
      if(key == KEY_F9)
         panel_mode = 0;//ввод
         KeyProc = ContrParmPanel( @procParm, panel_mode, 0 ); //при создании айди контракта передаем равным нулю
         if(KeyProc == KEY_F9)
            InsertContrInfo(@procParm);
            return CM_CANCEL;
         end;
      elif((key == KEY_F8) and (gettrue(false,"Удалить договор к счету?")))
         DeleteContrInfo(rs.value("contr_id"));
         return CM_CANCEL;
      elif(key == KEY_ENTER)
         debugbreak;
         panel_mode = 1;//редактирование-просмотр
         KeyProc = ContrParmPanel( @procParm, panel_mode, rs.value("contr_id"));
         if((KeyProc == KEY_F9) and (gettrue(false,"Изменить данные договора?"))) //редактирование
            UpdateContrInfo(@procParm, rs.value("contr_id"));
            return CM_CANCEL;
         end;
         restart_contracts_scroll = true;
         return CM_SAVE;
      elif (key ==KEY_ESC)
         restart_contracts_scroll = false;
         return CM_CANCEL;
      end;
   end;
   return CM_DEFAULT;
end;

macro RunContractsScroll()
   var promt, str,rsdcmd, rsl;
   while(restart_contracts_scroll)
      promt = "~Esc~ Выход  ~Enter~ Просмотр  ~F4~ Поиск  ~F8~ Удалить  ~F9~ Создать";
      str = " SELECT   cntr.t_contr_number num, " +
                     " NVL (pt_c.t_name, cntr.t_contragent_name) contr_name, " +
                     " cntr.t_contragent_acc acnt, " +
                     " pt_b.t_name bnk_name, " +
                     " t_enter_date start_date, " +
                     " t_contr_end_date end_date, " +
                     " t_sum SUM, " +
                     " t_contr_id contr_id " +
            " FROM   usr_regular_contr_dbt cntr " +
            " LEFT JOIN dparty_dbt pt_c ON (CNTR.T_CONTRAGENT_ID = PT_C.T_PARTYID) " +
            " LEFT JOIN dparty_dbt pt_b ON (CNTR.t_contrbank_id = PT_b.T_PARTYID) " +
            " WHERE   cntr.t_account = ? ";
      rsdcmd = RSDCommand  (str);
      rsdcmd.AddParam("account", RSDBP_IN, g_Client_Account);
      //Колонки скроллинга
      AddColumn(column_orders, "num"        , "№ Договора", 10); 
      AddColumn(column_orders, "contr_name" , "Наименование контрагента", 35);
      AddColumn(column_orders, "acnt"       , "Счет контаргента", 25);
      AddColumn(column_orders, "bnk_name"   , "Наименование банка контрагента", 35);
      AddColumn(column_orders, "start_date" , "Дата действия договора", 10);
      AddColumn(column_orders, "end_date"   , "Дата окончания действия", 10);
      AddColumn(column_orders, "sum"        , "Сумма выплаты", 10);
      AddColumn(column_orders, "contr_id"   , "ID договора", 10);
      rsl = RSDRecordset(rsdcmd, null, RSDVAL_STATIC);
      RunScroll( rsl, num_c, column_orders, "contracts_scroll", @ContractsScroll_Proc, "Список договоров на постоянные перечисления к счету : " + g_Client_Account, promt, true, null, null, null, null );
   end;
   restart_contracts_scroll = true;
end;

//точка входа
macro show_contracts(account, clientid)
   g_Client_ID = clientid;
   g_Client_Account = account;
   RunContractsScroll();
end;


// ---------------------------------------------------------------------- //
// EVG 26/4/2016 Функции для вызова списка заявлений только для просмотра //
// ---------------------------------------------------------------------- //

//Обработчик списка договоров к счету
macro ro_ContractsScroll_Proc(rs, cmd, id, key)
   var rsdcmd,rsdrs;
   if(cmd == DLG_KEY)
      if(key == KEY_ENTER)
         panel_mode = 1;//редактирование-просмотр
         KeyProc = ContrParmPanel( @procParm, panel_mode, rs.value("contr_id"));
         if(KeyProc == KEY_F9) //редактирование
            msgbox("Редактирование запрещено.|Пожалуйста, пользуйтесь режимом по Ctrl-Z из формы лицевого счета.");
            return CM_CANCEL;
         end;
         restart_contracts_scroll = true;
         return CM_SAVE;
      elif (key ==KEY_ESC)
         restart_contracts_scroll = false;
         return CM_CANCEL;
      end;
   end;
   return CM_DEFAULT;
end;

macro ro_RunContractsScroll()
   var promt, str,rsdcmd, rsl;
   while(restart_contracts_scroll)
      promt = "~Esc~ Выход  ~Enter~ Просмотр";
      // 5/5/2016 Добавил выборку наименования и кода субъекта
      str = " SELECT  code.t_code, pt_cl.t_name, " +
            "         cntr.t_contr_number num, " +
            "         NVL (pt_c.t_name, cntr.t_contragent_name) contr_name, " +
            "         cntr.t_contragent_acc acnt, " +
            "         pt_b.t_name bnk_name, " +
            "         t_enter_date start_date, " +
            "         t_contr_end_date end_date, " +
            "         t_sum SUM, " +
            "         t_contr_id contr_id " +
            " FROM   usr_regular_contr_dbt cntr " +
            " LEFT JOIN dparty_dbt pt_c ON (CNTR.T_CONTRAGENT_ID = PT_C.T_PARTYID) " +
            " LEFT JOIN dparty_dbt pt_b ON (CNTR.t_contrbank_id = PT_b.T_PARTYID) " +

            // EVG 5/5/2016 Для выборки кода и наименования субъекта
            " LEFT JOIN dparty_dbt pt_cl  ON ( pt_cl.t_partyid = cntr.t_client_id )      " +
            " LEFT JOIN dobjcode_dbt code ON (     code.t_objecttype = 3                 " +
            "                                  AND code.t_codekind   = 1                 " +
            "                                  AND code.t_objectid   = pt_cl.t_partyid   " +
            "                                  AND code.t_state      = 0               ) " ;
      rsdcmd = RSDCommand  (str);

      //Колонки скроллинга

      // EVG 5/5/2016 Добавил колонки
      AddColumn(column_orders, "t_Code"     , "Код клиента", 10); 
      AddColumn(column_orders, "t_Name"     , "Наименование клиента", 35); 

      AddColumn(column_orders, "num"        , "№ Договора", 10); 
      AddColumn(column_orders, "contr_name" , "Наименование контрагента", 35);
      AddColumn(column_orders, "acnt"       , "Счет контаргента", 25);
      AddColumn(column_orders, "bnk_name"   , "Наименование банка контрагента", 35);
      AddColumn(column_orders, "start_date" , "Дата действия договора", 10);
      AddColumn(column_orders, "end_date"   , "Дата окончания действия", 10);
      AddColumn(column_orders, "sum"        , "Сумма выплаты", 10);
      AddColumn(column_orders, "contr_id"   , "ID договора", 10);
      rsl = RSDRecordset(rsdcmd, null, RSDVAL_STATIC);
      RunScroll( rsl, num_c, column_orders, "ro_contracts_scroll", @ro_ContractsScroll_Proc, "Список договоров на постоянные перечисления", promt, true, null, null, null, null );
   end;
   restart_contracts_scroll = true;
end;

//точка входа
macro ro_Show_contracts(account, clientid)
   ro_RunContractsScroll();
end;

// ---------------------------------------------------------------------- //
// EVG 26/4/2016 End                                                      //
// ---------------------------------------------------------------------- //



