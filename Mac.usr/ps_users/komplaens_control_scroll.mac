import bankInter,PaymInter,RCW,CTInter;
import ZubRunScroll, KeyCodes, globals;

record paymRecord( pmpaym );

PRIVATE CONST SUCCESSFUL_CONTROL = 2;
PRIVATE CONST FAIL_CONTROL       = 3;

private var scrollIsRunning = true;

macro markControl( paymentId, mark )
    var cmd = rsdCommand( " DECLARE "

                          "    v_categ      dobjatcor_dbt%ROWTYPE; "
                          "    v_objectid   VARCHAR2 (4000); "

                          " BEGIN "
                          "    v_objectid := LPAD (:paymentid, 10, '0'); "

                          "    DELETE FROM   dobjatcor_dbt "
                          "          WHERE       t_objecttype = 501 "
                          "                  AND t_groupid = 1024 "
                          "                  AND t_object = v_objectid; "

                          "    v_categ.T_OBJECTTYPE    := 501; "
                          "    v_categ.T_GROUPID       := 1023; "
                          "    v_categ.T_ATTRID        := :mark; "
                          "    v_categ.T_OBJECT        := v_objectid; "
                          "    v_categ.T_GENERAL       := CHR (88); "
                          "    v_categ.T_VALIDFROMDATE := :curdate;"//TO_DATE (TO_CHAR (SYSDATE, 'dd.mm.yyyy'), 'dd.mm.yyyy'); "
                          "    v_categ.T_OPER          := :oper; "
                          "    v_categ.T_VALIDTODATE   := TO_DATE ('31.12.9999', 'dd.mm.yyyy'); "
                          "    v_categ.T_SYSDATE       := TO_DATE (TO_CHAR (SYSDATE, 'dd.mm.yyyy'), 'dd.mm.yyyy'); "
                          "    v_categ.T_SYSTIME       := TO_DATE ('01.01.0001 ' || TO_CHAR (SYSDATE, 'hh24:mi:ss'),'dd.mm.yyyy hh24:mi:ss'); "
                          "    v_categ.T_ISAUTO        := CHR (88); "

                          "    INSERT INTO DOBJATCOR_DBT VALUES V_CATEG; "
                          " END; " );

    cmd.AddParam("paymentid", RSDBP_IN, paymentId);
    cmd.AddParam("mark",      RSDBP_IN, mark);
    cmd.AddParam("curdate",   RSDBP_IN, {curdate});
    cmd.AddParam("oper",      RSDBP_IN, {oper});
    cmd.execute;
end;

macro exitScroll( objkakoyto, rs, id, key )
    scrollIsRunning = false;

    return CM_CANCEL;
end;

macro execOperation( objkakoyto, rs, id, key )           
debugbreak;
    private var paymentid = rs.value("T_PAYMENTID");
    private var dockind   = rs.value("T_DOCKIND");

    markControl(paymentid, SUCCESSFUL_CONTROL);

    var stat = PM_ExecuteOperation(paymentid, dockind);

    return CM_CANCEL;
end;

macro rejectOperation( objkakoyto, rs, id, key )
debugbreak;
    private var paymentid = rs.value("T_PAYMENTID");
    private var dockind   = rs.value("T_DOCKIND");

    markControl(paymentid, FAIL_CONTROL);

    var stat = PM_ExecuteOperation(paymentid, dockind);

    return CM_CANCEL;
end;

macro refreshScroll 
    return CM_CANCEL;
end;

private macro main ()             
    var scroll = ZubScroll ();                 

    scroll.Columns.Add ("T_NUMBER",          "Номер",            10, ZUB_SCR_COL_NONEDITABLE);
    scroll.Columns.Add ("T_PAYERACCOUNT",    "Счет плательщика", 20, ZUB_SCR_COL_NONEDITABLE);
    scroll.Columns.Add ("PAYER_BIC",         "Банк плательщика", 20, ZUB_SCR_COL_NONEDITABLE);
    scroll.Columns.Add ("T_RECEIVERACCOUNT", "Счет получателя ", 20, ZUB_SCR_COL_NONEDITABLE);
    scroll.Columns.Add ("RECEIVER_BIC",      "Банк получателя ", 20, ZUB_SCR_COL_NONEDITABLE);
    scroll.Columns.Add ("T_AMOUNT",          "Сумма",            10, ZUB_SCR_COL_NONEDITABLE);
    scroll.Columns.Add ("T_VALUEDATE",       "Дата",             10, ZUB_SCR_COL_NONEDITABLE);
    scroll.Columns.Add ("T_PAYMENTID",       "id платежа " ,     10, ZUB_SCR_COL_NONEDITABLE);
    scroll.Columns.Add ("T_ID_OPERATION",    "id операции ",     10, ZUB_SCR_COL_NONEDITABLE);

    scroll.ScrollReadOnly = true;
    scroll.SqlText = " SELECT   RM.T_NUMBER,"
                     "          PM.T_PAYERACCOUNT, "
                     "          (SELECT   T_CODE "
                     "             FROM   DOBJCODE_DBT "
                     "            WHERE       T_OBJECTTYPE = 3 "
                     "                    AND T_OBJECTID = PM.T_PAYERBANKID "
                     "                    AND T_STATE = 0 "
                     "                    AND T_CODEKIND = 3 "
                     "                    AND ROWNUM = 1) "
                     "             PAYER_BIC, "
                     "          PM.T_RECEIVERACCOUNT, "
                     "          (SELECT   T_CODE "
                     "             FROM   DOBJCODE_DBT "
                     "            WHERE       T_OBJECTTYPE = 3 "
                     "                    AND T_OBJECTID = PM.T_RECEIVERBANKID "
                     "                    AND T_STATE = 0 "
                     "                    AND T_CODEKIND = 3 "
                     "                    AND ROWNUM = 1) "
                     "             RECEIVER_BIC, "
                     "          PM.T_AMOUNT, "
                     "          PM.T_VALUEDATE, "
                     "          PM.T_DOCKIND, "
                     "          PM.T_PAYMENTID, "
                     "          OPR.T_ID_OPERATION "
                     "   FROM   DOPRSTEP_DBT STEP, "
                     "          DPMPAYM_DBT PM, "
                     "          DOPROPER_DBT OPR, "
                     "          DPMRMPROP_DBT RM "
                     "  WHERE       STEP.T_BLOCKID = 11101778 "
//                     "          AND STEP.T_ISEXECUTE = 'R' "
                     "          AND STEP.T_ID_OPERATION = OPR.T_ID_OPERATION "
                     "          AND OPR.T_DOCUMENTID = LPAD (PM.T_PAYMENTID, 34, 0) "
                     "          AND PM.T_PAYMENTID = RM.T_PAYMENTID ";

    scroll.ScrollHead     = "";
    scroll.scrollPrompt   = "";
    scroll.SetMacroOnKeys(KEY_F2, "execOperation");
    scroll.SetMacroOnKeys(KEY_F8, "rejectOperation");
    scroll.SetMacroOnKeys(KEY_ESC,"exitScroll");
    scroll.SetMacroOnKeys(KEY_CTRL_R,"refreshScroll");

    while(scrollIsRunning)
        scroll.was_getrecordset = false;
        scroll.Scroll ();
    end;
end;

main ();
exit(0);
/*
PM.T_NUMBER
PM.T_PAYERACCOUNT
PM.T_RECEIVERACCOUNT
PM.T_AMOUNT
PM.T_VALUEDATE
PM.T_PAYMENTID
OPR.T_ID_OPERATION
*/