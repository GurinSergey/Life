//Программист: Телешова Александра (TAM) 
//Выполнено по заявке С-6867
import BankInter;
import "op_lib.mac";

//Маски счетов в корреспонденции
var DebRub_1 = "40807*,426*,40820*,30111*,30231*";
var KredRub_1 = "401*,402*,403*,404*,405*,406*,407*,40802*";
//TAM 30.11.2012 C-15761
//var KredRub_1 = "401*,402*,403*,404*,405*,406*,407*,40802*,423*,40817*";

//TAM 30.11.2012 C-15761
//var DebRub_2 = "40807*,426*,40820*,30111*,30231*";
var DebRub_2 = "40807*,426*,40820*,30111*,30231*,423*,40817*,40912*";
var KredRub_2 = "40807*";

var DebRub_3 = "401*,402*,403*,404*,405*,406*,407*,40802*";
var KredRub_3 = "40807*";

//TAM 30.11.2012 C-15761
//var DebVal_1 = "40807*,426*,40820*";
var DebVal_1 = "426*,40820*";
var KredRval_1 = "401*,402*,403*,404*,405*,406*,407*,40802*,423*,40817*,40807*";

//TAM 30.11.2012 C-15761
//var DebVal_2 = "401*,402*,403*,404*,405*,406*,407*,40802*,423*,40817*";
var DebVal_2 = "423*, 40817*";
var KredRval_2 = "40807*";

macro GetAccountBO(account:string, fiid)
    var query, table, rs:RsdRecordset;
    if(fiid == 0)
        table = "daccount_dbt";
    else
        table = "daccount$_dbt";
    end;
    query = "select t_branch from daccount_dbt where T_ACCOUNT = '" + account + "'";
    rs = execSQLselect(query);
    if (rs.moveNext())
        return rs.value(0);
    else 
        return " ";
    end;
end;

macro CheckCode(pmid)
    var query, rs:RsdRecordset;
    query = " select t_vo_code from dpmco_dbt where t_paymentid = " + pmid;
    rs = execSQLselect(query);
    if(rs)
        while(rs.moveNext())
            if((rs.Value(0) == 198) or (rs.Value(0) == 199))
                return 0;
            end;
        end;
    end;
    return 1;    
end;

macro IsTransitAccount(account)
    var query, rs:RsdRecordset;
    query = " select t_type_account from daccount$_dbt where t_account = '" + account + "'";
    rs = execSQLselect(query);
    if(rs.moveNext())
        if(Index(rs.Value(0),"Y") != 0)
            return 0;
        end;
    end;
    return 1;  
end;

Macro naVKB( PmObj )
    debugbreak;
    if((not (PmObj.IsExternal)) and CheckCode(PmObj.PaymentID))
        if(PmObj.BaseFIID == 0) //для рублевых
            if(((not CompareStrWithMasks (DebRub_1,PmObj.PayerAccount)) and
            (not CompareStrWithMasks (KredRub_1,PmObj.ReceiverAccount)))
            or ((not CompareStrWithMasks (DebRub_2,PmObj.PayerAccount)) and
            (not CompareStrWithMasks (KredRub_2,PmObj.ReceiverAccount)))
            or ((not CompareStrWithMasks (DebRub_3,PmObj.PayerAccount)) and
            (not CompareStrWithMasks (KredRub_3,PmObj.ReceiverAccount))))
                return 1;
            end;
        else //для валютных
            if(((not CompareStrWithMasks (DebVal_1,PmObj.PayerAccount)) and
            (not CompareStrWithMasks (KredRval_1,PmObj.ReceiverAccount)) and IsTransitAccount(PmObj.ReceiverAccount))
            or ((not CompareStrWithMasks (DebVal_2 ,PmObj.PayerAccount)) and
            (not CompareStrWithMasks (KredRval_2,PmObj.ReceiverAccount))))
                return 1;
            end;
        end;
    end;
    return 0;
    /*if((not(PmObj.IsExternal)) and (PmObj.BaseFIID == 0))
        if((((not CompareStrWithMasks (AccDebet,PmObj.PayerAccount)) and
            (not CompareStrWithMasks (AccKredit,PmObj.ReceiverAccount)))
            or ((not CompareStrWithMasks (AccKredit,PmObj.PayerAccount)) and
            (not CompareStrWithMasks (AccDebet,PmObj.ReceiverAccount))))
            and (GetAccountBO(PmObj.PayerAccount) != GetAccountBO(PmObj.ReceiverAccount)))
            return 1;
        end;
    end;
    return 0;*/
end;