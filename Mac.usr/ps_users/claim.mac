/*Входящие претензии                                         */
/*                                                           */
/*                                                           */
/*Тихомиров А.Н. 10.03.2009               Версия 1.0         */

import bankinter, globals, календарь, RSD;
import "KeyCodes.mac";
import "diver.mac"; //SDA 12.12.2011 - Хватит плодить безотцовщину! 

// KS 28.11.2011 ОТПРАВКА ПИСЕМ-УВЕДОМЛЕНИЙ В LOTUS
import "send_claim.mac";

var Fulloutput2, out2, output2="claim.lbr", SEQ, initiat, initiator_text, reg_date, claim_1, claim_2, claim_3, claim_id;
private var acc;                    

GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,out2);
Fulloutput2 = FindPath(output2, out2);
   if (not Fulloutput2)
      msgbox("Не найдена LBR");
      exit();
   end;

var dlg1 = TRecHandler("claim", fulloutput2, TRUE); 

/*
 Проверить или входит опер в заданную группу СУД
*/

private macro claim_date(claimid)
var c = rsdcommand ("select t_sysdate from dacclaim_dbt where t_claimid =  ?");
c.addparam("CI",RSDBP_IN,claimid);
c.execute();
var r = rsdrecordset(c);
debugbreak;
if (r.movenext())
if ({curdate} - (date(r.value(0))) <= 1)
return true;
end;
else
return false;
end;
end;


private macro cl_date(claimid, regdate)
var c = rsdcommand ("select t_sysdate from dacclaim_dbt where t_claimid =  ?");
c.addparam("CI",RSDBP_IN,claimid);
c.execute();
var r = rsdrecordset(c);
debugbreak;
if (r.movenext())
if ((date(r.value(0)) - regdate) == 0)
return false;
else
return true;
end;
else
return false;
end;
end;


private macro Arhdate(regdate)
var c = rsdcommand ("select 1 from usr_claim where t_enterdate > ?");
c.addparam("date",RSDBP_IN,regdate);
c.execute();
var r = rsdrecordset(c);
debugbreak;
if (r.movenext())
return true;
else
return false;
end;
end;

/* import "diver.mac"; //SDA 12.12.2011 - Хватит плодить безотцовщину! 
Macro ВходитВГруппу(Oper,IdGroup)
 var stat = true; 
 var select, recSet, command;
//msgbox({oper});

 If ({oper} == 10192) //Для теста
   return true;
 End;

 select = "SELECT t_name FROM DACSGROUP_DBT WHERE T_GROUPID = " + IdGroup;
 command = RSDCommand(select);
 command.execute();
 recSet = RSDRecordSet(command, RSDVAL_CLIENT, RSDVAL_STATIC);
 if (recSet and recSet.moveNext())
   select = "select * from DACSGROUPOPER_DBT where T_GROUPID = "+ IdGroup +" and T_OPER = " + Oper;
   command = RSDCommand(select);
   command.execute();
   recSet = RSDRecordSet(command, RSDVAL_CLIENT, RSDVAL_STATIC);
   if (not(recSet and recSet.moveNext()))
    stat = false;
   end;
  else 
   msgbox("Группа с номером " + IdGroup + " не найдена");
   stat = false;
 end;
 return stat;
End;
*/
private macro read(claimid)
debugbreak;
var cmd = rsdcommand("SELECT * "+
"  FROM usr_claim  "+
" WHERE t_claimid = ? "+
"   AND t_flag = CHR(88) "+
"   AND t_changedoc = CHR(0) ");
cmd.addparam("acc", RSDBP_IN, claimid);
var rsd = rsdrecordset(cmd);
if (rsd.movenext())
  claim_1 = rsd.value(1);
  claim_2 = rsd.value(2);
  claim_3 = rsd.value(3);
  return 1;
end;
end;


macro GetInitiator(account)
var cmd = rsdcommand("SELECT party.t_name "+
"  FROM dobjrgdoc_dbt reg, dparty_dbt party, daccount_dbt acc  "+
" WHERE reg.t_regdockind = 14 "+
"   AND reg.t_objecttype = 3 "+
"   AND reg.t_objectid = acc.t_client "+
"   AND acc.t_account = ? "+
"   AND party.t_partyid = reg.t_regpartyid");
cmd.addparam("acc", RSDBP_IN, account);
var rsd = rsdrecordset(cmd);
if (rsd.movenext())
  return rsd.value(0);
end;
 return "";
end;
 
macro getSEQ()
var cmd = rsdcommand("  select t_lastvalue from dmeter_dbt where t_seqid = 1000011 ");
var rsd = rsdrecordset(cmd);
if (rsd.movenext())
  return rsd.value(0);
end;
 return 0;
end;

private macro Reg_claim(claimid)
var cmd = rsdcommand("insert into usr_claim values (?, ?, ?, ?, ?, CHR(88), chr(0), sysdate, chr(0), chr(0)) ");
cmd.addparam("claimid",RSDBP_IN, claimid);
cmd.addparam("SEQ",RSDBP_IN, SEQ);
cmd.addparam("Reg_date",RSDBP_IN, Reg_date);
cmd.addparam("Initiator",RSDBP_IN, Initiator_text);
cmd.addparam("Oper",RSDBP_IN, {oper});
//cmd.addparam("datefrom",RSDBP_IN, {curdate});
cmd.execute;
sendClaimMails(claimid);// KS 28.11.2011 ОТПРАВКА ПИСЕМ-УВЕДОМЛЕНИЙ В LOTUS
return true;
end;
 
private macro Upd_claim(claimid)
var cmd = rsdcommand("update usr_claim set t_flag = chr(0) where t_claimid = ? and t_flag = chr(88)  AND t_changedoc = CHR(0)");
cmd.addparam("claimid",RSDBP_IN, claimid);
cmd.execute;
Reg_claim(Claimid);
sendClaimMails(claimid);// KS 28.11.2011 ОТПРАВКА ПИСЕМ-УВЕДОМЛЕНИЙ В LOTUS
return true;
end;
 
 /*Обработчик диалоговой панели ввода исходных данных для печати*/
MACRO Event1 (dlg, cmd, id, key) 

   var const_mess = "~F2~ Продолжить ~ESC~ Выход ";

   /*Первоначальная инициализация полей*/
   if(cmd == DLG_INIT)
//      SEQ = getSEQ()+1;
      GenerateReference(1000011,SEQ);
      dlg.rec.number  = SEQ;
      dlg.rec.reg_date = {curdate};
      if (Initiat == 1)
      dlg.rec.party_reg = GetInitiator(acc);
      else
      dlg.rec.party_reg = "";
      end;
      message(const_mess);
      UpdateFields(dlg); 
   end;
   
   /*Установка подсказок в строке состояния*/
   if (cmd==DLG_SETFOCUS)
     if (FldName(dlg,id)=="reg_date")
       message(" ~F3~ Выбор даты из календаря "+const_mess);
    end;
   end;
   
   if (cmd == DLG_REMFOCUS)
      UpdateFields(dlg); 
   end;

   if (cmd == DLG_KEY)
     /*Выход из диалогового окна формирования отчета*/
     if (KEY == KEY_ESC)
       RestoreReference(1000011,SEQ);
       return 0;//CM_CANCEL;
     /*Выбор данных из списка*/
     elif ( KEY == KEY_F3)
        /*Выбор даты из календаря*/
        if (FldName(dlg,id) == "Reg_date")
          dlg.rec.reg_date = GetDateByCalendar ({curDate});
        end;
        
     elif ( KEY == KEY_F2 )         //Проверки при вводе

             if (cl_date(claim_id, dlg.rec.reg_date))
                msgbox("Дата ввода претензии не совпадает с датой регистрации");
                Return CM_IGNORE;
               end;
             
           
           
           if (Arhdate(dlg.rec.reg_date))
            IF (gettrue(true,"Есть зарегистрированные претензии следующей датой. необходимо проверить диапазон номеров. Сохранить?"));


//               if (dlg.rec.number == SEQ)
               if (string(dlg.rec.number) != SEQ)
                if (RestoreReference(1000011,SEQ))
                 msgbox("Ошибка определения референса");
                 Return CM_IGNORE;
                end;
                SEQ = dlg.rec.number;
               else
                SEQ = dlg.rec.number;
               end;
              reg_date = dlg.rec.reg_date;

             
             if (strlen(dlg.rec.party_reg) > 0)
               initiator_text = dlg.rec.party_reg;
             else
               initiator_text = " ";
             end;
             Return CM_SAVE;
           else
            Return CM_IGNORE;
           end;
          else
               debugbreak;
//               msgbox(seq);
               if (string(dlg.rec.number) != SEQ)
                if (RestoreReference(1000011,SEQ))
                 msgbox("Ошибка определения референса");
                 Return CM_IGNORE;
                end;
                SEQ = dlg.rec.number;
               else
                SEQ = dlg.rec.number;
               end;
              reg_date = dlg.rec.reg_date;
             if (strlen(dlg.rec.party_reg) > 0)
               initiator_text = dlg.rec.party_reg;
             else
               initiator_text = " ";
             end;
             Return CM_SAVE;
          
          end;
     elif (( KEY != 336 ) and ( KEY != 328 ))         //Проверки при вводе
            Return CM_IGNORE;
     end;
   end;
        
END;


 /*Обработчик диалоговой панели ввода исходных данных для печати*/
MACRO Event5 (dlg, cmd, id, key) 

   var const_mess = "~F2~ Продолжить ~ESC~ Выход ";

   /*Первоначальная инициализация полей*/
   if(cmd == DLG_INIT)
      dlg.rec.number  = Claim_1;
      dlg.rec.reg_date = Claim_2;
      dlg.rec.party_reg = Claim_3;
      message(const_mess);
      UpdateFields(dlg); 
   end;
   
   /*Установка подсказок в строке состояния*/
   if (cmd==DLG_SETFOCUS)
     if (FldName(dlg,id)=="reg_date")
       message(" ~F3~ Выбор даты из календаря "+const_mess);
    end;
   end;
   
   if (cmd == DLG_REMFOCUS)
      UpdateFields(dlg); 
   end;

   if (cmd == DLG_KEY)
     /*Выход из диалогового окна формирования отчета*/
     if (KEY == KEY_ESC)
       if (SEQ)
       RestoreReference(1000011,SEQ);
       end;
       return 0;//CM_CANCEL;
     /*Выбор данных из списка*/
     elif ( KEY == KEY_F3)
        /*Выбор даты из календаря*/
        if (FldName(dlg,id) == "Reg_date")
          dlg.rec.reg_date = GetDateByCalendar ({curDate});
        end;
        
     elif ( KEY == KEY_F2 )         //Проверки при вводе

             if (cl_date(claim_id, dlg.rec.reg_date))
                msgbox("Дата ввода претензии не совпадает с датой регистрации");
                Return CM_IGNORE;
               end;
             
              
              SEQ = dlg.rec.number;
              reg_date = dlg.rec.reg_date;
             if (strlen(dlg.rec.party_reg) > 0)
               initiator_text = dlg.rec.party_reg;
             else
               initiator_text = " ";
             end;
             Return CM_SAVE;
          
     elif (( KEY != 336 ) and ( KEY != 328 ))         //Проверки при вводе
            Return CM_IGNORE;
     end;
   end;
        
END;




 /*Обработчик диалоговой панели ввода исходных данных для печати*/
MACRO Event2 (dlg, cmd, id, key) 

   var const_mess = "~F9~ Редактировать ~ESC~ Выход ";

   /*Первоначальная инициализация полей*/
   if(cmd == DLG_INIT)
      dlg.rec.number  = Claim_1;
      dlg.rec.reg_date = Claim_2;
      dlg.rec.party_reg = Claim_3;
      message(const_mess);
      UpdateFields(dlg); 
   end;
   
  if (cmd == DLG_REMFOCUS)
    UpdateFields(dlg); 
  end;    

   
   if (cmd == DLG_KEY)
     /*Выход из диалогового окна формирования отчета*/
     if (KEY == KEY_ESC)
       return 0;//CM_CANCEL;
     elif ( KEY == KEY_F9 )        //Проверки при вводе
         if (ВходитВГруппу({oper},176))
           Return CM_SAVE;
         else
           msgbox("Вы не принадлежите группе Редактирование входящего номера претензии");
           Return CM_IGNORE;
         end;
      else
           Return CM_IGNORE;
     end;
   end;
        
END;


macro enter_reg(claimid, init, account, flag)
claim_id = claimid;
dlg1 = TRecHandler("claim", fulloutput2, TRUE); 
initiat = init;
acc = account;
if (flag)
if (RunDialog(dlg1, "Event5"))
  Upd_claim(claimid);
end;
else
if (not claim_date(claimid)) 
if (gettrue(true,"ВЫ действительно хотите зарегистрировать документ? "))
if (RunDialog(dlg1, "Event1"))
  Reg_claim(claimid);
end;
end;
else
if (RunDialog(dlg1, "Event1"))
  Reg_claim(claimid);
end;
end;
end;

return 0;
end;

macro read_reg(claimid, init, account)
dlg1 = TRecHandler("claimb", fulloutput2, TRUE); 
acc = account;
initiat = init;
read(claimid);
if (RunDialog(dlg1, "Event2"))
  enter_reg(claimid, init, account, 1);
end;
return 0;
end;

macro look_reg(claimid, init, account)
debugbreak;
/*Точка входа в макрос*/
var sql = rsdcommand("select 1 from usr_claim where t_claimid = ? and t_changedoc = chr(0) and t_flag = chr(88)");
sql.addparam("id",RSDBP_IN,claimid);
var rs = rsdrecordset(sql);
if (rs.movenext())
  read_reg(claimid, init, account);
else
  enter_reg(claimid, init, account);
end;
debugbreak;
return 0;
end;