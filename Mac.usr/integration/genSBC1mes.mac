/*******************************************************************************/
/*  RS-Bank 6.0                                          R-Style Software Lab  */
/*                                                                             */
/*  File Name   : genSBC1mes.mac v.1                                           */
/*  Created     : 16.11.2015                                                   */
/*  Programmer  : Головкин В.Н.                                                */
/*  Description : Выгрузка сообщений в ФНС об изменении реквизитов счетов при  */
/*                закрытии филиалов ЭВ                                         */
/*  Изменен     :                                                              */
/*******************************************************************************/

import "xmlmestools.mac","wlmnstls.mac", rcw, MesInter,RsExts;
import rsbFormsInter, "KeyCodes.mac", PTInter,"loadConformityTable.mac", "lib_account.mac";
/*
 GRANT SELECT ON DDP_DEP_DBT TO RSSAR_TEST;
 GRANT EXECUTE ON RSI_RSBPARTY TO RSSAR_TEST;
 GRANT SELECT ON DPARTY_DBT TO RSSAR_TEST;
 GRANT SELECT ON DADRESS_DBT TO RSSAR_TEST;
 */
private const FT_INTEGER = 0;
private const FT_LONG    = 1;
private const FT_FLOAT   = 2;
private const FT_DOUBLE  = 4;
private const FT_DOUBLEM = 6;
private const FT_STRING  = 7;
private const FT_SNR     = 8;
private const FT_DATE    = 9;
private const FT_TIME    = 10;
private const FT_CHR     = 12;
private const FT_UCHR    = 13;
private const FT_LDMON   = 14;
private const FT_LDMONR  = 15;
private const FT_DOUBLER = 16;
private const FT_LDOUBLE = 17;
private const FT_NUMSTR  = 18;

private const MNS_TPSCHEM = 64;
private const MNS_RLSFORM = 381;
private const MNS_TPFRMT  = 58;
private const MNS_TPID    = 10;

private const beginField  = "_begin";
private const endField    = "_end";

/**
 * Тестовые схемы
 */
/*
PRIVATE CONST SCHEMA_RSSAR = "RSSAR_TEST";
PRIVATE CONST SCHEMA_RSSTA = "RSSTAVR_TEST";
PRIVATE CONST SCHEMA_RSVOR = "RSVOR_TEST";
PRIVATE CONST SCHEMA_RSVOL = "RSVOLG_TEST";
*/
/**
 * Боевые схемы
 */


PRIVATE CONST SCHEMA_RSSAR = "RSBANK_EVS";
PRIVATE CONST SCHEMA_RSSTA = "RSBANK_EVSTA_02";
PRIVATE CONST SCHEMA_RSVOR = "RSBANK_EVVOR";
PRIVATE CONST SCHEMA_RSVOL = "RSBANK_EVV";


class clientDataClass
    class fioClass
        var last_name = "";
        var name = "";
        var patronymic = "";
    end;

    var isResident = true;
    var CodeNP    = 1;
    var NAMENP    = "";
    var INNNP     = "";
    var KPPNP     = "";
    var OGRNNP    = "";
    
    var INNIO     = "";
    var KIO       = "";

    var FIO       = fioClass();
    var INNIP     = "";
    var OGRNIP    = "";
end;

class bankData()
    var RegNom:string = 0;
    var NomF:string = 0;
    var BIC:string = "";
    var NameKO:string = "";
    var INN:string = "";
    var KPP:string = "";
    var OGRN:string = "";
    var PostIndex:string = "";
    var RegionCode:string = "";
    var town:string = "";
    var street:string = "";
    var house:string = "";
end;

class fnsData()
    var partyid:integer = 0;
    var codeKind:integer = PTCK_MNS;
    var code:string = "";
end;

class messageDbInterface()
    private var m_current_index:integer = 0;
    private var m_message_id:integer = null;
    private var m_values:tarray = TArray();

    private var m_direct:string = strFor(0);
    private var m_tp_schemid:integer = null;
    private var m_sessionid:integer = 0;
    private var m_rls_formid:integer = null;
    private var m_outsideabonent:integer = 0;
    private var m_outsideabonentcodekind:integer = null;
    private var m_outsideabonentcode:string = null;
    private var m_kind:integer = null;
    private var m_trn:string = "";
    private var m_outsideabonentdate:date = {curdate};
    private var m_relatedref:string = "";
    private var m_state:integer = 0;
    private var m_bankdate:date = {curdate};
    private var m_sysdate:date = date();
    private var m_systime:time = time();
    private var m_userid:integer = {oper};
    private var m_date:date = {curdate};
    private var m_department:integer = 1;
    private var m_control:string = strFor(88);
    private var m_insideabonentid:integer = 1;
    private var m_insideabonentcodekind:integer = 1;
    private var m_insideabonentcode:string = "";

    class fldValue(_fldName, _fldValue)
        var name  = _fldName;
        var value = _fldValue;
    end;

    macro setOurId(_insideabonentid:integer)
        m_insideabonentid = _insideabonentid;
        return this;
    end;

    macro setOurCodeKind(_insideabonentcodekind:integer)
        m_insideabonentcodekind = _insideabonentcodekind;
        return this;
    end;

    macro setOurCode(_insideabonentcode:integer)
        m_insideabonentcode = _insideabonentcode;
        return this;
    end;

    macro setMessageid(_message_id:integer)
        m_message_id = _message_id;
        return this;
    end;

    macro setDirect(_direct:string)
        m_direct = _direct;
        return this;
    end;

    macro setTpSchem(_tp_schemid:integer)
        m_tp_schemid = _tp_schemid;
        return this;
    end;

    macro setSessionid(_sessionid:integer)
        m_sessionid = _sessionid;
        return this;
    end;

    macro setRlsForm(_rls_formid:integer)
        m_rls_formid = _rls_formid;
        return this;
    end;

    macro setOutsideAbonent(_outsideabonent:integer)
        m_outsideabonent = _outsideabonent;
        return this;
    end;

    macro setOutSideAbonentCodeKind(_outsideabonentcodekind:integer)
        m_outsideabonentcodekind = _outsideabonentcodekind;
        return this;
    end;

    macro setOutSideAbonentCode(_outsideabonentcode:integer)
        m_outsideabonentcode = _outsideabonentcode;
        return this;
    end;

    macro setMessageKind(_kind:integer)
        m_kind = _kind;
        return this;
    end;

    macro setTrn(_trn:string)
        m_trn = _trn;
        return this;
    end;

    macro setOutSideAbonentDate(_outsideabonentdate:date)
        m_outsideabonentdate = _outsideabonentdate;
        return this;
    end;

    macro setRelatedRef(_relatedref:string)
        m_relatedref = _relatedref;
        return this;
    end;

    macro setMessageState(_state:integer)
        m_state = _state;
        return this;
    end;

    macro setBankDate(_bankdate:date)
        m_bankdate = _bankdate;
        return this;
    end;

    macro setSysDate(_sysdate:date)
        m_sysdate = _sysdate;
        return this;
    end;

    macro setSysTime(_systime:time)
        m_systime = _systime;
        return this;
    end;

    macro setOper(_userid:integer)
        m_userid = _userid;
        return this;
    end;

    macro setDate(_date:date)
        m_date = _date;
        return this;
    end;

    macro setDepartment(_department:integer)
        m_department = _department;
        return this;
    end;

    macro setControl(_control:string)
        m_control = _control;
        return this;
    end;

    macro restoreFldPosition()
        m_current_index = 0;
    end;

    macro clearValues()
        m_values = TArray();
    end;

    macro getTpFieldIdByName(_fldName, _tpFieldId)
        private var sql = "SELECT T_TPFIELDID FROM DWLTPFLD_DBT WHERE T_TPID = :tp_id AND T_NAME = :field_name";
        private var cmd = rsdCommand(sql);
                    cmd.addParam("tp_id", RSDBP_IN, MNS_TPID);
                    cmd.addParam("field_name", RSDBP_IN, _fldName);
        private var rs = rsdRecordSet(cmd);

        if(rs.movenext)
            SetParm(2,rs.value("T_TPFIELDID"));
            return true;
        else
            SetParm(2,0);
            return false;      
        end;
    end;

    macro getFieldIdByTpFieldId(_tpFieldId,_fieldId,_field_value)
        private var sql = " SELECT   T_FIELDID "
                          "   FROM   DWLMESFLD_DBT field, (select '" + _field_value + "' val from dual) fld "
                          "  WHERE   field.t_rlsformid = :rls_id AND field.T_TPFIELDID = :tp_field_id "
                          "          AND (1 = CASE WHEN t_groupindex = 1 AND fld.val = (SELECT t_blockname FROM DWLMESFLD_DBT field_value WHERE field_value.t_fieldid = field.t_master) "
                          "                        THEN 1 "
                          "                        WHEN t_groupindex > 1 AND (fld.val = (SELECT t_blockname FROM DWLMESFLD_DBT field_value WHERE field_value.t_fieldid = field.t_master)) "
                          "                        THEN 1 "
                          "                        WHEN t_groupindex > 1 AND NOT EXISTS (SELECT 1 FROM DWLMESFLD_DBT field_value WHERE  field_value.t_blockname = fld.val) "
                          "                        THEN 1 "
                          "                        ELSE 0 "
                          "                   END) ";

        private var cmd = rsdCommand(sql);
                    cmd.addParam("rls_id", RSDBP_IN, MNS_RLSFORM);
                    cmd.addParam("tp_field_id", RSDBP_IN, _tpFieldId);

        private var rs = rsdRecordSet(cmd);

        if(rs.movenext)
            SetParm(2,rs.value("T_FIELDID"));
            return true;
        else
            SetParm(2,0);
            return false;      
        end;
    end;

    macro writeFldValue(_fldName, _fldValue)
        m_values[m_values.size] = fldValue(_fldName, _fldValue);
        m_current_index = m_current_index + 1;
    end;

    macro readFldValue(_fldName, _fldValue)
    
        if(m_current_index >= m_values.size)
            return false;
        end;
    
        SetParm(1,m_values[m_current_index].name);
        SetParm(2,m_values[m_current_index].value);
        m_current_index = m_current_index + 1;

        return true;
    end;

    macro insertValues()
        var FieldName : string = "", 
            FieldValue: string = "";
    
        var fieldId = 0,
            tpFieldId = 0;

        private var index = 1;

        private file wlmesval(wlmesval) WRITE; 
    
        restoreFldPosition();

        while(this.readFldValue(FieldName,FieldValue))
            if(getTpFieldIdByName(FieldName,tpFieldId))
                if(getFieldIdByTpFieldId(tpFieldId,fieldId,FieldValue))
                    clearRecord(wlmesval);
          
                    wlmesval.mesid = m_message_id;
                    wlmesval.index = index;
                    wlmesval.fieldid = fieldId;
                    wlmesval.tpfieldid = tpFieldId;
                    wlmesval.state = 1;
                    wlmesval.bankdate = {curdate};
                    wlmesval.sysdate = date;
                    wlmesval.systime = time;
                    wlmesval.userid = {oper};
                    wlmesval.value = FieldValue;

                    insert(wlmesval);
                    index = index + 1;
                end;
            end;
        end;
    
        restoreFldPosition();
        return true;
  
    onerror 
        restoreFldPosition();
        return false;
    end;

    macro create_message()
        private FILE message(wlmes) WRITE;
        clearRecord(message);

        message.DIRECT                 = m_direct;
        message.TPSCHEMID              = m_tp_schemid;
        message.SESSIONID              = m_sessionid;
        message.RLSFORMID              = m_rls_formid;
        message.OUTSIDEABONENTID       = m_outsideabonent;
        message.OUTSIDEABONENTCODEKIND = m_outsideabonentcodekind;
        message.OUTSIDEABONENTCODE     = m_outsideabonentcode;
        message.KIND                   = m_kind;
        message.TRN                    = m_trn;
        message.OUTSIDEABONENTDATE     = m_outsideabonentdate;
        message.RELATEDREF             = m_relatedref;
        message.STATE                  = m_state;
        message.BANKDATE               = m_bankdate;
        message.SYSDATE                = m_sysdate;
        message.SYSTIME                = m_systime;
        message.USERID                 = m_userid;
        message.DATE                   = m_date;
        message.DEPARTMENT             = m_department;
        message.CONTROL                = m_control;
        message.insideabonentid        = m_insideabonentid;
        message.insideabonentcodekind  = m_insideabonentcodekind;
        message.insideabonentcode      = m_insideabonentcode;

        insert( message );

        m_message_id = message.mesid;
        return m_message_id;
    end;

    macro getValuesFromMessage()
        var sqlValMes = "  SELECT   (SELECT   T_NAME                             " +
                        "              FROM   DWLTPFLD_DBT FLD                   " +
                        "             WHERE   fld.T_TPFIELDID = VAL.T_TPFIELDID) " +
                        "              FieldName,                                " +
                        "           T_VALUE FieldValue                           " +
                        "     FROM   DWLMESVAL_DBT val                           " +
                        "    WHERE   T_MESID = :mes_id                           " +
                        " ORDER BY   t_index                                     ";

        var cmdValMes = rsdCommand(sqlValMes);
        cmdValMes.addParam("mesid", RSDBP_IN, m_message_id);

        var rsValMes = rsdRecordSet(cmdValMes);

        m_values = TArray();
        restoreFldPosition();

        while(rsValMes.movenext)
            writeFldValue(rsValMes.value("FieldName"), rsValMes.value("FieldValue"));
        end;

        restoreFldPosition();
    end;
end;

class xmlMessageCreator()
    private var m_message:messageDbInterface = null;

    macro setMessageDBInterface(_message:messageDbInterface)
        m_message = _message;
        return this;
    end;

    private macro SetTextOrAttribute(CurNode, XmlObj, FieldName, FieldValue)
        if( FieldName == CurNode.nodeName )
            CurNode.appendChild( XmlObj.createTextNode(FieldValue) );
        else
            CurNode.SetAttribute(FieldName, FieldValue);
        end;
    end;

    macro getText(messageText:string):bool
        var FieldName  : string = "", 
            FieldValue : string = "";
        var XmlObj     : object = ActiveX("Microsoft.XMLDOM"),
            CurNode    : object = NULL,
            FirstNode  : object = NULL;

        m_message.restoreFldPosition();

        while(m_message.readFldValue(FieldName,FieldValue))
            if( FirstNode == null )
                if(FieldName == beginField)
                    FirstNode = XmlObj.createElement(FieldValue);
                    CurNode = FirstNode;
                else
                    return FALSE;
                end;

            elif( FieldName == beginField )
                CurNode = CurNode.appendChild( XmlObj.createElement(FieldValue) );

            elif( FieldName == endField )
                if( FieldValue == CurNode.nodeName)
                    if(CurNode.parentNode != null)
                        CurNode = CurNode.parentNode;
                    else
                        break;
                    end;
                else
                    return FALSE;
                end;
            else
                SetTextOrAttribute(CurNode, XmlObj, FieldName, FieldValue);
            end;
        end;

        if(CurNode.nodeName != FirstNode.nodeName)
            return FALSE;
        end;

        SetParm(1,CurNode.xml);
        return TRUE;
    end;
end;

/**
 * Пример сообщения
 *

<Файл ИдФайл="6454027396**64500100120150805000009" ТипИнф="СООБЩИЗМЕН" ВерсПрог="RS-Bank V.6" ТелОтпр="8888888" ДолжнОтпр="Администратор" ФамОтпр="Головкин" КолДок="1" ВерсФорм="5.10">
  <Документ ИдДок="1C91888E-006F-4890-E053-4C1710ACC379" КНД="1114304" КодНОБ="6450" НомСооб="308500001500031243" ТипСооб="100" ДолжнПрБ="Начальник учетно-операционного управления" ФамПрБ="Иванова И К" ТелБанка="(8452)304040" ДатаСооб="05.08.2015">
    <СвБанк РегНом="3085" НомФ="0" БИК="046311808" НаимКО="АО АКБ &quot;Экспресс-Волга&quot;" ИННКО="6454027396" КППКО="645001001" ОГРНКО="1026400001836">
      <АдрМНКО Индекс="410002" КодРегион="64" Город="САРАТОВ" Улица="МИЧУРИНА УЛ" Дом="166/168"></АдрМНКО>
    </СвБанк>
    <СвНП КодЛица="1">
      <НПРО ИННРО="6454003719" КПП="645401001" ОГРН="1026403358244" НаимОрг="Общество с ограниченной ответственностью &quot;НЕВЕНА&quot;"></НПРО>
    </СвНП>
    <СвСчет НомСч="40702810200000004008" ДатаОткрСч="22.12.1994" НомерДог="12008" ДатаЗаклДог="22.12.1994"></СвСчет>
    <СвСчСтар НомСчСтар="40702810600000002008" ДатаИзмСч=" 4.07.2015"></СвСчСтар>
  </Документ>
</Файл>
*/

class SBC1RlsForm()
    var m_common_params:object = null;

    var m_mes_series:string = "";
    var m_mes_number:string = "";
    var m_old_account:string = "";
    var m_new_account:string = "";
    var m_client_id:integer = 4324;
    var m_dayly_number:string = "";

    var m_file_name:string = "";
    var m_file_id:string = "";
    var m_doc_id:string = "";
    var m_message_text:string = "";

    var m_mes_id:integer = 0;

    macro setCommonParams(_common_params:object)
        m_common_params = _common_params;
        return this;
    end;

    macro setOldAccount(_old_account:string)
        m_old_account = _old_account;
        return this;
    end;

    macro setNewAccount(_new_account:string)
        m_new_account = _new_account;
        return this;
    end;

    macro generateMessageNumber()
        if(not GetMessageNumber510({OURBANK}, m_old_account, m_new_account, 1, 0, m_client_id, m_mes_series, m_mes_number))
            var v_err_text:string = GetErrMsg();

            if( not v_err_text )
                v_err_text = "Ошибка при генерации номера сообщения";
            end;

            runError(v_err_text);
        end;
    end;

    macro generateDaylyNumber()
        generateReference(144, m_dayly_number);
    end;

    macro generateFileName()
        m_file_name = "SBC11" + subStr({MFO_Bank}, 3, 7) + "_" + m_common_params.m_fns_data.code + YYYYMMDD({curdate}) + "_" + m_mes_series + "_" + m_mes_number;
    end;

    macro generateFileId()
        m_file_id = ПолучитьИдентификаторОтправителя() + YYYYMMDD({curdate}) + string(int(m_dayly_number):6:o);
    end;

    macro generateDocId()
        var v_guid = execStoredFunc("sys_guid", V_STRING);

        m_doc_id = string(substr(v_guid,1 ,8),"-",
                          substr(v_guid,8 ,4),"-",
                          substr(v_guid,12,4),"-",
                          substr(v_guid,16,4),"-",
                          substr(v_guid,20,12));
    end;

    macro getClientInfo(partyId, errMsg)
        private var clientDataObj = clientDataClass;
        private var clientObj     = rsbParty(partyId);

        if(clientObj.legalForm == 1) 
            if(clientObj.isNotResident)
                clientDataObj.CodeNP = 6;
                clientDataObj.NAMENP = clientObj.fullName;
                clientDataObj.INNIO  = removeKPP(getPartyINN(clientObj.partyId, 1));
                clientDataObj.KPPNP  = removeINN(getPartyINN(clientObj.partyId, 1));
                clientDataObj.OGRNNP = ПолучитьКодСубъекта(clientObj.partyId, PTCK_OGRN);
                clientDataObj.KIO    = "" ; // ??
            else
                clientDataObj.CodeNP = 1;
                clientDataObj.NAMENP = clientObj.fullName;
                clientDataObj.INNNP  = removeKPP(getPartyINN(clientObj.partyId, 1));
                clientDataObj.KPPNP  = removeINN(getPartyINN(clientObj.partyId, 1));
                clientDataObj.OGRNNP = ПолучитьКодСубъекта(clientObj.partyId, PTCK_OGRN);
            end;
        else
            clientDataObj.CodeNP = 2;
            clientDataObj.FIO.last_name  = clientObj.lastName;
            clientDataObj.FIO.name       = clientObj.firstName;
            clientDataObj.FIO.patronymic = clientObj.patronymic;
            clientDataObj.INNIP  = removeKPP(getPartyINN(clientObj.partyId, 1));
            clientDataObj.OGRNIP = ПолучитьКодСубъекта(clientObj.partyId, PTCK_OGRN);
        end;

        setParm(2, "");

        return clientDataObj;
    end;

    macro export(p_error:string)
        private var m_full_file_name = GetTXTFileName(m_file_name);
        setOutPut(m_full_file_name, false);
        
        print(toANSI("<?xml version=\"1.0\" encoding=\"windows-1251\"?>", true));
        print(toANSI(m_message_text, true));

        setOutput(null, true);
        
        removefile(m_common_params.m_export_dir + "\\" + m_file_name + ".txt");

        if(copyFile(m_full_file_name, m_common_params.m_export_dir + "\\" + m_file_name + ".xml"))
            return true;
        else
            setParm(1, "Не удалось скопировать файл " + m_file_name + " в каталог " + m_common_params.m_export_dir + "\\");
            return false;
        end;
    end;

    macro create(p_error:string)
        var SBC1Message = messageDbInterface();

        private var m_bank_params = m_common_params.m_our_bank_data;
        private var m_branch_params = m_common_params.m_branch_bank_data;
        private var m_fns_params = m_common_params.m_fns_data;
        private var error;
        private var m_our_id = {OurBank};
        private var m_our_rscode_kind = 1;
        private var m_our_rscode = ПолучитьКодСубъекта({OurBank}, m_our_rscode_kind, error);
        private var m_new_account_object = RSL_Account(m_new_account);
        private var m_client_object;

        if(m_new_account_object.rec.accountid == 0)
            setParm(1, "Счет не найден");
            return false;
        end;

        m_client_object = getClientInfo(m_new_account_object.rec.client, error);

        if(error != "")
            setParm(1, error);
            return false;
        end;

        m_client_id = m_new_account_object.rec.client;

        generateMessageNumber();
        generateDaylyNumber();
        generateFileName();
        generateFileId();
        generateDocId();

        SBC1Message.setTpSchem(MNS_TPSCHEM)
                   .setRlsForm(MNS_RLSFORM)
                   .setOutsideAbonent(m_fns_params.partyid)
                   .setOutSideAbonentCodeKind(m_fns_params.codeKind)
                   .setOutSideAbonentCode(m_fns_params.code)
                   .setMessageKind(MESKIND_MNS)
                   .setTrn(m_dayly_number)
                   .setOurId(m_our_id)
                   .setOurCodeKind(m_our_rscode_kind)
                   .setOurCode(m_our_rscode)
                   .setMessageState(WLD_STATUS_MES_CLOSED)
//                   .setMessageState(WLD_STATUS_MES_PREPARING)
        ;

        SBC1Message.writeFldValue(beginField, "Файл");
            SBC1Message.writeFldValue("ИдФайл",   m_file_id);
            SBC1Message.writeFldValue("ТипИнф",   "СООБЩИЗМЕН");
            SBC1Message.writeFldValue("ВерсПрог", "RS-Bank V.6");
            SBC1Message.writeFldValue("ТелОтпр",  m_common_params.m_officer_phone);
            SBC1Message.writeFldValue("ДолжнОтпр",m_common_params.m_officer_post);
            SBC1Message.writeFldValue("ФамОтпр",  m_common_params.m_officer_lastname);
            SBC1Message.writeFldValue("КолДок",   "1");
            SBC1Message.writeFldValue("ВерсФорм", "5.10");
            SBC1Message.writeFldValue(beginField, "Документ");
                SBC1Message.writeFldValue("ИдДок",    m_doc_id);
                SBC1Message.writeFldValue("КНД",      "1114304");  
                SBC1Message.writeFldValue("КодНОБ",   m_fns_params.code);
                SBC1Message.writeFldValue("НомСооб",  m_mes_series);
                SBC1Message.writeFldValue("ТипСооб",  m_mes_number);
                SBC1Message.writeFldValue("ДолжнПрБ", m_common_params.m_post_bank);
                SBC1Message.writeFldValue("ФамПрБ",   m_common_params.m_delegat_fio);
                SBC1Message.writeFldValue("ТелБанка", m_common_params.m_phone_bank);
                SBC1Message.writeFldValue("ДатаСооб", string(date():f));

                /**
                 * Сведения о банке
                 */
                SBC1Message.writeFldValue(beginField, "СвБанк");
                    SBC1Message.writeFldValue("РегНом",   m_bank_params.RegNom);
                    SBC1Message.writeFldValue("НомФ",     m_bank_params.NomF);
                    SBC1Message.writeFldValue("БИК",      m_bank_params.BIC);
                    SBC1Message.writeFldValue("НаимКО",   m_bank_params.NameKO);
                    SBC1Message.writeFldValue("ИННКО",    m_bank_params.INN);
                    SBC1Message.writeFldValue("КППКО",    m_bank_params.KPP);
                    SBC1Message.writeFldValue("ОГРНКО",   m_bank_params.OGRN);
                    SBC1Message.writeFldValue(beginField, "АдрМНКО");
                        SBC1Message.writeFldValue("Индекс",    m_bank_params.PostIndex);
                        SBC1Message.writeFldValue("КодРегион", m_bank_params.RegionCode);
                        SBC1Message.writeFldValue("Город",     m_bank_params.town);
                        SBC1Message.writeFldValue("Улица",     m_bank_params.street);
                        SBC1Message.writeFldValue("Дом",       m_bank_params.house);
                    SBC1Message.writeFldValue(endField, "АдрМНКО");
                SBC1Message.writeFldValue(endField, "СвБанк");

                /**
                 * Сведения о НП
                 */
/*
НПРО - Российская организация  
НПИП - индивидуальный предприниматель, нотариус, занимающийся частной практикой, адвокат, учредивший адвокатский кабинет - 
НПИО - иностранная организация

НПРОТип
ИННРО   - ИНН
КПП     - КПП
ОГРН    - ОГРН
НаимОрг - Полное наименование 

НПИПТип
ИННИП  - ИНН 
ОГРНИП - ОГРНИП
ФИОИП  - Фамилия, имя, отчество  

ФИОТип
Фамилия
Имя
Отчество

НПИОТип
НаимОрг - Полное наименование 
ОГРН    - ОГРН    
КПП     - КПП
ИННИО   - ИНН
КИО     - Код иностранной организации 
*/                 
                SBC1Message.writeFldValue(beginField, "СвНП");
                    SBC1Message.writeFldValue("КодЛица", m_client_object.CodeNP);
                    if(m_client_object.CodeNP == 1)
                        SBC1Message.writeFldValue(beginField, "НПРО");
                            SBC1Message.writeFldValue("ИННРО",   m_client_object.INNNP);
                            SBC1Message.writeFldValue("КПП",     m_client_object.KPPNP);
                            SBC1Message.writeFldValue("ОГРН",    m_client_object.OGRNNP);
                            SBC1Message.writeFldValue("НаимОрг", m_client_object.NAMENP);
                        SBC1Message.writeFldValue(endField, "НПРО");
                    elif(m_client_object.CodeNP == 2)
                        SBC1Message.writeFldValue(beginField, "НПИП");
                            SBC1Message.writeFldValue("ИННИП",   m_client_object.INNIP);
                            SBC1Message.writeFldValue("ОГРНИП",  m_client_object.OGRNIP);
                            SBC1Message.writeFldValue(beginField, "ФИОИП");
                                SBC1Message.writeFldValue("Фамилия",  m_client_object.FIO.last_name);
                                SBC1Message.writeFldValue("Имя",      m_client_object.FIO.name);
                                SBC1Message.writeFldValue("Отчество", m_client_object.FIO.patronymic);                                                                
                            SBC1Message.writeFldValue(endField, "ФИОИП");
                        SBC1Message.writeFldValue(endField, "НПИП");
                    elif(m_client_object.CodeNP == 6)
                        SBC1Message.writeFldValue(beginField, "НПИО");
                            SBC1Message.writeFldValue("НаимОрг", m_client_object.NAMENP);
                            SBC1Message.writeFldValue("ОГРН",    m_client_object.OGRNNP);
                            SBC1Message.writeFldValue("КПП",     m_client_object.KPPNP);
                            SBC1Message.writeFldValue("ИННИО",   m_client_object.INNIO);
                            SBC1Message.writeFldValue("КИО",     m_client_object.KIO);                            
                        SBC1Message.writeFldValue(endField, "НПИО");                    
                    end;
                SBC1Message.writeFldValue(endField, "СвНП");

                /**
                 * Сведения о счете(новом)
                 */
                SBC1Message.writeFldValue(beginField, "СвСчет");
                    SBC1Message.writeFldValue("НомСч",       m_new_account);
                    SBC1Message.writeFldValue("ДатаОткрСч",  string(m_new_account_object.rec.open_date:f));
                    SBC1Message.writeFldValue("НомерДог",    "б/н");
                    SBC1Message.writeFldValue("ДатаЗаклДог", string(m_new_account_object.rec.open_date:f));
                SBC1Message.writeFldValue(endField, "СвСчет");

                /**
                 * Сведения о счете(старом)
                 */
                SBC1Message.writeFldValue(beginField, "СвСчСтар");
                    SBC1Message.writeFldValue("НомСчСтар", m_old_account);
                    SBC1Message.writeFldValue("ДатаИзмСч", string(m_new_account_object.rec.open_date:f));
                SBC1Message.writeFldValue(endField, "СвСчСтар");

                /**
                 * Сведения о банке(старом)
                 */
                SBC1Message.writeFldValue(beginField, "СвБанкСтар");
                    SBC1Message.writeFldValue("ДатаИзмБанк", string(m_common_params.m_change_date:f));
                    SBC1Message.writeFldValue(beginField, "СвИзмБанк");
                        SBC1Message.writeFldValue("РегНом", m_branch_params.RegNom);
                        SBC1Message.writeFldValue("НомФ",   m_branch_params.NomF);
                        SBC1Message.writeFldValue("БИК",    m_branch_params.BIC);
                        SBC1Message.writeFldValue("НаимКО", m_branch_params.NameKO);
                        SBC1Message.writeFldValue("ИННКО",  m_branch_params.INN);
                        SBC1Message.writeFldValue("КППКО",  m_branch_params.KPP);
                        SBC1Message.writeFldValue("ОГРНКО", m_branch_params.OGRN);
                        SBC1Message.writeFldValue(beginField, "АдрМНКО");
                            SBC1Message.writeFldValue("Индекс",    m_branch_params.PostIndex);
                            SBC1Message.writeFldValue("КодРегион", m_branch_params.RegionCode);
                            SBC1Message.writeFldValue("Город",     m_branch_params.town);
                            SBC1Message.writeFldValue("Улица",     m_branch_params.street);
                            SBC1Message.writeFldValue("Дом",       m_branch_params.house);
                        SBC1Message.writeFldValue(endField, "АдрМНКО");
                    SBC1Message.writeFldValue(endField, "СвИзмБанк");
                SBC1Message.writeFldValue(endField, "СвБанкСтар");

            SBC1Message.writeFldValue(endField, "Документ");
        SBC1Message.writeFldValue(endField, "Файл");

        SBC1Message.writeFldValue("_СпОбм", 3);
        m_mes_id = SBC1Message.create_message();
        SBC1Message.insertValues();

        var message_creator = xmlMessageCreator().setMessageDBInterface(SBC1Message);
        if(not message_creator.getText(m_message_text))
            setParm(1, "Возникла ошибка при генерации сообщения в xml");
            return false;
        end;

        return true;
    end;
end;


/**
 * Данные, которые отображаются на панели
 */
class messagePanelContext()
    private const BRANCH_EVSAR = "ЭВ-Саратов";
    private const BRANCH_EVSTA = "ЭВ-Ставрополь";
    private const BRANCH_EVVOR = "ЭВ-Воронеж";
    private const BRANCH_EVVOL = "ЭВ-Волгоград";

    /**
     * Данные представителя банка
     */
    var m_post_bank:string = "";
    var m_phone_bank:string = "";
    var m_delegat_fio:string = "";

    /**
     * Данные отправителя(опера)
     */
    var m_officer_lastname:string = "";
    var m_officer_post:string = "";
    var m_officer_phone:string = "";

    /**
     * Название "ЭВ-Саратов". Для отображения на форме 
     */
    var m_bank_name:string = BRANCH_EVSAR;

    /**
     * Дата закрытия филиала
     */
    var m_change_date:date = {curdate};

    /**
     * Директория выгрузки сообщений
     */
    var m_export_dir:string = "";

    /**
     * Параметры ЭВ-Саратов
     */
    var m_our_bank_data:object = bankData();

    /**
     * Параметры филиала
     */
    var m_branch_bank_data:object = bankData();

    /**
     * Параметры налогового органа банка
     */
    var m_fns_data:object = fnsData();

    /**
     * Текущий(выбранный) филиал
     */
    var m_filial:integer = 0;  // !!!!!!!!

    /**
     * Массив филиалов для ComboBox на форме
     */
    var m_filials_list:tarray = TArray();
    m_filials_list[m_filials_list.size] = BRANCH_EVSAR;
    m_filials_list[m_filials_list.size] = BRANCH_EVSTA;
    m_filials_list[m_filials_list.size] = BRANCH_EVVOR;
    m_filials_list[m_filials_list.size] = BRANCH_EVVOL;

    macro getExportDir()
        private var rs = rsdRecordset( " SELECT   T_EXPORTDIR "
                                       "   FROM   DWLTPFRMT_DBT "
                                       "  WHERE   T_TPID = " + TRANSP_MNS + " AND T_TPFRMTID = " + MNS_TPFRMT );

        if(rs.movenext)
            m_export_dir = rs.value("T_EXPORTDIR", NULL , V_STRING);
        end;
    onerror
    end;

    macro getOfficerData()
        private var cmd = rsdCommand( " SELECT   PERSN.T_NAME1 LASTNAME, OFFICER.T_POST POST, OFFICER.T_PHONENUMBER PHONENUMBER "
                                      "   FROM   DOFFICER_DBT OFFICER, "
                                      "          DPERSON_DBT OPER, "
                                      "          DPERSN_DBT PERSN "
                                      "  WHERE       OPER.T_PARTYID = OFFICER.T_PERSONID "
                                      "          AND PERSN.T_PERSONID = OFFICER.T_PERSONID "
                                      "          AND OPER.T_OPER = :p_oper " );
                    cmd.addParam("p_oper", RSDBP_IN, {oper});
        
        private var rs = TRsbDataSet(cmd);

        if(rs.movenext)
            m_officer_lastname = rs.LASTNAME;
            m_officer_post = rs.POST;
            m_officer_phone = rs.PHONENUMBER;
        end;
    end;

    macro getSchemaBranch(selected_branch)
        if(selected_branch == BRANCH_EVSAR)
            return SCHEMA_RSSAR;
        elif(selected_branch == BRANCH_EVSTA)
            return SCHEMA_RSSTA;
        elif(selected_branch == BRANCH_EVVOR)
            return SCHEMA_RSVOR;
        elif(selected_branch == BRANCH_EVVOL)
            return SCHEMA_RSVOL;
        end;
    end;

    macro getSelectedBranch()
        return m_filials_list[m_filial];
    end;

    macro getBankPartyIdSqlText(schema_branch:string)
        return " (SELECT   t_partyid "
               "    FROM   " + schema_branch + ".ddp_dep_dbt "
               "   WHERE   t_name = '000') ";
    end;

    macro getBankCode(schema_branch:string, code_kind:integer)
        private var cmd = rsdCommand(" SELECT   " + schema_branch + ".RSI_RSBPARTY.PT_GetPartyCode(" + getBankPartyIdSqlText(schema_branch) + "," + code_kind + ") code "
                                     "   FROM   DUAL ");

        private var rs = TRsbDataSet(cmd);
        if(rs.movenext)
            return rs.code;
        else
            return "0";
        end;
    onerror
        return "0";
    end;

    macro getNameBank(schema_branch:string)
        private var cmd = rsdCommand("SELECT t_name FROM " + schema_branch + ".dparty_dbt WHERE t_partyid = " + getBankPartyIdSqlText(schema_branch));

        private var rs = TRsbDataSet(cmd);

        if(rs.movenext)
            return rs.name;
        else
            return "";
        end;
    onerror
        return "";
    end;

    macro getBankAdress(schema_branch:string)
        private var cmd = rsdCommand(" SELECT   t_postindex, "
                                     "          t_regionnum, "
                                     "          t_district, "
                                     "          t_street, "
                                     "          t_house "
                                     "   FROM   " + schema_branch + ".DADRESS_DBT "
                                     "  WHERE   t_type = 1 "
                                     "          AND t_partyid = " + getBankPartyIdSqlText(schema_branch));

        private var rs = TRsbDataSet(cmd);

        if(rs.movenext)
            setParm(2, rs.postindex);
            setParm(3, rs.regionnum);
            setParm(4, rs.district);
            setParm(5, rs.street);
            setParm(6, rs.house);
        else
            setParm(2, "");
            setParm(3, "");
            setParm(4, "");
            setParm(5, "");
            setParm(6, "");
        end;
    onerror
        setParm(2, "");
        setParm(3, "");
        setParm(4, "");
        setParm(5, "");
        setParm(6, "");
    end;

    macro getBankData(schema_branch:string, bank:bankData)
        private var regNom = getBankCode(schema_branch, PTCK_BANKREGNUM);

        bank.regNom = split(regNom,"/")[0];
        bank.NomF = split(regNom,"/")[1];

        if(bank.NomF == null)
            bank.NomF = 0;
        end;

        bank.BIC = getBankCode(schema_branch, PTCK_BIC);
        bank.NameKO = getNameBank(schema_branch); 

        private var inn_kpp = getBankCode(schema_branch, PTCK_INN);
        bank.INN = split(inn_kpp,"/")[0];
        bank.KPP = split(inn_kpp,"/")[1];

        bank.OGRN = getBankCode(schema_branch, 27);

        getBankAdress(schema_branch,
                      bank.PostIndex,
                      bank.RegionCode,
                      bank.town,
                      bank.street,
                      bank.house);
    end;

    macro getBranchData()
        getBankData(getSchemaBranch(getSelectedBranch()), m_branch_bank_data);
    end;

    macro getFnsData()
        m_fns_data.partyid = GetPartyTaxInstitution({ourbank});
        m_fns_data.codeKind = PTCK_MNS;
        m_fns_data.code = GetCodeNOBWithChecks({OurBank});
    end;

    macro getPostPhoneAndBankDelegate()
        GetRegValForOPENAC("ИМНС_ДОЛЖ", V_STRING, m_post_bank);
        GetRegValForOPENAC("ИМНС_ФИО", V_STRING, m_delegat_fio);

        private var arrFIO:TArray = strCut(m_delegat_fio, ",. ");

        m_delegat_fio = arrFIO[0];

        // Имя (первая буква)
        if(arrFIO.size > 1)
            m_delegat_fio = m_delegat_fio + " " + substr(arrFIO[1], 1, 1);
        end;

        // Отчество (первая буква)
        if(arrFIO.size > 2)
            m_delegat_fio = m_delegat_fio + " " + substr(arrFIO[2], 1, 1);
        end;

        m_phone_bank = ПолучитьТелефон({OurBank});
    end;

    /**
     * Инициализация данных для формы
     */
    macro init()
        getPostPhoneAndBankDelegate();
        getBankData(getSchemaBranch(BRANCH_EVSAR),m_our_bank_data);
        getBankData(getSchemaBranch(getSelectedBranch()),m_branch_bank_data);
        getFnsData();
        getOfficerData();
        getExportDir();
    end;
end;


/**
 * Процедура формирования сообщений
 */
class messagesGenerator()
    private var m_common_params:object = null;
    private var m_report_name:string = GetTXTFileName("chg_acc_report");

    macro setCommonParams(_common_params:object)
        m_common_params = _common_params;
        return this;
    end;

    macro checkConformityTable()
        private var cmd = rsdCommand("SELECT count(*) t_count FROM USR_CONFORMITY_ACC_TABLE_DBT WHERE T_BRANCH = :p_branch");
                    cmd.addParam("p_branch", RSDBP_IN, m_common_params.m_filial);
        private var rs = rsdRecordSet(cmd);
        private var accCount:integer = 0;

        rs.movenext;
        accCount = rs.value("t_count", null, V_INTEGER);

        if(accCount > 0)
            return true;
        else
            return false;
        end;
    end;

    macro insertMesLog(p_old_acc, p_new_acc, p_out_file, p_mes_id, p_id_mes, p_branch)
        var cmd = rsdCommand( " INSERT INTO USR_MASSGENSBC1MSG VALUES( 0, :p_old_acc, :p_new_acc, :p_out_file, :p_mes_id, :p_id_mes, :p_branch )" );
            cmd.addparam( "p_old_acc",  RSDBP_IN, p_old_acc  );
            cmd.addparam( "p_new_acc",  RSDBP_IN, p_new_acc  );
            cmd.addparam( "p_out_file", RSDBP_IN, p_out_file );
            cmd.addparam( "p_mes_id",   RSDBP_IN, p_mes_id   );
            cmd.addparam( "p_id_mes",   RSDBP_IN, p_id_mes   );
            cmd.addparam( "p_branch",   RSDBP_IN, p_branch   );
            cmd.execute;
    onerror
    end;

    macro printReportHead
        setOutput(m_report_name, false);
        [ ┌──────────────────────────┬──────────────────────────┬───────────────────────────────────────────────────┬───────────────────────────────────────────────────────────────────────────────┐
          │        Старый счет       │        Новый счет        │                  Файл экспорта                    │                                  Результат                                    │
          ├──────────────────────────┼──────────────────────────┼───────────────────────────────────────────────────┼───────────────────────────────────────────────────────────────────────────────┤ ];
    end;

    macro printReportLine(p_old_account, p_new_account, p_file_name, p_error_msg)
        setOutput(m_report_name, true);
        [ │##########################│##########################│###################################################│###############################################################################│ ]
        (p_old_account, p_new_account, p_file_name, p_error_msg:w);
    end;

    macro printReportFoot
        setOutput(m_report_name, true);
        [ └──────────────────────────┴──────────────────────────┴───────────────────────────────────────────────────┴───────────────────────────────────────────────────────────────────────────────┘ ];
        setOutput(null, false);
    end;

    macro exportMessages()
        private var common_sql = " FROM USR_CONFORMITY_ACC_TABLE_DBT WHERE T_BRANCH = :p_branch ";

        private var m_old_account:string = "";
        private var m_new_account:string = "";
        private var m_error_nessage:string = "";

        private var cmd = rsdCommand("SELECT COUNT(*) COUNT" + common_sql);
                    cmd.addParam("p_branch", RSDBP_IN, m_common_params.m_filial);
        
        private var rs = rsdRecordSet(cmd);
        rs.movenext;

        private var m_accounts_count = rs.value("COUNT", null, V_INTEGER);
        private var i = 1;

        cmd = rsdCommand("SELECT * " + common_sql);
        cmd.addParam("p_branch", RSDBP_IN, m_common_params.m_filial);
        rs = rsdRecordSet(cmd);

        printReportHead();

        initProgress( m_accounts_count , "Формирование сообщений", "Формирование сообщений" );

        while(rs.movenext)
            m_error_nessage = "Ошибок нет";
            m_old_account = rs.value("t_account_branch", null, V_STRING);
            m_new_account = rs.value("t_account", null, V_STRING);
            //m_old_account = "40702810600000002008";
            //m_new_account = "40802810700000002293";

            var message = SBC1RlsForm().setCommonParams(m_common_params)
                                       .setOldAccount(m_old_account)
                                       .setNewAccount(m_new_account);
            if(message.create(m_error_nessage))
                message.export(m_error_nessage);
                insertMesLog(m_old_account, m_new_account, message.m_file_name, message.m_mes_id, message.m_file_id, m_common_params.m_filial);
            end;

            printReportLine(m_old_account, m_new_account, message.m_file_name, m_error_nessage);
            useProgress(i);

            i = i + 1;
        end;
        
        remProgress;
        printReportFoot();
        viewFile(m_report_name);
    end;
end;

class(TRsbEditField) reverseBindingField()
    initTRsbEditField();

    private var m_bind_object:object = null;
    private var m_bind_property:string = "";


    macro setReverseBindValue(_bind_object:object,_bind_property:string)
        m_bind_object = _bind_object;
        m_bind_property = _bind_property;

        return this;
    end;

    macro reverse_bind_value(rsbEvent:object)
        value = genGetProp(m_bind_object,m_bind_property);
    end;
end;

class EditFieldBuilder()
    private var m_fieldType:integer = 0;
    private var m_position_x:integer = 0;
    private var m_position_y:integer = 0;
    private var m_width:integer = 0;
    private var m_height:integer = 0;
    private var m_active:bool = true;
    private var m_panel:object = null;
    private var m_defaultVal = null;

    var bindString:string;

    private var m_bind_object:object = null;
    private var m_bind_property_name:string = "";
    private var m_text_length:integer = 100; 
    private var m_value_type:Integer = null;

    private var m_reverse_bind_event:integer = null;
    
    macro setFieldType(_fieldType:integer):object
        m_fieldType = _fieldType;
        return this;
    end;

    macro setPosition_x(_position_x:integer):object
        m_position_x = _position_x;
        return this;
    end;

    macro setPosition_y(_position_y:integer):object
        m_position_y = _position_y;
        return this;
    end;        

    macro setWidth(_width:integer):object
        m_width = _width;
        return this;
    end;

    macro setHeight(_height:integer):object
        m_height = _height;
        return this;
    end;

    macro setBindValue(_bind_object:object, _bind_property_mame:string, _text_length:integer, _value_type:Integer)
        m_bind_object = _bind_object;
        m_bind_property_name = _bind_property_mame;
        m_text_length = _text_length;
        m_value_type = _value_type;
        
        return this;
    end;

    macro setReverseBindEvent(_reverse_bind_event:integer)
        m_reverse_bind_event = _reverse_bind_event;
        return this;
    end;

    macro setActiveState(_active:bool):object
        m_active = _active;
        return this;
    end;

    macro setOnPanel(_panel:object):object
        m_panel = _panel;
        return this;
    end;

    macro buildEditField():TRsbEditField
        private var m_edit:TRsbEditField = reverseBindingField(); 
        m_edit.dataType = m_fieldType;

        m_edit.setPosition(m_position_x, m_position_y);
        m_edit.setSize(m_width, m_height);

        if(m_active == false ) 
            m_edit.editable = 
            m_edit.focusable = false;   
        end;

        if(m_bind_object != null)
            m_edit.bindValue(m_bind_object, m_bind_property_name, m_text_length, m_value_type);

            if((m_reverse_bind_event != null) and (m_panel != null))
                m_edit.setReverseBindValue(m_bind_object, m_bind_property_name);
                m_panel.addEventHandler(m_reverse_bind_event, R2M(m_edit,"reverse_bind_value"));
            end;
        end;

        if(m_panel != null) 
            m_panel.addControl(m_edit);
        end;

        return m_edit;
    end;

    macro buildComboBox(items:tarray)
        private var m_combo:TRsbComboBox = TRsbComboBox();
        m_combo.setPosition(m_position_x, m_position_y);
        m_combo.setSize(m_width, m_height);

        var item;
        var i = 0;
        for(item, items)
            m_combo.addChoice(i, item);
            i = i + 1;
        end;

        if(m_bind_object != null)
            m_combo.bindValue(m_bind_object, m_bind_property_name, m_text_length, m_value_type);
        end;

        if(m_panel != null) 
            m_panel.addControl(m_combo);
        end;

        return m_combo;
    end;

    macro buildLabel(caption:string)
        private var m_label:TRsbLabel = TRsbLabel(m_position_x, m_position_y, caption);

        if(m_panel != null) 
            m_panel.addLabel(m_label);
        end;

        return m_label;    
    end;
end;

class panelBuilder()
end;

class fnsMessagesPanel()
    private var data = messagePanelContext();
    private var generator = messagesGenerator();
    private var FieldBuilder = EditFieldBuilder();
    private var panel = TRsbPanel();

    private const RSB_EV_RUN_ACTION = 666;
    private const RSB_EV_REVERSE_BIND = 667;

    data.init();
    generator.setCommonParams(data);
    
    panel.SetSize(70,27);
    panel.setPosition(50, 10);
    panel.setCaption("Формирование сообщений в ФНС");
    panel.setStatus("~Esc~ Выход ~F2~ Запуск ~F3~ Выбрать из списка ~F7~ Таблица соответствия");

    FieldBuilder.setPosition_x(15)
                .setHeight(1)
                .setOnPanel(panel);                 

    /**
     * ЭВ-Саратов
     */
    FieldBuilder.setPosition_x(3);
    FieldBuilder.setPosition_y(2).buildLabel("РегНом");
    FieldBuilder.setPosition_y(3).buildLabel("НомФ");
    FieldBuilder.setPosition_y(4).buildLabel("БИК");
    FieldBuilder.setPosition_y(5).buildLabel("НаимКО");
    FieldBuilder.setPosition_y(6).buildLabel("ИННКО");
    FieldBuilder.setPosition_y(7).buildLabel("КППКО");
    FieldBuilder.setPosition_y(8).buildLabel("ОГРНКО");

    FieldBuilder.setPosition_y(10).buildLabel("Индекс");
    FieldBuilder.setPosition_y(11).buildLabel("КодРегион");
    FieldBuilder.setPosition_y(12).buildLabel("Город");
    FieldBuilder.setPosition_y(13).buildLabel("Улица");
    FieldBuilder.setPosition_y(14).buildLabel("Дом");

    FieldBuilder.setPosition_x(15);
    FieldBuilder.setFieldType(FT_STRING).setActiveState(false).setPosition_y(1).setWidth(10).setBindValue(data,"m_bank_name",100).buildEditField();

    FieldBuilder.setActiveState(true);
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(2).setWidth(15).setBindValue(data.m_our_bank_data,"RegNom",100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(3).setWidth(15).setBindValue(data.m_our_bank_data,"NomF"  ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(4).setWidth(15).setBindValue(data.m_our_bank_data,"BIC"   ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(5).setWidth(25).setBindValue(data.m_our_bank_data,"NameKO",100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(6).setWidth(15).setBindValue(data.m_our_bank_data,"INN"   ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(7).setWidth(15).setBindValue(data.m_our_bank_data,"KPP"   ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(8).setWidth(15).setBindValue(data.m_our_bank_data,"OGRN"  ,100).buildEditField();

    FieldBuilder.setPosition_y(9).buildLabel("Адрес");
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(10).setWidth(15).setBindValue(data.m_our_bank_data,"PostIndex" ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(11).setWidth(15).setBindValue(data.m_our_bank_data,"RegionCode",100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(12).setWidth(15).setBindValue(data.m_our_bank_data,"town"      ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(13).setWidth(15).setBindValue(data.m_our_bank_data,"street"    ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(14).setWidth(15).setBindValue(data.m_our_bank_data,"house"     ,100).buildEditField();

    /**
     * etc...
     */
    FieldBuilder.setPosition_x(3);
    FieldBuilder.setPosition_y(17).buildLabel("КодНОБ");
    FieldBuilder.setPosition_y(18).buildLabel("ДолжнПрБ");
    FieldBuilder.setPosition_y(19).buildLabel("ТелБанка");
    FieldBuilder.setPosition_y(20).buildLabel("ФамПрБ");
    FieldBuilder.setPosition_y(21).buildLabel("ФамОтпр");
    FieldBuilder.setPosition_y(22).buildLabel("ДолжнОтпр");
    FieldBuilder.setPosition_y(23).buildLabel("ТелОтпр");

    FieldBuilder.setPosition_y(25).buildLabel("ДатаИзмБанк");
    FieldBuilder.setPosition_y(26).buildLabel("Директория");

    FieldBuilder.setActiveState(true).setPosition_x(15);
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(17).setWidth(10).setBindValue(data.m_fns_data,"code",100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(18).setWidth(30).setBindValue(data,"m_post_bank"    ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(19).setWidth(15).setBindValue(data,"m_phone_bank"   ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(20).setWidth(15).setBindValue(data,"m_delegat_fio"  ,100).buildEditField();
    
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(21).setWidth(15).setBindValue(data,"m_officer_lastname" ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(22).setWidth(15).setBindValue(data,"m_officer_post"     ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(23).setWidth(15).setBindValue(data,"m_officer_phone"    ,100).buildEditField();

    FieldBuilder.setFieldType(FT_DATE).setPosition_y(25).setWidth(15).setBindValue(data,"m_change_date",100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(26).setWidth(30).setBindValue(data,"m_export_dir",100).buildEditField();

    /**
     * Данные филиала
     */
    FieldBuilder.setPosition_x(42).setPosition_y(1).setWidth(15).setBindValue(data,"m_filial",100).buildComboBox(data.m_filials_list);
    FieldBuilder.setReverseBindEvent(RSB_EV_REVERSE_BIND);
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(2).setWidth(15).setBindValue(data.m_branch_bank_data,"RegNom",100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(3).setWidth(15).setBindValue(data.m_branch_bank_data,"NomF"  ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(4).setWidth(15).setBindValue(data.m_branch_bank_data,"BIC"   ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(5).setWidth(25).setBindValue(data.m_branch_bank_data,"NameKO",100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(6).setWidth(15).setBindValue(data.m_branch_bank_data,"INN"   ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(7).setWidth(15).setBindValue(data.m_branch_bank_data,"KPP"   ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(8).setWidth(15).setBindValue(data.m_branch_bank_data,"OGRN"  ,100).buildEditField();

    FieldBuilder.setPosition_y(9).buildLabel("Адрес");
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(10).setWidth(15).setBindValue(data.m_branch_bank_data,"PostIndex" ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(11).setWidth(15).setBindValue(data.m_branch_bank_data,"RegionCode",100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(12).setWidth(15).setBindValue(data.m_branch_bank_data,"town"      ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(13).setWidth(15).setBindValue(data.m_branch_bank_data,"street"    ,100).buildEditField();
    FieldBuilder.setFieldType(FT_STRING).setPosition_y(14).setWidth(15).setBindValue(data.m_branch_bank_data,"house"     ,100).buildEditField();

    panel.addEventHandler(RSB_EV_KEY_PRESSED,R2M(this,"key_pressed"));
    panel.addEventHandler(RSB_EV_RUN_ACTION,R2M(this,"run_action"));
    panel.addEventHandler(RSB_EV_ITEM_SELECTED,R2M(this,"update_selected"));

    macro run()
        panel.run();
    end;

    /**
     * Хитрый план
     */
    macro run_action_event()
        panel.focusedControl.postEvent(TRsbEvent(RSB_EV_REMOVE_FOCUS, panel.focusedControl));
        panel.focusedControl.postEvent(TRsbEvent(RSB_EV_RUN_ACTION, panel.focusedControl));
    end;

    /**
     * Хитрый план 2
     */
    macro update_from_data()
        panel.postEvent(TRsbEvent(RSB_EV_REVERSE_BIND, panel));
    end;

    macro key_pressed(rsbEvent:object)
        var cancel_flag = false;
        var mb_key = MB_NO;
        if(rsbEvent.keyCode == KEY_F2)
            if(not generator.checkConformityTable())
                mb_key = MsgBoxEx("Таблица соответствия пуста!|Загрузить?", MB_YES+MB_NO+MB_ERROR);

                if(mb_key == IND_YES)
                    cancel_flag = not conformityTableEditor(data.m_filial);
                else
                    cancel_flag = true;
                end;
            end;

            if(not cancel_flag)
                run_action_event();
            end;
        elif(rsbEvent.keyCode == KEY_F7)
            cancel_flag = not conformityTableEditor(data.m_filial);
        end;
    end;

    macro update_selected(rsbEvent:object)
        data.getBranchData();
        update_from_data();
    end;

    macro run_action(rsbEvent:object)
        generator.exportMessages();
    end;
end;

fnsMessagesPanel().run(); 
exit(1);