/******************************************************************************
   Имя файла..:       ExecPmDocs_TestPm.mac
   Назначение.:       РОБОТЫ-ПЛАНИРОВЩИКИ 24/7. Модуль "Проверка работоспособности Пэйментса".
   Дата.......:       19.09.2012
   Автор......:       Котов Сергей
   Комментарий:       Алгоритм основан на анализе таблицы шагов и состояния обработчика 20009 USR_FIXDOC_DBT
                      Максимальное время выполнения шага "Выгрузка в МБР" для документов, отправленных по Payments
                      -
                      Максимальное время логирования работы обработчика по Payments 20009

                      Ввести настройку
                      PRBB\MASS_EXEC\PAYMENTS_LOG с типом INTEGER, определяющую интервал контроля работы Payments

                      При превышении разницы величины, определенной в настройке, отправлять письмо
                      "Превышение допустимого интервала обработки платежа. Необходимо проверить работу RS-Payments и обработчика"
                      Письмо отправлять сотрудникам, определенным в настройке PRBB\MASS_EXEC\PAYMENTS_MAIL - тип STRING
// KS 26.10.2012 C-15088 Новое расписание
******************************************************************************/

import RSD;
import cb_sql;
import "Send_lotus.mac";

macro TestPayments(mail,FreqTimePayments)

  private var query = "", r;

  private var letter = "Превышение допустимого интервала обработки платежа. Необходимо проверить работу RS-Payments и обработчика"+ "\n" +
                       "-----------------------------------------------------------------------------------\n" + {Name_bank};

  private var time_mbr,   // Последний документ ушедший в МБР
              time_agent; // Последняя активность робота Пэйментс

  query = "select max(to_date(to_char(st.t_syst_date,'DD.MM.YYYY') || ' ' || to_char(st.t_syst_time,'HH24:MI:SS'),'DD.MM.YYYY HH24:MI:SS'))" + "\n" +
          "  from dpmpaym_dbt pm, dpmprop_dbt pmprop, doproper_dbt op, doprstep_dbt st" + "\n" +
          " where pm.t_dockind in (16, 201, 320, 322)" + "\n" +
          "   and pmprop.t_transferdate = " + GetSQLDate({curdate}) + "\n" +
          "   and pm.t_paymentid = pmprop.t_paymentid" + "\n" +
          "   and pmprop.t_debetcredit = 1" + "\n" +
// KS 24.10.2012 C-15088 start Новое расписание
/*
          "   and (pmprop.t_corschem not in (select cs.t_number" + "\n" +
          "                                    from dcorschem_dbt cs" + "\n" +
          "                                   where (cs.t_userfield2 = 'STOP' or" + "\n" +
          "                                          (to_date(to_char(trunc(sysdate), 'DD.MM.YYYY') || ' ' || cs.t_userfield2, 'DD.MM.YYYY HH24:MI:SS') < " + "\n" +
          "                                           to_date(to_char(st.t_syst_date,'DD.MM.YYYY')  || ' ' || to_char(st.t_syst_time,'HH24:MI:SS'),'DD.MM.YYYY HH24:MI:SS')))" + "\n" +
          "                                           and length(cs.t_userfield2) > 1))" + "\n" + // из раскраски корсхем
*/
          "   and (pmprop.t_corschem not in" + "\n" +
          "         (select t_corschem" + "\n" +
          "            from usr_me_time_paym_dbt" + "\n" + "\n" +
          "           where t_timebegin_out_our = t_timeend_out_our)" + "\n" + // из раскраски корсхем в расписании
// KS 24.10.2012 C-15088 end
          "   and pm.t_basefiid = 0" + "\n" +
          "   and op.t_documentid = lpad(pm.t_paymentid,34,'0')" + "\n" +
          "   and op.t_dockind = pm.t_dockind" + "\n" +
          "   and op.t_id_operation = st.t_id_operation" + "\n" +
          "   and st.t_blockid = 10000145" + "\n" +
          "   and st.t_number_step = 190" + "\n" +
          "   and st.t_isexecute = 'X'";

  r = rsdrecordset (query);

  // набираем текст письма
  if ((r.movenext()) and (ValType(r.value(0)) != 26))
    time_mbr = r.value(0);
  else
    return -2;
  end;

  query = "select max(fixdoc.t_lasttime)+" + FreqTimePayments + "/24/60" + "\n" +
          "  from usr_fixdoc_dbt fixdoc" + "\n" +
          " where fixdoc.t_robot = 20009";

  r = rsdrecordset (query);

  // набираем текст письма
  if ((r.movenext()) and (ValType(r.value(0)) != 26))
    time_agent = r.value(0);
  else
    time_agent = null;
  end;

  if ((time_agent == null) or
      (time_mbr > time_agent)
     )
    Send_l({Name_bank} + ". Работа RS-Payments и обработчика.", letter, 73, mail); 
    return 1;
  end;

  return 0;

OnError
  return -1;
end;

//TestPayments("Sergey S Kotov/IT/Probusiness Bank",30);