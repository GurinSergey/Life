/******************************************************************************
   Имя файла..:       ExecPmDocs_Remote.mac
   Назначение.:       РОБОТЫ-ПЛАНИРОВЩИКИ 24/7. Модуль "Остановка внутрибанковских операций".
   Дата.......:       10.09.2012
   Автор......:       Котов Сергей
   Комментарий:       Признак внешней остановки хранится в таблице usr_curdate, таже самая таблица, что и для остановки обработчиков (CurDateProc.mac),
                      поэтому после смены операционного для остановка планировщика будет снята.
                      Управлять признаком внешней остановки можно из модуля ExecPmDocs_Remote.mac.
******************************************************************************/
import BankInter;
import "ldmklbr.mac", "KeyCodes.mac", "CurDateProc.mac";

private const DefStatusLineActive  = "F9 Стоп Esc Выход";
private const DefStatusLinePassive = "F9 Старт Esc Выход";

Class (TRecHandler) TParmAgentPmRmt (LbrName)

    private const flag_yes  = "Да";
    private const flag_no   = "Нет";

    InitTRecHandler ("monitor", (LbrName), true);

    MACRO Event (dlg, cmd, id, key) 

       private var mes;

       /*Инициализация диалогового окна*/
       if(cmd == DLG_INIT)
          // Следующий запуск роботов
          if (GetLastOperDay() == date(0,0,0))
            dlg.rec.StopTime    = time();
            dlg.rec.IsStop    = flag_yes;
            mes = DefStatusLinePassive;
          else
            dlg.rec.StopTime    = time(0,0,0,0);
            dlg.rec.IsStop    = flag_no;
            mes = DefStatusLineActive;
          end;
          message(mes);
          UpdateFields(dlg);
       end;

       if (cmd == DLG_BUTTON)
         cmd = DLG_KEY;
         KEY = KEY_F9
       end;

       if (cmd == DLG_KEY)

          /*Запуск робота*/
          if ( KEY == KEY_F9 ) // Старт для всех
            if (dlg.rec.IsStop == flag_yes)
              dlg.rec.StopTime    = time(0,0,0,0);
              if (date() > {curdate})       // Меняем день
                usr_SetOperDay(); //устанавливаем последний открытый ОД
              end;
              SetLastOperDay({curdate});
              mes = DefStatusLineActive;
            else
              dlg.rec.StopTime    = time();
              SetLastOperDay(date(0,0,0));
              mes = DefStatusLinePassive;
            end;
          end;

          if (GetLastOperDay() == date(0,0,0))
            dlg.rec.IsStop    = flag_yes;
          else
            dlg.rec.IsStop    = flag_no;
          end;

          message(mes);
          UpdateFields(dlg);

          /*Выход из диалогового окна*/
          if ( KEY == KEY_ESC ) // Выход
            if (date() > {curdate})       // Меняем день
              SetOperDay(); //устанавливаем последний открытый ОД
            end;
            SetLastOperDay({curdate});
            return CM_CANCEL;
          end;

          return CM_IGNORE;
       end;

    end;

    Macro Run
        return RunDialog (this, R2M (this, "Event"));
    End;

End;


Macro MkDatePanelAgentPmRmt( lbr )

Var rc = lbr.AddPanel( "monitor", 30, 5, 38, 5, lbr.EColour.SHLP, lbr.EFRame.UNARY ), elem;

       rc.title = "Обработка документов";
       rc.StatusLine = DefStatusLinePassive;

       elem = rc.AddLabel( 3, 1, "Время остановки:");
       elem = rc.AddField( 24, 1, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_STRING, "StopTime", 10 );

       elem = rc.AddLabel( 3, 2, "Остановка:");
       elem = rc.AddField( 24, 2, lbr.EFieldType.VIEW, lbr.EFocus.YES, lbr.EDataType.V_STRING, "IsStop", 10 );

       elem = rc.AddField( 9, 4, lbr.EFieldType.BUTTON, lbr.EFocus.YES, lbr.EDataType.V_STRING, "Переключить режим", 20 );

end;

Macro MkLbrFileAgentPmRmt

  var LbrPath, LbrName, errcode, lbr;
  
  GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR", V_STRING, LbrPath, errcode);

  if (errcode > 0) 
    msgbox("Значение настройки TEXTDIR получено небыло!!!");
  end;
  
  LbrName = LbrPath + "\\monitorpmrmt" + string(UserNumber) + ".lbr";
  lbr = TLbrFile( LbrName, "C" );
  
  MkDatePanelAgentPmRmt( lbr );
     
  lbr.Save(); //сохраняем ресурсы в файле
  lbr = NULL;
  return LbrName;
  
end;

/* Точка входа. */
private var LbrName, Parm;

LbrName = MkLbrFileAgentPmRmt();

Parm = TParmAgentPmRmt(LbrName);
if ( not Parm.Run () )
   Parm = null;
   DelFile(LbrName);
   Exit (1);
end;