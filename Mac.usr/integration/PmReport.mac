// Gurin S. 14.01.2013 C-16705 Поправил протокол загрузки документов ABBYY FC
import rsbdataset,globals, Bankinter, MoCommon;
import CTInter; // Gurin S. 14.01.2013 C-16705

const REP_SUCCESS = 0;
const REP_ERROR = 1;
var rep_file_succ = GetTxtFileName("report_succ");
var rep_file_err = GetTxtFileName("report_err");
file rep_succ  () txt;
file rep_err  () txt;
//Gurin S. 14.01.2013 C-16705
record pmpaym(pmpaym);


macro PrintReport (type_paym)

   macro head(chapt, mode)

   if (mode == REP_SUCCESS)
     setoutput(rep_file_succ);
   elif (mode == REP_ERROR)
     setoutput(rep_file_err);
   end;

[################################################## ########## ######## Операционист: #



]
   (GetOurBankName(),date(),time(),{oper}:l);
                                                                   
[                                                                        Протокол # 
                                                             процедуры массовой проводки отложенных документов #.
                                                                                 за ##########



┌─────┬─────────────────────┬─────────────────────┬────────────┬────────────────────────────────────────────────────────┬───────────────────────────────────────┬──────────────────────┐
│№ док│   Счет плательщика  │   Счет получателя   │   Сумма    │             Назначения платежа                         │               Статус                  │Нахождение документа  │
├─────┼─────────────────────┼─────────────────────┼────────────┼────────────────────────────────────────────────────────┼───────────────────────────────────────┼──────────────────────┤
]
   (chapt:l,type_paym:l,{curdate});
   end;

   macro putline(doc,payeracc,receiveracc,sum,ground,state,list, mode);

   if (mode == REP_SUCCESS)
     setoutput(rep_file_succ, true);
   elif (mode == REP_ERROR)
     setoutput(rep_file_err, true);
   end;
           
[│#####│#####################│#####################│############│########################################################│#######################################│######################│]
   (doc,payeracc,receiveracc,sum,ground,state:w, list);
   end;

   macro foot(mode)

   if (mode == REP_SUCCESS)
     setoutput(rep_file_succ, true);
   elif (mode == REP_ERROR)
     setoutput(rep_file_err, true);
   end;


[└─────┴─────────────────────┴─────────────────────┴────────────┴────────────────────────────────────────────────────────┴───────────────────────────────────────┴──────────────────────┘];
   end;


   macro Итог (cond)

      var symbs, total_cnt =0, total_sum=$0;

      if (cond == REP_SUCCESS)
         symbs = " (st.t_symbol in('К','f','7','Ф') or st.t_isexecute = 'X')";
      elif(cond == REP_ERROR)
         symbs = "st.t_symbol not in('К','f','7','Ф') and st.t_isexecute <> 'X'";
      end;

      private var rs=TRSBDataSet(
             "  select   count (1) cnt, sum (sum) gr_sum, list " +
             "    from   (select   pm.t_amount sum, st.t_symbol, case st.t_isexecute " +
             "                                                      when 'R' " +
             "                                                      then " +
             "                                                         case st.t_symbol " +
             "                                                            when 'J' then 'отвергнут' " +
             "                                                            when 'К' then 'на визуальном контроле' " +
             "                                                            when '8' then 'на согласовании' " +
             "                                                            when 'f' then 'ожидает выгрузки во Фронт' " +
             "                                                            when '7' then 'на валютном контроле' " +
             "                                                            when 'Й' then 'ожидает поступлений' " +
             "                                                            when 'Ф' then 'ожидает выгрузки в МБР' " +
             "                                                            when 'У' then 'приостановлен(террорист)' " +
             "                                                            else 'открыт' " +
             "                                                         end " +
             "                                                      when 'X' " +
             "                                                      then " +
             "                                                         'закрыт' " +
             "                                                   end " +
             "                                                      list " +
             "              from   doprtemp_tmp tmp, doprstep_dbt st, dpmpaym_dbt pm " +
             "             where       st.t_id_operation = tmp.t_id_operation " +
             "                     and "+symbs+
             "                     and st.t_id_step = (select   max (t_id_step) " +
             "                                           from   doprstep_dbt t " +
             "                                          where   t_id_operation = st.t_id_operation and t_isexecute <> chr (0)) " +
             "                     and pm.t_paymentid = tmp.t_orderid) " +
             "group by   list " +
             "order by   1 ");

[
┌──────┬────────────┬─────────────────────────┐
│Кол-во│  Сумма     │Нахождение документов    │
├──────┼────────────┼─────────────────────────┤
];

      while (rs.MoveNext)
[│######│############│#########################│]
(int(rs.cnt), money(rs.gr_sum), rs.list);
         total_cnt = total_cnt+int(rs.cnt);
         total_sum = total_sum+money(rs.gr_sum);
      end;
[├──────┼────────────┼─────────────────────────┘
 │######│############│
 └──────┴────────────┘
](total_cnt, total_sum);
   end;

   var rs=TRSBDataSet(
          "  select   pm.t_paymentid id, " +  //Gurin S. 14.01.2013 C-16705
          "           pmr.t_number doc, " +
          "           pm.t_payeraccount payeracc, " +
          "           pm.t_receiveraccount receiveracc, " +
          "           pm.t_amount sum, " +
          "           pmr.t_ground ground, " +
          "           st.t_symbol, " +
          "           decode ( " +
          "              st.t_symbol, " +
          "              'J', " +
          "              nvl ( " +
          "                 (select   utl_raw.cast_to_varchar2 (t_text) " +
          "                    from   dnotetext_dbt " +
          "                   where   t_objecttype(+) = 501 and t_documentid(+) = lpad (pm.t_paymentid, 10, '0') and t_notekind = 42), " +
          "                 'не заполнено примечание 42' " +
          "              ), " +
          "              'Й', " +
          "              'недостаточно средств', " +
          "              '7', " +
          "              'ожидает визы валютного контролера', " +
          "              '8', " +
          "              nvl ( " +
          "                 (select   utl_raw.cast_to_varchar2 (t_text) " +
          "                    from   dnotetext_dbt " +
          "                   where       t_objecttype(+) = 501 " +
          "                           and t_documentid(+) = lpad (pm.t_paymentid, 10, '0') " +
          "                           and t_notekind = 123), " +
          "                 'не заполнено примечание 123' " +
          "              ), " +
          "              ' ' " +
          "           ) " +
          "              state, " +
          "           case st.t_isexecute " +
          "              when 'R' " +
          "              then " +
          "                 case st.t_symbol " +
          "                    when 'J' then 'отвергнут' " +
          "                    when 'К' then 'на визуальном контроле' " +
          "                    when '8' then 'на согласовании' " +
          "                    when 'f' then 'ожидает выгрузки во Фронт' " +
          "                    when '7' then 'на валютном контроле' " +
          "                    when 'Й' then 'ожидает поступлений' " +
          "                    when 'Ф' then 'ожидает выгрузки в МБР' " +
          "                    when 'У' then 'приостановлен(террорист)' " +
          "                    else 'открыт' " +
          "                 end " +
          "              when 'X' " +
          "              then " +
          "                 'закрыт' " +
          "           end " +
          "              list " +
          "    from   doprtemp_tmp tmp, " +
          "           doprstep_dbt st, " +
          "           dpmrmprop_dbt pmr, " +
          "           dpmpaym_dbt pm " +
          "   where       st.t_id_operation = tmp.t_id_operation " +
          "           and st.t_id_step = (select   max (t_id_step) " +
          "                                 from   doprstep_dbt t " +
          "                                where   t_id_operation = st.t_id_operation and t_isexecute <> chr (0)) " +
          "           and pmr.t_paymentid = pm.t_paymentid " +
          "           and pm.t_paymentid = tmp.t_orderid " +
          "order by   st.t_isexecute, st.t_symbol, pm.t_paymentid "
                   );

   head("проведенных документов", REP_SUCCESS);
   head(" ошибок в документах", REP_ERROR);

   while (rs.movenext)

      if ((rs.symbol == "J") or (rs.symbol == "Й") or (rs.symbol == "8") or (rs.symbol == "9") or (rs.symbol == "У") or (rs.list == "открыт"))
         //Gurin S. 14.01.2013 C-16705
         var note_123, state, list ; 
         debugbreak;
         ClearRecord(pmpaym);
         pmpaym.PaymentID = rs.id; /*PaymentID*/;
         note_123 = ReadNoteForObject( OBJTYPE_PAYMENT/*501*/, makeObjectID(OBJTYPE_PAYMENT, NULL, pmpaym), 123/*Основание направления на согласование*/);
         if (note_123 != "")
            state = note_123;
            list = "открыт"; 
         else
            state = rs.state;
            list = rs.list;
         end;
         //end Gurin S. 14.01.2013 C-16705
         putline(rs.doc,rs.payeracc,rs.receiveracc,rs.sum,rs.ground,state,list,REP_ERROR);
      else
         putline(rs.doc,rs.payeracc,rs.receiveracc,rs.sum,rs.ground,rs.state,rs.list,REP_SUCCESS);
      end;

   end;
   foot(REP_SUCCESS);
   Итог(REP_SUCCESS);
   foot(REP_ERROR);
   Итог(REP_ERROR);

   setoutput(null,true);
   if ( not Open( rep_succ, rep_file_succ) )
     MsgBox("Ошибка открытия файла с протоколом");
   else
     ViewFile( rep_succ );
   end;


   if ( not Open( rep_err, rep_file_err) )
     MsgBox("Ошибка открытия файла с протоколом");
   else
     ViewFile( rep_err );
   end;
end;
