/***************************************************************************************************************
   Имя файла..:       sql_KB_new_OP.mac
   Назначение.:       Хранение скриптов для выборки документов ожидающих поступления, надоело пазл собирать
   Заявка.....:       от Палагиной Елены C-19164-6
   Дата.......:       06.06.2013
   Автор......:       Лисименко Антон 
   
   19.11.2013 Vaschenko D. Добавил условие под требование Палагиной Е.
   13.01.2014 Vaschenko D. I-00454854-2
   04.03.2014 Vaschenko D. Изменения под 2031
   03.06.2014 Vaschenko D. C-30155
   22.07.2014 Vaschenko D. C-30528
   12.08.2014 Vaschenko D. C-27827
****************************************************************************************************************/
import Globals,"fg_Life_parm.mac";
import календарь;
import    "opr_engine.mac";
import    "timestat.mac";
import lib_sqltools;

     

/*Пишу для себя
Этапы роботы макроса:
1. Формируем динамическую диалоговую форму через MkLbrFileAgentKB 
 название "monitorpmdocsKB + СИД пользователя"
2. Добавляем к созданной библиотеки панель MkDatePanelAgentKB с названием "mon_kb" ! Внимание название панели не может быть более 8-ми символов!
 все эти действия возможны с помощью "ldmklbr.mac"
3. У нас есть класс TParmAgentKB в нем описаны методы назначаем Parm = TParmAgentKB(LbrName);
   и стартуем Parm.Run  - RunDialog (this, R2M (this, "Event")) где this мы, this, "Event" -- в нашем макросе обработка событий
4. Форма запущена, далее все как обычно, при событии ф2 вызывается метод StartAgent(dlg)
   - проверяет отложенные, собирает их с учетом времени
   - проводит на предобработку - отдает обработчикам
   - каждые 10 секунд проверяет пайп на ответы от обработчиков
   - если сообщения отрпавлены(обработчики активны), но в течение 1 минуты не были обработаны, при след. опросе проверяется пайп, выводится результат
   если ответа от обработчиков нет, отсылает опоывещения в Лотус
   - при ошибках компиляции больше 10 за пять минут робот отключается, отправляет сообщение в лотус
   - если обработчиков нет. отправляет сообщение в лотус
   - каждые 40 секунд анализирует шаги обработанных платежей, если есть "зависшие", добавляет их в журнал платежей с ошибками
*******************************************************************/


private var fgBank = fg_life_subject({OurBank});
var   opr = opr_engine;
var   err;
var   BIC_BANK, retval;
var   no_empty  = false;


/*GetRegistryValue("PRBB\\MASS_EXEC\\BIC_BANK", V_STRING, BIC_BANK, err);
    if (err > 0)
        BIC_BANK = "";
    end;*/  
//Внесем параметры для инициализации операции

opr.oper = {oper};
opr.kindoperation = 24001;
opr.dockind = 201;
   

    //Ловим ошибки
    macro catch(x)
        var err_count = 0, is_no_wait = 0;
        var lasterror = "oшибка:"+x.module + "[" + x.line + "]:" + x.message;
 
        setdialogflag(1);
        while( err_count < RSLDefEnv.ErrorCount )
            if(RSLDefEnv.error(err_count).nativeerror == 54)
                setdialogflag(0);
                is_no_wait = RSLDefEnv.error(err_count).nativeerror;
            end;
            lasterror = lasterror + "|"+RSLDefEnv.error(err_count).descr;
            err_count = err_count + 1;
        end;

        if (RSLDefCon.IsinTrans)
            RSLDefCon.RollbackTrans;
        end;
        if(is_no_wait == 54)
            println(lasterror);
            setdialogflag(1);
        else
            msgbox (lasterror);
        end;
        //VDN 04.04.2014 Пока ловим ошибку, непонятно что не срабатывает в драйвере RSLDefEnv, I-00477927-2, I-00476663-2
        onerror(r);
        msgbox(r.Message + ", " + r.Err);
    end;
    
    //очищаем временную таблицу
    MACRO ClearTmp
        private var cmd;
        cmd = RSDCommand("truncate table usr_dpmpaym_tmp");
        cmd.execute;
    end;
    
    //очищаем логирование, 
    MACRO ClearLOG
        private var cmd;
        cmd = RSDCommand("delete  from USR_ROBOTS_IK_LOG where TIME_START< sysdate - interval '5' day ");
        cmd.execute;
    end;
    
    Macro ClearDoprtemp
        private var cmd;
        cmd = RSDCommand("truncate table doprtemp_tmp");
        cmd.execute;
    end;
    
    Macro ClearUsr_Doprtemp
        private var cmd;
        cmd=RSDCommand("truncate table usr_doprtemp_tmp");
        cmd.Execute();
    end;    
    
    // Конвертируем время
    Macro SecToTime(t) // Перевод секунд во время
          return time(0,int(t/60),(t-60*int(t/60)),0);
    end;

    Macro MinToTime(t) // Перевод минут во время
          return time(int(t/60),(t-60*int(t/60)),0,0);
    end;
    

    

    // Добавить обрабатываемый платёж в тмр
    Macro AddPM(PaymentId,DocKind,purpose,name)

        private var cmd = RSDCommand("insert into usr_dpmpaym_tmp (t_paymentid, t_dockind, t_purpose,T_INITMACRO) values (?,?,?,?)");

        cmd.addParam("paymentid", RSDBP_IN, PaymentId);
        cmd.addParam("dockind",   RSDBP_IN, DocKind);
        cmd.addParam("direct",  RSDBP_IN, purpose);
        cmd.addParam("op",  RSDBP_IN, name); //OP IK PPK
        cmd.execute;
     /*   if (name=="OP") 
             cmd=rsdcommand("delete from doprtemp_tmp where t_orderid!=? and t");
             cmd.addParam("paymentid", RSDBP_IN, PaymentId);
        end;    */

    end;


    // Перемещаем полученные данные в  pmpaym_op_tmp
    Macro Remove_OP()
    private var cmd;
    
        cmd    = RSDCommand("BEGIN"                                                       + "\n" +
                            "--чистим неактуальную информацию"                            + "\n" +
                            " DELETE FROM   pmpaym_op_tmp "                               + "\n" +
                            "     WHERE   T_PAYMENTID IN (SELECT   T_PAYMENTID"           + "\n" +
                            "                                 FROM   usr_dpmpaym_tmp"     + "\n" +
                            "                               WHERE   T_INITMACRO = 'OP');" + "\n" +
                            "-- обновляем "                                               + "\n" +
                            " INSERT INTO pmpaym_op_tmp"                                  + "\n" +
                            "  (SELECT   * "                                              + "\n" +
                            "     FROM   usr_dpmpaym_tmp"                                 + "\n" +
                            "    WHERE   T_INITMACRO = 'OP' AND T_ERRORSTATUS = 1);"      + "\n" +
                            " delete from usr_dpmpaym_tmp where  T_INITMACRO = 'OP'"      + "\n" +
                            "  AND T_ERRORSTATUS = 1;"                                    + "\n" +
                            " END;");
        cmd.execute;

    end;
    macro scroll_err();
     return "SELECT /*+ Leading(tmp)*/   pmpaym.T_PAYMENTID,"
                               +"          prop.t_date,"
                               +"          prop.T_NUMBER,"
                               +"          pmpaym.T_PAYER,"
                               +"          party_p.T_SHORTNAME PAYER,"
                               +"          pmpaym.T_PAYERACCOUNT,"
                               +"          decode(pmpaym.T_Receiver,-1,'Внешний',pmpaym.T_Receiver) T_Receiver,"
                               +"          nvl(party_r.T_SHORTNAME,chr(1)) RECEIVER,"
                               +"          pmpaym.T_RECEIVERACCOUNT,"
                               +"          pmpaym.T_AMOUNT,"
                               +"          NVL ("
                               +"             (SELECT   BL.T_NAME stlist"
                               +"                FROM   doprstep_dbt st, doprblock_dbt bl"
                               +"               WHERE   st.t_id_operation = OPER.T_ID_OPERATION"
                               +"                AND st.T_BLOCKID = BL.T_BLOCKID"
                               +"                       AND st.t_id_step ="
                               +"                             (SELECT   MAX (t_id_step)"
                               +"                                FROM   doprstep_dbt t"
                               +"                               WHERE   t_id_operation = st.t_id_operation"
                               +"                                       AND t_isexecute <> CHR (0))),"
                               +"             'в отложенных'"
                               +"          )"
                               +"             step,tmp.T_ERRORMESSAGE,to_char(tmp.T_START_DATE,'dd.mm.yyyy hh24:mi:ss:mm')  stdate"
                               +"   FROM   usr_dpmpaym_tmp tmp,"
                               +"          dpmrmprop_dbt prop,"
                               +"          dpmpaym_dbt pmpaym,"
                               +"          doproper_dbt oper,"
                               +"          dparty_dbt party_p,"
                               +"          dparty_dbt party_r"
                               +"  WHERE       pmpaym.t_dockind = OPER.T_DOCKIND"
                               +"          AND OPER.T_DOCUMENTID = LPAD (pmpaym.t_paymentid, 34, 0)"
                               +"          AND pmpaym.t_paymentid = tmp.T_PAYMENTID"
                               +"          AND pmpaym.t_paymentid = prop.T_PAYMENTID"
                               +"          AND pmpaym.T_PAYER = PARTY_P.T_PARTYID"
                               +"          AND (tmp.t_errormessage LIKE '%компиляции%'"
                               +"          OR tmp.t_errormessage LIKE '%ORA%'" 
                               +"          OR tmp.t_errormessage LIKE '%застрял%'"
                               +"          OR tmp.t_errormessage LIKE '%Неверный тип значения%'"
                               +"          OR tmp.t_errormessage LIKE '%Невозможно зарезервировать%'"
                               +"          OR tmp.t_errormessage like '%доступ к свойству%' )"
                               +"          AND pmpaym.T_Receiver = PARTY_R.T_PARTYID(+) and tmp.T_ERRORSTATUS =1  order by tmp.T_START_DATE";
    end;
    
    //Проверка платежей на некорректные финальные шаги
   macro CHECK_ERR_STEP();
   var err_step,err_step_rs;
    err_step = RSDCommand ("DECLARE "+"\n"+
    " step   NUMBER;" +"\n"+
    " BEGIN" +"\n"+
    "   FOR err_step" +"\n"+
    "    IN (SELECT   pmpaym.t_paymentid," +"\n"+
    "         OPER.T_ID_OPERATION," +"\n"+
    "         ST.T_BLOCKID," +"\n"+
    "         ST.T_ISEXECUTE" +"\n"+
    "        FROM            usr_dpmpaym_tmp tmp"+"\n"+
    "         LEFT OUTER JOIN"+"\n"+
    "           dpmpaym_dbt pmpaym"+"\n"+
    "                    ON pmpaym.t_paymentid = tmp.T_PAYMENTID"+"\n"+
    "                 LEFT OUTER JOIN"+"\n"+
    "                    doproper_dbt oper"+"\n"+
    "                 ON OPER.T_DOCUMENTID = LPAD (pmpaym.t_paymentid, 34, 0) and OPER.T_DOCKIND =pmpaym.T_DOCKIND "+"\n"+
    "              LEFT OUTER JOIN"+"\n"+
    "                 doprstep_dbt st"+"\n"+
    "              ON st.t_id_operation = OPER.T_ID_OPERATION"+"\n"+
    "      WHERE   TMP.T_SKIPDOCUMENT in (1,2) /*AND TMP.T_ERRORSTATUS IS NULL*/"+"\n"+
    "              AND (st.t_id_step IS NULL" +"\n"+
    "                   OR st.t_id_step ="+"\n"+
    "                        (SELECT   MAX (t_id_step)"+"\n"+
    "                           FROM   doprstep_dbt t"+"\n"+
    "                          WHERE   t_id_operation = st.t_id_operation))" +"\n"+ 
    "              AND NOT  EXISTS" +"\n"+
    "                      (SELECT   1 " +"\n"+
    "                        FROM   doprstep_dbt sst " +"\n"+
    "                        WHERE   sst.t_id_operation = st.t_id_operation" +"\n"+
    "                        AND sst.t_oper != '20001' and sst.t_oper != '0' and TMP.T_SKIPDOCUMENT =1))" +"\n"+
    "  LOOP" +"\n"+
    "    IF err_step.t_blockid IS NOT NULL" +"\n"+
    "    THEN" +"\n"+
    "       CASE err_step.t_blockid" +"\n"+
    "          WHEN 10000130" +"\n"+
    "          THEN" +"\n"+
    "             IF err_step.T_ISEXECUTE != 'X'" +"\n"+
    "             THEN" +"\n"+
    "                UPDATE   usr_dpmpaym_tmp"+"\n"+ 
    "                   SET   T_ERRORSTATUS = 1,T_SKIPDOCUMENT=2,"+"\n"+ 
    "                         T_ERRORMESSAGE ='платеж застрял на шаге зачисления: '||err_step.t_paymentid "+"\n"+ 
    "                 WHERE   T_PAYMENTID = err_step.t_paymentid and T_SKIPDOCUMENT=1;" +"\n"+ 
    "             END IF;" +"\n"+
    "          WHEN 10000122" +"\n"+
    "          THEN" +"\n"+
    "             UPDATE   usr_dpmpaym_tmp" +"\n"+
    "                SET   T_ERRORSTATUS = 1,T_SKIPDOCUMENT=2,"+"\n"+
    "                      T_ERRORMESSAGE = 'платеж застрял на предобработке: '||err_step.t_paymentid "+"\n"+
    "              WHERE   T_PAYMENTID = err_step.t_paymentid and T_SKIPDOCUMENT=1;"+"\n"+
    "          WHEN 10000137 " +"\n"+
    "          THEN" +"\n"+
    "             UPDATE   usr_dpmpaym_tmp"+"\n"+
    "                SET   T_ERRORSTATUS = 1,T_SKIPDOCUMENT=2,"+"\n"+
    "                      T_ERRORMESSAGE = 'платеж застрял на ед. комиссии: '||err_step.t_paymentid "+"\n"+
    "              WHERE   T_PAYMENTID = err_step.t_paymentid and T_SKIPDOCUMENT=1;"+"\n"+
    "          ELSE"+"\n"+
    "            DELETE FROM   usr_dpmpaym_tmp"+"\n"+
    "                  WHERE   T_PAYMENTID = err_step.t_paymentid;" +"\n"+
    "       END CASE;" +"\n"+
    "    END IF;" +"\n"+
    "  END LOOP;" +"\n"+
    " Commit;"+"\n"+
    "  DELETE FROM   usr_dpmpaym_tmp"+"\n"+
    "      WHERE   T_ERRORSTATUS IS NULL AND T_SKIPDOCUMENT = 1;"+"\n"+
    " COMMIT;" +"\n"+
    " EXCEPTION" +"\n"+
    "   WHEN OTHERS THEN" +"\n"+
    "     NULL;" +"\n"+ 
    " END;");
    err_step.execute();
    err_step_rs= rsdrecordset ("select nvl(sum(case when t_purpose = 1 then 1 else 0 end),0) cnt_in,"+
                           "       nvl(sum(case when t_purpose = 0 then 1 else 0 end),0) cnt_out,nvl(sum(T_ERRORSTATUS),0) cnt_err from usr_dpmpaym_tmp");
        if (err_step_rs.movenext())
            return err_step_rs.value(2);
        else
            return 0;
        end;  
   
    end;

    
    macro m_plan()  /*Тарифный план*/
       return " (EXISTS (SELECT * " + 
              "    FROM dsfcontr_dbt cont, usr_sfplan sftime, dsfcontrplan_dbt plan " +
              "    WHERE     cont.t_object = pmpaym.t_payeraccount " +
              "          AND cont.t_id = plan.t_sfcontrid " +
              "          AND cont.t_objecttype = 1 " +
              "          AND cont.t_servkind = 3  " +
              "          AND sftime.t_flag = CHR (88) " +
              "          AND sftime.t_planid = plan.t_sfplanid " +
              "          AND (plan.t_end = TO_DATE ('01.01.0001', 'dd.mm.yyyy') " +
              "               OR plan.t_end > TO_DATE ('"+{curdate}+"', 'DD.MM.YYYY')) " +
              "      /*    AND SYSDATE <= TO_DATE (CONCAT ('"+{curdate}+"', sftime.t_time), 'DD.MM.YYYY HH24:MI:SS' )*/) ) ";
    end;
    macro m_plan_expect() // надо бы в m_vneshn() перенести....
        var uni="";
        if (fgBank.is_GEB) uni=" pmpaym.t_amount >= 500001 AND "; end;
        
        //Vaschenko D. I-00454854-2
        var clauseTime = "SYSDATE > TO_DATE (CONCAT ('" + {curdate} + "', sftime.t_time), 'DD.MM.YYYY HH24:MI:SS')", res;
        res = rsdrecordset("select distinct t_time from usr_sfplan order by t_time");
        while(res.movenext)
            //сканим платежи по времени вставки платежа, если время скрипта минус время по ТП меньше минуты
            if((time() > time(res.value(0))) and ((time() - time(res.value(0)) < time(00,01,00))))
                clauseTime = " (pmpaym.t_creationdate >= TO_DATE ('" + {curdate} + "', 'dd.mm.yyyy') " +
                             " AND pmpaym.t_creationtime > TO_DATE (CONCAT ('01.01.0001', sftime.t_time), 'DD.MM.YYYY HH24:MI:SS')) ";
                break;
            end;
        end;        
        
        return  " ( pmpaym.T_PAYERBANKID != pmpaym.T_RECEIVERBANKID AND " +
               uni+
               " EXISTS (SELECT * " + 
               "    FROM dsfcontr_dbt cont, usr_sfplan sftime, dsfcontrplan_dbt plan " +
               "    WHERE     cont.t_object = pmpaym.t_payeraccount " +
               "          AND cont.t_id = plan.t_sfcontrid " +
               "          AND cont.t_objecttype = 1 " +
               "          AND cont.t_servkind = 3  " +
               "          AND sftime.t_flag = CHR (88) " +
               "          AND sftime.t_planid = plan.t_sfplanid " +
               "          AND (plan.t_end = TO_DATE ('01.01.0001', 'dd.mm.yyyy') " +
               "               OR plan.t_end > TO_DATE ('"+{curdate}+"', 'DD.MM.YYYY')) "
               "          AND " + clauseTime + " ))";
    end;
     
      //Внутренние ГЕБ, отдаленно напоминают ПрББ, странные условия для внешних платежей
    macro  vneshn_vnutr_GEB()
        var retval, cond;
        if (BIC_BANK == "")
            cond = " pmpaym.t_payerbankid = pmpaym.t_receiverbankid ";
        else
            cond = " (pmpaym.t_payerbankid = pmpaym.t_receiverbankid or prop.t_bankcode in ("+BIC_BANK+")) ";
            no_empty = True;
        end;
        //VDN добавил условие по С-27827
         retval = "      AND ( (" + cond + 
             "                AND (REGEXP_LIKE (pmpaym.t_payeraccount, '^407|^406|^405|^40802|^423') " +
             "                AND (REGEXP_LIKE (pmpaym.t_receiveraccount, '^407|^406|^405|^40802|^423|^30232810209000060165')))) " +
             " OR (pmpaym.t_payerbankid != pmpaym.t_receiverbankid " +
             "                AND NOT( " + 
             "                       (pmpaym.t_amount >= 500001 " + 
             "                       AND EXISTS (SELECT *  " +
             "                       FROM dsfcontr_dbt cont, usr_sfplan sftime, dsfcontrplan_dbt plan " +
             "                       WHERE     cont.t_object = pmpaym.t_payeraccount " +
             "                             AND cont.t_id = plan.t_sfcontrid " +
             "                             AND cont.t_objecttype = 1 " +
             "                             AND cont.t_servkind = 3  " +
             "                             AND sftime.t_flag = CHR (88) " +
             "                             AND sftime.t_planid = plan.t_sfplanid " +
             "                             AND (plan.t_end = TO_DATE ('01.01.0001', 'dd.mm.yyyy') " +
             "                                  OR plan.t_end > TO_DATE ('"+{curdate}+"', 'DD.MM.YYYY')) " +
             "                             AND SYSDATE <= TO_DATE (CONCAT ('"+{curdate}+"', sftime.t_time), 'DD.MM.YYYY HH24:MI:SS' ))) " +
             " OR EXISTS (SELECT *  " + 
             "                       FROM dsfcontr_dbt cont, usr_sfplan sftime, dsfcontrplan_dbt plan " +
             "                       WHERE     cont.t_object = pmpaym.t_payeraccount " +
             "                             AND cont.t_id = plan.t_sfcontrid " +
             "                             AND cont.t_objecttype = 1 " +
             "                             AND cont.t_servkind = 3  " +
             "                             AND sftime.t_flag = CHR (88) " +
             "                             AND sftime.t_planid = plan.t_sfplanid " +
             "                             AND (plan.t_end = TO_DATE ('01.01.0001', 'dd.mm.yyyy') " +
             "                                  OR plan.t_end > TO_DATE ('"+{curdate}+"', 'DD.MM.YYYY')) " +
             "                             AND SYSDATE > TO_DATE (CONCAT ('"+{curdate}+"', sftime.t_time), 'DD.MM.YYYY HH24:MI:SS' )))) "+
             " OR EXISTS ( SELECT 1 "+
             "  FROM dobjatcor_dbt  " +
             " WHERE t_objecttype = 3 "+
             "   AND t_groupid = 111 "+
             "   AND t_attrid = 1 "+
             "   AND t_object = LPAD (pmpaym.t_payer, 10, '0')) ) ";

            return retval;
    end;
     
     
    //Внутренние ПрББ
    macro  vneshn_vnutr()
        var cond;
        if (BIC_BANK == "")
            cond = "  pmpaym.t_numberpack = 603 ";
        else
            cond = "  pmpaym.t_numberpack = 603 or prop.t_bankcode in ("+BIC_BANK+")";
        end;
        return " AND ("+cond+"  OR  1=( SELECT 1 "+
                "  FROM dobjatcor_dbt "+
                " WHERE t_objecttype = 4 "+
                "   AND t_groupid = 107 "+
                "   AND t_attrid = 2 "+
                "   AND t_object = '010000000'||pmpaym.t_payeraccount) OR "+
                " ( pmpaym.t_amount <= 500000 AND "+  
                "         EXISTS ( "+
                "              SELECT * "+
                "                FROM dsfcontr_dbt cont, "+
                "                     usr_sfplan sftime, "+
                "                     dsfcontrplan_dbt PLAN "+
                "               WHERE cont.t_object = pmpaym.t_payeraccount "+
                "                 AND cont.t_id = PLAN.t_sfcontrid "+
                "                 AND sftime.t_flag = chr(88) "+
                "                 AND PLAN.t_sfplanid = sftime.t_planid "+
                "                 AND (   PLAN.t_end = TO_DATE ('01.01.0001', 'dd.mm.yyyy') "+
                "                      OR PLAN.t_end > to_date ('"+{curdate}+"', 'DD.MM.YYYY')) "+
                "   AND sysdate <= TO_DATE (CONCAT ('"+{curdate}+" ', sftime.t_time), 'DD.MM.YYYY HH24:MI:SS' ) "+
                "                     )) "+
                "        OR NOT EXISTS ( "+
                "              SELECT * "+
                "                FROM dsfcontr_dbt cont, "+
                "                     usr_sfplan sftime, "+
                "                     dsfcontrplan_dbt PLAN "+
                "               WHERE cont.t_object = pmpaym.t_payeraccount "+
                "                 AND cont.t_id = PLAN.t_sfcontrid "+
                "                 AND sftime.t_flag = chr(88) "+
                "                 AND PLAN.t_sfplanid = sftime.t_planid "+
                "                 AND (   PLAN.t_end = TO_DATE ('01.01.0001', 'dd.mm.yyyy') "+
                "                      OR PLAN.t_end > to_date ('"+{curdate}+"', 'DD.MM.YYYY') "+
                "                     )) "+
                "        OR EXISTS ( SELECT 1 "+
                "  FROM dobjatcor_dbt "+
                " WHERE t_objecttype = 3 "+
                "   AND t_groupid = 111 "+
                "   AND t_attrid = 1 "+
                "   AND t_object = LPAD (pmpaym.t_payer, 10, '0')) ) ";
    end;
    //Vaschenko D. добавил передачу параметра BIC_BANK ветки реестра для внутригруповых
    //Vaschenko D. C-30528 условие проведения для Солидарности как в ПРбБ
    macro m_vneshn(BIC_BANK, retval) // работает толко в прбб и не только :)))
            var p_block;

            if (BIC_BANK != "")
                no_empty = True;
            end;
            
            p_block =   " and not REGEXP_LIKE(pmpaym.t_receiveraccount, '^401|^402|^403|^404')) " +
                        "  or (pmpaym.T_PAYERBANKID = pmpaym.T_RECEIVERBANKID " +
                        "  AND (REGEXP_LIKE(pmpaym.t_payeraccount, '^407|^406|^405|^40802|^423') " +
                        "  AND (REGEXP_LIKE(pmpaym.t_receiveraccount, '^407|^406|^405|^40802|^423'))))) ";
                        
            //Gurin S. 22.05.2015 и Пойдема 
            if (fgBank.is_EXV or fgBank.is_GO)
                retval=   " and ((pmpaym.T_PAYERBANKID != pmpaym.T_RECEIVERBANKID  "+p_block ;//  ДЛЯ САРАТОВА
            elif ((fgBank.is_PRBB) or (fgBank.is_SLD))
                retval=vneshn_vnutr;
            elif (fgBank.is_GEB)
                retval=vneshn_vnutr_GEB;
            else
                retval =  " ((pmpaym.T_PAYERBANKID != pmpaym.T_RECEIVERBANKID " +p_block;//  ДЛЯ ВУЗа
            end; 
            
            setparm(1, retval);
    end;
    macro vnutren()  //vnutren all ПРББ
        var cond;
        if (BIC_BANK == "")
            cond =  " AND (pmpaym.t_numberpack = 603 or 1=( SELECT 1 "+
                    "  FROM dobjatcor_dbt "+
                    " WHERE t_objecttype = 4 "+
                    "   AND t_groupid = 107 "+
                    "   AND t_attrid = 2 "+
                    "   AND t_object = '010000000'||pmpaym.t_payeraccount)) ";
        else
            cond =  " AND (pmpaym.t_numberpack = 603  or prop.t_bankcode in ("+BIC_BANK+") or 1=( SELECT 1 "+
                    "  FROM dobjatcor_dbt "+
                    " WHERE t_objecttype = 4 "+
                    "   AND t_groupid = 107 "+
                    "   AND t_attrid = 2 "+
                    "   AND t_object = '010000000'||pmpaym.t_payeraccount)) ";
        end;
        return cond +
                    " AND ( (REGEXP_LIKE(pmpaym.t_payeraccount, '^407|^408|^406|^405') AND (REGEXP_LIKE(pmpaym.t_receiveraccount, '^423|^426|^40817|^40820') ) ) "+
                    " OR ( (REGEXP_LIKE(pmpaym.t_payeraccount, '^407|^408|^406|^405') AND (REGEXP_LIKE(pmpaym.t_receiveraccount, '^452|^453|^454|^455')) ) )  "+
                    " OR ( (REGEXP_LIKE(pmpaym.t_payeraccount, '^407|^408|^406|^405') AND (REGEXP_LIKE(pmpaym.t_receiveraccount, '^407.......9|^408.......9|^406.......9|^405.......9')) )) "+
                    " OR ( (REGEXP_LIKE(pmpaym.t_payeraccount, '^407|^408|^406|^405') AND (REGEXP_LIKE(pmpaym.t_receiveraccount, '^407|^408|^406|^405') ) ) ) )  ";
    end;
    
    //Для всех остальных банков
    //Vaschenko D. добавил передачу параметра BIC_BANK ветки реестра для внутригруповых
    //Vaschenko D. C-30155 добавил маску счета 40817 для получателей
    //Vaschenko D. C-30528 условие проведения для Солидарности как в ПРбБ
    macro m_vnutren(BIC_BANK, retval)
        var cond=""; 
        if  ((fgBank.is_EXV) or (fgBank.is_GEB))  //  ДЛЯ САРАТОВА 
            if (BIC_BANK == "")
                cond = " AND pmpaym.T_PAYERBANKID = pmpaym.T_RECEIVERBANKID ";
            else
                cond = " AND (pmpaym.T_PAYERBANKID = pmpaym.T_RECEIVERBANKID or prop.t_bankcode in ("+BIC_BANK+")) ";
                no_empty = True;
            end;
            
            if  (fgBank.is_EXV)
                retval =  cond +
                      " AND (REGEXP_LIKE(pmpaym.t_payeraccount, '^407|^406|^405|^40802') AND (REGEXP_LIKE(pmpaym.t_receiveraccount, '^407|^406|^405|^40802|^423'))) ";
            else 
            //Добавил условие по наряду  31990 для ГЭБа
            //VDN добавил условие по С-27827
                retval =  cond +
                      " AND (REGEXP_LIKE(pmpaym.t_payeraccount, '^407|^406|^405|^40802|^423') AND (REGEXP_LIKE(pmpaym.t_receiveraccount, '^407|^406|^405|^40802|^423|^30232810209000060165'))) ";
            
            end;


        ELIF ((fgBank.is_PRBB) or (fgBank.is_SLD)) 
            retval = vnutren;
            if (BIC_BANK != "")  
                no_empty = True; 
            end;
        ELSE  //  ДЛЯ ВУЗа
            if (BIC_BANK == "") 
                cond = " pmpaym.T_PAYERBANKID = pmpaym.T_RECEIVERBANKID ";
            else
                cond = " (pmpaym.T_PAYERBANKID = pmpaym.T_RECEIVERBANKID or prop.t_bankcode in ("+BIC_BANK+")) ";
                no_empty = True;
            end;
            if (fgBank.is_VUZ)
                //VDN добавил условие по С-27827
                retval =  " (" + cond +
                      " AND (REGEXP_LIKE(pmpaym.t_payeraccount, '^407|^406|^405|^40802|^423') AND (REGEXP_LIKE(pmpaym.t_receiveraccount, '^407|^406|^405|^40817|^40802|^423')))) ";
            else
                retval =  " (" + cond +
                      " AND (REGEXP_LIKE(pmpaym.t_payeraccount, '^407|^406|^405|^40802') AND (REGEXP_LIKE(pmpaym.t_receiveraccount, '^407|^406|^405|^40802|^423')))) ";

                //VDN 03.07.2015
                if (fgBank.is_GO) retval = " AND " + retval; end;
            end;
        end;
        
        setparm(1, retval);
    end; 
    
   //Vaschenko D. добавил передачу параметра BIC_BANK ветки реестра для внутригруповых
   //Vaschenko D. C-30528 условие проведения для Солидарности как в ПРбБ
    macro m_nothing(BIC_BANK, retval)
        if (BIC_BANK == "")
            no_empty = True;
        end;
        if ((fgBank.is_EXV)or (fgBank.is_PRBB))
            retval =  " and 2 = 1 ";
        else
            retval =  " (2 = 1) ";
        end;
        setparm(1,retval);
    end;
    
    macro all
        return "and (1=1)";
    end;
    //Vaschenko D. добавил передачу параметра BIC_BANK ветки реестра для внутригруповых
    //Vaschenko D. C-30528 условие проведения для Солидарности как в ПРбБ
    //Gurin S. 20.05.2015 I-00567702-2
    macro m_all(BIC_BANK, retval)
        if ((fgBank.is_EXV) or (fgBank.is_PRBB) or (fgBank.is_GEB) or (fgBank.is_SLD) or (fgBank.is_GO))
            retval =  " and 1 = 1 ";
        else 
            retval = " (1 = 1)";
        end;  
        setparm(1,retval);
    end;

 macro get_ALL_OP /*Все платежи*/
 private  var sql="",evs_f="";
    /* Перечисляю условие
   1. Все платежи, которые есть в Ожидающие поступления
   2. Планируемая дата не больше открытого опердня
   3. На платеже не стоит признак ручной обработки
   4. На счете не стоит признак автомат. обработка - "нет"
   5. Если это внешний платеж, реальное время не должно быть больше чем указано в Тарифном плане по счету*/
    if ((time()>=time(16,00,00,00)) and (time()<=time(20,00,00,00))) //LAO 07.05.2013 заявка от Палагиной
        if (fgBank.is_EXV) //
            evs_f=evs_f+" and not (pmpaym.T_PAYERBANKID != pmpaym.T_RECEIVERBANKID and pmpaym.t_amount >= 50000000.01) ";
        end;
    end; 
   
    SQL="  SELECT /*+FIRST_ROWS LEADING(t oproper pspayord pmpaym pmprop pmrmprop oprcurst) INDEX(t doprstep_dbt_idx10) INDEX(pspayord dpspayord_dbt_idx0) INDEX(pmpaym dpmpaym_dbt_idx0) INDEX(pmprop dpmprop_dbt_idx0) USE_NL(t oproper pspayord pmpaym pmprop pmrmprop oprcurst)*/"
    +"       t.t_id_operation,null,"
    +"       pmpaym.t_DocKind,"
    +"       lpad (to_char (pmpaym.t_paymentid), 34, '0'),"
    +"       pmpaym.t_paymentid,"
    +"      decode (oproper.t_kind_operation, " 
    +"                    0, (select   min (t_kind_operation) " 
    +"                          from   doprkoper_dbt " 
    +"                         where   t_dockind = 29 and t_notinuse = chr (0) and t_kind_operation > 0), " 
    +"                    oproper.t_kind_operation) oper_kind /*если операция не определена то определяется*/, " 
    +"      rsbsessiondata.curdate, " 
    +"      chr (88), " 
    +"      null " 
    +" FROM   doprstep_dbt t,"
    +"       doprcurst_dbt oprcurst,"
    +"       doproper_dbt oproper,"
    +"       dpmpaym_dbt pmpaym,"
    +"       dpmprop_dbt pmprop,"
    +"       dpmrmprop_dbt pmrmprop,"
    +"       dpspayord_dbt pspayord"
    +" WHERE   (    t.t_dockind BETWEEN 201 AND 201"
    //1.Все платежи, которые есть в Ожидающие поступления
    +"        AND t.t_symbol =chr(137)"
    +"        AND t.t_isexecute = CHR (82)"
    //2. Планируемая дата не больше открытого опердня
    +"       AND t.t_plan_date <=  TO_DATE ('"+{curdate}+"', 'dd.mm.yyyy'))"
    +"       AND (    oproper.t_ID_Operation = t.t_ID_Operation"
    +"            AND pspayord.t_OrderID = TO_NUMBER (oproper.t_DocumentID)"
    +"            AND pmpaym.t_PaymentID = pspayord.t_OrderID"
    +"            AND pmpaym.t_DocKind = 201"
    +"            AND pmprop.t_PaymentID = pmpaym.t_PaymentID"
    +"            AND pmprop.t_DebetCredit = 1"
    +"            AND pmrmprop.t_PaymentID = pmpaym.t_PaymentID"
    +"            AND oprcurst.t_ID_Operation(+) = oproper.t_ID_Operation"
    +"            AND oprcurst.t_StatusKindId(+) = 292"
    +"            AND ( ( ( (1 = 1))))"
    +"                                )"
    +"       AND (t.t_ID_Operation <> 0)"
    +"            and pspayord.t_origin = 2 " 
    +evs_f
    //3. На платеже не стоит признак ручной обработки
    +"        AND NOT EXISTS ( SELECT 1 "
    +"  FROM dobjatcor_dbt "
    +" WHERE t_objecttype = 501 "
    +"   AND t_groupid = 1003 "
    +"   AND t_attrid = 1 "
    +"   AND t_object = LPAD (pmpaym.t_paymentid, 10, '0'))  "
    //4. На счете не стоит признак автомат. обработка - "нет"
    +"        AND NOT EXISTS ( SELECT 1 "
    +"  FROM dobjatcor_dbt "
    +" WHERE t_objecttype = 4 "
    +"   AND t_groupid = 107 "
    +"   AND t_attrid = 1 "
    +"   AND t_object = '010000000'||pmpaym.t_payeraccount)";
    //5. Если это внешний платеж, реальное время не должно быть больше чем указано в Тарифном плане по счету
    //LAO для ОП такой проверки быть не должно, когда пришли деньги - тогда ушел платеж
    /*+" AND NOT( pmpaym.T_PAYERBANKID != pmpaym.T_RECEIVERBANKID AND " 
    +" EXISTS (SELECT * " 
    + "    FROM dsfcontr_dbt cont, usr_sfplan sftime, dsfcontrplan_dbt plan " 
    + "    WHERE     cont.t_object = pmpaym.t_payeraccount " 
    + "          AND cont.t_id = plan.t_sfcontrid " 
    + "          AND cont.t_objecttype = 1 " 
    + "          AND cont.t_servkind = 3  " 
    + "          AND sftime.t_flag = CHR (88) " 
    + "          AND sftime.t_planid = plan.t_sfplanid " 
    + "          AND (plan.t_end = TO_DATE ('01.01.0001', 'dd.mm.yyyy') " 
    + "          OR  plan.t_end > TO_DATE ('"+{curdate}+"', 'DD.MM.YYYY')) "
    + "          AND SYSDATE > TO_DATE (CONCAT ('"+{curdate}+"', sftime.t_time), 'DD.MM.YYYY HH24:MI:SS' )) ) ";*/
               
    return SQL;
 end;   
//LAO оставляем до лучших времен, все ОП должны ходить независимо от каких-либо временных интервалов кроме nothing
//есть лишь один нюанс, что делать с платежами которые пришли после 16-00 но вручную были поставлены на ОП?
 macro get_IN_OP /*внутренние платежи*/ 
    private var sql="",evs_f="",cond="";
    
   /* if ((time()>=time(16,00,00,00)) and (time()<=time(20,00,00,00))) //LAO 07.05.2013 заявка от Палагиной
        if (fgBank.is_EXV) //
           evs_f=evs_f+" and not (pmpaym.T_PAYERBANKID != pmpaym.T_RECEIVERBANKID and pmpaym.t_amount >= 50000000.01) ";
        end;
    end; */

//определяем правила подстановки в зависимости от Банка
//  ДЛЯ САРАТОВА и ВУЗа однозначно
   // if (fgBank.is_EXV) //  ДЛЯ САРАТОВА
        if (BIC_BANK == "")
            cond = " AND pmpaym.T_PAYERBANKID = pmpaym.T_RECEIVERBANKID ";
        else
            cond = " AND (pmpaym.T_PAYERBANKID = pmpaym.T_RECEIVERBANKID or pmprop.t_bankcode in ("+BIC_BANK+")) ";
        end;
            cond =  cond +
                      " AND (REGEXP_LIKE(pmpaym.t_payeraccount, '^407|^406|^405|^40802') AND (REGEXP_LIKE(pmpaym.t_receiveraccount, '^407|^406|^405|^40802|^423'))) ";
    /*ELIF  (fgBank.is_VUZ) //  ДЛЯ ВУЗа
        if (BIC_BANK == "")
            cond = " pmpaym.T_PAYERBANKID = pmpaym.T_RECEIVERBANKID ";
        else
            cond = " (pmpaym.T_PAYERBANKID = pmpaym.T_RECEIVERBANKID or pmprop.t_bankcode in ("+BIC_BANK+")) ";
        end;
            cond =  " (" + cond +
                      " AND (REGEXP_LIKE(pmpaym.t_payeraccount, '^407|^406|^405|^40802') AND (REGEXP_LIKE(pmpaym.t_receiveraccount, '^407|^406|^405|^40802|^423')))) ";
    ELSE //ПрББ
        if (BIC_BANK == "")
            cond = " AND pmpaym.t_numberpack = 603 ";
        else
            cond = " AND (pmpaym.t_numberpack = 603 or pmprop.t_bankcode in ("+BIC_BANK+"))";
        end;
    end;*/
    
    //В ВУЗе бегают так же внешние в зависимости от ТП
  //  if (fgBank.is_VUZ)
  //    cond = " and (" + cond + " AND NOT " + m_plan_expect + ") ";
  //  end; 

    /* Перечисляю условие
    1. Все платежи, которые есть в Ожидающие поступления
    2. Планируемая дата не больше открытого опердня
    3. На платеже не стоит признак ручной обработки
    4. На счете не стоит признак автомат. обработка - "нет"
    5. Если это внешний платеж, реальное время не должно быть больше чем указано в Тарифном плане по счету*/
   
    SQL="  SELECT /*+FIRST_ROWS LEADING(t oproper pspayord pmpaym pmprop pmrmprop oprcurst) INDEX(t doprstep_dbt_idx10) INDEX(pspayord dpspayord_dbt_idx0) INDEX(pmpaym dpmpaym_dbt_idx0) INDEX(pmprop dpmprop_dbt_idx0) USE_NL(t oproper pspayord pmpaym pmprop pmrmprop oprcurst)*/"
    +"       t.t_id_operation,null,"
    +"       pmpaym.t_DocKind,"
    +"       lpad (to_char (pmpaym.t_paymentid), 34, '0'),"
    +"       pmpaym.t_paymentid,"
    +"       decode (oproper.t_kind_operation, " 
    +"                    0, (select   min (t_kind_operation) " 
    +"                          from   doprkoper_dbt " 
    +"                         where   t_dockind = 29 and t_notinuse = chr (0) and t_kind_operation > 0), " 
    +"                    oproper.t_kind_operation) oper_kind /*если операция не определена то определяется*/, " 
    +"      rsbsessiondata.curdate, " 
    +"      chr (88), " 
    +"      null " 
    +" FROM   doprstep_dbt t,"
    +"       doprcurst_dbt oprcurst,"
    +"       doproper_dbt oproper,"
    +"       dpmpaym_dbt pmpaym,"
    +"       dpmprop_dbt pmprop,"
    +"       dpmrmprop_dbt pmrmprop,"
    +"       dpspayord_dbt pspayord"
    +" WHERE   (    t.t_dockind BETWEEN 201 AND 201"
    +"        AND t.t_symbol =chr(137)"
    +"        AND t.t_isexecute = CHR (82)"
    +"        AND t.t_plan_date <=  TO_DATE ('"+{curdate}+"', 'dd.mm.yyyy'))"
    +"       AND (    oproper.t_ID_Operation = t.t_ID_Operation"
    +"            AND pspayord.t_OrderID = TO_NUMBER (oproper.t_DocumentID)"
    +"            AND pmpaym.t_PaymentID = pspayord.t_OrderID"
    +"            AND pmpaym.t_DocKind = 201"
    +"            AND pmprop.t_PaymentID = pmpaym.t_PaymentID"
    +"            AND pmprop.t_DebetCredit = 1"
    +"            AND pmrmprop.t_PaymentID = pmpaym.t_PaymentID"
    +"            AND oprcurst.t_ID_Operation(+) = oproper.t_ID_Operation"
    +"            AND oprcurst.t_StatusKindId(+) = 292"
    +"            AND ( ( ( (1 = 1))))"
    +"                                )"
    +"       AND (t.t_ID_Operation <> 0)"
    //. На платеже не стоит признак ручной обработки
    +"        AND NOT EXISTS ( SELECT 1 "
    +"  FROM dobjatcor_dbt "
    +" WHERE t_objecttype = 501 "
    +"   AND t_groupid = 1003 "
    +"   AND t_attrid = 1 "
    +"   AND t_object = LPAD (pmpaym.t_paymentid, 10, '0'))  "
    // 4. На счете не стоит признак автомат. обработка - "нет"
    +"        AND NOT EXISTS ( SELECT 1 "
    +"  FROM dobjatcor_dbt "
    +" WHERE t_objecttype = 4 "
    +"   AND t_groupid = 107 "
    +"   AND t_attrid = 1 "
    +"   AND t_object = '010000000'||pmpaym.t_payeraccount)"
   // Если это внешний платеж(ВУЗ), реальное время не должно быть больше чем указано в Тарифном плане по счету
    +cond
 /*   +" EXISTS (SELECT * " 
    +"    FROM dsfcontr_dbt cont, usr_sfplan sftime, dsfcontrplan_dbt plan " 
    +"    WHERE     cont.t_object = pmpaym.t_payeraccount " 
    +"          AND cont.t_id = plan.t_sfcontrid " 
    +"          AND cont.t_objecttype = 1 " 
    +"          AND cont.t_servkind = 3  " 
    +"          AND sftime.t_flag = CHR (88) " 
    +"          AND sftime.t_planid = plan.t_sfplanid " 
    +"          AND (plan.t_end = TO_DATE ('01.01.0001', 'dd.mm.yyyy') " 
    +"          OR  plan.t_end > TO_DATE ('"+{curdate}+"', 'DD.MM.YYYY')) "
    +"          AND SYSDATE > TO_DATE (CONCAT ('"+{curdate}+"', sftime.t_time), 'DD.MM.YYYY HH24:MI:SS' )) ) "*/;
               
    return SQL;
 end;   

//  кол-во платежей - ПрББ

  macro get_COUNT_PM_SQL(final_step) //Для ПрББ
    private var sql="",evs_f="",cond="",block_param,from="",condition="";
    if (not isholiday({curdate}))
        if  (final_step=="m_vnutren")
            block_param = vnutren();
        elif (final_step=="m_vneshn")
            block_param = vneshn_vnutr();
        elif (final_step=="m_all")
            block_param = all(); 
        end;
    else
        block_param = vneshn_vnutr();
    end;

    if (BIC_BANK!="")
        from      = "     from   dpmpaym_dbt pm, dpspayord_dbt ps, doproper_dbt op, dpmrmprop_dbt pr, dpmprop_dbt prop ";
        condition = "            and pmpaym.t_documentid = prop.t_paymentid and prop.t_debetcredit = 1 ";
    else
        from      = "     from   dpmpaym_dbt pm, dpspayord_dbt ps, doproper_dbt op, dpmrmprop_dbt pr ";
    end; 

    cond="   select   count(1) as cnt " +
                      from + 
                      "    where       pmpaym.t_dockind = 201 " +
                      "            and pmpaym.t_documentid = ps.t_orderid " +
                      condition + 
                      "            and ps.t_currentstate = 0 " +
                      "            and ps.t_origin = 2 " +
                      block_param +// Зависит от таблицы временных диапазонов
                      "            and (pr.t_date <= to_date ('"+{curdate}+"', 'DD.MM.YYYY') or pr.t_date <= to_date ('"+{curdate}+"', 'DD.MM.YYYY') )" +
                      "            and op.t_documentid = lpad (to_char (pmpaym.t_paymentid), 34, '0') " +
                      "            and op.t_dockind = pmpaym.t_dockind " +
                      "            and pr.t_paymentid = pmpaym.t_paymentid "+
                      "        AND NOT EXISTS ( SELECT 1 "+
                      "  FROM dobjatcor_dbt "+
                      " WHERE t_objecttype = 501 "+
                      "   AND t_groupid = 1003 "+
                      "   AND t_attrid = 1 "+
                      "   AND t_object = LPAD (pmpaym.t_paymentid, 10, '0'))  "+
                      "        AND NOT EXISTS ( SELECT 1 "+
                      "  FROM dobjatcor_dbt "+
                      " WHERE t_objecttype = 4 "+
                      "   AND t_groupid = 107 "+
                      "   AND t_attrid = 1 "+
                      "   AND t_object = '010000000'||pmpaym.t_payeraccount)  ";
    return cond;

  end;
  
  
  macro get_ALL(final)
     private var sql="",evs_f="",BIC_BANK="",err,cond="";
     

  end;
  
Macro StartOP(add_clause,ret)
    var from = "", condition = "",cmd,r,op;
    var z:integer=0;
    var i:integer=0;
    var scr;
    opr.kindoperation = 24001;
    opr.dockind = 201;
    
    ClearDoprtemp();
   // ClearUsr_Doprtemp();

    
    
    SaveBeginTime (); //Старт
    rsldefcon.BeginTrans;
    if (fgBank.is_EXV)
        if ((time()>=time(19,00,00,00)) or (time()<=TIME(09,00,00,00))) 
            condition=get_IN_OP();
        else  
            condition=get_ALL_OP();
        end; 

    elif (fgBank.is_VUZ)
       if ((time()>=time(20,00,00,00)) or (time()<=TIME(09,00,00,00))) 
            condition=get_IN_OP();
        else  
            condition=get_ALL_OP();
        end; 
   
    elif (fgBank.is_GEB)
       if ((time()>=time(20,00,00,00)) or (time()<=TIME(09,00,00,00))) 
            condition=get_IN_OP();
        else  
            condition=get_ALL_OP();
        end; 

    elif (fgBank.is_PRBB)
       if ((time()>=time(20,30,00,00)) or (time()<=TIME(09,00,00,00))) 
            condition=get_IN_OP();
        else  
            condition=get_ALL_OP();
        end; 
     else
        if ((time()>=time(19,00,00,00)) or (time()<=TIME(09,00,00,00))) 
            condition=get_IN_OP();
        else      
            condition=get_ALL_OP();
        end;     
        
    end;
    
    
         
        cmd=RSDCommand("insert into doprtemp_tmp (t_id_operation, " +
            "                          t_sort, " +
            "                          t_dockind, " +
            "                          t_documentid, " +
            "                          t_orderid, " +
            "                          t_kind_operation, " +
            "                          t_start_date, " +
            "                          t_isnew, " +
            "                          t_id_step) " +
            condition+
            "and pmpaym.t_paymentid not in(select t_paymentid from  USR_DPMPAYM_TMP)");
    
    
    cmd.execute;
    //1
//  Если по счету есть К2
/*
    cmd = RSDCommand("DELETE FROM   doprtemp_tmp t"+
                     " WHERE   t.t_orderid IN"+
                     " (SELECT   t_orderid"+
                     "   FROM   doprtemp_tmp op,"+
                     "          dpmpaym_dbt paym,"+
                     "          daccount_dbt acc"+
                     "  WHERE       op.t_orderid = PAYM.T_PAYMENTID"+
                     "          AND paym.T_PAYERACCOUNT = ACC.T_ACCOUNT"+
                     "          AND ACC.T_INDEX2 = 'X')");
    cmd.execute;*/
    
// Если уже появились шаги
/*    cmd = RSDCommand("delete from doprtemp_tmp op where exists (select 1 from doprstep_dbt where t_id_operation = op.t_id_operation)");
    cmd.execute;*/
    
//  Если есть стоп платежи связанные с удалением
    cmd = RSDCommand(" delete from doprtemp_tmp op where t_orderid in (SELECT   T_PAYMENTID"
                    +" FROM   USR_Nightly_TMP"
                    +" WHERE   TO_DATE (T_START_DATE, 'dd.mm.yyyy hh24:mi:ss') >="
                    +" TO_DATE (SYSDATE, 'dd.mm.yyyy hh24:mi:ss'))");
    cmd.execute;
//  Чистим таблицу 
    cmd = RSDCommand("delete from USR_Nightly_TMP WHERE   TO_DATE (T_START_DATE, 'dd.mm.yyyy hh24:mi:ss') <="
                    +" TO_DATE (SYSDATE, 'dd.mm.yyyy hh24:mi:ss')");
    cmd.execute;

    r = rsdrecordset("select count(1) from doprtemp_tmp ");

    if (r.movenext())
       SaveAmount (r.value(0));//Количество
    end;

    cmd = RSDCommand("select * from dpmpaym_dbt where t_paymentid in (select t_orderid from doprtemp_tmp) for update nowait");
    setdialogflag(0);
    cmd.execute;
    setdialogflag(1);
    cmd=RSDCommand("   INSERT INTO usr_doprtemp_tmp "
                                      " (SELECT tmp.t_sort, "+
                                              " tmp.t_dockind, "+
                                              " tmp.t_documentid, "+
                                              " tmp.t_id_operation, "+
                                              " tmp.t_orderid, "+
                                              " tmp.t_kind_operation, "+
                                              " tmp.t_isnew, "+
                                              " tmp.t_id_step, "+
                                              " tmp.t_start_date, "+
                                              " tmp.t_errorstatus, "+
                                              " tmp.t_errormessage, "+
                                              " tmp.t_skipdocument, "+
                                              " tmp.t_massoprstart, "+
                                              " tmp.t_initmacro, "+
                                              " tmp.t_newoper, "+
                                              " tmp.t_oprcompleted, "+
                                              " tmp.t_parent_id_operation, "+
                                              " tmp.t_parent_id_step, "+
                                              " paym.t_creationdate, "+
                                              " paym.t_creationtime, "+
                                              " prop.t_priority, "+
                                              " paym.t_payeraccount "+
                                       " FROM doprtemp_tmp tmp, dpmpaym_dbt paym, dpmrmprop_dbt prop "+
                                       " WHERE tmp.t_orderid = paym.t_paymentid "+
                                             " AND paym.t_paymentid = prop.t_paymentid)");
//    cmd=RSDCommand("insert into usr_doprtemp_tmp ( select tmp.*,paym.t_creationdate,paym.T_CREATIONTIME,prop.t_priority,paym.T_PAYERACCOUNT from doprtemp_tmp tmp,dpmpaym_dbt paym,dpmrmprop_dbt prop"
//                   +"    where tmp.t_orderid=paym.t_paymentid and paym.t_paymentid=prop.t_paymentid);");
//    cmd=RSDCommand("insert into usr_doprtemp_tmp ( select * from doprtemp_tmp);");
    cmd.Execute();

    cmd = RSDCommand(
                     "update   dpspayord_dbt t " +
                     "   set   t_oper = ? " +
                     " where   exists (select   1 " +
                     "                   from   doprtemp_tmp " +
                     "                  where   t_orderid = t.t_orderid) "
                    );
    cmd.addparam("oper", RSDBP_IN, {oper});
    cmd.Execute();

    cmd = RSDCommand(
                     "update   dpmpaym_dbt t " +
                     "   set   t_oper = ? " +
                     " where   exists (select   1 " +
                     "                   from   doprtemp_tmp " +
                     "                  where   t_orderid = t.t_paymentid) "
                    );
    cmd.addparam("oper", RSDBP_IN, {oper});
    cmd.Execute();
    
    cmd=RSDCommand("begin ? := wld_common.definemessagereleaseforpmmass (false); end;");
    cmd.addParam("stat", RSDBP_RETVAL, V_INTEGER);
    cmd.Execute();
    
   
    cmd = RSDCommand("declare " +
                     "   v_cnt   number; " +
                     "   v_rng   number; " +
                     "begin " +
                     "   select   count (1) into v_cnt from doprtemp_tmp; " +
                     "   update   doprtemp_tmp " +
                     "      set   t_sort = null; " +
                     "   for i " +
                     "   in (  select   pmpaym.t_payeraccount, count (1) acc_cnt, rownum ac_num " +
                     "           from   doprtemp_tmp op, dpmrmprop_dbt prop, dpmpaym_dbt pmpaym " +
                     "          where       op.t_orderid = pmpaym.t_paymentid " +
                     "                  and op.t_dockind = pmpaym.t_dockind                   " +
                     "                  and pmpaym.t_paymentid = prop.t_paymentid                   " +
                     "       group by   pmpaym.t_payeraccount, rownum " +
                     "       order by   count (1) desc) " +
                     "   loop " +
                     "      for j in (  select   pmpaym.t_documentid, rownum n " +
                     "                    from   doprtemp_tmp op, dpmpaym_dbt pmpaym " +
                     "                   where   op.t_documentid = pmpaym.t_paymentid and pmpaym.t_payeraccount = i.t_payeraccount " +
                     "                order by   t_paymentid) " +
                     "      loop " +
                     "         v_rng := round (v_cnt / i.acc_cnt); " +
                     "         update   doprtemp_tmp " +
                     "            set   t_sort = v_rng * j.n + i.ac_num " +
                     "          where   t_orderid = j.t_documentid; " +
                     "      end loop; " +
                     "   end loop; " +
                     "end; "
                    );
    cmd.Execute;

    rsldefcon.CommitTrans;
       //Делаем условную разбивку на приоритеты 1-6. дату создания и время.
    z=6;
    FOR (i,1,z)
        cmd=rsdcommand ("begin ?:=usr_check_amount (?,?); end;");
        cmd.addParam("st", RSDBP_RETVAL,V_integer);  
        cmd.addParam("prior", RSDBP_IN, i);  
        cmd.addParam("date", RSDBP_IN, {curdate});  
        cmd.execute;
    END;    
      //  scr = endQueryCapture ();
 //       scr = execSqlSelect (scr, makeArray (SqlParam ("t_prior",i),SqlParam ("date",{curdate}),SqlParam ("t_pri",i),SqlParam ("t_pr",i))); 
 
       /*     cmd = RSDCommand("SELECT   tmp.T_ORDERID,"+
                      " tmp.T_DOCKIND,"+
                      " CASE WHEN pmpaym.T_PAYERBANKID = pmpaym.T_RECEIVERBANKID THEN 1 ELSE 0 END"+
                      "   out_p"+
                      " FROM   doprtemp_tmp tmp, dpmpaym_dbt pm,dpmrmprop_dbt pmp"+
                      " WHERE   tmp.t_orderid = pmpaym.t_paymentid and pmpaym.t_paymentid = pmp.t_paymentid "+
                      " AND pmp.t_priority = ? ORDER BY tmp.t_sort,pmpaym.T_CREATIONDATE,pmpaym.T_CREATIONTIME;");
            cmd.addParam("prior", RSDBP_IN, i);          
            cmd.execute;
            r = rsdrecordset(cmd);*/
            
      
      /*      while (r.movenext())
               // RsbExecuteStep(r.value("T_ORDERID"),r.value("T_DOCKIND"),r.value("out_p"));
               //своя процедура обработки 
                AddPM(r.value("T_ORDERID"),r.value("T_DOCKIND"),r.value("out_p"),"OP"); // запишем информацию по платежу во временную таблицу, а при проверке ответов из пайп-канала - удалим эту информацию.
                rep_file_succ = GetTxtFileName("report_paym_succ");
                rep_file_err  = GetTxtFileName("report_paym_err");
                setoutput(null,true);
            end;*/

    ClearDoprtemp();
   // ClearUsr_Doprtemp();

    SaveEndTime (10); //Закончили
    onerror(er);
    catch(er);
end; 

Macro StartPPK(add_clause,ret)
   private  var from = "", condition = "",cmd,r;
    opr.kindoperation = 24002;
    opr.dockind = 200;

    ClearDoprtemp();
  //  ClearUsr_Doprtemp();

    rsldefcon.BeginTrans;

    SaveBeginTime (); //Старт

    cmd = RSDCommand("insert into doprtemp_tmp (t_id_operation, " +
                "                               t_sort, " +
                "                               t_dockind, " +
                "                               t_documentid, " +
                "                               t_orderid, " +
                "                               t_kind_operation, " +
                "                               t_start_date, " +
                "                               t_isnew, " +
                "                               t_id_step) " +
                "   select   op.t_id_operation, " +
                "            null, " +
                "            pmpaym.t_dockind, " +
                "            lpad (to_char (pmpaym.t_paymentid), 34, '0'), " +
                "            pmpaym.t_paymentid, " +
                "            decode (op.t_kind_operation, " +
                "                    0, (select   min (t_kind_operation) " +
                "                          from   doprkoper_dbt " +
                "                         where   t_dockind = 200 and t_notinuse = chr (0) and t_kind_operation > 0), " +
                "                    op.t_kind_operation) /*если операция не определена то определяется*/, " +
                "            rsbsessiondata.curdate, " +
                "            chr (88), " +
                "            null " +
                "            from dpmpaym_dbt pmpaym,doproper_dbt op, dps_bcord_dbt ps,dpmrmprop_dbt pr " +
                "    where       op.t_dockind = 200 " +
                "            and pmpaym.t_documentid = ps.t_paymentid " +
                                "            and ps.t_state = 0 " +
                "            and ps.t_origin = 2 " +
                             "            and pr.t_date <= to_date ('"+{curdate}+"', 'DD.MM.YYYY') " +
                "            and op.t_documentid = lpad (to_char (pmpaym.t_paymentid), 34, '0') " +
                "            and op.t_dockind =pmpaym.t_dockind " +
                "            and pr.t_paymentid =pmpaym.t_paymentid "+
                " AND  EXISTS"+
                " (SELECT   1"+
                "    FROM   dobjatcor_dbt"+
                "       WHERE       t_objecttype = 501"+
                "          AND t_groupid = 1003"+
                "          AND t_attrid = 2"+
                "          AND t_object = LPAD (pmpaym.t_paymentid, 10, '0'))");

    cmd.execute;
    //1
// Если уже появились шаги
    cmd = RSDCommand("delete from doprtemp_tmp op where exists (select 1 from doprstep_dbt where t_id_operation = op.t_id_operation)");
    cmd.execute;
//  Если есть стоп платежи связанные с удалением
    cmd = RSDCommand(" delete from doprtemp_tmp op where t_orderid in (SELECT   T_PAYMENTID"
                    +" FROM   USR_Nightly_TMP"
                    +" WHERE   TO_DATE (T_START_DATE, 'dd.mm.yyyy hh24:mi:ss') >="
                    +" TO_DATE (SYSDATE, 'dd.mm.yyyy hh24:mi:ss'))");
    cmd.execute;

//  Чистим таблицу 
    cmd = RSDCommand("delete from USR_Nightly_TMP WHERE   TO_DATE (T_START_DATE, 'dd.mm.yyyy hh24:mi:ss') <="
                    +" TO_DATE (SYSDATE, 'dd.mm.yyyy hh24:mi:ss')");
    cmd.execute;

    r = rsdrecordset("select count(1) from doprtemp_tmp ");

    if (r.movenext())
       SaveAmount (r.value(0));//Количество
    end;

    cmd = RSDCommand("select * from dpmpaym_dbt where t_paymentid in (select t_orderid from doprtemp_tmp) for update nowait");
    setdialogflag(0);
    cmd.execute;
    setdialogflag(1);
    //Vaschenko 04.03.2014 Изменения под 20.31
    cmd=RSDCommand("   INSERT INTO usr_doprtemp_tmp "
                                      " (SELECT tmp.t_sort, "+
                                              " tmp.t_dockind, "+
                                              " tmp.t_documentid, "+
                                              " tmp.t_id_operation, "+
                                              " tmp.t_orderid, "+
                                              " tmp.t_kind_operation, "+
                                              " tmp.t_isnew, "+
                                              " tmp.t_id_step, "+
                                              " tmp.t_start_date, "+
                                              " tmp.t_errorstatus, "+
                                              " tmp.t_errormessage, "+
                                              " tmp.t_skipdocument, "+
                                              " tmp.t_massoprstart, "+
                                              " tmp.t_initmacro, "+
                                              " tmp.t_newoper, "+
                                              " tmp.t_oprcompleted, "+
                                              " tmp.t_parent_id_operation, "+
                                              " tmp.t_parent_id_step, "+
                                              " paym.t_creationdate, "+
                                              " paym.t_creationtime, "+
                                              " prop.t_priority, "+
                                              " paym.t_payeraccount "+
                                       " FROM doprtemp_tmp tmp, dpmpaym_dbt paym, dpmrmprop_dbt prop "+
                                       " WHERE tmp.t_orderid = paym.t_paymentid "+
                                             " AND paym.t_paymentid = prop.t_paymentid)");
//    cmd=RSDCommand("insert into usr_doprtemp_tmp ( select tmp.*,paym.t_creationdate,paym.T_CREATIONTIME,prop.t_priority,paym.T_PAYERACCOUNT from doprtemp_tmp tmp,dpmpaym_dbt paym,dpmrmprop_dbt prop"
//                   +"    where tmp.t_orderid=paym.t_paymentid and paym.t_paymentid=prop.t_paymentid);");
    cmd.Execute();

    cmd = RSDCommand(
                     "update   dps_bcord_dbt t " +
                     "   set   t_oper = ? " +
                     " where   exists (select   1 " +
                     "                   from   doprtemp_tmp " +
                     "                  where   t_orderid = t.t_paymentid) "
                    );
    cmd.addparam("oper", RSDBP_IN, {oper});
    cmd.Execute();

    cmd = RSDCommand(
                     "update   dpmpaym_dbt t " +
                     "   set   t_oper = ? " +
                     " where   exists (select   1 " +
                     "                   from   doprtemp_tmp " +
                     "                  where   t_orderid = t.t_paymentid) "
                    );
    cmd.addparam("oper", RSDBP_IN, {oper});
    cmd.Execute();
    
    cmd=RSDCommand("begin ? := wld_common.definemessagereleaseforpmmass (false); end;");
    cmd.addParam("stat", RSDBP_RETVAL, V_INTEGER);
    cmd.Execute();
    
   
    cmd = RSDCommand("declare " +
                     "   v_cnt   number; " +
                     "   v_rng   number; " +
                     "begin " +
                     "   select   count (1) into v_cnt from doprtemp_tmp; " +
                     "   update   doprtemp_tmp " +
                     "      set   t_sort = null; " +
                     "   for i " +
                     "   in (  select   pmpaym.t_payeraccount, count (1) acc_cnt, rownum ac_num " +
                     "           from   doprtemp_tmp op, dpmrmprop_dbt prop, dpmpaym_dbt pmpaym " +
                     "          where       op.t_orderid = pmpaym.t_paymentid " +
                     "                  and op.t_dockind = pmpaym.t_dockind                   " +
                     "                  and prop.t_paymentid = pmpaym.t_paymentid                   " +
                     "       group by   pmpaym.t_payeraccount, rownum " +
                     "       order by   count (1) desc) " +
                     "   loop " +
                     "      for j in (  select   pmpaym.t_documentid, rownum n " +
                     "                    from   doprtemp_tmp op, dpmpaym_dbt pmpaym " +
                     "                   where   op.t_documentid =pmpaym.t_paymentid and pmpaym.t_payeraccount = i.t_payeraccount " +
                     "                order by   pmpaym.t_paymentid) " +
                     "      loop " +
                     "         v_rng := round (v_cnt / i.acc_cnt); " +
                     "         update   doprtemp_tmp " +
                     "            set   t_sort = v_rng * j.n + i.ac_num " +
                     "          where   t_orderid = j.t_documentid; " +
                     "      end loop; " +
                     "   end loop; " +
                     "end; "
                    );
    cmd.Execute;
     if (opr.change_opr_stat(9801,2/*состояние=открыт*/) and opr.change_opr_stat(9802, 1/*ДО=предобработка*/) and opr.start_operation)
       rsldefcon.CommitTrans;
       cmd = RSDCommand("SELECT   tmp.T_ORDERID,"+
                      " tmp.T_DOCKIND,"+
                      " CASE WHEN pmpaym.T_PAYERBANKID = pmpaym.T_RECEIVERBANKID THEN 1 ELSE 0 END"+
                      "   out_p"+
                      " FROM   doprtemp_tmp tmp, dpmpaym_dbt pmpaym"+
                      " WHERE   tmp.t_orderid = pmpaym.t_paymentid");
       cmd.execute;
       r = rsdrecordset(cmd);
     //  ClearUsr_Doprtemp();

      
       while (r.movenext())
           RsbExecuteStep(r.value("T_ORDERID"),r.value("T_DOCKIND"),r.value("out_p"));
           AddPM(r.value("T_ORDERID"),r.value("T_DOCKIND"),r.value("out_p"),"PPK"); // запишем информацию по платежу во временную таблицу, а при проверке ответов из пайп-канала - удалим эту информацию.
           rep_file_succ = GetTxtFileName("report_paym_succ");
           rep_file_err  = GetTxtFileName("report_paym_err");
           setoutput(null,true);
       end;
     else
      println("Ошибка запуска операции: "+opr.lasterror+"\nдокументы находятся в списке отложенных");
       rsldefcon.RollbackTrans;
     end; 
     
    ClearDoprtemp();
  //  ClearUsr_Doprtemp();

    SaveEndTime (10); //Закончили
    onerror(er);
    catch(er);
end; 
  //для того что бы выбрать запрос, вставляем время если оно нужно и саму процедуру.
  //  get_ALL_OP();
  //  get_IN_OP();
  //  get_COUNT_PM_SQL() --m_vnutren --m_vneshn --m_all
 //  get_COUNT_PM_SQL("m_vnutren");
 //   msgbox("re");
    
 