//12.02.13 Golovkin I-00323999 Проверка категории "Автоматическое проведение" на счете

import rsd, globals, "opr_engine.mac", "gstname.mac", "pmreport.mac", "timestat.mac";
import commonint, ptinter;

const  KEY_F1      =315;
const  KEY_F2      =316;
const  KEY_F3      =317;
const KEY_ESC      = 27;
const KEY_SPACE    = 32;
const KEY_ENTER    = 13;

var Fulloutputl, outl, outputl="IB.lbr"; 
record party (party);     

var Client = "";
var after16 = "";

GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
Fulloutputl = FindPath(outputl, outl);
	if (not Fulloutputl)
		msgbox("Не найдена LBR");
		exit();
	end;

var dlg = TRecHandler("ib", fulloutputl, TRUE); 
var rs, cmd, cmd1, code, clientstr="", flag16;
var opr = opr_engine;

opr.oper = {oper};
opr.kindoperation = 24001;
opr.dockind = 201;

macro getid(client)
    var i = 1, j=0;
    array mod;

    while (i<strlen(client))

        if  ((substr(client,i,1) == "0") or (substr(client,i,1) == "1") or (substr(client,i,1) == "2") or (substr(client,i,1) == "3")
          or (substr(client,i,1) == "4") or (substr(client,i,1) == "5") or (substr(client,i,1) == "6") or (substr(client,i,1) == "7")
          or (substr(client,i,1) == "8") or (substr(client,i,1) == "9"))
        else
            mod(asize(mod)) = i-1;
        end; 

        i=i+1;
    end;

    i = 0;

    while (i<asize(mod))

        client = substr(client,1,mod(i)) + "'"+substr(client,mod(i)+1);

        j=0;
        while (j<asize(mod))
            mod(j) = mod(j)+1;
            j=j+1;
        end;

        i=i+1;
    end;

    client = strsubst(string("'",client ,"'")," ","");

//debugbreak;
    var cm = rsdcommand ("SELECT t_objectid "+
                         "  FROM dobjcode_dbt "+
                         " WHERE t_objecttype = 3 "+
                         "   AND t_codekind = 1 "+
                         "   AND t_code IN ("+client+") "+
                         "   AND t_state = 0");
    var rs = rsdrecordset(cm);

    client = "";

    while (rs.movenext())
//debugbreak;
        if (client)
            client = client + ","+rs.value(0);
        else
            client = rs.value(0);
        end;
    end;
//debugbreak;
    return client;

end;


private macro catch(x)

   var err_count = 0;
   var lasterror = "oшибка:"+x.module + "[" + x.line + "]:" + x.message;

   while( err_count < RSLDefEnv.ErrorCount )
      lasterror = lasterror + "|"+RSLDefEnv.error(err_count).descr;
      err_count = err_count + 1;
   end;

   if (RSLDefCon.IsinTrans)
      RSLDefCon.RollbackTrans;
   end;
   msgbox(lasterror);
end;


 /*Обработчик диалоговой панели ввода исходных данных для печати*/
MACRO Event (dlg, cmd, id, key) 
   array gname, symbolname;
   var const_mess = "~F2~ Выбор клиента ~F2~ Продолжить ~ESC~ Выход ";

   /*Первоначальная инициализация полей*/
   if(cmd == DLG_INIT)
      dlg.rec.client  = "";
      dlg.rec.flag16 ="";
      UpdateFields(dlg); 
   end;
   
   /*Установка подсказок в строке состояния*/
   if (cmd==DLG_SETFOCUS)
       message(const_mess);
   end;

   if (cmd == DLG_KEY)
     /*Выход из диалогового окна формирования отчета*/
     if (KEY == KEY_ESC)
//       return exit(1);//CM_CANCEL;
       return 0;
     /*Выбор данных из списка*/
     elif ( KEY == KEY_F3)
        /*Выбор даты из календаря*/
        if (FldName(dlg,id) == "Client")
          if (ListPt(Party, 1, code, PTLIST_PSCLIENT, 0, ptck_all))
           if (strlen (dlg.rec.client) >0)
            dlg.rec.client = dlg.rec.client + ", "+ code;
           else
            dlg.rec.client = code;
           end;
          end;
        end;

        
     elif (KEY == KEY_SPACE)
          /*Сброс установок в поле офис банка*/
           if (FldName(dlg,id) == "flag16") 
            if (dlg.rec.flag16=="")
            dlg.rec.flag16="X";
            UpdateFields(dlg);
            else
            dlg.rec.flag16="";
            UpdateFields(dlg);
            end;
           end;

     elif (( KEY == KEY_F2 ) or (KEY == KEY_ENTER))         //Проверки при вводе
        debugbreak;
        flag16  = dlg.rec.flag16;
         if (strlen(dlg.rec.client) > 0)
         clientstr = getid(dlg.rec.client);
         end;
         Return CM_SAVE;
     elif (( KEY != 336 ) and ( KEY != 328 ))         //Проверки при вводе
            Return CM_IGNORE;
     end;
   end;
        
END;

if (RunDialog(dlg, "Event"))                  
else
return 0;
end;


set_pipe_server(pipe_server_interbank);


initprogress(-1,"обработка платежей Клиент-Банк");

cmd = RSDCommand("truncate table doprtemp_tmp");
cmd.execute;

rsldefcon.BeginTrans;
debugbreak;
if (clientstr)
  Client = " and pm.t_payer in ("+clientstr+") ";
end;

if (flag16)
after16 = " AND (pm.t_numberpack = 603  OR "+
" ( pm.t_amount < 500000 AND "+
"         EXISTS ( "+
"              SELECT * "+
"                FROM dsfcontr_dbt cont, "+
"                     usr_sfplan sftime, "+
"                     dsfcontrplan_dbt PLAN "+
"               WHERE cont.t_object = pm.t_payeraccount "+
"                 AND cont.t_id = PLAN.t_sfcontrid "+
"                 AND sftime.t_flag = chr(88) "+
"                 AND PLAN.t_sfplanid = sftime.t_planid "+
"                 AND (   PLAN.t_end = TO_DATE ('01.01.0001', 'dd.mm.yyyy') "+
"                      OR PLAN.t_end > to_date ('"+{curdate}+"', 'DD.MM.YYYY')) "+
"   AND sysdate <= TO_DATE (CONCAT ('"+{curdate}+" ', sftime.t_time), 'DD.MM.YYYY HH24:MI:SS' ) "+
"                     )) "+
"        OR NOT EXISTS ( "+
"              SELECT * "+
"                FROM dsfcontr_dbt cont, "+
"                     usr_sfplan sftime, "+
"                     dsfcontrplan_dbt PLAN "+
"               WHERE cont.t_object = pm.t_payeraccount "+
"                 AND cont.t_id = PLAN.t_sfcontrid "+
"                 AND sftime.t_flag = chr(88) "+
"                 AND PLAN.t_sfplanid = sftime.t_planid "+
"                 AND (   PLAN.t_end = TO_DATE ('01.01.0001', 'dd.mm.yyyy') "+
"                      OR PLAN.t_end > to_date ('"+{curdate}+"', 'DD.MM.YYYY') "+
"                     )) "+
"        OR EXISTS ( SELECT 1 "+
"  FROM dobjatcor_dbt "+
" WHERE t_objecttype = 3 "+
"   AND t_groupid = 111 "+
"   AND t_attrid = 1 "+
"   AND t_object = LPAD (pm.t_payer, 10, '0'))  "+
"       ) ";
end;


 SaveBeginTime (); //Старт


cmd = RSDCommand(
           "insert into doprtemp_tmp (t_id_operation, " +
"                          t_sort, " +
"                          t_dockind, " +
"                          t_documentid, " +
"                          t_orderid, " +
"                          t_kind_operation, " +
"                          t_start_date, " +
"                          t_isnew, " +
"                          t_id_step) " +
"   select   op.t_id_operation, " +
"            null, " +
"            pm.t_dockind, " +
"            lpad (to_char (pm.t_paymentid), 34, '0'), " +
"            pm.t_paymentid, " +
"            decode (op.t_kind_operation, " +
"                    0, (select   min (t_kind_operation) " +
"                          from   doprkoper_dbt " +
"                         where   t_dockind = 29 and t_notinuse = chr (0) and t_kind_operation > 0), " +
"                    op.t_kind_operation) /*если операция не определена то определяется*/, " +
"            rsbsessiondata.curdate, " +
"            chr (88), " +
"            null " +
"     from   dpmpaym_dbt pm, dpspayord_dbt ps, doproper_dbt op, dpmrmprop_dbt pr " +
"    where       pm.t_dockind = 201 " +
"            and pm.t_documentid = ps.t_orderid " +
"            and ps.t_currentstate = 0 " +
"            and ps.t_origin = 2 /*клиент банк*/ " +
Client + after16 +
"            and (pr.t_date <= to_date ('"+{curdate}+"', 'DD.MM.YYYY') or pr.t_date <= to_date ('"+{curdate}+"', 'DD.MM.YYYY') )" +
"            and op.t_documentid = lpad (to_char (pm.t_paymentid), 34, '0') " +
"            and op.t_dockind = pm.t_dockind " +
"            and pr.t_paymentid = pm.t_paymentid "+
"            AND NOT EXISTS "+ // 12.02.13 Golovkin I-00323999 Проверка категории "Автоматическое проведение" на счете
"                     (SELECT   * "+
"                        FROM   dobjatcor_dbt "+
"                       WHERE       t_objecttype = 4 "+
"                               AND t_groupid = 107 "+
"                               AND t_attrid = 1 "+
"                               AND t_object = '010000000' || pm.t_payeraccount) "+
"--            and rownum <= 10 "
);

cmd.execute;

//защита от уже стартованной операции
cmd = RSDCommand("delete from doprtemp_tmp op where exists (select 1 from doprstep_dbt where t_id_operation = op.t_id_operation)");
cmd.execute;


//защита от уже стартованной операции
cmd = RSDCommand("select count(1) from doprtemp_tmp ");
cmd.execute;
var r = rsdrecordset(cmd);


debugbreak;
if (r.movenext())
  SaveAmount (r.value(0));//Количество
end;


// А.Gregeradsky - 27.01.2010 - Защита от повторной обработки документа другим пользователем
cmd = RSDCommand("select * from dpmpaym_dbt where t_paymentid in (select t_documentid from doprtemp_tmp) for update nowait");
cmd.execute;
// End

cmd = RSDCommand(
                 "update   dpspayord_dbt t " +
                 "   set   t_oper = ? " +
                 " where   exists (select   1 " +
                 "                   from   doprtemp_tmp " +
                 "                  where   t_orderid = t.t_orderid) "
                );
cmd.addparam("oper", RSDBP_IN, {oper});
cmd.Execute();


cmd = RSDCommand(
                 "update   dpmpaym_dbt t " +
                 "   set   t_oper = ? " +
                 " where   exists (select   1 " +
                 "                   from   doprtemp_tmp " +
                 "                  where   t_orderid = t.t_paymentid) "
                );
cmd.addparam("oper", RSDBP_IN, {oper});
cmd.Execute();



cmd=RSDCommand("begin ? := wld_common.definemessagereleaseforpmmass (false); end;");
cmd.addParam("stat", RSDBP_RETVAL, V_INTEGER);
cmd.Execute();

//сортировка для исключения платежей идущих подряд от одиного плательщика
//но в порядке поступления
//для избежания конфликта при одновременном проведении
cmd = RSDCommand("declare " +
                 "   v_cnt   number; " +
                 "   v_rng   number; " +
                 "begin " +
                 "   select   count (1) into v_cnt from doprtemp_tmp; " +
                 "   update   doprtemp_tmp " +
                 "      set   t_sort = null; " +
                 "   for i " +
                 "   in (  select   pmp.t_payeraccount, count (1) acc_cnt, rownum ac_num " +
                 "           from   doprtemp_tmp op, dpmrmprop_dbt pm, dpmpaym_dbt pmp " +
                 "          where       op.t_orderid = pmp.t_paymentid " +
                 "                  and op.t_dockind = pmp.t_dockind                   " +
                 "                  and pm.t_paymentid = pmp.t_paymentid                   " +
                 "       group by   pmp.t_payeraccount, rownum " +
                 "       order by   count (1) desc) " +
                 "   loop " +
                 "      for j in (  select   pmp.t_documentid, rownum n " +
                 "                    from   doprtemp_tmp op, dpmpaym_dbt pmp " +
                 "                   where   op.t_documentid = pmp.t_paymentid and pmp.t_payeraccount = i.t_payeraccount " +
                 "                order by   t_paymentid) " +
                 "      loop " +
                 "         v_rng := round (v_cnt / i.acc_cnt); " +
                 "         update   doprtemp_tmp " +
                 "            set   t_sort = v_rng * j.n + i.ac_num " +
                 "          where   t_orderid = j.t_documentid; " +
                 "      end loop; " +
                 "   end loop; " +
                 "end; "
                );
cmd.Execute;

if (opr.change_opr_stat(291,2/*состояние=открыт*/) and opr.change_opr_stat(292, 6/*ДО=предобработка*/) and opr.start_operation)
   //   println("Операция по загруженным документам стартована");
   rsldefcon.CommitTrans;

   //выполнение предобработки
   cmd=RSDCommand("begin usr_operations.exec_steps_for_temp; end;");
   cmd.Execute();

else
   println("Ошибка запуска операции: "+opr.lasterror+"\nдокументы находятся в списке отложенных");
   rsldefcon.RollbackTrans;
end;
remprogress;
//печать отчета
PrintReport("Interbank");


  SaveEndTime (10); //Закончили

onerror(er)
catch(er);
