/* Поиск сообщений в usr_robotslog_dbt */

Import RsbFormsInter, Rsd, KeyCodes, Календарь, globals;

private const chrDelimiter = strfor(3);
private const charAll = "%";
private const charAlt = "|";
private const FUNC_ACCOUNT  = 1;
private const FUNC_CATEGORY = 2;
private const FUNC_NOTE     = 3;
private const FUNC_DOCUMENT = 4;
private const FUNC_CLIENT   = 5;
private const FUNC_CARRY    = 6;
private const FUNC_HELLO    = 7; //проверка связи
private const FUNC_OPERATION= 8;

private macro AddCol (ar, ind, fld, head, width, rdonly, DecPoint)

   ar.value (ind * 6)     = fld;
   ar.value (ind * 6 + 1) = head;
   ar.value (ind * 6 + 2) = width;
   if(rdonly)
      ar.value (ind * 6 + 3 ) = 2;
   else
      ar.value (ind * 6 + 3 ) = 5;
   end;
   ar.value (ind * 6 + 4 ) = decPoint;
   ar.value (ind * 6 + 5 ) = 0;

end;

macro RSDSearchQuery(Robot,SID,DateRobot,Day,Message,Error)
   var query;

       query = " select " 
               "      t_sid, " 
               "      t_starttime, "
               "      to_char(t_lasttime,'dd.mm.yy hh24:mi:ss') as t_lasttime, "
               "      t_doctime, "
               "      t_robot, "
               "      t_msgvalue, "
               "      t_error "
               " from usr_robotslog_dbt "
               "    where to_char(t_sid) like replace(?,'Все','%') "
               "      and t_robot like replace(?,'Любой','%') "
               "      and to_char(t_starttime,'dd.mm.yy hh24:mi:ss') like replace(?,'Любое','%') "
               "      and REGEXP_LIKE (t_msgvalue, nvl(?,'*')) "
               "      and REGEXP_LIKE (t_error, nvl(?,'*')) "
               "      and to_char(t_lasttime,'dd.mm.yyyy') like replace(?,'Любая','%') "
               "    order by t_lasttime ";
       query = RsdCommand(query);
       query.addparam("SID", RSDBP_IN, SID);
       query.addparam("Robot", RSDBP_IN, Robot);
       query.addparam("DateRobot", RSDBP_IN, DateRobot);
       query.addparam("msgvalue", RSDBP_IN, Message);
       query.addparam("error", RSDBP_IN, Error);
       query.addparam("Day", RSDBP_IN, Day);

       query = RsdRecordset(query,RSDVAL_CLIENT,RSDVAL_STATIC);
       return query;
end;

macro ShowMessages(Robot,SID,DateRobot,Day,Message,Error)
    var rs = RSDSearchQuery(Robot,SID,DateRobot,Day,Message,Error);
    var col = TArray;

        AddCol (col, 0, "t_sid", "SID", 5, true, 0);
        AddCol (col, 1, "t_starttime", "Дата запуска", 10, true);
        AddCol (col, 2, "t_lasttime", "Дата документа", 16, true);
        AddCol (col, 3, "t_doctime", "Время проведения", 5, true, 0);
        AddCol (col, 4, "t_robot", "Обработчик", 5, false);
        AddCol (col, 5, "t_msgvalue", "Сообщение", 20, false);
        AddCol (col, 6, "t_error", "Ошибка", 25, false);

    RunScroll( rs,7,col,null,"EvProc","","~ESC~ Выход",false,null,null,125,null );
end;

/* Меню всякие */

macro ShowMenuRobots(val,SID,DateRobot,x,y)
    var m,Robots,i,cmd;
    array MenuRobots;

    MenuRobots(0)="Любой";

    cmd = RsdCommand(" select t_robot "
                     " from usr_fixdoc_dbt "
                     "    where to_char(t_sid) like replace(?,'Все','%') "
                     "      and to_char(t_starttime,'dd.mm.yy hh24:mi:ss') like replace(?,'Любое','%') "
                     "    group by t_robot "
                     "    order by t_robot ");
    cmd.addparam("SID", RSDBP_IN, SID);
    cmd.addparam("DATE", RSDBP_IN, DateRobot);
    Robots = RsdRecordSet(cmd);

    i=1;

    while(Robots.movenext())
       MenuRobots(i) = Robots.value(0);
       i = i + 1;
    end;

    m=menu(MenuRobots,null,null,x,y);

    if(m >= 0)
       return MenuRobots(m)
    else
       return val
    end;
end;

macro ShowMenuSid(val,robot,DateRobot,x,y)
    var m,SIDs,i,cmd;
    array MenuSid;

    MenuSid(0)="Все";
    cmd = RsdCommand(" select t_SID "
                     " from usr_fixdoc_dbt "
                     "    where t_robot like replace(?,'Любой','%') "
                     "      and to_char(t_starttime,'dd.mm.yy hh24:mi:ss') like replace(?,'Любое','%') "
                     "    group by t_sid "
                     "    order by t_sid desc ");
    cmd.addparam("robot", RSDBP_IN, robot);
    cmd.addparam("DATE", RSDBP_IN, DateRobot);
    SIDs = RsdRecordset(cmd);

    i=1;

    while(SIDs.movenext())
       MenuSid(i) = String(int(SIDs.value(0)));
       i = i + 1;
    end;

    m=menu(MenuSid,null,null,x,y);

    if(m >= 0)
       return MenuSid(m)
    else
       return val
    end;
end;

macro ShowMenuDateRobots(val,robot,sid,x,y)
    var m,Dates,i,cmd;
    array MenuDate;

    MenuDate(0)="Любое";
    cmd = RsdCommand(" select to_char(t_starttime) "
                     " from usr_fixdoc_dbt "
                     "    where to_char(t_sid) like replace(?,'Все','%') "
                     "      and t_robot like replace(?,'Любой','%') "
                     "    group by t_starttime "
                     "    order by t_starttime desc ");
    cmd.addparam("SID", RSDBP_IN, SID);
    cmd.addparam("robot", RSDBP_IN, robot);
    Dates = RsdRecordset(cmd);

    i=1;

    while(Dates.movenext())
       MenuDate(i) = String(Dates.value(0));
       i = i + 1;
    end;

    m=menu(MenuDate,null,null,x,y);

    if(m >= 0)
       return MenuDate(m)
    else
       return val
    end;
end;

macro ShowMenuOperations(x,y)

    var Operation,Action,m;
    array MenuOperations;
    array MenuAction;    

    MenuOperations(0)="Счет";
    MenuOperations(1)="Категория";
    MenuOperations(2)="Примечание";
    MenuOperations(3)="Клиент";
    MenuOperations(4)="Проводка";
    MenuOperations(5)="Операция";

    m=menu(MenuOperations,null,null,x,y);

    if(m >= 0)
       Operation = MenuOperations(m);
    else
       return "";
    end;

    if(Operation == "Счет")
       MenuAction(0)="Создание";
       MenuAction(1)="Обновление";
       MenuAction(2)="Закрытие";
    elif(Operation == "Категория")
       MenuAction(0)="Установка";
       MenuAction(1)="Удаление";
    elif(Operation == "Примечание")
       MenuAction(0)="Установка";
       MenuAction(1)="Удаление";
    elif(Operation == "Клиент")
       MenuAction(0)="Создание";
       MenuAction(1)="Обновление";
       MenuAction(2)="Удаление";
       MenuAction(3)="Постановка на обслуживание";
       MenuAction(4)="Снятие с обслуживания";
       MenuAction(5)="Создание кода";
       MenuAction(6)="Удаление кода";
       MenuAction(7)="Создание адреса";
       MenuAction(8)="Удаление адреса";
       MenuAction(9)="Создание рег. документа";
       MenuAction(10)="Удаление рег. документа";
       MenuAction(11)="Создание сотрудника";
       MenuAction(12)="Удаление сотрудника";
       MenuAction(13)="Создание документа";
       MenuAction(14)="Удаление документа";
    elif(Operation == "Проводка")
       MenuAction(0)="Проводка";
       MenuAction(1)="Откат проводки";
    elif(Operation == "Операция")
       MenuAction(0)="Проведение платежа";
    end;

    m=menu(MenuAction,null,null,x,y);

    if(m >= 0)
       Action = MenuAction(m);
    else
       return "";
    end;
    if((Operation == "Счет") and (Action == "Создание"))
       return "^"+FUNC_ACCOUNT+chrDelimiter+"1";
    elif((Operation == "Счет") and (Action == "Обновление"))
       return "^"+FUNC_ACCOUNT+chrDelimiter+"2";
    elif((Operation == "Счет") and (Action == "Закрытие"))
       return "^"+FUNC_ACCOUNT+chrDelimiter+"3";
    elif((Operation == "Категория") and (Action == "Установка"))
       return "^"+FUNC_CATEGORY+chrDelimiter+"1";
    elif((Operation == "Категория") and (Action == "Удаление"))
       return "^"+FUNC_CATEGORY+chrDelimiter+"2";
    elif((Operation == "Примечание") and (Action == "Установка"))
       return "^"+FUNC_NOTE+chrDelimiter+"1";
    elif((Operation == "Примечание") and (Action == "Удаление"))
       return "^"+FUNC_NOTE+chrDelimiter+"2";
    elif((Operation == "Клиент") and (Action == "Создание"))
       return "^"+FUNC_CLIENT+chrDelimiter+"1";
    elif((Operation == "Клиент") and (Action == "Обновление"))
       return "^"+FUNC_CLIENT+chrDelimiter+"2";
    elif((Operation == "Клиент") and (Action == "Удаление"))
       return "^"+FUNC_CLIENT+chrDelimiter+"3";
    elif((Operation == "Клиент") and (Action == "Постановка на обслуживание"))
       return "^"+FUNC_CLIENT+chrDelimiter+"4";
    elif((Operation == "Клиент") and (Action == "Снятие с обслуживания"))
       return "^"+FUNC_CLIENT+chrDelimiter+"5";
    elif((Operation == "Клиент") and (Action == "Создание кода"))
       return "^"+FUNC_CLIENT+chrDelimiter+"6";
    elif((Operation == "Клиент") and (Action == "Удаление кода"))
       return "^"+FUNC_CLIENT+chrDelimiter+"7";
    elif((Operation == "Клиент") and (Action == "Создание адреса"))
       return "^"+FUNC_CLIENT+chrDelimiter+"8";
    elif((Operation == "Клиент") and (Action == "Удаление адреса"))
       return "^"+FUNC_CLIENT+chrDelimiter+"9";
    elif((Operation == "Клиент") and (Action == "Создание рег. документа"))
       return "^"+FUNC_CLIENT+chrDelimiter+"10";
    elif((Operation == "Клиент") and (Action == "Удаление рег. документа"))
       return "^"+FUNC_CLIENT+chrDelimiter+"11";
    elif((Operation == "Клиент") and (Action == "Создание сотрудника"))
       return "^"+FUNC_CLIENT+chrDelimiter+"12";
    elif((Operation == "Клиент") and (Action == "Удаление сотрудника"))
       return "^"+FUNC_CLIENT+chrDelimiter+"13";
    elif((Operation == "Клиент") and (Action == "Создание документа"))
       return "^"+FUNC_CLIENT+chrDelimiter+"14";
    elif((Operation == "Клиент") and (Action == "Удаление документа"))
       return "^"+FUNC_CLIENT+chrDelimiter+"15";
    elif((Operation == "Проводка") and (Action == "Проводка"))
       return "^"+FUNC_CARRY+chrDelimiter+"1";
    elif((Operation == "Проводка") and (Action == "Откат проводки"))
       return "^"+FUNC_CARRY+chrDelimiter+"2";
    elif((Operation == "Операция") and (Action == "Проведение платежа"))
       return "^"+FUNC_OPERATION+chrDelimiter+"1";
    else
       return "";
    end;
end;

/* Интерфейс */

Class (TRsbPanel) PanelSearch
   InitTRsbPanel();
   SetSize(50,10);

   var RobotLabel:TRsbLabel = TRsbLabel(2, 2, "Обработчик");
   addLabel(RobotLabel);
   var RobotString: String = "Любой";
   var RobotField:TRsbEditField = TRsbEditField(7);
       RobotField.SetPosition(10,2);
       RobotField.SetSize(10,1);
       RobotField.bindValue(this,"RobotString",100);
   addControl(RobotField);

   var SidLabel:TRsbLabel = TRsbLabel(25, 2, "Sid");
   addLabel(SidLabel);
   var SidString: String = "Все";
   var SidField:TRsbEditField = TRsbEditField(7);
       SidField.SetPosition(29,2);
       SidField.SetSize(15,1);
       SidField.bindValue(this,"SidString",100);
   addControl(SidField);

   var DateRobotLabel:TRsbLabel = TRsbLabel(10, 3, "Время запуска обработчика");
   addLabel(DateRobotLabel);
   var DateRobotString: String = "Любое";
   var DateRobotField:TRsbEditField = TRsbEditField(7);
       DateRobotField.SetPosition(29,3);
       DateRobotField.SetSize(15,1);
       DateRobotField.bindValue(this,"DateRobotString",100);
   addControl(DateRobotField);

   var DateLabel:TRsbLabel = TRsbLabel(10, 4, "Сообщения за дату");
   addLabel(DateLabel);
   var DateString: String = "Любая";
   var DateField:TRsbEditField = TRsbEditField(7);
       DateField.SetPosition(29,4);
       DateField.SetSize(15,1);
       DateField.bindValue(this,"DateString",100);
   addControl(DateField);

   var MessageLabel:TRsbLabel = TRsbLabel(2, 5, "Сообщение");
   addLabel(MessageLabel);
   var MessageString: String = "";
   var MessageField:TRsbEditField = TRsbEditField(7);
       MessageField.SetPosition(10,5);
       MessageField.SetSize(34,1);
       MessageField.bindValue(this,"MessageString",100);
   addControl(MessageField);

   var ErrorLabel:TRsbLabel = TRsbLabel(2, 6, "Ошибка");
   addLabel(ErrorLabel);
   var ErrorString: String = "";
   var ErrorField:TRsbEditField = TRsbEditField(7);
       ErrorField.SetPosition(10,6);
       ErrorField.SetSize(34,1);
       ErrorField.bindValue(this,"ErrorString",100);
   addControl(ErrorField);

   RobotField.addEventHandler( RSB_EV_KEY_PRESSED, R2M(this, "onRobotFieldKeyPressed") );
   SidField.addEventHandler( RSB_EV_KEY_PRESSED, R2M(this, "onSidFieldKeyPressed") );
   DateRobotField.addEventHandler( RSB_EV_KEY_PRESSED, R2M(this, "onDateRobotFieldKeyPressed") );
   DateField.addEventHandler( RSB_EV_KEY_PRESSED, R2M(this, "onDateFieldKeyPressed") );
   MessageField.addEventHandler( RSB_EV_KEY_PRESSED, R2M(this, "onMessageFieldKeyPressed") );
   ErrorField.addEventHandler( RSB_EV_KEY_PRESSED, R2M(this, "onErrorFieldKeyPressed") );
   addEventHandler( RSB_EV_KEY_PRESSED, R2M(this, "onKeyPressed") );

   macro onRobotFieldKeyPressed( RsbEvent:object )

      var x,y,width,height;

      if( rsbEvent.KeyCode == KEY_F3 )
         RobotField.GetPosition(x,y); 
         RobotField.GetSize(width,height);
         RobotField.value = ShowMenuRobots(RobotField.value,SidField.value,DateRobotField.value,x,y+height);
      end;

      return true;

   end;

   macro onSidFieldKeyPressed( RsbEvent:object )

      var x,y,width,height;

      if( rsbEvent.KeyCode == KEY_F3 )
         SidField.GetPosition(x,y); 
         SidField.GetSize(width,height);
         SidField.value = ShowMenuSid(SidField.value,RobotField.value,DateRobotField.value,x,y+height);
      end;

      return true;
    
   end;

   macro onDateRobotFieldKeyPressed( RsbEvent:object )

      var x,y,width,height;

      if( rsbEvent.KeyCode == KEY_F3 )
         DateRobotField.GetPosition(x,y); 
         DateRobotField.GetSize(width,height);
         DateRobotField.value = ShowMenuDateRobots(DateRobotField.value,RobotField.value,SidField.value,x,y+height);
      end;

      return true;

   end;

   macro onDateFieldKeyPressed( RsbEvent:object )

      if( rsbEvent.KeyCode == KEY_F3 )
         DateField.value = StrSubst(String(GetDateByCalendar({curdate}))," ","0");
      end;

      if( rsbEvent.KeyCode == KEY_CTRL_Z )
         DateField.value = "Любая";
      end;

      return true;

   end;

   macro onMessageFieldKeyPressed( RsbEvent:object )

      var x,y,width,height,symb;

      if( rsbEvent.KeyCode == KEY_CTRL_Z )
         MessageField.value = MessageField.value + chrDelimiter;
      end;

      if( rsbEvent.KeyCode == KEY_CTRL_S )
         MessageField.value = MessageField.value + charAll;
      end;

      if( rsbEvent.KeyCode == KEY_F3 )
         MessageField.GetPosition(x,y); 
         MessageField.GetSize(width,height);

         if(MessageField.value == "")
            symb = "";
         else
            symb = charAlt;
         end;

         MessageField.value = MessageField.value + symb + ShowMenuOperations(x,y+height);
      end;

      return true;

   end;

   macro onErrorFieldKeyPressed( RsbEvent:object )

      if( rsbEvent.KeyCode == KEY_CTRL_Z )
         ErrorField.value = ErrorField.value + chrDelimiter;
      end;

      if( rsbEvent.KeyCode == KEY_CTRL_S )
         ErrorField.value = ErrorField.value + charAll;
      end;

      return true;

   end;

   macro onKeyPressed( RsbEvent:object )

      if( rsbEvent.KeyCode == KEY_F2 )
         ShowMessages(RobotField.value,SidField.value,DateRobotField.value,DateField.value,MessageField.value,ErrorField.value);
      end;

      return true;

   end;
end;

/* Запуск панели */

macro RunSearch()
   var panel = PanelSearch;
   panel.setCaption("Поиск");
   panel.setStatus("~F2~ Начать поиск ~F3~ Выбор ~Ctrl-Z~ Вставить символ-разделитель (в конец строки)");
   panel.run;
   exit(1);
end;