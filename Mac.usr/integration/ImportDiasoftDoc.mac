/******************************************************************************
   Имя файла.:       ClientProc.mac
   Назначение:       Импорт документов из Diasoft
   Дата......:       22.08.2008
   Автор.....:       Стадник Александр, Селезнёв Владимир
******************************************************************************/
// 17.05.2012 Зленко М (zmp) I-00194036-3 - убрал проверку на дату документа будующей датой
import BankInter, rsexts, CarryDoc, "PaymProc.mac", "GenNumber.mac";
/* EVG */
import PTInter;

private const DIASOFT_ORIGIN = 1600;    // Пользовательское происхождение документов
private const OPER_NUM_4_PAYM = 24001;  // Вид операции, которым должны обрабатываться поручения из "Диасофта"

private var {MFO_Bank};

private var TempDir;// = "..\\RSPAR\\";
private var SourceFilesPath = "$C:\\RSPAR\\";
private var _SourceFilesPath,error;
    GetRegistryValue( "PRBB\\ИНТЕРФЕЙСЫ\\IMPORTDIASOFT",V_STRING,_SourceFilesPath,error);
    if(error == 0)
      SourceFilesPath = _SourceFilesPath;
    end;



macro CreateFileList(FileNamesArray : TArray);
  
    var i = 0;
    var DirList;

    DirList = TDirList(SourceFilesPath + "*.os");   
   
    while (i < DirList.Count)

        if (StrLen(DirList.Name(i)) > 10)
            FileNamesArray(FileNamesArray.Size()) = DirList.Name(i);
        end;

        i = i + 1;
   end;   
   
end;

macro ConvertStringToDate(StrDate : string)
    var NewDate;
    
    NewDate =  SubStr(StrDate, 1, 2) + "." + SubStr(StrDate, 4, 2) + "." + SubStr(StrDate, 7, 4);
    
    return date(NewDate);
end;


macro PrintHead(h)

[
                                    #

 ┌────┬──────┬────────────────────┬────────────┬─────────────────────────────┬────────┐
 │  № │№ док.│ Счет плательщика   │   Сумма    │          Примечание         │ Удален │
 ├────┼──────┼────────────────────┼────────────┼─────────────────────────────┼────────┤]
 (h:c) ;

end ; /* PrintHead */


macro PrintRep(Number, Paym, ErrorMessage, deleted)
  [│####│######│####################│############│#############################│########│]
  (Number, Paym.NumDoc, Paym.PayerAccount, Paym.DebetSum, ErrorMessage:w, deleted) ;

end ; /* PrintRep */


macro PrintBottom()

  [└────┴──────┴────────────────────┴────────────┴─────────────────────────────┴────────┘] ;
  [ ];
  [ ];
  [ ];  
end ;

private macro formInnKpp(inn, kpp)
        var ret = "";
        if (trim(inn)!="")
                ret = trim(inn);
                if (trim(kpp)!="")
                        ret = ret+"/"+trim(kpp)
                end;    
        end;
        return ret;
end;

macro InsertPaymentsFromFile(DataFile, Oper)    
    debugbreak;
    var Paym = UsrPayment(); 
    var i = 0, success_cnt = 0;     
    var ErrorMessage;
    var stat, cmd, inn;
      
    /* EVG */
    var RecBankPatryId, RecBankINN;

    Rewind(DataFile);      
    
      
    PrintHead(" ЗАГРУЗКА ДОКУМЕНТОВ DIASOFT ИЗ ФАЙЛА " + FileName(DataFile));  
      
    initprogress(-1,null,"Обработка документов...");

       /* Lavrenov: доработку в топку!!!
    //(sev)Дочерний класс, добавлен вид операции. I-00125476-3
       Class (UsrPayment) UsrPayment_n
        var Kind_oper:string;
       end;
       */

    While (next(DataFile))

        i = i + 1;
        useprogress(i);

        Paym.Initialization();

        Paym.SkipCheckMask = skip_recacc_exists+skip_pay_inn_fill+skip_rec_inn_fill+skip_payname_match+skip_recname_match;
        Paym.Origin          = DIASOFT_ORIGIN;   //создан автоматически

        Paym.PayerAccount    = DataFile(4);
        Paym.ReceiverAccount = DataFile(8);
        Paym.DebetSum        = money(DataFile(11));
        Paym.Pack            = int(DataFile(23));
        
        Paym.NumDoc          = substr(string(DataFile(29)),1,15);

        if (trim(Paym.NumDoc)=="")
           Paym.NumDoc = GenNumberDocument();
        end;

        Paym.DocDate         = ConvertStringToDate(DataFile(30)); //{curdate}; TAM 02.05.2012 I-00189714-2
        Paym.Ground          = StrSubst(DataFile(41),"№","N");

         //I-022148
        Paym.UserField4      = DataFile(56);                             
        
        //Lavrenov: 27.04.2012 I-00186439 Не понятно почему бурут 59 поле, когда данные хранятся в 58-м  

         if(strlen(DataFile(58)) != 0) //Lavrenov: если ни одно условие не сработает - сишник сам проставит, что надо.
            Paym.Shifr           = DataFile(58)+"/"+DataFile(31);                
         elif(strlen(DataFile(59)) != 0)//Lavrenov На всяк случай оставил возможность взять данные из 59-го
            Paym.Shifr           = DataFile(59)+"/"+DataFile(31);                
         end;

        /* Lavrenov: доработку в топку!!!

        // (sev) Испарвлено некорректное заполнение поля "шифр платежа" при загрузке мемореальных ордеров по заявке I-00125476-3
        // Разделены шифр и вид платежа.
        Paym.Shifr                   = DataFile(59);
        UsrPayment_n.Kind_oper       = DataFile(31);
        */

        DebugBreak;     /*MEV*/
        if (int(DataFile(31))==1)       // вид операции (Kind_Oper)

            // Платёж банка
            Paym.DocKind                = dockind_bank_paym;
            Paym.RunOperation   = 0;   // платежи должны быть в отложенных
            
            Paym.PayerName              = StrSubst(DataFile(37),"№","N");         // Наименование плательщика
            //Paym.PayerINN             = "7729086087";
            //Paym.PayerKPP             = "775001001";
            
            Paym.ReceiverBIC    = trim(DataFile(7));    // БИК получателя
            Paym.ReceiverName   = DataFile(38);         // Наименование получателя
            Paym.ReceiverINN    = DataFile(49);
            Paym.ReceiverKPP    = DataFile(67);

           /*(sev) заявка I-00050488 Заполнение налоговых реквизитов*/
           /*все налоговые реквизиты(кроме ИНН и КПП) заполняются только при наличии в файле выгрузки данных о статусе составителя*/
            if ((DataFile(74)!="")and((int(DataFile(74))>0)and(int(DataFile(74))<21))) //если присутствует статус составителя
                Paym.CreatorStatus  = DataFile(74);
                if (DataFile(75)!="")
                    Paym.KbkCode        = DataFile(75); 
                else  
                    Paym.KbkCode	      = 0;
                end;      
                
                if (DataFile(76)!="")
                    Paym.OkatoCode      = DataFile(76);
                else  
                    Paym.OkatoCode	      = 0; 
                end; 		
                if (DataFile(77)!="")
                    Paym.GroundTaxDoc   = DataFile(77);
                else  
                    Paym.GroundTaxDoc    = 0;
                end;  
                if (DataFile(78)!="")
                    Paym.TaxPeriod      = DataFile(78);
                else
                    Paym.TaxPeriod       = 0;
                end; 
                if (DataFile(79)!="")
                    Paym.NumTaxDoc      = DataFile(79);
                else 
                    Paym.NumTaxDoc       = 0;
                end; 
                if (DataFile(80)!="")
                    Paym.TaxDate        = DataFile(80);
                else 
                    Paym.TaxDate         = 0;
                end; 
                if (DataFile(81)!="")
                    Paym.TaxType        = DataFile(81); 
                else 
                    Paym.TaxType         = 0; 
                end;
            end;

            Paym.Priority       = int(DataFile(50));   // Очерёдность
            Paym.UserTypeDoc    = DataFile(18);

        else  // мемордер

            Paym.DocKind                = dockind_memorder;     
            Paym.RunOperation   = 0;  

        end;

        /* EVG 29/12/2010 Заполнение плательщика/получателя производится на основании данных из Диасофт 
           и для мемордеров, не только для платежей. */
        Paym.PayerName = DataFile(37);
        Paym.ReceiverName = StrSubst(DataFile(38),"№","N");


        Paym.NumOperation       = OPER_NUM_4_PAYM;      // Вид операции

        /*MEV*/

        /* EVG Обработка платежей в пользу физлиц (не имеют ИНН получателя) */
        /* EVG Если ИНН получателя не задан, подставляем вместо него ИНН банка получателя */
        if ( ( strLen(trim( Paym.ReceiverINN )) == 0 )
               or ( Paym.ReceiverINN == "0" )
           )

           RecBankPatryId = ПолучитьКодСубъекта( Paym.ReceiverBIC, PTCK_BIC );
           RecBankINN     = ПолучитьКодСубъекта( RecBankPatryId, PTCK_INN );

           if ( strLen( RecBankINN ) > 0 )
              Paym.ReceiverINN = RecBankINN;
           else
              Paym.ReceiverINN = "";
           end;
        end;

        //msgbox ("INN rec: ", Paym.ReceiverINN, " - ", Paym.ReceiverBIC, " - ", RecBankPatryId);

        
        
        //Paym.DocKind         = dockind_memorder;  
        Paym.CheckExists     = 0;//проверяется дублирование
        Paym.PackMode        = 0; //вставка платежей не массовая, для того, чтобы загружать мем.ордера прошедшие проверки

        //Paym.Department      = int(DataFile(57));
        //Paym.PayerName       = DataFile(37);
        //Paym.ReceiverName    = DataFile(38);
        Paym.MakeCarryFromPayment    = 1;  //проводка по той же корреспонденции, что и сам мемордер

        Paym.ValueDate = ConvertStringToDate(DataFile(30));
        Paym.Oper      = int(DataFile(2));     

        /*{MEV: В файле не указан операционист, проставлен номер по умолчанию (9999) */
/*        if (Paym.Oper==0)
            Paym.Oper      = 9999;     
            PrintRep("!", Paym, "Для документа не указан операционист. Выбран номер по умолчанию (9999)", " ");
        end;*/
        /*MEV}*/
        //Help Desk IT № A43619
        Paym.Oper = {oper};
        /* zmp 17.05.2012 I-00194036-3 - закоментировал проверку на дату документа
        if (date(Paym.DocDate) > {curdate})
            ErrorMessage = "Ошибка создания документа: дата документа больше текущей даты ОД";
            PrintRep(0, Paym, ErrorMessage:w, "");
        */
        if ((substr(Paym.PayerAccount,1,5) == "70606") and  (substr(Paym.ReceiverAccount,1,5) == "70606"))
            ErrorMessage = "Ошибка создания документа: неверная корреспонденция счетов "+
                           "счет плательщика: "+Paym.PayerAccount +" счет получателя: "+Paym.ReceiverAccount;
            PrintRep(0, Paym, ErrorMessage:w, "");
        else


           if (not Paym.InsertPayment())                          
               ErrorMessage = Paym.ErrorMessage;
               PrintRep(i, Paym, ErrorMessage, " ");        
           else            
               success_cnt = success_cnt + 1;
               /*if (int(DataFile(31))!=1)
                   stat = Paym.PmRunOperation;

                   if (stat > 0)
                      Paym.OprGetErrorMsg(Paym.OprPackID);
                      ErrorMessage ="Ошибка при исполнении документа:"+Paym.OprErrMsg;

                      if (paym.deletepayment(Paym.PaymentID))
                         PrintRep(Paym.PaymentID, Paym, ErrorMessage:w, "да");
                      else
                         PrintRep(Paym.PaymentID, Paym, ErrorMessage:w, "нет");
                      end;
                   elif (paym.OprExecErrMsg != "no_error")

                      ErrorMessage ="Ошибка при старте операции:"+paym.OprExecErrMsg;

                      if (paym.deletepayment(Paym.PaymentID))
                         PrintRep(Paym.PaymentID, Paym, ErrorMessage:w, "да");
                      else
                         PrintRep(Paym.PaymentID, Paym, ErrorMessage:w, "нет");
                      end;
                   else

                      ErrorMessage = "Документ успешно создан и проведен";
                      PrintRep(i, Paym, ErrorMessage, " ");        
                   end;
               else
                  DebugBreak;*/
                  inn = formInnKpp(DataFile(48), DataFile(66));
                  /* MEV: Обновить ИНН плательщика (АКБ "Пробизнесбанк") - обход проверок в пакете USR_PAYMENTS
                     1. Если ИНН явно не задавать, в документ подтягивается ИНН/КПП из счёта. Счета открыты на клиентов, 
                        т.е. получает неверный ИНН/КПП банка
                     2. Процедура вставки документа проверяет совпадение ИНН/КПП из документа с тем, что указан для владельца
                        счёта. При несовпадении вставка прерывается. Приходится ИНН/КПП обновлять после вставки
                  */
                  if (trim(inn)!="")
                        cmd = RsdCommand("update dpmrmprop_dbt set t_payerinn = ? where t_paymentid = ?");
                        cmd.addparam("inn", RSDBP_IN, inn);
                        cmd.addparam("paymentid", RSDBP_IN, Paym.PaymentID);
                        cmd.execute();
                  end;
                  ErrorMessage = "Платеж банка успешно помещен в список отложенных";
                  PrintRep(i, Paym, ErrorMessage, " ");        
//               end;
           end;
        end;
    end;

    remprogress();
    PrintBottom();
        
end;


macro MAIN()
    debugbreak;
    var err:integer = 0;
    file DataFile() txt;
    var i = 0, Oper = 0;
    var FileNamesArray = TArray();
    var SrcFileName, TmpFileName;
        
    GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR", V_STRING, TempDir, err);
    if( err != 0)
       msgbox("Не определена директория временных файлов");
       exit(1);
    end;
    
    DebugBreak;
    TempDir = TempDir + "\\";
    CreateFileList(FileNamesArray);        
        
    while (i < FileNamesArray.Size())        
        
        SrcFileName = SourceFilesPath + FileNamesArray(i);
        TmpFileName = TempDir + FileNamesArray(i);
        
        if (not CopyFile(SrcFileName, TmpFileName, true))
            println("Ошибка копирования файла " + SrcFileName + " в " + TmpFileName);
        else
            SetDelim(";");
            if (not Open(DataFile, TmpFileName))
                println("Ошибка открытия файла " + TmpFileName);
            else
                InsertPaymentsFromFile(DataFile, Oper);
            end;
        end;
       
        Close(DataFile);
        RemoveFile(SrcFileName);
        RemoveFile(TmpFileName);
        i = i + 1;
    end;   

END;


MAIN();


