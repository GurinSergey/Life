//-----------------------------------------------------------------------------------------
// Справка сверки 
// Т.Крамаренко
//-----------------------------------------------------------------------------------------
import oralib, likepy, bankinter, Календарь, eautils, lib_str, globals;

Var Parm, aDet = TArray(), aStoreKind = Tarray();

aStoreKind(0) = "Любой                         ";
aStoreKind(1) = "Электронный                   ";
aStoreKind(2) = "Бумажный                      ";

    Macro LoadRegVal ( Path, Type )
        Var sql, DefVal = "";
        if ( Type == V_INTEGER )
            sql = "select t_lintvalue from dregval_dbt where t_keyid = rsb_common.GetRegParm (:path) and t_regkind=0";
            DefVal = 0;
        elif ( Type == V_STRING )
            sql = "select utl_raw.cast_to_varchar2 (t_fmtblobdata_xxxx) from dregval_dbt where t_keyid = rsb_common.GetRegParm (:path) and t_regkind=0";
        end;
        if ( sql )
            sql = ExecSqlSelect (sql, MakeArray (SqlParam ("path", Path)));
            if ( sql.MoveNext () and (ValType (sql.value (0)) != V_SPECVAL) )
                return sql.value (0);
            end;
        end;
        return DefVal;
    End;

// Возвращает последний закрытый опердень - day
Private macro GetDefaultDate ( day )
    Var sql = "select max (t_curdate) from dcurdate_dbt where t_isclosed='X' and t_branch=1";
    sql = ExecSqlSelect (sql);
    if ( sql.Movenext () and (ValType (sql.value (0)) != V_SPECVAL) )
        return Date (sql.value (0)) - day;
    else
        Exit (0, "Не найдено ни одного закрытого дня");
        return Date (0,0,0);
    end;
End;
//-----------------------------------------------------------------------------------------
// Возвращает имя операциониста
Private macro GetOperName ( op )
    Var sql = "select t_name from dperson_dbt where t_oper=:1";
    sql = ExecSqlSelect (sql, MakeArray (SqlParam ("1", op)), true);
    if ( sql.Movenext () and (ValType (sql.value (0)) != V_SPECVAL) )
        return sql.value (0);
    end;
End;
//-----------------------------------------------------------------------------------------
// Возвращает доступ операциониста
Private macro GetDostup ( op )
    Var sql = "select t_ctypeperson from dperson_dbt where t_oper=:1";
    sql = ExecSqlSelect (sql, MakeArray (SqlParam ("1", op)), true);
    if ( sql.Movenext () and ((sql.value (0) == "А") or (sql.value (0) == "Б")) )
        return true;
    end;
    return false;
End;
//-----------------------------------------------------------------------------------------

// класс интерфейса для задания параметров и вызова процедур
Private class (TRecHandler) TParm
    // 2012-02-09 zip_z. >
    // InitTRecHandler ("eareport", "ea.lbr", true);
    InitTRecHandler ("earep2", getResourceLibPath (), true);
    // < 2012-02-09 zip_z. 
    
    Var RazdRep = 0, DetRep = 0, Dostup = false;

    // обработчик для скроллинга
    Macro ScrollHandler ( rs, cmd, id, key )
        if ( (cmd == DLG_KEY) and (key == kbEnter) )
            return CM_SELECT;
        end;
    End;

    Macro SelectOper ( )
        Var sql = "select t_oper, t_name from dperson_dbt where t_userclosed <> 'X' order by t_oper";
        sql = ExecSqlSelect (sql, null, false, RSDVAL_CLIENT, RSDVAL_STATIC);
        if ( RunScroll (sql, 2, MakeArray ("t_oper", "Номер", 5, 0, 0, 0, "t_name", "Ф.И.О.", 40, 0, 40, 0),
                        NULL, R2M (this, "ScrollHandler"), "Операционисты", "Enter Выбор  ESC Отмена", TRUE) )
            return sql.value ("t_oper");
        end;
    return 0;
    End;

    Macro Handler ( dlg, cmd, id, key )
        if ( cmd == DLG_INIT )
            Message ("F2 - выполнить  F3 - выбор  ESC - отмена");
//            DisableFields (dlg, FldIndex ("oPack"));
//            DisableFields (dlg, FldIndex ("oStoreKind"));
//            DisableFields (dlg, FldIndex ("oOper"));
//            dlg.(FldIndex("oOpName")) = "Все";
            DisableFields (dlg, FldIndex ("oOpName"));
            UpdateFields (dlg);

        elif ( cmd == DLG_SAVE )
        elif ( (cmd == DLG_KEY) and (key == kbF2) )
             return CM_SAVE;

        elif ( (cmd == DLG_KEY) and (key == kbF3) and (id == FldIndex ("oDate")) )
            dlg.(id) = GetDateByCalendar (dlg.(id));

        elif ( (cmd == DLG_KEY) and (key == kbF3) and (id == FldIndex ("oStoreKind")) )
            DetRep = menu( aStoreKind, null, "Выберите вид хранения документов       ", 34, 10 );
            if( DetRep >= 0 )
                dlg.(id) = aStoreKind(DetRep);
            end;
            UpdateFields (dlg);

        elif ( (cmd == DLG_KEY) and (id == FldIndex ("oPack")) )
            UpdateFields (dlg);

        elif ( (cmd == DLG_KEY) and (key == kbF3) and (id == FldIndex ("oOper")) and Dostup )
            dlg.(id) = SelectOper();
            if ( dlg.(id) != 0 )
              dlg.(FldIndex("oOpName")) = GetOperName(dlg.(id));
            else
              dlg.(FldIndex("oOpName")) = "Все";
            end;  
            UpdateFields (dlg);

        end;
    End;
    
    Macro Init
//        this.("oDate")   = GetDefaultDate (0);
        this.("oDate") = date(1,4,2012);
        this.("oPack") = " ";
        this.("oStoreKind") = aStoreKind(0);
        this.("oOper")   = 0; //{oper}
        this.("oOpName") = "Все"; //GetOperName({oper})
        Dostup = GetDostup({oper});
    End;

    Macro Run
        Init ();
        return RunDialog (this, R2M (this, "Handler"));
    End;
End;



//-----------------------------------------------------------------------------------------

   macro Линия1;
     [┌─────────────────┬──────────────┬─────────────────────┬──────────────────────────────────────────┐];
   end;

Macro RunReport (Data, StoreKind_, Pack_, Oper_) 
var iRow, iCol, sql, rs, y, nRazd, nOper, nCur, bCol=0, eCol=0, bColA=0, eColA=0, bSum=$0, eSum=$0, bSumA=$0, eSumA=$0, dSum=$0, dSumA=$0, first;
var yy, rs1, rs2;


   macro Линия11;
     [┌─────────────────┬──────────────┬─────────────────────┬─────────────────────┬────────────────────┐];
   end;

   macro Линия2;
     [└─────────────────┴──────────────┴─────────────────────┴─────────────────────┴────────────────────┘];
   end;

   macro Линия3;
     [├─────────────────┼──────────────┼─────────────────────┼─────────────────────┼────────────────────┤];
   end;

   macro Шапка0(id_iscash_docs, id_store_kind);
   var Day, Month, Year, DateCode, AbsCode, KindDocs, StoreKindString;
   datesplit(Data, Day, Month, Year);
   DateCode = string(Year) + strLpad(string(Month), 2, "0") + strLpad(string(Day), 2, "0"); 
   AbsCode = LoadRegVal ( "PRBB\\EA\\ABSCODE", V_STRING);
   if ( id_iscash_docs == 0 )
     KindDocs = "бухгалтерских";
   elif ( id_iscash_docs == 1 )
     KindDocs = "кассовых";
   end;
   if ( id_store_kind == 0 )
     StoreKindString = "в электронном/бумажном виде"; 
   elif ( id_store_kind == 1 )
     StoreKindString = "в электронном виде"; 
   elif ( id_store_kind == 2 )
     StoreKindString = "в бумажном виде"; 
   end;

   [##################################################
                                                      СПРАВКА 
                                         о ############# документах, сформированных и хранящихся
                                                ########################################### 
       
                                                  за: #

   ########-########  
    ]({Name_Bank}, KindDocs, StoreKindString:c, Data:l:m, DateCode, AbsCode);

    if ( Pack_ != " " )
      [Номер пачки: #########](Pack_);
    end;

    if ( Oper_ != 0 )
      [Операционист: #########](Oper_); 
    end;

   end;

   macro Шапка1;
     Линия1;
     [│   Номер счета   │  Количество  │    Наименование     │                  Сумма                   │];
     [│                 │     (шт.)    │ валюты/драгоценного ├─────────────────────┬────────────────────┤];
     [│                 │              │       металла       │      в номинале     │     в валюте       │];
     [│                 │              │                     │    валюты/учетных   │    Российской      │];
     [│                 │              │                     │    еденицах массы   │     Федерации      │];
     [│                 │              │                     │       металла       │                    │];
//     Линия2;
   end;

   macro Подвал;
      [                                                                                                  ];
      [                                                                                                  ];
      [                                  ________________________________________________________________];
      [                                  (подпись работника, сформировавшего Справку, с указанием Ф.И.О.)];
   end;
   Macro Строка1 (bs, cnt, currency, sum_val, sum_eq)
     [│ ############### │ ############ │ ################### │ ################### │ ################## │]
     (bs, cnt:c:18:0, currency:w:c, sum_val:18:2, sum_eq:18:2);
   end;

   Macro Строка2 (chapter)
   var chapter_name;
     if ( chapter == 1 )
       chapter_name = "По балансовым счетам";
     elif ( chapter == 2 )
       chapter_name = "По счетам срочных сделок";
     elif ( chapter == 3 )
       chapter_name = "По счетам доверительного управления";
     elif ( chapter == 4 )
       chapter_name = "По счетам ДЕПО";
     elif ( chapter == 5 )
       chapter_name = "По внебалансовым дебетуемым счетам";
     elif ( chapter == 6 )
       chapter_name = "По внебалансовым кредитуемым счетам";
     end;
     [ ##. ####################################################                                      ]
     (chapter, chapter_name);
   end;

   Macro Строка3 (cnt, sum_eq)
     [│  Итого за день: │ ############ │                     │                     │ ################## │]
     (cnt:c:18:0, sum_eq:18:2);
   end;

   Macro Строка33 (cnt, sum_eq)
     [│     Всего по    │              │                     │                     │                    │];
     [│  внебалансовым  │ ############ │                     │                     │ ################## │]
     (cnt:c:18:0, sum_eq:18:2);
     [│ счетам за день: │              │                     │                     │                    │];
   end;


    Var xml0 = ActiveX ("Microsoft.XMLDOM"), xml1 = ActiveX ("Microsoft.XMLDOM");
    Var pRazd, pOper, pCur, pCodeCur, pnCur, pChapter, pCol, pDeb, pKred, pRub, pCol2, isql, cnt=0;
    Var pel, pnum1, pshifr1, pvidopr, padeb1, pakred1, psdeb1, pskred1, psrub1, pnum2, pdata2,
        pshifr2, padeb2, pakred2, psdeb2, pskred2, psrub2, pack, bs, potd, potd2;
    Var votdel, i, IsFirstString, CurrentOtdel, CurrentChapter;
    var count = 0, sum = 0, chp, SubQuery1, SubQuery2, SubQuery3, SubQuery4, pIsCash;
    var sum_deb = 0, sum_cred = 0, count_deb = 0, count_cred = 0;
    var AbsCode_ = LoadRegVal ( "PRBB\\EA\\ABSCODE", V_STRING);


/**/
   GetMainSql("X");
//    setoutput("..\\txtfile\\ea_rep4.txt");
//    println(sql.command.cmdtext);
//    setoutput(null,true);


    BegAction (0, "Идет отбор документов, ждите...", false);
    sql = ExecSqlSelect (EndCapture (), MakeArray (SqlParam ("dtrub", Data), SqlParam ("dtend", Data)), true);

    EndAction ();
    InitProgress (-1, null, "Формирование отчета");


    isql = "delete from user_earep5"; ExecSql ( isql );

//    setoutput("..\\txtfile\\ea_rep4.txt");
//    println(sql.command.cmdtext);
//    setoutput(null,true);
    y = sql.MoveNext ();
    while ( y /*and (cnt <= 1000)*/)
      if ( xml0.LoadXml (sql.value ("MOxml")) ) //sql.value ("PMxml")
        /* Фильтр на раздел и операциониста не нужен
        if ( (int(xml0.childNodes.item (0).getAttribute ("partId")) == Razd) and ((int(xml0.childNodes.item (0).getAttribute ("employee")) == Oper)))
        */
          pRazd = xml0.childNodes.item (0).getAttribute ("partId");
          pOper = xml0.childNodes.item (0).getAttribute ("employee");
          pack  = xml0.childNodes.item (0).getAttribute ("pack");

          if (sql.value("IsMulty") == 0)
            pCur = sql.value("t_code_currency");
            if (pCur != 0) pCur = 1; end;
            pnCur = xml0.childNodes.item (0).getAttribute ("currency");
          else
            pCur = 2;
            pnCur = xml0.childNodes.item (0).getAttribute ("currency1")+"/"+xml0.childNodes.item (0).getAttribute ("currency2");
          end;
          pCodeCur = sql.value("t_code_currency");

          pel = int(sql.value("StoreKindMO"));
          pnum1   = xml0.childNodes.item (0).getAttribute ("docNumber");
          pshifr1 = xml0.childNodes.item (0).getAttribute ("docCode");
          if (ValType (pshifr1) == V_SPECVAL ) pshifr1 = " "; end;
          pvidopr = sql.value("vidopr");
          if (ValType (pvidopr) == V_SPECVAL ) pvidopr = " "; end;
          padeb1  = xml0.childNodes.item (0).getAttribute ("accountNumber");
          bs      = Substr(padeb1,1,5);
          pakred1 = xml0.childNodes.item (0).getAttribute ("accountKrNumber");
          psdeb1  = xml0.childNodes.item (0).getAttribute ("debitSum");
          if (ValType (psdeb1) == V_SPECVAL ) psdeb1 = 0; end;
          pskred1 = xml0.childNodes.item (0).getAttribute ("creditSum");
          if (ValType (pskred1) == V_SPECVAL ) pskred1 = 0; end;
          psrub1  = xml0.childNodes.item (0).getAttribute ("sum");
          if (ValType (psrub1) == V_SPECVAL ) psrub1 = 0; end;

             if (      ( 
                         ( (bs == "20202") or 
                           (bs == "20203") or 
                           (bs == "20206") or 
                           (bs == "20207") 
                         ) and 
                         ( (substr(pakred1,1,5) != "70603") and 
                           (substr(pakred1,1,5) != "70608") 
                         ) 
                       ) or
                       ( 
                         ( (substr(pakred1,1,5) == "20202") or 
                           (substr(pakred1,1,5) == "20203") or 
                           (substr(pakred1,1,5) == "20206") or 
                           (substr(pakred1,1,5) == "20207") 
                         ) and 
                         ( (bs != "70603") and 
                           (bs != "70608") 
                         ) 
                       )
                )
            pIsCash = 1;
          else
            pIsCash = 0;
          end;

          if ( (AbsCode_ == "09") and ( pack == "900" ) )
            pIsCash = 0;
          end;

/*
          if ( (sql.value("t_code_currency") == 0) and ((bs == "20202") or (substr(pakred1,1,5) == "20202")) and (sql.value("t_dockind") == 15) )
            pIsCash = 1;
          else
            pIsCash = 0;
          end;
*/
          pChapter = sql.value("t_chapter");
          if ( pChapter == 2 )
            pChapter = 3;
          elif ( pChapter == 3 )
            if ( ( bs == "99999" ) or ( bs == "99998" ) )
              pChapter = 6;
              bs = Substr(pakred1,1,5);
            else
              pChapter = 5;
            end;
          elif ( pChapter == 4 )
            pChapter = 2;
          elif ( pChapter == 5 )
            pChapter = 4;
          end;

          potd =  int(sql.value("otdel"));
          if (ValType (potd) == V_SPECVAL ) potd = 1; end;
          potd2 =  int(sql.value("podotdel"));
          if (ValType (potd2) == V_SPECVAL ) potd2 = 1; end;


          pnum2 = pdata2 = pshifr2 = padeb2 = pakred2 = " ";  psdeb2 = pskred2 = psrub2 = 0;
//            if ( (ValType (sql.value ("ExtUploadDoc")) != V_SPECVAL) and (ValType (sql.value ("DevCode")) != V_SPECVAL))
          if (ValType (sql.value ("ExtUploadDoc")) != V_SPECVAL)
            if ( xml1.LoadXml (sql.value ("PMxml")) )
              pnum2   = xml1.childNodes.item (0).getAttribute ("docNumber");
              pdata2  = xml1.childNodes.item (0).getAttribute ("docStartDate");
              pshifr2 = xml1.childNodes.item (0).getAttribute ("docCode");
              if (ValType (pshifr2) == V_SPECVAL ) pshifr2 = " "; end;
              padeb2  = xml1.childNodes.item (0).getAttribute ("accountNumber");
              if (ValType (padeb2) == V_SPECVAL ) padeb2 = " "; end;   // Rogl modify (31.05.2012)

              pakred2 = xml1.childNodes.item (0).getAttribute ("accountKrNumber");
              if (ValType (pakred2) == V_SPECVAL ) pakred2 = " "; end;  // Rogl modify (31.05.2012)
              psdeb2  = xml1.childNodes.item (0).getAttribute ("debitSum");
              if (ValType (psdeb2) == V_SPECVAL ) psdeb2 = 0; end;
              pskred2 = xml1.childNodes.item (0).getAttribute ("creditSum");
              if (ValType (pskred2) == V_SPECVAL ) pskred2 = 0; end;
              psrub2  = xml1.childNodes.item (0).getAttribute ("sum");
              if (ValType (psrub2) == V_SPECVAL ) psrub2 = 0; end;
            else
              pnum2 = pdata2 = pshifr2 = padeb2 = pakred2 = " "; psdeb2 = pskred2 = psrub2 = 0;
            end;
          end;
//if (cnt == 617)
//if (ValType (sql.value ("ExtUploadDoc")) == V_SPECVAL)
//  debugbreak;
//end;
          isql="insert into USER_EAREP5 values (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25)";
          ExecSql(isql,MakeArray ( 
                                SqlParam("1",pChapter),
                                SqlParam("2",pOper),
                                SqlParam("3",pCur),
                                SqlParam("4",pCodeCur),
                                SqlParam("5",pnCur),
                                SqlParam("6",pel),
                                SqlParam("7",pnum1),
                                SqlParam("8",pshifr1),
                                SqlParam("9",pvidopr),
                                SqlParam("10",padeb1),
                                SqlParam("11",pakred1),
                                SqlParam("12",psdeb1),
                                SqlParam("13",pskred1),
                                SqlParam("14",psrub1),
                                SqlParam("15",pnum2),
                                SqlParam("16",pdata2),
                                SqlParam("17",pshifr2),
                                SqlParam("18",padeb2),
                                SqlParam("19",pakred2),
                                SqlParam("20",psdeb2),
                                SqlParam("21",pskred2),
                                SqlParam("22",psrub2), 
                                SqlParam("23",pack),
                                SqlParam("24",bs),
                                SqlParam("25",piscash)),
                                true);

      end;
      UseProgress (cnt = cnt+1);
      y = sql.movenext();
    end;

/**/
  Macro ПечатьОтчета(IsCashReport);
    if ( StoreKind_ == 0 )
      SubQuery1 = "";
    elif ( StoreKind_ == 1 )
      SubQuery1 = " and el = 1 ";
    elif ( StoreKind_ == 2 )
      SubQuery1 = " and el = 0 ";
    end;

    if ( Pack_ != " " )
      SubQuery2 = " and pack = to_number('" + Pack_ + "') ";
    else
      SubQuery2 = "";
    end;

    if ( Oper_ != 0 )
      SubQuery3 = " and oper = to_char(" + Oper_ + ") ";
    else
      SubQuery3 = "";
    end;

    SubQuery4 = " and iscash = " + IsCashReport;

    StartCapture ();
     [select ss.chapter, 
             ss.bs, 
             decode(fi.t_ccy, 
                    'RUR', 'ПРИЗНАК РОССИЙСКОГО РУБЛЯ', 
                    upper(fi.t_name)) fi_name_old, 
             upper(fi.t_name) fi_name,             
             ss.sum_val, 
             ss.sum_eq,
             ss.cnt
      from 
      ( 
         select chapter, bs, codecur, 0 sum_val,
            sum(srub1) sum_eq,
            count(srub1) cnt
         from user_earep5
         where cur = 0 
         #
         #
         #
         #
         group by bs, codecur, chapter
        union
         select distinct chapter, bs, codecur,  
            sum(sdeb1) sum_val,
            sum(srub1) sum_eq, 
            count(srub1) cnt
         from user_earep5
         where cur != 0
         #
         #
         #
         #
         group by bs, codecur, chapter
       ) ss 
       join dfininstr_dbt fi on fi.t_fiid = ss.codecur
       order by chapter, bs, codecur](SubQuery1, SubQuery2, SubQuery3, SubQuery4, SubQuery1, SubQuery2, SubQuery3, SubQuery4);
    sql = EndCapture;
//println(sql);

    rs = ExecSqlSelect (sql);

    CurrentChapter = 0;
    y=rs.movenext();

    if ( y == false )
      return 1;
    end;

    Шапка0(IsCashReport, StoreKind_);
    Шапка1;

    while (y)
      if ( CurrentChapter != rs.value("chapter") )
        if ( CurrentChapter != 0 )
          Строка3(count, sum);
        end;
        if ( CurrentChapter != (rs.value("chapter") - 1) )
          chp = CurrentChapter + 1;
          while ( chp != rs.value("chapter") )
            Линия2;
            Строка2(chp);
            Линия11;
            Строка3(0, 0);
            chp = chp + 1;
          end;
        end;
        Линия2;
        Строка2(rs.value("chapter")); 
        Линия11;
        if ( CurrentChapter == 5 )
          sum_deb = sum;
          count_deb = count;
        end;
        CurrentChapter = rs.value("chapter"); 

        sum = 0;
        count = 0;
      end;
      Строка1(rs.value("bs"), rs.value("cnt"), rs.value("fi_name"), rs.value("sum_val"), rs.value("sum_eq"));
      Линия3;
      sum = sum + rs.value("sum_eq");
      count = count + rs.value("cnt");
      y = rs.movenext();
    end;

    if ( CurrentChapter != 0 ) 
      Строка3(count, sum);
    end;
    if ( CurrentChapter == 5 )
      sum_deb = sum;
      count_deb = count;
    elif ( CurrentChapter == 6 )
      sum_cred = sum;
      count_cred = count;
    end;
    if ( CurrentChapter != 6 )
      chp = CurrentChapter + 1;
      while ( chp != 7 )
        Линия2;
        Строка2(chp);
        Линия11;
        Строка3(0, 0);
        chp = chp + 1;
      end;
    end;
    
    Линия3;
    Строка33(count_deb+count_cred, sum_deb+sum_cred);
    Линия2;

    Подвал;
  end;
                    
  ПечатьОтчета(0);

  sum_deb = 0;
  sum_cred = 0;
  count_deb = 0;
  count_cred = 0;
  println("");
  ПечатьОтчета(1);
end;


//-----------------------------------------------------------------------------------------

Parm = TParm ();
if ( not Parm.Run () ) Exit (1); end;


RunReport( Parm.("oDate"), Parm.DetRep, Parm.("oPack"), Parm.("oOper") );
Exit (0);
