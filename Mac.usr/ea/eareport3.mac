//-----------------------------------------------------------------------------------------
// СПРАВКА О ПРОВЕДЕННЫХ ДОКУМЕНТАХ
// Т.Крамаренко
// Rogl modify (31.05.2012) Во всех вызовах ExecSql* последний параметр (если он задан) заменил на true
//                          иначе в случае наличия оракловых ошибок пользователю об этом никак не сообщалось! 
//-----------------------------------------------------------------------------------------
import oralib, likepy, bankinter, Календарь, eautils, lib_str;

Var Parm, aDet = TArray(), aStoreKind = Tarray(), aStoreKind_namerep = Tarray();

aStoreKind(0) = "Любой                         ";
aStoreKind(1) = "Электронный                   ";
aStoreKind(2) = "Бумажный                      ";

aStoreKind_namerep(0) = "все виды хранения";
aStoreKind_namerep(1) = "электронный";
aStoreKind_namerep(2) = "на бумажных носителях";


// Rogl add (09.06.2012)  
    Macro LoadRegVal ( Path, Type )
        Var sql, DefVal = "";
        if ( Type == V_INTEGER )
            sql = "select t_lintvalue from dregval_dbt where t_keyid = rsb_common.GetRegParm (:path) and t_regkind=0";
            DefVal = 0;
        elif ( Type == V_STRING )
            sql = "select utl_raw.cast_to_varchar2 (t_fmtblobdata_xxxx) from dregval_dbt where t_keyid = rsb_common.GetRegParm (:path) and t_regkind=0";
        end;
        if ( sql )
            sql = ExecSqlSelect (sql, MakeArray (SqlParam ("path", Path)));
            if ( sql.MoveNext () and (ValType (sql.value (0)) != V_SPECVAL) )
                return sql.value (0);
            end;
        end;
        return DefVal;
    End;

// Rogl add (09.06.2012)  
var AbsCode     = LoadRegVal ("PRBB\\EA\\ABSCODE", V_STRING);
var AbsVersion  = LoadRegVal ("PRBB\\EA\\VERSION", V_STRING);;


// Возвращает последний закрытый опердень - day
Private macro GetDefaultDate ( day )
    Var sql = "select max (t_curdate) from dcurdate_dbt where t_isclosed='X' and t_branch=1";
    sql = ExecSqlSelect (sql);
    if ( sql.Movenext () and (ValType (sql.value (0)) != V_SPECVAL) )
        return Date (sql.value (0)) - day;
    else
        Exit (0, "Не найдено ни одного закрытого дня");
        return Date (0,0,0);
    end;
End;
//-----------------------------------------------------------------------------------------
// Возвращает имя операциониста
Private macro GetOperName ( op )
    Var sql = "select t_name from dperson_dbt where t_oper=:1";
    sql = ExecSqlSelect (sql, MakeArray (SqlParam ("1", op)), true);
    if ( sql.Movenext () and (ValType (sql.value (0)) != V_SPECVAL) )
        return sql.value (0);
    end;
End;
//-----------------------------------------------------------------------------------------
// Возвращает доступ операциониста
Private macro GetDostup ( op )
    Var sql = "select t_ctypeperson from dperson_dbt where t_oper=:1";
    sql = ExecSqlSelect (sql, MakeArray (SqlParam ("1", op)), true);
    if ( sql.Movenext () and ((sql.value (0) == "А") or (sql.value (0) == "Б")) )
        return true;
    end;
    return false;
End;
//-----------------------------------------------------------------------------------------

// класс интерфейса для задания параметров и вызова процедур
Private class (TRecHandler) TParm
    // 2012-02-09 zip_z. >
    // InitTRecHandler ("eareport", "ea.lbr", true);
    InitTRecHandler ("earep2", getResourceLibPath (), true);
    // < 2012-02-09 zip_z. 
    
    Var RazdRep = 0, DetRep = 0, Dostup = false;

    // обработчик для скроллинга
    Macro ScrollHandler ( rs, cmd, id, key )
        if ( (cmd == DLG_KEY) and (key == kbEnter) )
            return CM_SELECT;
        end;
    End;

    Macro SelectOper ( )
        Var sql = "select t_oper, t_name from dperson_dbt where t_userclosed <> 'X' order by t_oper";
        sql = ExecSqlSelect (sql, null, false, RSDVAL_CLIENT, RSDVAL_STATIC);
        if ( RunScroll (sql, 2, MakeArray ("t_oper", "Номер", 5, 0, 0, 0, "t_name", "Ф.И.О.", 40, 0, 40, 0),
                        NULL, R2M (this, "ScrollHandler"), "Операционисты", "Enter Выбор  ESC Отмена", TRUE) )
            return sql.value ("t_oper");
        end;
    End;

    Macro Handler ( dlg, cmd, id, key )
        if ( cmd == DLG_INIT )
            Message ("F2 - выполнить  F3 - выбор  ESC - отмена");
            DisableFields (dlg, FldIndex ("oPack"));
            DisableFields (dlg, FldIndex ("oOper"));
            DisableFields (dlg, FldIndex ("oOpName"));
            UpdateFields (dlg);

        elif ( cmd == DLG_SAVE )
        elif ( (cmd == DLG_KEY) and (key == kbF2) )
             return CM_SAVE;

        elif ( (cmd == DLG_KEY) and (key == kbF3) and (id == FldIndex ("oDate")) )
            dlg.(id) = GetDateByCalendar (dlg.(id));

        elif ( (cmd == DLG_KEY) and (key == kbF3) and (id == FldIndex ("oStoreKind")) )
            DetRep = menu( aStoreKind, null, "Выберите вид хранения документов       ", 34, 10 );
            if( DetRep >= 0 )
                dlg.(id) = aStoreKind(DetRep);
            end;
            UpdateFields (dlg);

        elif ( (cmd == DLG_KEY) and (key == kbF3) and (id == FldIndex ("oOper")) and Dostup )
            dlg.(id) = SelectOper();
            dlg.(FldIndex("oOpName")) = GetOperName(dlg.(id));
            UpdateFields (dlg);

        end;
    End;
    
    Macro Init
//        this.("oDate")   = GetDefaultDate (0);
        this.("oDate") = date(20,3,2012);
//        this.("oDetail") = aDet(0);
        this.("oStoreKind") = aStoreKind(0);
        this.("oOper")   = 0; //{oper}
        this.("oOpName") = ""; //GetOperName({oper})
        Dostup = GetDostup({oper});
    End;

    Macro Run
        Init ();
        return RunDialog (this, R2M (this, "Handler"));
    End;
End;



//-----------------------------------------------------------------------------------------


Macro RunReport (Data, Det, Oper) 
var iRow, iCol, sql, rs, y, nRazd, nOper, nCur, bCol=0, eCol=0, bColA=0, eColA=0, bSum=$0, eSum=$0, bSumA=$0, eSumA=$0, dSum=$0, dSumA=$0, first;
var yy, rs1, rs2;

   macro Линия1;
     [┌─────────┬──────────────────┬──────────┬───────┬───────┬────────┬──────────────────────┬──────────────────────┬──────────────┬───────────────┬──────────────┬────────────┐];
//   [+─────────--+---------------+----------+-------+-------+--------+----------------------+----------------------+--------------+---------------+--------------+------------+];
   end;

   macro Линия2;
     [├─────────┼──────────────────┴──────────┴───────┴───────┴────────┴──────────────────────┴──────────────────────┴──────────────┴───────────────┼──────────────┼────────────┤];
//   [+─────────--+---------------+----------+-------+-------+--------+----------------------+----------------------+--------------+---------------+--------------+------------+];
   end;

   macro Линия3;
     [│         ├──────────────────┼──────────┬───────┬───────┬────────┬──────────────────────┬──────────────────────┬──────────────┬───────────────┬──────────────┼────────────┤];
//   [+─────────--+---------------+----------+-------+-------+--------+----------------------+----------------------+--------------+---------------+--------------+------------+];
   end;

   macro Линия4;
     [│         ├──────────────────┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬──────────────┼────────────┤];
   end;

   macro Линия4_;
     [├─────────┼──────────────────┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬──────────────┼────────────┤];
   end;

   macro Линия4__;
     [├─────────┼───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼──────────────┼────────────┤];
   end;

   macro Линия5;
     [│         ├──────────────────┼──────────┴───────┴───────┴────────┴──────────────────────┴──────────────────────┴──────────────┴───────────────┴──────────────┤            │];
   end;

   macro Линия6;
     [└─────────┴───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴──────────────┴────────────┘];
   end;

   macro Линия7;
     [┌───────┬─────────┬─────────────┬───────────────────┬───────────────────┬────────────────────────┬───────────────────┬───────────────────┬───────────────────┐];
   end;

   macro Линия8;
     [└───────┴─────────┴─────────────┴───────────────────┴───────────────────┴────────────────────────┴───────────────────┴───────────────────┴───────────────────┘];
   end;

   macro Линия9;
     [┌──────────┬────────────┬───────────────────┬───────────────────┬────────────────────────┐];
   end;

   macro Линия10;
     [└──────────┴────────────┴───────────────────┴───────────────────┴────────────────────────┘];
  end;

   macro Шапка0;
   [                                       СПРАВКА О ПРОВЕДЕННЫХ ДОКУМЕНТАХ
                                         (вид хранения: #)
       
                                                  за: #

      
    ](aStoreKind_namerep(Det):l, Data:l:m);
   end;

   macro Шапка1;
     Линия1;
     [│   Дт    │   Подразделение  │   Ном.   │  ш/в  │ пачка │   №    │        Счет Дт       │       Счет Кт        │   Сумма в    │   Сумма в     │  Сумма в     │  Кол-во    │];
     [│  БС №   │        ОС        │   док    │       │       │  Исп.  │                      │                      │   валюте     │   валюте      │  валюте РФ   │  докум.    │];
     [│         │                  │          │       │       │        │                      │                      │   Дт         │   Кт          │  (итого)     │  Всего     │];
     [│         │  №/Наименование  │          │       │       │        │                      │                      │              │               │              │  (шт)      │];
     Линия2;
   end;

   macro Шапка2;
     Линия7;
     [│  № БС │ Признак │    Кол-во   │       Сумма       │       Сумма       │          ИТОГО         │       Сумма       │    Расхождение    │      Обороты      │];
     [│       │  счета  │  документов │     в рублях РФ   │ в руб.эквиваленте │                        │    по балансу     │    с балансом     │        СПОД       │];
     [│       │   А/П   │             │                   │                   │                        │                   │                   │                   │];
    end;

   macro Шапка3;
     Линия9;
     [├──────────┼────────────┼───────────────────┼───────────────────┼────────────────────────┤];
     [│          │   Кол-во   │       Сумма       │       Сумма       │          ИТОГО         │];
     [│          │  документов│     в рублях РФ   │ в руб.эквиваленте │                        │];
     [│          │            │                   │                   │                        │];
    end;


   Macro Строка1 (bs)
//     Линия4_;
     [│ ####### │                                                                                                                                   │              │            │]
     (bs);
   end;

   Macro Строка2 (otd, sum_rub, sum_eq, sum_itog, cnt)
     [│         │ ##########################################################################     в рублях -            ############                 │ ############ │ ########## │]
     (otd, sum_rub:18:2, sum_itog:18:2, cnt:c:18:0);
     [│         │                                                                                в руб.экв. -          ############                 │              │            │]
     (sum_eq:18:2);
     [│         │ в том числе  по отделам:                                                                                                          │              │            │];
     [│         ├──────────────────┬──────────┬───────┬───────┬────────┬──────────────────────┬──────────────────────┬──────────────┬───────────────┼──────────────┼────────────┤];
   end;

   Macro Строка3 ()
   [│         ├──────────────────┬──────────┬───────┬───────┬────────┬──────────────────────┬──────────────────────┬──────────────┬───────────────┼──────────────┼────────────┤];
   end;

   //-----------------------------------------------------------------------------------------
   Macro Строка4 (IsFirstString, otd, ndoc, nshifr, nvidopr, npack, oper, ns_deb, ns_cred, sum_deb, sum_kred, sum_eq, cnt)
//   [|         |               | ######## | ##/## | ##### | ###### | #################### | #################### | ############ | ############# | ############ |            |]
   if ( IsFirstString == true )
     [│         │ ################ │ ######## │ ##/## │ ##### │ ###### │ #################### │ #################### │ ############ │ ############# │ ############ │ ########## │]
     (otd, ndoc:r, nshifr, nvidopr, npack:r, oper, ns_deb, ns_cred, sum_deb:18:2, sum_kred:18:2, sum_eq:18:2, cnt:c:18:0);
   else
     [│         │                  ├──────────┼───────┼───────┼────────┼──────────────────────┼──────────────────────┼──────────────┼───────────────┼──────────────┤            │];
     [│         │ ################ │ ######## │ ##/## │ ##### │ ###### │ #################### │ #################### │ ############ │ ############# │ ############ │ ########## │]
     (otd, ndoc:r, nshifr, nvidopr, npack:r, oper, ns_deb, ns_cred, sum_deb:18:2, sum_kred:18:2, sum_eq:18:2, cnt:c:18:0);
   end;
//   [+         +---------------+----------+-------+-------+--------+----------------------+----------------------+--------------+---------------+--------------+------------+];
//   [│         │                  ├──────────┼───────┼───────┼────────┼──────────────────────┼──────────────────────┼──────────────┼───────────────┼──────────────┤            │];
   end;

   Macro Строка5(sum_rub, sum_eq, sum_itog) ;
     Линия5;
     [│         │                  │ Итого в рублях -                            ############                                                                      │            │]
     (sum_rub:18:2);
     [│         │                  │ Итого в руб.экв. -                          ############                                                                      │            │]
     (sum_eq:18:2);
     [│         │                  │ Всего -                                     ############                                                                      │            │]
     (sum_itog:18:2);
   end;

   Macro Строка6 (IsFirstString, otd, sum_rub, sum_eq, sum_itog, cnt)
     if ( IsFirstString == true )     
       [│ ИТОГО   │ ##########################################################################     в рублях -            ############                 │ ############ │ ########## │]
       (otd, sum_rub:18:2, sum_itog:18:2, cnt:c:18:0);
       [│ по всем │                                                                                в руб.экв. -          ############                 │              │            │]
       (sum_eq:18:2);
     else
       [│         ├───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼──────────────┼────────────┤];
       [│         │ ##########################################################################     в рублях -            ############                 │ ############ │ ########## │]
       (otd, sum_rub:18:2, sum_itog:18:2, cnt:c:18:0);
       [│         │                                                                                в руб.экв. -          ############                 │              │            │]
       (sum_eq:18:2);
     end;
//     [│         ├───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼──────────────┼────────────┤];
   end;

   Macro Строка7 (sum_rub, sum_eq, sum_itog, cnt)
       [│ ВСЕГО   │ По БАНКУ                                                                       в рублях -            ############                 │ ############ │ ########## │]
       (sum_rub:18:2, sum_itog:18:2, cnt:c:18:0);
       [│         │                                                                                в руб.экв. -          ############                 │              │            │]
       (sum_eq:18:2);
   end;

   Macro Строка8(bs, kind, sum_rub, sum_eq, sum_itog, sum_balance, sum_balance_spod, sum_diff, cnt)
   [├───────┼─────────┼─────────────┼───────────────────┼───────────────────┼────────────────────────┼───────────────────┼───────────────────┼───────────────────┤];
   [│ ##### │ ####### │ ########### │  ################ │  ################ │  ##################### │  ################ │   ############### │  ################ │]
   (bs, kind:c, cnt:18:0, sum_rub:18:2, sum_eq:18:2, sum_itog:18:2, sum_balance:18:2, sum_diff:18:2, sum_balance_spod:18:2);
   end;

   Macro Строка9(chapter, sum_rub, sum_eq, sum_itog, cnt)
   [├──────────┼────────────┼───────────────────┼───────────────────┼────────────────────────┤];
   [│ Глава ## │  ######### │  ################ │  ################ │  ##################### │]
   (chapter, cnt:18:0, sum_rub:18:2, sum_eq:18:2, sum_itog:18:2 );
   end;

   Macro Печать_Приложения(Subquery_)
   var sql_, rs_, rs_2, y_, z_, itog_rub, itog_eq, itog_cnt, cmd_calc101;
     Шапка2;
     StartCapture ();

        // Rogl add (09.06.2012)  
         if (index (AbsVersion,".29") > 0)
            cmd_calc101 = "rsb_account.debetb";
         else
            cmd_calc101 = "rsi_rsb_account.debetb";
         end;

         [select gg.*, 
                  #
                    (gg.chapter, gg.bs, 0, 0, :date_, :date_) debetb,
                  user_ea.debetb_spod(gg.chapter, gg.bs, 0, 0, :date_, :date_) debetb_spod,
                  sum_rub + sum_eq sum_itog
         from ( 
         select ss.*, bal.t_kind_account kind, bal.t_chapter chapter
         from (
         select bs, sum(sum_rub) sum_rub, sum(sum_eq) sum_eq, sum(cnt) cnt
         from (
         select  bs, sum(srub1) sum_rub, 0 sum_eq, count(srub1) cnt 
         from user_earep4
         where cur = 0
         #
         group by bs
             union 
         select  bs, 0 sum_rub, sum(srub1) sum_eq, count(srub1) cnt 
         from user_earep4
         where cur != 0
         #
         group by bs)
         group by bs
         ) ss
         join dbalance_dbt bal on bal.t_balance = ss.bs and bal.t_inumplan = 0 and bal.t_chapter <= 5) gg
         order by bs](cmd_calc101, Subquery_, Subquery_); 

     sql_ = EndCapture;
     var Params = TArray();
     Params[0] = SQLParam(":date_",Data);
     rs_ = ExecSqlSelect (sql_, Params, true);
     y_ = rs_.movenext();
     while (y_)
       Строка8 (rs_.value("bs"), rs_.value("kind"), rs_.value("sum_rub"), rs_.value("sum_eq"), rs_.value("sum_itog"), rs_.value("debetb"), rs_.value("sum_itog") - rs_.value("debetb"), rs_.value("debetb_spod"), rs_.value("cnt") );
       y_ = rs_.movenext();
     end;
  // Т.Крамаренко 13.07.2012 
  // Убрал итоги по активам/пассивам по замечанию от банка
  /*
     StartCapture ();
         [select kind, sum(sum_rub) sum_rub, sum(sum_eq) sum_eq, sum(cnt) cnt from (
         select ss.*, bal.t_kind_account kind 
         from (
         select bs, sum(sum_rub) sum_rub, sum(sum_eq) sum_eq, sum(cnt) cnt
         from (
         select  bs, sum(srub1) sum_rub, 0 sum_eq, count(srub1) cnt 
         from user_earep4
         where cur = 0
         #
         group by bs
             union 
         select  bs, 0 sum_rub, sum(srub1) sum_eq, count(srub1) cnt 
         from user_earep4
         where cur != 0
         #
         group by bs)
         group by bs
         order by bs) ss
         join dbalance_dbt bal on bal.t_balance = ss.bs and bal.t_inumplan = 0 and bal.t_chapter <= 5)
         group by kind](Subquery_, Subquery_); 
     sql_ = EndCapture;
     rs_ = ExecSqlSelect (sql_, null, true);
     y_ = rs_.movenext();
     itog_rub = 0; itog_eq = 0; itog_cnt = 0;
     while (y_)
       itog_rub = itog_rub + rs_.value("sum_rub");
       itog_eq = itog_eq + rs_.value("sum_eq");
       itog_cnt = itog_cnt + rs_.value("cnt");
       Строка8 ("Итого", rs_.value("kind"), rs_.value("sum_rub"), rs_.value("sum_eq"), rs_.value("sum_rub") + rs_.value("sum_eq"), "", "", rs_.value("cnt"));
       y_ = rs_.movenext();
     end;
     Строка8 ("Всего", "А+П", itog_rub, itog_eq, itog_rub + itog_eq, " ", " ", itog_cnt);
  */
     Линия8;

     Шапка3;
     StartCapture ();
         [select chapter, sum(sum_rub) sum_rub, sum(sum_eq) sum_eq, sum(cnt) cnt from (
         select ss.*, bal.t_kind_account kind, bal.t_chapter chapter 
         from (
         select bs, sum(sum_rub) sum_rub, sum(sum_eq) sum_eq, sum(cnt) cnt
         from (
         select  bs, sum(srub1) sum_rub, 0 sum_eq, count(srub1) cnt 
         from user_earep4
         where cur = 0
         #
         group by bs
             union 
         select  bs, 0 sum_rub, sum(srub1) sum_eq, count(srub1) cnt 
         from user_earep4
         where cur != 0
         #
         group by bs)
         group by bs
         ) ss
         join dbalance_dbt bal on bal.t_balance = ss.bs and bal.t_inumplan = 0 and bal.t_chapter <= 5)
         group by chapter 
         order by chapter](Subquery_, Subquery_);
     sql_ = EndCapture;
     rs_ = ExecSqlSelect (sql_, null, true);
     y_ = rs_.movenext();
     itog_rub = 0; itog_eq = 0; itog_cnt = 0;
     while (y_)
       Строка9 (rs_.value("chapter"), rs_.value("sum_rub"), rs_.value("sum_eq"), rs_.value("sum_rub") + rs_.value("sum_eq"), rs_.value("cnt"));
       y_ = rs_.movenext();
     end;
     Линия10;


   end;

    Var xml0 = ActiveX ("Microsoft.XMLDOM"), xml1 = ActiveX ("Microsoft.XMLDOM");
    Var pRazd, pOper, pCur, pnCur, pCol, pDeb, pKred, pRub, pCol2, isql, cnt=0;
    Var pel, pnum1, pshifr1, pvidopr, padeb1, pakred1, psdeb1, pskred1, psrub1, pnum2, pdata2,
        pshifr2, padeb2, pakred2, psdeb2, pskred2, psrub2, pack, bs, potd, potd2;
    Var votdel, i, IsFirstString, CurrentOtdel, CurrentBS, SubQuery;


//Setoutput ("..\2_ea.txt"); 
   GetMainSql("X");

/*sql = EndCapture ();
println (sql);
setoutput (null);
viewfile("..\1_ea.txt");
exit(0);*/

//    setoutput(null);
//    println(isql);

    BegAction (0, "Идет отбор документов, ждите...", false);


    sql = ExecSqlSelect (EndCapture (), MakeArray (SqlParam ("dtrub", Data), SqlParam ("dtend", Data)), true);

    EndAction ();
    InitProgress (-1, null, "Формирование отчета");


    isql = "delete from user_earep4"; ExecSql ( isql );

    y = sql.MoveNext ();
    while ( y /*and (cnt <= 1000)*/)
      if ( xml0.LoadXml (sql.value ("MOxml")) ) //sql.value ("PMxml")
        /* Фильтр на раздел и операциониста не нужен
        if ( (int(xml0.childNodes.item (0).getAttribute ("partId")) == Razd) and ((int(xml0.childNodes.item (0).getAttribute ("employee")) == Oper)))
        */
          pRazd = xml0.childNodes.item (0).getAttribute ("partId");
          pOper = xml0.childNodes.item (0).getAttribute ("employee");
          pack  = xml0.childNodes.item (0).getAttribute ("pack");

          if (sql.value("IsMulty") == 0)
            pCur = sql.value("t_code_currency");
            if (pCur != 0) pCur = 1; end;
            pnCur = xml0.childNodes.item (0).getAttribute ("currency");
          else
            pCur = 2;
            pnCur = xml0.childNodes.item (0).getAttribute ("currency1")+"/"+xml0.childNodes.item (0).getAttribute ("currency2");
          end;
          pel = int(sql.value("StoreKindMO"));
          pnum1   = xml0.childNodes.item (0).getAttribute ("docNumber");
          pshifr1 = xml0.childNodes.item (0).getAttribute ("docCode");
          if (ValType (pshifr1) == V_SPECVAL ) pshifr1 = " "; end;
          pvidopr = sql.value("vidopr");
          if (ValType (pvidopr) == V_SPECVAL ) pvidopr = " "; end;
          padeb1  = xml0.childNodes.item (0).getAttribute ("accountNumber");
          bs      = Substr(padeb1,1,5);
          pakred1 = xml0.childNodes.item (0).getAttribute ("accountKrNumber");
          psdeb1  = xml0.childNodes.item (0).getAttribute ("debitSum");
          if (ValType (psdeb1) == V_SPECVAL ) psdeb1 = 0; end;
          pskred1 = xml0.childNodes.item (0).getAttribute ("creditSum");
          if (ValType (pskred1) == V_SPECVAL ) pskred1 = 0; end;
          psrub1  = xml0.childNodes.item (0).getAttribute ("sum");
          if (ValType (psrub1) == V_SPECVAL ) psrub1 = 0; end;

          // мультики в отчете должны выглядить несколько иначе, чем они выглядят в выборке
          if ( (psdeb1 == 0) and (pCur == 2) ) psdeb1 = psrub1; end;
          if ( (pskred1 == 0) and (pCur == 2) ) pskred1 = psrub1; end;

          potd =  int(sql.value("otdel"));
          if (ValType (potd) == V_SPECVAL ) potd = 1; end;
          potd2 =  int(sql.value("podotdel"));
          if (ValType (potd2) == V_SPECVAL ) potd2 = 1; end;


          pnum2 = pdata2 = pshifr2 = padeb2 = pakred2 = " ";  psdeb2 = pskred2 = psrub2 = 0;
//            if ( (ValType (sql.value ("ExtUploadDoc")) != V_SPECVAL) and (ValType (sql.value ("DevCode")) != V_SPECVAL))
          if (ValType (sql.value ("ExtUploadDoc")) != V_SPECVAL)
            if ( xml1.LoadXml (sql.value ("PMxml")) )
              pnum2   = xml1.childNodes.item (0).getAttribute ("docNumber");
              pdata2  = xml1.childNodes.item (0).getAttribute ("docStartDate");
              pshifr2 = xml1.childNodes.item (0).getAttribute ("docCode");
              if (ValType (pshifr2) == V_SPECVAL ) pshifr2 = " "; end;

              padeb2  = xml1.childNodes.item (0).getAttribute ("accountNumber");
              if (ValType (padeb2) == V_SPECVAL ) padeb2 = " "; end;   // Rogl modify (31.05.2012)

              pakred2 = xml1.childNodes.item (0).getAttribute ("accountKrNumber");
              if (ValType (pakred2) == V_SPECVAL ) pakred2 = " "; end;  // Rogl modify (31.05.2012)

              psdeb2  = xml1.childNodes.item (0).getAttribute ("debitSum");
              if (ValType (psdeb2) == V_SPECVAL ) psdeb2 = 0; end;
              pskred2 = xml1.childNodes.item (0).getAttribute ("creditSum");
              if (ValType (pskred2) == V_SPECVAL ) pskred2 = 0; end;
              psrub2  = xml1.childNodes.item (0).getAttribute ("sum");
              if (ValType (psrub2) == V_SPECVAL ) psrub2 = 0; end;
            else
              pnum2 = pdata2 = pshifr2 = padeb2 = pakred2 = " "; psdeb2 = pskred2 = psrub2 = 0;
            end;
          end;
//if (cnt == 617)
//if (ValType (sql.value ("ExtUploadDoc")) == V_SPECVAL)
//  debugbreak;
//end;
          isql="insert into USER_EAREP4 values (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25)";
          ExecSql(isql,MakeArray ( 
                                SqlParam("1",pRazd),
                                SqlParam("2",pOper),
                                SqlParam("3",pCur),
                                SqlParam("4",pnCur),
                                SqlParam("5",pel),
                                SqlParam("6",pnum1),
                                SqlParam("7",pshifr1),
                                SqlParam("8",pvidopr),
                                SqlParam("9",padeb1),
                                SqlParam("10",pakred1),
                                SqlParam("11",psdeb1),
                                SqlParam("12",pskred1),
                                SqlParam("13",psrub1),
                                SqlParam("14",pnum2),
                                SqlParam("15",pdata2),
                                SqlParam("16",pshifr2),
                                SqlParam("17",padeb2),
                                SqlParam("18",pakred2),
                                SqlParam("19",psdeb2),
                                SqlParam("20",pskred2),
                                SqlParam("21",psrub2), 
                                SqlParam("22",pack),
                                SqlParam("23",bs),
                                SqlParam("24",potd),
                                SqlParam("25",potd2)),
                                true);
      end;
      UseProgress (cnt = cnt+1);
      y = sql.movenext();
    end;


    if ( Det == 0 )
      Subquery = "";
    elif ( Det == 1 )
      Subquery = " and el = 1 ";
    elif ( Det == 2 )
      Subquery = " and el = 0 ";
    end;

    CurrentBS = "";
    StartCapture ();
    [select zz.bs, zz.otd, to_char(zz.otd)||'.0 '||otdels.t_name otd_name, zz.sum_rub, zz.sum_eq, zz.sum_rub+zz.sum_eq sum_itog,  zz.cnt
     from(  
       select ss.bs, ss.otd, sum(ss.sum_rub) sum_rub,  sum(ss.sum_eq) sum_eq, sum(ss.cnt) cnt 
       from (
         select  bs, otd, sum(srub1) sum_rub, 0 sum_eq, count(srub1) cnt 
         from user_earep4
         where cur = 0
         #
         group by bs, otd
          union 
         select  bs, otd, 0 sum_rub, sum(srub1) sum_eq, count(srub1) cnt 
         from user_earep4
         where cur != 0
         #
       group by bs, otd) ss
     group by bs, otd) zz
     left join dotdels_dbt otdels on otdels.t_code1 = zz.otd and otdels.t_code2 = 0
     order by bs, otd
      ](Subquery, Subquery);
    sql = EndCapture;
    rs = ExecSqlSelect (sql);

    Шапка0;
    Шапка1;
    CurrentBS = "";
    y=rs.movenext();
    while (y)

      if ( CurrentBS != rs.value("bs") )
        Строка1(rs.value("bs"));
        CurrentBS = rs.value("bs"); 
      end;
       StartCapture ();
       [select us_ea.num1, us_ea.shifr1, us_ea.vidopr, us_ea.pack, us_ea.oper, us_ea.adeb1, us_ea.akred1, us_ea.sdeb1, us_ea.skred1, us_ea.srub1, us_ea.otd, us_ea.otd2, to_char(us_ea.otd)||'.'||to_char(us_ea.otd2) otd2_num, otdels.t_name otd2_name 
        from user_earep4 us_ea
        left join dotdels_dbt otdels on otdels.t_code1 = us_ea.otd and otdels.t_code2 = us_ea.otd2
        where bs = :bs 
          and otd = :otd  --and rownum < 4
          #
        order by otd2, srub1
         ](Subquery, Subquery);
       sql = EndCapture;
       rs1 = ExecSqlSelect (sql, MakeArray (SqlParam ("bs", rs.value("bs")), SqlParam ("otd", rs.value("otd"))), true);

       Строка2 (rs.value("otd_name"), rs.value("sum_rub"), rs.value("sum_eq"), rs.value("sum_itog"), rs.value("cnt"));
       yy=rs1.movenext();

       CurrentOtdel = rs1.value("otd2_num");
       votdel = StrTransferByWord(rs1.value("otd2_name"), 16, null, null);
       i = 0;
       IsFirstString = true; 
       while (yy)
          if (rs1.value("otd2_num") != CurrentOtdel ) 
            Строка5(rs2.value("sum_rub"), rs2.value("sum_eq"), rs2.value("sum_rub") + rs2.value("sum_eq"));
            Линия3();
            votdel = StrTransferByWord(rs1.value("otd2_name"), 16, null, null);
            i = 0;
            IsFirstString = true; 
            CurrentOtdel = rs1.value("otd2_num");
          end;
          if (IsFirstString == true )

            StartCapture ();
            [select sum(cnt) cnt, sum(sum_rub ) sum_rub, sum(sum_eq) sum_eq
             from (
               select count(1) cnt, sum(srub1) sum_rub, 0 sum_eq, bs, otd, otd2
               from user_earep4 
               where bs = :bs 
                and otd = :otd 
                and otd2 = :otd2 
                and cur = 0
                #
               group by bs, otd, otd2
                union
               select count(1) cnt, 0 sum_rub, sum(srub1) sum_eq, bs, otd, otd2
               from user_earep4 
               where bs = :bs 
                 and otd = :otd 
                 and otd2 = :otd2 
                 and cur != 0
                 #
               group by bs, otd, otd2)](Subquery, Subquery);
            sql = EndCapture;
            rs2 = ExecSqlSelect (sql, MakeArray (SqlParam ("bs", rs.value("bs")), SqlParam ("otd", rs1.value("otd")), SqlParam ("otd2", rs1.value("otd2"))), true);
            rs2.movenext();

            Строка4 (IsFirstString, rs1.value("otd2_num"), rs1.value("num1"), rs1.value("shifr1"), rs1.value("vidopr"), rs1.value("pack"), rs1.value("oper"), rs1.value("adeb1"), rs1.value("akred1"), rs1.value("sdeb1"), rs1.value("skred1"), rs1.value("srub1"), rs2.value("cnt"));
            IsFirstString = false;
          else
            if ( valtype(votdel[i]) == 0 ) votdel[i] = ""; end;
            Строка4 (IsFirstString, votdel[i], rs1.value("num1"), rs1.value("shifr1"), rs1.value("vidopr"), rs1.value("pack"), rs1.value("oper"), rs1.value("adeb1"), rs1.value("akred1"), rs1.value("sdeb1"), rs1.value("skred1"), rs1.value("srub1"), "");
            i = i + 1;
          end;
          yy=rs1.movenext();
       end;
       Строка5(rs2.value("sum_rub"), rs2.value("sum_eq"), rs2.value("sum_rub") + rs2.value("sum_eq"));

       y=rs.movenext();
       if ( (y == false) or (CurrentBS != rs.value("bs")) ) 
         Линия4_;
       else
         Линия4;
       end;

       UseProgress (cnt = cnt+1);
   end;

   StartCapture ();
   [select  zz.otd, to_char(zz.otd)||'.0 '||otdels.t_name otd_name, zz.sum_rub, zz.sum_eq, zz.sum_rub+zz.sum_eq sum_itog,  zz.cnt
     from(  
       select ss.otd, sum(ss.sum_rub) sum_rub,  sum(ss.sum_eq) sum_eq, sum(ss.cnt) cnt 
       from (
         select  otd, sum(srub1) sum_rub, 0 sum_eq, count(srub1) cnt 
         from user_earep4
         where cur = 0
         #
         group by otd
          union 
         select  otd, 0 sum_rub, sum(srub1) sum_eq, count(srub1) cnt 
         from user_earep4
         where cur != 0
         #
       group by otd) ss
     group by otd) zz
     left join dotdels_dbt otdels on otdels.t_code1 = zz.otd and otdels.t_code2 = 0
     order by otd](Subquery, Subquery);
     sql = EndCapture;
     rs = ExecSqlSelect (sql, null, true);
     y = rs.movenext();
     IsFirstString = true;
     while (y)
       Строка6 (IsFirstString, rs.value("otd_name"), rs.value("sum_rub"), rs.value("sum_eq"), rs.value("sum_itog"), rs.value("cnt"));
       IsFirstString = false;
       y = rs.movenext();
     end;

     Линия4__;

     StartCapture ();
     [select sum(sum_rub) sum_rub, sum(sum_eq) sum_eq, sum(cnt) cnt
       from (
         select  sum(srub1) sum_rub, 0 sum_eq, count(srub1) cnt 
         from user_earep4
         where cur = 0
         #
             union 
         select  0 sum_rub, sum(srub1) sum_eq, count(srub1) cnt 
         from user_earep4
         where cur != 0
         #
         )](Subquery, Subquery);
     sql = EndCapture;
     rs = ExecSqlSelect (sql, null, true);
     y = rs.movenext();
     while (y)
       Строка7 (rs.value("sum_rub"), rs.value("sum_eq"), rs.value("sum_rub") + rs.value("sum_eq"), rs.value("cnt"));
       y = rs.movenext();
     end;
     Линия6;
     Печать_Приложения(Subquery);
end;


//-----------------------------------------------------------------------------------------

Parm = TParm ();
if ( not Parm.Run () ) Exit (1); end;

RunReport( Parm.("oDate"), Parm.DetRep, Parm.("oOper") );
Exit (0);
