//-----------------------------------------------------------------------------------------
// Справка сверки 
// С.Рогалев
// Rogl modify (31.05.2012) Во всех вызовах ExecSql* последний параметр (если он задан) заменил на true
//                          иначе в случае наличия оракловых ошибок пользователю об этом никак не сообщалось! 
//-----------------------------------------------------------------------------------------
import oralib, likepy, bankinter, Календарь, eautils, activex;

Var Parm, aDet = TArray(), aRazdel = Tarray();

aDet(0) = "Сводный";
aDet(1) = "расшифровка раздела сшива";
aDet(2) = "расшифровка по ответисполнителю";

aRazdel(0) = "";
aRazdel(1) = "Кассовые  документы";
aRazdel(2) = "Внешние и транзитные платежи по Банку (РКЦ, корсеть, МФР)";
aRazdel(3) = "Прочие внутренние бухгалтерские (клиентские, банковские, ордерные)";
aRazdel(4) = "Внебалансовые документы";
aRazdel(5) = "Срочные операции";

// Возвращает последний закрытый опердень - day
Private macro GetDefaultDate ( day )
    Var sql = "select max (t_curdate) from dcurdate_dbt where t_isclosed='X' and t_branch=1";
    sql = ExecSqlSelect (sql);
    if ( sql.Movenext () and (ValType (sql.value (0)) != V_SPECVAL) )
        return Date (sql.value (0)) - day;
    else
        Exit (0, "Не найдено ни одного закрытого дня");
        return Date (0,0,0);
    end;
End;
//-----------------------------------------------------------------------------------------
// Возвращает имя операциониста
Private macro GetOperName ( op )
    Var sql = "select t_name from dperson_dbt where t_oper=:1";
    sql = ExecSqlSelect (sql, MakeArray (SqlParam ("1", op)), true);
    if ( sql.Movenext () and (ValType (sql.value (0)) != V_SPECVAL) )
        return sql.value (0);
    end;
End;
//-----------------------------------------------------------------------------------------
// Возвращает доступ операциониста
Private macro GetDostup ( op )
    Var sql = "select t_ctypeperson from dperson_dbt where t_oper=:1";
    sql = ExecSqlSelect (sql, MakeArray (SqlParam ("1", op)), true);
    if ( sql.Movenext () and ((sql.value (0) == "А") or (sql.value (0) == "Б")) )
        return true;
    end;
    return false;
End;
//-----------------------------------------------------------------------------------------

// класс интерфейса для задания параметров и вызова процедур
Private class (TRecHandler) TParm
    // 2012-02-09 zip_z. >
    // InitTRecHandler ("eareport", "ea.lbr", true);
    InitTRecHandler ("eareport", getResourceLibPath (), true);
    // < 2012-02-09 zip_z. 
    
    Var RazdRep = 0, DetRep = 0, Dostup = false;

    // обработчик для скроллинга
    Macro ScrollHandler ( rs, cmd, id, key )
        if ( (cmd == DLG_KEY) and (key == kbEnter) )
            return CM_SELECT;
        end;
    End;

    Macro SelectOper ( )
        Var sql = "select t_oper, t_name from dperson_dbt where t_userclosed <> 'X' order by t_oper";
        sql = ExecSqlSelect (sql, null, false, RSDVAL_CLIENT, RSDVAL_STATIC);
        if ( RunScroll (sql, 2, MakeArray ("t_oper", "Номер", 5, 0, 0, 0, "t_name", "Ф.И.О.", 40, 0, 40, 0),
                        NULL, R2M (this, "ScrollHandler"), "Операционисты", "Enter Выбор  ESC Отмена", TRUE) )
            return sql.value ("t_oper");
        end;
    End;

    Macro Handler ( dlg, cmd, id, key )
        if ( cmd == DLG_INIT )
            Message ("F2 - выполнить  F3 - выбор  ESC - отмена");
            //DisableFields (dlg, FldIndex ("oDetail"));
            DisableFields (dlg, FldIndex ("oRazdel"));
            DisableFields (dlg, FldIndex ("oOper"));
            DisableFields (dlg, FldIndex ("oOpName"));
            UpdateFields (dlg);

        elif ( cmd == DLG_SAVE )
        elif ( (cmd == DLG_KEY) and (key == kbF2) )
             return CM_SAVE;

        elif ( (cmd == DLG_KEY) and (key == kbF3) and (id == FldIndex ("oDate")) )
            dlg.(id) = GetDateByCalendar (dlg.(id));

        elif ( (cmd == DLG_KEY) and (key == kbF3) and (id == FldIndex ("oDetail")) )
            DetRep = menu( aDet, null, "Выберите детализацию", 20, 10 );
            if( DetRep >= 0 )
                dlg.(id) = aDet(DetRep);
                if ( DetRep == 0)
                    DisableFields (dlg, FldIndex ("oRazdel"));
                    DisableFields (dlg, FldIndex ("oOper"));
                    dlg.(FldIndex("oRazdel")) = aRazdel(0);
                    dlg.(FldIndex("oOper")) = {oper};
                    dlg.(FldIndex("oOpName")) = GetOperName({oper});
                elif ( DetRep == 1)
                    EnableFields (dlg, FldIndex ("oRazdel"));
                    DisableFields (dlg, FldIndex ("oOper"));
                    dlg.(FldIndex("oOper")) = {oper};
                    dlg.(FldIndex("oOpName")) = GetOperName({oper});
                elif ( DetRep == 2)
                    EnableFields (dlg, FldIndex ("oRazdel"));
                    EnableFields (dlg, FldIndex ("oOper"));
                end;
            end;
            UpdateFields (dlg);

        elif ( (cmd == DLG_KEY) and (key == kbF3) and (id == FldIndex ("oRazdel")) )
            RazdRep = menu( aRazdel, null, "Выберите раздел", 20, 13 );
            if( RazdRep > 0 )
                dlg.(id) = aRazdel(RazdRep);
            end;
            UpdateFields (dlg);

        elif ( (cmd == DLG_KEY) and (key == kbF3) and (id == FldIndex ("oOper")) and Dostup )
            dlg.(id) = SelectOper();
            dlg.(FldIndex("oOpName")) = GetOperName(dlg.(id));
            UpdateFields (dlg);

        end;
    End;
    
    Macro Init
        this.("oDate")   = GetDefaultDate (0);
        this.("oDetail") = aDet(0);
        this.("oRazdel") = aRazdel(0);
        this.("oOper")   = 0; //{oper}
        this.("oOpName") = ""; //GetOperName({oper})
        Dostup = GetDostup({oper});
    End;

    Macro Run
        Init ();
        return RunDialog (this, R2M (this, "Handler"));
    End;
End;



//-----------------------------------------------------------------------------------------


Macro RunReport (Data, Det, Razd, Oper) 
var iRow, iCol, sql, rs, y, nRazd, nOper, nCur, bCol=0, eCol=0, bColA=0, eColA=0, bSum=$0, eSum=$0, bSumA=$0, eSumA=$0, dSum=$0, dSumA=$0, first;
var yy, rs1;

   macro Линия1;
   [+-----------+-------+----------------------+----------------------+--------------------+--------------------+];
   end;

   macro Шапка0;
   [                                       СПРАВКА О ПРОВЕДЕННЫХ ДОКУМЕНТАХ
                                         (вид хранения: на бумажных носителях)
       
                                                  за: #

      
    ](Data:l:m);
   end;

   macro Шапка1;
   Линия1;
   [|Номер док. | Пачка |    Счет по дебету    |   Счет по кредиту    |   Сумма в валюте   |   Сумма в рублях   |];
   Линия1;
   end;

   Macro Подвал1 (bs, cnt, sumrub);
   Линия1;
   [Всего по #####      ##### док.                                                           ##################
      
      ](bs, cnt:r:5:0, sumrub:r:18:2);
   end;


   //-----------------------------------------------------------------------------------------
   Macro Строка1 (ndoc, npack, ns_deb, ns_cred, sum_rub, sum_val)
   [|########## | ##### | #################### | #################### | ################## | ################## |]
   (ndoc:r, npack:r, ns_deb, ns_cred, sum_rub:18:2, sum_val:18:2);
   end;
/*
create global temporary table USER_EAREP3
--create table USER_EAREP3
(
  NRAZD  VARCHAR2(10 BYTE),
  OPER   VARCHAR2(10 BYTE),
  cur    NUMBER(5) not null,
  ncur   VARCHAR2(7) not null,
  el     NUMBER(5) not null,
  num1   VARCHAR2(16) not null,
  shifr1 VARCHAR2(3) not null,
  adeb1  VARCHAR2(25) not null,
  akred1 VARCHAR2(25) not null,
  sdeb1  NUMBER(32,12) not null,
  skred1 NUMBER(32,12) not null,
  srub1  NUMBER(32,12) not null,
  num2   VARCHAR2(16) not null,
  data2  DATE not null,
  shifr2 VARCHAR2(3) not null,
  adeb2  VARCHAR2(25) not null,
  akred2 VARCHAR2(25) not null,
  sdeb2  NUMBER(32,12) not null,
  skred2 NUMBER(32,12) not null,
  srub2  NUMBER(32,12) not null,
  pack   NUMBER(5) not null,
  bs     VARCHAR2(5) not null
)
on commit preserve rows;

Create index USER_EAREP3_IDX0 on USER_EAREP3 (el,cur,ncur,bs,srub1);
*/


    GetMainSql("X");

    BegAction (0, "Идет отбор документов, ждите...", false);
    sql = ExecSqlSelect (EndCapture (), MakeArray (SqlParam ("dtrub", Data), SqlParam ("dtend", Data)), true);

    EndAction ();
    InitProgress (-1, null, "Формирование отчета");

    Var xml0 = ActiveX ("Microsoft.XMLDOM"), xml1 = ActiveX ("Microsoft.XMLDOM");
    Var pRazd, pOper, pCur, pnCur, pCol, pDeb, pKred, pRub, pCol2, isql, cnt=0;
    Var pel, pnum1, pshifr1, padeb1, pakred1, psdeb1, pskred1, psrub1, pnum2, pdata2,
        pshifr2, padeb2, pakred2, psdeb2, pskred2, psrub2, pack, bs;

    isql = "delete from user_earep3"; ExecSql ( isql );

    y = sql.MoveNext ();
    while ( y /*and (cnt <= 1000)*/)
      if ( xml0.LoadXml (sql.value ("MOxml")) ) //sql.value ("PMxml")
        /* Фильтр на раздел и операциониста не нужен
        if ( (int(xml0.childNodes.item (0).getAttribute ("partId")) == Razd) and ((int(xml0.childNodes.item (0).getAttribute ("employee")) == Oper)))
        */
          pRazd = xml0.childNodes.item (0).getAttribute ("partId");
          pOper = xml0.childNodes.item (0).getAttribute ("employee");
          pack  = xml0.childNodes.item (0).getAttribute ("pack");

          if (sql.value("IsMulty") == 0)
            pCur = sql.value("t_code_currency");
            if (pCur != 0) pCur = 1; end;
            pnCur = xml0.childNodes.item (0).getAttribute ("currency");
          else
            pCur = 2;
            pnCur = xml0.childNodes.item (0).getAttribute ("currency1")+"/"+xml0.childNodes.item (0).getAttribute ("currency2");
          end;
          pel = int(sql.value("StoreKindMO"));
          pnum1   = xml0.childNodes.item (0).getAttribute ("docNumber");
          pshifr1 = xml0.childNodes.item (0).getAttribute ("docCode");
          if (ValType (pshifr1) == V_SPECVAL ) pshifr1 = " "; end;
          padeb1  = xml0.childNodes.item (0).getAttribute ("accountNumber");
          bs      = Substr(padeb1,1,5);
          pakred1 = xml0.childNodes.item (0).getAttribute ("accountKrNumber");
          psdeb1  = xml0.childNodes.item (0).getAttribute ("debitSum");
          if (ValType (psdeb1) == V_SPECVAL ) psdeb1 = 0; end;
          pskred1 = xml0.childNodes.item (0).getAttribute ("creditSum");
          if (ValType (pskred1) == V_SPECVAL ) pskred1 = 0; end;
          psrub1  = xml0.childNodes.item (0).getAttribute ("sum");
          if (ValType (psrub1) == V_SPECVAL ) psrub1 = 0; end;

          pnum2 = pdata2 = pshifr2 = padeb2 = pakred2 = " ";  psdeb2 = pskred2 = psrub2 = 0;
//            if ( (ValType (sql.value ("ExtUploadDoc")) != V_SPECVAL) and (ValType (sql.value ("DevCode")) != V_SPECVAL))
          if (ValType (sql.value ("ExtUploadDoc")) != V_SPECVAL)
            if ( xml1.LoadXml (sql.value ("PMxml")) )
              pnum2   = xml1.childNodes.item (0).getAttribute ("docNumber");
              pdata2  = xml1.childNodes.item (0).getAttribute ("docStartDate");
              pshifr2 = xml1.childNodes.item (0).getAttribute ("docCode");
              if (ValType (pshifr2) == V_SPECVAL ) pshifr2 = " "; end;

              padeb2  = xml1.childNodes.item (0).getAttribute ("accountNumber");
              if (ValType (padeb2) == V_SPECVAL ) padeb2 = " "; end;   // Rogl modify (31.05.2012)

              pakred2 = xml1.childNodes.item (0).getAttribute ("accountKrNumber");
              if (ValType (pakred2) == V_SPECVAL ) pakred2 = " "; end;  // Rogl modify (31.05.2012)

              psdeb2  = xml1.childNodes.item (0).getAttribute ("debitSum");
              if (ValType (psdeb2) == V_SPECVAL ) psdeb2 = 0; end;
              pskred2 = xml1.childNodes.item (0).getAttribute ("creditSum");
              if (ValType (pskred2) == V_SPECVAL ) pskred2 = 0; end;
              psrub2  = xml1.childNodes.item (0).getAttribute ("sum");
              if (ValType (psrub2) == V_SPECVAL ) psrub2 = 0; end;
            else
              pnum2 = pdata2 = pshifr2 = padeb2 = pakred2 = " "; psdeb2 = pskred2 = psrub2 = 0;
            end;
          end;
          isql="insert into USER_EAREP3 values (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18, :19, :20, :21,:22)";
          ExecSql(isql,MakeArray ( 
                                SqlParam("1",pRazd),
                                SqlParam("2",pOper),
                                SqlParam("3",pCur),
                                SqlParam("4",pnCur),
                                SqlParam("5",pel),
                                SqlParam("6",pnum1),
                                SqlParam("7",pshifr1),
                                SqlParam("8",padeb1),
                                SqlParam("9",pakred1),
                                SqlParam("10",psdeb1),
                                SqlParam("11",pskred1),
                                SqlParam("12",psrub1),
                                SqlParam("13",pnum2),
                                SqlParam("14",pdata2),
                                SqlParam("15",pshifr2),
                                SqlParam("16",padeb2),
                                SqlParam("17",pakred2),
                                SqlParam("18",psdeb2),
                                SqlParam("19",pskred2),
                                SqlParam("20",psrub2), 
                                SqlParam("20",psrub2), 
                                SqlParam("21",pack),
                                SqlParam("22",bs)),
                                true);

        /* Фильтр на раздел и операциониста не нужен
        end;
        */
      end;
      UseProgress (cnt = cnt+1);
      y = sql.movenext();
    end;

/*
        //            ncur           el,      num1          shifr1          adeb1                            akred1                            sdeb1          skred1         srub1         
        sql = "Select 'RUR' as ncur, 0 as el, '11' as num1, '01' as shifr1, '40702810199990009887' as adeb1, '30102810100000000023' as akred1, 100 as sdeb1, 100 as skred1, 100 as srub1, "+
        //     num2          data2                  shifr2          adeb2                            akred2                            sdeb2         skred2         srub2
              "'25' as num2, '20.05.2011' as data2, '01' as shifr2, '40702810199990009887' as adeb2, '30102810100000000023' as akred2, 100 as sdeb2, 100 as skred2, 100 as srub2 from dual "+
              "union "+
              "Select 'RUR' as ncur, 1 as el, '11' as num1, '01' as shifr1, '40702810199990009887' as adeb1, '30102810100000000023' as akred1, 100 as sdeb1, 100 as skred1, 100 as srub1, "+
              "'25' as num2, '20.05.2011' as data2, '01' as shifr2, '40702810199990009887' as adeb2, '30102810100000000023' as akred2, 100 as sdeb2, 100 as skred2, 100 as srub2 from dual "+
              "union "+
              "Select 'EUR' as ncur, 0 as el, '11' as num1, '01' as shifr1, '40702810199990009887' as adeb1, '30102810100000000023' as akred1, 100 as sdeb1, 100 as skred1, 100 as srub1, "+
              "'25' as num2, '20.05.2011' as data2, '01' as shifr2, '40702810199990009887' as adeb2, '30102810100000000023' as akred2, 100 as sdeb2, 100 as skred2, 100 as srub2 from dual ";
*/
    sql = "Select NRAZD, oper, cur, ncur, el, num1, shifr1, adeb1, akred1, sdeb1, skred1, srub1, "+
          "num2, data2, shifr2, adeb2, akred2, sdeb2, skred2, srub2 from USER_EAREP3 order by cur,ncur,el ";

    StartCapture ();
    [select bs, count(1) cnt, sum(srub1) sumrub 
     from user_earep3
     where cur = 0 and el = 0
     group by bs
     order by bs
      ];
    sql = EndCapture;

    rs = ExecSqlSelect (sql);

    Шапка0;
    y=rs.movenext();
    while (y)
       StartCapture ();
       [select num1,pack, adeb1, akred1, sdeb1, srub1 
        from user_earep3
        where cur = 0 and el = 0 and bs = :bs
        order by srub1
         ];
       sql = EndCapture;
       rs1 = ExecSqlSelect (sql, MakeArray (SqlParam ("bs", rs.value("bs"))), true);

       Шапка1;
       yy=rs1.movenext();
       while (yy)
          Строка1 (rs1.value("num1"), rs1.value("pack"), rs1.value("adeb1"), rs1.value("akred1"), rs1.value("sdeb1"), rs1.value("srub1"));
          yy=rs1.movenext();
       end;
       Подвал1 (rs.value("bs"), rs.value("cnt"), rs.value("sumrub"));

       y=rs.movenext();
       UseProgress (cnt = cnt+1);
   end;

   RemProgress ();

End;
//-----------------------------------------------------------------------------------------

Parm = TParm ();
if ( not Parm.Run () ) Exit (1); end;


RunReport( Parm.("oDate"), Parm.DetRep, Parm.RazdRep, Parm.("oOper") );
Exit (0);
