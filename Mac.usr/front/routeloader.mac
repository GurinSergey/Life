//
// Макрос загрузки таблицы маршрутизации
// Селезнёв 04.12.2010
//
// - на сервере должна быть библиотека commdlgs.d32, на терминале commdlgt.d32
import BankInter,rcw,rsd;
import rsexts,"commdlgs.d32";
const first_row = 3;             //первая строка с данными
const last_row = first_row + 48; //максимальное число перебираемых строк
const first_column = 1;          //первый столбец
const last_column = 19;          //крайний столбец
const rt_tablename = "usr_route_parm";  //имя таблицы маршрутизации


var row = first_row;
var column = first_column;
var ob = CreateObject ("rsax","TRsAxServer","RsAxServer",IsStandAlone());
var ex = ob.CreateComObject ("Excel.Application",true);
var book_path;

GetRegistryValue("PRBB\\МАРШРУТИЗАЦИЯ\\ПУТЬ_К_ТМ",V_STRING,book_path);
/*
debugbreak;
if(not SelectFile(book_path,_book_path+"\\*.xls","Выбор файла *.xls, ESC - отмена"))
   exit(1);
end;
*/
private macro Win2Dos(s)
 private macro OEM2Char(WinChar)
  var DosN, WinN;
  WinN = CodeFor(WinChar);
  if ((WinN > 175) and (WinN < 192))
    DosN = WinN + 64;
  elif ((WinN > 191) and (WinN < 240))
    DosN = WinN - 64;
  elif ((WinN > 239) and (WinN < 256))
    DosN = WinN - 16;
  else
    DosN = WinN;
  end;
  Return StrFor(DosN);
 end; /* OEM2Char */

  var i = 1, ss = "";
  While ( i <= StrLen(s) )
    ss = ss + OEM2Char(SubStr(s,i,1));
    i = i + 1;
  end;
  Return ss;
end; /* Win2Dos */

    book_path = ex.application.GetOpenFileName ("Все файлы (*.*),*.*", null, "Выберите файл для загрузки"); // окно выбора файла
var obBook  = ex.Workbooks.open(book_path); 
var obSheet = obBook.ActiveSheet(); 

var sqlcmd = "insert into "+rt_tablename+" values(?";
var cmd;


var i = column + 1;

private macro catch(x)

   var err_count = 0;
   var lasterror = "oшибка:"+x.module + "[" + x.line + "]:" + x.message;

   while( err_count < RSLDefEnv.ErrorCount )
      lasterror = lasterror + "|"+RSLDefEnv.error(err_count).descr;
      err_count = err_count + 1;
   end;

   if (RSLDefCon.IsinTrans)
      RSLDefCon.RollbackTrans;
   end;
   msgbox(lasterror);
   ex.quit ();
   obBook  = null;
   obSheet = null;

end;


rsldefcon.BeginTrans;
cmd = RSDCommand("delete "+rt_tablename);
cmd.execute;

while (i <= last_column)
   sqlcmd = sqlcmd + ",?";
   i = i + 1;
end;
sqlcmd = sqlcmd + ")";

while ((row <= last_row) and (obSheet.Cells(row,first_column).text != ""))

   cmd = RSDCommand(sqlcmd);

   while (column <= last_column)
      cmd.addparam("p"+column, RSDBP_IN,obSheet.Cells(row,column).text);
      column = column + 1;
   end;

   cmd.execute;
   row = row + 1;
   column = first_column;

end;

rsldefcon.committrans();
msgbox("Таблица успешно загружена|импортировано "+string(row-first_row)+" строк(и)");

onerror(e)
  catch(e)