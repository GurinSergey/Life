/**
 *  RS-Bank 6.0                                           R-Style Software Lab
 *  Module  : r_cmagz_view.mac
 *  Purpose : Печать отчета "Кассовый журнал".
 *  Comment : Печать отчета "Кассовый журнал".
 *  @since    20.09.2010
 *  @author   Shestakov Dmitry
 *  @version  6.00.020.29
 */
/* 16.01.2014 GSP перенос пользовательских доработок из 2030 */
import ofstream;
import printableView;
import treport;
import r_cmagz_parameters;

/**
 * Печать отчета "Кассовый журнал".
 */
class (TPrintableView) TCJView()

    private var count_doc = 0;                                      //GSP 2031
    private var m_tempOfstream = TOfstream("r_cmagz_tmp");
    private var m_tablePrinter : CTableReport;


    private const DOCNUMBERLEN = 15;
    private const DOCDATELEN   = 10;
    private const DOCCIPHERLEN = 9;
    private const DOCSYMBOLLEN = 9;
    private const NOTELEN      = 40;
    private const DATELEN      = 10;

    private const TABLEHEADROWCOUNT = 6;
    private const OPERHEADROWCOUNT = 1;
    private const PACKHEADROWCOUNT = 1;
    private const DOCUMENTROWCOUNT = 2;
    private const BOTTOMROWCOUNT = 1;
    private const PAGENUMBERROWCOUNT = 3;

    /**
     * Параметры отчета.
     */

    private var opers       = TArray();
    private var isOperAdded = TArray();

    private var isDocumentFirstRow = true;

    private var totalReportPages = 1;
    private var currentPagePadding = 0;

    // Перегруженные методы НАЧАЛО
    /**
     * Установить ширину отчета.
     */
    macro setReportWidth()
        m_reportWidth = m_tablePrinter.GetSumLen();
    end;

    /**
     * Печать заголовка отчета.
     */
    macro printReportHead(isDebit : Bool)
        println(strAlign("КАССОВЫЙ ЖУРНАЛ ПО " + ternary(isDebit, "ПРИХОДУ", "РАСХОДУ"), getReportWidth(), STR_ALIGN_CENTER));
        currentPagePadding = currentPagePadding + 1;
    end;

    macro addOper(newOper)
        if (isOperAdded[newOper] == null)
            opers[opers.size] = newOper;
        end;
    end;

    macro clearOpersList()
        opers.size = 0;
        isOperAdded.size = 0;
    end;

    /**
     * Печать подписей.
     */
    macro printSignature()
/*        if (opers.size > 0)
            var reportOpers = TCJData().getReportOpersDataSet(opers);
            while (reportOpers.next())

                if ((currentPagePadding + 2 + PAGENUMBERROWCOUNT) > cjParameters().getPageSize())
                    println("\nPAGENUMBERPLACE");
                    println("\f");
                    totalReportPages = totalReportPages + 1;
                    currentPagePadding = 0;
                end;

                println();
                println(strAlign(reportOpers.position + " ___________________ " + reportOpers.name, getReportWidth(), STR_ALIGN_LEFT));
                currentPagePadding = currentPagePadding + 2;
            end;
        end;

        if (cjParameters().getInspectorNumber() != 0)

            if ((currentPagePadding + 2 + PAGENUMBERROWCOUNT) > cjParameters().getPageSize())
                println("\nPAGENUMBERPLACE");
                println("\f");
                totalReportPages = totalReportPages + 1;
                currentPagePadding = 0;
            end;

            println();
            println(strAlign(cjParameters().getInspectorSignatureRow(), getReportWidth(), STR_ALIGN_LEFT));
            currentPagePadding = currentPagePadding + 2;
        end;
*/
// KS 23.01.2011        GSP адаптация под 2031
[
          С кассой сверено:

                    Бухгалтер___________________________

                    Кассир______________________________
];

        if (totalReportPages > 1)
            println("\nPAGENUMBERPLACE");
        else
            println();
            println("Всего листов: 1");
        end;

        println("\f");
        clearOpersList();
    end;

    // Перегруженные методы КОНЕЦ

    /**
     * Вывод отчета в текущий поток с нумерацией страниц.
     */
    macro flushReport()

        FILE singleRep() txt;

        var tmpFileName = m_tempOfstream.getFileName();

        if ((existFile(tmpFileName, 0)) AND (open(singleRep, tmpFileName)))

            if (totalReportPages == 1)

                while(next(singleRep))
                    printLn(singleRep.str);
                end;

            else
                var pageNumberToPrint = 1;

                while(next(singleRep))
                    if (index(singleRep.str, "PAGENUMBERPLACE"))
                        printLn("Всего листов: ", totalReportPages);
                        println(strAlign("- " + pageNumberToPrint + " -", getReportWidth(), STR_ALIGN_CENTER));
                        pageNumberToPrint = pageNumberToPrint + 1;
                    else
                        printLn(singleRep.str);
                    end;
                end;

            end;

            close(singleRep);
            delFile(tmpFileName);
        else
            msgbox("Не найден файл временного хранения отчета: |", tmpFileName);
        end;

    end;

    /**
     * Печать шапки отчета(форма).
     */
    macro printTop(isDebit : Bool)
        println(strAlign("Приложение " + ternary(isDebit, "1", "4"), getReportWidth(), STR_ALIGN_RIGHT));
        println(strAlign("к Указанию ЦБР", getReportWidth(), STR_ALIGN_RIGHT));
        println(strAlign("от 16 июля 2010г. N 2481-У", getReportWidth(), STR_ALIGN_RIGHT));
        println(strAlign("\"О порядке ведения и", getReportWidth(), STR_ALIGN_RIGHT));
        println(strAlign("оформления кредитными", getReportWidth(), STR_ALIGN_RIGHT));
        println(strAlign("организациями кассового журнала", getReportWidth(), STR_ALIGN_RIGHT));
        println(strAlign("по приходу 0401704 и кассового", getReportWidth(), STR_ALIGN_RIGHT));
        println(strAlign("журнала по расходу 0401705\"", getReportWidth(), STR_ALIGN_RIGHT));
        println(strAlign("┌─────────┐", getReportWidth(), STR_ALIGN_RIGHT));
        println(strAlign("│ " + ternary(isDebit, "0401704", "0401705") + " │", getReportWidth(), STR_ALIGN_RIGHT));
        println(strAlign("└─────────┘", getReportWidth(), STR_ALIGN_RIGHT));
        currentPagePadding = currentPagePadding + 11;
    end;

    /**
     * Период день - строкой с названием месяца.
     */
    macro getDayText(dayDate : date)
        var day;
        var monthNum;
        var year;

        var month = TArray();
        month[month.size] = " ";

        month[month.size] = " января ";   month[month.size] = " февраля ";
        month[month.size] = " марта ";    month[month.size] = " апреля ";
        month[month.size] = " мая ";      month[month.size] = " июня ";
        month[month.size] = " июля ";     month[month.size] = " августа ";
        month[month.size] = " сентября "; month[month.size] = " октября ";
        month[month.size] = " ноября ";   month[month.size] = " декабря ";

        dateSplit(dayDate, day, monthNum, year);

        return day + month[monthNum] + year;
    end;

    macro moneyToReportFormat(money)
        return strSubst(string(money:0:2), ".", "-");
    end;

    macro printReportPeriod(partResultRecord)
        if (partResultRecord.carryDate != null)
            println(strAlign(getDayText(partResultRecord.carryDate), getReportWidth(), STR_ALIGN_CENTER));
            println(strAlign("────────────────", getReportWidth(), STR_ALIGN_CENTER));
            currentPagePadding = currentPagePadding + 1;
        elif (cjParameters().getDateIn() == cjParameters().getDateOut())
            println(strAlign(getDayText(cjParameters().getDateOut()), getReportWidth(), STR_ALIGN_CENTER));
            println(strAlign("────────────────", getReportWidth(), STR_ALIGN_CENTER));
            currentPagePadding = currentPagePadding + 1;
        else
            println(strAlign("С " + string(cjParameters().getDateIn()) +
                           " по " + string(cjParameters().getDateOut()), getReportWidth(), STR_ALIGN_CENTER));
            println(strAlign("──────────────────────────", getReportWidth(), STR_ALIGN_CENTER));
            currentPagePadding = currentPagePadding + 1;
        end;
        println(strAlign("Дата\n", getReportWidth(), STR_ALIGN_CENTER));
        currentPagePadding = currentPagePadding + 2;
    end;

    macro printAccountProperties(partResultRecord)
        println(strAlign("Счет по учету кассы №" + partResultRecord.cashAccount + "\n", getReportWidth(), STR_ALIGN_LEFT));
        println(strAlign("Валюта счета " + partResultRecord.currencyCode + " - " + partResultRecord.currencyName + "\n", getReportWidth(), STR_ALIGN_LEFT));
        currentPagePadding = currentPagePadding + 4;
    end;

    macro setHead(isDebit)
            m_tablePrinter.AddColumn("№|кассового|документа",    DOCNUMBERLEN,   AL_LEFT);
            m_tablePrinter.AddColumn("№№ счетов",                ACCOUNTLEN,     AL_RIGHT);
            m_tablePrinter.AddColumn("Шифр|документа",           DOCCIPHERLEN,   AL_CENTER);
            if ((not cjParameters().isNeedDaysSplit()) and (cjParameters().getDateIn() != cjParameters().getDateOut()))
            m_tablePrinter.AddColumn("Дата|документа",           DOCDATELEN,     AL_RIGHT);
            end;
            m_tablePrinter.AddColumn("Сумма",                    DOCUMENTSUMLEN, AL_RIGHT);
            m_tablePrinter.AddColumn("Символ по|статье|"+ ternary(isDebit, "прихода", "расхода"), DOCSYMBOLLEN,   AL_CENTER);
//            m_tablePrinter.AddColumn("Примечание",               NOTELEN,        AL_CENTER);
            m_tablePrinter.AddColumn("Примечание",               NOTELEN,        AL_LEFT); // KS 23.01.2011  GSP адаптация под 2031
             m_tablePrinter.AddColumn("Дата",                    DATELEN, AL_CENTER);
            m_tablePrinter.SetUseColumnNumbering(true);
            m_tablePrinter.setStartColumnNumber(1);

            setReportWidth();
    end;

    macro printBankHead()
        var buf = TArray();
        var i = 0;
        printBankHeaderBuf(m_departmentCode, m_orgStructure, m_reportWidth, buf, true);

        while(i < buf.size)
          println(trim(buf[i]));
          i = i + 1;
        end;

        println("Составитель\n");
    end;

    macro printPartHead(partResultRecord : Object)
        if (partResultRecord.isAccountResult)
            // Перенаправление вывода во временный файл для одного отчета
            currentPagePadding = 0;
            totalReportPages = 1;
            m_tempOfstream.setOutputFile();
            //--------------------------------------------------------
            m_tablePrinter = CTableReport();
            setHead(partResultRecord.isDebit);

            printTop(partResultRecord.isDebit);
            printBankHead(); currentPagePadding = currentPagePadding + 1; // по минимуму
            printReportHead(partResultRecord.isDebit);
            printReportPeriod(partResultRecord);
            printAccountProperties(partResultRecord);
            if ((not cjParameters().isNeedOperGroup()) and (not cjParameters().isNeedPackGroup()))
                m_tablePrinter.PrintHead();
                currentPagePadding = currentPagePadding + TABLEHEADROWCOUNT;
            end;
        elif (partResultRecord.isOperResult)
            if ((currentPagePadding + OPERHEADROWCOUNT + ternary(cjParameters().isNeedPackGroup(), PACKHEADROWCOUNT, 0) + TABLEHEADROWCOUNT + DOCUMENTROWCOUNT + BOTTOMROWCOUNT + PAGENUMBERROWCOUNT) > cjParameters().getPageSize())
                println("\nPAGENUMBERPLACE");
                println("\f");
                totalReportPages = totalReportPages + 1;
                currentPagePadding = 0;
            end;
            println(strAlign("Номер операциониста: " + partResultRecord.oper, getReportWidth(), STR_ALIGN_LEFT));
            currentPagePadding = currentPagePadding + OPERHEADROWCOUNT;
            if (not cjParameters().isNeedPackGroup())
                m_tablePrinter.printHead();
                currentPagePadding = currentPagePadding + TABLEHEADROWCOUNT;
            end;
        elif (partResultRecord.isPackResult)
            if ((currentPagePadding + PACKHEADROWCOUNT + TABLEHEADROWCOUNT + DOCUMENTROWCOUNT + BOTTOMROWCOUNT + PAGENUMBERROWCOUNT) > cjParameters().getPageSize())
                println("\nPAGENUMBERPLACE");
                println("\f");
                totalReportPages = totalReportPages + 1;
                currentPagePadding = 0;
            end;
            if (partResultRecord.packNumber == 0)
                println(strAlign("Документы без номера пачки", getReportWidth(), STR_ALIGN_LEFT));
                currentPagePadding = currentPagePadding + 1;
            else
                println(strAlign("Пачка №" + string(partResultRecord.packNumber:0:0), getReportWidth(), STR_ALIGN_LEFT));
                currentPagePadding = currentPagePadding + 1;
            end;
            m_tablePrinter.printHead();
            currentPagePadding = currentPagePadding + TABLEHEADROWCOUNT;
        elif (partResultRecord.isDocumentResult)

            if ((currentPagePadding + DOCUMENTROWCOUNT + BOTTOMROWCOUNT + PAGENUMBERROWCOUNT) > cjParameters().getPageSize())
                m_tablePrinter.PrintBottom();
                println("\nPAGENUMBERPLACE");
                println("\f");
                m_tablePrinter.printHead();
                totalReportPages = totalReportPages + 1;
                currentPagePadding = TABLEHEADROWCOUNT;
            end;

            m_tablePrinter.printSeparator();
            currentPagePadding = currentPagePadding + 1;
            isDocumentFirstRow = true;
            addOper(partResultRecord.oper);
        end;
    end;

//    macro printDataRow(num_docum, acc, shifr_docum, carryDate, sum, symblCode)
    macro printDataRow(num_docum, acc, shifr_docum, carryDate, sum, symblCode, ground) // KS 23.01.2011

        if (    (not isDocumentFirstRow)
            and ((currentPagePadding + 1 + BOTTOMROWCOUNT + PAGENUMBERROWCOUNT) > cjParameters().getPageSize()))
            m_tablePrinter.PrintBottom();
            println("\nPAGENUMBERPLACE");
            println("\f");
            m_tablePrinter.printHead();
            m_tablePrinter.printSeparator();
            totalReportPages = totalReportPages + 1;
            currentPagePadding = TABLEHEADROWCOUNT + 1;
        end;

        if (cjParameters().isNeedDaysSplit()  or (cjParameters().getDateIn() == cjParameters().getDateOut()))
        
//            m_tablePrinter.printString(num_docum, acc, shifr_docum,            moneyToReportFormat(sum), symblCode, "");

            m_tablePrinter.printString(num_docum, acc, shifr_docum,            moneyToReportFormat(sum), symblCode, ground, carryDate);

            ground = substr(ground,NOTELEN+1,strlen(ground)-NOTELEN);
            while (strlen(ground)>0) // KS 24.01.2012 Многострочный вывод
              m_tablePrinter.printString(""       , "" , ""         ,            ""                      , ""       , ground);
              ground = substr(ground,NOTELEN+1,strlen(ground)-NOTELEN);
            end;
        else
//            m_tablePrinter.printString(num_docum, acc, shifr_docum, carryDate, moneyToReportFormat(sum), symblCode, "");
            m_tablePrinter.printString(num_docum, acc, shifr_docum, carryDate, moneyToReportFormat(sum), symblCode, ground, carryDate);
            ground = substr(ground,NOTELEN+1,strlen(ground)-NOTELEN);
            while (strlen(ground)>0) // KS 24.01.2012 Многострочный вывод
              m_tablePrinter.printString(""       , "" , ""         , ""       , ""                      , ""       , ground);
              ground = substr(ground,NOTELEN+1,strlen(ground)-NOTELEN);
            end;
        end;
        currentPagePadding = currentPagePadding + 1;
    end;

    macro printAggregateRow(aggregateString, sumArray : TArray)
        var i = 0;
        while (i < sumArray.size)
            m_tablePrinter.printStringExt(ternary(i == 0, aggregateString, ""),
                                          ternary(cjParameters().isNeedDaysSplit() or (cjParameters().getDateIn() == cjParameters().getDateOut()), 3, 4), sumArray[i]);
            i = i + 1;
            currentPagePadding = currentPagePadding + 1;
        end;
    end;

    macro printData(dataset : Object, partResultRecord : Object)
        if (partResultRecord.isDocumentResult)

            if ((partResultRecord.symbBal + partResultRecord.symbNonBal) == 0)
                printDataRow(dataset.num_docum, dataset.acc,      dataset.shifr_docum,
//                             dataset.carryDate, dataset.aggregate, "");
                             dataset.carryDate, dataset.aggregate, "", dataset.ground); // KS 23.01.2011
            elif ((   (partResultRecord.symbBal == 1)
                   or ((partResultRecord.symbBal + partResultRecord.symbNonBal) == 1)
                  )
                  and isDocumentFirstRow)
                printDataRow(dataset.num_docum, dataset.acc,      dataset.shifr_docum,
//                             dataset.carryDate, dataset.aggregate, dataset.symblCode);
                             dataset.carryDate, dataset.aggregate, dataset.symblCode, dataset.ground); // KS 23.01.2011
                isDocumentFirstRow = false;
                count_doc = count_doc + 1;                                                               /* AAN I-00163951-2 */
            elif (isDocumentFirstRow)
                printDataRow(dataset.num_docum, dataset.acc,      dataset.shifr_docum,
//                             dataset.carryDate, dataset.aggregate, "");
                             dataset.carryDate, dataset.aggregate, "", dataset.ground); // KS 23.01.2011
                isDocumentFirstRow = false;
                printDataRow("", "", "", dataset.carryDate, dataset.symblSum, dataset.symblCode);
                count_doc = count_doc + 1;                                                              /* AAN I-00163951-2 */
            else
                printDataRow("", "", "", dataset.carryDate, dataset.symblSum, dataset.symblCode);
            end;
        end;
    end;

    macro isAgreementCurrency(iso_number : string) : bool
        if (iso_number != string(int(iso_number):o:3))
            return true;
        else
            return false;
        end;
    end;

    macro aggregateRows(partResultRecord : Object)
        if (cjParameters().isPrintSpellSum())
            var sumForPrint;

            if (isAgreementCurrency(partResultRecord.currencyCode))
                sumForPrint = moneyToReportFormat(partResultRecord.aggregate) + " (Клиринговая валюта)";
            else
                sumForPrint = CurToStrAlt(partResultRecord.aggregate, NULL, NULL, int(partResultRecord.currencyCode));
                if (index(sumForPrint, "???") != 0)
                    sumForPrint = moneyToReportFormat(partResultRecord.aggregate) + " (Неизвестная валюта)";
                end;
            end;

            sumForPrint = moneyToReportFormat(partResultRecord.aggregate) + "\n" + // KS 17.05.2012 I-00165626 Сумма цифрами
                          sumForPrint;

            return strSplit2(sumForPrint, DOCUMENTSUMLEN);
        else
            return arrCreate(moneyToReportFormat(partResultRecord.aggregate));
        end;
    end;

    macro printPartResult(partResultRecord : Object)
        var necessaryRows;

        if (partResultRecord.isAccountResult)
            necessaryRows = aggregateRows(partResultRecord);

            if ((currentPagePadding + 1 + necessaryRows.size + BOTTOMROWCOUNT + PAGENUMBERROWCOUNT) > cjParameters().getPageSize())
                if (cjParameters().isNeedOperGroup() or cjParameters().isNeedPackGroup())
                    m_tablePrinter.printBottomExt(ternary(cjParameters().isNeedDaysSplit() or (cjParameters().getDateIn() == cjParameters().getDateOut()), 3, 4));
                else
                    m_tablePrinter.printBottom();
                end;
                println("\nPAGENUMBERPLACE");
                println("\f");
                m_tablePrinter.printHead();
                m_tablePrinter.PrintSeparatorExt(false, true, ternary(cjParameters().isNeedDaysSplit() or (cjParameters().getDateIn() == cjParameters().getDateOut()), 3, 4), true);
                totalReportPages = totalReportPages + 1;
                currentPagePadding = TABLEHEADROWCOUNT;
            else
                m_tablePrinter.PrintSeparatorExt(false, ternary(cjParameters().isNeedOperGroup() or cjParameters().isNeedPackGroup(), null, true),
                                                 ternary(cjParameters().isNeedDaysSplit() or (cjParameters().getDateIn() == cjParameters().getDateOut()), 3, 4), true);
            end;

            currentPagePadding = currentPagePadding + 1;
            printAggregateRow("Итого по " + ternary(partResultRecord.isDebit, "приходу", "расходу"), necessaryRows);
            m_tablePrinter.printStringExt(" количество документов " + count_doc, 3);                                     /* AAN I-00163951-2 */
            currentPagePadding = currentPagePadding + 1;                                                                  /* AAN I-00163951-2 */
            count_doc = 0;

        elif (partResultRecord.isOperResult)
            necessaryRows = aggregateRows(partResultRecord);

            if ((currentPagePadding + 1 + necessaryRows.size + BOTTOMROWCOUNT + PAGENUMBERROWCOUNT) > cjParameters().getPageSize())
                if (cjParameters().isNeedPackGroup())
                    m_tablePrinter.printBottomExt(ternary(cjParameters().isNeedDaysSplit() or (cjParameters().getDateIn() == cjParameters().getDateOut()), 3, 4));
                else
                    m_tablePrinter.printBottom();
                end;
                println("\nPAGENUMBERPLACE");
                println("\f");
                m_tablePrinter.printHead();
                m_tablePrinter.PrintSeparatorExt(false, true, ternary(cjParameters().isNeedDaysSplit() or (cjParameters().getDateIn() == cjParameters().getDateOut()), 3, 4), true);
                totalReportPages = totalReportPages + 1;
                currentPagePadding = TABLEHEADROWCOUNT;
            else
                m_tablePrinter.PrintSeparatorExt(false, ternary(cjParameters().isNeedPackGroup(), null, true),
                                                 ternary(cjParameters().isNeedDaysSplit() or (cjParameters().getDateIn() == cjParameters().getDateOut()), 3, 4), true);
            end;

            currentPagePadding = currentPagePadding + 1;
            printAggregateRow("Итого по операционисту:", necessaryRows);
            m_tablePrinter.printStringExt(" количество документов " + count_doc, 3);                                     /* AAN I-00163951-2 */
            currentPagePadding = currentPagePadding + 1;                                                                  /* AAN I-00163951-2 */
            count_doc = 0;

        elif (partResultRecord.isPackResult)
            necessaryRows = aggregateRows(partResultRecord);

            if ((currentPagePadding + 1 + necessaryRows.size + BOTTOMROWCOUNT + PAGENUMBERROWCOUNT) > cjParameters().getPageSize())
                m_tablePrinter.printBottom();
                println("\nPAGENUMBERPLACE");
                println("\f");
                m_tablePrinter.printHead();
                totalReportPages = totalReportPages + 1;
                currentPagePadding = TABLEHEADROWCOUNT;
            else
            end;

            m_tablePrinter.PrintSeparatorExt(false, true, ternary(cjParameters().isNeedDaysSplit() or (cjParameters().getDateIn() == cjParameters().getDateOut()), 3, 4), true);
            currentPagePadding = currentPagePadding + 1;
            if (partResultRecord.packNumber == 0)
                printAggregateRow("Итого по документам без пачки:", necessaryRows);
               m_tablePrinter.printStringExt("  количество документов  " + count_doc, 3);                                   /* AAN I-00163951-2 */
               currentPagePadding = currentPagePadding + 1;                                                                  /* AAN I-00163951-2 */
               count_doc = 0;
            else
                printAggregateRow("Итого по пачке:", necessaryRows);
                m_tablePrinter.printStringExt("  количество документов  " + count_doc, 3);                                   /* AAN I-00163951-2 */
                currentPagePadding = currentPagePadding + 1;                                                                  /* AAN I-00163951-2 */
                count_doc = 0;
            end;
        end;
    end;

    macro closePart(partResultRecord : Object)
        if (partResultRecord.isAccountResult)
            m_tablePrinter.PrintBottomExt(ternary(cjParameters().isNeedDaysSplit() or (cjParameters().getDateIn() == cjParameters().getDateOut()), 3, 4));
            currentPagePadding = currentPagePadding + 1;
            printSignature();
            // Отмена перенаправления вывода
            // нумерация страниц, если насчитали больше одной.
            m_tempOfstream.resetOutputFile();
            flushReport();
            //--------------------------------------------------------------------------------
        elif (partResultRecord.isOperResult)
            m_tablePrinter.PrintBottomExt(ternary(cjParameters().isNeedDaysSplit() or (cjParameters().getDateIn() == cjParameters().getDateOut()), 3, 4));
            currentPagePadding = currentPagePadding + 1;
        elif (partResultRecord.isPackResult)
            m_tablePrinter.PrintBottomExt(ternary(cjParameters().isNeedDaysSplit() or (cjParameters().getDateIn() == cjParameters().getDateOut()), 3, 4));
            currentPagePadding = currentPagePadding + 1;
        end;
    end;

    /**
     *  Конструктор.
     */
    private macro constructor()
        initTPrintableView(cjParameters().getDepartmentCode(),
                           cjParameters().getOrgStructure(), null);
    end;

    constructor();
end;