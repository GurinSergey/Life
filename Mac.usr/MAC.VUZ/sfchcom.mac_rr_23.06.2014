/* -@H------------------------------------------------------------------
*            Автоматизированная банковская система RS-Bank
*                 Библиотека интерпретируемых модулей
*
*   File Name        : sfchcom.mac
*
*   Description      : Макрос отбора единовременных комиссий
*
*   Respons.         : Стасевич В.
*
*   History          : Создан : 07.03.02
*
*----------------------------------------------------------------------*/
IMPORT OprInter, CTInter, PTInter, FIInter, "globals.mac", pmchcom;
IMPORT SFInter, sfcomcat;

/* EVG 26/03/2012 */
IMPORT "VuzComLib.mac";

const OP_COM_CHOOSE_NOT_INS = 1;

RECORD comiss( sfcomiss );
RECORD contr ( sfcontr );

/*Макрос выбирает комиссии, которые попадут в комиссии операции*/
/*возвращаемые значения:*/
/*  0 - макрос не отобрал комиссию, отобрать должны дальше - системные процедуры*/
/*  1 - комиссия не вставляется и не рассчитывается*/
/*  2 - комиссия вставляется, но не рассчитывается*/
/*  3 - комиссия вставляется и рассчитывается*/
/**/
/*  если произошла ошибка, нужно вернуть не V_INTEGER*/

RECORD ps ( pscpord );
RECORD payord( pspayord );
RECORD dl_tick( dl_tick );
RECORD dvdeal( dvdeal );
PRIVATE RECORD rpscshdoc( pscshdoc );


private var SfConComm = TBFile("sfconcom.dbt");


/* EVG Глобальные переменные - определяются один раз во время выполнения шага */
Var IsCom53:bool,
    IsAntre:bool;

/*проверка единовременных комиссий в сделках с ценнми бумагами*/
macro SP_CheckOnceComiss( pDoc, contr, comiss )
   var Group, ReceiverCode = "", MarketCode = "", MarketLeaderCode = "";

   setbuff( dl_tick, pDoc );      
   Group = GetOperationGroup ( dl_tick.DealType );       

   /*проверим на то, что обрабатываемая комиссия входит в договор*/
   SfConComm.Clear();
   SfConComm.rec.ObjectID   = contr.Id; 
   SfConComm.rec.FeeType    = comiss.FeeType;
   SfConComm.rec.CommNumber = comiss.Number;
   SfConComm.rec.ObjectType = OBJTYPE_SFCONTR;
   if( SfConComm.GetEQ() == false )
      return 1; /*не считаем и не вставляем*/
   end;   

   if( IsEXCHANGE( Group ) == true )/*биржевая сделка*/

      /*для биржевых сделок получатель комиссии должен совпадать с биржей, указанной в сделке*/
      /*или получатель - наш банк*/
      ReceiverCode = ПолучитьКодСубъекта( comiss.ReceiverID, PTCK_CONTR );
      MarketCode   = ПолучитьКодСубъекта( dl_tick.MarketID, PTCK_CONTR );

      if(GetIdentProgram() == CodeFor("S")) /*операция выполняется из БОЦБ*/
         MarketLeaderCode = ExecMacroFile( "secinter.mac", "ПолучитьКодГруппыБиржи", dl_tick.MarketID );
      end;

      if(   (comiss.ReceiverID == {OurBank}) OR   
            ((MarketCode != "") AND (MarketCode == ReceiverCode)) OR
            ((MarketLeaderCode != "") AND (MarketLeaderCode == ReceiverCode))
      ) 
         return 3;
      else
         return 1;
      end;    
   end;
   return 0;
end;

private macro ПолучитьЗначениеКатегории( Obj, KindCateg, ObjType )
  var AttrID;
  if( GetMainObjAttr( null, ObjType, UniID(Obj, ObjType), KindCateg, AttrID) )
     return AttrID;
  end;
  return 0;
end;

private record rec_fi( fininstr );
private record rec_party( party );

/*проверка единовременных комиссий в сделках с ПИ (производными инструментами)*/
macro DV_CheckOnceComiss( pDoc, contr, comiss )

   var ContractorID:integer = -1, ExecCalc:bool = false;

   setbuff( dvdeal, pDoc );      

   /*проверим на то, что обрабатываемая комиссия входит в договор*/
   SfConComm.Clear();
   SfConComm.rec.ObjectID   = contr.Id; 
   SfConComm.rec.FeeType    = comiss.FeeType;
   SfConComm.rec.CommNumber = comiss.Number;
   SfConComm.rec.ObjectType = OBJTYPE_SFCONTR;
   if( SfConComm.GetEQ() == false )
      return 1; /*не считаем и не вставляем*/
   end;   

   /*проверим признак "расчет итоговых сумм сделок" для контрагента по сделке*/   
   /* определим контрагента */
   if( dvdeal.Broker == -1 )
      if( ПолучитьФинИн( dvdeal.FIID, rec_fi ) == 0 )
         ContractorID = rec_fi.Issuer; 
      end;
   else
      ContractorID = dvdeal.Broker;
   end;

   if( ContractorID != -1 )

      if( ПолучитьСубъекта( ContractorID, rec_party ) == 0 )
         /*получим для Party значение категории "Расчет итог. сумм сделок по ПИ" */
         if( ПолучитьЗначениеКатегории( rec_party, 29 /**/, OBJTYPE_PARTY ) == 2 /*Выполняется*/ )
            ExecCalc = true;
         else
            ExecCalc = false;
         end;                 
      end;

      if( ExecCalc )
         return 3;
      else
         return 1;
      end;
   end;

   return 0;
end;

/*проверка единовременных комиссий в сделках с учтенными векселями*/
private macro VA_CheckOnceComiss( contr, comiss)

   /*проверим на то, что обрабатываемая комиссия входит в договор*/
   SfConComm.Clear();
   SfConComm.rec.ObjectID   = contr.Id; 
   SfConComm.rec.FeeType    = comiss.FeeType;
   SfConComm.rec.CommNumber = comiss.Number;
   SfConComm.rec.ObjectType = OBJTYPE_SFCONTR;
   if( SfConComm.GetEQ() == false )
      return 1; /*не считаем и не вставляем*/
   end; 

   return 0;
end;

macro ChooseCom
( 
   docKind, /*вид первичного документа*/
   pDoc,    /*указатель на первичный документ*/
   pContr,  /*указатель на договор обслуживания*/
   pComiss  /*указатель на комиссию*/
)
debugbreak;
   setbuff( contr,  pContr  );
   setbuff( comiss, pComiss );

   /* EVG */
   var PaymentObj;
   record Paym( pmpaym );
   var retVal, Attrid, Code, Num;
   
   /* ID Категории "Комиссия 5.3 за выдачу наличных" */
   const GroupID = 20;

   /* Номер категории, которая устанавливается в случае, если выдача производится без предварительной заявки */
   const TarifCatNumber = "1";



   // Валютные платежи РКО и ББ
   if( ( docKind == PS_CPORDER ) OR ( docKind == BBANK_CPORDER ) )
      /* EVG Отключаем функции макросовой фильтрации комиссий
      setbuff( ps, pDoc );      
      if( PM_ChooseComPayment( comiss, RsbPayment( ps.OrderID ) ) )
        return 0;
      else
        return OP_COM_CHOOSE_NOT_INS;
      end;*/

      /* EVG Теперь фильтруем */
      /* Комиссии банков-корреспондентов рассчитываем только если это подходящий платёж */
      setbuff( ps, pDoc );
      if ( index(strLwr(comiss.Code), "банк") > 0 )
         PaymentObj = RsbPayment( ps.OrderID );
         if ( not IsPaymentForBankCommission( PaymentObj, PaymentObj.PayerAccount ) )
            return OP_COM_CHOOSE_NOT_INS;
         end;
      end;
      
      
      return 0;
   // Рублёвый платёж РКО
   elif ( docKind==PS_PAYORDER )
      setBuff( payord, pDoc );

      /* EVG Отключаем функции макросовой фильтрации комиссий
      if( PM_ChooseComPayment( comiss, RsbPayment( payord.OrderID ) ) )
        return 0;
      else
        return OP_COM_CHOOSE_NOT_INS;
      end;
      */

      return 0;
   // Кассовый документ
   elif( ( docKind == CASH_BOF_ADDORDER ) or
         ( docKind == CASH_PS_INCORDER  ) or
         ( docKind == CASH_PS_OUTORDER  ) or
         ( docKind == CASH_BOF_INCORDER ) or
         ( docKind == CASH_BOF_OUTORDER ) )
      /* EVG Отключаем функции макросовой фильтрации комиссий
      setBuff( rpscshdoc, pDoc );
      if( not PM_IsProperComission( RsbPayment( rpscshdoc.AutoKey ), comiss ) )
        return OP_COM_CHOOSE_NOT_INS;
      end;
      */

      /* EVG 26/03/2012 Комиссии банк ВУЗ */
      /* EVG Для комиссий по чекам, определяем значение категории "Комиссия 5.3 за выдачу наличных"
         и, в зависимости от него, фильтруем либо 5.2, либо 5.3.
         Если клиент - ИП, выбираем для него комиссии 5.8. */

      /* EVG Глобальные переменные - определяются один раз во время выполнения шага */
      Var IsCom53:bool,
          IsAntre:bool,
          IsCom371:bool;
      
      if ( docKind == CASH_PS_OUTORDER )

         /* Получим значение категории "Вид тарифа комиссии за перевод средств" (если это первая из комиссий) */
         if ( valType( IsCom53 ) == V_UNDEF )
            setBuff( rpscshdoc, pDoc );

            ClearRecord(paym);
            Paym.PaymentID = rpscshdoc.AutoKey;

            Num = "";
            GetMainObjAttr (retVal, OBJTYPE_PAYMENT, UniID(paym, OBJTYPE_PAYMENT), GroupID, null, null, Num);

            IsCom53 = false;
            if ( Num == TarifCatNumber )
               IsCom53 = true;
            end;
         end;

         /* Определим, является ли плательщик - ИП (по счёту) (опять же, если это первая из комиссий) */
         if ( valType( IsAntre ) == V_UNDEF )
            IsAntre = false;
            if ( VUZ_isAccount_IP( rpscshdoc.ClientAccount ) )
               IsAntre = true;
            end;
         end;
         
         /* Допуск комиссий */
         if ( (subStr( comiss.Code, 1, 3 ) == "5.2") and not IsCom53 and not IsAntre )
            return 0;
         elif ( (subStr( comiss.Code, 1, 3 ) == "5.3") and IsCom53 )
            return 0;
         elif ( (subStr( comiss.Code, 1, 3 ) == "5.8") and not IsCom53 and IsAntre )
            return 0;
         end;
         
         /*23.10.2013 joy С-24098 Эти комиссии допукаем к расчету. Категория проверяется в общих для всех банках максроах,  поэтому нет смысла добавлять и сюда проверку категории*/
        if ( (subStr( comiss.Code, 1, 5 ) == "5.3.0") or (subStr( comiss.Code, 1, 6 ) == "5.12.0") )
           return 0;
        end;
        /*end joy*/
         return OP_COM_CHOOSE_NOT_INS;
      end;
      /* EVG End */

      return 0;
   elif ( (docKind==WL_INDOC) OR (docKind==WL_WIPM) )
      /* EVG Отключаем функции макросовой фильтрации комиссий
      /* Для входящего платежа АРМ расчитываем только наши комиссии */
      if (comiss.ReceiverID!={OurBank})
         return OP_COM_CHOOSE_NOT_INS;
      end;
      */
      return 0;
   elif( (docKind== DL_SECURITYDOC) OR (docKind== DL_RETIREMENT) )
      return SP_CheckOnceComiss( pDoc, contr, comiss );
   elif(docKind == DL_VEKSELACCOUNTED)
      return VA_CheckOnceComiss( contr, comiss );    

   elif( docKind == DL_DVDEAL )
      return DV_CheckOnceComiss( pDoc, contr, comiss );          
   else 
      return 0;
   end;   
   
end;


