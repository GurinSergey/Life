/*FIV Массовое списание документов в картотеке 2, порожденных комиссиями */
// KS 26.04.2012 Адаптация под банковский ордер
//Gurin S. С-21207 26.07.2013
//Gurin S. C-22396 06.08.2013 Адаптация для ВУЗа
//Gurin S. R-321405-1 28.01.2014 Адаптация 2031
//Gurin S.     C-31277-7  16.07.2014
//VDN          C-41253    27.07.2015

import PTInter, Календарь, rsd, globals, "opr_engine.mac", "gstname.mac", "PmReportComissK2.mac";
import commonint, "acs_func.mac", "lib_access.mac", "lib_account.mac";

var rs, cmd, cmd1, DescError;
var opr = opr_engine;
var intM = 5, time1, time2, flag, mes;

var path, SelectMenu, sql, i, time_max;
var TmpClaimForDel: TArray = TArray();

record party(party);
record oper(person);
array M;
GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,path);
//Gurin S. C-31277-7 16.07.2014
GetRegistryValue("PRBB\\MASS_EXEC\\TIME_MAX",2,time_max);
if (time_max == "")
    time_max = "21:00";
end;

/*24.07.2013 Gurin S. логгирование запуска*/
ExecmacroFile("lib_log.mac", "LogProcedure", "ExecKart2DocsComiss.mac");

var filen = "trnsord.lbr";
var pathfile = FindPath(filen,path);
if (not pathfile)
    msgbox("Не найдена LBR");
    exit();
end;

var dlg  = TRecHandler("cmsk2",pathfile,True);
const  KEY_ENTER = 13, KEY_F2 = 316, KEY_F3 = 317, KEY_F5 = 319, KEY_ALTF3 = 362, KEY_CTRLF3 = 352, KEY_SPACE = 32, EXITFIELD = 530, KEY_ESC = 27;

m[0] = "Весь банк";
m[1] = "Филиалы Москвы: (000,006,002,011,012)";
m[2] = "Иваново: 817-825";
m[3] = "Регионы: все кроме 000,006,002,011,012,817-825";


opr.oper = {oper};
opr.kindoperation = 24001;
opr.dockind = 201;

private Class SaveTmpClaim(_acc, _claimid)
   var m_acc     = _acc;
   var m_claimid = _claimid;
end;

macro is_enable_pipe(p_pipe)
    private  var stat,cmd;
    cmd=rsdcommand("begin ?:=is_enable_pipe(:p_pipe); end;");
    cmd.addParam("Stat",   RSDBP_OUT, V_STRING);
    cmd.addParam("p_pipe",   RSDBP_IN, p_pipe);
    cmd.execute;
    stat = cmd.Param("Stat").value;
    if (stat=="0")
        return true;
    else
        return false;
    end;
end;

macro EvProcComissK2 (dlg, cmd, id, key) 
    var mess = "~F2~ Продолжить ~F3~ Список ~Space~ Установить ВСЕ ~ESC~ Выход ", code;
   
    if(cmd == DLG_INIT)
        dlg.rec.d_date    = {curdate};
        dlg.rec.d_oper    = "Все";
        dlg.rec.d_Client  = "Все";
        dlg.rec.d_branch  = "Весь банк";
        ClearRecord(party);
        ClearRecord(oper);
        UpdateFields(dlg); 
    end;

    if ((cmd==DLG_KEY) and (KEY==KEY_F2))
        return CM_SAVE;
    end;

    if ((cmd==DLG_KEY) and (key == KEY_ENTER))
        SetFocus(dlg,id+1);
        return CM_IGNORE;
    end;
    if ((cmd==DLG_KEY) and (KEY==KEY_F3))
        if (id == 3)
            if (ListPT(party, 1, code, PTLIST_PSCLIENT, 0, PTCK_ALL))
                dlg.rec.d_client  = party.partyid;
                dlg.rec.d_client2  = party.shortname;
            end;
        elif (id == 1) 
            if (ListOper(oper, 1, 0))
                dlg.rec.d_oper  = oper.oper;
                dlg.rec.d_oper2  = oper.name;
            end;
        elif (id == 5)
            SelectMenu = Menu(M);
                if (SelectMenu == 0)
                    dlg.rec.d_branch = m[0];
                elif (SelectMenu == 1)
                    dlg.rec.d_branch = m[1];
                elif (SelectMenu == 2)
                    dlg.rec.d_branch = m[2];
                elif (SelectMenu == 3)
                    dlg.rec.d_branch = m[3];
                end;
        elif (id == 0) 
            dlg.rec.d_date = GetDateByCalendar(dlg.rec.d_date);
        end;
        UpdateFields(dlg); 
    end;
    if ((cmd==DLG_KEY) and (KEY==KEY_SPACE))
        if (id == 1)
            dlg.rec.d_oper    = "Все";
            dlg.rec.d_oper2    = "";
            ClearRecord(oper);
        elif (id == 3)  
            dlg.rec.d_Client  = "Все";
            dlg.rec.d_Client2  = "";
            ClearRecord(party);
        elif (id == 5)  
            dlg.rec.d_branch  = "Весь банк";
        end;
        UpdateFields(dlg); 
    end;
end;


private macro catch(x)
    var err_count = 0;
    var lasterror = "oшибка:"+x.module + "[" + x.line + "]:" + x.message;

    while( err_count < RSLDefEnv.ErrorCount )
        lasterror = lasterror + "|"+RSLDefEnv.error(err_count).descr;
        err_count = err_count + 1;
    end;

    if (RSLDefCon.IsinTrans)
        RSLDefCon.RollbackTrans;
    end;
    msgbox(lasterror);
end;

macro getSKSClause()        
    
    return " and 1 = case "+
                      "when ( instr(pa.t_usertypeaccount, 'D') <> 0 and instr(pa.t_usertypeaccount, 'H') <> 0)  then 1 "+
                      "when ( substr(pa.t_account, 11, 1) = '9' and instr(pa.t_usertypeaccount, 'H') <> 0 )     then 1 "+
                      "when not ( instr(pa.t_usertypeaccount, 'D') <> 0 or substr(pa.t_account, 11, 1) = '9' )  then 1 "+
                      "else 0 "+
                    "end "; 

end;

if (not ACS_CheckGroupOper(181,{oper},false))
   msgbox("Вы не включены в группу №181 \"Процедура массовой оплаты картотеки 2 по комиссиям\" ");
   return;
end;

if (not RunDialog(dlg, "EvProcComissK2")) /*название панели*/
    return; 
end;

//set_pipe_server("rsbank.service.k2_");
set_pipe_server(pipe_server_k2_comission);

macro CreateClaim(Acc, SumClaim, DescError)     
      var str, cmd, ReasonName;
      var DocNum = 99999, DocDate = {curdate};
      ReasonName = "Временное резервирование - процедура массовой оплаты картотеки 2 по комиссиям";      
      cmd = RsdCommand("{ ? = call rsi_rsb_acclaim.insertacclaim(?,?,?,?,?, ?,?,?,?,?, ?,?,?,?,?, ?,?,?,?,?, ?,?,?) } ");      
      cmd.AddParam("error",          RSDBP_OUT,  V_INTEGER);
      cmd.AddParam("claimid",        RSDBP_OUT,  V_INTEGER);
      cmd.AddParam("Chapter",        RSDBP_IN,   1);
      cmd.AddParam("Account",        RSDBP_IN,   Acc);
      cmd.AddParam("FIID",           RSDBP_IN,   Acc_GetFiidByAccount(acc));
      cmd.AddParam("ClaimKind",      RSDBP_IN,   3);
      cmd.AddParam("RestKind",       RSDBP_IN,   3);            
      cmd.AddParam("Initiator",      RSDBP_IN,   5);
      cmd.AddParam("DocNumber",      RSDBP_IN,   DocNum);
      cmd.AddParam("DocDate",        RSDBP_IN,   DocDate);
      cmd.AddParam("SysDate",        RSDBP_IN,   {curdate});
      
      cmd.AddParam("StartDate",      RSDBP_IN,   {curdate});
      cmd.AddParam("FinishDate",     RSDBP_IN,   date(0,0,0));
      cmd.AddParam("StartAmount ",   RSDBP_IN,   SumClaim); 
      cmd.AddParam("Priority",       RSDBP_IN,   0);
      cmd.AddParam("Comment",        RSDBP_IN,   substr(string(ReasonName),1,140));      
      cmd.AddParam("ContrnVersion",  RSDBP_IN,   0);
      cmd.AddParam("Oper",           RSDBP_IN,   {oper});
      cmd.AddParam("Incremental",    RSDBP_IN,   "X");
      cmd.Addparam("Auto",           RSDBP_IN,   "X");
      cmd.AddParam("Claim_Cancel",   RSDBP_IN,   0);
      
      cmd.AddParam("State",          RSDBP_IN,   1);
      cmd.AddParam("StateID",        RSDBP_OUT,  V_INTEGER);
      cmd.AddParam("FiscOrgCode",    RSDBP_IN,   strFor(1));            
      cmd.NullConversion = true;
      cmd.execute();      
      if (cmd.Param("error").value != 0) 
          SetParm(2, "При регистрации претензии по счету " + Acc + " произошла ошибка " + cmd.Param("error").value);  
          return 1;
      end;
      //тут будем запоминать claimid создавшейся претензии для дальнейшего удаления ее.
      TmpClaimForDel(TmpClaimForDel.size()) = SaveTmpClaim(Acc, cmd.Param("claimid").value);
      return 0;
onError(er)        
      SetParm(2, er.message);
      return 1;
end; 

macro DelTmpClaim (Acc, ClaimId)
    var sql;
    sql = " BEGIN "
          "    DELETE FROM   dacclaim_dbt "
          "          WHERE   t_account = :acc AND t_claimid = :id1; "
          "    DELETE FROM   dacclaimstate_dbt "
          "          WHERE   t_claimid = :id2; "
          " END; ";
    execSQL(sql, makeArray (SqlParam ("acc", acc),SqlParam ("id1", ClaimId),SqlParam ("id2", ClaimId)))
onError(er)        
    msgbox("Ошибка удаления претензии со счета ", Acc );
end;

Private Macro StartExecute()
    var cond;
    initprogress(-1,"обработка платежей комиссий в картотеке 2");

    //На случай, если отались временные претензии
    rs = RsdRecordset(RsdCommand(" SELECT   t_account acc, t_claimid clid"
                                 "   FROM   dacclaim_dbt "
                                 "  WHERE   t_docnumber = '99999' AND t_initiator = 5 "
                                 "         AND t_comment = "
                                 "               'Временное резервирование - процедура массовой оплаты картотеки 2 по комиссиям' "));
    while (rs and rs.movenext())
        DelTmpClaim(rs.value("acc"), rs.value("clid"));
        //КорректировкаСуммПр(rs.value("acc"));
    end;

    cmd = RSDCommand("truncate table doprtemp_tmp");
    cmd.execute;

    //В программном канале могут находится необработанные сообщения. Чистим очередь
    //cmd = RSDCommand("begin dbms_pipe.purge('rsbank.service.k2_'); end;");
    //cmd.Execute;

    rsldefcon.BeginTrans;

    //Gurin S. R-321405-1 28.01.2014 адаптация 2031
    // KS 26.04.2012 Адаптация под банковский ордер
    sql = "insert into doprtemp_tmp (t_id_operation, " +
    "                                t_sort, " +
    "                                t_dockind, " +
    "                                t_documentid, " +
    "                                t_orderid, " +
    "                                t_kind_operation, " +
    "                                t_start_date, " +
    "                                t_isnew, " +
    "                                t_id_step) " +
    "        select   op.t_id_operation, " +
    "                 rownum, " +
    "                 pm.t_dockind, " +
    "                 lpad (to_char (pm.t_paymentid), 34, '0'), " +
    "                 pm.t_paymentid, " +
    "                 decode ( " +
    "                         op.t_kind_operation, " +
    "                         0, " +
    "                         (select   min (t_kind_operation) " +
    "                            from   doprkoper_dbt " +
    "                           where   t_dockind = 29 and t_notinuse = chr (0) and t_kind_operation > 0), " +
    "                          op.t_kind_operation), " +
    "                 rsbsessiondata.curdate, " +
    "                 chr (0), " +
    "                (SELECT   MIN(t_id_step)  " +
    "                   FROM   doprstep_dbt  " +
    "                  WHERE   t_id_operation = op.t_id_operation AND t_isexecute = 'R') "
    "         FROM dpmpaym_dbt pm, doproper_dbt op, dpmrmprop_dbt pr, dpmaddpi_dbt dpi, daccount_dbt pa "
    "        WHERE       pr.t_paymentid = pm.t_paymentid "
    "                AND pm.t_dockind IN (201, 286) "
    "               AND op.t_documentid = LPAD (TO_CHAR (pm.t_paymentid), 34, '0') "
    "               AND op.t_dockind = pm.t_dockind "
    "               AND pm.t_paymentid = DPI.T_PAYMENTID(+) "
    "               AND (pm.t_receiveraccount LIKE '47423____3%' "
    "                   OR (pm.t_receiveraccount = CHR (1) "
    "                      AND dpi.t_account LIKE '47423____3%')) "
    "               AND pm.t_paymstatus = 2000 "
    "               AND pa.t_account = pm.t_payeraccount "
    "               AND (  usr_get_rest_current (pa.t_ACCOUNT, '"+string(dlg.rec.d_date)+"', pr.t_priority) "
    "                      - CASE "
    "                          WHEN (INSTR (pa.t_type_account, 'О') > 0) "
    "                          THEN "
    "                             rsi_rsb_account.GetAccLimit(pa.t_account, pa.t_chapter,pa.t_code_currency,'"+string(dlg.rec.d_date)+"') "
    "                          ELSE 0 "
    "                        END "
    "                      - NVL ( (SELECT   ss.t_rest "
    "                                 FROM   USR_SSUD_REST_DBT ss "
    "                                WHERE       ss.t_account = pa.t_account "
    "                                        AND ss.t_date_value = '"+string(dlg.rec.d_date)+"' "
    "                                        AND SS.T_CODE_CURRENCY = PA.T_CODE_CURRENCY "
    "                                        AND ss.T_NUM = (SELECT   MAX (t_num) "
    "                                                          FROM   USR_SSUD_REST_DBT "
    "                                                         WHERE       t_account = pa.t_account "
    "                                                                 AND t_date_value = '"+string(dlg.rec.d_date)+"') ), 0)) > 0 ";
    if(oper.oper != 0 )
        sql = sql + "  AND pa.t_oper = "+string(oper.oper);
    end;
    if(party.partyid != 0 )
        sql = sql + "  AND pa.t_client = "+string(party.partyid);
    end;
    if( SelectMenu == 1 )
        sql = sql + "  AND pa.t_branch in (1,8,4,55,168)";
    elif( SelectMenu == 2 )
        sql = sql + "  AND pa.t_branch in (139,140,141,142,143,144,153,156,170)";
    elif( SelectMenu == 3 )
        sql = sql + "  AND pa.t_branch NOT IN (1,8,4,55,168,139,140,141,142,143,144,153,156,170)";
    end;

    /*VDN 27.07.2015 C-41253*/
    sql = sql + getSKSClause();

    sql = sql + " ORDER BY pr.t_priority, pm.t_valuedate ";
    cmd = RSDCommand(sql);
    cmd.execute;


    cmd=RSDCommand("begin ? := wld_common.definemessagereleaseforpmmass (false); end;");
    cmd.addParam("stat", RSDBP_RETVAL, V_INTEGER);
    cmd.Execute();

    rsldefcon.CommitTrans;

    rs = RsdRecordset(RsdCommand(" SELECT acc, sumarest from "
                                 " (SELECT   dpm.t_payeraccount acc, "
                                 "         (CASE "
                                 "             WHEN (INSTR (acc.t_type_account, 'О') > 0) "
                                 "             THEN rsi_rsb_account.GetAccLimit (acc.t_account, acc.t_chapter, acc.t_code_currency, '"+string(dlg.rec.d_date)+"') "
                                 "             ELSE 0 "
                                 "          END "
                                 "          + NVL (( SELECT   t_rest "
                                 "                     FROM   USR_SSUD_REST_DBT ss "
                                 "                    WHERE   ss.t_account = acc.t_account "
                                 "                            AND ss.t_date_value = '"+string(dlg.rec.d_date)+"' "
                                 "                            AND ss.t_num = (SELECT  MAX (t_num) "
                                 "                                              FROM  USR_SSUD_REST_DBT "
                                 "                                             WHERE  t_account = acc.t_account)), 0 )) "
                                 "            sumarest "
                                 "  FROM   doprtemp_tmp tmp, dpmpaym_dbt dpm, daccount_dbt acc "
                                 " WHERE   dpm.t_paymentid = tmp.t_orderid "
                                 "         AND dpm.t_payeraccount = acc.t_account "
                                 "         AND (INSTR (acc.t_type_account, 'О') > 0 "
                                 "              OR EXISTS (SELECT   1 "
                                 "                           FROM   USR_SSUD_REST_DBT "
                                 "                          WHERE       t_account = acc.t_account "
                                 "                                  AND t_date_value = '"+string(dlg.rec.d_date)+"'))) "
                                 " GROUP BY acc, sumarest"));
    while (rs and rs.movenext())
        if (CreateClaim(rs.value("acc"), rs.value("sumarest"), DescError) !=0)
            RunError(DescError);
        end;
        //КорректировкаСуммПр(rs.value("acc"));
    end;

    //выполнение предобработки
    cmd=RSDCommand("begin usr_operations.exec_steps_for_temp; end;");
    cmd.Execute();

    i = 0;
    while (i < TmpClaimForDel.size ())
        DelTmpClaim(TmpClaimForDel[i].m_acc, TmpClaimForDel[i].m_claimid);
        //КорректировкаСуммПр(TmpClaimForDel[i].m_acc);
        i = i + 1;
    end;

    remprogress;
    //печать отчета
    //PrintReport("списания картотеки 2 за РКО", dlg.rec.d_date);

    //SaveEndTime (10); //Закончили

    onerror(er)
    catch(er); 

end;

while (1)
    TmpClaimForDel = TArray();
    mes = "F2 - Запуск, Ecs - Выход, Ожидание:";
    time1 = time();
    flag = true;
    while (flag)
        time2 = time();
        message(string(mes,(time(0,intM,0,0) - (time2 - time1))));
        //Gurin S. C-31277-7 16.07.2014
        if (time2 >= time(time_max))
            exit();
        elif  ( (time2 - time1) > time(0,intM,0,0))
            //Gurin S. Из-за очереди в пайпе - комментирую
            //if (is_enable_pipe("rsbank.service.k2_"))
                StartExecute();
                flag = false;
            //else
            //    msgbox("Внимание! Подозрение на зависание обработчиков. | Документы проведены не будут. | Обратитесь в HelpDesk");
            //    exit();
            //end;
        elif (TestEvent == KEY_F2)
            //if (is_enable_pipe("rsbank.service.k2_"))
                StartExecute();
                flag = false;
            //else
            //    msgbox("Внимание! Подозрение на зависание обработчиков. | Документы проведены не будут. | Обратитесь в HelpDesk");
            //    exit();
            //end;
        elif (TestEvent == KEY_ESC)
            exit();
        end;
    end;
end;


