/* 2010-12-29 zip_z. I-092988
 * Печать реестра пополнений карт (по аналогии с V5)
 *
 * Доработка C-199 DAI
 */

import oralib, likepy, RsbDataSet;
import globals;
import BankInter;
import treport;

const VK_SPACE = 32,  VK_ENTER = 13,  VK_ESC   = 27,  VK_F2    = 316,  VK_F3    = 317,  VK_F8    = 322,  VK_F9    = 323;

var rsrec:object,
    rselect = "",
    col = TArray,
    cm;

macro AddCol (ar,ind, fld, head, width, rdonly)
  ar.value (ind * 6)     = fld;
  ar.value (ind * 6 + 1) = head;
  ar.value (ind * 6 + 2) = width;
  ar.value (ind * 6 + 3 ) = 2;   // fldType
  ar.value (ind * 6 + 4 ) = 0;  // decPoint
  ar.value (ind * 6 + 5 ) = 0;   // reserv
end;

macro iif (condition, iftrue, iffalse)
    if (condition)
        return iftrue;
    end;
    
    return iffalse;
end;

macro ExistPaymentInReg(id,reg)
var sql = "select * from usr_RegAddCard where PaymentID = " + id;
   if (reg != Null)
      sql = sql + " and RegID = " + reg;
   end;
var rs = TRsbDataSet(sql);
   if (rs.movenext)
      return true;
   else
      return false;
   end;
end;

macro SavePaymInReg(id);
var sql = "insert into usr_RegAddCard (RegID, PaymentID) values (-1, " + id + ") ";
   execSQL(sql);
end;

macro SaveNewReg(DateOut, _begDate, _endDate);
var sql = "insert into usr_ListReg (DateOut, DateBegin, DateEnd) values ( to_date('" + DateOut + "','dd.mm.yyyy HH24:MI:SS'), to_date('" + _begDate + "','dd.mm.yyyy'), to_date('" + _endDate + "','dd.mm.yyyy')) ";
   execSQL(sql);
end;

macro UpdateReg(DateOut);
var sql = "select * from usr_ListReg where DateOut = to_date('" + DateOut + "','dd.mm.yyyy HH24:MI:SS')";
var rs = TRsbDataSet(sql);
   if (rs.movenext)
      var reg = rs.RegID;
      sql = "update usr_RegAddCard set RegID = " + reg + " where RegID = -1";
      execSQL(sql);
   end;
end;

var table = CTableReport();

macro CreateTable();
    table.addColumn("Дата",              10, AL_LEFT);
    table.addColumn("Плательщик",        30, AL_LEFT);
    table.addColumn("Получатель",        30, AL_LEFT);
    table.addColumn("Счет |плательщика", 20, AL_LEFT);
    table.addColumn("Счет |получателя",  20, AL_LEFT);
    table.addColumn("Сумма",             12, AL_RIGHT);
    table.addColumn("Вал",                3, AL_LEFT);
    table.addColumn("Основание",         32, AL_LEFT);
end;

var report_has_data = false;

macro GetReport ( _begDate, _endDate, _cash, _cashLess, reg_number)
    report_has_data = false;
    var DateOut;
    if (reg_number != "0")
       var rs = TRsbDataSet("select to_char(dateout, 'dd.mm.yyyy hh24:mi:ss') dateout, "+
                            "       to_char(datebegin, 'dd.mm.yyyy') datebegin, "+
                            "       to_char(dateend, 'dd.mm.yyyy') dateend "+
                            "  from usr_ListReg where RegID =" + reg_number);
       if (rs.movenext)
          _begDate = date(rs.DateBegin);
          _endDate = date(rs.DateEnd);
          DateOut = rs.DateOut;
       end;
    end;

/*SDA - переписал как надо*/
    var sql = "select DISTINCT * "
//     + "\n" + "  from (select pm.t_paymentid, to_char (pm.t_valuedate, 'dd.mm.yyyy') m_date, rm.t_payername, rm.t_receivername, pm.t_payeraccount, "
     + "\n" + "  from (select pm.t_paymentid, to_char (ad.t_date_carry, 'dd.mm.yyyy') m_date, rm.t_payername, rm.t_receivername, pm.t_payeraccount, "
//     + "\n" + "               ac_pay.t_type_account m_type_payeraccount, ac_recv.t_type_account m_type_receiveraccount, "
     + "\n" + "               pm.t_receiveraccount, pm.t_amount, fi.t_ccy, rm.t_ground, "
     + "\n" + "               case "
     + "\n" + "                   when (instr (ac_pay.t_type_account, 'А') != 0 or instr (ac_recv.t_type_account, 'А') != 0) "
     + "\n" + "                       then chr (88) "
     + "\n" + "                   else chr (0) "
     + "\n" + "               end m_cash "
     + "\n" + "          from dpmpaym_dbt pm, dfininstr_dbt fi, dparty_dbt pt, dpmrmprop_dbt rm, daccounts_dbt ac_pay, daccounts_dbt ac_recv, "
     + "\n" + "                       DPMDOCS_DBT doc, darhdoc_dbt ad "  
     + "\n" + "         where ac_pay.t_account = ad.T_ACCOUNT_PAYER "
     + "\n" + "           and ac_recv.t_account = ad.T_ACCOUNT_RECEIVER "
     + "\n" + "           and ac_pay.t_chapter = 1 "
     + "\n" + "           and ac_recv.t_chapter = 1 "
     + "\n" + "           and pm.t_fiid = fi.t_fiid "
     + "\n" + "           and pm.t_receiver = pt.t_partyid "
     + "\n" + "           and pm.t_paymstatus = 32000 "
     + "\n" + "           and rm.t_paymentid = pm.t_paymentid "
     + "\n" + "           and doc.T_PAYMENTID = pm.t_paymentid "
     + "\n" + "           and ad.T_IAPPLICATIONKIND = doc.T_APPLICATIONKIND "
     + "\n" + "           and ad.T_APPLICATIONKEY = doc.T_APPLICATIONKEY  "
     + "\n" + "           and (  (ad.T_ACCOUNT_RECEIVER in "
     + "\n" + "                       ('30232810301081111111', "
     + "\n" + "                        '30232978201081111111', "
     + "\n" + "                        '30232840601081111111', "
     + "\n" + "                        '40817810701088880007', "
     + "\n" + "                        '40817840001088880007' "
     + "\n" + "                       ) "
     + "\n" + "                   and substr (ad.T_ACCOUNT_PAYER, 1, 5) != '40911' "
     + "\n" + "                   and substr (ad.T_ACCOUNT_PAYER, 1, 5) != '42301' "
     + "\n" + "                   and substr (ad.T_ACCOUNT_PAYER, 1, 5) != '45506' "
     + "\n" + "                   and substr (ad.T_ACCOUNT_PAYER, 1, 5) != '45509' "
     + "\n" + "                   and substr (ad.T_ACCOUNT_PAYER, 1, 5) != '47423' "
     + "\n" + "                   and substr (ad.T_ACCOUNT_PAYER, 1, 5) != '20202' "
     + "\n" + "                   and substr (ad.T_ACCOUNT_PAYER, 1, 5) != '20208' "
//     + "\n" + "                   and substr (ad.T_ACCOUNT_PAYER, 1, 8) != '42301810' "
//     + "\n" + "                   and substr (ad.T_ACCOUNT_PAYER, 1, 8) != '20202810' "
     + "\n" + "                  ) "
     + "\n" + "                  or "
     + "\n" + "                  ( "
     + "\n" + "                   ad.T_ACCOUNT_PAYER = '30102810500000000781' "
     + "\n" + "                   and (substr (ad.T_ACCOUNT_RECEIVER, 1, 5) = '40817' or "
     + "\n" + "                        substr (ad.T_ACCOUNT_RECEIVER, 1, 5) = '40820' )"
     + "\n" + "                  ) "
     + "\n" + "               ) "
//     + "\n" + "           and pm.t_valuedate between :vdate_begin and :vdate_end)";
     + "\n" + "           and ad.t_date_carry between :vdate_begin and :vdate_end)";
     sql = sql + "         where 1 = 1 ";
  
    if (_cash)
        sql = sql + "or m_cash = chr (88)";
    end;
    
    if (_cashless)
        sql = sql + "or m_cash != chr (88)";
    end;

    sql =  ExecSQLSelect (sql, makeArray (SQLParam ("vdate_begin", _begDate),
                                          SQLParam ("vdate_end",   _endDate)));

    if (reg_number == "0")
       DateOut = string(Date()) + " " + string(Time());
    end;

    while (sql.moveNext)
       if (reg_number == "0") //Создаем новый реестр
          if ( not ExistPaymentInReg(sql.value ("t_paymentid"),Null))
             if (not  report_has_data)
                CreateTable;
                println ("(3R(s0p16.67h8.5v0s0b0T&l1X&l8D&l1O&a7L");
                println ( "Реестр выгружен " + DateOut + "    За период с " + _begDate + "  по " + _endDate);
                table.printHead();
                report_has_data = true;
             end;
             table.printStringTransferByWord (sql.value ("m_date"),
                                              sql.value ("t_payername"),
                                              sql.value ("t_receivername"),
                                              sql.value ("t_payeraccount"),
                                              sql.value ("t_receiveraccount"),
                                              sql.value ("t_amount"),
                                              sql.value ("t_ccy"),
                                              sql.value ("t_ground"));
             SavePaymInReg(sql.value ("t_paymentid"));
          end;
       else //Восстанавливаем записи выбранного реестра
          if ( ExistPaymentInReg(sql.value ("t_paymentid"),reg_number))
             if (not  report_has_data)
                CreateTable;
                println ("(3R(s0p16.67h8.5v0s0b0T&l1X&l8D&l1O&a7L");
                println ( "Реестр выгружен " + DateOut + "    За период с " + _begDate + "  по " + _endDate);
                table.printHead();
                report_has_data = true;
             end;
             table.printStringTransferByWord (sql.value ("m_date"),
                                              sql.value ("t_payername"),
                                              sql.value ("t_receivername"),
                                              sql.value ("t_payeraccount"),
                                              sql.value ("t_receiveraccount"),
                                              sql.value ("t_amount"),
                                              sql.value ("t_ccy"),
                                              sql.value ("t_ground"));
          end;
       end;
    end;
    if ((reg_number == "0") and report_has_data)
       SaveNewReg(DateOut,_begDate,_endDate);
       UpdateReg(DateOut);
    end;
 
    if (not report_has_data)
        msgbox ("Нет данных для отчета:" +
                "|За период с " + string (_begDate) + " по " + string (_endDate) +
                "|отсутствуют " + iif ((_cash and _cashless), 
                                        "платежи", 
                                        iif (_cash, 
                                            "наличные платежи", 
                                            "безналичные платежи"))+
                "|не включенные в другие реестры."
                );
        //exit(1);
    else
        table.printBottom();
    end;
    
end;


macro EvProc (rsrec, cmd, id, key)
   if(( cmd == DLG_KEY ) and ( key == 13 ))
      return CM_SELECT;
   end;
end;



/*                        zResLib::r_cards | Описание полей
 * ╒═══ Операции по пластиковым картам ════╕ 
 * │ Выгрузка реестра                      │ 
 * │                                       │ 
 * │ Дата начала:     m_date_begin         │ 
 * │ Дата оконч.:     m_date_end           │ 
 * │                                       │ 
 * │ Наличные платежи:  m_cash_payments    │ 
 * │ Безнал. платежи    m_cashless_payments│ 
 * │                                       │ 
 * │ Номер реестра  m_reg_number           │ 
 * │                                       │ 
 * ╘═══════════════════════════════════════╛ 
 */
macro PanelEventHandler (dlg, cmd, id, key)
    if   ( cmd == DLG_INIT )
        dlg.rec.m_date_begin = 
        dlg.rec.m_date_end   = {curdate};
        dlg.rec.m_cashless_payments = 
        dlg.rec.m_cash_payments     = "X";
        dlg.rec.m_reg_number = "0";
        UpdateFields (dlg);
    elif (cmd==DLG_SETFOCUS)
        /*Установка подсказок в строке состояния*/
        if (fldname(dlg, id) == "m_reg_number")
           Message("~F3~ Выбор реестра из списка ~F2~ Выполнить ~ESC~ Выход ");
        else
           Message("~F2~ Выполнить ~ESC~ Выход ");
        end;
    elif ( cmd == DLG_KEY ) 
    
        if (( key == VK_SPACE ) and (trim(fldname(dlg, id)) == "m_cashless_payments"))
            dlg.rec.m_cashless_payments = strfor ( 88 - codefor ( dlg.rec.m_cashless_payments )); 
            return CM_DEFAULT;
        end;
        
        if (( key == VK_SPACE ) and (trim(fldname(dlg, id)) == "m_cash_payments"))
            dlg.rec.m_cash_payments = strfor ( 88 - codefor ( dlg.rec.m_cash_payments )); 
            return CM_DEFAULT;
        end;

        if ( key == VK_F2 )
          if ((dlg.rec.m_cashless_payments == "") and  (dlg.rec.m_cash_payments == ""))
              msgbox ("Заданы неверные параметры выпуска отчета:"
                      "|Должен быть выбран хотя бы один из видов платежей (наличные или безналичные)");
              return CM_CANCEL;
          end;
          GetReport (dlg.rec.m_date_begin,
                     dlg.rec.m_date_end,
                     iif ((dlg.rec.m_cash_payments == "X"), true, false),
                     iif ((dlg.rec.m_cashless_payments == "X"), true, false),
                     dlg.rec.m_reg_number);
          return CM_SAVE;
        end;

        if ( (key == VK_F3) and (trim(fldname(dlg, id)) == "m_reg_number"))
           //debugbreak();
           rselect = "SELECT to_char(lr.regid) regid, to_char(lr.dateout,'dd.mm.yyyy hh24:mi:ss') dateout " +
                     "  FROM usr_ListReg lr order by lr.dateout desc";
           cm = RSDCommand(rselect);
           rsrec = RSDRecordset( cm, RSDVAL_CLIENT, RSDVAL_STATIC );
           if (RunScroll(rsrec, 2, col, "Реестры", @EvProc, "Выгруженные реестры", "~Enter~ выбор реестра ~Esc~ выход", true))
              dlg.rec.m_reg_number = rsrec.value (0);
              //dlg.rec.NameOper = rsrec.value (1);
              UpdateFields(dlg);
              //OperSelect = dlg.rec.oper;
           end;
        end;
    
    elif ( cmd == DLG_REMFOCUS ) 
        if (dlg.rec.m_date_begin > dlg.rec.m_date_end)
            msgbox ("Заданы неверные параметры выпуска отчета:"
                    "|Дата окончания не может быть больше даты начала");
            return CM_CANCEL;
        end;
    end;

end;


/* -------------- entry point | ------------------------------------------------------------------------------- */
const LBR_REGISTRY_PATH = "BANK_INI/ОБЩИЕ ПАРАМЕТРЫ/ДИРЕКТОРИИ/LBRDIR";
const LBR_NAME_FILE     = "zResLib.lbr";
const LBR_NAME_PANEL    = "r_cards";

var lbr_directory;
var errCode;

AddCol (col, 0, "regid", "Номер", 10, true);
AddCol (col, 1, "dateout", "Время выгрузки", 20, true);
        
if ( GetRegistryValue ( LBR_REGISTRY_PATH, V_STRING, lbr_directory, errCode ) and not errCode )
    var lbr_fullpath = FindPath ( LBR_NAME_FILE, lbr_directory );
    var dlg          = TRecHandler ( LBR_NAME_PANEL, lbr_fullpath, TRUE );
    RunDialog (dlg, "PanelEventHandler");
    if (not report_has_data)
       exit (1);
    end;
else
    msgbox ("Не найдена библиотека ресурсов " + LBR_NAME_PANEL);
    exit (1);
end;



