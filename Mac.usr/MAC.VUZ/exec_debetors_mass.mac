//--------------------------------------------------------------------------
// @filename: exec_debetors_mass.mac
// @desc    : Процедура массового списания дебиторской задолженности за РКО
// @author  : 13.07.2013 R-217605-2 Гурин С.
// @changes : none
//--------------------------------------------------------------------------

import RsbFormsInter, PaymInter, RSD, globals, OprInter, oralib, rsexts, treport, LikePy, BankInter;
import KeyCodes, GENNUMBER, "lib_compare.mac", "lib_fg.mac", "lib_account.mac";

var ground, client;
var panel, tabbed;

var rec_success: TArray = TArray();
var rec_err:     TArray = TArray();

var rec_success_acc: TArray = TArray();
var rec_err_acc:     TArray = TArray();

private class ForProtocol(_PaymentID, _Client, _NumDoc, _Amount, _Description, _ReceiverAcc, _Chapter)
    var m_PaymentID    = _PaymentID;
    var m_Client       = _Client;
    var m_NumDoc       = _NumDoc;
    var m_Amount       = _Amount;
    var m_Description  = _Description;
    var m_ReceiverAcc  = _ReceiverAcc;
    var m_Chapter      = _Chapter;
end;

private class ForProtocolAcc(_Account, _Description)
    var m_Account    = _Account;
    var m_Description  = _Description;
end;

private class StartProcedure ()
    
    macro Get47423(p_code)
        var sql = "SELECT   t_account acc "
                  "  FROM   daccount_dbt "
                  " WHERE   T_ACCOUNT LIKE '47423810_300000' || LPAD (TO_NUMBER (?), 5, '0') ";
        sql = execSQLselect(sql, makeArray (SqlParam ("", p_code)));
        if (sql.moveNext())
            return sql.value("acc");
        end;
        return "";
    end;

    macro GetRest47423(p_acc)
        var sql = "SELECT   RSI_RSB_Account.RestAll (?, USR_Common.Get_Chapter (?), USR_Common.Get_FIID (?),?) rest "
                  "FROM   DUAL ";
        sql = execSQLselect(sql, makeArray (SqlParam ("", p_acc),SqlParam ("", p_acc),SqlParam ("", p_acc), SqlParam ("", {CurDate})));
        if (sql.moveNext())
            return abs(sql.value("rest"));
        end;
    end;
        
    macro CreatePaymentBalance(p_ground, p_client)
        var p_payer_account, p_receiver_account;
        p_payer_account    = "47425810402000300000";
        p_receiver_account = Get47423(p_client);

        var Memorial                = RsbMemorialOrder ( );
        var Payment                 = Memorial.Payment ( );

        Memorial.State          = 0;
        Memorial.Oper           = {oper};
        Memorial.Chapter        = 1;
        Memorial.Code_Currency  = 0;
        Memorial.Kind_Oper      = "6";
        Memorial.Origin         = 1;
        Memorial.LaunchOper     = false;

        Payment.DocKind         = 70;
        Payment.Purpose         = PM_PURP_MEMORDER;
        Payment.ShifrOper       = "09";

        Payment.BaseFIID            = 0;
        Payment.Number              = GenNumberDocument();
        Payment.Ground              = p_ground;
        Payment.PayerAmount         = 
        Payment.ReceiverAmount      = 
        Payment.BaseAmount          = GetRest47423(p_receiver_account);                                           
        Payment.ValueDate           = 
        Payment.Date                = 
        Payment.ClientDate          = {CurDate};
        Payment.PayerBankEnterDate  = {CurDate};

        Payment.IsPlanPaym          = "X";
        Payment.PaymentKind         = "Н";
        Payment.Priority            = 6;
        Payment.NumberPack          = 1;

        Payment.SetPayerPI ( PAYMENTS_GROUP_INTERNAL,          
                            {OurBank},                        
                            3,                                
                            {MFO_BANK},                       
                            {NAME_BANK},                      
                            {CORAC_BANK},                     
                            0,                                
                            1,                                
                            p_payer_account);                 

        Payment.SetReceiverPI ( PAYMENTS_GROUP_INTERNAL,       
                               {OurBank},                     
                               3,                             
                               {MFO_BANK},                    
                               {NAME_BANK},                   
                               {CORAC_BANK},                  
                               0,                             
                               1,                             
                               p_receiver_account);           
        
        if (p_receiver_account != "")
            if (Payment.BaseAmount > 0) 
                Memorial.Update();
                rec_success(rec_success.size()) = ForProtocol (Memorial.DocumentID, p_client, Payment.Number, Payment.OrderAmount, "", p_receiver_account, "Баланс");
            else
                rec_err(rec_err.size()) = ForProtocol ("", p_client, "", "", "Остаток на счете "+p_receiver_account+ " равен "+Payment.BaseAmount, "", "Баланс");
            end;
        else
            rec_err(rec_err.size()) = ForProtocol ("", p_client, "", "", "Не найден счет 47423*");
        end;
    end;

    macro CreatePaymentOffBalance(p_ground, p_client)
        var p_payer_account, p_receiver_account, _p_receiver_account;
        p_payer_account    = "91803810630000070000";
        p_receiver_account = "99999810400000000022"; //Get47423(p_client);
        _p_receiver_account = Get47423(p_client);

        var Memorial                = RsbMemorialOrder ( );
        var Payment                 = Memorial.Payment ( );

        Memorial.State          = 0;
        Memorial.Oper           = {oper};
        Memorial.Chapter        = 3;
        Memorial.Code_Currency  = 0;
        Memorial.Kind_Oper      = "6";
        Memorial.Origin         = 1;
        Memorial.LaunchOper     = false;

        Payment.DocKind         = 70;
        Payment.Purpose         = PM_PURP_MEMORDER;
        Payment.ShifrOper       = "09";

        Payment.BaseFIID            = 0;
        Payment.Number              = GenNumberDocument();
        Payment.Ground              = p_ground + " " + Acc_GetClientName(_p_receiver_account);
        Payment.PayerAmount         = 
        Payment.ReceiverAmount      = 
        Payment.BaseAmount          = GetRest47423(_p_receiver_account);                                           
        Payment.ValueDate           = 
        Payment.Date                = 
        Payment.ClientDate          = {CurDate};
        Payment.PayerBankEnterDate  = {CurDate};

        Payment.IsPlanPaym          = "X";
        Payment.PaymentKind         = "Н";
        Payment.Priority            = 6;
        Payment.NumberPack          = 1;

        Payment.SetPayerPI ( PAYMENTS_GROUP_INTERNAL,          
                            {OurBank},                        
                            3,                                
                            {MFO_BANK},                       
                            {NAME_BANK},                      
                            {CORAC_BANK},                     
                            0,                                
                            3,                                
                            p_payer_account);                 

        Payment.SetReceiverPI ( PAYMENTS_GROUP_INTERNAL,       
                               {OurBank},                     
                               3,                             
                               {MFO_BANK},                    
                               {NAME_BANK},                   
                               {CORAC_BANK},                  
                               0,                             
                               3,                             
                               p_receiver_account);           
        
        if (_p_receiver_account != "")
            if (Payment.BaseAmount > 0) 
                Memorial.Update();
                rec_success(rec_success.size()) = ForProtocol (Memorial.DocumentID, p_client, Payment.Number, Payment.OrderAmount, "", "", "Внебаланс");
            else
                rec_err(rec_err.size()) = ForProtocol ("", p_client, "", "", "Остаток на счете "+_p_receiver_account+ " равен "+Payment.BaseAmount, "", "Внебаланс");
            end;
        end;
    end;

    macro ExecuteOperation()
        var i = 0;
        InitProgress( rec_success.size (), "", "Ждите... Выполняется проведение документов.." );
        while (i < rec_success.size ())
            PM_ExecuteOperation(rec_success[i].m_PaymentID, DLDOC_MEMORIALORDER);
            i = i + 1;
            UseProgress(i);
        end;
        RemProgress();
    end;

    macro SetArest47423()
        var i = 0;
        while (i < rec_success.size ())
            var sql = "UPDATE   daccount_dbt "
                      "   SET   T_TYPE_ACCOUNT = CONCAT (T_TYPE_ACCOUNT, 'Т') "
                      " WHERE   t_account = :acc "
                      "         AND INSTR (T_TYPE_ACCOUNT, 'Т') = 0";
            //sql = execSQLselect(sql, makeArray (SQLParam ("acc" ,string(trim(rec_success[i].m_ReceiverAcc)))));
            sql = RsdCommand(sql);
            sql.AddParam("acc", RSDBP_IN, string(trim(rec_success[i].m_ReceiverAcc)));
            sql.execute();
            i = i + 1;
        end;
    end;

    macro CloseAccount()
        var i = 0,  errm;
        debugbreak;
        //InitProgress( rec_success.size (), "", "Ждите... Выполняется закрытие счетов 47423*" );
        while (i < rec_success.size ())
            if ((rec_success[i].m_ReceiverAcc) == "") 
                i = i + 1;
                continue;
            else
                if(CB_CloseAccount (1, Acc_GetFiidByAccount (rec_success[i].m_ReceiverAcc), rec_success[i].m_ReceiverAcc, {Curdate}, errm)==0) 
                    rec_success_acc(rec_success_acc.size()) = ForProtocolAcc (rec_success[i].m_ReceiverAcc, "Счет закрыт");
                else
                    rec_err_acc(rec_err_acc.size()) = ForProtocolAcc (rec_err_acc[i].m_ReceiverAcc, errm);
                end;
            end;
            i = i + 1;
        //    UseProgress(i);
        end;
        //RemProgress();
    end;

    macro Protocol()
        var reportName = getTxtFileName ("exec_debetors_mass");
        var table_success = CTableReport();
        var table_err     = CTableReport();
        var table_success_acc = CTableReport();
        var table_err_acc     = CTableReport();
        var i;

        setoutput(reportName,false);
        println (string ("Отчет о выполнении процедуры массового списания дебиторской задолженности за РКО"):c:100);
        println (string ("                           Дата - ", date, ", время - ", time):c:70);

        if (rec_success.size ())
            table_success.addColumn ("ИД платежа",  25, AL_LEFT);
            table_success.addColumn ("Клиент",      22, AL_LEFT);
            table_success.addColumn ("№ документа", 15, AL_LEFT);
            table_success.addColumn ("Сумма",       20, AL_LEFT);
            table_success.addColumn ("Глава",       20, AL_LEFT);
            table_success.printHead (string ("Успешно созданы и проведены платежи:":c:40));

            i = 0;
            while (i < rec_success.size ())
                table_success.printStringTransferByWord(rec_success[i].m_PaymentID, rec_success[i].m_Client, rec_success[i].m_NumDoc, rec_success[i].m_Amount, rec_success[i].m_Chapter);
                i = i + 1;
            end;

            table_success.printSeparator ();
            table_success.printStringTransferByWord ("Всего документов:", i);
            table_success.printBottom ();
        end;
 
        if (rec_err.size ())
            table_err.addColumn ("Клиент",      22, AL_LEFT);
            table_err.addColumn ("Описание",    50, AL_LEFT);
            table_err.printHead (string ("Ошибки при создании платежей:":c:40));

            i = 0;
            while (i < rec_err.size ())
                table_err.printStringTransferByWord(rec_err[i].m_Client, rec_err[i].m_Description, rec_err[i].m_Chapter);
                i = i + 1;
            end;

            table_err.printSeparator ();
            table_err.printStringTransferByWord ("Всего документов:", i);
            table_err.printBottom ();
        end;

        if (rec_success_acc.size ())
            table_success_acc.addColumn ("Номер счета", 25, AL_LEFT);
            table_success_acc.addColumn ("Описание",    50, AL_LEFT);
            table_success_acc.printHead (string ("Успешно закрытые счета:":c:40));

            i = 0;
            while (i < rec_success_acc.size ())
                table_success_acc.printStringTransferByWord(rec_success_acc[i].m_Account, rec_success_acc[i].m_Description);
                i = i + 1;
            end;

            table_success_acc.printSeparator ();
            table_success_acc.printStringTransferByWord ("Всего документов:", i);
            table_success_acc.printBottom ();
        end;

        if (rec_err_acc.size ())
            table_err_acc.addColumn ("Номер счета", 25, AL_LEFT);
            table_err_acc.addColumn ("Описание",    50, AL_LEFT);
            table_err_acc.printHead (string ("Ошибки при закрытии счета:":c:40));

            i = 0;
            while (i < rec_err_acc.size ())
                table_err_acc.printStringTransferByWord(rec_err_acc[i].m_Account, rec_err_acc[i].m_Description);
                i = i + 1;
            end;

            table_err_acc.printSeparator ();
            table_err_acc.printStringTransferByWord ("Всего документов:", i);
            table_err_acc.printBottom ();
        end;

        SetOutput (NULL, true);
        viewfile(reportName);
    end;

    macro init()
       var _client, i = 0;
       _client = split(trim(client),",");
       InitProgress( _client.size (), "", "Ждите... Выполненяется формирования документов" );
       while (i<_client.size())
           if (IsDigitalNumber(trim(_client(i)))== 0)
               CreatePaymentBalance(ground, trim(_client(i)));
               CreatePaymentOffBalance(ground, trim(_client(i)));
               i = i + 1;
               UseProgress( i );
           else
               rec_err(rec_err.size()) = ForProtocol ("", trim(_client(i)), "", "", "Значение кода клиента должно быть цифровым");
               i = i + 1;
               UseProgress( i );
               continue;
           end;
       end;
       RemProgress();
    end;
end;

class (TRsbPanel) MyRsbPanel
    private const     FT_STRING  = 7;
    
    var labelGround: TRsbLabel = TRsbLabel(1, 1, "Назначение платежа:");
    var fieldGround: TRsbEditField = TRsbEditField(FT_STRING);
    var labelClient: TRsbLabel = TRsbLabel(4, 5, "Номер Клиента:");
    var fieldClient: TRsbEditField = TRsbEditField(FT_STRING);
    
    var strGround:String = "";
    var strClient:String = "";
  
    InitTRsbPanel();
    setSize(86,8);
    setPosition(5,10);

    fieldGround.bindValue(this, "strGround", 200);
    fieldGround.setPosition(15,1);   
    fieldGround.setSize(70,3);
    fieldGround.onKeyPressed(R2M(this, "RemFocus")); 

    fieldClient.bindValue(this, "strClient", 250);
    fieldClient.setPosition(15,5);   
    fieldClient.setSize(70,3);
    fieldClient.onKeyPressed(R2M(this, "RemFocus")); 

    addlabel(labelGround);
    addControl(fieldGround);
    addlabel(labelClient);
    addControl(fieldClient);

    macro RemFocus(RsbEvent:Object)
        ground = fieldGround.value;
        client = fieldClient.value;
    end;
end;

macro onKeyPressed(RsbEvent:Object)
    var _client, i = 0, obj;
    if(rsbEvent.keyCode == KEY_F2)
        obj = StartProcedure();
        
         //BegAction(10, "Ждите, идет выполнение процедуры..");
        //Формирование мемордеров
        obj.init();
        //Установим арест на ДТ по 47423*
        obj.SetArest47423();
        //Массовое проведение документов
        obj.ExecuteOperation();
        //Закрываем счета 47423* 
        obj.CloseAccount();
        //Протокол 
        obj.Protocol();
        //EndAction();
        
        panel.hide();
    end;
    return true;
end;

Macro RunPanel;
    panel = MyRsbPanel();
    tabbed = TRsbTabbedWindow;
    panel.addEventHandler(RSB_EV_KEY_PRESSED, @onKeyPressed);

    //panel.setCaption("Процедура");
    panel.setStatus("F2 - Продолжить, Esc - Выход");
    tabbed.setCaption("Массового списания дебиторской задолженности за РКО");
    tabbed.addForm(panel);      
    tabbed.run;
end;

if (not _bank.is_VUZ ())
    msgbox ("Функционал реализован только для ВУЗ банка");
    exit (1);
end;

RunPanel();


