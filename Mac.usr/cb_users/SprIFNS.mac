//DEBUGMACRO
/*Макрос печати выписки по операциям на счете организации*/ 
/*по ИФНС                                                */
/*Опанасенко Ю.Ф. R-Style Ukraine, Kiev 05.08.2008       */
/*Изменен 02/09/2008 Новиков С.С.*/
/*Версия 1.0                                             */
// vihrov 15.07.10
// Zlenko M.P. 05.03.2012 I-00161062  24.05.2012 I-00197087-2
//import globals, oralib, likepy, repforms, KeyCodes, WordIntf;
//import RsbDataset, Reporting, PTInter, BankInter;
// 15.03.2012 vihrov I-00126208-2 ошибка плавающая, переделаем отчет более правильно - перешлем шаблон на терминал и локально уже его откроем
// при длительном заполнении таблицы1 валится с ошибкой при создании таблицы 2. шаманскими методами вроде сейчас не валится.
// KS 25.11.2013 Адаптация под 31ю сборку. Предварительная - тут слишком много всего

/**************************************************************************
Изменено: TAM 28.11.11 I-00125285 - исправлен вывод основания докмуента
        TAM 20.02.12 I-00153949-2 - изменен номер телефона
**************************************************************************/
//21.08.2012 vihrov I-00240164-1 для старых проводок нет платежей и надо взять с проводки тогда.
//12.10.2012 vv С-3328, С-3329, С-3330 вывод в отчет информации о датах открытия/закрытия счета и вывод счета перед таблицой 1
//zmp 12.11.2012 I-00283247 Было задано неправильно условие проверки на наличие платежа, из-за этого неправильно бралось основание доумента
/*GSP - добавил поле даты в формате ДД.ММ.ГГ для вывода по новому законодательству 27.11.2012*/
/*      правка текстого варианта выписки под изменения законодательства */
/* VV доработка по С-15122 10/01/13  */
/* 06.06.13  AAN I-00378910-2 ЭВ-Саратов от Фоменко Веры отменил дисены правки,и  вернул что было по колонкам 
   с 7 по 14, т.к. у меня заявка, а для кого диса менял, я не нашёл, ни номера заявки, ни фамилии заявителя
*/
// 31.07.2013 AAN R-225456-2 поправил валютную выписку, а то сумма не в валюте печаталась а в рублях
// 31.07.2013 AAN C-22056-6  создал спец. вид выписка для ЦБ по заявке от Журавлёвой, в нём проверяется кореспондирующий л/с,
//                                если на нём польз. тип "Ю" то заменяем кор. л/с и основание из платежа на данные из проводки
// 09.10.2013 AAN R-262258-2 Проблемы с разнемсением сумм Дт\Кт, опять, убрал нафиг объект класса RsbDataSet result, т.к. он дубликат
//  объекта docinf, вот только порядок записей в них всёрано не совпадал, несмотря на сортировку, до и зачем два объекта??
// поправил печать в текстовом виде для ЭВ, т.к. по последним заявкам чинили только выписку в Word, а про текст забывали видимо
// Ещё почистил макрос от старых каментов, и причесал, в общем если надо то что было раньше, см. историю макроса в VSS, он для того и есть.
// KS 25.11.2013 Первоначальная адаптация под 31ю сборку
//26.01.2014 DPN R-528293-2 Попадали в выписку удаленные проводки
// VDN 22.09.2015 Изменения для ПРББ по R-620042
// RR 28.12.2015 I-00587864-1 исправлена ошибка


import "fg_Life_parm.mac";
import PaymInter;
import "or_tools.mac";                                  // KS 03.12.2010 I-097083 Макрос с функцией получения имени месяца в родительном падеже

import lib_account;                                     // 31.07.2013 AAN C-22056-6  макрос либ Олега, берут от туда с RSL_Account
private var Flag_AccState_CB = false;                   // // 31.07.2013 AAN C-22056-6 флаг спецвыписки для ЦБ

file FBICDir("") txt;  /* Текстовый файл импорта */
var inn:string = "";
var kpp:string = "";
var arhdoc;
private var Payment : object, PaymentID;
private var DocDate ;
private var len; //sokolov переменная для определния длины основания платежа

private macro getAccFIID(acc);
   var sql = execSQLSelect("select usr_common.get_fiid(?) fiid from dual", makeArray(SQLParam("", acc)));
   sql.moveNext();
   return sql.value("fiid", null, v_integer);
end;

private macro acc_is_carry_for_CB ( doc_arh, acc_is_payment )
    // 31.07.2013 AAN C-22056-6 функция возвращает л/с либо переданные ей( из платежа) либо если спец. выписка для ЦБ то л/с из проводки
    var user_type_acc;
    if( doc_arh.receiveraccount == acc_is_payment )
        user_type_acc = RSL_Account (doc_arh.receiveraccount, getAccFIID(doc_arh.receiveraccount));       // получаем польз. типы л/с
        if( index(user_type_acc.rec.usertypeaccount, "Ю" ))                                     // проверяем л/с на польз. тип Ю
            doc_arh.receiveraccount = string(arhdoc.rec.account_receiver );                   // если тип Ю установлен, то подменяем в объекте данных
            doc_arh.ground = string( arhdoc.rec.ground );                                    // л/с контрагента из платежа на л/с из проводки, и основание меняем
        end;
        return doc_arh.receiveraccount;
    end;
    if( doc_arh.payeraccount == acc_is_payment )
        user_type_acc = RSL_Account (doc_arh.payeraccount, getAccFIID(doc_arh.payeraccount));      // получаем польз. типы л/с
        if( index(user_type_acc.rec.usertypeaccount, "Ю" ))                                 // проверяем л/с на польз. тип Ю
            doc_arh.payeraccount = string(arhdoc.rec.account_payer );                     // если тип Ю установлен, то подменяем в объекте данных
            doc_arh.ground = string( arhdoc.rec.ground );                                // л/с контрагента из платежа на л/с из проводки, и основание меняем
        end;
        return doc_arh.payeraccount;
    end;
    
end;

private macro CreateWordApplication()

    var startAX, WordApplication;
    if (isStandAlone())
        return ActiveX("Word.Application");
    else
        startAX = CreateObject("rsax", "TRsAxServer", "LoansAxServer", isStandalone());
        WordApplication = startAX.CreateComObject("Word.Application"); 
        /* EVG Не нужно сразу показывать Word.
        WordApplication.Visible = true;*/
        return WordApplication;
    end;
end;

private macro ShowReportOnTerminal( WordApp, WordDoc )
  
    var DocFileName : string, TermFileName : string;
    DocFileName = SplitFile( GetTxtFileName("") );
    DocFileName = MergeFile( DocFileName, "fm_prn_" + string(UserNumber), ".doc" );
    DocFileName = MergeFile( GetCurDir(), DocFileName );
    WordApp.visible = true; 
end;  
  
/* EVG Ранее была описана в repforms.mac, но потом закомментирована там из-за переопределения
   в АРМ. */
private MACRO GetClientByAccount(account,chapter,code)
    
    private var rsc:object = Null, str="";

        str = string(" select t.* from daccount_dbt t where t.t_chapter=",chapter," and t.t_account='",account,"' and t.t_code_currency=",code);    
        rsc = execSQLselect(str);
        if( rsc.moveNext())
            return rsc.value("t_client");
        else
            msgbox ("Счет ",account," по главе ",chapter," не найден ");
            return 0;
        end;

END;

//zmp 24.05.2012 добавил ф-цию определения платежа по проводке
private macro getPaymentIDLinkedWithCarry(acctrnid : integer, FIID : integer):integer
    
    var query = "select pd.t_PaymentID " +
                "  from dpmdocs_dbt pd " +
                " where pd.t_acctrnid = " + acctrnid;
    var rs:RsdRecordset = execSQLselect(query);
    if (rs and rs.moveNext() )
        return rs.value(0);
    end;
    return 0;
end;

private macro getReceiverOrPayer(_docinf,_acc)
  
    var tmpstr:string = "";
    var query :string = "";
    var rs;
    if(_docinf.value("t_receiveraccount") == _acc) 
        tmpstr = _docinf.value("t_payeraccount");
        if(tmpstr == "")
            /* EVG 18/12/2013 У структурки DDOCINFO_REC нет поля t_Acctrnid, там по-старому - t_Autokey
            query = "select t_account_receiver from dacctrn_dbt where t_acctrnid = " +  _docinf.t_Acctrnid;*/
            query = "select t_account_receiver from dacctrn_dbt where t_acctrnid = " +  _docinf.t_Autokey;
            rs = execSQLselect(query);
            if (rs and rs.moveNext())
                tmpstr = rs.value(0);
            end;
        end     
    else
        tmpstr = _docinf.value("t_receiveraccount");
        if(tmpstr == "")
            /* EVG 18/12/2013 У структурки DDOCINFO_REC нет поля t_Acctrnid, там по-старому - t_Autokey
            query = "select t_account_receiver from dacctrn_dbt where t_acctrnid = " +  _docinf.t_Acctrnid;*/
            query = "select t_account_receiver from dacctrn_dbt where t_acctrnid = " +  _docinf.t_Autokey;
            rs = execSQLselect(query);
            if (rs and rs.moveNext())
                tmpstr = rs.value(0);
            end;
        end;
    end; 
    return tmpstr;
end;


/* Коркин И. Н. */
private macro getFiid(fi_code): integer
    
    private var query, result;
    query = "select t_fiid from dfininstr_dbt "
          + "\n" +"where t_fi_code = '" + fi_code + "'";
    result = execSQLselect(query);
    if( result.moveNext())
        return result.value("t_fiid");
    else
        msgbox("Валюта счета не определена");
        return 0;
    end;
end;    

MACRO SprIFNSDialog(Acc, acbalance, Branch, Client, Chapter, Code, NumOper)
    
    var path = "",
    pathfile = "",
    filen = "RSU.lbr";

    GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,path);
    pathfile = FindPath(filen,path);
    if (not pathfile)
        msgbox("Не найдена LBR");
        exit();
    end;
    var dlg = TRecHandler("sprifns",pathfile,True);

    var Account_num = "",
        Date_report_begin,
        Date_report_end,
        Request_date,
        Request_no;

   /*Процедура заполнения данными шаблона MSWord*/
    MACRO PrintSprIFNS()
        var WordApp, WordDoc, tbl, tb2, tb3;
        const RSL_Account_num1      = "Account_num1";
        const RSL_Account_num10     = "Account_num10";
        const RSL_Account_num11     = "Account_num11";
        const RSL_Account_num12     = "Account_num12";
        const RSL_Account_num13     = "Account_num13";
        const RSL_Account_num14     = "Account_num14";
        const RSL_Account_num15     = "Account_num15";
        const RSL_Account_num16     = "Account_num16";
        const RSL_Account_num17     = "Account_num17";
        const RSL_Account_num18     = "Account_num18";
        const RSL_Account_num19     = "Account_num19";
        const RSL_Account_num2      = "Account_num2";
        const RSL_Account_num20     = "Account_num20";
        const RSL_Account_num3      = "Account_num3";
        const RSL_Account_num4      = "Account_num4";
        const RSL_Account_num5      = "Account_num5";
        const RSL_Account_num6      = "Account_num6";
        const RSL_Account_num7      = "Account_num7";
        const RSL_Account_num8      = "Account_num8";
        const RSL_Account_num9      = "Account_num9";
        const RSL_Bank_INN1         = "Bank_INN1";
        const RSL_Bank_INN10        = "Bank_INN10";
        const RSL_Bank_INN2         = "Bank_INN2";
        const RSL_Bank_INN3         = "Bank_INN3";
        const RSL_Bank_INN4         = "Bank_INN4";
        const RSL_Bank_INN5         = "Bank_INN5";
        const RSL_Bank_INN6         = "Bank_INN6";
        const RSL_Bank_INN7         = "Bank_INN7";
        const RSL_Bank_INN8         = "Bank_INN8";
        const RSL_Bank_INN9         = "Bank_INN9";
        const RSL_Bank_name         = "Bank_name";
        const RSL_BankBIK1          = "BankBIK1";
        const RSL_BankBIK2          = "BankBIK2";
        const RSL_BankBIK3          = "BankBIK3";
        const RSL_BankBIK4          = "BankBIK4";
        const RSL_BankBIK5          = "BankBIK5";
        const RSL_BankBIK6          = "BankBIK6";
        const RSL_BankBIK7          = "BankBIK7";
        const RSL_BankBIK8          = "BankBIK8";
        const RSL_BankBIK9          = "BankBIK9";
        const RSL_BankKPP1          = "BankKPP1";
        const RSL_BankKPP2          = "BankKPP2";
        const RSL_BankKPP3          = "BankKPP3";
        const RSL_BankKPP4          = "BankKPP4";
        const RSL_BankKPP5          = "BankKPP5";
        const RSL_BankKPP6          = "BankKPP6";
        const RSL_BankKPP7          = "BankKPP7";
        const RSL_BankKPP8          = "BankKPP8";
        const RSL_BankKPP9          = "BankKPP9";
        const RSL_Chief_name        = "Chief_name";
        const RSL_Client_INN1       = "Client_INN1";
        const RSL_Client_INN10      = "Client_INN10";
        const RSL_Client_INN11      = "Client_INN11";
        const RSL_Client_INN12      = "Client_INN12";
        const RSL_Client_INN2       = "Client_INN2";
        const RSL_Client_INN3       = "Client_INN3";
        const RSL_Client_INN4       = "Client_INN4";
        const RSL_Client_INN5       = "Client_INN5";
        const RSL_Client_INN6       = "Client_INN6";
        const RSL_Client_INN7       = "Client_INN7";
        const RSL_Client_INN8       = "Client_INN8";
        const RSL_Client_INN9       = "Client_INN9";
        const RSL_Client_name       = "Client_name";
        const RSL_ClientKPP1        = "ClientKPP1";
        const RSL_ClientKPP2        = "ClientKPP2";
        const RSL_ClientKPP3        = "ClientKPP3";
        const RSL_ClientKPP4        = "ClientKPP4";
        const RSL_ClientKPP5        = "ClientKPP5";
        const RSL_ClientKPP6        = "ClientKPP6";
        const RSL_ClientKPP7        = "ClientKPP7";
        const RSL_ClientKPP8        = "ClientKPP8";
        const RSL_ClientKPP9        = "ClientKPP9";
        const RSL_d                 = "d";
        const RSL_Date_report       = "Date_report";
        const RSL_Date_report_begin = "Date_report_begin";
        const RSL_Date_report_end   = "Date_report_end";
        const RSL_Depart_name       = "Depart_name";
        const RSL_IFNS_adr          = "IFNS_adr";
        const RSL_IFNS_name         = "IFNS_name";
        const RSL_ISO1              = "ISO1";
        const RSL_ISO2              = "ISO2";
        const RSL_ISO3              = "ISO3";
        const RSL_mon               = "mon";
        const RSL_Oper_name         = "Oper_name";
        const RSL_Request_date      = "Request_date";
        const RSL_Request_date1     = "Request_date1";
        const RSL_Request_no        = "Request_no";
        const RSL_Request_no1       = "Request_no1";
        const RSL_Result_grid_1     = "Result_grid_1";
        const RSL_Result_grid_2     = "Result_grid_2";
        const RSL_year              = "year";
        const RSL_Pages             = "Pages";

        var fgBank = fg_life_subject({OurBank}); // KS 10.08.2010 Для разных банков немного по разному надо работать с шаблоном 

        var RegParam:string     = "";
        var Templ_name:string   = "SprIFNS1";

        if (fgBank.is_PRBB) Templ_name = "SprIFNS1New"; end;

        var Templ_ext :string   = ".dot";
        var temppath            = "";
        var ClientName:string   = "";
        var DepartName:string   = "";
        var OfficerName:string  = "";
        
        var d, mon, year;
        var rsp : object = NULL;
        var docinf,
        docInfoServer:object = null, 
        cacheQueryText:string = "";
        var i:integer = 1, // Строка с которой заполняем табличку
            cnt = 0;
        
        // KS 17.02.2011 Вывод в текст
        Array Text;
        Array Buttons;
        var TxtFileName, TxtTmpFileName, kpp_cl;
        var cur_bound = " where t_result_carry not in (14, 18, 82) "; //DAI - I-00139053-3 для валютных счетов не учитываем проводки покрытия и переоценки
        
        Flag_AccState_CB = false;
        if( MsgBoxEx(" Выписка к внешнему запросу ?", MB_NO + MB_YES, IND_NO) == IND_YES)    // 31.07.2013 AAN C-22056-6 вызов меню, для выбора вида выписки
            Flag_AccState_CB = true;
        end;
        
        ClientName = GetClientName(Client);
        DepartName = GetOfficerPost(Branch);
        OfficerName= GetOfficerName(Branch);
		debugbreak;
        
        /* Если не получили данных по основным значениям - то не печатаем ничего вообще */
        if ( (ClientName != 0) and (DepartName != 0) and (OfficerName != 0) )
            GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,RegParam);
            temppath = findpath(Templ_name + templ_ext, RegParam);
            if (not temppath)
                msgbox("Не найден шаблон " + templ_name + templ_ext);
                exit();
            end;
            //CreateDocFromTemplate(temppath);
             cacheQueryText = "SELECT T.T_ACCTRNID, " +
                              "       T.T_STATE, " +
                              "       T.T_CHAPTER, " +
                              "       T.T_DATE_CARRY, " +
                              "       T.T_DATE_RATE, " +
                              "       T.T_FIID_PAYER, " +
                              "       T.T_FIID_RECEIVER, " +
                              "       T.T_ACCOUNTID_PAYER, " +
                              "       T.T_ACCOUNTID_RECEIVER, " +
                              "       T.T_ACCOUNT_PAYER, " +
                              "       T.T_ACCOUNT_RECEIVER, " +
                              "       T.T_SUM_NATCUR, " +
                              "       T.T_SUM_PAYER, " +
                              "       T.T_SUM_RECEIVER, " +
                              "       T.T_FIIDEQ_PAYER, " +
                              "       T.T_FIIDEQ_RECEIVER, " +
                              "       T.T_SKIPRESTEQCHANGE, " +
                              "       T.T_SUMEQ_PAYER, " +
                              "       T.T_SUMEQ_RECEIVER, " +
                              "       T.T_RESULT_CARRY, " +
                              "       T.T_NUMBER_PACK, " +
                              "       T.T_OPER, " +
                              "       T.T_DEPARTMENT, " +
                              "       T.T_BRANCH, " +
                              "       T.T_NUMB_DOCUMENT, " +
                              "       T.T_GROUND, " +
                              "       T.T_SHIFR_OPER, " +
                              "       T.T_KIND_OPER, " +
                              "       T.T_TYPEDOCUMENT, " +
                              "       T.T_USERTYPEDOCUMENT, " +
                              "       T.T_PRIORITY, " +
                              "       T.T_MINPHASE, " +
                              "       T.T_MAXPHASE, " +
                              "       T.T_SYSTEMDATE, " +
                              "       T.T_SYSTEMTIME, " +
                              "       T.T_CHECKSUM, " +
                              "       T.T_EXRATEACCTRNID, " +
                              "       T.T_PARENTACCTRNID, " +
                              "       T.T_CLAIMID, " +
                              "       T.T_METHODID, " +
                              "       T.T_MINIMIZATIONTURN, " +
                              "       T.T_EXRATEACCPLUSDEBET, " +
                              "       T.T_EXRATEACCPLUSCREDIT, " +
                              "       T.T_EXRATEACCMINUSDEBET, " +
                              "       T.T_EXRATEACCMINUSCREDIT, " +
                              "       T.T_SKIPRECALCSUMNATCUR, " +
                              "       T.T_FLAGRECALCSUM, " +
                              "       T.T_RATE, " +
                              "       T.T_SCALE, " +
                              "       T.T_POINT, " +
                              "       T.T_ISINVERSE, " +
                              "       T.T_USERFIELD1, " +
                              "       T.T_USERFIELD2, " +
                              "       T.T_USERFIELD3, " +
                              "       T.T_USERFIELD4, " +
                              "       T.T_NU_STATUS, " +
                              "       T.T_NU_KIND, " +
                              "       T.T_NU_STARTDATE, " +
                              "       T.T_NU_ENDDATE, " +
                              "       T.T_NU_ACKDATE, " +
                              "       T.T_FU_ACCTRNID, " +
                              "       T.T_SIDETRANSACTION, " +
                              "       T.T_EXRATEEXTRA, " +
                              "       T.T_USERGROUPID " +
                              "FROM dacctrn_dbt t " +
                              "WHERE (t_account_payer = '" + Account_num + "' OR t_account_receiver = '" + Account_num + "') " +
                              "AND (t_date_carry BETWEEN '" + Date_report_begin + "' AND '" + Date_report_end + "') and T.T_STATE = 1 ";//26.01.2014 R-528293-2 DPN Нужно учитывать только живые проводки
            /* DAI - I-00139053-3 Проводки покрытия и курсовой разницы не берем только для валютных счетов*/
            if (substr(Account_num, 6, 3) != "810") 
                cacheQueryText = "select * from (" + cacheQueryText + ") " + cur_bound;
            end;
            
            docInfoServer = RepDocInfoServer(PTCK_ALL, 0); // создание сервера
            docInfoServer.cacheInformation(cacheQueryText); // кеширование информации (сбор инф. по проводкам)
            docinf = TRsbDataset("SELECT " + docInfoServer.getCacheTableName() + ".*, to_char(t_date_carry, 'dd.mm.yy') carry_date FROM " + docInfoServer.getCacheTableName() + " ORDER BY t_date_carry, t_numb_document "); // KS 02.07.2010 добаил ORDER BY t_date_carry, t_numb_document по заявке I-045321
            /* EVG Посчитаем записи (для градусника) */
            InitProgress( null, null, "Подсчёт количества записей" );
            while (docinf.moveNext())
                UseProgress( null );
                cnt = cnt + 1;
            end;
            RemProgress();
            docinf = null;
            docinf = TRsbDataset("SELECT " + docInfoServer.getCacheTableName() + ".*, to_char(t_date_carry, 'dd.mm.yy') carry_date FROM " + docInfoServer.getCacheTableName() + " ORDER BY t_date_carry, t_numb_document ");
            /* EVG end */                                          /*GSP - добавил поле даты в формате ДД.ММ.ГГ для вывода по новому законодательству 27.11.2012*/
            /* Коркин И. Н. */
            //getstring(query);
            /* Изменен 04/09/2008 Новиков С. С.*********************************************************************/
            SplitFullINN (GetPartyINN({OurBank}, 1), INN, KPP);
            /*****************************************************************************************************/
            DateSplit({curdate}, d, mon, year);
            
            // KS 27.01.2011 I-00002079 Рубль 643 Для ЭВ

            var fiiso = string(GetIsoByID(Code, false));
            if ( ((fgBank.is_EXV) or (fgBank.is_VUZ) or (fgBank.is_GEB)) and (fiiso=="810") ) //zmp 07.06.2012 I-00205503 добавил в условие ГЕБ
                fiiso = "643";
            end;
            
            // KS 17.02.2011 Вывод в текст
            Text(0)     = "Укажите формат печати";
            Buttons(0)  = "Текст";
            Buttons(1)  = "Word";
            
            if ((fgBank.is_EXV)and(ConfWin( Text, Buttons ) == 0))  // KS 17.02.2011 Вывод в текст
                If (StrBrk(GetPartyINN(Client, 1), "/") != 0)  //Diver Согласно срочной заявки Елены Карнауховой
                    kpp_cl =  SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 1, 9);
                else
                    kpp_cl =  " ";
                end;
                TxtFileName = SplitFile( GetTxtFileName("") );
                TxtTmpFileName = MergeFile( TxtFileName, "SprIFNStmp" + Client + "." + string(UserNumber) );
                TxtFileName    = MergeFile( TxtFileName, "SprIFNS"    + Client + "." + string(UserNumber) );
                setoutput(TxtTmpFileName, false);

              //Gurin S. 07.11.2014 R-489476-2 Колонка № п/п шириной 8 символов
              [ ####################                                                                                                                                                                                  Таблица 1.
               ┌────────┬──────────┬───────────────────────┬─────────────────────────────────────────────┬─────────────────────────────────────────────────────────┬───────────────────────────┬───────────────┐
               │   №    │          │Реквизиты документа,на │    Реквизиты банка плательщика/получателя   │                                                         │      Сумма операции       │               │
               │  п/п   │   дата   │основании которого была│               денежных средств              │   Реквизиты плательщика / получателя денежных средств   │   по счету (специальному  │               │
               │        │  совер-  │совершена операция по  │                                             │                                                         │     банковскому счету)    │   Назначение  │
               │        │  шения   │  счету (специальному  ├────────────────────┬────────────┬───────────┼─────────────┬────────────┬─────────┬────────────────────┼─────────────┬─────────────┤     платежа   │
               │        │          │   банковскому счету)  │                    │            │           │             │            │         │                    │             │             │               │
               │        │  опера-  ├──────┬─────┬──────────┤        номер       │            │           │наименование/│            │         │    номер счета     │             │             │               │
               │        │   ции    │ вид  │номер│   дата   │ корреспондентского │наименование│    БИК    │    Ф.И.О.   │  ИНН/КИО   │   КПП   │   (специального    │  по дебету  │ по  кредиту │               │
               │        │          │(шифр)│     │          │        счета       │            │           │             │            │         │ банковского счета) │             │             │               │
               ├────────┼──────────┼──────┼─────┼──────────┼────────────────────┼────────────┼───────────┼─────────────┼────────────┼─────────┼────────────────────┼─────────────┼─────────────┼───────────────┤](Account_num);

                while (docinf.moveNext())
                    arhdoc = Tbfile("acctrn.dbt");

                    /* EVG 18/12/2013 У структурки DDOCINFO_REC нет поля t_Acctrnid, там по-старому - t_Autokey
                    arhdoc.rec.Acctrnid = docinf.t_Acctrnid;
                    GetEQ(arhdoc);
                    PaymentID = getPaymentIDLinkedWithCarry(docinf.t_acctrnid, docinf.t_FIID );*/
                    arhdoc.rec.Acctrnid = docinf.t_Autokey;
                    GetEQ(arhdoc);
                    PaymentID = getPaymentIDLinkedWithCarry(docinf.t_Autokey, docinf.t_FIID );

                    if (PaymentID > 0)
                        Payment = RsbPayment(PaymentID);
                        DocDate = Payment.Date;
                    else
                        DocDate = date(docinf.value("t_date"));
                    end;
                    /* EVG Градусник */
                    UseProgress( i );
                    // 09.10.2013 AAN R-262258-2 BEGIN
                    var ground_for_print = "";              // переменная из которой будет печатать основание
                    if (PaymentID > 0)                      // для старых проводок нет платежей и надо взять с проводки тогда.
                        len = strlen(Payment.ground);       //если в платеже нет основания то берем его из проводки.
                        //if (len == 0)
                        if (len == 0 or Flag_AccState_CB)   // если спецвыписка для ЦБ
                            ground_for_print = arhdoc.rec.ground;
                        else
                            ground_for_print = Payment.ground;  //17.08.2012 vihrov I-00224708-2 основание надо взять с платежа,т.к. выписки для клиента берут основание оттуда, а для налоговой надо сделать также
                        end;
                    else
                        ground_for_print = arhdoc.rec.ground; //21.08.2012 vihrov I-00240164-1 для старых проводок нет платежей и надо взять с проводки тогда.
                    end;
                    // 09.10.2013 AAN R-262258-2 END
                  [│########│##########│######│#####│##########│####################│############│###########│#############│############│#########│####################│#############│#############│###############│]
                  ( i:r:w,
                        docinf.value("carry_date"),
                        //date(docinf.value("t_date_carry")):w,
                        docinf.value("t_shifr_oper"):w,
                        docinf.value("t_numb_document"):w,
                        DocDate:w,
                        // 31.05.2012 I-00202057 zmp убрал IfThenElse, так как он не правильно отрабатывал
                        // IfThenElse((PaymentID > 0), Payment.Date,(date(docinf.value("t_date")))):w,/*zmp 24.05.2012 если есть платеж, дату будем брать из него*/
                        // 09.10.2013 AAN R-262258-2 BEGIN
                        // заменил result.value("t_account_receiver") на docinf.value("t_receiveraccount")
                        IfThenElse( docinf.value("t_receiveraccount") == Account_num, 
                                    IfThenElse(docinf.value("t_payercorracc") == {CORAC_Bank}, "-", docinf.value("t_payercorracc") ),
                                    IfThenElse(docinf.value("t_receivercorracc") == {CORAC_Bank}, "-", IfThenElse(strlen(docinf.value("t_receivercorracc")) == 0, "-", docinf.value("t_receivercorracc") )) 
                                    ):w, // KS 15.03.2012 Прочерк, если t_receivercorracc пусто
                        IfThenElse( docinf.value("t_receiveraccount") == Account_num, docinf.value("t_payerbankname"), docinf.value("t_receiverbankname") ):w,
                        IfThenElse( docinf.value("t_receiveraccount") == Account_num, 
                                    IfThenElse(docinf.value("t_payerbankcode") == {MFO_Bank}, "-", docinf.value("t_payerbankcode") ), 
                                    IfThenElse(docinf.value("t_receiverbankcode") == {MFO_Bank}, "-", docinf.value("t_receiverbankcode") ) 
                                    ):w,
                        IfThenElse( docinf.value("t_receiveraccount") == Account_num, docinf.value("t_payername"), docinf.value("t_receivername") ):w,
                        IfThenElse( docinf.value("t_receiveraccount") == Account_num, docinf.value("t_payerinn"), docinf.value("t_receiverinn") ):w,
                        IfThenElse( docinf.value("t_receiveraccount") == Account_num, 
                                    SubStr(docinf.value("t_payerinn_kpp"), StrBrk(docinf.value("t_payerinn_kpp"), "/")+1),
                                    SubStr(docinf.value("t_receiverinn_kpp"), StrBrk(docinf.value("t_receiverinn_kpp"), "/")+1) 
                                    ):w,
                        IfThenElse ( Flag_AccState_CB,                                                            // 31.07.2013 AAN C-22056-6 если спецвыписка для ЦБ
                            (IfThenElse( docinf.value("t_receiveraccount") == Account_num, acc_is_carry_for_CB( docinf, docinf.value("t_payeraccount")), acc_is_carry_for_CB( docinf, docinf.value("t_receiveraccount")))),
                            (IfThenElse( docinf.value("t_receiveraccount") == Account_num, docinf.value("t_payeraccount"), docinf.value("t_receiveraccount")))
                                    ):w,
                        //Gurin S. 28.10.2014 I-00526847-2
                        //IfThenElse( docinf.value("t_receiveraccount") == Account_num, " ", string(arhdoc.rec.sum_natcur:f)):w,
                        IfThenElse( docinf.value("t_receiveraccount") == Account_num, " ", string(arhdoc.rec.sum_payer:f)):w,
                        //IfThenElse( docinf.value("t_receiveraccount") == Account_num, string(arhdoc.rec.sum_natcur:f), " "):w,
                        IfThenElse( docinf.value("t_receiveraccount") == Account_num, string(arhdoc.rec.sum_receiver:f), " "):w,
                        
                        //arhdoc.rec.ground:w   сделал чтобы текстовая выписка была как и в Word
                        ground_for_print :w
                        // 09.10.2013 AAN R-262258-2 END
                    );
                    i = i + 1;
                end;
                [└────────┴──────────┴──────┴─────┴──────────┴────────────────────┴────────────┴───────────┴─────────────┴────────────┴─────────┴────────────────────┴─────────────┴─────────────┴───────────────┘];
                [                                                                               Таблица 2.
                 ┌─────────────────────┬─────────────────────┬─────────────────────┬─────────────────────┐
                 │   Остаток по счету  │   Сумма по дебету   │  Сумма по кредиту   │  Остаток по счету   │
                 │    (специальному    │ счета (специального │ счета (специального │   (специальному     │
                 │  банковскому счету) │  банковского счета) │  банковского счета) │  банковскому счету) │
                 │  на начало периода  │      за период      │      за период      │   на конец периода  │
                 ├─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┤];
                
                if ((GetIsoByID(Code, false) == 810) or (GetIsoByID(Code, false) == 643)) //Lavrenov: заявка I-094686. Ваня, ты заср#нец, мог бы и проверить, что возвращает функция
                    [│#####################│#####################│#####################│#####################│]
                    (string(RestA  (Account_num, date(Date_report_begin)-1, null,                  chapter):f):c,
                     string(DebetA (Account_num, date(Date_report_begin),   date(Date_report_end), Chapter):f):c,
                     string(KreditA(Account_num, date(Date_report_begin),   date(Date_report_end), Chapter):f):c,
                     string(RestA  (Account_num, date(Date_report_end),     null,                  chapter):f):c);
                else// Lavrenov: зачем FIID переводить в ISO, а потом обратно ISO в FIID??? я что-то не понимаю в этой жизни?
                    [│#####################│#####################│#####################│#####################│]
                    (string(RestAC  (Account_num, getFiid(GetIsoByID(Code, false)), date(Date_report_begin)-1,  null,                  chapter):f):c,
                     string(DebetAC (Account_num, getFiid(GetIsoByID(Code, false)), date(Date_report_begin),    date(Date_report_end), Chapter):f):c,
                     string(KreditAC(Account_num, getFiid(GetIsoByID(Code, false)), date(Date_report_begin),    date(Date_report_end), Chapter):f):c,
                     string(RestAC  (Account_num, getFiid(GetIsoByID(Code, false)), date(Date_report_end),      null,                  chapter):f):c);
                end;
                    [└─────────────────────┴─────────────────────┴─────────────────────┴─────────────────────┘];
                setoutput(TxtFileName,false);
                
                [(3R(s0p13.50h8.5v0s0b20T&l1X&l8D&l0O&a7L&l2E                                 &l8D
                 ##############################################################################

                   Корр. счет: 30101810600000000808
                   в Отделении по Саратовской области Волго-Вятского главного
                   управления Центрального банка Российской Федерации
                   БИК:  #########
                   ИНН: ##########
                ]({Name_Bank},{MFO_Bank},{INN_Bank});
                [                                              ################################]
                ((NalOrgName+"\n"+NalOrgAddr):w);
                [
                        Выписка по операциям на счете (специальном банковском счете)

                 Банк ##########################################################################
                      (полное или сокращенное наименование банка в соответствии с Книгой
                       государственной регистрации кредитных организаций)
                 ИНН ########## КПП ######### БИК       #########
                 В соответствии с запросом налогового органа от ########## г. № ########################
                 в отношении
                 ###############################################################################
                 (наименование организации, ФИО индивидуального предпринимателя (нотариуса,
                  занимающегося частой практикой, адвоката, учредившего адвокатский кабинет))
                 ИНН / КИО ############ КПП #########
                  представляет выписку по счету  ####################        ###
                 (специальному банковскому счету)                                          (цифровой код
                                                           валюты счета (специального банковского счета))
                 за период с ########## г. по ########## г.



                 Приложение на _ страницах.
                 


                 Представитель банка
                 Начальник учетно-операционного отдела  __________________      (Иванова И.К.)

                                                                                      ########## г.
                                                                                               М.П.
                 ##################################################################################
                 тел. (4842) 55-77-55
                 (3R(s0p17.5h8.5v0s0b3T&l1O&l8D&l1X
                ]
                ( {Name_Bank}, {INN_Bank}, kpp, {MFO_Bank}, date(Request_date), Request_no, ClientName, 
                  GetPartyINN(Client, 0), kpp_cl, Account_num,fiiso, Date_report_begin, Date_report_end,
                  date({curdate}), GetOperName({oper})  );
                
                var cntline = 0, cntpage = 1;
                var stat = Open( FBICDir, TxtTmpFileName );
                while(stat)
                    println(FBICDir.str);
                    cntline = cntline + 1;
                    if (cntline == 45)
                        cntline = 0;
                        cntpage = cntpage + 1;
                        [
                                                                                                                                                                             Таблица 1(продолжение - страница #######)]
                        (cntpage);
                    end;
                    if(stat)
                        stat = next(FBICDir);
                    end;
                end;
                close( FBICDir );
                setoutput();
                
                viewfile(TxtFileName,false);
                DelFile(TxtFileName);
                DelFile(TxtTmpFileName);
            else                              // KS 17.02.2011 Вывод в эксель
                WordApp = CreateWordApplication();
                if( WordApp )
                    /*28.02.2013 zmp I-00332661-3 ищем абсолютный путь*/
                    temppath = RSL_FullPath(temppath);
                    WordDoc  = WordApp.Documents.add( temppath );
                    if( WordDoc )
                        /* EVG Градусник */
                        InitProgress( cnt, null, "Выполняется печать отчёта." );
                        
                        if (( not fgBank.is_EXV ))  // KS 10.08.2010 23.08.2010 I-058968 Справки в налоговую для клиентов-исправление макросов
                                                      // Для ВУЗа и ГЭБа жестко задано в шаблоне
                            WordDoc.Bookmarks("d").Range.Text               =  mkstr( "0", 2 - strlen(string(d)) ) + d; // KS 03.12.2010 I-097083 День с нулем
                            WordDoc.Bookmarks("mon").Range.Text             =  MonNameR(mon);                         // KS 03.12.2010 I-097083 Месяц в родительном падеже
                            WordDoc.Bookmarks("year").Range.Text            =  year;
                            WordDoc.Bookmarks("Request_date1").Range.Text   =  Request_date;
                            WordDoc.Bookmarks("Request_no1").Range.Text     =  Request_no;
                        end;
                        WordDoc.Bookmarks("Request_date").Range.Text        =  Request_date;
                        WordDoc.Bookmarks("Request_no").Range.Text          =  Request_no;
                        if (( not fgBank.is_PRBB ) and ( not fgBank.is_VUZ ) and ( not fgBank.is_EXV ) and ( not fgBank.is_GEB ))  
                            // KS 10.08.2010 23.08.2010 I-058968 Справки в налоговую для клиентов-исправление макросов
                            // Для ВУЗа, ЭВа и ГЭБа жестко задано в шаблоне
                            WordDoc.Bookmarks("Chief_name").Range.Text      =  OfficerName;
                            WordDoc.Bookmarks("Depart_name").Range.Text     =  DepartName;
                        end;
                        WordDoc.Bookmarks("Client_name").Range.Text         =  ClientName;
                        WordDoc.Bookmarks("Bank_INN1").Range.Text           =  SubStr({INN_Bank}, 1, 1);
                        WordDoc.Bookmarks("Bank_INN2").Range.Text           =  SubStr({INN_Bank}, 2, 1);
                        WordDoc.Bookmarks("Bank_INN3").Range.Text           =  SubStr({INN_Bank}, 3, 1);
                        WordDoc.Bookmarks("Bank_INN4").Range.Text           =  SubStr({INN_Bank}, 4, 1);
                        WordDoc.Bookmarks("Bank_INN5").Range.Text           =  SubStr({INN_Bank}, 5, 1);
                        WordDoc.Bookmarks("Bank_INN6").Range.Text           =  SubStr({INN_Bank}, 6, 1);
                        WordDoc.Bookmarks("Bank_INN7").Range.Text           =  SubStr({INN_Bank}, 7, 1);
                        WordDoc.Bookmarks("Bank_INN8").Range.Text           =  SubStr({INN_Bank}, 8, 1);
                        WordDoc.Bookmarks("Bank_INN9").Range.Text           =  SubStr({INN_Bank}, 9, 1);
                        WordDoc.Bookmarks("Bank_INN10").Range.Text          =  SubStr({INN_Bank}, 10, 1);
                        WordDoc.Bookmarks("Bank_name").Range.Text           =  {Name_Bank};
                        WordDoc.Bookmarks("BankBIK1").Range.Text            =  SubStr({MFO_Bank}, 1, 1) ;
                        WordDoc.Bookmarks("BankBIK2").Range.Text            =  SubStr({MFO_Bank}, 2, 1) ;
                        WordDoc.Bookmarks("BankBIK3").Range.Text            =  SubStr({MFO_Bank}, 3, 1) ;
                        WordDoc.Bookmarks("BankBIK4").Range.Text            =  SubStr({MFO_Bank}, 4, 1) ;
                        WordDoc.Bookmarks("BankBIK5").Range.Text            =  SubStr({MFO_Bank}, 5, 1) ;
                        WordDoc.Bookmarks("BankBIK6").Range.Text            =  SubStr({MFO_Bank}, 6, 1) ;
                        WordDoc.Bookmarks("BankBIK7").Range.Text            =  SubStr({MFO_Bank}, 7, 1) ;
                        WordDoc.Bookmarks("BankBIK8").Range.Text            =  SubStr({MFO_Bank}, 8, 1) ;
                        WordDoc.Bookmarks("BankBIK9").Range.Text            =  SubStr({MFO_Bank}, 9, 1) ;
                         /*Изменен 04/09/2008 Новиков С. С.*********************************************************************/
                        WordDoc.Bookmarks("BankKPP1").Range.Text            =  SubStr(kpp, 1, 1) ;
                        WordDoc.Bookmarks("BankKPP2").Range.Text            =  SubStr(kpp, 2, 1) ;
                        WordDoc.Bookmarks("BankKPP3").Range.Text            =  SubStr(kpp, 3, 1) ;
                        WordDoc.Bookmarks("BankKPP4").Range.Text            =  SubStr(kpp, 4, 1) ;
                        WordDoc.Bookmarks("BankKPP5").Range.Text            =  SubStr(kpp, 5, 1) ;
                        WordDoc.Bookmarks("BankKPP6").Range.Text            =  SubStr(kpp, 6, 1) ;
                        WordDoc.Bookmarks("BankKPP7").Range.Text            =  SubStr(kpp, 7, 1) ;
                        WordDoc.Bookmarks("BankKPP8").Range.Text            =  SubStr(kpp, 8, 1) ;
                        WordDoc.Bookmarks("BankKPP9").Range.Text            =  SubStr(kpp, 9, 1) ;
                         /*****************************************************************************************************/
                        WordDoc.Bookmarks("Client_INN1").Range.Text         =  SubStr(GetPartyINN(Client, 0), 1, 1);
                        WordDoc.Bookmarks("Client_INN2").Range.Text         =  SubStr(GetPartyINN(Client, 0), 2, 1);
                        WordDoc.Bookmarks("Client_INN3").Range.Text         =  SubStr(GetPartyINN(Client, 0), 3, 1);
                        WordDoc.Bookmarks("Client_INN4").Range.Text         =  SubStr(GetPartyINN(Client, 0), 4, 1);
                        WordDoc.Bookmarks("Client_INN5").Range.Text         =  SubStr(GetPartyINN(Client, 0), 5, 1);
                        WordDoc.Bookmarks("Client_INN6").Range.Text         =  SubStr(GetPartyINN(Client, 0), 6, 1);
                        WordDoc.Bookmarks("Client_INN7").Range.Text         =  SubStr(GetPartyINN(Client, 0), 7, 1);
                        WordDoc.Bookmarks("Client_INN8").Range.Text         =  SubStr(GetPartyINN(Client, 0), 8, 1);
                        WordDoc.Bookmarks("Client_INN9").Range.Text         =  SubStr(GetPartyINN(Client, 0), 9, 1);
                        WordDoc.Bookmarks("Client_INN10").Range.Text        =  SubStr(GetPartyINN(Client, 0), 10, 1);
                        WordDoc.Bookmarks("Client_INN11").Range.Text        =  SubStr(GetPartyINN(Client, 0), 11, 1);
                        WordDoc.Bookmarks("Client_INN12").Range.Text        =  SubStr(GetPartyINN(Client, 0), 12, 1);
                        If (StrBrk(GetPartyINN(Client, 1), "/") != 0)  //Diver Согласно срочной заявки Елены Карнауховой
                            WordDoc.Bookmarks("ClientKPP1").Range.Text      =  SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 1, 1);
                            WordDoc.Bookmarks("ClientKPP2").Range.Text      =  SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 2, 1);
                            WordDoc.Bookmarks("ClientKPP3").Range.Text      =  SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 3, 1);
                            WordDoc.Bookmarks("ClientKPP4").Range.Text      =  SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 4, 1);
                            WordDoc.Bookmarks("ClientKPP5").Range.Text      =  SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 5, 1);
                            WordDoc.Bookmarks("ClientKPP6").Range.Text      =  SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 6, 1);
                            WordDoc.Bookmarks("ClientKPP7").Range.Text      =  SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 7, 1);
                            WordDoc.Bookmarks("ClientKPP8").Range.Text      =  SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 8, 1);
                            WordDoc.Bookmarks("ClientKPP9").Range.Text      =  SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 9, 1);
                        else
                            WordDoc.Bookmarks("ClientKPP1").Range.Text      =  " ";
                            WordDoc.Bookmarks("ClientKPP2").Range.Text      =  " ";
                            WordDoc.Bookmarks("ClientKPP3").Range.Text      =  " ";
                            WordDoc.Bookmarks("ClientKPP4").Range.Text      =  " ";
                            WordDoc.Bookmarks("ClientKPP5").Range.Text      =  " ";
                            WordDoc.Bookmarks("ClientKPP6").Range.Text      =  " ";
                            WordDoc.Bookmarks("ClientKPP7").Range.Text      =  " ";
                            WordDoc.Bookmarks("ClientKPP8").Range.Text      =  " ";
                            WordDoc.Bookmarks("ClientKPP9").Range.Text      =  " ";
                        End;
                        //12.10.2012 vv С-3328, С-3329, С-3330 вывод в отчет информации о датах открытия/закрытия счета и вывод счета перед таблицой 1
                        /*VV C-15122 указывать фразу для всех групп банков " дату закрытия счета "  10/01/13*/  
                        if (not fgBank.is_PRBB)  WordDoc.Bookmarks("Date_report").Range.Text = {curdate}; end;                       

                        var qr, str="", open_date, close_date;
                        str = string(" select t.t_open_date, t.t_close_date from daccount_dbt t where  t.t_account='",Account_num,"' and t.t_code_currency=",code);
                        qr = execSQLselect(str);
                        if( qr.moveNext())
                            open_date  = qr.value("t_open_date", null, V_DATE);
                            close_date = qr.value("t_close_date", null, V_DATE);
                        end;
                        if (Date_report_begin <= open_date)
                            WordDoc.Bookmarks("Date_report_begin").Range.Text = string(" даты открытия счета " + open_date);
                        else
                            WordDoc.Bookmarks("Date_report_begin").Range.Text = Date_report_begin;
                        end;
                        if  ((close_date != "") and (Date_report_end >= close_date) )
                            WordDoc.Bookmarks("Date_report_end").Range.Text = string(" дату закрытия счета " + close_date);   
                        else 
                            WordDoc.Bookmarks("Date_report_end").Range.Text = Date_report_end;             
                        end;
                        /*VV C-15122 указывать фразу для всех групп банков " дату закрытия счета "  10/01/13*/      
                        /*      WordDoc.Bookmarks("Account_num").Range.Text              =  Account_num;   
                        WordDoc.Bookmarks("ISO").Range.Text                      =  string(GetIsoByID(Code, false)); */ 
                        
                        //TAM 15.10.2012 I-00268791-2 - счет печатается в приложениях только у ПРББ
                        if (fgBank.is_PRBB)
                          WordDoc.Bookmarks("Account_number").Range.Text = Account_num;
                        end;
                        /* WordDoc.Bookmarks("Date_report_begin").Range.Text           =  startDate + starttext;
                        WordDoc.Bookmarks("Date_report_end").Range.Text             =  endDate + endtext;  */
                         
                        WordDoc.Bookmarks("IFNS_adr").Range.Text           = NalOrgAddr;
                        WordDoc.Bookmarks("IFNS_name").Range.Text          = NalOrgName;
                         
                        WordDoc.Bookmarks("Account_num1").Range.Text       = SubStr(Account_num, 1, 1);
                        WordDoc.Bookmarks("Account_num2").Range.Text       = SubStr(Account_num, 2, 1);
                        WordDoc.Bookmarks("Account_num3").Range.Text       = SubStr(Account_num, 3, 1);
                        WordDoc.Bookmarks("Account_num4").Range.Text       = SubStr(Account_num, 4, 1);
                        WordDoc.Bookmarks("Account_num5").Range.Text       = SubStr(Account_num, 5, 1);
                        WordDoc.Bookmarks("Account_num6").Range.Text       = SubStr(Account_num, 6, 1);
                        WordDoc.Bookmarks("Account_num7").Range.Text       = SubStr(Account_num, 7, 1);
                        WordDoc.Bookmarks("Account_num8").Range.Text       = SubStr(Account_num, 8, 1);
                        WordDoc.Bookmarks("Account_num9").Range.Text       = SubStr(Account_num, 9, 1);
                        WordDoc.Bookmarks("Account_num10").Range.Text      = SubStr(Account_num, 10, 1);
                        WordDoc.Bookmarks("Account_num11").Range.Text      = SubStr(Account_num, 11, 1);
                        WordDoc.Bookmarks("Account_num12").Range.Text      = SubStr(Account_num, 12, 1);
                        WordDoc.Bookmarks("Account_num13").Range.Text      = SubStr(Account_num, 13, 1);
                        WordDoc.Bookmarks("Account_num14").Range.Text      = SubStr(Account_num, 14, 1);
                        WordDoc.Bookmarks("Account_num15").Range.Text      = SubStr(Account_num, 15, 1);
                        WordDoc.Bookmarks("Account_num16").Range.Text      = SubStr(Account_num, 16, 1);
                        WordDoc.Bookmarks("Account_num17").Range.Text      = SubStr(Account_num, 17, 1);
                        WordDoc.Bookmarks("Account_num18").Range.Text      = SubStr(Account_num, 18, 1);
                        WordDoc.Bookmarks("Account_num19").Range.Text      = SubStr(Account_num, 19, 1);
                        WordDoc.Bookmarks("Account_num20").Range.Text      = SubStr(Account_num, 20, 1);
                        WordDoc.Bookmarks("ISO1").Range.Text               = SubStr(fiiso, 1, 1);
                        WordDoc.Bookmarks("ISO2").Range.Text               = SubStr(fiiso, 2, 1);
                        WordDoc.Bookmarks("ISO3").Range.Text               = SubStr(fiiso, 3, 1);
                        WordDoc.Bookmarks("Oper_name").Range.Text          = GetOperName({oper});
                        tb2 = WordApp.ActiveDocument.Tables.Item(8); // 15.03.2012 vihrov почему то если определять эту таблицу после tbl то если объем данных большой, то валится с ошибкой. попробуем определить сразу же две таблицы
                        tbl = WordApp.ActiveDocument.Tables.Item(7);

                        /*if (fgBank.is_PRBB)
                          tb2 = WordApp.ActiveDocument.Tables.Item(9);
                          tbl = WordApp.ActiveDocument.Tables.Item(8);
                        end;*/

                        while (docinf.moveNext())
                            
                            arhdoc = Tbfile("acctrn.dbt");

                            /* EVG 18/12/2013 У структурки DDOCINFO_REC нет поля t_Acctrnid, там по-старому - t_Autokey
                            arhdoc.rec.Acctrnid = docinf.t_Acctrnid;
                            GetEQ(arhdoc);
                            PaymentID = getPaymentIDLinkedWithCarry(docinf.t_Acctrnid, docinf.t_FIID );*/
                            arhdoc.rec.Acctrnid = docinf.t_Autokey;
                            GetEQ(arhdoc);
                            PaymentID = getPaymentIDLinkedWithCarry(docinf.t_Autokey, docinf.t_FIID );

                            if (PaymentID > 0)
                                Payment = RsbPayment(PaymentID);
                            end;
                            UseProgress( i );       /* EVG Градусник */
                            tbl.Cell(i, 1).Range.Text = i;
                            /* EVG 07.02.2011 По уточнению от В. Фоменко, в колонке 2 должна быть дата проводки документа,
                               а не дата документа (изменение зеркально с колонкой 5)
                            tbl.Cell(i, 2).Range.Text = date(docinf.value("t_date"));
                            */
                            tbl.Cell(i, 2).Range.Text = docinf.value("carry_date")/*)*/;
                            tbl.Cell(i, 3).Range.Text = docinf.value("t_shifr_oper");
                            tbl.Cell(i, 4).Range.Text = docinf.value("t_numb_document");
                            /* EVG 07.02.2011 По уточнению от В. Фоменко, в колонке 5 всё-таки должна быть дата документа, а не дата
                               проводки (изменение зеркально с колонкой 2).
                            /* EVG 01.02.2011 Во-первых, банк хочет видеть здесь не срок платежа, а дату проводки, поэтому t_date_carry.
                               Во-вторых, при docinf.value("t_paydate") равном V_UNDEF выражение date(docinf.value("t_paydate")) возвращает
                               текущую системную дату, что абсолютно не к месту. Изменил выражение.
                            tbl.Cell(i, 5).Range.Text = IfThenElse( string(date(docinf.value("t_paydate"))) == "", date(docinf.value("t_date")), date(docinf.value("t_paydate")) );
                            */
                            tbl.Cell(i, 5).Range.Text = IfThenElse( SQL_ConvTypeDate(docinf.value("t_date_carry")) == date(0,0,0), date(docinf.value("t_date")), date(docinf.value("t_date_carry")) );
                            */
                            /*zmp 24.05.2012 если есть платеж, дату будем брать из него*/
                          //  tbl.Cell(i, 5).Range.Text = IfThenElse(PaymentID > 0, Payment.Date,date(docinf.value("t_date")));//date(docinf.value("t_date"));
                            //31.05.2012 I-00202057 zmp  Сделал просто через if,IfThenElse почему-то не правильно отрабатывет. 
                            if (PaymentID > 0)
                               tbl.Cell(i, 5).Range.Text = Payment.Date;
                            else
                               tbl.Cell(i, 5).Range.Text = date(docinf.value("t_date")) ;
                            end;
                            // 09.10.2013 AAN R-262258-2 BEGIN
                            // заменил result.value("t_account_receiver") на docinf.value("t_receiveraccount")
                            tbl.Cell(i, 6).Range.Text = IfThenElse( docinf.value("t_receiveraccount") == Account_num, 
                                                     IfThenElse(docinf.value("t_payercorracc") == {CORAC_Bank}, "-", docinf.value("t_payercorracc") ),
                                                     IfThenElse(docinf.value("t_receivercorracc") == {CORAC_Bank}, "-", docinf.value("t_receivercorracc") ) );
                            tbl.Cell(i, 7).Range.Text = IfThenElse( docinf.value("t_receiveraccount") == Account_num, docinf.value("t_payerbankname"), docinf.value("t_receiverbankname") );
                            tbl.Cell(i, 8).Range.Text = IfThenElse( docinf.value("t_receiveraccount") == Account_num, 
                                                                    IfThenElse(docinf.value("t_payerbankcode") == {MFO_Bank}, "-", docinf.value("t_payerbankcode") ), 
                                                                    IfThenElse(docinf.value("t_receiverbankcode") == {MFO_Bank}, "-", docinf.value("t_receiverbankcode") ) );
                            tbl.Cell(i, 9).Range.Text = IfThenElse( docinf.value("t_receiveraccount") == Account_num, docinf.value("t_payername"), docinf.value("t_receivername"));
                            tbl.Cell(i, 10).Range.Text = IfThenElse( docinf.value("t_receiveraccount") == Account_num, docinf.value("t_payerinn"), docinf.value("t_receiverinn") );
                            tbl.Cell(i, 11).Range.Text = IfThenElse( docinf.value("t_receiveraccount")== Account_num, 
                                                     SubStr(docinf.value("t_payerinn_kpp"), StrBrk(docinf.value("t_payerinn_kpp"), "/")+1),                                     
                                                     SubStr(docinf.value("t_receiverinn_kpp"), StrBrk(docinf.value("t_receiverinn_kpp"), "/")+1) );
                            if ( Flag_AccState_CB )                                                           // 31.07.2013 AAN C-22056-6 если спецвыписка для ЦБ
                                tbl.Cell(i, 12).Range.Text = IfThenElse( docinf.value("t_receiveraccount") == Account_num, acc_is_carry_for_CB( docinf, docinf.value("t_payeraccount")), acc_is_carry_for_CB( docinf, docinf.value("t_receiveraccount")));
                            else
                                tbl.Cell(i, 12).Range.Text = IfThenElse( docinf.value("t_receiveraccount") == Account_num, docinf.value("t_payeraccount"), docinf.value("t_receiveraccount"));
                            end;
                            
                            //Gurin S. 20.10.2014 I-00526847-2
                            //tbl.Cell(i, 13).Range.Text = IfThenElse( docinf.value("t_receiveraccount") == Account_num, null, string(arhdoc.rec.sum_natcur :f) ) ; //vihrov почемуто дт с кт наоборот в отчете
                            tbl.Cell(i, 13).Range.Text = IfThenElse( docinf.value("t_receiveraccount") == Account_num, null, string(arhdoc.rec.sum_payer :f) ) ; //vihrov почемуто дт с кт наоборот в отчете
                            //tbl.Cell(i, 14).Range.Text = IfThenElse( docinf.value("t_receiveraccount") == Account_num, string(arhdoc.rec.sum_natcur :f), null );
                            tbl.Cell(i, 14).Range.Text = IfThenElse( docinf.value("t_receiveraccount") == Account_num, string(arhdoc.rec.sum_receiver :f), null );
                            // 09.10.2013 AAN R-262258-2 END
                            
                            //tbl.Cell(i, 15).Range.Text = arhdoc.rec.ground; //17.08.2012 vihrov I-00224708-2
                            /*zmp 12.11.2012 I-00283247 Стояло неверное условие проверки valType(Payment) != V_UNDEF, сделал PaymentID > 0*/
                            if (PaymentID > 0) //21.08.2012 vihrov I-00240164-1 для старых проводок нет платежей и надо взять с проводки тогда.
                                len = strlen(Payment.ground);//19.11.2012 sokolov I-00284069-3  если в платеже нет основания то берем его из проводки.
                                //if (len == 0)                                                           // 31.07.2013 AAN C-22056-6 если спецвыписка для ЦБ
                                if (len == 0 or Flag_AccState_CB) 
                                    tbl.Cell(i, 15).Range.Text = arhdoc.rec.ground;
                                else
                                    tbl.Cell(i, 15).Range.Text = Payment.ground;  //17.08.2012 vihrov I-00224708-2 основание надо взять с платежа,т.к. выписки для клиента берут основание оттуда, а для налоговой надо сделать также
                                end;
                            else
                                tbl.Cell(i, 15).Range.Text = arhdoc.rec.ground; //21.08.2012 vihrov I-00240164-1 для старых проводок нет платежей и надо взять с проводки тогда.
                            end;
                            i = i + 1;
                            tbl.Rows.Add();
                         end;  
                        tb2 = WordApp.ActiveDocument.Tables.Item(8);
                        /*if (fgBank.is_PRBB)
                          tb2 = WordApp.ActiveDocument.Tables.Item(9);
                        end;*/	
                        /* EVG Остаток должен показываться НА дату начала периода отчёта.
                        tb2.Cell(2, 1).Range.Text  = string(RestA(Account_num, date(Date_report_begin), null, chapter):f);*/
                        /* Коркин И. Н. По заявке I-005730. Для валютного счета значения отображаем в валюте */
                        if ((GetIsoByID(Code, false) == 810) or (GetIsoByID(Code, false) == 643)) //Lavrenov: заявка I-094686. Ваня, ты заср#нец, мог бы и проверить, что возвращает функция
                            tb2.Cell(2, 1).Range.Text  = string(RestA   (Account_num, date(Date_report_begin)-1, null,                  chapter):f);
                            tb2.Cell(2, 2).Range.Text  = string(DebetA  (Account_num, date(Date_report_begin),   date(Date_report_end), Chapter):f);
                            tb2.Cell(2, 3).Range.Text  = string(KreditA (Account_num, date(Date_report_begin),   date(Date_report_end), Chapter):f);
                            tb2.Cell(2, 4).Range.Text  = string(RestA   (Account_num, date(Date_report_end),     null,                  chapter):f); 
                        else// Lavrenov: зачем FIID переводить в ISO, а потом обратно ISO в FIID??? я что-то не понимаю в этой жизни?
                            tb2.Cell(2, 1).Range.Text  = string(RestAC  (Account_num, getFiid(GetIsoByID(Code, false)), date(Date_report_begin)-1,  null,                  chapter):f);
                            tb2.Cell(2, 2).Range.Text  = string(DebetAC (Account_num, getFiid(GetIsoByID(Code, false)), date(Date_report_begin),    date(Date_report_end), Chapter):f);
                            tb2.Cell(2, 3).Range.Text  = string(KreditAC(Account_num, getFiid(GetIsoByID(Code, false)), date(Date_report_begin),    date(Date_report_end), Chapter):f);
                            tb2.Cell(2, 4).Range.Text  = string(RestAC  (Account_num, getFiid(GetIsoByID(Code, false)), date(Date_report_end),      null,                  chapter):f); 
                        end;
                        //SetBookmarkText(RSL_Pages,GetWordObject().ActiveDocument.ActiveWindow.Panes(1).Pages.Count - 1);
                        WordDoc.Bookmarks("Pages").Range.Text = WordDoc.ActiveWindow.Panes(1).Pages.Count - 1;
                        if( IsStandAlone() )
                            WordApp.Visible = TRUE;
                        else
                            WordApp.Visible = TRUE;
                        end; 
                    end; /*if( WordDoc )*/
                end;/*if( WordApp )*/
            end; // KS 17.02.2011 Окончание печати word
            RemProgress();
        end;
        OnError(Err)
        MsgBox(Err.Message,"| at ",Err.Line,"|in ",Err.Module, " ActiveX Err:",Err.AXMes);
    END;

    /*Обработчик диалоговой панели ввода исходных данных для печати*/
    MACRO Event (dlg, cmd, id, key) 
        var NumDep:string = "",
            Dep:string = "";
        var rsc;
            record office(ptoffice);
            record superior(ptoffice);
        var codeno;
        var mess = "~F2~ Продолжить  ~ESC~ Выход ";
        var curSymb:string = "";
        var blnc:string = "";
        var Party = TRecHandler ("party.dbt");
        if(cmd == DLG_INIT)
            GetNalOrg(Client, NalOrgName, NalOrgAddr);
            dlg.rec.Account_num       = Acc;
            dlg.rec.Date_report_begin = {curdate};
            dlg.rec.Date_report_end   = {curdate};
            dlg.rec.Request_date      = {curdate};
            dlg.rec.Request_no        = 1;
            dlg.rec.NameIFNS          = NalOrgName;
            dlg.rec.AdresIFNS         = NalOrgAddr;
            UpdateFields(dlg); 
        end;
        if (cmd == DLG_SETFOCUS)
            message(mess);
        end;
        if ((cmd == DLG_REMFOCUS))
            if (FldName(dlg,id) == "Account_num")
                blnc = GetBalanceByAccount(dlg.rec.Account_num, Chapter, Code);
                curSymb = substr(blnc, 1, 3);
                if (StrLen(dlg.rec.Account_num) < 20)
                    MsgBox("Длина счета менее 20 символов");
                    return CM_CANCEL;
                elif (not GetAccount(StrSubst(dlg.rec.Account_num, "'", "")))
                    MSgBox("Счет отсутствует в справочнике лицевых счетов");
                    return CM_CANCEL;
                /* Коркин по заявке I-036961, I-039108 */
                elif (not (((int(curSymb) >= 401) and (int(curSymb) <= 408)) or (curSymb == "438") or (curSymb == "421") or (blnc == "30109"))) 
                    MsgBox("Балансовый счет первого порядка должен быть в диапазоне 401 - 408 или 438, 421, 30109");
                    return CM_CANCEL;
                else
                    Client = GetClientByAccount(dlg.rec.Account_num, Chapter, Code);
                    Branch = GetBranchByAccount(dlg.rec.Account_num, Chapter, Code);
                end;
            elif (FldName(dlg,id) == "Date_report_begin")
                if ( dlg.rec.Date_report_begin > dlg.rec.Date_report_end ) 
                    MsgBox("Дата начала больше даты окончания отчетного периода");
                    return CM_CANCEL;
                elif ( dlg.rec.Date_report_begin > {curdate} )
                    MsgBox("Дата начала больше даты текущего операционного дня"); 
                    return CM_CANCEL;
                end;
            elif (FldName(dlg,id) == "Date_report_end") 
                if ( dlg.rec.Date_report_end < dlg.rec.Date_report_begin )
                    MsgBox("Дата окончания меньше даты начала отчетного периода"); 
                    return CM_CANCEL;
                elif ( dlg.rec.Date_report_end > {curdate} )
                    MsgBox("Дата окончания больше даты текущего операционного дня");
                    return CM_CANCEL;
                end;
            elif (FldName(dlg,id) == "Request_date")
                if ( dlg.rec.Request_date > {curdate} )
                    MsgBox("Дата запроса больше даты текущего операционного дня");
                    return CM_CANCEL;
                end;
            elif (FldName(dlg,id) == "Request_no")
                if (dlg.rec.Request_no == "")
                    MsgBox("Не указан номер поступившего запроса ИФНС");
                    return CM_CANCEL;
                end;
            end;
            UpdateFields(dlg); 
        end;
        if (cmd == DLG_KEY)
            if (KEY == KEY_ESC)
                return CM_CANCEL;
            elif ( KEY == KEY_F2 )
			debugbreak;
                blnc = GetBalanceByAccount(dlg.rec.Account_num, Chapter, Code);
                curSymb = substr(blnc, 1, 3);
                /* Коркин по заявке I-036961, I-039108 */
                if (not (((int(curSymb) >= 401) and (int(curSymb) <= 408)) or (curSymb == "438") or (curSymb == "421") or (blnc == "30109")))
                    MsgBox("Балансовый счет первого порядка должен быть в диапазоне 401 - 408 или 438, 421, 30109");
                    return CM_IGNORE;
                elif (dlg.rec.Request_no == "")
                    MsgBox("Не указан номер поступившего запроса ИФНС");
                    return CM_IGNORE;
                else
                    Account_num         = StrSubst(dlg.rec.Account_num, "'", "");
                    Date_report_begin   = dlg.rec.Date_report_begin;
                    Date_report_end     = dlg.rec.Date_report_end; 
                    Request_date        = dlg.rec.Request_date;
                    Request_no          = dlg.rec.Request_no;
                    NalOrgName          = dlg.rec.NameIFNS;
                    NalOrgAddr          = dlg.rec.AdresIFNS;
                    /*02/09/2008 Новиков С. С. добавил возможность формирования отчета только при корректных значениях*/
                    if ((StrLen(Account_num) == 20) 
                            and (dlg.rec.Date_report_begin <= dlg.rec.Date_report_end)
                            and (dlg.rec.Date_report_begin <= {curdate})
                            and (dlg.rec.Date_report_end >= dlg.rec.Date_report_begin)
                            and (dlg.rec.Date_report_end <= {curdate}) 
                            and (GetAccount(StrSubst(dlg.rec.Account_num, "'", "")))
                            and (strlen(dlg.rec.Request_no) != 0)
                            and (dlg.rec.Request_date <= {curdate}) )
                        Return CM_SAVE;
                    else
                        MsgBox("Не все поля корректны!");
                    end;
                end;
            elif ( (KEY == KEY_ENTER) and (FldName(dlg,id) == "Request_no") )
                SetFocus(dlg, 0);
                Return CM_IGNORE;
            elif (KEY == KEY_F3) 
                if(FldName(dlg,id) == "NameIFNS")
                    if (ListPT(party,PTCK_ALL, codeno, PTLIST_TAXINSTITUTE, 0, PTCK_ALL))
                        rsc = execSQLselect("select t.t_shortname as Name,a.t_adress as Adress from dparty_dbt t,dadress_dbt a where t.t_partyid = a.t_partyid" +
                                            " and t.t_partyid in (select c.t_objectid from dobjcode_dbt c where c.t_code = '" + codeno + "')");
                        if (rsc.movenext())
                            dlg.rec.NameIFNS  = rsc.value("Name");
                            dlg.rec.AdresIFNS = rsc.value("Adress");
                            UpdateFields(dlg);
                        end;
                    end;
                end;
            end;
        end;
    END;

    if ( RunDialog(dlg, "Event"))
        if (Account_num != "")
            PrintSprIFNS();
        end;
    end;
END;
