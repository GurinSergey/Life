/*******************************************************************************/
/*  RS-Bank 6.0                                          R-Style Software Lab  */
/*                                                                             */
/*  File Name   : fns_bv.mac                                                   */
/*  Create      : 01.12.2011                                                   */
/*  Programmer  : Chesnokov D.S.                                               */
/*  Description : Макрос генерации выписки по операциям на счете, через        */
/*                пользовательскую функциональность Ctrl+Z                     */
/*  Rev.        : 1.01 Chesnokov D. 27.12.2011 Изменена обработка директорий   */
/*                для формирования файлов выгрузки                             */
/*  Изменен     : 29.12.2011 Зленко М.П. по заявкам I-00138125, I-00137911,    */
/*                I-00138309, I-00138442, I-00139468, I-00139469, I-00142694,  */
/*                I-00144136, I-00144642, I-00153123, I-00153708               */
/*              : 18.01.2012 Чесноков Д.С.по заявке С-8297                     */
/*              : 09.02.2012 Чесноков Д.С. Реализован механизм разделения      */
/*                файлов выписки на размер указанный в настройке               */
/*              : 09.02.2012 Чесноков Д.С. Исправлено выведение оборотов при   */
/*                периоде учитывающем 5.0                                      */
/*              : 13.02.2012 Чесноков Д.С. Исправлено формирование реквизита   */
/*                ВидДок, теперь реквизит не может быть пустым                 */
/*              : 20.02.2012 Чесноков Д.С. убрано упоминание wlreq             */
/*              : 02.05.2012 Chesnokov D.S. Запись в лог по C-10486            */
/*              : 06.07.2012 Chesnokov D.S. По запросу I-00217839 исправил     */
/*                формирование НаимБП                                          */
/*              : 06.07.2012 Chesnokov D.S. Добавлены проверки на непечатные   */
/*                в наименовании плательщика\получателя и основании платежа    */
/*              : 11.07.2012 Chesnokov D.S. Заявка I-00137708 при выборе НО    */
/*               в скролинге отображается код вида 28                          */
/*              : 27.07.2012 Chesnokov D.S. I-00228058 если нет наименования в */
/*               в платеже, ставим точку                                       */
/*              : 01.11.2012 Chesnokov D.S. I-00278072 переписан механизм      */
/*               определения конца выборки  при разбивке файлов                */
/*              : 09.04.2013 Chesnokov D.S. I-00353655 привел длинну строки    */
/*                НаимПП в соответствие с форматом 160 символов                */
/*              : 04.06.2013 Chesnokov D.S. C-24079 изменено определение       */
/*                суммы документа, корреспондирующего счета и основания.       */
/*                Если проводка была выгруженна из внешней системы, то данные  */
/*                выбираем из провоки.                                         */
/*******************************************************************************/

import BankInter, "globals.mac", "repforms.mac", RSD, "likepy.mac", Календарь, PsInter;
//Gurin S. 30.09.2014 R-461321-2
import "wlmnstls.mac", FiInter, Reporting, "FNS_lib.mac", rsexts, lib_fg, Currinter;

private var path, TxtFileDir, resname = "FNS_panel.lbr", pathfile, ExpPath, ДолжнПрБ, ФИОПрБ;
private var refnumber, errCode, docnumber, CodeClient, CodeNO, СчетаБанка, ДатаПерехода, РазмерВыписки;
private var dlg_bv;
private var persn;
var str = TArray();
var stroka;
var EOF:bool = false; // Признак конца выборки
  
macro ПрочитатьНастройки
  
  GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR", V_STRING, TxtFileDir, errCode);
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки: BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR");
    return false;
  end;
  
  GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",V_STRING, path, errCode);
  pathfile = FindPath(resname,path);
  if (not pathfile)
    msgbox("Не найдена LBR с именем " + resname);
    exit();
  end;
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки: BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR");
    exit();
  end;

  GetRegistryValue("PS\\REQOPENACC\\OPERATION\\РЕФЕРЕНС_СПРАВКАОСТ", V_INTEGER, refnumber, errCode);
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки: PS\\REQOPENACC\\OPERATION\\РЕФЕРЕНС_СПРАВКАОСТ");
    return false;
  end;
  
  GetRegistryValue("PS\\REQOPENACC\\OPERATION\\СОЗДАНИЕ ИНФ СООБЩЕНИЙ ВРУЧНУЮ\\ДИРЕКТОРИЯ ВЫГРУЗКИ", V_STRING, ExpPath, errCode);
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки: PS\\REQOPENACC\\OPERATION\\СОЗДАНИЕ ИНФ СООБЩЕНИЙ ВРУЧНУЮ\\ДИРЕКТОРИЯ ВЫГРУЗКИ");
    return false;
  end;  
    
  GetRegistryValue("PS\\REQOPENACC\\OPERATION\\СПРАВКИ_ИФНС_ДОЛЖ", V_STRING, ДолжнПрБ, errCode);
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки: PS\\REQOPENACC\\OPERATION\\СПРАВКИ_ИФНС_ДОЛЖ");
    return false;
  end;
  
  GetRegistryValue("PS\\REQOPENACC\\OPERATION\\СПРАВКИ_ИФНС_ФИО", V_STRING, ФИОПрБ, errCode);
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки: PS\\REQOPENACC\\OPERATION\\СПРАВКИ_ИФНС_ФИО");
    return false;
  end;
  
  //Получаем маски счетов банка
  GetRegistryValue("PS\\REQOPENACC\\СЧЕТА БАНКА", V_STRING, СчетаБанка, errCode);
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки: \"PS\\REQOPENACC\\СЧЕТА БАНКА\"");
    return false;
  end;

  //Получаем дату перехода банка
  GetRegistryValue("PS\\REQOPENACC\\OPERATION\\ДАТА ПЕРЕХОДА", V_STRING, ДатаПерехода, errCode);
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки: PS\\REQOPENACC\\OPERATION\\ДАТА ПЕРЕХОДА");
    return false;
  end;

  GetRegistryValue("PS\\REQOPENACC\\OPERATION\\РАЗМЕР_ФАЙЛА_ВЫПИСКИ", V_STRING, РазмерВыписки, errCode, false, {oper});
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки: PS\\REQOPENACC\\OPERATION\\РАЗМЕР_ФАЙЛА_ВЫПИСКИ");
    return false;
  end;
  
  dlg_bv = TRecHandler("p_fnsbv", pathfile, True);
  persn = Tbfile("persn.dbt", "r");
  
  return true;
end;
  
private macro InsertStrTmp(Num, Str, Flush : bool)

  var ins : RsbSQLInsert;
  var stat = true;

  if (Flush == null)
    Flush = false;
  end;

  if( Strlen(Str(Str.Size-1)) > 300 )
    debugbreak;
  end;

  if ((Str.Size == 10000) or ((Flush) and (Str.Size > 0)))
  
    ins = RsbSQLInsert("Insert into USR_VIPISKA_TMP values (0, "+ Num +", ?)", 1, Str.Size);
    ins.AddParam( V_STRING, Str, 400 );
    stat = ins.Insert();
    Str.Size = 0;
    
  end;
  
  if (not stat)
    msgbox("Ошибка вставки данных в пользовательскую таблицу USR_VIPISKA_TMP.");
  end;

end;
  
private macro strYYYYMMDD(str)

  str = string(str);
  
  var dd = trim(string(substr(str, 1, 2)));
  var mm = string(substr(str, 4, 2));
  var yyyy = string(substr(str, 7, 4));
  
  if (StrLen(DD) < 2)
    dd = "0" + dd;
  end;
  
  return string(yyyy + mm + dd);
  
end;


private macro GetAddrSoun(PartyID, Adress, Soun)

  var select = RsdCommand(" SELECT DECODE (adr.t_adress, CHR (1), CHR (0), adr.t_adress) AS t_adress, "
                          "        NVL (code.t_code, '0000') AS t_soun " +
                          "   FROM dadress_dbt adr, dobjcode_dbt code " +
                          "  WHERE code.t_objectid = adr.t_partyid(+) " +
                          "    AND adr.t_partyid = :Partyid " +
                          "    AND code.t_codekind(+) = 28 " +
                          "    AND code.t_objecttype(+) = 3 " +
                          "    AND code.t_state(+) = 0 ");
                          
      select.AddParam("PartyID", RSDBP_IN, PartyID);
  var rs = RsdRecordSet(select);
  
  if (rs.Movenext)
    SetParm(1, rs.value(0));
    SetParm(2, rs.value(1))
  else
    SetParm(1, "");
    SetParm(2, "0000");
  end;
  
end;

private macro GetPartyName(PartyId)
  
  var select = RsdCommand(" Select pt.t_name from dparty_dbt pt where t_partyid = :partyid");
      select.AddParam("PartyID", RSDBP_IN, PartyID);
  
  var rs = RsdRecordSet(select);
  
  if (rs.Movenext)
    return rs.value(0);
  else
    return "Не удалось определить имя клиента";
  end;
  
end;

private macro Get_Bank_Name_By_BIC(bic)
  var rs, str;
  if(strlen(trim(bic))== 9)
    str = "SELECT t_name " +
          "  FROM dparty_dbt t, dobjcode_dbt o " +
          " WHERE t.t_partyid = o.t_objectid " +
          "   AND o.t_objecttype = 3 " +
          "   AND o.t_codekind = 3 " +
          "   AND o.t_state = 0 " +
          "   AND o.t_code = '"+trim(bic)+"' ";
    rs = trsbdataset(str);
    if(rs and rs.movenext)
       return rs.t_name;
    end;  
  end;
  return {Name_Bank};
end;

private macro get_documents(acc, fiid, date_begin, date_end)

  var docInfoServer;
  var tablename, rs, cacheQueryText, str;

  docInfoServer = RepDocInfoServer(PTCK_ALL, 0); // создание сервера (0 - по платежам)

  tablename = "dacctrn_dbt";

  if (date(ДатаПерехода) > date_begin)
     //zmp 16.06.2014 поменял текст инфо-сообщения
    if(_bank.is_SLD)
       msgBox("Дата начала выписки меньше даты перехода Банка на RS-Bank v.6.| Проверьте наличие операций в Диасофт 5NT")
    else
       msgbox("Дата начала выписки меньше даты перехода Банка на RS-Bank v.6 | Проверьте наличие операций в RS-Bank v.5");
    end;
    date_begin = date(ДатаПерехода);
  end;

  cacheQueryText = "SELECT " + docInfoServer.getFieldListasString() +
                   " FROM " + tablename +
                   " where ( t_account_payer = '"+acc+"' " +
                   " OR t_account_receiver = '"+acc+"') " +
                   " AND T_STATE = 1 " + /*VDN 14.04.2015 R-568830-2*/ 
                   " AND t_date_carry BETWEEN TO_DATE ('"+date_begin+"', 'dd.mm.yyyy') " +
                   " AND TO_DATE ('"+date_end+"', 'dd.mm.yyyy') ";
  if ((fiid != 0) and (_bank.is_SLD))
      cacheQueryText = cacheQueryText + " AND T_RATE != 0 "
  end;
 
  docInfoServer.cacheInformation(cacheQueryText); // кеширование информации (сбор инф. по проводкам)

  str =  " SELECT decode(t.t_payeraccount,'"+acc+"',1,2) as t_sort,                              " +
         "        t.t_autokey as t_acctrnid,                                                     " +
         "        DECODE(                                                                        " +
         "         (select count(0) from usr_pmdocs where acctrnid = t.t_autokey and paymentid = " +
         "          t.t_paymentid), 0, t.t_payeraccount, decode(t.t_payeraccount,'"+acc+"',      " +
         "          t.t_payeraccount, doc.t_account_payer)) as t_payeraccount,                   " + 
         "        regexp_replace(t.t_payername, '[' || chr(10) || chr(11) || chr(13) ||':]+', '') as t_payername, " +
         "        t.t_payercodekind as t_payercodekind,                                          " +
         "        t.t_payerfiid as t_payerfiid,                                                  " +
         "        DECODE(                                                                        " +
         "         (select count(0) from usr_pmdocs where acctrnid = t.t_autokey and paymentid = " +
         "          t.t_paymentid), 0, t.t_receiveraccount, decode(t.t_payeraccount,'"+acc+"',   " +
         "          doc.t_account_receiver, t.t_receiveraccount )) as t_receiveraccount,         " +
         "        regexp_replace(t.t_receivername, '[' || chr(10) || chr(11) || chr(13) ||':]+', '') as t_receivername, " +
         "        t.t_receiverfiid as t_receiverfiid,                                            " +
         "        t.t_receiveramount as t_receiveramount,                                        " +
         "        t.t_paymentid as t_paymentid,                                                  " +
         "        t.t_fiid as t_fiid,                                                            " +
         "        DECODE(                                                                        " +
         "         (select count(0) from usr_pmdocs where acctrnid = t.t_autokey and paymentid = " +
         "          t.t_paymentid), 0, t.t_amount, DECODE(t.t_payeraccount, '"+acc+"', doc.t_sum_payer, doc.t_sum_receiver)) as t_amount, " +
         "        t.t_date_carry as t_date_carry,                                                " +
         "        regexp_replace(t.t_numb_document, '^[   ]+', '') as t_numb_document, " + 
         "        t.t_shifr_oper as t_shifr_oper,                                                " +
         "        regexp_replace(DECODE(                                                         " +
         "                              (select count(0) from usr_pmdocs where                   " +
         "                               acctrnid = t.t_autokey and paymentid = t.t_paymentid),  " +
         "                       0, t.t_ground, doc.t_ground), '[' || chr(10) || chr(11) || chr(13) ||':]+', '') as t_ground, " +
         "        t.t_purpose as t_purpose                          " +
         "  FROM " + docInfoServer.getCacheTableName() + " t, " + tablename + " doc              " +
         " WHERE t.t_autokey = doc.t_acctrnid order by t.t_date_carry, t_sort, t_payeraccount, t_amount "; 

  rs = TRsbDataset(str, RSDVAL_CLIENT, RSDVAL_STATIC);
  debugbreak;
  return rs;
end;


private macro GetClientAccounts(clientid, BegDate, EndDate, _account)
var select, end_date, cl_acc_kinds, errcode, i, isfirst;

  GetRegistryValue("PS\\REQOPENACC\\OPERATION\\365-П\\ТИПЫ СЧЕТОВ", V_STRING, cl_acc_kinds, errCode);
  if ( errCode > 0 )
    msgbox("Проверьте наличие настройки: \"PS\\REQOPENACC\\OPERATION\\ТИПЫ_СЧЕТОВ\"");
    return false;
  end;

  select =  " SELECT t_account, t_code_currency t_fiid, t_chapter, 0 t_state" +
            "   FROM daccount_dbt " +
            "  WHERE t_client = :ClientID1" +
           // "    AND t_account LIKE '_____810%' " + zmp 08.04.2014 R-360220
            "    AND t_open_date  <=  to_date('" + EndDate+ "','dd.mm.yyyy') ";

  if (valtype(_account) != v_undef)
     select = select + " AND t_account ='" +_account+ "' " ;
  end;

  select = select + " AND (t_Close_Date >= to_date('" + BegDate + "','dd.mm.yyyy') " +
            "   OR t_Close_Date = to_date('01.01.0001','dd.mm.yyyy')) " +
            "   AND t_chapter = 1 " +
            "   AND instr(t_type_account,'Н') = 0 " +
            "   AND instr(t_type_account,'М') = 0 " +
            "   AND instr(t_type_account,'U') = 0 " ;
  i= 0;
  isfirst = true;
  while (i < strlen(cl_acc_kinds))
      if(isfirst)
          select = select + " AND (instr(t_type_account,'"+substr(cl_acc_kinds,i+1,1)+"') != 0 "; 
          isfirst = false;
      else 
          if (i+1 != strlen(cl_acc_kinds))
              select = select + " or instr(t_type_account,'"+substr(cl_acc_kinds,i+1,1)+"') != 0 " ;
          else
              select = select + " or instr(t_type_account,'"+substr(cl_acc_kinds,i+1,1)+"') != 0 )" ;
          end;
      end;
  i = i+1;
  end;

  var params = makeArray( SQLParam("ClientID1", clientid) );
        
  var rs = execSQLselect( select, params );
  return rs; 
end;

private macro getPaymentIDLinkedWithCarry(CarryID : integer):integer
  var arhdoc_tablename = "dacctrn_dbt";
  var query = "select pd.t_PaymentID " +
              "  from dpmdocs_dbt pd, " + arhdoc_tablename + " ad " +
              " where ad.t_AccTrnID = " + CarryID +
              "   and pd.t_AccTrnID = ad.t_AccTrnID ";
  var rs:RsdRecordset = execSQLselect(query);
  if (rs and rs.moveNext() )
    return rs.value(0);
  end;
  return 0;
end;

/*Создание файла информационного сообщения*/ 

macro CreateBV(dlg_bv, Account, Client, FiID)
  
  var INN, KPP;
  var stat, SurName = "", Officer = "", Phone = "";
  var INNClient, KPPClient;
  var rs_doc, query, progress;
  var len = 0, Num = 1;
  
  var Payment:object;
  /*Очистим временную таблицу*/
  TruncateTempTable();
  
  stat = PutPersData(SurName, null, null, Officer, Phone );

  while(stat == -27)
    msgbox("Выберите ответственного сотрудника");
     stat = PutPersData(SurName, null, null, Officer, Phone );
  end;

  macro Service_Part(Num)
  
    /*ИдФайл*/
    SplitFullInn(GetFullINN({OurBank}), INN, KPP);

    stroka = "ИдФайл:" + INN + "**" + KPP + strYYYYMMDD({curdate}) + dlg_bv.rec.NumSpr;
    str(str.size) = stroka;
    len = strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  
    /*ТипИнф*/
    stroka = "ТипИнф:ОПЕРАЦИИПОСЧ";
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  
    /*ВерсПрог*/
    stroka = "ВерсПрог:RS-Bank V.6";
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  
    /*ТелОтпр*/
    stroka = "ТелОтпр:"+Phone;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  
    /*ДолжнОтпр*/
    stroka = "ДолжнОтпр:"+Officer;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  
    /*ФамОтпр*/
    stroka = "ФамОтпр:"+SurName;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  
    /*КолДок*/
    stroka = "КолДок:1";
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  
    /*НомЧасти*/
    stroka = "НомЧасти:" + Num;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*ВерсФорм*/
    stroka = "ВерсФорм:2.01";
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  
    /*Конец блока*/
    stroka = "###";
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  
    /*Конец фрагмента*/
    stroka = "@@@";
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  end;
  
  macro Information_Part()
    
    /*ИдДок*/
    stroka = "ИдДок:" + execStoredFunc( "sys_guid", V_STRING );
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
    
    /*НомВыпис*/
    stroka = "НомВыпис:" + dlg_bv.rec.NumSpr;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
    
    /*ИННКО*/
    stroka = "ИННКО:" + INN;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*КППКО*/
    stroka = "КППКО:" + KPP;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*БИК*/
    stroka = "БИК:" + {MFO_Bank};
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*НаимКО*/
    stroka = "НаимКО:" + {Name_Bank};
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*НомФ*/
    stroka = "НомФ:0";
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*НомЗапр*/
    stroka = "НомЗапр:" + dlg_bv.rec.NumInFile;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*ДатаЗапр*/
    stroka = "ДатаЗапр:" + ДатаДДpММpГГГГ(dlg_bv.rec.CurrentDateIN);
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*КодНО*/
    stroka = "КодНО:" + NalSounCode;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
    
    SplitFullInn(GetFullINN(Client), INNClient, KPPClient);
    
    /*ИНННП*/
    stroka = "ИНННП:" + INNClient;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
    
    if ((strLen(INNClient) == 5) or (Strlen(INNClient) == 10))
      /*КППНП*/
      stroka = "КППНП:" + KPPClient;
      str(str.size) = stroka;
      len = len + strlen(stroka) + 2;
      InsertStrTmp(Num, str);
      
      /*НаимНП*/
      stroka = "НаимНП:" + substr(GetPartyName(Client), 1, 160);
      str(str.size) = stroka;
      len = len + strlen(stroka) + 2;
      InsertStrTmp(Num, str);
    end;
  
    if (strLen(INNClient) == 12)
      persn.rec.PersonID = Client;
      persn.GetEQ();
      /*ФИОИП*/
      stroka = "ФИОИП:" + persn.rec.Name1 + "," + persn.rec.Name2 + "," + persn.rec.Name3;
      str(str.size) = stroka;
      len = len + strlen(stroka) + 2;
      InsertStrTmp(Num, str);
    end;
  
    /*ДолжнПрБ*/
    stroka = "ДолжнПрБ:" + ДолжнПрБ;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  
    /*ФИОПрБ*/
    stroka = "ФИОПрБ:" + РазделитьЗапятымиФИО(ФИОПрБ);
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  
    /*ДатаСправ*/
    stroka = "ДатаСправ:" + ДатаДДpММpГГГГ({Curdate});
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  
    /*ДатаСооб*/
    stroka = "ДатаСооб:"+ДатаДДpММpГГГГ(Date());
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
  
    /*Конец блока*/
    stroka = "###";
    len = len + strlen(stroka) + 2;
    str(str.size) = stroka;
    InsertStrTmp(Num, str);

  end;
  
  macro Account_Statement(rs_acc)
    
    /*НомСч*/
    stroka = "НомСч:" + rs_acc.value("t_Account");
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*ВалСч*/
    stroka =  "ВалСч:" + ПолучитьКодФинИн_usr(rs_acc.value("t_FIID"));
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*ДатаНачала*/
    stroka = "ДатаНачала:" + ДатаДДpММpГГГГ(dlg_bv.rec.BeginDate );
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
    
    /*ДатаКонца*/
    stroka = "ДатаКонца:" + ДатаДДpММpГГГГ(dlg_bv.rec.EndDate);
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    if (date(ДатаПерехода) > dlg_bv.rec.BeginDate)
      dlg_bv.rec.BeginDate = date(ДатаПерехода);
    end;

    /*ОстатНач*/
    if(int(rs_acc.value("t_FIID")) == 0)
      stroka = "ОстатНач:" + string( resta( rs_acc.value("t_Account"), dlg_bv.rec.BeginDate-1, rs_acc.value("t_chapter")));
      str(str.size) = stroka;
      len = len + strlen(stroka) + 2;
      InsertStrTmp(Num, str);
    else
      stroka = "ОстатНач:" + string( restac( rs_acc.value("t_Account"), rs_acc.value("t_FIID"), dlg_bv.rec.BeginDate-1, rs_acc.value("t_chapter")));
      str(str.size) = stroka;
      len = len + strlen(stroka) + 2;
      InsertStrTmp(Num, str);
    end;

    /*СуммаДеб*/
    var sum = $0;
    if(rs_acc.value("t_FIID") == 0)
      sum = debeta(rs_acc.value("t_Account"), dlg_bv.rec.BeginDate, dlg_bv.rec.EndDate, rs_acc.value("t_chapter"));
    else
      sum = debetac(rs_acc.value("t_Account"), rs_acc.value("t_FIID"), dlg_bv.rec.BeginDate, dlg_bv.rec.EndDate, rs_acc.value("t_chapter"));
    end;
    stroka = "СуммаДеб:" + string(sum);
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*СуммаКред*/
    if(rs_acc.value("t_FIID") == 0)
      sum = kredita(rs_acc.value("t_Account"), dlg_bv.rec.BeginDate, dlg_bv.rec.EndDate, rs_acc.value("t_chapter"));
    else
      sum = kreditac(rs_acc.value("t_Account"), rs_acc.value("t_FIID"), dlg_bv.rec.BeginDate, dlg_bv.rec.EndDate, rs_acc.value("t_chapter"));
    end;
    stroka = "СуммаКред:" + string(sum);
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
    
    /*ОстатКон*/
    if(int(rs_acc.value("t_FIID")) == 0)
      stroka = "ОстатКон:" + string( resta( rs_acc.value("t_Account"), dlg_bv.rec.EndDate, rs_acc.value("t_chapter")));
      str(str.size) = stroka;
      len = len + strlen(stroka) + 2;
      InsertStrTmp(Num, str);
    else
      stroka = "ОстатКон:" + string( restac( rs_acc.value("t_Account"), rs_acc.value("t_FIID"), dlg_bv.rec.EndDate-1, rs_acc.value("t_chapter")));
      str(str.size) = stroka;
      len = len + strlen(stroka) + 2;
      InsertStrTmp(Num, str);
    end;
    
    /*Конец блока*/
    stroka = "###";
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

  end;
  
  macro Operation_part(rs_doc, rs_acc)

    var acctrn : object;

    var AccountClient = 0;
    var tmpstr = "", rs, FullINN = "";
    
    var PaymentID = getPaymentIDLinkedWithCarry(rs_doc.t_AccTrnID);
    
    private record party(party);
    private record Acc(account);
    ClearRecord( Acc );
    
    if (PaymentID > 0)
        Payment = RsbPayment(PaymentID);  
      //Lavrenov I-00135380 Для конверсии тянем данные из проводки
      if(rs_doc.t_purpose == "Конверсия валюты")
        acctrn = Tbfile("acctrn.dbt");
        acctrn.rec.AccTrnId = rs_doc.t_AccTrnID;
        GetEQ(acctrn);
      end;
    else 
      acctrn = Tbfile("acctrn.dbt");
      acctrn.rec.AccTrnId = rs_doc.t_AccTrnID;
      GetEQ(acctrn);

      if(rs_doc.t_purpose == "Конверсия валюты")
        if (rs_doc.t_payeraccount == rs_acc.value("t_Account"))
          ПолучитьСчет( rs_doc.t_receiverfiid, acctrn.rec.Account_Receiver, Acc );
        else
          ПолучитьСчет( rs_doc.t_payerfiid, acctrn.rec.Account_Payer, Acc );
        end;
      else
        if (rs_doc.t_payeraccount == rs_acc.value("t_Account"))
          ПолучитьСчет( acctrn.rec.FIID_Receiver, acctrn.rec.Account_Receiver, Acc );
        else
          ПолучитьСчет( acctrn.rec.fiid_payer, acctrn.rec.Account_Payer, Acc );
        end;
      end;
      AccountClient = Acc.Client;
    end;
    
    /*ДатаОпер*/
    stroka = "ДатаОпер:" + ДатаДДpММpГГГГ(date(rs_doc.t_Date_carry));
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*ВидДок*/
    if(rs_doc.t_purpose == "Конверсия валюты")
      stroka = "ВидДок:" + acctrn.rec.Shifr_Oper;
      str(str.size) = stroka;
      len = len + strlen(stroka) + 2;
      InsertStrTmp(Num, str);
    else
      if ((rs_doc.t_Shifr_Oper == null) or (rs_doc.t_Shifr_Oper == "") )
        acctrn = Tbfile("acctrn.dbt");
        acctrn.rec.AccTrnId = rs_doc.t_AccTrnID;
        GetEQ(acctrn);

        stroka = "ВидДок:" + acctrn.rec.Shifr_Oper;
        str(str.size) = stroka;
        len = len + strlen(stroka) + 2;
        InsertStrTmp(Num, str);
      else
        stroka = "ВидДок:" + rs_doc.t_Shifr_Oper;
        str(str.size) = stroka;
        len = len + strlen(stroka) + 2;
        InsertStrTmp(Num, str);
      end;
    end;
    
    /*НомДок*/
    var DocNumLen = strLen(rs_doc.t_Numb_document);
    if (DocNumLen <= 6)
      stroka = "НомДок:" + rs_doc.t_Numb_document;
    else // последние 6 символов
      stroka = "НомДок:" + subStr(rs_doc.t_Numb_document, DocNumLen - 5);
    end;
    
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*ДатаДок*/
    if (PaymentID > 0)
      stroka = "ДатаДок:" + ДатаДДpММpГГГГ(Payment.Date);
    else
      stroka = "ДатаДок:" + ДатаДДpММpГГГГ(acctrn.rec.Date_Carry);
    end;
    
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
    
    /*НомКорСч*/
    var bankdprt = Tbfile("bankdprt.dbt");
    if (PaymentID > 0)
      if (rs_doc.t_payeraccount == rs_acc.value("t_Account"))
        if (Payment.ReceiverCorrAccNostro)
          stroka = "НомКорСч:" + Payment.ReceiverCorrAccNostro;
          str(str.size) = stroka;
          len = len + strlen(stroka) + 2;
          InsertStrTmp(Num, str);
        else
          stroka = "НомКорСч: ";
          str(str.size) = stroka;
          len = len + strlen(stroka) + 2;
          InsertStrTmp(Num, str);
        end;
      else
        if (Payment.PayerCorrAccNostro)
          stroka = "НомКорСч:" + Payment.PayerCorrAccNostro;
          str(str.size) = stroka;
          len = len + strlen(stroka) + 2;
          InsertStrTmp(Num, str);
        else
          stroka = "НомКорСч: ";
          str(str.size) = stroka;
          len = len + strlen(stroka) + 2;
          InsertStrTmp(Num, str);
        end;
      end;
    else
      if(rs_doc.t_purpose == "Конверсия валюты")
        stroka = "НомКорСч:" + {CORAC_Bank};
        str(str.size) = stroka;
        len = len + strlen(stroka) + 2;
        InsertStrTmp(Num, str);
      else
        stroka = "НомКорСч: ";
        str(str.size) = stroka;
        len = len + strlen(stroka) + 2;
        InsertStrTmp(Num, str);
      end;  
    end;

    /*НаимБП*/
    if (PaymentID > 0)
      if (rs_doc.t_payeraccount == rs_acc.value("t_Account"))
        if (Payment.ReceiverBankName == "")
          stroka = "НаимБП:" + Get_Bank_Name_By_BIC(Payment.ReceiverBankID);
        else
          stroka = "НаимБП:" + Payment.ReceiverBankName;
        end;
      else
        if (Payment.PayerBankName == "")
          stroka = "НаимБП:" + Get_Bank_Name_By_BIC(Payment.PayerBankID);
        else
          stroka = "НаимБП:" + Payment.PayerBankName;
        end;
      end;
    else
      if(rs_doc.t_purpose == "Конверсия валюты")
        stroka = "НаимБП:" + {Name_Bank};
      else
        ПолучитьСубъекта({OurBank}, party);
        stroka = "НаимБП:" + party.Name;
      end;
    end;

    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*БИКБП*/
    if (PaymentID > 0)
      if (rs_doc.t_payeraccount == rs_acc.value("t_Account"))
        tmpstr = GetPartyCode(Payment.ReceiverBankID, PTCK_BIC);
        if (tmpstr == "")
          tmpstr = subStr(Payment.ReceiverBankCode, 1, 9);
        end;                
      else
        tmpstr = GetPartyCode(Payment.PayerBankID, PTCK_BIC);
        if (tmpstr == "")
          tmpstr = subStr(Payment.PayerBankCode, 1, 9);
        end;                
      end;
    else
      tmpstr =  GetPartyCode({OurBank}, PTCK_BIC);
    end;
    if (tmpstr == "")
      if(rs_doc.t_purpose == "Конверсия валюты")
        tmpstr = {MFO_Bank};
      else
        tmpstr = "000000000";
      end;
    end;
    
    stroka = "БИКБП:" + tmpstr;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
    
    tmpstr = "";  FIID = ALLFININSTR;
    if (PaymentID > 0)
      if (rs_doc.t_payeraccount == rs_acc.value("t_Account"))
        tmpstr = Payment.ReceiverAccount;
        FIID = Payment.ReceiverFIID;
        //Lavrenov I-00135380 если счет не указан в платеже, берем из проводки.
        if(tmpstr == "")
          query = "select t_account_receiver ";
          query = query + "from dacctrn_dbt ";
          query = query + "where t_acctrnid = " +  rs_doc.t_AccTrnID;

          rs = execSQLselect(query);
          if(rs and rs.moveNext())
            tmpstr = rs.value(0);
          end;
        elif(strlen(tmpstr) > 20) // Lavrenov I-00134175 Если длинна счета > 20 символов: берем из проводки, иначе режем счет до 20 символов                 
          query = "select t_account_receiver ";
          query = query + "from dacctrn_dbt ";
          query = query + "where t_acctrnid = " +  rs_doc.t_AccTrnID;

          rs = execSQLselect(query);
          if (rs and rs.moveNext())
            tmpstr = rs.value(0);
          else 
            tmpstr = substr(tmpstr,1,20); 
          end;
        else //Проверим а не пришла ли провока из внешней системы
          query = " select receiver_account from usr_pmdocs where acctrnid = " + rs_doc.t_AccTrnID +
                  " and paymentid = " + PaymentID;
          rs = execSQLselect(query);
          if (rs and rs.moveNext())
             tmpstr = rs.value(0);
          end;
        end;
      else
        tmpstr = Payment.PayerAccount;
        FIID = Payment.PayerFIID;
        //Lavrenov I-00135380 если счет не указан в платеже, берем из проводки.
        if(tmpstr == "")
          query = "select t_account_Payer ";
          query = query + "from dacctrn_dbt ";
          query = query + "where t_acctrnid = " +  rs_doc.t_AccTrnID;

          rs = execSQLselect(query);
          if (rs and rs.moveNext())
             tmpstr = rs.value(0);
          end;
        elif(strlen(tmpstr) > 20) // Lavrenov I-00134175 Если длинна счета > 20 символов: берем из проводки, иначе режем счет до 20 символов                 
          query = "select t_account_Payer ";
          query = query + "from dacctrn_dbt ";
          query = query + "where t_acctrnid = " +  rs_doc.t_AccTrnID;

          rs = execSQLselect(query);
          if (rs and rs.moveNext())
            tmpstr = rs.value(0);
          else 
            tmpstr = substr(tmpstr,1,20); 
          end;
        else //Проверим а не пришла ли провока из внешней системы
          query = " select payer_account from usr_pmdocs where acctrnid = " + rs_doc.t_AccTrnID +
                  " and paymentid = " + Paymentid;
          rs = execSQLselect(query);
          if (rs and rs.moveNext())
             tmpstr = rs.value(0);
          end;
        end;
      end;
    else
      tmpstr = Acc.Account;
      FIID = Acc.Code_Currency;
    end;

    if(rs_doc.t_purpose == "Конверсия валюты")
      if (rs_doc.t_payeraccount == rs_acc.value("t_Account"))
         tmpstr = acctrn.rec.account_receiver;
      else
         tmpstr = acctrn.rec.account_payer;
      end;
    end;

    if (tmpstr == "")
      tmpstr = " ";
    end;
    
    var AccountPP = tmpstr; // значение поля "НомСчПП"
    var AccountPPClient = -1; // клиент по счету из поля "НомСчПП" 
    var СчетПолучателяКлиентский = true; //Lavrenov I-00138488 является ли счет получателя клиентским
    query = "select t_Client ";
    query = query + "from daccount_dbt ";
    query = query + "where t_Account = '" + AccountPP + "' " +
                    "  and t_chapter = 1 and t_Code_Currency = " + FIID;
    rs = execSQLselect(query);
    if (rs and rs.moveNext())
      AccountPPClient = rs.value(0);
    end;

    if (CompareStrWithMasks (СчетаБанка, AccountPP) == 0)//дурацкая функция, все через одно место возвращает, руки бы оторвать тому кто ее написал
      СчетПолучателяКлиентский = false;
    end;
    var INNPP;

    if (PaymentID > 0)
      if (Payment.IsExternal)/*Lavrenov I-00141927 для внешних на принадлежность счета к клиентскому не проверяем*/
        СчетПолучателяКлиентский = true;//Lavrenov I-00141927 часть 2: Знаю что изврат, но иначе падает по ошибке ибо Payment не всегда инициализируется
      end;
    else
      if (AccountPPClient == -1)
        СчетПолучателяКлиентский = true
      end;
    end; 

    if (СчетПолучателяКлиентский) // Lavrenov I-00138488 Для клиентских счетов ищем клиента и его ИНН/КПП

      /*ИННПП*/
      if (PaymentID > 0)
        if (rs_doc.t_payeraccount == rs_acc.value("t_Account"))
          if (Payment.ReceiverINN)
            FullINN = Payment.ReceiverINN;
          else                  
            FullINN = GetPartyCode(Payment.Receiver, PTCK_INN);
          end;
        else
          if (Payment.PayerINN)
            FullINN = Payment.PayerINN;
          else                  
            FullINN = GetPartyCode(Payment.Payer, PTCK_INN);
          end;
        end;
      else
        FullINN = GetPartyCode(AccountClient, PTCK_INN);
      end;
      
      var LegalForm;
      INNPP = RemoveKPP(FullINN);

      if ( (AccountPPClient > 0) and (ПолучитьСубъекта(AccountPPClient, party) == 0) )
         LegalForm = party.LegalForm;
      else
        /*Не нашли ИНН, то будет юр.лицом*/
        if (strlen(trim(RemoveKPP(FullINN))) == 12)
          LegalForm = PTLEGF_PERSN;  
        elif ((strlen(trim(RemoveKPP(FullINN))) == 10) or (strlen(trim(RemoveKPP(FullINN))) == 5))
          LegalForm = PTLEGF_INST;
        else
            LegalForm = PTLEGF_INST;
        end;
      end; 
    
      /*НаимПП*/
      if (LegalForm != PTLEGF_PERSN)
        if (PaymentID > 0)
          if (rs_doc.t_payeraccount == rs_acc.value("t_Account"))
            if (Payment.Receiver <= 0)
              //27.07.2012 Chesnokov D.S. I-00228058 Если нет наименования в платеже, ставим точку
              if (strLen(Payment.ReceiverName) == 0)
                stroka = "НаимПП:.";
              else
                stroka = "НаимПП:" + Payment.ReceiverName;
              end;
            else
              if(substr(rs_doc.t_Receiveraccount,1,3) == "202") // Lavrenov I-00143789 Кассовые
                stroka = "НаимПП:Касса Банка";
              else
                ПолучитьСубъекта(Payment.Receiver, party);
                stroka = "НаимПП:" + party.Name;
              end;  
            end;
          else
            if (Payment.Payer <= 0)
              //27.07.2012 Chesnokov D.S. I-00228058 Если нет наименования в платеже, ставим точку
              if (strLen(Payment.PayerName) == 0)
                stroka = "НаимПП:.";
              else
                stroka = "НаимПП:" + Payment.PayerName;
              end;
            else
              if(substr(rs_doc.t_payeraccount,1,3) == "202") // Lavrenov I-00143789 Кассовые
                stroka = "НаимПП:Касса Банка";
              else
                ПолучитьСубъекта(Payment.Payer, party);
                stroka = "НаимПП:" + party.Name;
              end;  
            end;
          end;
        else
          if((substr(rs_doc.t_payeraccount,1,3) == "202") or (substr(rs_doc.t_receiveraccount,1,3) == "202")) // Lavrenov I-00143789 Кассовые, мать их так
            stroka = "НаимПП:Касса Банка";
          else
            ПолучитьСубъекта(AccountClient, party);
            stroka = "НаимПП:" + party.Name;
          end;
        end;
        str(str.size) = Substr(stroka, 1, 167); //09.04.2013 Chesnokov D.S. I-00353655 привел длинну строки в соответствие с форматом
        len = len + strlen(stroka) + 2;
        InsertStrTmp(Num, str);
      else
      /*ФИОПП*/
        if (PaymentID > 0)
          if (rs_doc.t_payeraccount == rs_acc.value("t_Account"))
            if (Payment.Receiver > 0)
              persn.rec.PersonID = Payment.Receiver;
              GetEQ(persn);
              stroka = "ФИОПП:" + persn.rec.Name1 + "," + persn.rec.Name2 + "," + persn.rec.Name3;
            else
              stroka = "ФИОПП:" + РазделитьЗапятымиФИО(CutFIO(Payment.ReceiverName));
            end;
          else
            if (Payment.Payer > 0)
              persn.rec.PersonID = Payment.Payer;
              GetEQ(persn);
              stroka = "ФИОПП:" + persn.rec.Name1 + "," + persn.rec.Name2 + "," + persn.rec.Name3;
            else
              stroka = "ФИОПП:" + РазделитьЗапятымиФИО(CutFIO(Payment.PayerName));
            end;
          end;
        else
          persn.rec.PersonID = AccountClient;
          GetEQ(persn);
          stroka = "ФИОПП:" + persn.rec.Name1 + "," + persn.rec.Name2 + "," + persn.rec.Name3;
        end;
        str(str.size) = stroka;
        len = len + strlen(stroka) + 2;
        InsertStrTmp(Num, str);
      end;

    else
      /*НаимПП*/
      if((substr(rs_doc.t_payeraccount,1,3) == "202") or (substr(rs_doc.t_receiveraccount,1,3) == "202")) // Lavrenov I-00143789 Кассовые, мать их так
         stroka = "НаимПП:Касса Банка";
      else
         stroka = "НаимПП:" + {Name_Bank};
      end;
      str(str.size) = stroka;
      len = len + strlen(stroka) + 2;
      InsertStrTmp(Num, str);
      FullINN = ПолучитьКодСубъекта({OurBank}, 16); 
    end;
    
    /*ИННПП*/
    INNPP = RemoveKPP(FullINN);
    if (INNPP == "")
      INNPP = " ";
    end;
    stroka = "ИННПП:" + INNPP;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*КПППП*/
    if ( (strlen(INNPP) == 5) or (strlen(INNPP) == 10) )
      var KPPPP = RemoveINN(FullINN);
      if (strlen(KPPPP) == 9)
        stroka = "КПППП:" + KPPPP; 
        str(str.size) = stroka;
        len = len + strlen(stroka) + 2;
        InsertStrTmp(Num, str);
      else 
        //Lavrenov I-00143649 Избавляемся от неправильных КПП
        stroka = "КПППП:" + substr(INNPP,1,4) + "01001";
        str(str.size) = stroka;
        len = len + strlen(stroka) + 2;
        InsertStrTmp(Num, str);
      end;
    end;

    /*НомСчПП*/
    stroka = "НомСчПП:" + AccountPP;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*Дебет*/
    if (rs_doc.t_payeraccount == rs_acc.value("t_Account"))
      stroka = "Дебет:" + string(money(rs_doc.t_amount));// Танцы с бубном по  поводу NUMERIC и DOUBLE
    else
      stroka = "Дебет:0.00";
    end;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*Кредит*/
    if(rs_doc.t_purpose == "Конверсия валюты")
      if (rs_doc.t_payeraccount != rs_acc.value("t_Account"))
        stroka = "Кредит:" + string(money(rs_doc.t_receiveramount));// Танцы с бубном по  поводу NUMERIC и DOUBLE
      else
        stroka = "Кредит:0.00";
      end;
    else
      if (rs_doc.t_payeraccount != rs_acc.value("t_Account"))
        stroka = "Кредит:" + string(money(rs_doc.t_amount));// Танцы с бубном по  поводу NUMERIC и DOUBLE
      else
        stroka = "Кредит:0.00";
      end;
    end;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*НазнПл*/
    if(rs_doc.t_purpose == "Конверсия валюты")
      stroka = "НазнПл:" + substr(trim(acctrn.rec.ground),1,210);
    else
      if (valtype(rs_doc.t_ground) == v_undef)
        stroka = "НазнПл:Не найдено назначение платежа";
      else
        stroka = "НазнПл:" + substr(trim(rs_doc.t_ground),1,210);
      end;
    end;
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);

    /*Конец блока*/
    stroka = "###";
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
    
  end;
  
  macro CreateFile(NamePart, Num, AllNum)
    
    var sql, rs;
    
    sql = "select t_str from USR_VIPISKA_TMP where t_num = " + Num;
    rs = RsdRecordSet(sql);
    
    SetOutPut(TxtFileDir  + "\\" + NamePart + ".vrb", false);
    
    if ((Num == AllNum) and (AllNum == 1))
    
      while (rs.movenext)
        if (rs.value(0) != "НомЧасти:1")
          println(rs.value(0));
        end;
      end;
    else
      while (rs.movenext)
        if (rs.value(0) == "КолДок:1")
          println("КолДок:" + AllNum);
        else
          println(rs.value(0));
        end;
      end;
    end;

    SetOutput(null, true);
    if (CopyFile(NamePart + ".vrb", ExpPath + "\\" + NamePart + ".vrb"))
      //msgbox("Создан файл ", NamePart, ".vrb в каталоге ", ExpPath);
      INSERT_MES365_LOG_manual(NamePart, ".vrb", NalSounCode);
    else
      msgbox("Не удалось скопировать файл ", NamePart + ".vrb| в каталог ", ExpPath + "\\" + NamePart + ".vrb");
    end;
    
    
  end;
  
  /*Формирование имен файлов выписки*/
  macro PrintFile(Num)
    
    var NumPart = "00";
    var NamePart, i = 1;
    
    if (Num == 1)
    
      NamePart = "BV" + dlg_bv.rec.NumRevisionOut + 
                 NumPart + "_ZNO" + dlg_bv.rec.NumRevision + 
                 SubStr( {MFO_Bank}, 3, 7 )+ "_" + 
                 NalSounCode + strYYYYMMDD(dlg_bv.rec.CurrentDate) +
                 "_" + dlg_bv.rec.NumInFile;
      
      CreateFile(NamePart, i, Num);
      
    elif ((Num > 1) and (Num < 100))
      while (i <= Num)
        if (i < 10)
          NumPart = "0" + i;
        else
          NumPart = string(i);
        end;

        NamePart = "BV" + dlg_bv.rec.NumRevisionOut + 
                   NumPart + "_ZNO" + dlg_bv.rec.NumRevision + 
                   SubStr( {MFO_Bank}, 3, 7 )+ "_" + 
                   NalSounCode + strYYYYMMDD(dlg_bv.rec.CurrentDate) +
                   "_" + dlg_bv.rec.NumInFile;
        
        CreateFile(NamePart, i, Num);
        i = i + 1;
      end;
      
    else
      msgbox("Количество частей превышает 100!!!");
    end;
    
    msgbox("Создано ", Num, " файл(а), в каталоге ", ExpPath );

  end;
  
  /*Сервисная часть*/
  Service_Part(Num);
  
  /*Информационная часть*/
  Information_Part();
  
  var rs_acc;
  if (dlg_bv.rec.AllAcc == "X")
    rs_acc = GetClientAccounts(Client, dlg_bv.rec.BeginDate, dlg_bv.rec.EndDate);
  else
    rs_acc = GetClientAccounts(Client, dlg_bv.rec.BeginDate, dlg_bv.rec.EndDate, Account);
  end;
  
  while (rs_acc and rs_acc.MoveNext)
    /*Выписка по счету*/
    Account_Statement(rs_acc);
    
    progress = 0;
    initprogress(-1, "Идет обработка");
    
    rs_doc = get_documents(rs_acc.value("t_Account"), rs_acc.value("t_FIID"), dlg_bv.rec.BeginDate, dlg_bv.rec.EndDate);
    
    
    while (rs_doc and rs_doc.moveNext() and (not EOF) )
      
      progress = progress + 1;
      useprogress(progress);
      Operation_part(rs_doc, rs_acc);
      
      
      
      if (len > int(РазмерВыписки))
      
        /*Конец фрагмента*/
        stroka = "@@@";
        str(str.size) = stroka;
        len = len + strlen(stroka) + 2;
        InsertStrTmp(Num, str);
        
        /*Конец файла*/
        stroka = "===";
        str(str.size) = stroka;
        len = len + strlen(stroka) + 2;
        InsertStrTmp(Num, str, True);
        
        /*Проверим что больше в блоке нет операций*/
        if (rs_doc.Movenext) 
          Num = Num + 1;
          Service_Part(Num);
          Account_Statement(rs_acc);
          
          rs_doc.MovePrev; /*Если есть вернемся назад*/
        else
          EOF = true;//Выборка закончилась, обрабатываем флагом из-за странного поведения TRsbDataSet
        end;
      end;
      
    end;
    remprogress();
  end;
  
  if (not EOF)
    /*Конец фрагмента*/
    stroka = "@@@";
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str);
        
    /*Конец файла*/
    stroka = "===";
    str(str.size) = stroka;
    len = len + strlen(stroka) + 2;
    InsertStrTmp(Num, str, True);
  end;
  
  PrintFile(Num);
  
end;



macro GenFnsBV(Acc,
               Branch,
               Client,
               acbalance,
               chapter,
               code,
               NumOper) 

  private var party = TRecHandler("party.dbt");
  
  macro HandleEvent (dlg, cmd, id, key)
  
  var const_message = "~F2~ Выполнить ";
  var rs;
  
    if (cmd == DLG_INIT)
      generatereference(refnumber,docnumber);
      GetNalOrg(Client, NalOrgName, NalOrgAddr, NalSounCode);
      CodeClient = ПолучитьКодСубъекта (Client, 1, errCode);
      
      if (errCode == 0)
        dlg.rec.ClientCode = CodeClient; 
      else
        dlg.rec.ClientCode = 0;
      end;
      dlg.rec.OneAcc = "X";
      dlg.rec.AllAcc = "";
      dlg.rec.Account = Acc;
      DisableFields(dlg,3);
 
      dlg.rec.BeginDate = {curdate};
      dlg.rec.EndDate = {curdate};
      dlg.rec.CurrentDate = {curdate};
      dlg.rec.CurrentDateIN = {curdate};

      dlg.rec.NumSpr = docnumber;
      dlg.rec.NumInFile = "000001";
      dlg.rec.NumRevision = 1;
      dlg.rec.NumRevisionOut = 1;
      dlg.rec.NameFNS = NalOrgName; 
      dlg.rec.AdrFNS = NalOrgAddr;
      
      dlg.rec.NameFile = "BV"+ dlg.rec.NumRevisionOut + "00" +
                         "_ZNO" + dlg.rec.NumRevision + 
                         SubStr( {MFO_Bank}, 3, 7 )+ "_" 
                         + NalSounCode + strYYYYMMDD(dlg.rec.CurrentDate) +
                         "_" + dlg.rec.NumInFile;

      UpdateFields(dlg);
      
    elif (cmd == DLG_SETFOCUS)
      
      if (FldName(dlg, id) == "BeginDate")
        message(const_message + "~F3~ Календарь");
      elif(FldName(dlg, id) == "AllAcc")
        message(const_message + "~Space~ Установить/Убрать")
      elif(FldName(dlg, id) == "OneAcc")
        message(const_message + "~Space~ Установить/Убрать")

      elif (FldName(dlg, id) == "EndDate")
        message(const_message + "~F3~ Календарь");
      elif(FldName(dlg, id) == "CurrentDate")
        message(const_message + "~F3~ Календарь");
      elif(FldName(dlg, id) == "CurrentDateIN")
        message(const_message + "~F3~ Календарь");
      elif(FldName(dlg, id) == "NameFNS")
        message(const_message + "~F3~ выбор налогового органа")
      else
        message(const_message);
      end;
    
    elif (cmd == DLG_REMFOCUS)
      
      if (FldName(dlg,id)=="BeginDate")
        if ( dlg.rec.BeginDate > {curdate} )
           MsgBox("Дата начала периода больше даты текущего операционного дня"); 
           return CM_CANCEL;
        end;
        
      elif (FldName(dlg,id)=="EndDate")
        if ( dlg.rec.EndDate < dlg.rec.BeginDate )
           MsgBox("Дата конца периода меньше даты начала периода"); 
           return CM_CANCEL;
        elif ( dlg.rec.EndDate > {curdate})
           MsgBox("Дата конца периода больше даты текущего операционного дня"); 
           return CM_CANCEL;
        end;
      
      elif (FldName(dlg, id) == "NumInFile")
        if (StrLen(dlg.rec.NumInFile) != 6)
          msgbox("Поле номер входящего файла должно содержать 6 знаков");
          return CM_CANCEL;
        elif (IsDigitalNumber(dlg.rec.NumInFile) == 1)
          msgbox("Поле номер входящего файла должно содержать только числовые символы");
          return CM_CANCEL;
        end;
        
      elif (FldName(dlg, id) == "NumRevision")
         if (IsDigitalNumber(dlg.rec.NumRevision) == 1)
           msgbox("Поле ревизия входящего файла может содержать только числовые значения");
           return CM_CANCEL;
         end;
      elif (FldName(dlg, id) == "NumRevisionOut")
         if (IsDigitalNumber(dlg.rec.NumRevisionOut) == 1)
           msgbox("Поле ревизия входящего файла может содержать только числовые значения");
           return CM_CANCEL;
         end;

      end;
      
      dlg.rec.NameFile = "BV"+ dlg.rec.NumRevisionOut + "00" + 
                         "_ZNO" + dlg.rec.NumRevision + 
                         SubStr( {MFO_Bank}, 3, 7 )+ "_" 
                         + NalSounCode + strYYYYMMDD(dlg.rec.CurrentDate) +
                         "_" + dlg.rec.NumInFile;
      UpdateFields(dlg);
    
    elif (cmd == DLG_KEY)
      if (key == KEY_ESC)
        if (GetTrue(TRUE,"Вы действительно хотите выйти?"))
          exit(1);
          return  CM_CANCEL;
        else
          return  CM_IGNORE;
        end;
        
      elif (key == KEY_F3)
        if (FldName(dlg, id) == "BeginDate")
          dlg.rec.CurrentDate = GetDateByCalendar({curdate});
          
        elif (FldName(dlg, id) == "EndDate")
          dlg.rec.BeginDate = GetDateByCalendar({curdate});
          
        elif (FldName(dlg, id) == "CurrentDate")
          dlg.rec.CurrentDate = GetDateByCalendar({curdate});
        elif (FldName(dlg, id) == "CurrentDateIN")
          dlg.rec.CurrentDateIN = GetDateByCalendar({curdate});
          
        elif (FldName(dlg, id) == "NameFNS")
          if (ListPT(party, PTCK_ALL, CodeNO, PTLIST_TAXINSTITUTE, 0, PTCK_MNS))
            dlg.rec.NameFNS = party.rec.name;
            GetAddrSoun(party.rec.partyid, dlg.rec.AdrFNS, NalSounCode);
            dlg.rec.NameFile = "BV"+ dlg.rec.NumRevisionOut + "00" +
                               "_ZNO" + dlg.rec.NumRevision + 
                               SubStr( {MFO_Bank}, 3, 7 )+ "_" 
                               + NalSounCode + strYYYYMMDD(dlg.rec.CurrentDate) +
                               "_" + dlg.rec.NumInFile;
          end;
        end;

      elif (key == KEY_SPACE)
        if (FldName(dlg, id) == "AllAcc")
          if (dlg.rec.AllAcc == "")
            dlg.rec.AllAcc = "X";
            dlg.rec.OneAcc = "";
            dlg.rec.Account = "";
            DisableFields(dlg,3);
          end;
        elif(FldName(dlg, id) == "OneAcc")
          if (dlg.rec.OneAcc == "")
            dlg.rec.OneAcc = "X";
            dlg.rec.AllAcc = "";
            dlg.rec.Account = Acc;
          end;
        end;

      elif (key == KEY_F2)
        if (dlg.rec.NameFNS == "")
          msgbox("Не указано наименование налогового органа");
          return CM_IGNORE;
        elif (dlg.rec.AdrFNS == "")
          msgbox("Не указан адрес налогового органа");
          return CM_IGNORE;
        end;
        return CM_SAVE;
      elif (key == KEY_F9)
        return CM_IGNORE;
      end;
      
      UpdateFields(dlg);
    else
      UpdateFields(dlg);
    end;
    
  end;
  
  if (ПрочитатьНастройки)
    if (RunDialog(dlg_bv, "HandleEvent"))
      CreateBV(dlg_bv, Acc, Client, Code);
    end;
  end;

end;