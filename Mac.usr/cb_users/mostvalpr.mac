/************************************************************************/
/*         Автоматизированная банковская система RS-Bank                */
/*                 Copyright (c) R-Style Software Lab 2002              */
/*                                                                      */
/*  Имя файла      : mostvalpr.mac                                      */
/*                                                                      */
/*  Описание       : Печать ордера по передаче ценностей 0402102        */
/*                                                                      */
/*  Программист    : Чукина Т.А.                                        */
/*                                                                      */
/*  Создан         : 06.05.11                                           */
/*                                                                      */
/************************************************************************/

import globals;//, FIInter, PTInter, PaymInter;
import prpmbuff, prpmboi;

var pr_cb_doc:TRecHandler  = TRecHandler("cb_doc.dbt", "bank.def");
debugbreak;

PRIVATE MACRO FillPayAmountStr( Amount, FIID, ArraySum )

  var CURtext = ""; 
  
  if( FIID != 0 )
    CURtext = CurToStrAlt(Amount, NULL, NULL, GetISOCode(FIID));    
  else  
    CURtext = RubToStrAlt(Amount);
  end;

  StrSplit(CURtext, ArraySum, 60, 60, 2);
   
END;

PRIVATE CLASS TPayInstruction
  var Account    : string,
      FIID       : integer,
      Amount     : string;
END;

/* Заполнение счетов и сумм из разноски или если нет разноски из платежа Pmpaym */
private macro FillPIList( PIList:TArray, pmpaym:TRecHandler, DebetCredit:integer )
  
  var i : integer = 0;
  var pi : TPayInstruction;
  
  // ищем разноску в pmaddpi
  var payment : RsbPayment = RsbPayment(pmpaym.rec.PaymentID),
      pmaddpi : TRecHandler = TRecHandler( "pmaddpi.dbt" ),
      stat    : integer = payment.PIList( DebetCredit ).First();

  if ( not stat ) // если есть, заполняем из разноски
    i = 0;
    while( not stat )
      stat = payment.PIList( DebetCredit ).Current( pmaddpi );
      if( not stat )
        pi = TPayInstruction();
        pi.Account    = pmaddpi.rec.Account;
        pi.FIID       = pmaddpi.rec.FIID;
        pi.Amount     = string(pmaddpi.rec.Amount:f);
        PIList.value( i ) = pi;
        i = i + 1;
        stat = payment.PIList( DebetCredit ).Next();
      end;
    end;
  else // если нет разноски, берем из pmpaym
    pi = TPayInstruction();
    if (DebetCredit == PRT_Debet)
      pi.Account = pmpaym.rec.PayerAccount;
      pi.FIID    = pmpaym.rec.FIID;
      pi.Amount  = string(pmpaym.rec.Amount:f);
    else
      pi.Account = pmpaym.rec.ReceiverAccount;
      pi.FIID    = pmpaym.rec.PayFIID;
      pi.Amount  = string(pmpaym.rec.PayAmount:f);
    end;
    PIList.value(0) = pi;       
  end;
end;

MACRO PrintOrder0402102(ncopy:integer)
  debugbreak;
  array aBankName, aAmount;
  StrSplit ( {Name_Bank}, aBankName, 38, 38, 3 );
  
  var ground,
      oper_name,
      passport,
      rsd,
      cmd,
      operation = "",
      values    = "",
      Number    = "",
      Sum; //количество
  
  /* Подготовка строк к печати */
  ARRAY SS, SG, SBP, DD, pp;

  var DebetList : TArray, CreditList : TArray;
  DebetList  = TArray;
  FillPIList( DebetList, pr_pmpaym, PRT_Debet );
  CreditList = TArray;
  FillPIList( CreditList, pr_pmpaym, PRT_Credit );
  // Если нет разноски и по дебету и по кредиту, то поле CredAmount не заполняется
  if ( (DebetList.size < 2) and (CreditList.size < 2) )
    CreditList.value(0).Amount = "";
  end;

  Sum = pr_pmpaym.rec.Amount;

  if ( DebetList.size < 2 )
    FillPayAmountStr( pr_pmpaym.rec.Amount, pr_pmpaym.rec.FIID, aAmount );
  else
    FillPayAmountStr( pr_pmpaym.rec.PayAmount, pr_pmpaym.rec.PayFIID, aAmount );
  end;

   ground = pr_pmrmprop.rec.ground;

 while (index(ground,"+")>0)
 if (strlen(oper_name) == 0)
         if (strlen(substr(ground,1,index(ground,"+")))>0)
           oper_name = substr(ground,1,index(ground,"+")-1);
         else
           cmd = rsdcommand("select t_name from dperson_dbt where t_oper = ?");
           cmd.addparam("id",RSDBP_IN,pr_pmpaym.rec.oper);
           cmd.execute();
           rsd = rsdrecordset(cmd);
           if (rsd.movenext())
              oper_name = rsd.name;
           else
              oper_name = "Ошибка";
           end;
         end;
 elif (strlen(operation) == 0)
        operation = substr(ground,1,(index(ground,"+")-1));
 elif (strlen(values) == 0)
        values = substr(ground,1,(index(ground,"+")-1));
 elif (strlen(number) == 0)
        number = substr(ground,1,(index(ground,"+")-1));
 /*elif (strlen(passport) == 0)
        passport = substr(ground,1,(index(ground,"+")-1));*/
 end;
        ground = substr(ground,(index(ground,"+")+1));
 end;
 
  passport = ground;

  strsplit( oper_name,                  SS,    38, 38, 3);
  strsplit( passport,            pp,    51, 51, 2 );

  while(ncopy > 0)
    ncopy = ncopy - 1;
    [
                                                                                   ┌─────────────────┐
                                                                                   │    Код формы    │
                                                                                   │документа по ОКУД│
                                         ┌────────────┐                            ├─────────────────┤
          Ордер по передаче ценностей  № │##########  │                            │     0402102     │
                                         └────────────┘                            └─────────────────┘
         #
                                                                                ┌────────────────────┐
      Наименование банка:                                       ДЕБЕТ           │    Сумма (цифрами) │
       ####################################### ┌────────────────────────────────┼────────────────────┤
       ####################################### │счет № #########################│ ###################│]
    (  pr_pmrmprop.rec.Number:l,
       pr_pmrmprop.rec.Date:m:f,
       aBankName(0),
       aBankName(1), DebetList.value(0).Account:l, DebetList.value(0).Amount:r );
       
    var i : integer = 1;
    while( i < DebetList.size )

    [                                          ├────────────────────────────────┤                    │
                                               │счет № #########################│ ###################│]
      (DebetList.value(i).Account:l, DebetList.value(i).Amount:r);
      i = i + 1;
    end;
      
    [                                          └────────────────────────────────┤                    │
                                                                                │                    │
      Кому принадлежат ценности:                                КРЕДИТ          │                    │
       ####################################### ┌────────────────────────────────┤                    │
       ####################################### │счет № #########################│ ###################│]
    ( SS(0), SS(1), CreditList.value(0).Account:l, CreditList.value(0).Amount:r );

    i = 1;   
    while( i < CreditList.size )

    [                                          ├────────────────────────────────┤                    │
                                               │счет № #########################│ ###################│]
      (CreditList.value(i).Account:l, CreditList.value(i).Amount:r);
      i = i + 1;
    end;
    
    [                                          └────────────────────────────────┴────────────────────┘
      Содержание операции: ##########################################################################
      ╔══════════════════════════════════════════════════════╤══════════════════╤════════════════════╗
      ║           Наименование ценностей                     │    Количество    │    Сумма (цифрами) ║
      ╟──────────────────────────────────────────────────────┼──────────────────┼────────────────────╢
      ║ #################################################### │ ################ │ ################## ║
      ╚══════════════════════════════════════════════════════╧══════════════════╧════════════════════╝
      Сумма прописью с указанием валюты: ############################################################
                                         ############################################################

      Бухгалтерский работник   ________________________  ___________________________________________
                                   (личная подпись)             (фамилия, инициалы)

      Ценности переданы:
      Кассовый работник        ________________________  ___________________________________________
                                   (личная подпись)             (фамилия, инициалы)

      Клиент (работник банка)                             
                               ________________________  ___________________________________________
                                   (личная подпись)             (фамилия, инициалы)

      Предъявлен документ, удостоверяющий личность:##################################################
      ####################################################################################################
    ]( operation:w,
       values,
       number,
       Sum,
       aAmount(0),
       aAmount(1), 
       pp(0),
       pp(1) );
  end;


END;

MACRO PrintDocument(ncopy:integer):bool
  
  var DocKind:integer = pr_pmpaym.rec.DocKind;

  if( ( (DocKind != 70/*DLDOC_MEMORIALORDER*/) and (DocKind != 74/*DLDOC_SUMMARY_MEMORDER*/) ) or  
      pr_pmpaym.rec.Chapter != 3 )
    MsgBox("Данный вид документа не поддерживается макросом");
    return FALSE;
  end;

  PrintOrder0402102(ncopy);

  return TRUE;
END;
