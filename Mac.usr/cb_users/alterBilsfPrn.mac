/*------------------------------------------------------------------------------
                     Библиотека интерпретируемых модулей

 Filename    : alterBilsfPrn.mac
 Description : Альтернативная печать СФ

 Programmer  : EVG
 18.08.09    : Создан
 
------------------------------------------------------------------------------*/
import cur_bank;

/* EVG Итоги */
var TotalAmount = $0,
    TotalAmountNDS = $0,
    TotalAmountWithNDS = $0;

private var {FIO_Boss}, 
            {FIO_Book};



/* EVG Последовательности взяты из prfac_1.mac (RS-Bank 5.0) */
Macro EscPrn();
   [(3R(s0p16.67h8.5v0s0b0T&l1X&l8D&l0O&a0L];
End;
Macro EscPrn10();
   [(3R(s0p10.00h12.0v0s0b0T&l1X&l6D&l0O&a0L];
/*   return StrFor(27)+"(3R"+StrFor(27)+"s0p10.00h12.0v0s0b0T"+StrFor(27)+"&l1X"+StrFor(27)+"&l8D"+StrFor(27)+"&l0O"+StrFor(27)+"&a0L";*/
End;
Macro EscPrn12();
   [(3R(s0p13.50h8.5v0s0b0T&l1X&l6D&l0O&a0L];
End;

/*Kozina новое поле в СФ - наименование валюты*/
private macro GetCurrencyLongName( CCur ) : string

  var sqlString;
  var rs; //: RsdRecordset;

  debugbreak;

  sqlString = RsdCommand("SELECT nvl(t_Name,'') FROM dfininstr_dbt WHERE t_fiid = ?");
  sqlString.addparam("Ccur",RSDBP_IN,CCur);

  rs = RsdRecordset( sqlString );

  if( rs.moveNext())
    return rs.value( 0 );
  end;

  return "";
end;


macro PrnFactur( pBillNumber,
                 pBillDate,
                 pSellerName,
                 pSellerAddress,
                 pSellerINN,
                 pBuyerName,
                 pBuyerAddress,
                 pBuyerINN,
                 pBuyerAccount,
                 pCargoSender,
                 pCargoReceiver,
                 pPayDocNumber, 
                 pPayDocDate )


  var i,count, Attr_Code_Client,Attr_Name_Client,Attr_FAdres,Attr_JAdres;
  array a_consig, a_buyer, a_buyer_jadr, a_seller, a_seller_jadr;
  var SellerName1, SellerName2, SellerAddress;

  /* EVG Оставим определение банка-продавца из 5.0 */
  /*Kozina печатаем в 2 строки - договоренность с Пановой*/
  If (_VOLGA_BANK() or _VOLGOGRAD_BANK() or _ENGELS_BANK() or _VORON_BANK() or _ULYANOVSK_BANK())         //ТЗ 3549
      SellerName1    = "Закрытое акционерное общество Коммерческий межотраслевой банк стабилизации и развития \"ЭКСПРЕСС-ВОЛГА\"";
      SellerName2    = "ЗАО АКБ \"Экспресс-Волга\"";
      SellerAddress = "Россия, 410002 г.Саратов, ул.Мичурина 166/168";
  Elif (_PRBB_BANK())
      SellerName1    = "АКЦИОНЕРНЫЙ КОММЕРЧЕСКИЙ БАНК \"ПРОБИЗНЕСБАНК\" (ОТКРЫТОЕ АКЦИОНЕРНОЕ ОБЩЕСТВО)";
      SellerName2    = "ОАО АКБ \"Пробизнесбанк\"";
      SellerAddress = pSellerAddress;
  Elif (_VUZ_BANK())
      SellerName1    = "Открытое акционерное общество \"ВУЗ-банк\"";
      SellerName2    = "ОАО \"ВУЗ-банк\"";
      SellerAddress = pSellerAddress;
  else
      SellerName1    = pSellerName;
      SellerName2    = "";
      SellerAddress = pSellerAddress;
  End;


EscPrn10;
/* EVG 14/12/2011 Немного поправил
[    СЧЕТ-ФАКТУРА N ############## от #########################]
(pBillNumber, pBillDate:m);*/
[    СЧЕТ-ФАКТУРА N #]
( pBillNumber + " от " + string(pBillDate:m) );

EscPrn;

[
  Продавец: ##############################################################################################################]
(SellerName1:w:l);

[           #######################################################################################################]
(SellerName2:w:l);

[ Адрес: #################################################################################################################
  ИНН/КПП продавца: ####################################################################]
  (SellerAddress:w,   /* Адрес */
   pSellerINN);       /* ИНН */

/* EVG Оставил как было */
[ Грузоотправитель и его адрес: ##########################################################################################]
 ("-");//left(0));

/* EVG Оставил как было */
[ Грузополучатель  и его адрес: ##########################################################################################]
 ("-");// (right(0));

[ К платежно-расчетному документу N ######### от ##############################
  Покупатель: ############################################################################################################
]( pPayDocNumber:l,  pPayDocDate:m,  /* Документ ... от ... */
   pBuyerName:w:l );

[ Адрес:  ################################################################################################################
]( pBuyerAddress:w );//a_buyer_jadr(0));


[ ИНН/КПП покупателя:  ####################################################
  Счет покупателя: ####################
]( pBuyerINN,   /* ИНН */
   pBuyerAccount );
/*EscPrn;*/

  if ( pBillDate >= date(22,05,2006))
     [┌──────────────────────┬─────┬─────┬────────────┬──────────────┬───────┬───────┬───────┬──────────────┬──────┬──────┬────────────┐
      │ Наименование товара  │Еди- │Коли-│Цена (тариф)│Стоимость тов.│ В том │Налого-│Сумма  │Стоимость тов.│Страна│Номер │Наименование│
      │ (описание выполнен   │ница │чест-│за единицу  │(работ,услуг),│ числе │ вая   │налога │(работ,услуг),│проис-│тамож.│валюты      │
      │ ных работ, оказан-   │изме-│во   │измерения   │имущественных │ акциз │ставка │       │имущественных │хожде-│декл. │            │
      │ ных услуг)имуществен-│рения│     │            │прав,всего без│       │       │       │прав, всего с │ния   │      │            │
      │ ного права           │     │     │            │налога        │       │       │       │учетом налога │      │      │            │
      ├──────────────────────┼─────┼─────┼────────────┼──────────────┼───────┼───────┼───────┼──────────────┼──────┼──────┼────────────┤
      │          1           │  2  │  3  │      4     │       5      │   6   │   7   │   8   │       9      │  10  │  11  │     12     │
      ├──────────────────────┼─────┼─────┼────────────┼──────────────┼───────┼───────┼───────┼──────────────┼──────┼──────┼────────────┤
     ];
  else
     [
      ┌──────────────────────┬─────┬─────┬────────────┬──────────────┬───────┬───────┬───────┬──────────────┬──────┬──────┐
      │ Наименование товара  │Еди- │Коли-│Цена (тариф)│Стоимость тов.│ В том │Налого-│Сумма  │Стоимость тов.│Страна│Номер │
      │ (описание выполнен-  │ница │чест-│за единицу  │(работ,услуг),│ числе │ вая   │налога │(работ,услуг),│проис-│груз. │
      │  ных работ, оказан-  │изме-│во   │измерения   │всего без     │ акциз │ставка │       │ всего с уче- │хожде-│тамож.│
      │  ных услуг)          │рения│     │            │налога        │       │       │       │ том налога   │ния   │декл. │
      ├──────────────────────┼─────┼─────┼────────────┼──────────────┼───────┼───────┼───────┼──────────────┼──────┼──────┤
      │          1           │  2  │  3  │      4     │       5      │   6   │   7   │   8   │       9      │  10  │  11  │
      ├──────────────────────┼─────┼─────┼────────────┼──────────────┼───────┼───────┼───────┼──────────────┼──────┼──────┤
     ];

  end;
end; // macro PrnFactur




/* -------------- Печать строк таблицы ----------------- */
macro PrnLine ( isFirst,
                pProdName,
                pProdMeasure,
                pQuantity,
                pPrice,
                pAmount,
                pNDSRate,
                pNDSAmount,
                pAmountWithNDS )

   if (pProdMeasure == 0)
      pProdMeasure = "-";
   end;

   if (pQuantity == 0.00)
      pQuantity = "-";
   end;

   if (trim(pPrice) == "")
      pPrice = "-";
   end;

   if (not isFirst)
[├──────────────────────┼─────┼─────┼────────────┼──────────────┼───────┼───────┼───────┼──────────────┼──────┼──────┼────────────┤
];
   end;
[│ #################### │#####│#####│############│##############│   #   │ ##### │#######│##############│######│  #   │############│
]  ( pProdName:w,
     pProdMeasure:c,
     pQuantity:c,
     pPrice:c,
     pAmount:z,
     "-",
     pNDSRate:0:2:z,
     pNDSAmount:z,
     pAmountWithNDS:z,
     "-":c,
     "-",
     "Российский рубль":w
   );

   /* Подсчёт итогов */
   TotalAmount = TotalAmount + pAmountWithNDS;
   TotalAmountNDS = TotalAmountNDS + pNDSAmount;
   TotalAmountWithNDS = TotalAmountWithNDS + pAmountWithNDS;

end;



/* --------------- Печать итогов отчета ---------------- */
macro PrnEnd ()
[├──────────────────────┴─────┴─────┴────────────┴──────────────┴───────┴───────┼───────┼──────────────┼──────┴──────┴────────────┘
 │ Всего к оплате   ########################################################### │#######│##############│
 └──────────────────────────────────────────────────────────────────────────────┴───────┴──────────────┘
]( TotalAmount:m,  TotalAmountNDS:z,  TotalAmountWithNDS:z );
[



    Руководитель организации  ____________________________  #
                                       (подпись)               (ф.и.о.)




    Главный бухгалтер         ____________________________  #
                                       (подпись)               (ф.и.о.)
]({FIO_Boss},{FIO_Book});

end;



macro AlternativeBillPrinting( BillNumber,
                               BillDate,
                               SellerName,
                               SellerAddress,
                               SellerINN,
                               BuyerName,
                               BuyerAddress,
                               BuyerINN,
                               BuyerAccount,
                               CargoSender,
                               CargoReceiver,
                               PayDocNumber,
                               PayDocDate,
                               FacturaLinesArray,
                               Fiid
                             )
  var i = 0, First = true;

        //msgbox (PayDocNumber, " - ", PayDocDate);

    
        //msgbox (BuyerAddress, " - ", SellerAddress, " - ", BuyerAccount);

    PrnFactur( BillNumber,
               BillDate,
               SellerName,   
               SellerAddress,
               SellerINN,    
               BuyerName,    
               BuyerAddress,
               BuyerINN,     
               BuyerAccount, 
               CargoSender,  
               CargoReceiver,
               PayDocNumber, 
               PayDocDate );

    while ( i < FacturaLinesArray.Size )

       PrnLine ( First,
                 FacturaLinesArray[i].rec.ProductName,
                 FacturaLinesArray[i].rec.Measure,
                 FacturaLinesArray[i].rec.Quantity,
                 FacturaLinesArray[i].rec.Price,
                 FacturaLinesArray[i].rec.Amount,
                 FacturaLinesArray[i].rec.NDSRate,
                 FacturaLinesArray[i].rec.NDSAmount,
                 FacturaLinesArray[i].rec.AmountWithNDS,
                 GetCurrencyLongName( FIID ) );

       First = false;
       i = i + 1;
    end;

    
    PrnEnd ();
    Println ("\n\n\n");
    [];

end;

              