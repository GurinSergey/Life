/*2012-09-26 zmp C-12487*/
// KS 22.11.2013 Предварительная адаптация
import  "PaymProc.mac", "repforms.mac", payminter;

macro copyPayment(Payment)
    debugbreak;
    var Paym = UsrPayment(); 
    var ErrorMessage,error,errorMes;
    Paym.Initialization();

    Paym.PayerAccount           = Payment.PayerAccount; 
    Paym.PayerName              = Payment.PayerName;          // Наименование плательщика
    Paym.ReceiverAccount        = Payment.ReceiverAccount;
    Paym.ReceiverName           = Payment.ReceiverName;       // Наименование получателя    
    Paym.PayerINN               = Payment.PayerINN;           // ИНН плательщика
    // Paym.PayerKPP               = ;                        // КПП плательщика
    
    Paym.ReceiverINN            = Payment.ReceiverINN;        // ИНН получателя 
    // Paym.ReceiverKPP            = ;                        // КПП получателя
    Paym.Oper                   = {oper};               // Операционист
    Paym.Pack                   = Payment.NumberPack;
    //Paym.Corschem               =
    Paym.NumOperation           = 24001;
    Paym.NumDoc                 = 0;             // Номер документа
    //Paym.TypeDoc                = Payment.TypeDocument;
    //Paym.UserTypeDoc            = Payment.UserTypeDocument;
    Paym.DebetSum               = Payment.PayerAmount ;       // Сумма документа
    Paym.CreditSum              = Payment.ReceiverAmount ;
    //Paym.Rate                   = 
    Paym.Ground                 = Payment.Ground;  // Основание документа
    //Paym.Department             = Payment.OperNode; // Номер филиала  /*zmp 17.10.2012 I-00270398 Погорячился я тут( Закоментил*/
    Paym.Priority               = Payment.Priority;           // Очерёдность платежа
    Paym.Shifr                  = Payment.ShifrOper;          // Шифр платежа
        
    if(Payment.DocKind == 201)
        Paym.DocKind             = 2011;
    else
        Paym.DocKind             = Payment.DocKind;
    end;

    Paym.comiss_acc         = Payment.ComissAccount;
    if(Payment.ComissCharges   == 0)
        Paym.expense_transfer   =  "OUR";
    elif(Payment.ComissCharges == 1)
        Paym.expense_transfer   =  "SHA";
    elif(Payment.ComissCharges == 2)
        Paym.expense_transfer   =  "BEN";
    end;
    //   Paym.receiver_account_cur_iso = getISOByID(Payment.ReceiverFIID);
    //   Paym.vo_code                =
    //   Paym.med_bankname           = 
    //   Paym.med_bic               = 
    Paym.PayerBIC               = Payment.PayerBankCode;      // БИК банка плательщика
    Paym.ReceiverBIC            = Payment.ReceiverBankCode;   // БИК банка получателя
    //Paym.receiver_bank_bic      = 

    Paym.CreatorStatus          = Payment.TaxAuthorState;     // Статус составителя
    Paym.KbkCode                = Payment.BTTTICode;          // Код КБК
    Paym.OkatoCode              = Payment.OKATOCode;          // Код ОКАТО
    Paym.GroundTaxDoc           = Payment.TaxPmGround;        // Основание налогового платежа 
    Paym.TaxPeriod              = Payment.TaxPmPeriod;        // Налоговый период
    Paym.NumTaxDoc              = Payment.TaxPmNumber;        // Номер налогового документа
    Paym.TaxDate                = Payment.TaxPmDate;          // Дата налогового документа
    Paym.TaxType                = Payment.TaxPmType;          // Тип налогового платежа
     
    //Paym.CashSymbols            =
    //Paym.ClientFIO              =
    //Paym.UserField1             =
    //Paym.UserField2             =
    //Paym.UserField3             =
    //Paym.UserField4             =
    //Paym.AcceptTerm             =
    //Paym.AcceptDate             =
    //Paym.PayCondition           =
    //Paym.AcceptPeriod           =

     Paym.Origin                   = 1;             //Происхождение платежа
     /*08.02.2013 zmp R-152421-2 добавил типы игнорируемых проверок*/
     Paym.SkipCheckMask          = skip_payacc_exists + skip_payname_match + skip_recacc_exists + skip_recname_match + skip_pay_inn_fill + skip_rec_inn_fill; // Маска пропуска проверок
     //Paym.CheckExists            = 0;                          // проверка на дублирование
     Paym.RunOperation             = 0;                          // платежи должны быть в отложенных
     Paym.PackMode                 = 0;                          // вставка платежей не массовая
     Paym.MakeCarryFromPayment     = 1;                          // проводка по той же корреспонденции, что и сам платеж
     //Paym.transaction_mode       =
     Paym.doc_cur_iso              = getISOByID(Payment.BaseFIID); // ISO валюты платежа
        
     //Paym.gtd_date               = 
     //Paym.gtd_cur_iso            = 
     //Paym.deal_passport          = 
     //Paym.deal_date              = 
     //Paym.receiver_bankname       = Payment.ReceiverBankName; 
     //Paym.receiver_bankcoracc    = 
     //Paym.ground_add             = 
     Paym.transfer_date           = {curdate} ;
     Paym.ValueDate               = {curdate};                  // Дата платежа
     Paym.DocDate                 = {curdate}; 

     if (not Paym.InsertPayment())                          
         ErrorMes = Paym.ErrorMessage;
         setparm(2,ErrorMes);
         Error = 1;
	  return error;	
     else
         //zmp 21.11.2014 R-496408-2 через PaymProc значание не сохранется =(
         var p = RsbPayment(Paym.PaymentID);
             p.ReceiverBankName = Payment.ReceiverBankName;
             p.update();

         setParm(1,Paym.PaymentID);
         return 0;
     end;
end;
   


