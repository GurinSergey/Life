/************************************************************************/
/*          Автоматизированная банковская система RS-Bank v6.0          */
/*                                                                      */
/*               Copyright (c) R-Style Ukraine                          */
/*                                                                      */
/*  Имя файла        : RemAcc.mac                                       */
/*                                                                      */
/*  Описание         : Макрос печати Справки об остатках денежных       */
/*                     средств на счетах                                */
/*                                                                      */
/*  Программист      : Новиков С. С.                                    */
/*                                                                      */
/*  Создан           : 05.08.2008                                       */
/*                                                                      */
/*  Модифицирован1   : 06.08.2008                                       */
/*                                                                      */
/*  Модифицирован2   : 07.08.2008                                       */
// KS 25.11.2013 Адаптация под 31ю сборку
// VDN 22.09.2015 Изменения для ПРББ по R-620042
/************************************************************************/

//import globals, KeyCodes, WordIntf;
//import oralib, repforms, PTInter,sprifns;

import "fg_Life_parm.mac";

private macro CreateWordApplication()

var startAX, WordApplication;

  if (isStandAlone())
     return ActiveX("Word.Application");
  else
     startAX = CreateObject("rsax", "TRsAxServer", "LoansAxServer", isStandalone());
     WordApplication = startAX.CreateComObject("Word.Application");
     WordApplication.Visible = true;
     return WordApplication;
  end;

end;

private macro ShowReportOnTerminal( WordApp, WordDoc )
  
  var DocFileName : string, TermFileName : string;

  DocFileName = SplitFile( GetTxtFileName("") );

  DocFileName = MergeFile( DocFileName, "fm_prn_" + string(UserNumber), ".doc" );

  DocFileName = MergeFile( GetCurDir(), DocFileName );

  WordApp.visible = true; 
end;


/* EVG Ранее была описана в repforms.mac, но потом закомментирована там из-за переопределения
   в АРМ. */
private MACRO GetClientByAccount(account,chapter,code)
private var rsc:object = Null, str="";

    str=string(" select t.* from daccount_dbt t where t.t_chapter=",chapter," and t.t_account='",account,"' and t.t_code_currency=",code);    
    rsc=execSQLselect(str);
    if( rsc.moveNext())
      return rsc.value("t_client");
    else
        msgbox ("Счет ",account," по главе ",chapter," не найден ");
        return 0;
    end;

END;

private macro getMonthName(i)
var mon = TArray();
   mon[1]  = "января";
   mon[2]  = "февраля";
   mon[3]  = "марта";
   mon[4]  = "апреля";
   mon[5]  = "мая";
   mon[6]  = "июня";
   mon[7]  = "июля";
   mon[8]  = "августа";
   mon[9]  = "сентября";
   mon[10] = "октября";
   mon[11] = "ноября";
   mon[12] = "декабря";

return mon[i];
end;

/*Главный макрос по созданию отчета Справки об остатках денежных средств на счетах */
MACRO RemAcc(Acc,Branch, Client,acbalance,chapter,code,NumOper) 
   var Account = "";
   var date_report = "";
   var date_rest = "";
   var num = "";
   var  curSymb:string;
   var fgBank = fg_life_subject({OurBank}); // KS 10.08.2010 Для разных банков немного по разному надо работать с шаблоном  
  
   var NumDep:string = "",
   Dep:string = "";
 
    var path = "",
    pathfile = "",
    filen = "RSU.lbr";

    GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,path);
    pathfile = FindPath(filen,path);
	if (not pathfile)
		msgbox("Не найдена LBR");
		exit();
	end;
    var dlg = TRecHandler("RemAcc",pathfile,True);

/*
   record office(ptoffice);
   record superior(ptoffice);
*/
  
   /*Процедура заполнения данными шаблона MSWord*/
    MACRO PrintSprAcc(dlg_one, dlg_all)
    
      var WordApp, WordDoc, tbl, tb2, tb3;

      const RSL_Bank_name   = "Bank_name";
      const RSL_Date_report = "Date_report"; 
      const RSL_Date_report1 = "Date_report1"; 
      const RSL_IFNS_adr    = "IFNS_adr";
      const RSL_IFNS_name   = "IFNS_name";
      const RSL_Oper_name   = "Oper_name";         
      const RSL_Request_date = "Request_date";
      const RSL_Request_date1 = "Request_date1";
      const RSL_Request_no  = "Request_no";
      const RSL_Request_no1 = "Request_no1";
      const RSL_Result_Grid = "Result_Grid";
      const RSL_Client_name = "Client_name";

      const RSL_Bank        = "Bank";
      const RSL_Client      = "Client";

      const RSL_Depart_name = "Depart_name";
      const RSL_Chief_name  = "Chief_name";
    
      const RSL_Day         =  "day";
      const RSL_Mon         =  "mon";
      const RSL_Year        =  "year";
          
      var RegParam:string = "";
      var Templ:string = "";
      var rsc:object = null;
      var nalname:object = null;
      var naladr:object = null;
      var select:string = "";
   
      var ClientName:string = "";
      var DepartName:string = "";
      var OfficerName:string = "";
      var rs:object = Null, str="";
      var rsc1:object = Null;
      var i:integer = 2; /*Строка, с которой начинаем заполнять табличку*/
      var temppath = "";
      var inn:string = "";
      var kpp:string = "";
      var CURsum = $0;
      var rsp:object = Null;

      var day = "",mon = "",year = "";
      
      /*Выборка id Клиента*/
      select = "select t.t_objectid from dobjcode_dbt t where (t.t_code ='"+Client+"') and (t.t_objecttype = '3')and (t.t_codekind = '1')";  
      rsc = ExecSQLSelect(select);
      
      while (rsc.moveNext())
        Client = rsc.value("t_objectid");
      end;

      /* Определение наименования Клиента */
      ClientName = GetClientName(Client);
      /* Определение Офиса банка, за которым закреплен счет Клиента */
      DepartName = GetOfficerPost(Branch);
      /* Определение Фамилии И.О. руководителя офиса банка, за которым закреплен счет */
      OfficerName= GetOfficerName(Branch);
    

      /* Если не получили данных по основным значениям - то не печатаем ничего вообще */
      if ( (ClientName != 0) and (DepartName != 0) and (OfficerName != 0) )
        
        if (dlg_one == "X")
          select = "select t.t_account, t_code_currency  from daccount_dbt t where (t.t_balance between '401%' and '4089%')" + 
         "and (t.t_client = '"+Client+"')"+"and (t.t_type_account not like '%П%') and (t.t_account = '"+Account+"')"+"order by t.t_account";
           rs = ExecSQLSelect(select);
        elif (dlg_all == "X")
          select = "select t.t_account, t_code_currency  from daccount_dbt t where (t.t_balance between '401%' and '4089%')" + 
         "and (t.t_client = '"+Client+"') and (t.t_open_close != 'З') and (t.t_type_account not like '%П%') "+"order by t.t_account";
           rs = ExecSQLSelect(select);
        end;

    
   
        /* Разбиение даты текущего операционного дня на день, месяц, год */
        DateSplit({curDate},day,mon,year);



        Templ = "RemAcc.dot";
         
        if (fgBank.is_PRBB) Templ = "RemAccNew.dot"; end;

           
        GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,RegParam);
        temppath = findpath(Templ,RegParam);
        //SplitFullINN (GetPartyINN({OurBank},1), INN, KPP);
        /*CreateDocFromTemplate(temppath);

        SetBookmarkText(RSL_Bank_name, {Name_Bank});
       
        /*Заполнение ИНН, КПП, БИК банка */
        SetTableLine(RSL_Bank, 1,
                     "ИНН", SubStr({INN_Bank}, 1, 1), SubStr({INN_Bank},2,1),
                      SubStr({INN_Bank}, 3, 1), SubStr({INN_Bank}, 4, 1), SubStr({INN_Bank}, 5, 1), 
                      SubStr({INN_Bank}, 6, 1), SubStr({INN_Bank}, 7, 1), SubStr({INN_Bank}, 8, 1),
                      SubStr({INN_Bank}, 9, 1), SubStr({INN_Bank}, 10, 1),
                      "КПП", 
                      //SubStr({INN_Bank}, StrBrk({INN_Bank}, "/"), 1),
                      SubStr(kpp, 1, 1), 
                      SubStr(kpp, 2, 1),
                      SubStr(kpp, 3, 1), 
                      SubStr(kpp, 4, 1),
                      SubStr(kpp, 5, 1), 
                      SubStr(kpp, 6, 1),
                      SubStr(kpp, 7, 1), 
                      SubStr(kpp, 8, 1),
                      SubStr(kpp, 8, 1),
                     "БИК",
                      SubStr({MFO_Bank}, 1, 1), 
                      SubStr({MFO_Bank}, 2, 1), 
                      SubStr({MFO_Bank}, 3, 1),
                      SubStr({MFO_Bank}, 4, 1),
                      SubStr({MFO_Bank}, 5, 1), 
                      SubStr({MFO_Bank}, 6, 1), 
                      SubStr({MFO_Bank}, 7, 1),
                      SubStr({MFO_Bank}, 8, 1),
                      SubStr({MFO_Bank}, 9, 1));

        /*Заполнение ИНН, КПП, клиента */
        SetTableLine(RSL_Client,1,
                     "ИНН / КИО",
                      SubStr(GetPartyINN(Client),1,1), SubStr(GetPartyINN(Client),2,1),
                      SubStr(GetPartyINN(Client),3,1), SubStr(GetPartyINN(Client),4,1),
                      SubStr(GetPartyINN(Client),5,1), SubStr(GetPartyINN(Client),6,1),
                      SubStr(GetPartyINN(Client),7,1), SubStr(GetPartyINN(Client),8,1),
                      SubStr(GetPartyINN(Client),9,1), SubStr(GetPartyINN(Client),10,1),
                      SubStr(GetPartyINN(Client),11,1), SubStr(GetPartyINN(Client),12,1),
                      "КПП",
                      SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 1, 1),
                      SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 2, 1),
                      SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 3, 1),
                      SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 4, 1),
                      SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 5, 1),
                      SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 6, 1), 
                      SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 7, 1),
                      SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 8, 1),
                      SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 9, 1));

          
        SetBookmarkText(RSL_Date_report,{curDate});
        SetBookmarkText(RSL_Date_report1,date_rest);
        
        /* Наименование налогового органа */
      /*  select = "select t.t_partyid ,t.t_name  from dparty_dbt t, dobjrgdoc_dbt tt"
         + " where tt.t_objecttype = 3 and tt.t_regpartykind = 7 and tt.t_regdockind = 14 and tt.t_objectid = " 
         + Client +" and t.t_partyid = tt.t_regpartyid";
        nalname =ExecSQLSelect(select);
        if (nalname.moveNext)
            SetBookmarkText(RSL_IFNS_name, nalname.value("t_name"));
            select = "select t.t_adress from dadress_dbt t"
                    +" where t.t_partyid =" + nalname.value("t_partyid");
            naladr =ExecSQLSelect(select);
            if (naladr.moveNext())
              SetBookmarkText(RSL_IFNS_adr,naladr.value("t_adress"));
            else
              SetBookmarkText(RSL_IFNS_adr," ");
            end;
        else                                */
          SetBookmarkText(RSL_IFNS_name,NalOrgName);
          SetBookmarkText(RSL_IFNS_adr,NalOrgAddr);

     
        SetBookmarkText(RSL_Oper_name,GetOperName({oper}));
   
        SetBookmarkText(RSL_Request_date,date_report);
        SetBookmarkText(RSL_Request_date1, date_report);
        SetBookmarkText(RSL_Request_no, num);
        SetBookmarkText(RSL_Request_no1, num);
        SetBookmarkText(RSL_Client_name, ClientName );
      
        SetBookmarkText(RSL_Depart_name,DepartName );
        SetBookmarkText(RSL_Chief_name,OfficerName );
//        SetBookmarkText(RSL_Chief_name, GetChiefName(NumOper));
        
        /*Дата текущего операционного дня*/
        SetBookmarkText(RSL_Day,day);
        SetBookmarkText(RSL_Mon,MonName(Mon));
        SetBookmarkText(RSL_Year,year);
          
     //   SetTableLine(RSL_Result_Grid,i," ","Счета отсутствуют"," "," ");

        /*Заполнение информации об остатках денежных средств на счетах, открытых указанному лицу */
        while (rs.moveNext())
          if (rs.value("t_code_currency") != 0)
            select = " select t_fi_code as Code from dfininstr_dbt where t_fiid = " + rs.value("t_code_currency");
            rsc = ExecSQLSelect(Select);
            if (rsc.movenext())
              CURsum = RestAC(rs.value("t_account"),rs.value("t_code_currency"),date_rest - 1, null, chapter);
            end;
          else
            CURsum = RestA(rs.value("t_account"),date_rest - 1, null, chapter);
          end;
          /*CURsum     = GetRestDate(date_rest, rs.value("t_account"), Chapter, rs.value("t_code_currency"));*/
          SetTableLine(RSL_Result_Grid,i, rs.value("t_account"),
                      GetAccountTypeNameByAccount(rs.value("t_account"),chapter,rs.value("t_code_currency")),
                      GetIsoByID(rs.value("t_code_currency"), false),
                      StrSubst(string(CURsum),".","-"));
          i = i + 1;

        end;
  
        SetWordVisible(True);
        GetWordObject().Activate();*/
      
       WordApp = CreateWordApplication();

    if( WordApp )


       WordDoc = WordApp.Documents.Add(RSL_FullPath(temppath));
       if( WordDoc )
        WordDoc.Bookmarks("Bank_name").Range.Text             =  {Name_Bank};
        
        /*Заполнение ИНН, КПП, БИК банка */
        SplitFullINN (GetPartyINN({OurBank},1), INN, KPP);
        tbl = WordApp.ActiveDocument.Tables.Item(2);
  //       SetTableLine(RSL_Bank, 1,
        tbl.Cell(1, 1).Range.Text  = "ИНН";
        tbl.Cell(1, 2).Range.Text  = SubStr({INN_Bank}, 1, 1); 
        tbl.Cell(1, 3).Range.Text  = SubStr({INN_Bank},2,1);
        tbl.Cell(1, 4).Range.Text  = SubStr({INN_Bank}, 3, 1); 
        tbl.Cell(1, 5).Range.Text  = SubStr({INN_Bank}, 4, 1); 
        tbl.Cell(1, 6).Range.Text  = SubStr({INN_Bank}, 5, 1); 
        tbl.Cell(1, 7).Range.Text  = SubStr({INN_Bank}, 6, 1); 
        tbl.Cell(1, 8).Range.Text  = SubStr({INN_Bank}, 7, 1); 
        tbl.Cell(1, 9).Range.Text  = SubStr({INN_Bank}, 8, 1);
        tbl.Cell(1, 10).Range.Text  = SubStr({INN_Bank}, 9, 1); 
        tbl.Cell(1, 11).Range.Text  = SubStr({INN_Bank}, 10, 1);
        tbl.Cell(1, 12).Range.Text  = "КПП";
        tbl.Cell(1, 13).Range.Text  = SubStr(kpp, 1, 1); 
        tbl.Cell(1, 14).Range.Text  = SubStr(kpp, 2, 1);
        tbl.Cell(1, 15).Range.Text  = SubStr(kpp, 3, 1); 
        tbl.Cell(1, 16).Range.Text  = SubStr(kpp, 4, 1);
        tbl.Cell(1, 17).Range.Text  = SubStr(kpp, 5, 1); 
        tbl.Cell(1, 18).Range.Text  = SubStr(kpp, 6, 1);
        tbl.Cell(1, 19).Range.Text  = SubStr(kpp, 7, 1); 
        tbl.Cell(1, 20).Range.Text  = SubStr(kpp, 8, 1);
        tbl.Cell(1, 21).Range.Text  = SubStr(kpp, 9, 1);
                    
        tbl.Cell(1, 22).Range.Text  = "БИК";
        tbl.Cell(1, 23).Range.Text  = SubStr({MFO_Bank}, 1, 1); 
        tbl.Cell(1, 24).Range.Text  = SubStr({MFO_Bank}, 2, 1); 
        tbl.Cell(1, 25).Range.Text  = SubStr({MFO_Bank}, 3, 1);
        tbl.Cell(1, 26).Range.Text  = SubStr({MFO_Bank}, 4, 1);
        tbl.Cell(1, 27).Range.Text  = SubStr({MFO_Bank}, 5, 1); 
        tbl.Cell(1, 28).Range.Text  = SubStr({MFO_Bank}, 6, 1); 
        tbl.Cell(1, 29).Range.Text  = SubStr({MFO_Bank}, 7, 1);
        tbl.Cell(1, 30).Range.Text  = SubStr({MFO_Bank}, 8, 1);
        tbl.Cell(1, 31).Range.Text  = SubStr({MFO_Bank}, 9, 1);

        /*Заполнение ИНН, КПП, клиента */
        tb2 = WordApp.ActiveDocument.Tables.Item(3);
 
        //SetTableLine(RSL_Client,1,
        tb2.Cell(1, 1).Range.Text  = "ИНН / КИО";
        tb2.Cell(1, 2).Range.Text  = SubStr(GetPartyINN(Client),1,1); 
        tb2.Cell(1, 3).Range.Text  = SubStr(GetPartyINN(Client),2,1);
        tb2.Cell(1, 4).Range.Text  = SubStr(GetPartyINN(Client),3,1); 
        tb2.Cell(1, 5).Range.Text  = SubStr(GetPartyINN(Client),4,1);
        tb2.Cell(1, 6).Range.Text  = SubStr(GetPartyINN(Client),5,1); 
        tb2.Cell(1, 7).Range.Text  = SubStr(GetPartyINN(Client),6,1);
        tb2.Cell(1, 8).Range.Text  = SubStr(GetPartyINN(Client),7,1); 
        tb2.Cell(1, 9).Range.Text  = SubStr(GetPartyINN(Client),8,1);
        tb2.Cell(1, 10).Range.Text  = SubStr(GetPartyINN(Client),9,1); 
        tb2.Cell(1, 11).Range.Text  = SubStr(GetPartyINN(Client),10,1);
        tb2.Cell(1, 12).Range.Text  = SubStr(GetPartyINN(Client),11,1); 
        tb2.Cell(1, 13).Range.Text  = SubStr(GetPartyINN(Client),12,1);
        tb2.Cell(1, 14).Range.Text  = "КПП";
        /* Коркин и. Н. по заявке I-098204 */
        if (StrBrk(GetPartyINN(Client, 1), "/") != 0)
           tb2.Cell(1, 15).Range.Text  = SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 1, 1);
           tb2.Cell(1, 16).Range.Text  = SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 2, 1);
           tb2.Cell(1, 17).Range.Text  = SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 3, 1);
           tb2.Cell(1, 18).Range.Text  = SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 4, 1);
           tb2.Cell(1, 19).Range.Text  = SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 5, 1);
           tb2.Cell(1, 20).Range.Text  = SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 6, 1); 
           tb2.Cell(1, 21).Range.Text  = SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 7, 1);
           tb2.Cell(1, 22).Range.Text  = SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 8, 1);
           tb2.Cell(1, 23).Range.Text  = SubStr(GetPartyINN(Client, 1), StrBrk(GetPartyINN(Client, 1), "/") + 9, 1);
		  else
           tb2.Cell(1, 15).Range.Text  = "";
           tb2.Cell(1, 16).Range.Text  = "";
           tb2.Cell(1, 17).Range.Text  = "";
           tb2.Cell(1, 18).Range.Text  = "";
           tb2.Cell(1, 19).Range.Text  = "";
           tb2.Cell(1, 20).Range.Text  = ""; 
           tb2.Cell(1, 21).Range.Text  = "";
           tb2.Cell(1, 22).Range.Text  = "";
           tb2.Cell(1, 23).Range.Text  = "";
        end;  

        /* Наименование налогового органа */
        
        if (not fgBank.is_PRBB)
          WordDoc.Bookmarks("Date_report").Range.Text             =  {curDate};
        end;
        WordDoc.Bookmarks("IFNS_name").Range.Text             =  NalOrgName;
        WordDoc.Bookmarks("IFNS_adr").Range.Text             =  NalOrgAddr;

      /*ОЮФ 01.02.2010 Правильно вот так:
        WordDoc.Bookmarks("Date_report1").Range.Text             =  {curDate};*/
        WordDoc.Bookmarks("Date_report1").Range.Text             = date_rest;

        WordDoc.Bookmarks("Oper_name").Range.Text             =  GetOperName({oper});
   
        WordDoc.Bookmarks("Request_date").Range.Text             =  date_report;
        WordDoc.Bookmarks("Request_no").Range.Text             =  num;
        WordDoc.Bookmarks("Client_name").Range.Text             =  ClientName;
      
        //SetBookmarkText(RSL_Chief_name, GetChiefName(NumOper));
        if (( not fgBank.is_PRBB ) and ( not fgBank.is_VUZ ) and ( not fgBank.is_EXV ) and ( not fgBank.is_GEB ))  
          // KS 10.08.2010 23.08.2010 I-058968 Справки в налоговую для клиентов-исправление макросов
          // Для ВУЗа, ЭВа и ГЭБа жестко задано в шаблоне
          WordDoc.Bookmarks("Depart_name").Range.Text             =  DepartName;
          WordDoc.Bookmarks("Chief_name").Range.Text             =  OfficerName;
        end;
        
        /*Дата текущего операционного дня*/
        if (( not fgBank.is_EXV ))  // KS 10.08.2010 23.08.2010 I-058968 Справки в налоговую для клиентов-исправление макросов
                                    // Для ВУЗа и ГЭБа жестко задано в шаблоне
          WordDoc.Bookmarks("Day").Range.Text             =  day;
          WordDoc.Bookmarks("Mon").Range.Text             =  getMonthName(Mon);//zmp 20.06.2014 R-396962-2
          WordDoc.Bookmarks("Year").Range.Text             =  year;
          WordDoc.Bookmarks("Request_date1").Range.Text             =  date_report;
          WordDoc.Bookmarks("Request_no1").Range.Text             =  num;
        end;

        /*Заполнение информации об остатках денежных средств на счетах, открытых указанному лицу */
        tb3 = WordApp.ActiveDocument.Tables.Item(4); 
        while (rs.moveNext())
          if (rs.value("t_code_currency") != 0)
            select = " select t_fi_code as Code from dfininstr_dbt where t_fiid = " + rs.value("t_code_currency");
            rsc = ExecSQLSelect(Select);
            if (rsc.movenext())
              CURsum = RestAC(rs.value("t_account"),rs.value("t_code_currency"),date_rest - 1, null, chapter);
            end;
          else
            CURsum = RestA(rs.value("t_account"),date_rest - 1, null, chapter);
          end;
           /*ОЮФ 01.02.2010*/
           if (tb3.Rows.Count < i)
             tb3.Rows.Add();
           end;
           /*ОЮФ*/

          /*CURsum     = GetRestDate(date_rest, rs.value("t_account"), Chapter, rs.value("t_code_currency"));*/
           tb3.Cell(i, 1).Range.Text  = rs.value("t_account");
           tb3.Cell(i, 2).Range.Text  = GetAccountTypeNameByAccount(rs.value("t_account"),chapter,rs.value("t_code_currency"));
           if ((fgBank.is_GEB) and (GetIsoByID(rs.value("t_code_currency"), false) == "810")) //zmp 07.06.2012 I-00205503 для ГЕБ вместо кода валюты 810 нужен 643
               tb3.Cell(i, 3).Range.Text = "643";
           else
               tb3.Cell(i, 3).Range.Text  = GetIsoByID(rs.value("t_code_currency"), false);
           end;
           tb3.Cell(i, 4).Range.Text  = StrSubst(string(CURsum),".","-");
           i = i + 1;
        end;


 
        if( IsStandAlone() )
          WordApp.Visible = TRUE;
        else
          ShowReportOnTerminal( WordApp, WordDoc );
        end; 

       end; /*if( WordDoc )*/
    end;/*if( WordApp )*/
      
      
      end;

      OnError(Err)
      MsgBox(Err.Message,"| at ",Err.Line,"|in ",Err.Module,
                 "ActiveX Err:",Err.AXMes);
      SetWordVisible(True);
      GetWordObject().Activate();
   
   END;

      /*Обработчик диалоговой панели ввода исходных данных для печати*/
   MACRO Event (dlg, cmd, id, key) 
      var error:integer;
      var CodeClient; 
      var mess = "~F2~ Продолжить ~SPACE~ Выбор критерия формирования отчета ~ESC~ Выход";
      var codeno, rsc;
/*    
      var PartyID:integer = {OurBank};
      var OrgDate:date = {curdate} + 1;
      var NoChangeDate:bool = false;
*/    
/* EVG */
private var party = trechandler("party.dbt");
      
      if(cmd == DLG_INIT)
         GetNalOrg(Client, NalOrgName, NalOrgAddr);
         dlg.rec.date_report = {curdate};
         dlg.rec.date_rest = {curdate};
         dlg.rec.num = 1;
         dlg.rec.NameIFNS          = NalOrgName;
         dlg.rec.AdresIFNS         = NalOrgAddr;
//         dlg.NumDep = "";
//         dlg.Dep = "По всем отделам" ;       
     
         CodeClient = ПолучитьКодСубъекта (client, 1, error);
         if (error == 0)
           dlg.rec.client = CodeClient; 
         else
           dlg.rec.client = "Неизвестный";
         end;
         
         dlg.rec.Acc = Acc;
         dlg.rec.one = "X";
         UpdateFields(dlg); 
      end;
      
      if (cmd==DLG_SETFOCUS)
        message(mess);        
      end;
      
      if (cmd == DLG_REMFOCUS)
         
         if (FldName(dlg,id)=="date_rest")
           if ( dlg.rec.date_rest > {curdate} )
              MsgBox("Расчетная дата больше даты текущего операционного дня"); 
              return CM_CANCEL;
           end;
         
         end;
/*
         if (FldName(dlg,id)=="numdep")
           if ((GetDep1Name(dlg.NumDep) == "" ) and (dlg.NumDep != "")) //voikin добавил возможность выбора отчета по всему банку
              msgbox("Отдел "+dlg.NumDep+" не найден ");
              UpdateFields(dlg);
              return CM_CANCEL;
           else
              if (dlg.NumDep == "")
                 dlg.Dep = "По всем отделам";
              else
                 dlg.Dep = GetDep1Name(dlg.NumDep);
              end;
              UpdateFields(dlg);
           end;
         end;
*/        
         if (FldName(dlg,id)=="Date_report")
           if ( dlg.rec.date_report > {curdate} )
              MsgBox("Дата поступившего запроса ИФНС больше даты текущего операционного дня"); 
              return CM_CANCEL;
           end;
         end;
           /*Проверка поля Счет на корректность значения*/   
         if (FldName(dlg,id)=="Acc")
           if (StrLen(dlg.rec.Acc) < 20)
              MsgBox("Длина счета менее 20 символов");
              return CM_CANCEL;
           elif (not GetAccount(StrSubst(dlg.rec.Acc, "'", "")))
              MsgBox("Счет отсутствует в справочнике лицевых счетов");
              return CM_CANCEL;
           else
              Client = GetClientByAccount(dlg.rec.Acc, Chapter, Code);
              Branch = GetBranchByAccount(dlg.rec.Acc, Chapter, Code);
           end;
         end;
      
         UpdateFields(dlg); 
      end; 

      if (cmd==DLG_KEY)
        if (KEY==KEY_ESC)
           return CM_CANCEL;
        elif ( KEY==KEY_F2 )
           
           Client = client;
           num = dlg.rec.num;  //Номер поступившего запроса ИФНС
           date_report = dlg.rec.date_report; //Дата поступившего запроса ИФНС
           date_rest = dlg.rec.date_rest;
           Account = dlg.rec.Acc;
           
           acbalance = GetBalanceByAccount(dlg.rec.Acc, Chapter, Code);
           curSymb = substr(acbalance, 1, 3);
           NalOrgName = dlg.rec.NameIFNS;
           NalOrgAddr = dlg.rec.AdresIFNS;

           /*Проверка номера счета Клиента если поле Счет доступно, т.е. параметр по конкретному счету выбран*/
           if (dlg.rec.one == "X")  
           	 /* Коркин по заявке I-036961 */	
             if (not (((int(curSymb) >= 401) and (int(curSymb) <= 408)) or (curSymb == "438") or (curSymb == "421") ))
              MsgBox("Балансовый счет первого порядка должен быть в диапазоне 401 - 408 или 438, 421");
              /*(not ((int(curSymb) >= 401) and (int(curSymb) <= 408))) 
               MsgBox("Балансовый счет первого порядка должен быть в диапазоне 401 - 408");*/
               return CM_IGNORE;
             end;
        
           /*Проверка всех счетов Клиента при этом поле Счет недоступно, т.е. параметр по всем счетам выбран*/
           elif (dlg.rec.all == "X")
           		/* Коркин по заявке I-036961 */
               if (not (((int(curSymb) >= 401) and (int(curSymb) <= 408)) or (curSymb == "438") or (curSymb == "421") ))
               MsgBox("Балансовый счет первого порядка должен быть в диапазоне 401 - 408 или 438, 421");
               /*(not ((int(curSymb) >= 401) and (int(curSymb) <= 408))) 
               MsgBox("У данного Клиента отсутствуют счета первого порядка в диапазоне 401 - 408");*/
               return CM_IGNORE;
             end;
           end;

           
           if (strlen(string(date_rest)) == 0)
              MsgBox("Не указана расчетная дата для определения остатков по счетам");
              Setfocus(dlg,1);
              return CM_IGNORE;
           end;
 
           
           if (strlen(string(date_report)) == 0)
              MsgBox("Не указана дата поступившего запроса ИФНС");
              Setfocus(dlg,5);
              return CM_IGNORE;
           end;
       
           if (strlen(num) == 0)
              MsgBox("Не указан номер поступившего запроса ИФНС");
              Setfocus(dlg,6);
              return CM_IGNORE;
           end;
  
            /*Выполнение формирования отчета если основные данные присутствуют и корректны*/
           if ( ( strlen(string(Client)) != 0 ) and ( strlen(num) != 0 ) and (strlen(string(date_report)) != 0 ) and
              (strlen(string(date_rest)) != 0) and ( date_report <= {curdate} ) 
              and ( date_rest <= {curdate}) and (strLen(Account) == 20) )
             
             Return CM_SAVE;
           else
             
             MsgBox("Не все поля заполнены или корректны!");
           end;

        elif ( (KEY==KEY_ENTER) )
           if (FldName(dlg,id)=="Num")
             SetFocus(dlg, 0);
             Return CM_IGNORE;
           end;
     
 
        elif (KEY==KEY_F3) 
          if(FldName(dlg,id) == "NameIFNS")
            if (ListPT(party,PTCK_ALL, codeno, PTLIST_TAXINSTITUTE, 0, PTCK_ALL))
              rsc=execSQLselect("select t.t_shortname as Name,a.t_adress as Adress from dparty_dbt t,dadress_dbt a where t.t_partyid = a.t_partyid and t.t_partyid in (select c.t_objectid from dobjcode_dbt c where c.t_code = '"+codeno+"')");
              if (rsc.movenext())
                dlg.rec.NameIFNS  = rsc.value("Name");
                dlg.rec.AdresIFNS = rsc.value("Adress");
                UpdateFields(dlg);
              end;
            end;
          end;
/*
          if(FldName(dlg,id) == "numdep")
                if(ListOrgStructure(PartyID,OrgDate,office,superior,0,NoChangeDate))  
                  dlg.NumDep = office.Officecode;
              dlg.Dep = GetDep1Name(dlg.NumDep);//GetNameByID(office.PartyID);
              UpdateFields(dlg);
           end;
          end;
*/        
        /*Возможность выбора параметра "по всем счетам / по конкретному счету"*/
         /*Space key*/  
        elif (KEY==KEY_SPACE)
           /*Параметр по всем счетам*/
           if (FldName(dlg,id)=="all")
             // Выбор критерия по всем счетам
             if (dlg.rec.all == "")
                dlg.rec.all = "X";
                // Недоступно поле Счет
                DisableFields(dlg,4);
                dlg.rec.one = "";
                UpdateFields(dlg); 
            end;
           /*Параметр по конкретному счету*/
        elif(FldName(dlg,id)=="one")
           // Выбор критерия по конкретному счету
           if (dlg.rec.one == "")
               dlg.rec.one = "X";
               EnableFields(dlg,4);
               dlg.rec.all = "";
               UpdateFields(dlg); 
           end;
        
        end;
      end;
    end;
  END;

  
  if ( RunDialog(dlg, "Event"))
     PrintSprAcc(dlg.rec.one,dlg.rec.all);
   end;
exit(1);

END;





/*******************Тестирование макроса********************************/
/*RemAcc("","1","CC00010000040","407",1,0)*/  
/**********************************************************************/