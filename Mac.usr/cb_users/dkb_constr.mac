/************************************************************************************/
/*  RS-Bank 6.0                                              R-Style Software Lab   */
/*                                                                                  */
/*  File Name   : sfconstr.mac                                                      */
/*  Created     : 10.08.2012                                                        */
/*  Programmer  : Chesnokov D.                                                      */
/*  Description : Макрос обработки основного скролинга конструктора тарифных планов */
/*  Заявка      : C-12956                                                           */
/*  Изменения   : zip_z. 2012-08-23                                                 */
/************************************************************************************/
//финтим ушами во всю из-за 166620(пофиксили в 2030.48) как обновимся следует переписать

import BankInter, RSD, RsbDataSet, Globals;
import dkb_constr_insert, dkb_constr_view, diver;

var rs, rs_in, rs_hist, rs_upd, str, str_in, str_hist, str_upd, cnt_hist;
private var col = TArray, col_hist = TArray, rec_view, rec_ins, rec_upd, LastValue = 0, flag = true;
var FmDate:date;
file constrcom("constrcom.dbt");
file constrcom_old("constrcom.dbt");
var CountPaym = 0;

private macro AddCol (ar,ind, fld, head, width, rdonly, fldType, decPoint)

    if (fldType == null)
        fldType = 2;
    end;
    
    if (DecPoint == null)
        DecPoint = -1;
    end;
    
    ar.value (ind * 6)     = fld;
    ar.value (ind * 6 + 1) = head;
    ar.value (ind * 6 + 2) = width;
    ar.value (ind * 6 + 3 ) = fldType;
    ar.value (ind * 6 + 4 ) = decPoint;
    ar.value (ind * 6 + 5 ) = 0;   // reserv
end;

macro GetClIdForAcc(account)
    
    private var rs;
    
    rs = RsdRecordSet("select t_partyid from dsfcontr_dbt where t_servkind = 3 and t_object = '" + account + "'");
    if(rs and rs.MoveNext)
        return rs.value(0);
    else
        return 0;
    end;
    
end;

macro GetId()
    
    private var rs;
    
    rs = RsdRecordSet("select dconstrcom_dbt_SEQ.nextval from dual");
    if(rs and rs.MoveNext)
        return rs.value(0);
    else
        rs = RsdRecordSet("select max(t_id) + 1 from dconstrcom_dbt");
        if(rs and rs.MoveNext)
            return rs.value(0);
        else
            return 0;
        end;
    end;
    
end;

macro ParseFlag(flag)

    if (flag == "-")
        return -1;
    elif(flag == "0")
        return 0;
    elif(flag == "+")  
        return 1;
    end;
end;

macro ConstrEvent(rs, cmd, id, key)

    var CM_FLAG = CM_DEFAULT;
    
    if (cmd == DLG_INIT)
        while(rs.movenext and flag)
            if (rs.value(0) == lastvalue)
                flag = false;
                GoTOScroll();
            end;  
        end;
    elif (cmd == DLG_KEY)
        if (key == 13) //KEY_ENTER
            debugbreak;
            View_sfconstr(rs.value(0), rec_upd, CountPaym);
            if (ValType(rec_upd) == V_Undef)
                CM_FLAG = CM_IGNORE;
                flag = false;
            else
                debugbreak;
                
                constrcom_old.id = rs.value("t_id");
                if (not GetEQ(constrcom_old))
                    msgbox("Не удалось найти запись!!!");
                end;
                
                DtTmsplit(rs.value("t_datepack"), FmDate, null);
                
                str_upd = "Update dconstrcom_dbt set t_depositflag = ?, t_depositsum = ?, t_depositproduct = ?, " +
                                    "                          t_creditflag = ?, t_creditsum = ?, t_creditproduct = ?, " +
                                    "                          t_overflag = ?, t_oversum = ?, t_overproduct = ?," +
                                    "                          t_rateflag = ?, t_ratesum = ?, t_rateproduct = ?," +
                                    "                          t_typepacket = ?, t_typename = ?, t_namepacket = ?, t_numpacket = ?," +
                                    "                          t_sumpacket = ?, t_datepack = ?, t_sumpayment = ?, t_sumafter16 = ?, t_sumbesp = ?," +
                                    "                          t_distinctflag = chr(?), t_distinctproc = chr (?)" +
                                    " where t_id = " + rs.value("t_id");
                                    
                rs_upd = RsdCommand(str_upd);
                rs_upd.NullConversion = false;
                
                rs_upd.AddParam("t_depositflag",      RSDBP_IN,  ParseFlag(rec_upd.rec.depositflag));
                rs_upd.AddParam("t_depositsum ",      RSDBP_IN,  rec_upd.rec.depositsum);
                rs_upd.AddParam("t_depositproduct",   RSDBP_IN,  ParseFlag(rec_upd.rec.depositflag)*rec_upd.rec.depositsum);
                rs_upd.AddParam("t_creditflag",       RSDBP_IN,  ParseFlag(rec_upd.rec.creditflag));
                rs_upd.AddParam("t_creditsum ",       RSDBP_IN,  rec_upd.rec.creditsum);
                rs_upd.AddParam("t_creditproduct",    RSDBP_IN,  ParseFlag(rec_upd.rec.creditflag)*rec_upd.rec.creditsum);
                rs_upd.AddParam("t_overflag",         RSDBP_IN,  ParseFlag(rec_upd.rec.overflag));
                rs_upd.AddParam("t_oversum",          RSDBP_IN,  rec_upd.rec.oversum);
                rs_upd.AddParam("t_overproduct",      RSDBP_IN,  ParseFlag(rec_upd.rec.overflag)*rec_upd.rec.oversum);
                rs_upd.AddParam("t_rateflag",         RSDBP_IN,  ParseFlag(rec_upd.rec.rateflag));
                rs_upd.AddParam("t_ratesum",          RSDBP_IN,  rec_upd.rec.ratesum);
                rs_upd.AddParam("t_rateproduct",      RSDBP_IN,  ParseFlag(rec_upd.rec.rateflag)*rec_upd.rec.ratesum);
                if (rec_upd.rec.TypePacket == "Простой")
                    rs_upd.AddParam("t_typepacket",     RSDBP_IN,  "1");
                    rs_upd.AddParam("t_typename",       RSDBP_IN,  rec_upd.rec.typepacket);
                elif(rec_upd.rec.TypePacket == "Статусный")
                    rs_upd.AddParam("t_typepacket",     RSDBP_IN,  "2");
                    rs_upd.AddParam("t_typename",       RSDBP_IN,  rec_upd.rec.typepacket);
                end;
                rs_upd.AddParam("t_namepacket",       RSDBP_IN,  rec_upd.rec.namepacket);
                rs_upd.AddParam("t_numpacket",        RSDBP_IN,  CountPaym);
                rs_upd.AddParam("t_sumpacket",        RSDBP_IN,  rec_upd.rec.sumpacket);
                if (((rs.value("t_numpacket") != CountPaym) or (rs.value("t_typename") != rec_upd.rec.TypePacket) or (rs.value("t_sumpacket") != rec_upd.rec.SumPacket)) and (({curdate} - FmDate) > 29 ))
                    rs_upd.AddParam("t_datepack",       RSDBP_IN,  {curdate});
                else
                    rs_upd.AddParam("t_datepack",       RSDBP_IN,  rs.value("t_datepack"));
                end;
                rs_upd.AddParam("t_sumpayment",       RSDBP_IN, rec_upd.rec.SumPayment);
                rs_upd.AddParam("t_sumafter16",       RSDBP_IN, rec_upd.rec.SumAfter16);
                rs_upd.AddParam("t_sumbesp",          RSDBP_IN, rec_upd.rec.SumBESP);
                if (rec_upd.rec.distinctflag == "")
                  rs_upd.AddParam("t_distinctflag",     RSDBP_IN, 0, V_INTEGER); // аналог chr(0)
                else
                  rs_upd.AddParam("t_distinctflag",     RSDBP_IN, 88, V_INTEGER); // аналог chr(0)
                end;
                if (rec_upd.rec.distinctproc == "")
                  rs_upd.AddParam("t_distinctproc",     RSDBP_IN, 0, V_INTEGER); // аналог chr(0)
                else
                  rs_upd.AddParam("t_distinctproc",     RSDBP_IN, 88, V_INTEGER); // аналог chr(0)
                end;
                //rs_upd.AddParam("t_distinctproc",     RSDBP_IN, rec_upd.rec.distinctproc);
                
                
                rs_upd.Execute();
                flag = true;// Вот возможность спозиционироваться
                lastvalue = rs.value("t_id");

                constrcom.id = rs.value("t_id");
                if (GetEQ(constrcom))
                    writefisclog(olupdate, constrcom, constrcom_old, constrcom);
                else
                    msgbox("Не удалось найти запись!!!");
                end;
                /*Заполним историю*/
                if (((rs.value("t_numpacket") != CountPaym) or (rs.value("t_typename") != rec_upd.rec.TypePacket) or (rs.value("t_sumpacket") != rec_upd.rec.SumPacket)) and (({curdate} - FmDate) > 29 ))
                    
//          str_upd = "SELECT count(0) " +
//                    "  FROM dconstrhist_dbt " +
//                    " WHERE t_id = " + rs.value("t_id") +
//                    "   AND t_datestart = (SELECT MAX (t_datestart) " +
//                    "                        FROM dconstrhist_dbt " +
//                    "                       WHERE t_id = "+ rs.value("t_id") + ") " +
//                    "   AND t_dateend = TO_DATE ('01.01.0001', 'dd.mm.yyyy') ";
//        
//          rs_upd = RsdRecordSet(str_upd);
//          rs_upd.MoveNext();
//          if (rs_upd.value(0) != 0)

//            str_upd = "UPDATE dconstrhist_dbt " +
//                      "   SET t_dateend = TO_DATE ('30.06.2012', 'dd.mm.yyyy')" +
//                      " WHERE t_id = 105" +
//                      "   AND t_datestart = (SELECT MAX (t_datestart)" +
//                     "                        FROM dconstrhist_dbt" +
//                      "                       WHERE t_id = 105)";
//            rs_upd = RsdCommand(str_upd);



                    str_in = " INSERT INTO dconstrhist_dbt (t_id, " +
                                        "                              t_typepacket, " +
                                        "                              t_numpacket, " +
                                        "                              t_sumpacket, " +
                                        "                              t_datestart, " +
                                        "                              t_dateend) " +
                                        "      VALUES (?, ?, ?, ?, ?, ?)" ;
                    rs_in = RsdCommand(str_in);
                    rs_in.NullConversion = true;
                
                    rs_in.AddParam("id",           RSDBP_IN,  rs.value("t_id"));
                    if (rec_upd.rec.TypePacket == "Простой")
                        rs_in.AddParam("typepacket", RSDBP_IN, "1");
                    elif(rec_upd.rec.TypePacket == "Статусный")
                        rs_in.AddParam("typepacket", RSDBP_IN, "2");
                    end;
                    rs_in.AddParam("numpacket",    RSDBP_IN,  CountPaym);
                    rs_in.AddParam("sumpacket",    RSDBP_IN,  rec_upd.rec.sumpacket);
                    rs_in.AddParam("datestart",    RSDBP_IN,  {curdate});
                    rs_in.AddParam("dateend",      RSDBP_IN,  date(0,0,0));

                    rs_in.Execute();
                end;
                
                CM_FLAG = CM_SELECT;
            end;
        elif (key == 27) //KEY_ESC
            exit(1);
            CM_FLAG = CM_DEFAULT;
        elif (key == 281) //KEY_ALP+P
            
            str_hist = " SELECT CASE " +
                                "        WHEN t_typepacket = 1 THEN 'Простой' " +
                                "        WHEN t_typepacket = 2 THEN 'Статусный' " +
                                "         END AS t_typepacket, " +
                                "        (SELECT t_name " +
                                "           FROM dllvalues_dbt " +
                                "          WHERE t_list = CASE " +
                                "                         WHEN t_typepacket = 1 THEN 6003 " +
                                "                         WHEN t_typepacket = 2 THEN 6004 " +
                                "                          END " +
                                "            AND t_flag = t_numpacket) as t_namepacket, " +
                                "        t_sumpacket, " +
                                "        t_datestart, " +
                                "        t_dateend " +
                                "   FROM dconstrhist_dbt " +
                                "  WHERE t_id = " + rs.value("t_id") +
                                "  ORDER BY t_dateend desc ";
            rs_hist = RsdRecordSet(str_hist ,RSDVAL_CLIENT, RSDVAL_STATIC );
            
            AddCol (col_hist, 0, "t_typepacket", "Тип пакета", 15, true, null, null);
            AddCol (col_hist, 1, "t_namepacket", "Наименование пакета",20, true, null, null);
            AddCol (col_hist, 2, "t_sumpacket", "Стоимость пакета", 10, true, null, null);
            AddCol (col_hist, 3, "t_datestart", "Дата начала", 10, true, null, null);
            AddCol (col_hist, 4, "t_dateend",  "Дата завершения", 10, true, null, null);
    
            RunScroll(rs_hist, 5, col_hist, "constrhist", "", "История изменения пакета", "~ESC~ Выход" , true );//Т.к. скролинг только для просмотра, то без обработчика
            CM_FLAG = CM_DEFAULT;

        elif (key == 322) //KEY_F8
            debugbreak;
            if (rs.value("t_state") == 0) 
                constrcom_old.id = rs.value("t_id");
                if (not GetEQ(constrcom_old))
                    msgbox("Не удалось найти запись!!!");
                end;
                rs.value("t_state") = 1;
                rs.value("t_dateclose") = {curdate};
                rs.value("t_statechr") = "X";
                rs.Update();
                
                constrcom.id = rs.value("t_id");
                if (GetEQ(constrcom))
                    writefisclog(olupdate, constrcom, constrcom_old, constrcom);
                else
                    msgbox("Не удалось найти запись!!!");
                end;

                GoTOScroll (rs);
                UpdateScroll (rs);
                CM_FLAG = CM_IGNORE;
            else
                msgbox("Пакетное предложение уже закрыто!");
                CM_FLAG = CM_IGNORE;
            end;
        elif (key == 323) //KEY_F9
        
            Ins_sfconstr(rec_ins, CountPaym);

            if (ValType(rec_ins) == V_Undef)
                CM_FLAG = CM_IGNORE;
            else
                rs = TRsbDataSet(str ,RSDVAL_CLIENT, RSDVAL_STATIC );
                //rs.NullConversion = true;
                rs.AddNew();
            
                rs.id = GetId;
                lastValue = rs.id;//Запомним значение ключа
                rs.object = rec_ins.rec.object;
                rs.client = GetClIdForAcc(rec_ins.rec.object);
                rs.nameobject = rec_ins.rec.nameobject;
                rs.depositflag = ParseFlag(rec_ins.rec.depositflag);
                rs.depositsum = money(rec_ins.rec.depositsum);
                rs.depositproduct = ParseFlag(rec_ins.rec.depositflag)*rec_ins.rec.depositsum;
                rs.creditflag = ParseFlag(rec_ins.rec.creditflag);
                rs.creditsum = rec_ins.rec.creditsum;
                rs.creditproduct = ParseFlag(rec_ins.rec.creditflag)*rec_ins.rec.creditsum;
                rs.overflag = ParseFlag(rec_ins.rec.overflag);
                rs.oversum = rec_ins.rec.oversum;
                rs.overproduct = ParseFlag(rec_ins.rec.overflag)*rec_ins.rec.oversum;
                rs.rateflag = ParseFlag(rec_ins.rec.rateflag);
                rs.ratesum = rec_ins.rec.ratesum;
                rs.rateproduct = ParseFlag(rec_ins.rec.rateflag)*rec_ins.rec.ratesum;
                if (rec_ins.rec.TypePacket == "Простой")
                    rs.TypePacket = "1";
                    rs.typename = rec_ins.rec.TypePacket;
                elif(rec_ins.rec.TypePacket == "Статусный")
                    rs.TypePacket = "2";
                    rs.typename = rec_ins.rec.TypePacket;
                end;
                rs.namepacket = rec_ins.rec.namepacket;
                rs.numpacket = CountPaym;
                rs.sumpacket = rec_ins.rec.sumpacket;
                rs.datepack = {curdate};
                rs.sumpayment = rec_ins.rec.Sumpayment;
                rs.sumafter16 = rec_ins.rec.SumAfter16;
                rs.sumbesp = rec_ins.rec.SumBESP;
                rs.distinctflag = rec_ins.rec.distinctflag;
                rs.distinctproc = rec_ins.rec.distinctproc;
                rs.date = {curdate};
            
                rs.state = 0;
                rs.dateclose = date(0,0,0);
                rs.statechr = "";
                if (rs.Update ())
                    constrcom.id = lastValue;
                    if (GetEQ(constrcom))
                        writefisclog(olinsert, constrcom, constrcom);
                    end;
                    flag = true;//Восстановим ключик для следующей вставки
                end;
                CM_FLAG = CM_SELECT;
            end;
        end;
    end;
    
    return CM_FLAG;
end;


macro startDkbConstr ()
    if (not (ВходитВГруппу ({oper}, 202)))
        msgbox ("Вы не включены в группу \"Конструктор тарифных планов\" (202)");
    else
                str = " SELECT t_id, t_object, t_client, t_nameobject, " +
              "        t_depositflag, " +
              "        t_depositsum, " +
              "        t_depositproduct, " +
              "        t_creditflag, " +
              "        t_creditsum, " +
              "        t_creditproduct, " +
              "        t_overflag, " +  
              "        t_oversum, " + 
              "        t_overproduct, " +
              "        t_rateflag, " + 
              "        t_ratesum, " + 
              "        t_rateproduct, " +
              "        t_typepacket, " +
              "        t_typename, " +
              "        t_namepacket, " +
              "        t_numpacket, " +
              "        t_sumpacket, " +
              "        t_datepack, " +
              "        t_sumpayment, " +
              "        t_sumafter16, " +
              "        t_sumbesp, " +
              "        t_distinctflag, " +
              "        t_distinctproc, " +
              "        t_date, " +
              "        t_statechr, " +
              "        t_dateclose, " +
              "        t_state " +
              "   FROM dconstrcom_dbt order by t_id";
  
        rs = RsdRecordSet(str ,RSDVAL_CLIENT, RSDVAL_STATIC );
        rs.NullConversion = true;
  
        AddCol (col, 0, "t_id", "ID", 10, true, null, null);
        AddCol (col, 1, "t_object", "Договор обслуживания", 25, true, null, null);
        AddCol (col, 2, "t_client", "ID клиента", 10, true, null, null);
        AddCol (col, 3, "t_nameobject", "Наименование", 40, true, null, null);
        AddCol (col, 4, "t_depositproduct",  "Депозитный продукт", 10, true, null, null);
        AddCol (col, 5, "t_creditproduct",  "Кредитный продукт", 10, true, null, null);
        AddCol (col, 6, "t_overproduct",  "Наличие овердрафта", 10, true, null, null);
        AddCol (col, 7, "t_rateproduct",  "Наличие продукта начисления %", 10, true, null, null);
        AddCol (col, 8, "t_typename",  "Тип пакета", 10, true, null, null);
        AddCol (col, 9, "t_namepacket",  "Наименование пакета", 12, true, null, null);
        AddCol (col, 10, "t_sumpacket",  "Стоимость пакета", 10, true, null, null);
        AddCol (col, 11, "t_sumpayment",  "Стоимость платежа при привышении", 10, true, null, null);
        AddCol (col, 12, "t_sumafter16",  "Надбавка за проведение после 16", 10, true, null, null);
        AddCol (col, 13, "t_sumbesp",  "Надбавка за БЭСП", 10, true, null, null);
        AddCol (col, 14, "t_distinctflag",  "Инд. Коэф.", 1, true, null, null);
        AddCol (col, 15, "t_distinctproc",  "Инд. Стоим.", 1, true, null, null);
        AddCol (col, 16, "t_date", "Дата ввода", 10, true, null, null);
        AddCol (col, 17, "t_statechr",  "Статус", 1, true, null, null);
        AddCol (col, 18, "t_dateclose",  "Дата закрытия", 10, true, null, null);
  
        While(RunScroll(rs, 19, Col, "sfconstr", "ConstrEvent", "Пакетное предложение", "~ESC~ Выход ~F9~ Ввод нового клиента ~ENTER~ Просмотр и редактирование ~F8~ Закрыть пакет ~ALP+P~ История изменений" , true ))
          rs = RsdRecordSet(str ,RSDVAL_CLIENT, RSDVAL_STATIC );
          rs.NullConversion = true;
        end;
        rs.Close();
    end;
end;

/**********************************************************************/
startDkbConstr ();
exit (1);