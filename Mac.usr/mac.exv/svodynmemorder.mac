import oralib, globals, "KeyCodes.mac", "repforms.mac", RsbDataset;
import VBAconst;
var Account = "",
    BeginDate,
    EndDate,
    dkb,
    DK_Acc;
private var Acc, Branch, Client, Chapter, Code, NumOper, Oper;
private var dlg;
var sql_str:string="";


	private var ob,ex;
	private var obBook,obSheet;
	private var WorkbookName;

/*Получить наименование Клиента по Счету*/
private MACRO GetClientByAccount(account,chapter,code)                                                                                                         
  var rsc:object = Null, str="";                                                                                                                         
  //VDN 30.10.2014 R-483899 Адаптация
  str=string(" select t.* from daccount_dbt t where t.t_chapter=",chapter," and t.t_account='",account,"' and t.t_code_currency=",code);                       
  rsc=execSQLselect(str);                                                                                                                                    
  if( rsc.moveNext())                                                                                                                                        
     return rsc.value("t_client");                                                                                                                            
  else                                                                                                                                                       
     msgbox ("Счет ",account," по главе ",chapter," не найден ");                                                                                             
     return 0;                                                                                                                                                
  end;
END;

/*Обработчик панели*/
MACRO SvodMO_dlg (dlg, cmd, id, key) 


  var mess = "~F2~ Продолжить ~ESC~ Выход В поле \"Операционисты\" можно ввести несколько операционистов через запятую или через тире";

  if ( cmd == DLG_INIT)

    dlg.rec.Acc       = Acc;
    dlg.rec.BeginDate = {curdate};
    dlg.rec.EndDate   = {curdate};
    dlg.rec.D_K       = "X";
    dlg.rec.DK_Acc    = "*";
    dlg.rec.Oper      = "*";
    UpdateFields(dlg); 

  elif (cmd == DLG_REMFOCUS)

    if (FldName(dlg,id)=="Acc")
       if (StrLen(dlg.rec.acc) < 20)
          MsgBox("Длина счета менее 20 символов");
          return CM_CANCEL;
       elif (not GetAccount(StrSubst(dlg.rec.acc, "'", "")))
          MsgBox("Счет отсутствует в справочнике лицевых счетов");
          return CM_CANCEL;
       else
          Client = GetClientByAccount(dlg.rec.acc, Chapter, Code);
          Branch = GetBranchByAccount(dlg.rec.acc, Chapter, Code);
       end;
    elif (FldName(dlg,id)=="BeginDate")
       if ( dlg.rec.BeginDate > dlg.rec.EndDate ) 
          MsgBox("Дата начала больше даты окончания отчетного периода");
          return CM_CANCEL;
       elif ( dlg.rec.BeginDate > {curdate} )
          MsgBox("Дата начала больше даты текущего операционного дня"); 
          return CM_CANCEL;
       end;
    elif (FldName(dlg,id)=="EndDate") 
       if (dlg.rec.EndDate < dlg.rec.BeginDate )
          MsgBox("Дата окончания меньше даты начала отчетного периода"); 
          return CM_CANCEL;
       elif ( dlg.rec.EndDate > {curdate} )
          MsgBox("Дата окончания больше даты текущего операционного дня");
          return CM_CANCEL;
       end;
    elif (FldName(dlg,id)=="D_K") 
       if ((dlg.rec.d_k != " ") and (dlg.rec.d_k != "X"))
          MsgBox("В поле ДК пробел или X");
          return CM_CANCEL;
       end;
    elif (FldName(dlg,id)=="DK_Acc") 
       if (dlg.rec.dk_acc == "")
          dlg.rec.dk_acc = "*";
          return CM_CANCEL;
       end;
    elif (FldName(dlg,id)=="Oper") 
       if (dlg.rec.Oper == "")
          dlg.rec.Oper = "*";
          return CM_CANCEL;
       end;
    end;
    UpdateFields(dlg); 

  elif (cmd==DLG_KEY)
    if ( KEY == KEY_ESC )                                                                                                                   
       return CM_CANCEL;  
    elif ( KEY == KEY_SPACE )
       if (FldName(dlg,id)=="D_K") 
         if (dlg.rec.d_k == "X")
           dlg.rec.d_k = " ";
         elif (dlg.rec.d_k == " ")
           dlg.rec.d_k = "X";
         else
           dlg.rec.d_k = "X";
         end;
         UpdateFields(dlg);
       end;
    elif( KEY == KEY_F2 )                                                                                                                
      Account = StrSubst(dlg.rec.acc, "'", "");                                                                                     
      BeginDate = dlg.rec.BeginDate;                                                                                                
      EndDate = dlg.rec.EndDate;                                                                                                    
      if (dlg.rec.d_k == "X")                                                                                                    
        dkb = True;                                                                                                               
      else                                                                                                                          
        dkb = False;                                                                                                              
      end;
      DK_Acc = dlg.rec.dk_acc;
      Oper = dlg.rec.Oper;
                                                                                                                                        
      /*02/09/2008 Новиков С. С. добавил возможность формирования отчета только при корректных значениях*/                              
      if ((StrLen(dlg.rec.acc) == 20) and (dlg.rec.BeginDate <= dlg.rec.EndDate) and (dlg.rec.BeginDate <= {curdate})                   
         and (dlg.rec.EndDate >= dlg.rec.BeginDate) and (dlg.rec.EndDate <= {curdate}) and (GetAccount(StrSubst(dlg.rec.acc, "'", ""))))
           Return CM_SAVE;                                                                                                              
      else                                                                                                                              
        MsgBox("--Не все поля корректны!--");                                                                                           
      end;                                                                                                                              
     /***************************************************************************************************/                              
    elif ( (KEY==KEY_ENTER) and (FldName(dlg,id)=="EndDate") )                                                                          
        SetFocus(dlg, 0);                                                                                                               
        Return CM_IGNORE; 
    end;
  elif (cmd==DLG_SETFOCUS)
    message(mess);        
  end;                                                                                                                                  

  return CM_DEFAULT;

END;


private macro openExcel(fulloutput)
	var out;
   if (IsStandAlone()) // 2? ?oN?┐a
      if ((ValType(ex)!=V_UNDEF) and (ex.Visible==False))
      	ex = ActiveX("Excel.Application",NULL,false); 
      else
      	ex = ActiveX("Excel.Application",NULL,true);        
      end;
   else                // 3? ?oN?┐a
      ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
      ex = ob.CreateComObject ("Excel.Application");
   end; 

   obBook = ex.Workbooks.open(fulloutput); 
   var nmtlg_name =ex.Workbooks.Item(ex.Workbooks.count).Name;
   debugbreak;

//   msgbox(ex.Workbooks.count);
   obSheet = ex.Workbooks.Item(nmtlg_name).ActiveSheet();

end;


MACRO OutputInExcel()

  var ds;
  var ind:integer=8; /*Строка с которой начинается данные и кончается шапка*/
  var npp:integer,ind1:integer;
  var gr=tarray;
  var out, output = "svodnymemorder.xlt", fulloutput;      
  var k = 0;/*Счетчик*/
  var itogo_sum_d = $0;/*Итого по дебету*/
  var itogo_sum_k = $0;/*Итого по кредиту*/
  var itogo_doc = 0;   /*Кол-во документов*/

  InitProgress(-1, "", "Выполняется построение сводного мемордера");

  //Gurin S. 30.10.2014 R-483899-3
  //sql_str = "select * from darhdoc";
  sql_str = "select * from dacctrn_dbt";

  //Gurin S. 27.08.2015 R-616367-2 Проводки со статусом 4 не учитываем
  sql_str = sql_str + " where t_state != 4 and t_account_";

  if(dkb)
    sql_str = sql_str + "payer";
  else
    sql_str = sql_str + "receiver";
  end;

  sql_str = sql_str + " = '"+account+"' and t_date_carry between to_date('"+begindate+"','dd.mm.yyyy') and to_date('"+enddate+"','dd.mm.yyyy')";

  if(DK_Acc != "*")

     if(dkb)
       sql_str = sql_str + " and " + convertMaskToSQLFormat(DK_Acc,"t_account_receiver");
     else
       sql_str = sql_str + " and " + convertMaskToSQLFormat(DK_Acc,"t_account_payer");
     end;

  end;

  if(Oper != "*")

     sql_str = sql_str + " and " + convertMaskToSQLFormat(Oper,"t_oper");

  end;

  sql_str = sql_str + " and t_result_carry != 14 ";

  //Gurin S. 30.10.2014 R-483899-3
  //sql_str = sql_str + " order by t_sum ";
  if(dkb)
     sql_str = sql_str + " order by t_sum_payer ";
  else
     sql_str = sql_str + " order by t_sum_receiver ";
  end;


/*  getstring(sql_str);*/

/*
  if (IsStandAlone()) // Двухзвенка
    if ((ValType(ex)!=V_UNDEF) and (ex.Visible==False))
    ex = ActiveX("Excel.Application",NULL,false); 
    else
    ex = ActiveX("Excel.Application",NULL,true);
    end;
  else // Трехзвенка
  ob = CreateObject ("rsax","TRsAxServer","RsAxServer",IsStandAlone());
  ex = ob.CreateComObject ("Excel.Application",true);
  end; 
*/

  GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,out);
  Fulloutput = FindPath(output, out);                    

  if (not Fulloutput)
  	msgbox("Не найден шаблон svodnymemorder.xlt");
  	exit();
  end;

//  obBook = ex.Workbooks.open(fulloutput); 

//  obSheet = obBook.ActiveSheet(); 

	openExcel(fulloutput);


  obSheet.Range("A"+1).Value={Name_Bank};
  obSheet.Range("C"+3).Value="СВОДНЫЙ МЕМОРИАЛЬНЫЙ ОРДЕР";
  obSheet.Range("C"+4).Value=string(begindate+"-"+enddate);

  if(dkb)
    obSheet.Range("C"+5).Value=string("по дебету счета "+account);
  else
    obSheet.Range("C"+5).Value=string("по кредиту счета "+account);
  end;

  obSheet.Range("A"+7).Value="№ док";
  obSheet.Range("B"+7).Value="Шифр/Вид";
  //<ASV Добавил формат для экселя>
  ObSheet.Columns("B:B").numberformat = "@";

  obSheet.Range("C"+7).Value="Счет";
  //<ASV растянул колонку>
  ObSheet.Columns("C:C").ColumnWidth  = 25;
  debugbreak;
  obSheet.Range("D"+7).Value="Сумма";
  obSheet.Columns("D:D").numberformat = "0";   // Gurin S. N. I-00156432-2
  obSheet.Range("E"+7).Value="Основание";

  ex.Columns("E:E").ColumnWidth = 60;

/*getstring(sql_str);*/

  ds=trsbdataset(sql_str);

  /*Строка = отступ  - 1*/
  npp=ind-1;

  while(ds.movenext())
    /*Перейдем на следующую строку*/
    npp=npp+1;
    /*Посчитаем количество докумнтов*/
    itogo_doc = itogo_doc + 1; 
    /*Если заполняем первую строку*/

    obSheet.Range("A"+npp).Value=ds.value("t_numb_document");
    obSheet.Range("B"+npp).Value=ds.value("t_shifr_oper") + "/" + ds.value("t_kind_oper");

    if(dkb)
       obSheet.Range("C"+npp).Value="'" + ds.value("t_account_receiver");
       obSheet.Range("D"+npp).Value=ds.value("t_sum_payer");
       itogo_sum_d = itogo_sum_d + ds.value("t_sum_payer");
    else
       obSheet.Range("C"+npp).Value="'" + ds.value("t_account_payer");
       obSheet.Range("D"+npp).Value=ds.value("t_sum_receiver");
       itogo_sum_k = itogo_sum_k + ds.value("t_sum_receiver");
    end;

    obSheet.Range("E"+npp).Value=ds.value("t_ground");

    /*obSheet.Range("H"+npp).Value=ds.value("t_ground");*/
    gr[gr.size]=ds.value("t_ground");
  end;

  /*Форматируем стобец СУММА ДОКУМЕНТА для отображения с 2-мя цифрами после запятой*/
  for (k, ind, npp)
      obSheet.Cells (k, 4).Select;
      obSheet.Application.Selection.NumberFormat = "0,00";
  end;


  /*Форматируем стобец СУММА ДОКУМЕНТА для отображения с 2-мя цифрами после запятой*/
  for (k, ind, npp)
      obSheet.Cells (k, 5).Select;
      obSheet.Application.Selection.WrapText = True;
      obSheet.Application.Selection.ShrinkToFit = True;
  end;

  /*npp=0;*/

  /*Печатаются основания*/
/*
  for (ind1,0,gr.size-1)
    /*npp=npp+1;*/
    obSheet.Range("a"+(npp+ind1+2)).Value=ind1+1;
    obSheet.Range("b"+(npp+ind1+2)).Value=gr[ind1];
  end;
*/

  obSheet.range("a"+(ind-1)+":e"+npp).select;

  ex.Selection.Borders(xlDiagonalDown).LineStyle = 0;
  ex.Selection.Borders(xlDiagonalUp).LineStyle = 0;

  ex.Selection.Borders(xlEdgeLeft).LineStyle = xlContinuous;
  ex.Selection.Borders(xlEdgeLeft).Weight = xlThin;
  ex.Selection.Borders(xlEdgeLeft).ColorIndex = xlAutomatic;

  ex.Selection.Borders(xlEdgeTop).LineStyle = xlContinuous;
  ex.Selection.Borders(xlEdgeTop).Weight = xlThin;
  ex.Selection.Borders(xlEdgeTop).ColorIndex = xlAutomatic;
  
  ex.Selection.Borders(xlEdgeBottom).LineStyle = xlContinuous;
  ex.Selection.Borders(xlEdgeBottom).Weight = xlThin;
  ex.Selection.Borders(xlEdgeBottom).ColorIndex = xlAutomatic;
  
  ex.Selection.Borders(xlEdgeRight).LineStyle = xlContinuous;
  ex.Selection.Borders(xlEdgeRight).Weight = xlThin;
  ex.Selection.Borders(xlEdgeRight).ColorIndex = xlAutomatic;
  
  ex.Selection.Borders(xlInsideVertical).LineStyle = xlContinuous;
  ex.Selection.Borders(xlInsideVertical).Weight = xlThin;
  ex.Selection.Borders(xlInsideVertical).ColorIndex = xlAutomatic;
  
if ((npp-ind-1) > 0) // Gurin S. N. ошибка если 0
     ex.Selection.Borders(xlInsideHorizontal).LineStyle = xlContinuous;
     ex.Selection.Borders(xlInsideHorizontal).Weight = xlThin;
     ex.Selection.Borders(xlInsideHorizontal).ColorIndex = xlAutomatic;
  end;

  /*Заполним строку ИТОГО*/
  /*Перейдем на следующую строку*/
  npp=npp+2;
  if(dkb)
     obSheet.Range("A"+npp).Value = " Итого документов " + itogo_doc + " на сумму " + money(itogo_sum_d);
  else
     obSheet.Range("A"+npp).Value = " Итого документов " + itogo_doc + " на сумму " + money(itogo_sum_k);
  end;


  npp=npp+2;
  obSheet.Range("B"+npp).Value = " Подписи:  ";

  npp=npp+2;
  obSheet.Range("B"+npp).Value = " Исполнитель _____________________ ( _______________ )";

  npp=npp+2;
  obSheet.Range("B"+npp).Value = " Руководитель ";

  npp=npp+1;
  obSheet.Range("B"+npp).Value = " Подразделения ___________________ ( _______________ )";

  npp=npp+2;
  obSheet.Range("B"+npp).Value = " Контроллер  _____________________ ( _______________ )";

  ex.visible=true;

  RemProgress();

END; 

/*Основная макропроцедура*/
MACRO SvMemOrd(p_Acc, p_Branch, p_Client, p_Chapter, p_Code, p_NumOper) 

	debugbreak;

  var path = "", pathfile = "", filen = "RSU.lbr";

  Acc = p_Acc; 
  Branch = p_Branch; 
  Client = p_Client; 
  Chapter = p_Chapter; 
  Code = p_Code; 
  NumOper = p_NumOper;

  GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,path);
  /*path = "..\\mac.usr\\DebugMacro\\Zubko\\";*/

  pathfile = FindPath(filen,path);

  if (not pathfile)
    msgbox("Не найдена RSU.lbr");
    exit();
  end;
  dlg = TRecHandler("SVODMO",pathfile,True);

  if (RunDialog(dlg, "SvodMO_dlg"))
    if (Account != "")
      OutputInExcel();
    end;
  end;

END;


//SvMemOrd("47416840400000000132", 1, 0, 1, 0, 10368 ); 