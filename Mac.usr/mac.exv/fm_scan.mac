/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    ███████       █████      █████     ███
    █████████   ████████   ████████    ███
    ███   ███   ███        ███         ███
    ████████     ███████    ███████    ███
    ██████            ███        ███   ███
    ███ ████    █████████  █████████   ████████
    ███   ████    █████      █████     ████████

   R-Style Softlab
   
   Имя файла fm_scan.mac

   Описание:  Дополнительные проверки при отборе операций, подлежащих контролю

   ChangeLog:
-----------------------------------------------------------------------------------------------------------------------------------------------------
//RR 31.10.2012 Выполнил адаптацию макроса
-----------------------------------------------------------------------------------------------------------------------------------------------------
//RR 12.11.2012 Параметризовал запрос в CheckPartyKind
-----------------------------------------------------------------------------------------------------------------------------------------------------
//RR 13.11.2012 Убрал из CheckCode9001 "лишние" на взгляд Пономарева В. проверки
-----------------------------------------------------------------------------------------------------------------------------------------------------
//RR 15.11.2012 Исправлена ошибка заполнения dpmpaym_dbt встречаются записи у которых поля reciever и payer заполнялись 0
                и из-за этого на некоторых операциях не проставлялся код 4006
-----------------------------------------------------------------------------------------------------------------------------------------------------
//RR 23.11.2012 Фикс запроса 188517, добавлен параметр FMOperation.CodeBeforeScan
-----------------------------------------------------------------------------------------------------------------------------------------------------
//KS 26.11.2013 Адаптация под 31ю сборку
-----------------------------------------------------------------------------------------------------------------------------------------------------
//RR Восстанавливаю утерянные переменные
-----------------------------------------------------------------------------------------------------------------------------------------------------
//RR 13.03.2014 Добавил для ВУЗа проверку на сумму, документы сумма которых превышают RR_MIN_SUM_FOR_SCAVENGING будут переданы на проверку в функцию 
                CheckUnusualOperations
-----------------------------------------------------------------------------------------------------------------------------------------------------
//RR 18.03.2014 В CheckPayment изменил "места" вызова FM_FillOperationParty с целью исключения лишних вызовов.
-----------------------------------------------------------------------------------------------------------------------------------------------------
//RR 20.03.2014 Внес правки по рекомендации Мишина Ю., пользовательский блок будет выполнятся только для операций который 100% пойдут на контроль
-----------------------------------------------------------------------------------------------------------------------------------------------------
//RR 17.05.2014 Доработка кода 9001 по 110-ФЗ
-----------------------------------------------------------------------------------------------------------------------------------------------------
//RR 13.01.2015 Параметризую запросы из CheckMutydoc и CheckMemorder
-----------------------------------------------------------------------------------------------------------------------------------------------------
//RR 14.01.2015 Установка 120-го ХФса, запросы 213295, 217530
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

Import rsd, FMInter, FIInter, PaymInter, Календарь, "fm_ground.mac", "globals.mac";
Import OprInter, CTInter, cb_sql, "fm_pmexecs.mac", fm_scan_util;

private record Payment("pmpaym.dbt");

private record PmRMProp("pmrmprop.dbt");

private record PmAddPI("pmaddpi.dbt");
private var SumForOK : money;

private var LinkPaymentID:integer;
private var LinkKind:integer;
private var NotCreateOprWithoutCode:bool; 

private macro GetAccountRecord( accRec, Account : string, Code_Currency : integer, Chapter : integer ) : bool
  file acc ("account.dbt" ) key 0;
  
  if( Chapter == NULL ) acc.Chapter = 1;
  else                  acc.Chapter = Chapter;
  end;

  acc.Account       = Account;
  acc.Code_Currency = Code_Currency;

  if( getEQ( acc ) )
    Copy( accRec, acc );
    return true;
  end;
  return false;
end;

private macro CheckDocumentAccount( Chapter : integer ) : bool

  var AccMask = "91312*, 91412*, 915*";

  return (Chapter == 1)
     or ((Chapter == 3) and ((CompareStrWithMasks(AccMask, Payment.PayerAccount) == 0) or (CompareStrWithMasks(AccMask, Payment.ReceiverAccount) == 0)));

end;


/* Дополнительная проверка мультивалютного документа */
private macro CheckMutydoc( Chapter : @integer ) : integer
  
  var rs : RsdRecordset;
  var sqlString : string;
  var cmd;
  var stat : integer;

  stat = 1;
  
  cmd = RSDCommand(" SELECT t_Chapter FROM dmultydoc_dbt WHERE t_AutoKey = ?");
  cmd.AddParam("", RSDBP_IN, Payment.PaymentID);

  rs = RsdRecordset(cmd);

  if( rs.moveNext() )

    Chapter = int(rs.value(0));

    if( CheckDocumentAccount(Chapter) )
      stat = 0;
    end;

  end;
  
  return stat;

end;

/* Дополнительная проверка мемордера */
private macro CheckMemorder( Chapter : @integer ) : integer
  
  var rs : RsdRecordset;
  var sqlString : string;
  var cmd;
  var stat : integer;

  stat = 1;

  cmd = RSDCommand(" SELECT t_Chapter FROM dcb_doc_dbt WHERE t_DocumentID = ? ");
  cmd.AddParam("", RSDBP_IN, Payment.PaymentID);

  rs = RsdRecordset(cmd);

  if( rs.moveNext() )

    Chapter = int(rs.value(0));

    if( CheckDocumentAccount(Chapter) )
      stat = 0;
    end;

  end;
  
  return stat;

end;



private macro CheckPartyKind( PartyID: integer, PartyKind : integer) : bool
  
  var rs : RsdRecordset;
  var sqlString : string;
  var cmd;

  var count : integer;
  var retVal : bool;

  retVal = false;

  sqlString = "SELECT count(1) FROM dpartyown_dbt WHERE t_PartyID = ? AND  t_PartyKind = ? ";
  cmd = RsdCommand(sqlString);
  cmd.addParam( "", RSDBP_IN, PartyID);
  cmd.addParam( "", RSDBP_IN, PartyKind);
  rs = RsdRecordset(cmd);

  if( rs.moveNext() )

    count = int(rs.value(0));

    if( count > 0 )
      retVal = true;
    end;

  end;
  
  return retVal;
end;


/* Дозаполнении операций, связанных с драгметаллами */
private macro CheckMetal( FMOperation : RsbFMOperation )

  if( FMOperation.Metal > 0 )
    SetOperationCode( FMOperation, "5005" );
  end;

end;

/* Дополнительная проверка кассовых платежей */
private macro CheckCashPayment( FMOperation : RsbFMOperation )

  if( Payment.Purpose == PM_PURP_CASHBAL )

    if( CompareStrWithMasks("40906*", Payment.ReceiverAccount) == 0 )

      /* инкассация */

      /* плательщик - клиент счета получателя */
      FMOperation.OprParty(_FM_PARTY_Payer).PartyID = Payment.Receiver;

      /* получатель - банк */
      FMOperation.OprParty(_FM_PARTY_RECEIVER).PartyID = FMOperation.BankID;

    end;

  end;

end;

/* Дополнительное заполнение параметров операции */
private macro FillOperation( FMOperation : RsbFMOperation )

  var DocKind = Payment.DocKind;

  if(
     (Payment.DocKind == DLDOC_BANKPAYMENT)
  or (Payment.DocKind == DLDOC_BANKCLAIM  )
  or (Payment.DocKind == BBANK_CPORDER    )
  or (Payment.DocKind == PS_PAYORDER      )
  or (Payment.DocKind == PS_CPORDER       )
  or (Payment.DocKind == PS_INRQ          )
  or (Payment.DocKind == WL_INDOC         )
  or (Payment.DocKind == WL_WIPM          )
  or (Payment.DocKind == CASH_PS_INCORDER )
  or (Payment.DocKind == CASH_PS_OUTORDER )
  or (Payment.DocKind == CASH_BOF_INCORDER)
  or (Payment.DocKind == CASH_BOF_OUTORDER)
    )

    FMOperation.PaymDocDate   = Payment.ValueDate;
    FMOperation.PaymDocNumber = PmRMProp.Number;

  end;

  if ( (accountexists(Payment.Receiveraccount)) and ((Payment.Receiver == -1) or (Payment.Receiver == 0)) )
      FMOperation.OprParty(_FM_PARTY_RECEIVER).PartyId   = GetPartyByAccount(Payment.Receiveraccount);
      FMOperation.OprParty(_FM_PARTY_RECEIVER).PartyType = GetPartyType(FMOperation.OprParty(_FM_PARTY_RECEIVER).partyid);
  end;
end;


/* проверить, подпадает ли участник операции под код из группы 3000 */
private macro _checkPartyCode3000( FMOperation : RsbFMOperation, FMOprParty : RsbFMOprParty ) : bool
  
  var SetCode = false;

  if( FMOprParty.PartyID != FMOperation.BankID )
    SetCode = FMOprParty.CheckCountry();
  end;

  return SetCode;

end;

/* Проверка на простановку кода из группы 3000 */
private macro CheckCode3000( FMOperation : RsbFMOperation ) : bool
  
  var NeedSetCode : bool;
  var CountrySign : bool;

  CountrySign = NeedSetCode = false;

  NeedSetCode = _checkPartyCode3000(FMOperation, FMOperation.OprParty(_FM_PARTY_PAYER) );
  if( NeedSetCode ) CountrySign = true; end;

  NeedSetCode = _checkPartyCode3000(FMOperation, FMOperation.OprParty(_FM_PARTY_RECEIVER) );
  if( NeedSetCode ) CountrySign = true; end;

  return CountrySign;

end;

/* проверить, подпадает ли участник операции под код 4005 */
private macro _checkPartyCode4005( FMOperation : RsbFMOperation, FMOprParty : RsbFMOprParty ) : bool
  
  var SetCode = false;
  var _3MonthsCalcType, DaysInMon, stat;  
  var TmpDt, PeriodEndDate;
  var Day, Mon, Year;
  var v_partyid, v_startdate, v_rs;

  if( (FMOperation.IsInternalParty(FMOprParty.FMPartyKind)) and (FMOprParty.BankID != FMOprParty.PartyID) )

    if( IsClientAccount(FMOprParty.Account) )

      if( ((FMOprParty.PartyType == "Ю") or (FMOprParty.PartyType == "П")) and (FMOprParty.RegDate != date(0,0,0)) )

        /*Для каждого документа регистрации определяем: */
        _3MonthsCalcType = Get_3MonthsCalcType();
         
        /*1.  Если настройка = 1, то: */
        if( _3MonthsCalcType == 1 )

          /*Если "Дата платежа" (pmpaym.ValueDate) минус "Дата госрегистрации" 
                  <= 3х календарных месяцев, добавить код 4005.*/          
        if( DateAfterCalenMonths(FMOprParty.RegDate, 3) >= FMOperation.DateCarry )
          SetCode = true;

          SetOperationCode( FMOperation, "4005" );
        end;

        elif( _3MonthsCalcType == 0 )
        /*2.  Если настройка = 0, то определяем дату окончания периода по следующему правилу:
        - Берем дату, следующую за датой госрегистрации - это будет дата начала периода.
        - Прибавляем к этой дате 3 месяца, число месяца при этом остается тоже. */
          TmpDt = DateAfterCalenDays( FMOprParty.RegDate, 1 );        
          TmpDt = DateAfterCalenMonths( TmpDt, 3 );          
          /* - Если полученная дата есть в месяце и является рабочим днем по календарю, то считаем ее 
            датой окончания периода.*/
          DaysInMon = GetDaysInMonth( TmpDt );
          DateSplit( TmpDt, Day, Mon, Year );
          if( Day <= DaysInMon )
            if( IsWorkDay( TmpDt ) )
              PeriodEndDate = TmpDt;
            else
          /* - Если полученная дата есть в месяце, но она не является рабочим днем по календарю, 
               то берем ближайший следующий за ней рабочий день - это и будет дата окончания периода.*/
              TmpDt = DateAfterCalenDays( TmpDt, 1 );
              while( IsWorkDay( TmpDt ) == 0 )                  
                TmpDt = DateAfterCalenDays( TmpDt, 1 );
              end;
              PeriodEndDate = TmpDt;
            end;
          
          else
          /* - Если в месяце нет полученной даты (например, дата начала - 30.11.06, дата окончания 
            должна быть - 30.02.07, но 30 числа нет в феврале), то берем последний день этого 
            месяца (в нашем примере - 28 февраля).*/                     
            TmpDt = date( DaysInMon, Mon, Year );            
            /*  Проверяем по календарю - является он рабочим или нет:*/
            if( IsWorkDay( TmpDt ) )
              PeriodEndDate = TmpDt; /* - Если ДА - то это дата окончания периода.*/
            else
            /*  - Если НЕТ - то берем ближайший следующий за ней рабочий день, и это будет дата 
                  окончания периода. */
              TmpDt = DateAfterCalenDays( TmpDt, 1 );
              while( IsWorkDay( TmpDt ) == 0 )                  
                TmpDt = DateAfterCalenDays( TmpDt, 1 );
              end;
              PeriodEndDate = TmpDt;              
            end;
                          
          end;
                    
          /*  Если "Дата платежа" (pmpaym.ValueDate) <= полученной даты окончания периода, 
              добавить код 4005.*/
          if( PeriodEndDate >= FMOperation.DateCarry )
            SetCode = true;
            SetOperationCode( FMOperation, "4005" );
          end;
                    
        end;              

       //Лавренов: Провярем данные для счетов Лоро
      elif( (FMOprParty.PartyType == "Ю") and (IsCorrAccount(FMOprParty.Account) == true) and ((GetPartyByAccount(FMOprParty.Account) != {OurBank}) and (GetPartyByAccount(FMOprParty.Account) != -1)) )
        v_partyid = GetPartyByAccount(FMOprParty.Account);
        v_rs = USR_GetPartyReg(v_partyid, 7,4);
        
        if(v_rs and v_rs.movenext)
        v_startdate = date(v_rs.t_startdate);
       /*Для каждого документа регистрации определяем: */
        _3MonthsCalcType = Get_3MonthsCalcType();
         
        /*1.  Если настройка = 1, то: */
        if( _3MonthsCalcType == 1 )

          /*Если "Дата платежа" (pmpaym.ValueDate) минус "Дата госрегистрации" 
                  <= 3х календарных месяцев, добавить код 4005.*/          
        if( DateAfterCalenMonths(v_startdate, 3) >= FMOperation.DateCarry )
          SetCode = true;

          SetOperationCode( FMOperation, "4005" );
        end;

        elif( _3MonthsCalcType == 0 )
        /*2.  Если настройка = 0, то определяем дату окончания периода по следующему правилу:
        - Берем дату, следующую за датой госрегистрации - это будет дата начала периода.
        - Прибавляем к этой дате 3 месяца, число месяца при этом остается тоже. */
          TmpDt = DateAfterCalenDays( v_startdate, 1 );        
          TmpDt = DateAfterCalenMonths( TmpDt, 3 );          
          /* - Если полученная дата есть в месяце и является рабочим днем по календарю, то считаем ее 
            датой окончания периода.*/
          DaysInMon = GetDaysInMonth( TmpDt );
          DateSplit( TmpDt, Day, Mon, Year );
          if( Day <= DaysInMon )
            if( IsWorkDay( TmpDt ) )
              PeriodEndDate = TmpDt;
            else
          /* - Если полученная дата есть в месяце, но она не является рабочим днем по календарю, 
               то берем ближайший следующий за ней рабочий день - это и будет дата окончания периода.*/
              TmpDt = DateAfterCalenDays( TmpDt, 1 );
              while( IsWorkDay( TmpDt ) == 0 )                  
                TmpDt = DateAfterCalenDays( TmpDt, 1 );
              end;
              PeriodEndDate = TmpDt;
            end;
          
          else
          /* - Если в месяце нет полученной даты (например, дата начала - 30.11.06, дата окончания 
            должна быть - 30.02.07, но 30 числа нет в феврале), то берем последний день этого 
            месяца (в нашем примере - 28 февраля).*/                     
            TmpDt = date( DaysInMon, Mon, Year );            
            /*  Проверяем по календарю - является он рабочим или нет:*/
            if( IsWorkDay( TmpDt ) )
              PeriodEndDate = TmpDt; /* - Если ДА - то это дата окончания периода.*/
            else
            /*  - Если НЕТ - то берем ближайший следующий за ней рабочий день, и это будет дата 
                  окончания периода. */
              TmpDt = DateAfterCalenDays( TmpDt, 1 );
              while( IsWorkDay( TmpDt ) == 0 )                  
                TmpDt = DateAfterCalenDays( TmpDt, 1 );
              end;
              PeriodEndDate = TmpDt;              
            end;
                          
          end;
                    
          /*  Если "Дата платежа" (pmpaym.ValueDate) <= полученной даты окончания периода, 
              добавить код 4005.*/
          if( PeriodEndDate >= FMOperation.DateCarry )
            SetCode = true;
            SetOperationCode( FMOperation, "4005" );
          end;
                    
        end;              
        end;
       //Лавренов: Если дата регистрации не указана ставим код
       //Чесноков: По заявке I-102749 добавил предпринимателей
      elif( (FMOprParty.PartyType == "Ю") or (FMOprParty.PartyType == "П") and (FMOprParty.RegDate == date(0,0,0)) and (FMOprParty.PartyID != 23004) )
         SetCode = true;
         SetOperationCode( FMOperation, "4005" );
      end;

    end;

  end;

  return SetCode;

end;


/* Установить, если требуется, код 4005 */
private macro CheckCode4005( FMOperation : RsbFMOperation )
  
  var SetCode = false;
  var InconstantData;
  
  if( not SetCode )

    SetCode = _checkPartyCode4005( FMOperation, FMOperation.OprParty(_FM_PARTY_PAYER) );
  
  end;

  if( not SetCode )
    
    InconstantData = CheckUnclarifiedAmount(FMOperation.DocumentId); 
    if (valtype(InconstantData) != v_undef)
        FMOperation.OprParty(_FM_PARTY_RECEIVER).PartyId   = GetPartyByAccount(Payment.FUTURERECEIVERACCOUNT);
        FMOperation.OprParty(_FM_PARTY_RECEIVER).PartyType = GetPartyType(FMOperation.OprParty(_FM_PARTY_RECEIVER).PartyId);
        FMOperation.OprParty(_FM_PARTY_RECEIVER).Account   = InconstantData;
    end;
    
    SetCode = _checkPartyCode4005( FMOperation, FMOperation.OprParty(_FM_PARTY_RECEIVER) );
  
  end;

end;


private macro _checkPartyCode4006_Ex( FMOperation : RsbFMOperation, FMOprParty : RsbFMOprParty, Account : string, FIID : integer ) : bool
  
  var cmd : RsdCommand;

  var sqlString : string;
  var SetCode = false;
  var max_num = 2147483647;

 if( FMOperation.SumEquivalent >= SumForOK )
  
    sqlString = "SELECT 1 FROM dacctrn_dbt ";
    
    sqlString = sqlString + "WHERE t_Chapter = ? AND ((t_FIID_Payer = ? AND t_Account_Payer = ?) OR (t_FIID_Receiver = ? AND t_Account_Receiver = ?)) ";
    sqlString = sqlString + "AND t_Date_Carry < ? AND t_Result_Carry <> ? AND t_AccTrnID";
    sqlString = sqlString + " < ";

    sqlString = sqlString + "(";

    sqlString = sqlString + "SELECT NVL(min(t_AccTrnID), ?) FROM dacctrn_dbt acctrn ";

    sqlString = sqlString + "WHERE t_Chapter = ? AND ((t_FIID_Payer = ? AND t_Account_Payer = ?) OR (t_FIID_Receiver = ? AND t_Account_Receiver = ?)) ";

    sqlString = sqlString + "AND t_Date_Carry < ? AND t_Result_Carry <> ? AND EXISTS ";

    sqlString = sqlString + "(";

    sqlString = sqlString + "SELECT 1 FROM dpmdocs_dbt doc WHERE doc.t_PaymentID = ? AND doc.t_AccTrnID = acctrn.t_AccTrnID";

    sqlString = sqlString + ")";
  
    sqlString = sqlString + ")";

    cmd = RsdCommand( sqlString );

    cmd.addParam( "", RSDBP_IN, 1       );               /* Глава счета   */
    cmd.addParam( "", RSDBP_IN, FIID    );               /* Валюта счета  */
    cmd.addParam( "", RSDBP_IN, Account );               /* Номер счета   */
    cmd.addParam( "", RSDBP_IN, FIID    );               /* Валюта счета  */
    cmd.addParam( "", RSDBP_IN, Account );               /* Номер счета   */
    cmd.addParam( "", RSDBP_IN, FMOperation.DateCarry ); /* Дата операции */
    cmd.addParam( "", RSDBP_IN, 23 );                    /* Признак следа архивной проводки */

    cmd.addParam( "", RSDBP_IN, max_num );

    cmd.addParam( "", RSDBP_IN, 1       );               /* Глава счета   */
    cmd.addParam( "", RSDBP_IN, FIID    );               /* Валюта счета  */
    cmd.addParam( "", RSDBP_IN, Account );               /* Номер счета   */
    cmd.addParam( "", RSDBP_IN, FIID    );               /* Валюта счета  */
    cmd.addParam( "", RSDBP_IN, Account );               /* Номер счета   */
    cmd.addParam( "", RSDBP_IN, FMOperation.DateCarry ); /* Дата операции */
    cmd.addParam( "", RSDBP_IN, 23 );                    /* Признак следа архивной проводки */

    cmd.addParam( "", RSDBP_IN, Payment.PaymentID );     /* ИД платежа */
      
      /* Если же на дату платежа есть другие проводки, то проверяем время их выполнения (acctrn.SystemTime). 
         Если все они исполнены после заданного платежа, то добавляем код операции для контроля 4006. Иначе - нет. */
    if( not RsdRecordset(cmd).moveNext() ) 
      SetCode = true;
    end;
  end;
  return SetCode;
end;


/* проверить, является проводка первой по счету */
private macro _checkPartyCode4006( FMOperation : RsbFMOperation, FMOprParty : RsbFMOprParty, Account : string, FIID : integer ) : bool
  
  var sqlString : string;
  var cmd : RsdCommand;

  var SetCode = false;

  if( (FMOperation.IsInternalParty(FMOprParty.FMPartyKind)) and (FMOprParty.BankID != FMOprParty.PartyID) )

    if( IsClientAccount(Account) )

      if( (FMOprParty.PartyType == "Ю") or (FMOprParty.PartyType == "П") )

        sqlString = "SELECT 1 FROM dacctrn_dbt ";

        sqlString = sqlString + "WHERE t_Chapter = ? AND ((t_FIID_Payer = ? AND t_Account_Payer = ?) OR (t_FIID_Receiver = ? AND t_Account_Receiver = ?)) ";

        sqlString = sqlString + "AND t_Date_Carry < ? AND t_Result_Carry <> ? AND ROWNUM <= 1";

        cmd = RsdCommand( sqlString );

        cmd.addParam( "", RSDBP_IN, 1       );
        cmd.addParam( "", RSDBP_IN, FIID    );
        cmd.addParam( "", RSDBP_IN, Account );
        cmd.addParam( "", RSDBP_IN, FIID    );
        cmd.addParam( "", RSDBP_IN, Account );
        cmd.addParam( "", RSDBP_IN, FMOperation.DateCarry );
        cmd.addParam( "", RSDBP_IN, 23 );

        if( not RsdRecordset(cmd).moveNext() )
          SetCode = _checkPartyCode4006_Ex( FMOperation, FMOprParty, Account, FIID );

          if( SetCode == true )
            SetOperationCode( FMOperation, "4006" );
          end;
        end;

      end;

    end;

  end;

  return SetCode;

end;


/* Установить, если требуется, код 4005 */
private macro CheckCode4006( FMOperation : RsbFMOperation )
  
  var SetCode = false;
  
  //RR Следующие 5 строк нужны для того чтобы проверять движения по счету в случае если документ проходил через невыясненные
  var InconstantData; debugbreak;
  InconstantData = CheckUnclarifiedAmount(FMOperation.DocumentId);
  if (valtype(InconstantData) != v_undef)
    Payment.ReceiverAccount   = InconstantData;
  end;
  
  if( not SetCode )

    SetCode = _checkPartyCode4006( FMOperation, FMOperation.OprParty(_FM_PARTY_PAYER), Payment.PayerAccount, Payment.FIID );

  end;

  if( not SetCode )

    SetCode = _checkPartyCode4006( FMOperation, FMOperation.OprParty(_FM_PARTY_RECEIVER), Payment.ReceiverAccount, Payment.PayFIID );

  end;

end;


private macro _checkPartyCode4007( FMOperation : RsbFMOperation, FMOprParty : RsbFMOprParty, stat : @integer ) : bool
  var SetCode: bool    = false;
  var AttrID : integer = 0;
  var Error  : integer = 0;
  record party(party);

  if((FMOprParty.PartyID > 0) AND (FMOprParty.PartyType == "Ю"))
    party.PartyID = FMOprParty.PartyID;

    if(GetMainObjAttr(Error, OBJTYPE_PARTY, party, PARTY_ATTR_GROUP_STRATEG, AttrID))
      var SumStrateg = FM_GetMinSumStrateg();
      if(FMOperation.SumEquivalent >= SumStrateg)
        stat = 0;
        SetCode = true;
        SetOperationCode( FMOperation, "4007" );
      else
        stat = 1;
      end;
    end;
  end;

  return SetCode;
end;

private macro CheckCode4007(FMOperation : RsbFMOperation)

  var stat = 0;
  var SetCode = false;

  if( not SetCode )
    SetCode = _checkPartyCode4007( FMOperation, FMOperation.OprParty(_FM_PARTY_PAYER), @stat );
  end;

  if( not SetCode )
    SetCode = _checkPartyCode4007( FMOperation, FMOperation.OprParty(_FM_PARTY_RECEIVER), @stat );
  end;

  return stat;
end;

/* Проверка, является ли банк иностранным */
private macro CheckForeignBank( Code : string, FMOperation : RsbFMOperation, FMOprParty : RsbFMOprParty, FIID : integer )
  
  if( (FMOprParty.BankID != FMOperation.BankID) and (FMOprParty.BankID != PTID_UNKNOWNBANK) )

    if( (FMOprParty.Name != "") and (StrUpr(FMOprParty.Name) == StrLwr(FMOprParty.Name)) )
    
      if( (FMOprParty.BankCountry != "") and (FMOprParty.BankCountry != {ResidentCountryCodeNum}) )
          
        SetOperationCode( FMOperation, Code );
          
      end;

    end;

  end;

end;

/* Установить, если требуется, код 1008 */
private macro CheckCode1008( FMOperation : RsbFMOperation )

  record accRec("account.dbt");

  record partyRec("party.dbt");

  var CashClientMode : integer;

  /* платеж должен быть приходным кассовым */

  if( (Payment.DocKind == CASH_BOF_INCORDER) or (Payment.DocKind == CASH_PS_INCORDER) )

    /* счет получателя должен быть клиентским */

    if( IsClientAccount(Payment.ReceiverAccount) )

      if( GetAccountRecord(accRec, Payment.ReceiverAccount, Payment.PayFIID) )

        if( (Index(accRec.Type_Account, "L") != 0) and (IsPartyInst(accRec.Client)) )
          debugbreak;
          SetOperationCode( FMOperation, "1008" );

          CashClientMode = GetCashClientMode();

          if( (CashClientMode != null) and (CashClientMode == 0) )

            if( FMOperation.OprParty(_FM_PARTY_RECEIVER).RegNumber == "" )

              if( ПолучитьСубъекта(FMOperation.OprParty(_FM_PARTY_RECEIVER).PartyID, partyRec) == 0 )
                
                FMOperation.OprParty(_FM_PARTY_RECEIVER).PartyID = FMOperation.BankID;
                
                FMOperation.Descr = "Внесение средств в уставный (складочный) капитал создаваемой организации " + partyRec.ShortName;
              
              end;

            end;

          end;

        end;

      end;

    end;

  end;

end;

private macro GetSumSymbolCash_ForOtherSymbs( IsIncomeOrder:bool )

  var sqlString, cmd, rs;
  var SumSymbolCash = $0;
  var DocKind;

  if( Payment.FIID == NATCUR )
    DocKind = 1;
  else
    DocKind = 7;
  end;
  
  sqlString = " SELECT SUM(t_sum) sum FROM dsymbcash_dbt " +
              " WHERE t_dockind = ? "
              " AND t_applicationkey = LPAD( to_char( ? ), 34, '0') ";
              
  if( IsIncomeOrder )
    sqlString = sqlString + " AND t_kind = 1 AND trim(t_symbol) in ( '02', '11', '19', '32' ) "; 
  else
    sqlString = sqlString + " AND t_kind = 2 AND trim(t_symbol) = '53' "; 
  end;                              
    
  cmd = RsdCommand( sqlString );
  cmd.addParam( "", RSDBP_IN, DocKind );
  cmd.addParam( "", RSDBP_IN, Payment.DocumentID );

  rs = RsdRecordset( cmd );

  if( rs.moveNext )      
    SumSymbolCash = SQL_ConvTypeSum( rs.value("sum") );    
  end;

  return SumSymbolCash;
end;

private macro GetSumSymbolCash_ForSymb22_47( IsIncomeOrder:bool )

  var sqlString, cmd, rs;
  var SumSymbolCash = $0;
  var DocKind;

  if( Payment.FIID == NATCUR )
    DocKind = 1;
  else
    DocKind = 7;
  end;
  
  sqlString = " SELECT t_sum sum FROM dsymbcash_dbt " +
              " WHERE t_dockind = ? "
              " AND t_applicationkey = LPAD( to_char( ? ), 34, '0') " +
              " AND t_kind = ? " +
              " AND trim(t_symbol) = ? ";
    
  cmd = RsdCommand( sqlString );
  cmd.addParam( "", RSDBP_IN, DocKind );
  cmd.addParam( "", RSDBP_IN, Payment.DocumentID );
  
  if( IsIncomeOrder )
    cmd.addParam( "", RSDBP_IN, 1 );    
    cmd.addParam( "", RSDBP_IN, "22" );   
  else
    cmd.addParam( "", RSDBP_IN, 2 );    
    cmd.addParam( "", RSDBP_IN, "47" );    
  end;

  rs = RsdRecordset( cmd );

  if( rs.moveNext )      
    SumSymbolCash = rs.value(0);
  end;

  return SumSymbolCash;
end;

/*Установка кода 5006 по сумме документа связанной с игорным бизнесом:*/
private macro Is5006( FMOperation : RsbFMOperation, ClientID:integer, ConnectAppKind:integer, ConnectAppKey:string, IsIncomeOrder:bool )    
  var stat;  
  var addNote:string;
  var FindAttr:bool;
  
  var SumSymbolCash = $0, SumSymbolCashR = $0;
  
  file client  ("party.dbt");

  if( IsIncomeOrder == true ) /*(Payment.DocKind == CASH_PS_INCORDER) or (Payment.DocKind == CASH_BOF_INCORDER)*/
    /* ПРИХОД */    
    /*Если для документа установлен приходный кассовый символ 22, то определяем сумму по этому символу - SumSymbolCash.*/    
    SumSymbolCash = GetSumSymbolCash_ForSymb22_47( IsIncomeOrder );

    /*Если получатель является юридическим лицом или индивидуальным предпринимателем и ему установлен "Код ОКВЭД"  = "92.71"*/       
    if( IsPartyInstOrEmployer(ClientID) )
      if( ПолучитьСубъекта(ClientID, client) == 0 )        
        if( CheckObjAttrPresence ( FindAttr, OBJTYPE_PARTY, UniID( client, OBJTYPE_PARTY), 17, null, "", "92.71", false ) == true )
          if( FindAttr == true )
            SumSymbolCash = SumSymbolCash + GetSumSymbolCash_ForOtherSymbs( IsIncomeOrder );
          end;
        end;
      end;
    end;
      
  else /*if( (Payment.DocKind == CASH_PS_OUTORDER) or  (Payment.DocKind == CASH_BOF_OUTORDER) )*/
    /*Если для документа установлен приходный кассовый символ 47, то определяем сумму по этому символу - SumSymbolCash.*/    
    SumSymbolCash = GetSumSymbolCash_ForSymb22_47( IsIncomeOrder );

    /*Если получатель является юридическим лицом или индивидуальным предпринимателем и ему установлен "Код ОКВЭД" = "92.71"*/    
    if( IsPartyInstOrEmployer(ClientID) )      
      if( ПолучитьСубъекта(ClientID, client) == 0 )        
        if( CheckObjAttrPresence ( FindAttr, OBJTYPE_PARTY, UniID( client, OBJTYPE_PARTY), 17, null, "", "92.71", false ) == true )
          if( FindAttr == true )
            SumSymbolCash = SumSymbolCash + GetSumSymbolCash_ForOtherSymbs( IsIncomeOrder );
          end;
        end;
      end;
    end;      
  end;

  /*Если полученная сумма документа по операциям связанным с игорным бизнесом SumSymbolCash>=600000 (настройка $MIN_SUM) -  
    добавляем код операции для контроля 5006. При этом, если полученная сумма SumSymbolCash меньше общей суммы платежа, 
    то в примечание "Дополнительная информация" 
    добавляем строку: "В том числе по коду 5006: <SumSymbolCash в валюте платежа> (<SumSymbolCash в национальной валюте>)". 
    Если сумма платежа не в национальной валюте, то в скобках указываем эквивалентную сумму в национальной.*/
  if( Payment.FIID == NATCUR )
    SumSymbolCashR = SumSymbolCash;
    addNote = "В том числе по коду 5006: " + SumSymbolCash;
  else
    ConvSum( SumSymbolCashR , SumSymbolCash, {curdate}, Payment.FIID );
    addNote = "В том числе по коду 5006: " + SumSymbolCash + "(" + SumSymbolCashR + ")";
  end;

  if( SumSymbolCashR >= SumForOK )
    if( SumSymbolCash < Payment.Amount )
      FMOperation.Descr = addNote;
    end;
    return true;
  else
    return false;
  end;
end;

private macro CheckCode5006( FMOperation : RsbFMOperation )

  var stat : bool;
  var IncomeOrder : bool;
    
  var ClientID : integer = PTID_UNKNOWNPARTY;

  record accRec("account.dbt");

  file cashdoc("pscshdoc.dbt");

  if( Payment.Purpose == PM_PURP_CASHBAL )

    ClearRecord( cashdoc );
    cashdoc.AutoKey = Payment.DocumentID;

    if( GetEQ(cashdoc) )

      if( (Payment.DocKind == CASH_BOF_INCORDER) or (Payment.DocKind == CASH_PS_INCORDER) )       
        /* ПРИХОД */
        IncomeOrder = true;

        stat = GetAccountRecord( accRec, Payment.ReceiverAccount, Payment.FIID );
        if( stat )
        
          ClientID = accRec.Client;
          if( Is5006( FMOperation, ClientID, cashdoc.ConnectAppKind, cashdoc.ConnectAppKey, IncomeOrder ) )
            SetOperationCode( FMOperation, "5006" );
          end;
        end;
      
      elif( (Payment.DocKind == CASH_BOF_OUTORDER) or (Payment.DocKind == CASH_PS_OUTORDER))
     
        /* РАСХОД */
        IncomeOrder = false;

        stat = GetAccountRecord( accRec, Payment.PayerAccount, Payment.FIID );

        if( stat )
          ClientID = accRec.Client;
          if( Is5006( FMOperation, ClientID, cashdoc.ConnectAppKind, cashdoc.ConnectAppKey, IncomeOrder ) )
            SetOperationCode( FMOperation,"5006" );
          end;
        end;

      end;

    end;

  end;

end;

private macro CheckCode1005( FMOperation : RsbFMOperation )
  /*1. счет плательщика (pmpaym.PayerAccount) удовлетворяет маске "20202*", 
      а счет получателя (pmpaym.ReceiverAccount) удовлетворяет маске "10501*, 514*, 515*, 520*, 522*, 523*";
  var PayerAccMask1 = "20202*";
  var ReceiverAccMask1 = "10501*, 514*, 515*, 520*, 522*, 523*";*/

  /*2. счет плательщика (pmpaym.PayerAccount) удовлетворяет маске "20207*", 
     а счет получателя (pmpaym.ReceiverAccount) удовлетворяет маске "520*, 522*, 523*".
  var PayerAccMask2 = "20207*";
  var ReceiverAccMask2 = "520*, 522*, 523*";*/

  if( ((CompareStrWithMasks("20202*", Payment.PayerAccount) == 0) 
       AND (CompareStrWithMasks("10501*, 514*, 515*, 520*, 522*, 523*", Payment.ReceiverAccount) == 0))
     OR ((CompareStrWithMasks("20207*", Payment.PayerAccount) == 0) 
       AND (CompareStrWithMasks("520*, 522*, 523*", Payment.ReceiverAccount) == 0)) 
    )
    SetOperationCode( FMOperation,"1005" );
  end;
end;

private macro isExistsNonCommAccMask(payer)
   var sql = execSqlSelect("SELECT 1 FROM daccount_dbt WHERE t_client = :payer AND regexp_like( t_balance,'^40503|^40603|^40703|^416|^419|^422|^433|^436|^439') and T_OPEN_CLOSE != 'З'",
             makeArray (SQLParam ("payer", payer)));
   return (sql.movenext());
end;

private macro CheckCode9001_9002( FMOperation, IsFrag )
  var SumNonComm = $0;

  SumNonComm = FM_GetMinSumNonComm();

  var stat = 1;
  
  //  Сумма платежа (в рублях) больше либо равна 100000
  if( FMOperation.SumEquivalent >= SumNonComm )
  
    //  Если счет получателя удовлетворяет маске или получатель pmpaym.Receiver имеет принадлежность "Некоммерческая организация"
      if (   (    (    (CompareStrWithMasks(FM_GetNonCommAccMask(), Payment.ReceiverAccount) == 0) 
              OR (CheckPartyKind(Payment.Receiver, PTK_NON_PROFIT_ORG ) == true) )
             AND (GetPartyByAccount(Payment.ReceiverAccount) != -1) ) )
        
       SetOperationCode( FMOperation,"9001" );
       stat = 0;
      end;
    
      if ( ( (   (CompareStrWithMasks(FM_GetNonCommAccMask(), Payment.PayerAccount) == 0)  
              OR (CheckPartyKind(Payment.Payer, PTK_NON_PROFIT_ORG ) == true) )
             AND (GetPartyByAccount(Payment.PayerAccount) != -1) ) )
        SetOperationCode( FMOperation,"9002" );
        stat = 0;
      end;
      
      //Gurin S. 06.11.2015 R-626276-2
      if ( ( (   (CompareStrWithMasks("40821*", Payment.PayerAccount) == 0)
              OR (CheckPartyKind(Payment.Payer, PTK_NON_PROFIT_ORG ) == true) )
             AND (GetPartyByAccount(Payment.PayerAccount) != -1) ) 
             AND (isExistsNonCommAccMask(Payment.Payer)) )

        SetOperationCode( FMOperation,"9002" );
        stat = 0;
      end;
      
    
    /*if(FMOperation.DateCarry >= date(21,11,2012)) //  Дата исполнения платежа (fmpaym.ValueDate) больше или равна 21.11.2012 (Дата вступления в силу ФЗ №121-Ф3
      //  Если счет получателя удовлетворяет маске или получатель pmpaym.Receiver имеет принадлежность "Некоммерческая организация"
      if((CompareStrWithMasks(FM_GetNonCommAccMask(), Payment.ReceiverAccount) == 0) OR (CheckPartyKind(Payment.Receiver, PTK_NON_PROFIT_ORG ) == true)) 

        var party = TRecHandler("party.dbt");
        if( ПолучитьСубъекта( Payment.Payer, party ) == 0 )
          // Если страна плательщика (для физического лица проверяется гражданство) не Россия или не указана или плательщик имеет принадлежность "Международная организация"
          if(( party.rec.NRCountry != "RUS") OR (CheckPartyKind(Payment.Payer, PTK_INTERNATIONAL_ORG ) == true))
             SetOperationCode( FMOperation,"9001" );
             stat = 0;
          end;
        end;
      else
        SetOperationCode( FMOperation,"9001" );
        stat = 0;
      end;
    end;*/
  else
    if((IsFrag == true) AND (FMOperation.SumEquivalent >= SumNonComm)) // если сумма не подошла, значит выполняется обычная операция дробления  
      stat = 0; 
    end;
  end;

  return stat;
end;

/*
 * Функция дополнительной проверки операций, созданных по платежам
 *
 * FMOperation - объекта класса RsbFMOperation, описывающего создаваемую операцию
 *
 * CheckMode - режим проверки
 *      1 - обычное сканирование
 *      2 - проверка на терроризм
 *      3 - создание операции дробления сумм
 */

private macro CheckPayment( FMOperation : RsbFMOperation, CheckMode : integer, CheckAddress : bool )

  var stat : integer;
  var CountrySign : bool;
  var Chapter : integer;
  debugbreak;
  var Checked_Ground      = ExecMacroFile("fm_ground.mac","ConvertString",FMOperation.Ground);
  var Ground_Word_Array   = TArray();
  
  ExecMacroFile("fm_ground.mac","SplitStringByWord",Ground_Word_Array, Checked_Ground);
  
  /*Определяем глобальные параметры для их дальнейшего использования*/
  SetGlobalParameter("RR_Checked_Ground", Checked_Ground);
  SetGlobalParameter("RR_Ground_Word_Array", Ground_Word_Array);
  /***********************************************************/
  
  stat = 0;

  SetCodeFlag = false;
  NotCreateOprWithoutCode = false;

  SumForOK = FM_GetMinSum();
  var SumNonComm = FM_GetMinSumNonComm();
  var SumFragNonComm = FM_GetMinSumFragNonComm();

  Chapter = 1;

  /*
  if(CheckMode == 1) // OR 3 ??
    FM_FillOperationParty( FMOperation, Payment, PmRMProp, PmAddPI, LinkPaymentID, LinkKind, false );
  end; */
  
  if( (CheckMode != 3) AND (CheckMode != 2))
    stat = 1;

    FillOperation( FMOperation );
    
  /* RR 16.03.2014 Отключаем эту проверку причина - падение скорости отбора и куча "мусорных" операций
  //Для ВУЗа по просьбе Сидоровой О. устанавливаем минимальную сумму для отбора, для уменшения выпадения нежелательных операций
    if (Bank_Name.is_VUZ)
      rr_min_sum_for_scan = RR_MIN_SUM_FOR_SCAVENGING; 
    end;
    
    if (FMOperation.SumEquivalent > rr_min_sum_for_scan)
      //  Сначала выполняем проверку по установке кода 6001, эти проверки выполняются без учета суммы платежа
      if(CheckUnusualOperations( FMOperation ) == true)     
        stat = 0;
      end;
    end; */
    
    if( (CheckMode == 1) AND (CheckAddress == true) )
      var IsAddressTerror = false;
      var err = FM_CheckAddressOperation(FMOperation, @IsAddressTerror);
      if(err >0 )
        stat = err;
      else
        if(IsAddressTerror == true)
          FMOperation.AddCode("2201", OPCONTR_TYPE_UO);
          stat = 0;
        end;
      end;
    end;

    if( FMOperation.SumEquivalent >= SumForOK )
      stat = 0;
      
      FM_FillOperationParty( FMOperation, Payment, PmRMProp, PmAddPI, LinkPaymentID, LinkKind, false );
      
      if( Payment.DocKind == CB_MULTYDOC )
        stat = CheckMutydoc( @Chapter );
      elif( Payment.DocKind == DLDOC_MEMORIALORDER )
        stat = CheckMemorder( @Chapter );
      end;

      if( Chapter == 1 )

        CheckMetal( FMOperation );

        if( Payment.Purpose == PM_PURP_CASHBAL )
          CheckCashPayment( FMOperation );
        end;
        
        CountrySign = CheckCode3000( FMOperation );
        CheckForeignBank( "4003", FMOperation, FMOperation.OprParty(_FM_PARTY_RECEIVER) );
        CheckForeignBank( "4004", FMOperation, FMOperation.OprParty(_FM_PARTY_PAYER   ) );
        CheckCode4005( FMOperation );
        CheckCode4006( FMOperation );
        CheckCode1008( FMOperation );
        CheckCode5006( FMOperation );
        CheckCode1005( FMOperation );
        
        if(stat == 0)
          if(CheckCode4007( FMOperation ) > 0)
            NotCreateOprWithoutCode = true;
          end;
        end;
      end;

      /* проверка основания операции */
      if(stat == 0)
        stat = FM_CheckGround( FMOperation, CountrySign, Chapter );
      end;

      if((stat == 0) AND (NotCreateOprWithoutCode == true) AND (SetCodeFlag == false))
        stat = 1;
      end;
    end;
    
    if(CheckCode9001_9002( FMOperation ) == 0)
      stat = 0;
      FM_FillOperationParty( FMOperation, Payment, PmRMProp, PmAddPI, LinkPaymentID, LinkKind, false );
    end;

    /* если на платеже были коды до сканирования, то для него всегда создаем запись в ФМ */
    if( FMOperation.CodeBeforeScan == true ) 
      stat = 0; 
    end;

  else
    FillOperation( FMOperation );
  end;
  
  if ( stat == 0 )
    //Пользовательские доработки
     if(FMOperation.Oper == 0)//пустой операционист
        FMOperation.Oper = {oper};
     end;

     if (FMOperation.OprParty(_FM_PARTY_RECEIVER).partyid == -1)//страна плательщика
         FMOperation.OprParty(_FM_PARTY_RECEIVER).RegCountry = "643";
         FMOperation.OprParty(_FM_PARTY_RECEIVER).StayCountry = "643";
     end;
     if (FMOperation.OprParty(_FM_PARTY_PAYER).partyid == -1)//страна получателя
         FMOperation.OprParty(_FM_PARTY_PAYER).RegCountry = "643";
         FMOperation.OprParty(_FM_PARTY_PAYER).StayCountry = "643";
     end;

     if (FMOperation.PaymDocNumber == "")//пустой номер
         FMOperation.PaymDocNumber = GetDocNumber(FMOperation.DocumentId);
     end;
     //if ((FMOperation.PaymDocDate == "") or (FMOperation.PaymDocDate == date("00.00.0000"))) //пустая дата
         FMOperation.PaymDocDate = GetDocDate(FMOperation.DocumentId);
     //end;

     //если плательщик либо получатель ИП - подтягиваем наименование из субъекта
     /*if ((FMOperation.OprParty(_FM_PARTY_PAYER).partytype == "П") and (FMOperation.OprParty(_FM_PARTY_PAYER).partyid != -1))
        FMOperation.OprParty(_FM_PARTY_PAYER).name = GetPartyName(FMOperation.OprParty(_FM_PARTY_PAYER).partyid);
     end;
     if ((FMOperation.OprParty(_FM_PARTY_RECEIVER).partytype == "П") and (FMOperation.OprParty(_FM_PARTY_RECEIVER).partyid != -1))
        FMOperation.OprParty(_FM_PARTY_RECEIVER).name = GetPartyName(FMOperation.OprParty(_FM_PARTY_RECEIVER).partyid);
     end;*/

     //если плательщик либо получатель не наш клиент, наименование подтягиваем из документа
     if (not AccountExists(FMOperation.OprParty(_FM_PARTY_PAYER).Account))
         FMOperation.OprParty(_FM_PARTY_PAYER).Name = GetPartyNameByDoc(FMOperation.DocumentId, true);
     end;
     if (not AccountExists(FMOperation.OprParty(_FM_PARTY_RECEIVER).Account))
         FMOperation.OprParty(_FM_PARTY_RECEIVER).Name = GetPartyNameByDoc(FMOperation.DocumentId, false);
     end;

     //заполняем регион
     FMOperation.OprParty(_FM_PARTY_PAYER).RegAddrRegion = GetRegion(FMOperation.OprParty(_FM_PARTY_PAYER).PartyID, 1);
     FMOperation.OprParty(_FM_PARTY_PAYER).StayAddrRegion = GetRegion(FMOperation.OprParty(_FM_PARTY_PAYER).PartyID, 2);

     FMOperation.OprParty(_FM_PARTY_RECEIVER).RegAddrRegion = GetRegion(FMOperation.OprParty(_FM_PARTY_RECEIVER).PartyID, 1);
     FMOperation.OprParty(_FM_PARTY_RECEIVER).StayAddrRegion = GetRegion(FMOperation.OprParty(_FM_PARTY_RECEIVER).PartyID, 2);

     //заполняем город 
     FMOperation.OprParty(_FM_PARTY_PAYER).RegAddrPlaceName = GetCity(FMOperation.OprParty(_FM_PARTY_PAYER).PartyID, 1);
     FMOperation.OprParty(_FM_PARTY_PAYER).StayAddrPlaceName = GetCity(FMOperation.OprParty(_FM_PARTY_PAYER).PartyID, 2);

     FMOperation.OprParty(_FM_PARTY_RECEIVER).RegAddrPlaceName = GetCity(FMOperation.OprParty(_FM_PARTY_RECEIVER).PartyID, 1);
     FMOperation.OprParty(_FM_PARTY_RECEIVER).StayAddrPlaceName = GetCity(FMOperation.OprParty(_FM_PARTY_RECEIVER).PartyID, 2);
   end;
  /********* Уничтожаем глобальные параметры *********/
  GetGlobalParameter("RR_Checked_Ground", true);
  GetGlobalParameter("RR_Ground_Word_Array", true);
  /***************************************************/
  
  return stat;

end;


private macro UserScanPayments( SelPayAlg, dateMin, dateMax, DbAccountMask, CrAccountMask, 
                                Department, Outgoing, Incoming, Transient, Internal       ) 
  var DprtList;

  if(SelPayAlg == 0)
    // системный способ отбора платежей.
    // можно исправить dfmpaym_tmp 

  elif(SelPayAlg == 1)
    // вызываем вариант отбора платежей реализованный Расчетным банком 


    FM_GetDepartmentsList(Department, DprtList);

    if(not FillExecutedPaymentsList( DprtList,       /* Список кодов филиалов */
                                  dateMin,        /* Начало периода */
                                  dateMax,        /* Конец периода */
                                  DbAccountMask,  /* Маска счёта плательщика */
                                  CrAccountMask,  /* Маска счёта получателя */
                                  Internal,       /* Включая внутренние */
                                  Incoming,       /* Включая входящие */
                                  Outgoing,       /* Включая исходящие */
                                  Transient       /* Включая транзитные */
                              ))
      return; 
    end;
  end;
  
  
  return 0;
end;

private macro IsPayAgent( Account, AccountClientID, PartyKind )
 var RetVal:bool;
 var error:integer;
 RetVal = false;
 error = 0;

 if( (CompareStrWithMasks("40821*", Account) == 0) AND (ВидСубъекта(AccountClientID, PartyKind, error) == true) AND (error == 0) )
   RetVal = true;
 end;

 return RetVal;
end;

private macro CheckSPAPayment( FMOperation : RsbFMOperation )
  var stat = 1;
  var err = 0;
  var BankAccountMask = "";
  var IsAllowedAccounts = false;

  var IsPayerPayAgent = IsPayAgent(Payment.PayerAccount, Payment.Payer, PTK_PAYING_AGENT);
  var IsReceiverPayAgent = IsPayAgent(Payment.ReceiverAccount, Payment.Receiver, PTK_PAYING_AGENT);

  if((IsPayerPayAgent == true) OR (IsReceiverPayAgent == true))
    if((CompareStrWithMasks("20202*, 20207*", Payment.PayerAccount) == 0) AND (IsReceiverPayAgent == true))
      IsAllowedAccounts = true;
    end;

    if(IsAllowedAccounts == false)
      if((IsPayerPayAgent == true) AND ((IsReceiverPayAgent == true) OR (IsPayAgent(Payment.ReceiverAccount, Payment.Receiver, PTK_MAKER) == true)))
         IsAllowedAccounts = true;
      end;
    end;

    if(IsAllowedAccounts == false)
      if(IsPayerPayAgent == true)

        GetRegistryValue( "ФИНМОНИТОРИНГ\\БАНКОВСКИЕ СЧЕТА", V_STRING, BankAccountMask, err );
        if(err == 0)
          if(CompareStrWithMasks(BankAccountMask, Payment.ReceiverAccount) == 0)
            IsAllowedAccounts = true
          end;
        end;
      end;
    end;

    if(IsAllowedAccounts == false)
      stat = 0;
      debugbreak;
      SetOperationCode( FMOperation,"6001" );
      SetOperationCodeUO( FMOperation,"901", "1199" );
    end;
  end;

  return stat;
end;

