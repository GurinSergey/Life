/****************************************************************************/
/*                   R-Style SoftWare Lab, RS-Bank 5.1                      */
/****************************************************************************/
/*                  Подсистема "Межбанковские расчеты"                      */
/*               Экспорт сообщений СМБР в формате СБРФ3                     */
/*                                                                          */
/*  Имя файла: swiftout.mac                                                 */
/*  Создан:  11.07.00                                            AAV        */
/****************************************************************************/

import "wlexport.mac", "wlsbrftl.mac", "wlmfr_lib.mac";

/*Эталонный и создаваемый файл*/
file f1 () dbf;
file f2 () dbf write;

/* Эталонный файл выгрузки */
const DIR_ORIG = "..\\mac.usr\\MAC.EXV\\import.dbf";

/*Путь и имя формируемого dbf-файла*/
var exp_dbf_path = "";

/*Сообщение в текстовый файл*/
var txt_str = "";


/* Отбрасывает ведущие пробелы */
private macro TrimZero( str )
  var tmpstr;
  
  tmpstr = substr( str, 1, 1 );
  while( tmpstr == "0" )
    str = substr( str, 2 );
    tmpstr = substr( str, 1, 1 );
  end;
  return str;
end;

MACRO CreateDBF( p_OutFileName )

   /*Референс возвращает имя файла с TXT окончанием. переделаем на dbf*/
   exp_dbf_path = PathWithOutFile(p_OutFileName) + NameBodyFromFile(FileFromPath(p_OutFileName)) + ".dbf";

   /*Пешем в протокол для пользователя*/
   txt_str =  string(" !!! Экспорт осуществлен в файл: ", exp_dbf_path);

   [
   #](txt_str);

   /*Это же запишем и в файл содержания DBF-файла*/
   if( not ЗаписатьСтроку(txt_str) )
     ErrExport("Ошибка записи поля сообщения: " + string(txt_str));
     return false;
   end;


   if( not Open( f1, DIR_ORIG ) )
     ErrExport( "Невозможно открыть эталонный файл ",DIR_ORIG,". Проверьте настройку DIR_ORIG." );
     return false;
   end;

   if( not clone( f1, exp_dbf_path ) )
     ErrExport( "Невозможно создать файл выгрузки " + exp_dbf_path );
     return false;
   end;

   close (f1);

   return true;

END;

MACRO get_rcclcode(p_Account_Receiver)

var v_rcclcode, i, rccl_ind, rccl_flag:bool;

array ind, code, nm;

    ind(1)  = "01"; code(1)  = "5486220000"; nm(1)  = "Саратовское ОСБ 8622";
    ind(2)  = "02"; code(2)  = "5486220000"; nm(2)  = "Саратовское ОСБ 8622";
    ind(5)  = "05"; code(5)  = "5440130000"; nm(5)  = "Аткарское  ОСБ 4013";
    ind(6)  = "06"; code(6)  = "5439560000"; nm(6)  = "Калининское ОСБ 3956";
    ind(7)  = "07"; code(7)  = "5486220000"; nm(7)  = "Саратовское ОСБ 8622";
    ind(8)  = "08"; code(8)  = "5440130000"; nm(8)  = "Аткарское ОСБ 4013";
    ind(10) = "10"; code(10) = "5402420000"; nm(10) = "Вольское ОСБ 242";
    ind(11) = "11"; code(11) = "5486220000"; nm(11) = "Ленинское ОСБ 7324";
    ind(12) = "12"; code(12) = "5401300000"; nm(12) = "Энгельсское ОСБ 130";
    ind(13) = "13"; code(13) = "5440290000"; nm(13) = "Краснокутское ОСБ 4029";
    ind(14) = "14"; code(14) = "5486220000"; nm(14) = "Красноармейское ОСБ 4028";
    ind(15) = "15"; code(15) = "5440290000"; nm(15) = "Краснокутское ОСБ 4029";
    ind(17) = "17"; code(17) = "5401300000"; nm(17) = "Энгельсское ОСБ 130";
    ind(19) = "19"; code(19) = "5440290000"; nm(19) = "Краснокутское ОСБ 4029";
    ind(20) = "20"; code(20) = "5402420000"; nm(20) = "Вольское ОСБ 242";
    ind(21) = "21"; code(21) = "5439560000"; nm(21) = "Калининское ОСБ 3956";
    ind(22) = "22"; code(22) = "5439980000"; nm(22) = "Ртищевское ОСБ 3998";
    ind(23) = "23"; code(23) = "5440130000"; nm(23) = "Аткарское ОСБ 4013";
    ind(24) = "24"; code(24) = "5439600000"; nm(24) = "Балаковское ОСБ 3960";
    ind(25) = "25"; code(25) = "5439610000"; nm(25) = "Базарнокарабулакское ОСБ 3961";
    ind(37) = "37"; code(37) = "5486220000"; nm(37) = "Саратовское ОСБ 8622";
    ind(26) = "26"; code(26) = "5402420000"; nm(26) = "Вольское ОСБ 242";
    ind(27) = "27"; code(27) = "5440290000"; nm(27) = "Новоузенское ОСБ 3966";
    ind(28) = "28"; code(28) = "5439670000"; nm(28) = "Ершовское ОСБ 3967";
    ind(29) = "29"; code(29) = "5439670000"; nm(29) = "Дергачевское ОСБ 3968";
    ind(30) = "30"; code(30) = "5439600000"; nm(30) = "Балаковское ОСБ 3960";
    ind(31) = "31"; code(31) = "5439730000"; nm(31) = "Перелюбское ОСБ 3970";
    ind(32) = "32"; code(32) = "5439680000"; nm(32) = "Дергачевское ОСБ 3968";
    ind(34) = "34"; code(34) = "5439730000"; nm(34) = "Пугачевское ОСБ 3973";
    ind(36) = "36"; code(36) = "5486220000"; nm(36) = "Заводское ОСБ 6976";
    ind(39) = "39"; code(39) = "5486220000"; nm(39) = "Саратовское ОСБ 8622";
    ind(40) = "40"; code(40) = "5439610000"; nm(40) = "Базарнокарабулакское ОСБ 3961";
    ind(41) = "41"; code(41) = "5439980000"; nm(41) = "Ртищевское ОСБ 3998";
    ind(42) = "42"; code(42) = "5439940000"; nm(42) = "Балашовское ОСБ 3994";
    ind(43) = "43"; code(43) = "5439940000"; nm(43) = "Балашовское ОСБ 3994";
    ind(44) = "44"; code(44) = "5439980000"; nm(44) = "Ртищевское ОСБ 3998";
    ind(45) = "45"; code(45) = "5439940000"; nm(45) = "Балашовское ОСБ 3994";

    rccl_ind = substr(trim(p_Account_Receiver), 12,2);

    rccl_flag = true;

    i = 1;

    while((i < asize(ind)) and rccl_flag)
	if(ind(i) == rccl_ind)
	   v_rcclcode = code(i);
	   rccl_flag = false;	
	end;
	i = i + 1;
    end;

    if(rccl_flag) /* Если код получателя не найден */
	v_rcclcode = "";
    end;

    return v_rcclcode;

END;


/* Последовательно считываем и записываем поля сообщения */
macro ЗаписатьПоляСообщения( p_OutFileName )
  var field_name, field_value, err;
  var v_clir_code = "";
  var v_payer = "";

  if( not open( f2, exp_dbf_path ) )
    ErrExport( "Невозможно открыть файл выгрузки " + exp_dbf_path );
    return false;
  end;

  ClearRecord( f2 );

 
  while( СчитатьПоле( field_name, field_value ) )  

     if(   field_name == "DT" )   /* Тип документа */
       f2.TYPE = field_value;
     elif( field_name == "UT" )   /* Подтип документа */
       f2.SUBTYPE = field_value;
     elif( field_name == "PA" ) /* Участник отправитель */
       f2.CRCLCODE = field_value;
       f2.SDCLCODE = field_value;
     elif( field_name == "RC" ) /* Участник получатель */
       f2.RCCLCODE = field_value;
     elif( field_name == "AM" ) /* Сумма */      
       f2.SUMMA = money( field_value )/100;
     elif( field_name == "AA" ) /*Коррсчет НОСТРО*/
       f2.ReceiverCorrAccNostro = field_value;
   /*  elif( field_name == "DE" ) /* Сумма */
       f2.TegDE = field_value;*/
     /*Зубко С. Закомментарил, так как возникала ошибка "Указана прошлая дата операции. Это запрещено для данного типа операции"
     elif( field_name == "VD" ) /* Дата валютирования */
       if(trim(field_value) != "")
          f2.VALDATE = ДДММГГДата(field_value);
       else
          f2.VALDATE = {curdate};
       end;
     */
     elif ( field_name == "SH" ) /*Шифр операции*/
       f2.SHIFR_OP = field_value;
     elif( field_name == "CU" ) /* Вид активов */
       f2.ISO = field_value;
/*     elif( field_name == "MT" )   /* Тип сообщения */
       f2.MSGTYPE = field_value; /*!!! В примере есть только 115 и 116 !!!*/*/
     elif( field_name == "PN" )   /* Наименование плательщика */
       v_payer = trim(field_value);
     elif( field_name == "SI" )   /* ИНН плательщика */
       f2.PAYINN = field_value;
     elif( field_name == "SA" )   /* Номер счета плательщика */
       f2.PAYACC = field_value;
     elif( field_name == "SF" )   /* Номер филиала плательщика */
       f2.RECBRANCH = field_value;
     elif( field_name == "SB" )   /* Наименование банка плательщика */
       f2.PAYBNAME = field_value;
     elif( field_name == "SN" )   /* Код банка плательщика */
       f2.PAYBCODE = field_value;
     elif( field_name == "SK" )   /* Доп. код банка плательщика */
       f2.PAYBADD = field_value;
     elif( field_name == "SS" )   /* Код расчетной системы банка плательщика */
       f2.PAYRSYS = field_value;
     elif( field_name == "IB" )   /* Наименование банка посредника */
       f2.BENBNAME = field_value;
     elif( field_name == "IC" )   /* Код банка посредника */
       f2.BENBCODE = field_value;
     elif( field_name == "IK" )   /* Доп. код банка посредника */
       f2.BENBADD = field_value;
     elif( field_name == "IS" )   /* Код расчетной системы банка посредника */
       f2.BNRSYS = field_value;
     elif( field_name == "RN" )   /* Наименование получателя */
       f2.RECEIVER = field_value;
     elif( field_name == "RI" )   /* ИНН получателя */
       f2.RECINN = field_value;
     elif( field_name == "RA" )   /* Номер счета получателя */
       f2.RECACC = field_value;
     elif( field_name == "RF" )   /* Номер филиала получателя */
       f2.RECBRANCH = field_value;
     elif( field_name == "BN" )   /* Наименование банка получателя  */
       f2.RECBNAME = field_value;
     elif( field_name == "BC" )   /* Код банка получателя */
       f2.RECBCODE = field_value;
     elif( field_name == "BK" )   /* Доп. код банка получателя */
       f2.RECBADD = field_value;
     elif( field_name == "RS" )   /* Код расчетной системы банка получателя */
       f2.RECRSYS = field_value;
     elif( field_name == "PP" ) /* Назначение платежа */
       f2.DEST = field_value;
     elif( field_name == "MP" ) /* Информация участника */
       f2.CLINFO = field_value;
     elif( field_name == "SC" ) /* Условия перевода */
       if ( SubStr( field_value, 2, 1 ) == "1" )
         f2.CHARGPAY = "1"; /*П*/
       elif ( SubStr( field_value, 2, 1 ) == "2" )
         f2.CHARGPAY = "2"; /*Т*/
       else
         f2.CHARGPAY = "0"; /*Э*/
       end;
   /*
     elif( field_name == "SD" ) /* Срок платежа */
       f2.CRDATE = field_value; /*???  ???*/
*/
     elif( field_name == "IN" )   /* Информация о внесистемном документе */

       f2.O_DOCUM = field_value;

/*     elif( field_name == "PT" )   /* Тип обслуживания */
       f2. = field_value;   /*???  ???*/
     elif( field_name == "LD" )   /* Дата последней обработки */
       f2. = field_value; /*???  ???*/
     elif( field_name == "ST" )   /* Информация о первичном документе */
       f2. = field_value;
     elif( field_name == "ED" )   /* Дата окончания обслуживания */
       f2. = field_value;
     elif( field_name == "DD" )   /* Дата отметки банка получателя */
       f2. = field_value;
     elif( field_name == "DH" )   /* Списано со счета плательщика */
       f2. = field_value;
     elif( field_name == "DK" )   /* Дата помещения в картотеку */
       f2. = field_value;
     elif( field_name == "DO" )   /* Дата отметки банка плательщика */
       f2. = field_value;
     elif( field_name == "KP" )
       f2. = field_value;
     elif( field_name == "KR" )
       f2. = field_value;
     elif( field_name == "NS" )
       f2. = field_value;
     elif( field_name == "NB" )
       f2. = field_value;
     elif( field_name == "NC" )
       f2. = field_value;
     elif( field_name == "NO" )
       f2. = field_value;
     elif( field_name == "NP" )
       f2. = field_value;
     elif( field_name == "NN" )
       f2. = field_value;
     elif( field_name == "ND" )
       f2. = field_value;
     elif( field_name == "NE" )
       f2. = field_value;
     elif( field_name == "NT" )
       f2. = field_value;
     elif( field_name == "QA" ) /* Сумма остатка платежа (частичная оплата) */         
       f2. = field_value;
     elif( field_name == "QC" ) /* Шифр оплачиваемого документа */
       f2. = field_value;
     elif( field_name == "QD" ) /* Дата оплачиваемого документа */
       f2. = field_value;
     elif( field_name == "QO" ) /* Номер частичной оплаты */
       f2. = field_value;
     elif( field_name == "QN" ) /* Номер оплачиваемого платежа */
       f2. = field_value;
     elif( field_name == "TD" ) /* условия представления */
       f2. = field_value;
     elif( field_name == "DU" ) /* дополнительные условия */
       f2. = field_value;
     elif( field_name == "AD" ) /* срок действия аккредитива */
       f2. = field_value;
     elif( field_name == "AE" ) /* приложение к аккредитивум */
       f2. = field_value;
     elif( field_name == "UO" ) 
       f2. = field_value;
   */
     end;
  end; 

  /*Переопределим значения */
  f2.CRDATE = {curdate};
  f2.PAYER = string(v_payer,", р/c ", trim(f2.PAYACC), " в АКБ 'Экспресс-Волга' г. Саратов");
  f2.PAYBRANCH = " ";
  f2.PAYACC = "30109810856000000008";
  f2.PAYBNAME = "Саратовское ОСБ N 8622 г. Саратов";
  f2.PAYBCODE = "046311649";
  f2.PAYBADD = "30101810500000000649";
  f2.CONNTYPE = "3";
  f2.SETTYPE  = "1";
  f2.HOWLONG  = "1";
  f2.ASKSTATUS = "1";
  f2.EXPORT = "0";


  /*Тип сообщения*/
  if(substr(f2.RECACC, 1, 2) == "40")
    f2.MSGTYPE = "116";
  else
    f2.MSGTYPE = "115";
  end;


  /*Сформируем номер*/
  f2.NUMBER = TrimZero( Substr( f2.O_DOCUM, 4, 6 ) );

  /*Сформируем очередность*/
  if (Substr( f2.O_DOCUM, 16, 1 ) != "")
    f2.PRIORITY = int(Substr(f2.O_DOCUM, 16, 1 ));
  end; 

  /*Попытаемся получить код клиринга отделения-получаетеля*/
  /*Если не получим, то оставим Саратовского ОСБ*/
  v_clir_code = get_rcclcode(f2.RECACC);
  if (v_clir_code != "")
    f2.RCCLCODE = v_clir_code;
  end;

  if ( not Insert( f2 ) )
     ErrExport( "Ошибка вставки записи в транспортный файл" );
     Close( f2 );

     txt_str = string(" !!! Ошибка выгрузки платежа №", string(int(f2.NUMBER)), " на сумму ", f2.SUMMA);
     if( not ЗаписатьСтроку(txt_str) )
       ErrExport("Ошибка записи поля сообщения: " + string(txt_str));
       return false;
     end;

     return false;
  else
     txt_str = string(" Выгружен платежа №", string(int(f2.NUMBER)), " на сумму ", f2.SUMMA);
     if( not ЗаписатьСтроку(txt_str) )
       ErrExport("Ошибка записи поля сообщения: " + string(txt_str));
       return false;
     end;
  end;

  return true;
end;
                                           
/***************************************************************************/
/* Макрос экспорта сообщений СБРФ                                          */
/***************************************************************************/
macro SBRF3OutProcExec( ExportFileName, addrSess )
  var continue0 = true, Документов = 0, err;

  SetBuff( wlsess, addrSess );

  /* Определяем, есть ли сообщения, подлежащие выгрузке */
  if( not СчитатьЗапись( wlmes, err ) )
    if ( not err )
       std.msg("Не найдено ни одного сообщения для отправки");
    else
       std.msg("Ошибка чтения сообщения");
    end;
    return false;
  end;

  /* Последовательно считываем сообщения и формируем файл экспорта */
  while( continue0 )

    /*Если документ первый, то создадим новый файл и запишем в него запись*/
    if(Документов == 0)
      /*msgbox(trim(wlsess.filename)," ; PathWithOutFile = ", PathWithOutFile(wlsess.filename));*/
      /*Формируем dbf-файл в каталоге экспорта*/

      if(not (CreateDBF(trim(wlsess.filename))))
        ErrExport("Ошибка создания файла: ",wlsess.filename);
        return false;
      end;

      if( not ЗаписатьПоляСообщения(trim(wlsess.filename)))
        return false;
      end;
    end;



    if( not СчитатьЗапись( wlmes, err, false ) )
      if ( not err )
         continue0 = false;
      else
         ErrExport("Ошибка чтения сообщения");
         return false;
      end;
    else
      if( not ЗаписатьПоляСообщения(trim(wlsess.filename)))
        return false;
      end;
    end;

    Документов = Документов + 1;
    Message( "Идет выгрузка документов. Отправлено: ", Документов );
  end;
 
  return true;

end;