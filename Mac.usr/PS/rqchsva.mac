/* -------------------------------------------------------------------- */
/*         Автоматизированная банковская система RS-Bank v6.0           */
/*                 Copyright (c) R-Style Software Lab                   */
/*                                                                      */
/*  Имя файла  : rqchsva.mac                                            */
/*                                                                      */
/*  Описание   : Операция - 3036 - "Изменение номера счета"             */
/*               Шаг      - 20   - "Создание договора для нового счета" */
/*                                                                      */
/*  Программист: Андреева Е.П.                                          */
/*                                                                      */
/*  Создан     : 02.11.2004                                             */
/*                                                                      */
// KS 22.11.2013 Перенесены доработки из 30й сборки
/* -------------------------------------------------------------------- */
IMPORT reqinter, SFInter, PSInter, InsCarryDoc;

var ReqChangeAccObj:RsbReqChangeAcc;

private file SfCntrOld( "sfcontr.dbt" );
private file SettAcc  ( "settacc.dbt" );

/* Существует ли договор обслуживания для данного счета */
macro ExistAndFillSfForAccount( FIID, Account )

  var OldKey, result = false;

  OldKey = KeyNum( SfCntrOld, 1 );

  SfCntrOld.ServKind    = PTSK_PAY;
  SfCntrOld.objectType  = SF_ACCOUNT; 
  SfCntrOld.FIID        = FIID;       
  SfCntrOld.object      = Account; 

  if( getEQ( SfCntrOld ) )
    result = true;
  end;

  keyNum( SfCntrOld, OldKey );

  return result;
end;

private MACRO LZ( num, len )
     var str1, len1;
     str1 = trim( string( num ) );
     len1 = strlen( str1 );
     if ( len1 >= len ) return str1;
     else   return  mkstr("0", len-len1 ) + str1;
     end;
END;

/* Выполнение шага */
MACRO ExecuteStep( doc, reqacc )

  const OurBank    = 0;
  var   ZeroDate   = Date( 0, 0, 0 );
  var   existSfOld = false;
  var   OldSfID    = 0;
  var   sfssidl    = TArray;
  var   i:integer  = 0;
  var   Refer      = "";
  record SfCntr  ( "sfcontr.dbt", "bank.def" );       
  var SfSsi:TBFile = TBFile("sfssi.dbt", "R", 0, "sfssi.dbt", "bank.def");
  var ok:bool;
  var SfPlanID = 0;
  var UContrID = -1;//ID сводного ДО

  ClearRecord( SfCntr  );

  existSfOld = ExistAndFillSfForAccount( ReqChangeAccObj.OldAccountFIID, ReqChangeAccObj.OldAccount );

  /* Если существует договор для старого счета - копируем его */
  if( existSfOld )
    Copy( SfCntr, SfCntrOld );
    OldSfID = SfCntrOld.ID;
    SfPlanID = FindSfPlanIDByContract( OldSfID, {curdate} );
    SfCntr.AccCode= "";
  else
    SfCntr.partyID   = Req_GetAccClient( ReqChangeAccObj.NewAccountFIID, ReqChangeAccObj.NewAccount ); /* Идентификатор клиента */
    SfCntr.ContractorID = {OurBank};
    SfCntr.AccCode   = ReqChangeAccObj.SfAccCode;                   /* Код в номере счета */
    if( IsNeedSetSfPlan() )
      SfPlanID = FindSfPlanIDByClient( SfCntr.partyID, {curdate} );
    end;            
    ReqChangeAccObj.NewComissGroup = IfThenElse( SfPlanID == 0, 9/*Комиссии РКО*/, 0 );
  end;
    
  if( not ReqChangeAccObj.NewContractNumber )
    GenerateReference( 89, Refer );
    ReqChangeAccObj.NewContractNumber = Refer;
  end;

  SfCntr.ID               = 0;                                           /* Идентификатор     */
  SfCntr.objectType       = SF_ACCOUNT;                                  /* Тип объекта начисления SfObjectTypes */
  SfCntr.FIID             = ReqChangeAccObj.NewAccountFIID;              /* Валюта объекта начисления */
  SfCntr.dateBegin        = ReqChangeAccObj.Date;                        /* Дата начала       */
  SfCntr.dateProlong      = ZeroDate;                                    /*   -- пролонгации  */
  SfCntr.dateClose        = ZeroDate;                                    /*   -- закрытия     */
  SfCntr.DateConc         = ReqChangeAccObj.SfContrDate;                 /*   -- заключения   */
  SfCntr.ServKind         = PTSK_PAY;                                    /* TPTSERVKINDS      */
  SfCntr.object           = ReqChangeAccObj.NewAccount;                  /* Объект начисления */
  SfCntr.ContractorID     = {OurBank};
  SfCntr.number           = ReqChangeAccObj.NewContractNumber;           /* Номер договора    */
  SfCntr.Name             = ReqChangeAccObj.SfContrName;                 /* Имя договора   */
  SfCntr.Department       = ReqChangeAccObj.NewAccountDep;               /* Филиал */
  SfCntr.Branch           = ReqChangeAccObj.NewAccountBranch;            /* ВСП */
  SfCntr.PayMethod        = ReqChangeAccObj.SfPayMethod;                 /* Метод формирования платы за обслуживание */
  SfCntr.InvMethod        = ReqChangeAccObj.SfInvMethod;                 /* Способ оплаты ТО */
  SfCntr.Invoiceduration  = ReqChangeAccObj.SfInvoiceDuration;           /* Срок действия ТО */
  SfCntr.SetaccSearchAlg  = ReqChangeAccObj.SfSetAccSearchAlg;           /* Алгоритм поиска СПИ в ДО */
  SfCntr.PayFIId          = ReqChangeAccObj.SfPayFIID;                   /* Валюта оплаты ТО */
  SfCntr.PayRateId        = ReqChangeAccObj.SfPayRateID;                 /* Вид курса валюты ТО */
  SfCntr.PayRatePercent   = ReqChangeAccObj.SfPayRatePercent;            /* Процент к курсу оплаты ТО */
  SfCntr.PayRateDateKind  = ReqChangeAccObj.SfPayRateDateKind;           /* Вид даты курса оплаты ТО */


  /* Заполнить параметры для СПИ */ 
  if( not existSfOld )
    sfssidl[0] = TRecHandler("sfssidl.str", "bank.def" );
    sfssidl[0].rec.BankID    = {OurBank};
    sfssidl[0].rec.Chapter   = 1;
    sfssidl[0].rec.FIID      = ReqChangeAccObj.NewAccountFIID; /* валюта плательщика */
    sfssidl[0].rec.Account   = ReqChangeAccObj.NewAccount;     /* счет плательщика   */
    sfssidl[0].rec.FeeType   = 0;
    sfssidl[0].rec.FeeNumber = 0;
  else
    /* Взять СПИ из старого договора и слегка поменять */
    SfSsi.rec.ObjectType = OBJTYPE_SFCONTR;
    SfSsi.rec.ObjectID   = LZ(SfCntrOld.ID,10);

    /* Сделать через параметрический запрос */
   SfSsi.AddFilter( string( "t_objecttype = ",  OBJTYPE_SFCONTR, " and t_objectid = ", LZ(SfCntrOld.ID,10) ) );
   ok = ( SfSsi.GetGE() and ( SfSsi.rec.ObjectType == OBJTYPE_SFCONTR) and (SfSsi.rec.ObjectID == LZ(SfCntrOld.ID,10) ) );
    while( ok )
      
      SettAcc.SettAccID = SfSsi.rec.SetAccID;;

      if( GetEQ( SettAcc ) )
        sfssidl[i] = TRecHandler("sfssidl.str", "bank.def" );

        /*Заполнить параметры */
        sfssidl[i].rec.BankID    = SettAcc.BankID;
        sfssidl[i].rec.Chapter   = 1;
        sfssidl[i].rec.FIID      = SettAcc.FIID;    /* валюта плательщика */
        sfssidl[i].rec.Account   = SettAcc.Account; /* счет плательщика   */
        sfssidl[i].rec.FeeType   = 0;
        sfssidl[i].rec.FeeNumber = 0;

        if( (SettAcc.BankID == {OurBank})  and
            (SettAcc.FIID == ReqChangeAccObj.OldAccountFIID) and
            (SettAcc.Account == ReqChangeAccObj.OldAccount) )
          sfssidl[i].rec.BankID  = {OurBank};
          sfssidl[i].rec.FIID    = ReqChangeAccObj.NewAccountFIID;
          sfssidl[i].rec.Account = ReqChangeAccObj.NewAccount;
        end;
        i = i + 1;
    end;
      ok = ( SfSsi.Next() and ( SfSsi.rec.ObjectType == OBJTYPE_SFCONTR) and (SfSsi.rec.ObjectID == LZ(SfCntrOld.ID,10) ) );
    end;
    Sfssi.DropFilter();
  end;

  if( ReqChangeAccObj.CreateUC == "X" )
    UContrID = 0;
  elif( ReqChangeAccObj.UnionContrID > 0 )
    UContrID = ReqChangeAccObj.UnionContrID;
  end;

  if( not InsertSfContract( SfCntr, ReqChangeAccObj.NewComissGroup, sfssidl, OldSfID, SfPlanID, IfThenElse( UContrID >= 0, UContrID, NULL ), ReqChangeAccObj.ProductID ) )
    MsgBox( "Ошибка при открытии договора обслуживания " + ReqChangeAccObj.NewContractNumber );
    return  1;
  end;

  return 0;

END;
