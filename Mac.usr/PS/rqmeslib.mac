/************************************************************************/
/*         Автоматизированная банковская система RS-Bank                */
/*                 Copyright (c) R-Style Software Lab 2002              */
/*                                                                      */
/*  Имя файла      : rqopclpfr.mac                                      */
/*                                                                      */
/*  Описание       : Библиотека печати сообщений в фонды                */
/*                                                                      */
/*  Программист    : Popova O.                                          */
/*                                                                      */
/*  Создан         : 09.03.10                                           */
/*                                                                      */
/************************************************************************/


IMPORT globals, PSInter, PTInter, MesInter, reqinter, "prreqbuf.mac", "prpm.mac";

var pr_reqchnga:TRecHandler = TRecHandler("reqchnga.dbt", "bank.def");

// заполняемые данные формы
VAR                                  // fieldname    numbers 1-(sbc0_510,sbc2_510) 2-(sbc1_510)
              SeriesAndNum           // номер и серия сообщения 1 1
             ,TypeMes                // номер (тип) сообщения 2 2
             ,NameGNI                // наименование ФНС
             ,CodeGNI                // код ФНС
             ,CodeNOB                // КодНОБ  4 3
             ,NameCOSV               // Наименование КО 7 4
             ,IndexSV                // 8 5 СвБанк / АдрМНКО  / Индекс
             ,BankAddrMNKO           // 9 6 СвБанк/АдрМНКО кроме Индекс и технических
             ,BankRegNomSV           // Регистрационный номер банка 10 7
             ,OutRF                  // 3 9 Признак места нахождения филиала банка
             ,IndexGNI               // почтовый индекс ФНС
             ,AdressGNI              // адрес ФНС
             ,NamePFR                // наименование ПФР
             ,IndexPFR               // почтовый индекс ПФР
             ,AdressPFR              // адрес ПФР
             ,NameFSS                // наименование ФСС
             ,IndexFSS               // почтовый индекс ФСС
             ,AdressFSS              // адрес ФСС
             ,BankName               // наименование банка, в котором открыт счет
             ,BankIndex              // индекс банка, в котором открыт счет
             ,BankAdress             // адрес банка, в котором открыт счет
             ,BankRegNom             // рег.номер банка, в котором открыт счет
             ,BankNumber             // порядковый номер филиала банка  11 8 СвБанк /  НомФ
             ,BankBIC                // СвБанк БИК банка, в котором открыт (закрыт) счет  12 10
             ,BankINN                // СвБанк ИНН банка, в котором открыт (закрыт) счет  13 11
             ,BankKPP                // СвБанк КПП банка, в котором открыт (закрыт) счет  14 12
             ,BankOGRN               // СвБанк ОГРН банка, в котором открыт (закрыт) счет 15 13
             ,FullNameFIO            // Сообщает, что (полное наименование организации/Ф.И.О ... 16 18
             ,ClientCodeSV           // код лица 5 19
             ,ClientName             // наименование клиента, открывшего (закрывшего) счет
             ,GosRegSeries           // свидетельство о гос.регистрации клиента, серия 17 0
             ,GosRegNumber           // свидетельство о гос.регистрации клиента, номер 18 0
             ,UchSeries              // свидетельство о постановке клиента на налоговый учет, серия 19 0
             ,UchNumber              // свидетельство о постановке клиента на налоговый учет, номер 20 0
             ,INNKIO                 // ИНН/КИО ИННРО,ИННИП,ИННИО,КИО 21 20
             ,KPP                    // 22 21
             ,OGRN                   // 23 22
             ,NumberAcc              // 0 23  номера счета (депозита)  если заполнен блок  СвСчСтар
             ,InfAbBank              // 0 24  сведений о банке (филиале банка) если заполнен блок  СвБанкСтар
             ,InfAbOrg               // 0 25  сведений об организации, управляющем товарище инвестиционного товарищества если заполнен блок СвНПСтар
             ,NameCOSVOLD            // 0 28  НаимКО блока  СвБанкСтар
                                     // СвБанкСтар \ СвИзмБанк \ 
             ,IndexSVCHNG            // 0 29 
             ,BankAddrMNKOCHNG       // 0 30
             ,BankRegNomSVCHNG       // 0 31 РегНом
             ,BankNumberSVCHNG       // 0 32 НомФ
             ,BankBICSVCHNG          // 0 33 БИК
             ,BankINNSVCHNG          // 0 34 ИННКО
             ,BankKPPSVCHNG          // 0 35 КППКО
             ,BankOGRNSVCHNG         // 0 36 ОГРНКО
             ,ReorgOrg               // 0 38 Реорганизация организации. X - если значение поля ПрИзмНП СвНПСтар равно 1. Иначе - пусто.
             ,ChngFace               // 0 39 Смена управляющего товарища 
             ,FullNameFIOSVOLD       // 0 40 полное наименование организации/ФИО 
             ,INNNPRO                // 0 41 ИНН
             ,KPPNPRO                // 0 42 КПП
             ,OGRNNPRO               // 0 43 ОГРН\ОГРНИП
             ,ClientINN              // ИНН клиента, открывшего (закрывшего) счет
             ,ClientKPP              // КПП клиента, открывшего (закрывшего) счет
             ,ClientOGRN             // ОГРН клиента, открывшего (закрывшего) счет
             ,DogAccNumber           // номер договора открытия счета  27 16
             ,OpenAcc                // признак "Счет открыт"  28 0
             ,CloseAcc               // признак "Счет закрыт"  29 0
             ,NatCurAcc              // признак "Счет рублевый" 30 0
             ,ValCurAcc              // признак "Счет валютный" 31 0
             ,CodeContr              // 25 0 КодСостДог
             ,KindAcc                // вид счета 32 0
             ,ReqAccount             // номер счета 34 14
             ,ReqAccountOld          // номер старого счета - для заявлений на изменение номера 0 26
             ,PostBank               // представитель банка, подписывающий сообщения в ПФР, должность  35 45 ДолжнПрБ
             ,FamPRB                 // 36 46 ФАМПрБ
             ,FIOBank                // представитель банка, подписывающий сообщения в ПФР, ФИО
             ,MessAccDateD           // 37 47
             ,MessAccDateM           // 37 47
             ,MessAccDateY           // 37 47
             ,Phone                  // телефон 38 48
             ,BankAlOrder            // 40
             ,Court                  // 41
             ,Zakl                   // признак "Договор счета заключен" 24 0
             ,Rast_cl                // признак "Договор счета расторжен по заявлению клиента"
             ,Rast_bnk               // признак "Договор счета расторжен банком в одностороннем порядке"
             ,Rast_sud               // признак "Договор счета расторжен судом"
             ,DogAccDateD            // дата заключения договора открытия счета 26 17
             ,DogAccDateM 
             ,DogAccDateY 
             ,OpClAccDateD           // дата открытия/закрытия счета 33,39 15
             ,OpClAccDateM   
             ,OpClAccDateY   
             ,ClAccDateD          // дата закрытия счета 33,39 15 если Zakl==0
             ,ClAccDateM
             ,ClAccDateY
             ,OpAccDateD          // дата открытия счета 33,39 15
             ,OpAccDateM
             ,OpAccDateY
             ,ChngAccDateD           // дата изменения номера счета 0 27
             ,ChngAccDateM   
             ,ChngAccDateY   
             ,ChngBnkDateD           // дата внесения изменений  СвБанкСтар \ ДатаИзмБанк 0 37
             ,ChngBnkDateM
             ,ChngBnkDateY
             ,ChngNPDateD           // дата внесения изменений  СвБанкСтар \ ДатаИзмБанк 0 44
             ,ChngNPDateM
             ,ChngNPDateY
             ,DateD                  // дата подписания сообщения
             ,DateM       
             ,DateY       
             ,OutSideDateD           // дата отправки сообщения
             ,OutSideDateM
             ,OutSideDateY;

//заполнение формы пустыми значениями
MACRO ОчиститьФормуСообщения()
  SeriesAndNum       = "";
  TypeMes            = "";
  NameGNI            = "";
  CodeGNI            = "";
  CodeNOB            = "";
  NameCOSV           = "";
  NameCOSVOLD        = "";
  IndexSV            = "";
  IndexSVCHNG        = "";
  BankRegNomSV       = "";
  IndexGNI           = "";
  ClientCodeSV       = "";
  AdressGNI          = "";
  FullNameFIO        = "";
  FullNameFIOSVOLD   = "";
  INNKIO             = "";
  INNNPRO            = "";
  OutRF              = "";
  KPP                = "";
  KPPNPRO            = "";
  OGRN               = "";
  OGRNNPRO           = "";
  BankAlOrder        = "";
  Court              = "";
  FamPRB             = "";
  CodeContr          = "";
  NamePFR            = "";                           
  IndexPFR           = "";                                
  AdressPFR          = "";                          
  NameFSS            = "";                           
  IndexFSS           = "";                                
  AdressFSS          = "";                           
  BankName           = "";
  BankIndex          = "";
  BankAdress         = "";
  BankRegNom         = "";
  BankRegNomSVCHNG   = "";
  BankNumber         = "";
  BankNumberSVCHNG  = "";
  BankBIC            = "";
  BankBICSVCHNG      = "";
  BankINN            = "";
  BankINNSVCHNG      = "";
  BankKPP            = "";
  BankKPPSVCHNG      = "";
  BankOGRN           = "";
  BankOGRNSVCHNG     = "";
  BankAddrMNKO       = "";
  BankAddrMNKOCHNG   = "";
  ChngFace           = "";
  ReorgOrg           = "";
  ClientName         = "";
  GosRegSeries       = ""; 
  GosRegNumber       = ""; 
  UchSeries          = "";
  UchNumber          = "";
  ClientINN          = "";
  ClientKPP          = "";
  ClientOGRN         = "";
  Zakl               = "";
  NumberAcc          = "";
  InfAbBank          = "";
  InfAbOrg           = "";
  Rast_cl            = "";
  Rast_bnk           = "";
  Rast_sud           = "";
  DogAccDateD        = "";
  DogAccDateM        = "";
  DogAccDateY        = "";
  DogAccNumber       = ""; 
  MessAccDateD       = "";
  MessAccDateM       = "";
  MessAccDateY       = "";
  OpenAcc            = "";
  CloseAcc           = "";
  NatCurAcc          = "";
  ValCurAcc          = "";
  KindAcc            = "";
  OpClAccDateD       = "";
  OpClAccDateM       = "";
  OpClAccDateY       = "";
  ClAccDateD         = "";
  ClAccDateM         = "";
  ClAccDateY         = "";
  OpAccDateY         = "";
  OpAccDateY         = "";
  OpAccDateY         = "";
  ChngAccDateD       = "";
  ChngAccDateM       = "";  
  ChngAccDateY       = "";  
  ChngBnkDateD       = "";
  ChngBnkDateM       = "";
  ChngBnkDateY       = "";
  ChngNPDateD       = "";
  ChngNPDateM       = "";
  ChngNPDateY       = "";
  ReqAccount         = "";
  ReqAccountOld      = "";
  PostBank           = "";
  FIOBank            = "";
  Phone              = "";
  DateD              = ""; 
  DateM              = "";
  DateY              = "";
  OutSideDateD       = "";
  OutSideDateM       = "";
  OutSideDateY       = "";
END;

private macro ЗаполнитьРеквизитыНашегоБанка( InsideAbonentID:integer ):integer

  if( GetBankNameReqMes( InsideAbonentID, BankName ) ) 
    msgbox( "Ошибка при получении наименования нашего банка" );
    return 1;
  end;

  if( GetBankAdressReqMes( InsideAbonentID, BankIndex, BankAdress, Phone ) )
    msgbox( "Ошибка при получении адреса нашего банка " );
    return 1;
  else
    BankAdress = StrSubSt( BankAdress, BankIndex, "" );
  end;
  return 0;
end;

private macro GetPartyName( PartyID : integer):string

  var party = Tbfile("party.dbt", "r");
  party.rec.PartyID = PartyID;

  if(getEQ(party))
    return party.rec.Name;
  end;

  return "";
end;

private macro GetAccountFromMesID( wlmesid:integer, Account:string, FIID:integer ):integer

  var select = " SELECT DECODE( MESLNK.T_OBJKIND,"+
                 " 450, ( SELECT REQ.T_ACCOUNT FROM DREQOPENA_DBT REQ WHERE REQ.T_REQUESTID = MESLNK.T_OBJID ),"+
                 " 451, ( SELECT REQ.T_ACCOUNT FROM DREQCLOSA_DBT REQ WHERE REQ.T_REQUESTID = MESLNK.T_OBJID )"+
                " )AS ACCOUNT,"+
         " DECODE( MESLNK.T_OBJKIND,"+
                 " 450, ( SELECT REQ.T_CODE_CURRENCY FROM DREQOPENA_DBT REQ WHERE REQ.T_REQUESTID = MESLNK.T_OBJID ),"+
                 " 451, ( SELECT REQ.T_CODE_CURRENCY FROM DREQCLOSA_DBT REQ WHERE REQ.T_REQUESTID = MESLNK.T_OBJID )"+
                " )AS CODE_CURRENCY"+
  " FROM DWLMES_DBT MES, DWLMESLNK_DBT MESLNK"+
  " WHERE MES.T_MESID = :WlmesID"+
    " AND MESLNK.T_MESID = MES.T_MESID"+
    " AND MESLNK.T_OBJKIND IN ( 450, 451 )";

  var params:TArray = makeArray( SQLParam( "WlmesID", wlmesid ) );

  var rset:RsdRecordset = execSQLselect( select, params, TRUE );

  if( rset and rset.moveNext() )
    SetParm( 1, rset.value(0));
    SetParm( 2, rset.value(1));
  end;

  return 0;

ONERROR(x)
  MsgBox( x.Message );
  return 1;
 
end;

private macro FillRastKind( Account:TRecHandler, Rast_cl:string, Rast_bnk:string, Rast_sud:string ):integer
             
  var select =  " SELECT CL.T_SUBKIND, CL.T_GROUND"  +
                "   FROM DREQCLOSA_DBT CL"           +
                "  WHERE CL.T_ACCOUNT       = :ACC " +
                "    AND CL.T_CODE_CURRENCY = :FIID" ;
  var i;
  var params:TArray = makeArray( SQLParam( "ACC" , Account.rec.Account       ),
                                 SQLParam( "FIID", Account.rec.Code_Currency ) 
                               );

  var rset:RsdRecordset = execSQLselect( select, params, TRUE );

  if( rset and rset.moveNext() )
    SetParm( 1, "" );
    SetParm( 2, "" );
    SetParm( 3, "" );
    if( rset.value(0) == 1 )  /*Заявление на закрытие*/
      SetParm( 1, "X" ); 
    elif(rset.value(0) == 2)  /*Распоряжение по решению банка*/
      SetParm( 2, "X" ); 
    elif(rset.value(0) == 3)  /*Распоряжение по решению суда*/
      SetParm( 3, "X" );    
    end;
  else
    MsgBox("Не найдена запись в таблице reqclosa.dbt");
    return 1;
  end;     
  return 0;
end;

private macro GetGNIName( Code:string, Name:string ):integer

  var select =  "SELECT PARTY.T_NAME"+
               " FROM DPARTY_DBT PARTY, DOBJCODE_DBT OBJCODE"+
               " WHERE OBJCODE.T_CODE = :Code"+
                 " AND OBJCODE.T_CODEKIND = 28"+
                 " AND PARTY.T_PARTYID = OBJCODE.T_OBJECTID";

  var params:TArray = makeArray( SQLParam( "Code", Code ) );

  var rset:RsdRecordset = execSQLselect( select, params, TRUE );

  if( rset and rset.moveNext() )
    SetParm( 1, rset.value(0) );
  end;     

  return 0;

ONERROR(x)
  MsgBox( x.Message );
  return 1;
end;

private macro GetGNIAdress( Code:string, Index:string, Adress:string )

  var select = "SELECT ADRESS.T_POSTINDEX, ADRESS.T_ADRESS"+
              " FROM DADRESS_DBT ADRESS, DOBJCODE_DBT OBJCODE"+
              " WHERE OBJCODE.T_CODE = :Code"+
                " AND OBJCODE.T_CODEKIND = 28"+
                " AND ADRESS.T_PARTYID = OBJCODE.T_OBJECTID"+
                " ORDER BY DECODE( ADRESS.T_TYPE, 3, 1, 1, 2, 3) ASC";

  var params:TArray = makeArray( SQLParam( "Code", Code ) );

  var rset:RsdRecordset = execSQLselect( select, params, TRUE );

  if( rset and rset.moveNext() )
    SetParm( 1, rset.value(0));
    SetParm( 2, rset.value(1));
  end;     

  return 0;

ONERROR(x)
  MsgBox( x.Message );
  return 1;

end;

macro ЗаполнитьДанныеРегистрацииБанкаФНС( Code:string ):integer

  if( GetGNIName( Code, NameGNI ) ) 
    msgbox( "Ошибка при получении наименования налогового органа с кодом ", Code );
    return 1;
  end;

  CodeGNI = int(Code);

  if( GetGNIAdress( Code, IndexGNI, AdressGNI ) )
    msgbox( "Ошибка при получении адреса налогового органа с кодом ", Code );
    return 1;
  else
    AdressGNI = StrSubst(AdressGNI, IndexGNI, "");
  end;

end;

macro ЗаполнитьДанныеРегистрацииБанкаПФР():integer

  var Number = "";

  var RgDoc:TRecHandler = TRecHandler("objrgdoc.dbt", "bank.def");
  var stat = CB_GetRegistry( OBJTYPE_PARTY, {OurBank}, REGPT_PENSFOND, OBJKDOC_EVIDENCE_REGISTERED, RgDoc, Number ); 
  if( stat != 0 )
    MsgBox("Не найден документ регистрации банка (филиала) в органе ПФР");
    return 1;
  end;

  NamePFR = GetPartyName( RgDoc.rec.RegPartyID );
                                              
  if( GetBankAdressReqMes( RgDoc.rec.RegPartyID, IndexPFR, AdressPFR ) )
    MsgBox("Ошибка при получении наименования пенсионного фонда");
    return 1;
  end;
  return 0;
end;


macro ЗаполнитьДанныеРегистрацииБанкаФСС():integer
  var stat:integer = 0;
  var Series = "", Number = "";

  var RgDoc:TRecHandler = TRecHandler("objrgdoc.dbt", "bank.def");
  stat = CB_GetRegistry( OBJTYPE_PARTY, {OurBank}, REGPT_FUND_SOCIAL_INSURANCE, OBJKDOC_EVIDENCE_REGISTERED, RgDoc, Number ); 
  if( stat != 0 )
    MsgBox("Не найден документ регистрации банка (филиала) в органе ФСС");
    return 1;
  end;

  NameFSS = GetPartyName( RgDoc.rec.RegPartyID );
  
  if( GetBankAdressReqMes( RgDoc.rec.RegPartyID, IndexFSS, AdressFSS ) )
    MsgBox("Ошибка при получении наименования ФСС");
    return 1;
  end;
  return stat;
end;

macro ЗаполнитьКодНалоговогоОргана():integer
  var stat:integer = 0;
  // Код налогового органа по месту нахождения банка
  // Данные анкеты нашего филиала (филиала счета). Значение кода вида 28 для субъекта,  указанного в поле "Налоговая инспекция"
  if( not stat )
    var strSQL : string = "SELECT objcode.t_Code " +
                          "FROM dobjcode_dbt objcode, dparty_dbt party " +
                          "WHERE party.t_PartyID = " + {OurBank} +
                          "  AND objcode.t_ObjectID = party.t_TaxInstitution " +
                          "  AND objcode.t_CodeKind = 28 ";
    var rs : RsdRecordSet = RsdRecordSet(strSQL);
    if( rs and rs.moveNext() )
      CodeGNI = int(rs.value("t_Code"));
    else
      MsgBox("Ошибка при получении кода налогового органа");
      return 1;
    end;    
  end;

end;

private macro ЗаполнитьРеквизитыСчета( Account, FIID, DocKind:integer )

  var RAcc:TRecHandler = TRecHandler("account.dbt", "bank.def");
  var d,m,y:integer;
  var NumDate = date(0,0,0);

  RAcc    = GetAccount( 1, Account, FIID );
  KindAcc = StrSubst( GetTypeAcc(RAcc.rec.Code_Currency, RAcc.rec.Type_Account), " счет", "" );                                 

  if( GetClientNameReqMes( RAcc.rec.Client, ClientName ) )
    msgbox( "Ошибка при получении наименования клиента" );
    return 1;
  end;

  if( GetRegSeriesAndNumber( OBJKDOC_EVIDENCE_REGISTERED, REGPT_TAXINSTITUTE, RAcc.rec.Client, UchSeries, UchNumber ) )
    msgbox( "Ошибка при получении реквизитов клиента при постановки на учет" );
    return 1;
  end;

  if( DocKind == PS_REQOPENA )
   if( RAcc.rec.Open_Date != NumDate )
     DateSplit( RAcc.rec.Open_Date, d, m, y );
   end;
  elif( DocKind == PS_REQCLOSEA )
    if( FillRastKind( RAcc, Rast_cl, Rast_bnk, Rast_sud ) )
      return 1;
    end;
   if( RAcc.rec.Close_Date != NumDate )
     DateSplit( RAcc.rec.Close_Date, d, m, y );
   end;
  end;
  DateD = string(d:o:2); 
  DateM = string(m:o:2);
  DateY = string(y:o:4);

end;

private macro ЗаполнитьДанныеПоСообщению( wlmes )

  var field, buff;
  var d,m,y:integer;
  var NumDate = date(0,0,0);
  var DateZaklDog = NumDate, DateRastDog = NumDate, DateOpenAcc = NumDate, DateCloseAcc = NumDate, DateMes = NumDate;
  var BlockName = "";
  var PrevBlockName = "";
  var TechnicalField = false;
  var PrChngNP = "";
  var isFldCodeAccExists = false;

  DateSplit( wlmes.OutsideAbonentDate, d, m, y );
  OutSideDateD = string(d:o:2); 
  OutSideDateM = string(m:o:2);
  OutSideDateY = string(y:o:4);

  while(СчитатьПоле(field,buff))
    if( field == "_begin" )
      PrevBlockName = BlockName;
      BlockName = buff;
      TechnicalField = true;
    elif( field == "_end" )
      BlockName = PrevBlockName;
      if( buff == PrevBlockName )
        PrevBlockName = "";
      end;
      TechnicalField = true;
    else TechnicalField = false;
    end;
    
    if( ( field == "КодНОБ" ) AND ( GetKindRegOrgan() == REG_ORGAN_KIND_FNS ) )
      ЗаполнитьДанныеРегистрацииБанкаФНС( buff );
    end;

    if( field == "НаимКО" )
      NameCOSV = buff;
    end;

    if( (BlockName == "СвБанкСтар") AND (field == "НаимКО") AND (not TechnicalField) )
      NameCOSVOLD = buff;
    end;

    if( field == "Индекс" )
      IndexSV = buff;
      if( PrevBlockName == "СвИзмБанк" )
        IndexSVCHNG = buff;
      end;
    end;

    if( field == "НомСооб" )
      SeriesAndNum = StrSubst(buff, ",", "/");
    end;

    if( field == "ТипСооб" )
      TypeMes = buff;
    end;

    if( (field == "ИННРО") OR (field == "ИННИП") OR (field == "ИННИО") OR (field == "КИО") )
       INNKIO = buff;
    end;

    if( (field == "КПП") AND ((ClientCodeSV == 1) OR (ClientCodeSV == 6)) )
      KPP = buff;
    end;

    if( (field == "ОГРН") AND ((ClientCodeSV == 1) OR (ClientCodeSV == 6)) )
      if( (BlockName == "НПРО") )
        OGRN = buff;
      end;
    elif( (field == "ОГРНИП") AND (BlockName == "НПИП") )
      OGRN = buff;
    end;

    if( field == "ФамПрБ" )
      FamPRB = buff;
    end;

    if( (BlockName == "АдрМНКО") AND (field != "Индекс") AND (not TechnicalField) )
      if( BankAddrMNKO != "" ) 
        BankAddrMNKO = BankAddrMNKO + ",";
      end;
      BankAddrMNKO = BankAddrMNKO + buff;

      if( PrevBlockName == "СвИзмБанк" )
        if( BankAddrMNKOCHNG != "" )
          BankAddrMNKOCHNG = BankAddrMNKOCHNG + ",";
        end;
        BankAddrMNKOCHNG = BankAddrMNKOCHNG + buff;
      end;
    end;

    if( field == "ПрИзмНП" )
      PrChngNP = buff;
      if( int(buff) == 1 )
        ReorgOrg = "X";
      end;
      if( int(buff) == 2 )
        ChngFace = "X";
      end;
    end;

    if( PrChngNP == 1 )
      if( (BlockName == "НПРО") AND (field == "НаимОрг") )
        FullNameFIOSVOLD = buff;
      end;
    elif( (BlockName == "ФИОИП") AND (PrevBlockName == "НПУТ" ) AND (buff != "") AND (not TechnicalField) )
      if( FullNameFIOSVOLD != "" ) 
        FullNameFIOSVOLD = FullNameFIOSVOLD + " ";
      end;
      FullNameFIOSVOLD = FullNameFIOSVOLD + buff;
    end;

    if( PrChngNP == 1 )
      if( BlockName == "НПРО" )
        if( field == "ИННРО" )
          INNNPRO = buff;
        end;
        if( field == "ОГРН" )
          OGRNNPRO = buff;
        end;
      end;
    elif( BlockName == "НПУТ" )
      if( field == "ИННИП" )
        INNNPRO = buff;
      end;
      if( field == "ОГРНИП" )
        OGRNNPRO = buff;
      end;
    end;

    if( (PrevBlockName == "СвНПСтар") AND (field == "КПП") )
      if( (BlockName == "НПРО") AND (buff != "") )
        KPPNPRO = buff;
      elif( BlockName == "НПУТ" )
        KPPNPRO = buff;
      end;
    end;

    if( BlockName == "СвСчСтар" )
      NumberAcc = "X";
    end;
    if( BlockName == "СвБанкСтар" )
      InfAbBank = "X";
    end;
    if( BlockName == "СвНПСтар" )
      InfAbOrg  = "X";
    end;

    if( (ClientCodeSV == 1) OR (ClientCodeSV == 6) )
      if( ((BlockName == "НПРО") OR (BlockName == "НПИО")) AND (field == "НаимОрг") ) // СвНП TAM 02.09.2014 HF_124
        FullNameFIO = buff;
      end;
    elif( (BlockName == "ФИОИП") AND (buff != "") AND (not TechnicalField) )
      if( FullNameFIO != "" ) 
        FullNameFIO = FullNameFIO + " ";
      end;
      FullNameFIO = FullNameFIO + buff;
    end;

    if( field == "ДатаСооб" )
      DateMes = date(buff);
      if( DateMes != NumDate )
        DateSplit( DateMes, d, m, y );
        MessAccDateD = string(d:o:2); 
        MessAccDateM = string(m:o:2);
        MessAccDateY = string(y:o:4);
      //TAM 18.09.2014 дата должна быть всегда + LVV 11.02.15 перенес фичу TAM из 30ки
      else
        DateSplit( wlmes.BankDate, d, m, y );
        MessAccDateD = string(d:o:2); 
        MessAccDateM = string(m:o:2);
        MessAccDateY = string(y:o:4);
      end;
    end;

    if( field == "КодЛица" )
      ClientCodeSV = buff;
    end;

    if( field == "КодНОБ" )
      CodeNOB = buff;
    end;

    if( (field == "КодСостДог") AND (not Zakl) )
      if( int(buff) == 1 )
        CodeContr = "X";
      elif( int(buff) == 2 )
        BankAlOrder = "X";
      elif( int(buff) == 3 )
        Court = "X";
      end;
    end;

    if( field == "РегНом" )
      BankRegNomSV = buff;
      if( BlockName == "СвИзмБанк" )
        BankRegNomSVCHNG = buff;
      end;
    end;

    if( field == "РегНомКО" )
      BankRegNom = string( int( buff ):4:o );       
    end;

    if( field == "НомФ" )
      BankNumber = string( IfThenElse( int(buff) > 0, int( buff ), "" ):4:o );
      if( BlockName == "СвИзмБанк" )
        BankNumberSVCHNG = buff;
      end;
    end;

    if( field == "БИК" )
      BankBIC = buff;
      if( BlockName == "СвИзмБанк" )
        BankBICSVCHNG = buff;
      end;
    end;

    if( field == "ИННКО" )
      BankINN = buff;
      if( BlockName == "СвИзмБанк" )
        BankINNSVCHNG = buff;
      end;
    end;

    if( field == "КППКО" )
      BankKPP = buff;
      if( BlockName == "СвИзмБанк" )
        BankKPPSVCHNG = buff;
      end;
    end; 

    if( field == "ОГРНКО" )                                
      BankOGRN = buff;
      if( BlockName == "СвИзмБанк" )
        BankOGRNSVCHNG = buff;
      end;
    end; 
     
    if( (field == "НомСч" ) or ( field == "НомИзмСч" ) )
      ReqAccount = buff;
    end;

    if( field == "НомСчСтар" )
      ReqAccountOld = buff;
    end;

    if(field == "ИНННП")
      ClientINN = buff;
    end;

    if(field == "КППНП")
      ClientKPP = buff;
    end;

    if(field == "ОГРННП")
      ClientOGRN = buff;
    end;

    if(field == "СвидГР")
      GosRegSeries = SubStr( buff, 1, Index(buff, ",") - 1 );
      GosRegNumber = SubStr( buff, Index(buff, ",") + 1 );
    end;

    if(field == "КодСостСч" )
      isFldCodeAccExists = true;
      if( int(buff) == 1 )
        Zakl     = "X";
        Rast_cl  = Rast_bnk = Rast_sud = "";
        OpenAcc  = "X";
        CloseAcc = "";
      else
        Zakl     = "";
        OpenAcc  = "";
        CloseAcc = "X";
      end;
    end;

    if( field == "ПризнТер" )
      if( int(buff) == 1 )
        OutRF = "X";
      end;
    end;

    if( field == "НомерДог" )
      DogAccNumber = buff;
    end;

    if( field == "ВалСч" )
      if( int(buff) == 0 )
        NatCurAcc = "X";
        ValCurAcc = "";
      else
        NatCurAcc = "";
        ValCurAcc = "X";
      end;
    end;

    if( field == "ВидСч" )
      KindAcc = StrSubst( string( buff ), " счет", "" );
    end;

    if( (field == "ДатаЗаклДо") OR (field == "ДатаЗаклДог") )
      DateZaklDog = date(buff);
    end;

    if( (field == "ДатаРастДо") OR (field == "ДатаРастДог") )
      DateRastDog = date(buff);
    end;

    if( field == "ДатаОткрСч" )
      DateOpenAcc = date(buff);
    end;

    if( field == "ДатаЗакрСч" )
      DateCloseAcc = date( buff );
    end;

    if(field == "ДатаИзмСч") 
      DateSplit(date(buff), d, m, y );
      ChngAccDateD = string(d:o:2);
      ChngAccDateM = string(m:o:2);
      ChngAccDateY = string(y:o:4);
    end;      

    if(field == "ДатаИзмБанк") 
      DateSplit(date(buff), d, m, y );
      ChngBnkDateD = string(d:o:2);
      ChngBnkDateM = string(m:o:2);
      ChngBnkDateY = string(y:o:4);
    end;      
  
    if(field == "ДатаИзмНП") 
      DateSplit(date(buff), d, m, y );
      ChngNPDateD = string(d:o:2);
      ChngNPDateM = string(m:o:2);
      ChngNPDateY = string(y:o:4);
    end;      

    if( field == "ДолжнПрБ" )
      PostBank = string( buff );
    end;

    if( field == "ФИОПрБ" )
      FIOBank = string( buff );
    end;

    if( field == "ТелБанка" )
      Phone = string( buff );
    end;
 
  end;

  if( Zakl == "X" )
   
    if( DateZaklDog != NumDate )
      DateSplit( DateZaklDog, d, m, y );
      DogAccDateD = string(d:o:2); 
      DogAccDateM = string(m:o:2);
      DogAccDateY = string(y:o:4);
    end;

    if( DateOpenAcc != NumDate )
      DateSplit( DateOpenAcc, d, m, y );
      OpClAccDateD = string(d:o:2); 
      OpClAccDateM = string(m:o:2);
      OpClAccDateY = string(y:o:4);
    end;         
  else
    if( isFldCodeAccExists == false ) /*release SBC1, in SBC1/SBC2 - true*/
      if( DateZaklDog != NumDate )
        DateSplit( DateZaklDog, d, m, y );
        DogAccDateD = string(d:o:2); 
        DogAccDateM = string(m:o:2);
        DogAccDateY = string(y:o:4);
      end;
    end;
   
    if( DateRastDog != NumDate )
      DateSplit( DateRastDog, d, m, y );
      DogAccDateD = string(d:o:2); 
      DogAccDateM = string(m:o:2);
      DogAccDateY = string(y:o:4);
    end;

    if( DateCloseAcc != NumDate )
      DateSplit( DateCloseAcc, d, m, y );
      OpClAccDateD = string(d:o:2); 
      OpClAccDateM = string(m:o:2);
      OpClAccDateY = string(y:o:4);
      ClAccDateD= string(d:o:2); 
      ClAccDateM= string(m:o:2);
      ClAccDateY= string(y:o:4);
    end;

  end;

  if( DateOpenAcc != NumDate )
    DateSplit( DateOpenAcc, d, m, y );
    OpAccDateD = string(d:o:2); 
    OpAccDateM = string(m:o:2);
    OpAccDateY = string(y:o:4);
  end;
end;

MACRO ЗаполнитьДанныеСообщенияОбОткрытииЗакрытии( wlmes )
    
  var Account, FIID;
  if( GetAccountFromMesID( wlmes.MesID, Account, FIID ) ) 
    msgbox( "Ошибка при получении счета" );
    return;
  end;

  ЗаполнитьРеквизитыНашегоБанка( wlmes.InsideAbonentID );
  ЗаполнитьДанныеПоСообщению( wlmes );
  ЗаполнитьРеквизитыСчета( Account, FIID, IfThenElse( OpenAcc == "X", PS_REQOPENA, PS_REQCLOSEA ) );

END;

MACRO ЗаполнитьДанныеСообщенияОбИзменении( chnga, wlmes )

  ЗаполнитьРеквизитыНашегоБанка( wlmes.InsideAbonentID );

  ЗаполнитьДанныеПоСообщению( wlmes );
  ЗаполнитьРеквизитыСчета( chnga.OldAccount, chnga.OldAccountFIID, PS_REQCHANGE );

  NatCurAcc = IfThenElse( chnga.OldAccountFIID == 0, "X", " " );
  ValCurAcc = IfThenElse( chnga.OldAccountFIID == 0, " ", "X" );

END;
