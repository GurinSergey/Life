/*-----------------------------------------------------------------------------

отчет о наличии документв в К1

-----------------------------------------------------------------------------*/

import PSInter, RSD, globals;

array branchSum, brabchCnt;
/*
-------------------------------------------------------------------------------
шапка отчета
-------------------------------------------------------------------------------
*/
macro PrintHeader( Date )
[                            Докуметы находящиеся в картотеке № 1
                                      на ##########
]( Date );
end;

/*
-------------------------------------------------------------------------------
напечатать филиал
-------------------------------------------------------------------------------
*/

macro PrintDepartment( Code, Name )

   if( Code != "Undefined" )

[
 Филиал #####  ######################################## 
]( Code, Name );

   end;

end;

/*
Тихомиров А.Н.  Заявка I-006420
*/

Private macro BranchName(id)
var cmd = rsdcommand ("select dep.t_name from ddp_dep_dbt dep where dep.t_code = ?");
cmd.addparam("id", RSDBP_IN, id);
cmd.execute;
var rsd = rsdrecordset(cmd);
if (rsd.movenext())
  return rsd.value(0);
else
  return "";
end;
end;

Private macro BranchAcc(account)
var cmd = rsdcommand ("select dep.t_name from daccount_dbt acc, ddp_dep_dbt dep where acc.t_account = ? and dep.t_code = acc.t_branch");
cmd.addparam("acc", RSDBP_IN, account);
cmd.execute;
var rsd = rsdrecordset(cmd);
if (rsd.movenext())
  return rsd.value(0);
else
  return "";
end;
end;

Private macro BranchID(account)
var cmd = rsdcommand ("select acc.t_branch from daccount_dbt acc where acc.t_account = ? ");
cmd.addparam("acc", RSDBP_IN, account);
cmd.execute;
var rsd = rsdrecordset(cmd);
if (rsd.movenext())
  return rsd.value(0);
else
  return "";
end;
end;

Private macro operacc(account)
var cmd = rsdcommand ("select acc.t_oper from daccount_dbt acc where acc.t_account = ? ");
cmd.addparam("acc", RSDBP_IN, account);
cmd.execute;
var rsd = rsdrecordset(cmd);
if (rsd.movenext())
  return rsd.value(0);
else
  return "";
end;
end;

Private macro FIOacc(account)
var cmd = rsdcommand ("select pers.t_name from daccount_dbt acc, dperson_dbt pers where acc.t_account = ? and acc.t_oper = pers.t_oper");
cmd.addparam("acc", RSDBP_IN, account);
cmd.execute;
var rsd = rsdrecordset(cmd);
if (rsd.movenext())
  return rsd.value(0);
else
  return "";
end;
end;
/*
-------------------------------------------------------------------------------
напечатать заголовок таблицы для операциониста
-------------------------------------------------------------------------------
*/

macro PrintOperTableHead( OperNumber, OperName, FormType )
[
 Операционист ##### #########################
]( OperNumber, OperName );

   if( FormType == 0 )

[
 +----------+----------+-------+----------+--------------+-----+-----+-------------------------+-------------------------+------------------------------------+---------------------------+--------------------------------+
 |   Срок   |   Дата   |   N   |   Дата   |              |     |     |          ФИО            |      Плательщик         |            Получатель              |                           |                                |
 |  платежа | помещения|  док  | документа|    Сумма     | Фил.| Опер|                         |         счет            |------------------------------------|    Название получателя    |       Назначение платежа       |
 |          |          |       |          |              |     |     |                         |                         |   БИК    |          Счет           |                           |                                |
 +----------+----------+-------+----------+--------------+-----+-----+-------------------------+-------------------------+----------+-------------------------+---------------------------+--------------------------------+
];

   else

[
 +----------+----------+-------+----------+--------------+-----+-----+-------------------------+-------------------------+------------------------------------+
 |   Срок   |   Дата   |   N   |   Дата   |              |     |     |          ФИО            |      Плательщик         |            Получатель              |
 |  платежа | помещения|  док  | документа|    Сумма     | Фил.| Опер|                         |         счет            |------------------------------------|
 |          |          |       |          |              |     |     |                         |                         |   БИК    |          Счет           |
 +----------+----------+-------+----------+--------------+-----+-----+-------------------------+-------------------------+----------+-------------------------+
];

   end;
end;

/*
-------------------------------------------------------------------------------
напечатать один документ
-------------------------------------------------------------------------------
*/

macro PrintDocument( PayDate, InDate, DocNumber, DocDate, Amount, PayerAcc, BIK, ReceiverAcc, ReceiverName, Ground, FormType )

   array StringArray1;
   var i = 1;

   if( FormType == 0 )

   StrSplit(Ground, StringArray1, 32);

[|########## ########## ####### ########## ############## ##### ##### ######################### ######################### ########## ######################### ########################### ################################|
]( PayDate, InDate, DocNumber:r, DocDate, Amount, BranchAcc(PayerAcc):r, OPERAcc(PayerAcc):r, FIOAcc(PayerAcc):r, PayerAcc:c:f, BIK:c, ReceiverAcc:c:f, ReceiverName, StringArray1(0):l  );

if (branchSum(BranchID(PayerAcc)))
branchSum(BranchID(PayerAcc)) = branchSum(BranchID(PayerAcc))+amount;
brabchCnt(BranchID(PayerAcc)) = brabchCnt(BranchID(PayerAcc))+1;
else
branchSum(BranchID(PayerAcc)) = amount;
brabchCnt(BranchID(PayerAcc)) = 1;
end;

   while(StrLen(StringArray1(i) ) > 0)
[|                                                                                                                                                                                         ################################|
]( StringArray1(i):l );
   i = i + 1;
   end;

   else

[|########## ########## ####### ########## ############## ##### ##### ######################### ######################### ########## #########################|
]( PayDate, InDate, DocNumber:r, DocDate, Amount, BranchAcc(PayerAcc):r, OPERAcc(PayerAcc):r, FIOAcc(PayerAcc):r, PayerAcc:c:f, BIK:c, ReceiverAcc:c:f );

if (branchSum(BranchID(PayerAcc)))
branchSum(BranchID(PayerAcc)) = branchSum(BranchID(PayerAcc))+amount;
brabchCnt(BranchID(PayerAcc)) = brabchCnt(BranchID(PayerAcc))+1;
else
branchSum(BranchID(PayerAcc)) = amount;
brabchCnt(BranchID(PayerAcc)) = 1;
end;

   end;
end;

/*
-------------------------------------------------------------------------------
напечатать подвал таблицы для операциониста
-------------------------------------------------------------------------------
*/

macro PrintOperTableTail( Oper, DocsCount, AllAmount, FormType )

   if( FormType == 0 )

[+----------+----------+-------+----------+--------------+-----+-----+-------------------------+-------------------------+----------+-------------------------+---------------------------+--------------------------------+];

   else

[+----------+----------+-------+----------+--------------+-----+-----+-------------------------+-------------------------+------------------------------------+];

   end;

[
 Итого по операционисту ##### док-ов ##### на сумму ##############
]( Oper, DocsCount:5:0, AllAmount:l );

end;

/*
-------------------------------------------------------------------------------
напечатать итого по филиалу
-------------------------------------------------------------------------------
*/

macro PrintDepartmentTotal( Code, DocsCount, AllAmount, isFindDep )

   if( isFindDep )

[
 Итого по филиалу #### док-ов ###### на сумму ##############
]( Code, DocsCount:5:0, AllAmount:l );

   else

[
 Итого по всем операц-м док-ов ###### на сумму ##############
]( DocsCount:5:0, AllAmount:l );

   end;
   
var cnt = 0;
while (cnt<asize(branchSum))
if (branchsum(cnt))
[
Итого по подразделениям #### док-ов ##### на сумму ##############]
(branchname(cnt), brabchcnt(cnt), branchsum(cnt));
end;
cnt = cnt+1;
end;

end;


/*
-------------------------------------------------------------------------------
напечатать итого по счету
-------------------------------------------------------------------------------
*/

macro PrintAccountTotal( DocsCount, AllAmount, Account )
[
 Итого по счету ####################### док-ов ###### на сумму ##############
]( Account:c:f, DocsCount:5:0, AllAmount:l );
end;

/*
-------------------------------------------------------------------------------
напечатать итого по сроку
-------------------------------------------------------------------------------
*/

macro PrintPeriodTotal( DocsCount, AllAmount, Date1, Date2 )

   if( Date1 == Date2 )

[
 Итого по сроку ########## док-ов ###### на сумму ##############
]( Date1, DocsCount:5:0, AllAmount:l );

   else

[
 Итого по сроку с ########## по ########## док-ов ###### на сумму ##############
]( Date1, Date2, DocsCount:5:0, AllAmount:l );

   end;

end;

/*===========================================================================*/
/*                                                                           */
/*                           Макросы для Oracle                              */
/*                                                                           */
/*===========================================================================*/

/*
-------------------------------------------------------------------------------
вернуть скрипт инициализации ( + инициализация для макроса )
-------------------------------------------------------------------------------
*/

macro InitScript( uniq )
   return "CREATE TABLE K1DOCS_TMP" + uniq + "( T_INDATE           DATE           , " +
                                             "  T_PAYDATE          DATE           , " +
                                             "  T_NUMBER           VARCHAR2 (20)  , " +
                                             "  T_DOCDATE          DATE           , " + 
                                             "  T_SUM              NUMBER   (19,4), " +
                                             "  T_PAYERACCOUNT     VARCHAR2 (40)  , " +
                                             "  T_RECEIVERBANKCODE VARCHAR2 (40)  , " + 
                                             "  T_RECEIVERACCOUNT  VARCHAR2 (40)  , " + 
                                             "  T_RECEIVERNAME     VARCHAR2 (40)  , " + 
                                             "  T_GROUND           VARCHAR2 (400) , " + 
                                             "  T_NUMDPRT          NUMBER   (5)   , " + 
                                             "  T_OPER             NUMBER   (5) )   ";
end;

/*
-------------------------------------------------------------------------------
вернуть скрипт деинициализации ( + деинициализация для макроса )
-------------------------------------------------------------------------------
*/

macro DeinitScript( uniq )
   return "DROP TABLE K1DOCS_TMP" + uniq + " CASCADE CONSTRAINTS";
end;


/*
-------------------------------------------------------------------------------
вернуть количество индесков
-------------------------------------------------------------------------------
*/

macro NumOfIndexes()
   return 1;
end;

/*
-------------------------------------------------------------------------------
вернуть индекс по номеру
-------------------------------------------------------------------------------
*/

macro IndexScript( uniq, number )
   return "CREATE INDEX K1DOCS_IDX0" + uniq + " ON K1DOCS_TMP" + uniq + " ( T_NUMDPRT, T_OPER, T_PAYDATE, T_PAYERACCOUNT )";
end;

/*
-------------------------------------------------------------------------------
вернуть скрипт вычещения 
-------------------------------------------------------------------------------
*/

macro ClearScript( uniq )
   return "delete from K1DOCS_TMP" + uniq;
end;

/*
-------------------------------------------------------------------------------
вернуть скрипт заполнения временной таблицы
-------------------------------------------------------------------------------
*/

macro FillScript( uniq )

   return "insert into K1DOCS_TMP" + uniq + " " +
          "select poh.t_Date, dem.t_AcceptDate, rm.t_Number, rm.t_Date, pm.t_Amount, pm.t_PayerAccount, prop.t_BankCode, pm.t_ReceiverAccount, rm.t_ReceiverName, rm.t_Ground, pm.t_Department, ord.t_Oper " +
          "from   dpspohist_dbt poh, dpspaydem_dbt dem, dpspayord_dbt ord, dpmpaym_dbt pm, dpmprop_dbt prop, dpmrmprop_dbt rm" +
          "where  poh.t_StatusIDTo  = 3                   and " +
          "       poh.t_OrderID     = dem.t_OrderID       and " +
          "       dem.t_OrderID     = ord.t_OrderID       and " +
          "       ord.t_OrderID     = pm.t_DocumentID     and pm.T_DOCKIND = 201 and pm.T_PURPOSE = 7 and pm.T_SUBPURPOSE = 0 and " +
          "       pm.t_PaymentID    = prop.T_PAYMENTID(+) and " +
          "       pm.t_PaymentID    = rm.t_PaymentID ";

end;

/*
-------------------------------------------------------------------------------
функция обработчик - формирует условие
-------------------------------------------------------------------------------
*/

macro WorkCondition( uniq, condition_name, val1, val2 )

   if  ( condition_name == "Date" ) 

      return "poh.t_Date <= " + val1 + " and ( poh.t_DateChange >= " + val1 + " or poh.t_DateChange = to_date( '01.01.0001','dd.mm.yyyy') )";

   elif( condition_name == "Oper" )

      return "ord.t_Oper = " + val1;

   elif( condition_name == "Department"   )

      return "pm.t_Department = " + val1;

   elif( condition_name == "PayerAccount" )

      return "pm.t_PayerAccount = " + val1;

   elif( condition_name == "ReceiverAccount" )

      return "pm.t_RecaiverAccount = " + val1;

   elif( condition_name == "PayDate" )

      return "dem.t_AcceptDate >= " + val1 + " and dem.t_AcceptDate <= " + val2;

   elif( condition_name == "BankCode" )

      if( StrLen( val1 ) == 0 )
         return "prop.t_BankCode is NULL";
      else
         return "prop.t_BankCode = " + val1;
      end;

   end;

end;

/*
-------------------------------------------------------------------------------
функция печати таблицы отчета
-------------------------------------------------------------------------------
*/

macro PrintReportTable( uniq, DepartsRS, OpersRS, FormType, exist_DPR, exist_OPER  )

   var Query, rs, BankCode;

   var rsdel, rsd;

   Query = "select trunc(T_PAYDATE) as T_PAYDATE, trunc(T_INDATE) as T_INDATE, T_NUMBER, trunc(T_DOCDATE) as T_DOCDATE, T_SUM, T_PAYERACCOUNT, T_RECEIVERBANKCODE, T_RECEIVERACCOUNT, T_RECEIVERNAME, T_GROUND, T_NUMDPRT " +
           "from K1DOCS_TMP" + uniq + " where ";

   if( DepartsRS.value("t_Name") != "Undefined" )
      Query = Query + " T_NUMDPRT = " + DepartsRS.value("t_Code") + " and ";
   end;

   Query = Query + " T_OPER = " + OpersRS.value("t_Oper") + " ";
   Query = Query + "order by T_NUMDPRT, T_OPER, T_PAYDATE, T_PAYERACCOUNT";

   rs = RsdRecordset( Query );

   while( rs.moveNext() )

      if( not exist_DPR )
         PrintDepartment( DepartsRS.value("t_Name"), DepartsRS.value("t_Comment") ); 
         exist_DPR = true; SetParm( 5, true );      
       end;

      if( not exist_OPER )
         PrintOperTableHead( OpersRS.value("t_Oper"), OpersRS.value("t_Name"), FormType ); 
         exist_OPER = true; SetParm( 6, true );
      end;

      BankCode = rs.value("T_RECEIVERBANKCODE");
      if( BankCode == "Undefined" ) BankCode = "" end; 

      PrintDocument( rs.value("T_PAYDATE"         ), 
                     rs.value("T_INDATE"          ), 
                     rs.value("T_NUMBER"          ), 
                     rs.value("T_DOCDATE"         ), 
                     rs.value("T_SUM"             ), 
                     rs.value("T_PAYERACCOUNT"    ), 
                     BankCode, 
                     rs.value("T_RECEIVERACCOUNT" ), 
                     rs.value("T_RECEIVERNAME"    ), 
                     rs.value("T_GROUND"          ), 
                     FormType );
   end;
end;

/*
-------------------------------------------------------------------------------
функция обработчик печати отчета
-------------------------------------------------------------------------------
*/

macro PrintReport( DSN, userid, password, uniq, Date, isAccTotal, Account, isPeriodTotal, fromDate, toDate, FormType )

   var DepartsQuery, OpersQuery, DepartsRS, OpersRS, stat, exist_OPER, exist_DPR, AccTotalRs, PeriodTotalRS;
   PrintHeader( Date );
debugbreak;

   
   DepartsQuery = "select NVL(dp.t_Code,0) as t_Code, NVL(dp.t_Name,'') as t_Name, NVL(dp.t_Comment,'') as t_Comment, docs.t_total, docs.t_num " +
                  "from ddp_dep_dbt dp, (select t_NumDprt, Sum( t_Sum ) as t_total, count( t_NumDprt ) as t_num from K1DOCS_TMP" + uniq + " group by t_NumDprt) docs " +
                  "where docs.t_NumDprt = dp.t_Code(+) ";
   
   OpersQuery   = "select docs.t_Oper, p.t_Name, docs.t_total, docs.t_num " +
                  "from dperson_dbt p, (select t_Oper, Sum( t_Sum ) as t_total, count( t_Oper ) as t_num from K1DOCS_TMP" + uniq + " group by  t_Oper ) docs " +
                  "where docs.t_Oper = p.t_oper ";

   DepartsRS = RsdRecordset( DepartsQuery );
   OpersRS   = RsdRecordset( OpersQuery );

   while( DepartsRS.moveNext() )

      exist_DPR = false;

      stat = OpersRS.moveFirst();
      while( stat )

         exist_OPER = false;
         PrintReportTable( uniq, DepartsRS, OpersRS, FormType, exist_DPR, exist_OPER );

         if( exist_OPER ) 
            PrintOperTableTail( OpersRS.value("t_Oper"), OpersRS.value("t_num" ), OpersRS.value("t_total"), FormType );
         end;
         stat = OpersRS.moveNext();
      end;

      if( exist_DPR )
         PrintDepartmentTotal( DepartsRS.value("t_Name"), DepartsRS.value("t_num"), DepartsRS.value("t_total"), DepartsRS.value("t_Name") != "Undefined" );
      end;

   end;

   if( isAccTotal )
      AccTotalRS  = RsdRecordset( "select Sum( t_Sum ) as t_total, count( t_PayerAccount ) as t_num from K1DOCS_TMP" + uniq + " group by t_PayerAccount" );

      if( AccTotalRS.moveNext() )
         PrintAccountTotal( AccTotalRS.value("t_num"), AccTotalRS.value("t_total"), Account );
      end;
   end;

   if( isPeriodTotal )
      PeriodTotalRS  = RsdRecordset( "select Sum( t_Sum ) as t_total, count(*) as t_num from K1DOCS_TMP" + uniq + " " );

      if( PeriodTotalRS.moveNext() ) 
         PrintPeriodTotal( PeriodTotalRS.value("t_num"), PeriodTotalRS.value("t_total"), fromDate, toDate );
      end;
   end;

onerror( e ) 
   println( e.message );

end;

