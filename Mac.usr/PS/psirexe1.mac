//-----------------------------------------------------------------------------
// Блок     : "Исполнение ИПВС"
// Шаг      : "Продажа валюты"
// Описание : Макрос шага
//-----------------------------------------------------------------------------

import PaymInter, FIInter, OprInter, PSInter, ir_categ, pm_common, InsCarryDoc, pm_setst;
import oralib; //Jushmanov 2014-02-24 C-19151

var PaymentObj:RsbPayment;

//-----------------------------------------------------------------------------
// Создать заявку на продажу валюты
//-----------------------------------------------------------------------------
PRIVATE MACRO CreateBcOrder( RequestOrder:object, Amount ):integer

    var BcOrder:object       = GenObject( "RsbBuyCurrencyOrder", 0 );
    var FD:IR_FirstDoc       = IR_FirstDoc( PaymentObj.DocumentID );
    var Payment:RsbPayment   = BcOrder.Payment;
    var SkipArest, Status;

    BcOrder.BCOrdKind        = PSBCKIND_PAY;
    BcOrder.ConvOper         = KINDOPCONV_PAY;
    BcOrder.Oper             = {oper};
    BcOrder.State            = PSBCORD_ST_DEFERRED;
    BcOrder.BankFunds        = true;
    BcOrder.Origin           = PSBCORD_OR_INRQ;

    Payment.Number           = RequestOrder.PSBCNumber;
    Payment.ClientDate       = 
    Payment.Date             = RequestOrder.PSBCDate;
    Payment.ValueDate        = {curdate};
                 
    Payment.DocKind          = PS_BUYCURORDER;
    Payment.Purpose          = PM_PURP_PSBCCONV;

    Payment.PayerFIID        = PaymentObj.PayerFIID;
    Payment.ReceiverFIID     = PaymentObj.ReceiverFIID;

    Payment.BaseAmount       = Amount;
    Payment.PayerAmount      = Amount;

    Payment.SetPayerPI( PAYMENTS_GROUP_UNDEF, 
                        PaymentObj.PayerBankID, 
                        PaymentObj.PayerBankCodeKind, 
                        PaymentObj.PayerBankCode, 
                        PaymentObj.PayerBankName,
                        PaymentObj.PayerBankCorrAcc,
                        PaymentObj.PayerFIID, 
                        1/*CHAPT1*/, 
                        PaymentObj.PayerAccount, 
                        PaymentObj.Payer, 
                        PaymentObj.PayerName, 
                        PaymentObj.PayerINN );

    Payment.SetReceiverPI( PAYMENTS_GROUP_UNDEF, 
                           PaymentObj.PayerBankID, 
                           PaymentObj.PayerBankCodeKind, 
                           PaymentObj.PayerBankCode, 
                           PaymentObj.PayerBankName,
                           PaymentObj.PayerBankCorrAcc,
                           PaymentObj.ReceiverFIID, 
                           1/*CHAPT1*/, 
                           FD.FindAndOpenAccount( "+СчетКонвКл", 0, {curdate}, FIROLE_FIREQ ), 
                           PaymentObj.Payer, 
                           PaymentObj.PayerName, 
                           PaymentObj.PayerINN );

    Payment.BaseFIID = PaymentObj.PayerFIID;
    Payment.IsFixPayerAmount = "X";

    Payment.FactRate.Actuate; // актуализация курса
    Payment.ReceiverAmount   = Payment.FactRate.Convert( Payment.PayerAmount );

    Payment.Ground = "{VO01010}  Продажа валюты по поручению № " + RequestOrder.PSBCNumber + " от " + RequestOrder.PSBCDate + 
                     " для оплаты инкассового поручения № " + PaymentObj.Number + " от " + PaymentObj.Date + " на сумму " + Amount;

    // Установить признак автозапуска операции.
    BcOrder.LaunchOper       = true;

    Payment.MCMethodID       = PaymentObj.MCMethodID;
    Payment.MinimizationTurn = PaymentObj.MinimizationTurn;

    if( PM_GetOprStatus( Payment.DocKind, Payment.DocumentID, OPR_PAYM_PERMISSION, @Status ) and
        (Status == OPR_PAYM_ST_PERMISSION_YES)
      )
        SkipArest = true;
    else
        SkipArest = false;
    end;

    if( CheckRestAndMakeReserve(Payment, false, false, false, true, NULL, SkipArest) )
        return 1;
    end;

    return 0;
END;


//------------------------------------------------------------------------------
// Макрос шага
//------------------------------------------------------------------------------
MACRO ExecuteStep( doc, paymDoc )

    var RequestOrder:object = GenObject( "RsbRequestOrder", PaymentObj.DocumentID );
    var stat:integer = 0;
    var Sсв;
    var Sопл = 0, Spyb = 0, Sye = 0, Sppk = 0;
    var SkipArest;

    if( GetOprStatus(OPR_PAYM_PERMISSION) == OPR_PAYM_ST_PERMISSION_YES )
        SkipArest = true;
    else
        SkipArest = false;
    end;

    PaymentObj.CheckRest( PaymentObj.PayerAccount, 1/*CHAPT1*/, PaymentObj.PayerFIID, PaymentObj.PayerAmount, {curdate},
                          false, false, false, false, SkipArest, @Sсв );

    if(IsArestDebetAcc(PaymentObj.PayerAccount, PaymentObj.PayerFIID))
        msgbox("На счет наложено ограничение операций");
        return 1;
    end;

    if( RequestOrder.State == PSINRQ_ST_I2 )

        if( ConvSum(Spyb, Sсв, {curdate}, PaymentObj.PayerFIID, PaymentObj.ReceiverFIID) )
            msgbox("Ошибка при конвертации валюты");
            return 1;
        end;

        if( PaymentObj.FutureBaseAmount > Spyb )

            Sопл = Spyb;
            Sye  = Sсв;

        else

            Sопл = PaymentObj.FutureBaseAmount;

            if( ConvSum(Sye, Sопл, {curdate}, PaymentObj.ReceiverFIID, PaymentObj.PayerFIID) )
                msgbox("Ошибка при конвертации валюты");
                return 1;
            end;

            if( ConvSum(Spyb, Sye, {curdate}, PaymentObj.PayerFIID, PaymentObj.ReceiverFIID) )
                msgbox("Ошибка при конвертации валюты");
                return 1;
            end;

            if( Spyb < Sопл )
                Sye = Sye + 0.01;
            end;

        end;

    else

        // Удалим претензию, созданную в перобработке
        PaymentObj.FreeReserve( PaymentObj.PayerAccount, PaymentObj.Chapter, PaymentObj.PayerFIID );
        Sопл = PaymentObj.FutureBaseAmount;

        if( ConvSum(Sye, Sопл, {curdate}, PaymentObj.ReceiverFIID, PaymentObj.PayerFIID) )
            msgbox("Ошибка при конвертации валюты");
            return 1;
        end;

        if( ConvSum(Spyb, Sye, {curdate}, PaymentObj.PayerFIID, PaymentObj.ReceiverFIID) )
            msgbox("Ошибка при конвертации валюты");
            return 1;
        end;

        if( Spyb < Sопл )
            Sye = Sye + 0.01;
        end;

    end;

    Sppk = Sye;

    // Создать заявку на продажу валюты
    CreateBcOrder( RequestOrder, Sppk );

    return stat;
END;


//Jushmanov 2014-02-24 C-19151
macro PostStepAction( message,      /* 1 - выполнение шага; 2 - откат шага;   */
                      errTrn,       /* статус выполнения шага. 0 - ошибки нет */
                      FirstDoc,     /* указатель на первичный документ        */
                      ID_Oper,      /* внутренний идентификатор операции      */
                      Number_Step,  /* Номер шага операции (из настроек)      */
                      KindOper,     /* номер вида операции                    */
                      KindDoc,      /* номер вида первичного документа        */
                      KindStep,     /* вид шага операции                      */
                      ID_Step )     /* внутренний идентификатор шага операции */
    private var logquery, idStep = ID_Step, idOper = ID_Oper;

    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(idOper) != V_INTEGER) and (valtype(idOper) != V_STRING)) idOper = 0; end;
        if ((valtype(idStep) != V_INTEGER) and (valtype(idStep) != V_STRING)) idStep = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + idOper + " AND t_id_step = " + idStep;
        ExecSQL(logquery, null, false);
    end;

    return 0;
end;