//-----------------------------------------------------------------------------
// Блок     : 29020 - "Картотека 2"
// Шаг      : 30    - "Исполнение оплаты картотеки №2"
// Описание : Макрос шага
// KS 22.11.2013 Перенесены доработки из 30й сборки
// Jushmanov 2014-02-24 C-19151 Логгирование массово выполненных шагов
//-----------------------------------------------------------------------------
import PaymInter, BankInter, Rsd, OprInter;
import cbsttls, pm_setst;
import "fg_Life_parm.mac";
import oralib; //Jushmanov 2014-02-24 C-19151

debugbreak;
private Const fdBank = fg_life_subject({OurBank});
var PaymentObj:RsbPayment;

//А.Киселев 08.03.2011 проверяем документ имеющий связанный СФ
private macro isBackStepForDocWithBilf(Paym_ID) :integer;
    var Query, cmd, DataSet, Ben_ID = 0;

    Query = " SELECT D.T_BOOKENTRYID " +    
            " FROM doproper_dbt A, doprstep_dbt C,  dbilreconcile_dbt D " +
            " WHERE A.T_DOCUMENTID = LPAD(?,34,'0') AND A.T_DOCKIND IN(70,201) " +
            "  AND C.T_ID_OPERATION = A.T_ID_OPERATION " +
            "  AND C.T_ID_STEP = ( SELECT MAX(B.T_ID_STEP) FROM doprstep_dbt B WHERE B.T_ID_OPERATION = A.T_ID_OPERATION ) " +
            "  AND C.T_ISEXECUTE = CHR(88) AND C.T_LASTSTEP = CHR(88) " +
            "  AND D.T_DOCKIND IN(70,201) " +
            "  AND D.T_DOCID = NVL(( SELECT MAX(G.T_PURPOSEPAYMENT) FROM dpmlink_dbt G " +
            "                        WHERE G.T_INITIALPAYMENT = TO_NUMBER(A.T_DOCUMENTID) " +
            "                      ),TO_NUMBER(A.T_DOCUMENTID) " +
            "                     ) ";

    cmd = RSDCommand( Query );
    cmd.AddParam( "Pm_ID", RSDBP_IN, string(Paym_ID) );
    DataSet = RSDRecordSet( cmd );
    if ( DataSet.MoveNext )
        Ben_ID = DataSet.value(0);
    end;

    Query = " SELECT F.T_FACTURAID, F.T_FACTURANUMBER " +    
            " FROM  dbilbookentry_dbt E, dbilfactura_dbt F " +
            " WHERE E.T_BOOKENTRYID = ? " +
            "  AND F.T_FACTURAID = E.T_FACTURAID AND F.T_STATUS <> 3 ";
    cmd = RSDCommand( Query );
    cmd.AddParam( "Ben_ID", RSDBP_IN, Ben_ID );
    DataSet = RSDRecordSet( cmd );
    if ( DataSet.MoveNext )
        MsgBox("Запрет удаления. Существует связанный счет-фактура:" + DataSet.value(1));
        return 1;
    else
        return 0;
    end;

end;
//А.Киселев 08.03.2011 проверяем документ имеющий связанный СФ


MACRO ExecuteStep( doc, payorder )

//    if ( fdBank.is_PRBB )
        //RRS Повторная установка сегментов статуса по заявкам I-00081092-2,R-9399-2
        if( not PaymentObj.FuturePayerAmount )
            /* CDS Оставил дистрибутивное решение, т.к. массовые проблемы в ГЭБе при оплате К2 */
            // Установить статус платежа
            PaymentObj.PaymStatus = PM_FINISHED;
            // Установить статус первички
            PM_SetPrimDocumentState( PaymentObj, DOCUMENT_ST_CLOSED );

            if( УстановитьСтатусыПлатежа( OPR_PAYM_STATE, OPR_PM_ST_CLOSE, OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_NO ) )
                msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                return 1;
            end;
            /*SDA - подчищаем запись в картотеке */
        end;
//    end;  

    return 0;

END;


//Jushmanov 2014-02-24 C-19151
macro PostStepAction( message,      /* 1 - выполнение шага; 2 - откат шага;   */
                      errTrn,       /* статус выполнения шага. 0 - ошибки нет */
                      FirstDoc,     /* указатель на первичный документ        */
                      ID_Oper,      /* внутренний идентификатор операции      */
                      Number_Step,  /* Номер шага операции (из настроек)      */
                      KindOper,     /* номер вида операции                    */
                      KindDoc,      /* номер вида первичного документа        */
                      KindStep,     /* вид шага операции                      */
                      ID_Step )     /* внутренний идентификатор шага операции */
    private var logquery, idStep = ID_Step, idOper = ID_Oper;

    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(idOper) != V_INTEGER) and (valtype(idOper) != V_STRING)) idOper = 0; end;
        if ((valtype(idStep) != V_INTEGER) and (valtype(idStep) != V_STRING)) idStep = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + idOper + " AND t_id_step = " + idStep;
        ExecSQL(logquery, null, false);
    end;

    return 0;
end;


macro CheckStepAction ( mes )
debugbreak;
    if (mes == OP_EXECUTE_STEP)
        if ( fdBank.is_GEB )
            rsdcommand("update dpspayord_dbt p set P.T_CLOSEDATE = to_date('"+{curdate}+"','dd.mm.yyyy') where P.T_ORDERID ="+ PaymentObj.PAYMENTID ).execute; 
            rsdcommand("delete from dpsinprop_dbt where T_PAYMENTID = "+ PaymentObj.PAYMENTID ).execute; 
        end;
    elif ( (mes == OP_BACKOUT_STEP) and (PaymentObj.PaymStatus == 32000) )
        if ( fdBank.is_EXV )
            //А.Киселев 08.03.2011 запрет отката документов имеющих связанные СФ
            if ( isBackStepForDocWithBilf(PaymentObj.PaymentID) )
                return 1;
            end;
            //А.Киселев 08.03.2011 запрет отката документов имеющих связанные СФ
        end;
    end;
    return 0;
End;
