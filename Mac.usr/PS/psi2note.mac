/************************************************************************/
/*         Автоматизированная банковская система RS-Bank 6.0            */
/*                 Copyright (c) R-Style Software Lab 2004              */
/*                                                                      */
/*  Имя файла      : psi2note.mac                                       */
/*                                                                      */
/*  Описание       : Вызов печати извещения о помещении в картотеку 2   */
/*                                                                      */
/*  Программист    : Андреева Е.П.                                      */
/*                                                                      */
/*  Переделан      : 26.03.2004                                         */
/*                                                                      */
/* 20.06.2012 I-00208531 AAN добавил только для ПРББ счётчик извещений  */
/* 24.08.2012 C-13185    AAN в извещение теперь подтягивается ещё и     */
/*                           назначение платежа                         */
// KS 22.11.2013 Перенесены доработки из 30й сборки
/************************************************************************/


import prpm, prreplib, PSInter;
import "fg_Life_parm.mac";          //  20.06.2012 I-00208531 AAN

var Count : integer = 0;         //  20.06.2012 I-00208531 AAN
private const fdBank = fg_life_subject({OurBank});

MACRO Print_I2_Note( ncopy:integer ):bool

  var PayerProps   :TPartyProperties = TPartyProperties("Payer",    pr_pmpaym, pr_debet,  pr_pmrmprop);
  var ReceiverProps:TPartyProperties = TPartyProperties("Receiver", pr_pmpaym, pr_credit, pr_pmrmprop);
  var ReceiverName :string;

  ARRAY SBP, SBR, SR;

  /*Реквизиты плательщика*/
  PayerProps.Account = pr_pmpaym.rec.PayerAccount;
  PayerProps.BankBIC = {MFO_Bank};
    
  if( pr_pmrmprop.rec.ReceiverINN )
    ReceiverName = pr_pmrmprop.rec.ReceiverINN + " " + pr_pmrmprop.rec.ReceiverName;
  else
    ReceiverName = pr_pmrmprop.rec.ReceiverName;
  end;

  StrSplit( PayerProps.BankName,    SBP, 57, 57, 2 );
  StrSplit( ReceiverProps.BankName, SBR, 57, 57, 2 );
  StrSplit( ReceiverName,           SR,  57, 57, 3 );

  while(ncopy != 0)
      [                                                                                        ┌───────┐ ];
      [                                                                                        │0401075│ ];
      [                                                                                        └───────┘ ];
      [ ИЗВЕЩЕНИЕ N ################                  ##########                                         ](pr_pmrmprop.rec.Number:l, replace(string(pr_pmpaym.rec.I2PlaceDate:f), "-", "."):c);
      [ О ПОСТАНОВКЕ В КАРТОТЕКУ                      ──────────                                         ];
      [                                                  Дата                                            ];
      [───────────────────────────────────────────────────────────┬─────┬────────────────────────────────];
      [ ######################################################### │ БИК │ #########                      ](SBP(0):l, PayerProps.BankBIC:l);
      [ ######################################################### │     │                                ](SBP(1):l);
      [ Банк плательщика                                          │     │                                ];
      [───────────────────────────────────────────────────────────┼─────┤                                ];
      [ ######################################################### │ БИК │ #########                      ](SBR(0):l, ReceiverProps.BankBIC:l);
      [ ######################################################### │     │                                ](SBR(1):l);
      [ Банк получателя                                           │     │                                ];
      [───────────────────────────────────────────────────────────┼─────┼────────────────────────────────];
      [ ######################################################### │Сч. N│ #                              ](SR(0):l, ReceiverProps.Account:l);
      [ ######################################################### │     │                                ](SR(1):l);
      [ ######################################################### │     │                                ](SR(2):l);
      [ Получатель                                                │     │                                ];
      [───────────────────────────────────────────────────────────┴─────┼────────────────────────────────];

      if( (pr_pmrmprop.rec.ShifrOper == "02") or (pr_pmrmprop.rec.ShifrOper == "05") )
         [ Платежное требование / инкассовое поручение (нужное подчеркнуть)│         Отметки банка          ];
         [ ────────────────────                                            │                                ];
      else
         [ Платежное требование / инкассовое поручение (нужное подчеркнуть)│         Отметки банка          ];
         [                        ____________________                     │                                ];
      end;
      [                                                                 │                                ];
      [ N, дата   ################    ##########                        │                                ](pr_pmrmprop.rec.Number:r, pr_pmrmprop.rec.Date:f:c);
      [                                                                 │                                ];
      [ на сумму  #                                                     │                                ](pr_pmpaym.rec.Amount:f:l);
      [                                                                 │                                ];
      [ не оплачено из-за отсут. средств на                             │                                ];
      [ сч. N  ###########################                              │                                ](PayerProps.Account:l);
      [                                                                 │                                ];
      if ( fdBank.is_PRBB )   //23.08.2012 C-13185 AAN
        [ ############################################################################################# ] (string(pr_pmrmprop.rec.ground):w);
      end;
      [ ];
      Count = Count +1;
      ncopy = ncopy - 1;
   end;
  return TRUE; 
END;


MACRO PrintDocument(ncopy:integer):bool
  debugbreak;
  var DocKind:integer = pr_pmpaym.rec.DocKind,
      stat:bool;

  if( DocKind == 261 )
      DocKind = PS_PAYORDER;
  end;

  /* Извещение о постановке в картотеку */
  if( DocKind == PS_PAYORDER )
    stat = Print_I2_Note( ncopy );
  else
    MsgBox( "Данный вид документа не поддерживается макросом" );
    stat = FALSE;
  end;
  
  return stat;
END;

/* Отчет "Печать извещений" */
macro PrintNotes_K2_InsertDocs( MapVal :PSRepMap )
  /* Данные панели параметров отчета*/
  var DateIn        :date     = MapVal.Value( "DateIn"       );
  var DateOut       :date     = MapVal.Value( "DateOut"      );
  var DepNum        :integer  = MapVal.Value( "DepNum"       );
  var Oper          :integer  = MapVal.Value( "Oper"         );
  var Account       :string   = MapVal.Value( "Account"      );
  var OutForm       :integer  = MapVal.Value( "iOutForm"     );

  /* Запрос */ 
  var params:TArray  = TArray();
  var select:string = "";

  file r_pmpaym      ("pmpaym.dbt"  ) key 0;
  file r_credit      ("pmprop.dbt"  ) key 0;
  file r_pmrmprop    ("pmrmprop.dbt") key 0;

  select = ВыбратьPaymentID() + FromPMHIST_PMPAYM() + " WHERE ";

  ПлатежБылПомещенВ_К2( @select, params, DateIn, DateOut );

  ДобавитьУсловиеПоСчетуПлательщика    ( @select, params, Account );
  ДобавитьУсловиеПоФилиалуПлатежа      ( @select, params, DepNum  );
  ДобавитьУсловиеПоОперационистуПлатежа( @select, params, Oper    );
  
  if ( fdBank.is_PRBB or fdBank.is_VUZ or fdBank.is_EXV )
      select = select + "AND not (pm.t_numberpack = 1002 and pm.t_origin = 3300)";
      select = select + "AND not (pm.t_numberpack = 1003 and pm.t_origin = 19  )";
  end;    
  
  select = select + " ORDER BY pm.t_I2PlaceDate";

  var rs:RsdRecordset = execSQLselect( select, params, FALSE );
  if( rs )
    rs.Command.NullConversion = true;
    while( ( rs.MoveNext() ) and ( rs.value(0) > 0 ) )

      r_pmpaym.PaymentID   = 
      r_credit.PaymentID   = 
      r_pmrmprop.PaymentID = rs.value(0);

      if( GetEQ( r_pmpaym   ) and 
          GetEQ( r_credit   ) and 
          GetEQ( r_pmrmprop ) )

        Copy( pr_pmpaym,   r_pmpaym   );
        Copy( pr_credit,   r_credit   );
        Copy( pr_pmrmprop, r_pmrmprop );
        ClearRecord( pr_debet );

        Print_I2_Note( 1 );
        
         
      end;
    end;
  end;
  if ( fdBank.is_PRBB )          //  20.06.2012 I-00208531 AAN
     MsgBox("Количество Извещений = " + count);
  end;
  return 0;

END;

macro PrintStepDocs( ID_Oper,    /* внутренний идентификатор операции        */
                     ID_Step,    /* внутренний идентификатор шага операции   */
                     KindDoc,    /* номер вида первичного документа          */
                     KindStep )  /* вид шага операции                        */

  var oproper = TBFile("oproper");
  file r_pmpaym   ("pmpaym.dbt"  ) key 0;
  file r_credit   ("pmprop.dbt"  ) key 0;
  file r_pmrmprop ("pmrmprop.dbt") key 0;


  oproper.rec.ID_Operation = ID_Oper;
  if( not GetEQ(oproper) )
    MsgBox("Не найден экземпляр операции");
    return 0;
  end;

      r_pmpaym.PaymentID   = 
      r_credit.PaymentID   = 
      r_pmrmprop.PaymentID = int(oproper.rec.documentID);

      if( GetEQ( r_pmpaym   ) and 
          GetEQ( r_credit   ) and 
          GetEQ( r_pmrmprop ) )

        Copy( pr_pmpaym,   r_pmpaym   );
        Copy( pr_credit,   r_credit   );
        Copy( pr_pmrmprop, r_pmrmprop );
        ClearRecord( pr_debet );

        Print_I2_Note( 1 );
         
      end;
  return 0;
end;
