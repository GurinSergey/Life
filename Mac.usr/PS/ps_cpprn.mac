/************************************************************************/
/*         Автоматизированная банковская система RS-Bank  v6.0          */
/*                 Copyright (c) R-Style Software Lab 2002              */
/*                                                                      */
/*  Имя файла      : ps_cpprn.mac                                       */
/*                                                                      */
/*  Описание       : Печать валютного платежного поручения              */
/*                                                                      */
/*  Программист    : Андреева Е.П.                                      */
/*                                                                      */
/*  Создан         : 09.04.04                                           */
/*                                                                      */
/************************************************************************/
import prpm;

PRIVATE const SplitStrLen = 65;

PRIVATE MACRO GetPartyShortName( PartyID )

  file Субъекты( party ) key 0;

  if( ПолучитьСубъекта(PartyID, Субъекты ) == 0 )
    return Субъекты.ShortName;
  end;

  return " ";

END;

macro PrintCPOrder( ncopy:integer )

  var Currency, StringSum;
  var SwiftCorrCodeKind :string = " ",
           CorrCodeKind :string = " ",
      SwiftCredCodeKind :string = " ",
           CredCodeKind :string = " ",
      BEN               :string = " ",
      SHA               :string = " ",
      OUR               :string = " ";

  ARRAY PayerName, ReceiverName, InstructionCode, ReceiverCorrBankName, ReceiverBankName, Ground, AdditionalInfo;
  
  Currency = ПолучитьКодФинИН(pr_pmpaym.rec.OrderFIID);

  strsplit( SubStr(pr_pmrmprop.rec.PayerName,            1, SplitStrLen*3), PayerName,            SplitStrLen, SplitStrLen, 3 );
  strsplit( SubStr(pr_pmrmprop.rec.ReceiverName,         1, SplitStrLen*3), ReceiverName,         SplitStrLen, SplitStrLen, 3 );
  strsplit( SubStr(pr_pmrmprop.rec.ReceiverCorrBankName, 1, SplitStrLen*3), ReceiverCorrBankName, SplitStrLen, SplitStrLen, 3 );
  strsplit( SubStr(pr_pmrmprop.rec.ReceiverBankName,     1, SplitStrLen*3), ReceiverBankName,     SplitStrLen, SplitStrLen, 3 );

  strsplit( SubStr(pr_pmrmprop.rec.InstructionCode,      1, SplitStrLen*4), InstructionCode,      SplitStrLen, SplitStrLen, 4 );
  strsplit( SubStr(pr_pmrmprop.rec.Ground,               1, SplitStrLen*4), Ground,               SplitStrLen, SplitStrLen, 4 );
  strsplit( SubStr(pr_pmrmprop.rec.AdditionalInfo,       1, SplitStrLen*5), AdditionalInfo,       SplitStrLen, SplitStrLen, 5 );

  if( pr_pmpaym.rec.OrderFIID != 0 )
    StringSum = CurToStrAlt(pr_pmpaym.rec.OrderAmount, NULL, NULL, GetISOCode(pr_pmpaym.rec.OrderFIID));
  else
    StringSum = RubToStrAlt(pr_pmpaym.rec.OrderAmount, NULL, NULL);
  end;

  if( pr_credit.rec.CorrCodeKind == 6 )
    SwiftCorrCodeKind = CP_GetNameCodeKind(pr_credit.rec.CorrCodeKind);
    /* EVG 17/04/2011 Непронятно, зачем печатать название вида кода,
       но не печатать сам код.*/
    SwiftCorrCodeKind = SwiftCorrCodeKind + " " + pr_credit.rec.CorrCode;
  end;
  if( (pr_credit.rec.CorrCodeKind == 10) or
      (pr_credit.rec.CorrCodeKind == 11) or
      (pr_credit.rec.CorrCodeKind == 12) )
    CorrCodeKind = CP_GetNameCodeKind(pr_credit.rec.CorrCodeKind);
  end;

  if( pr_credit.rec.CodeKind == 6 )
    SwiftCredCodeKind = CP_GetNameCodeKind(pr_credit.rec.CodeKind);
    /* EVG 17/04/2011 Непронятно, зачем печатать название вида кода,
       но не печатать сам код.*/
    SwiftCredCodeKind = SwiftCredCodeKind + " " + pr_credit.rec.BankCode;
  end;
  if( (pr_credit.rec.CorrCodeKind == 10) or
      (pr_credit.rec.CorrCodeKind == 11) or
      (pr_credit.rec.CorrCodeKind == 12) )
    CredCodeKind = CP_GetNameCodeKind(pr_credit.rec.CodeKind);
  end;

  if( pr_pmrmprop.rec.ComissCharges == PM_CHRG_OUR )
    OUR = "X";
  elif( pr_pmrmprop.rec.ComissCharges == PM_CHRG_BEN )
    BEN = "X";
  else
    SHA = "X";
  end;
  while( ncopy != 0 )
  [
    ###########################################################(########################################)

                            ПЛАТЕЖНОЕ ПОРУЧЕНИЕ № ##########   от ########## г.
   ╒════╤════════════════════════════╤═══════════════════════════════════════════════════════════════════╕
   │33B │ СУММА И ВАЛЮТА             │ ################################################################# │
   │    │                            │ ################################################################# │
   │    │                            ├───────────────────────────────────────────────────────────────────┤
   │    │                            │ ISO-код: ######################################################## │
   ├────┼────────────────────────────┼───────────────────────────────────────────────────────────────────┤
   │23E │ КОД ИНСТРУКЦИИ             │ ################################################################# │
   │    │                            │ ################################################################# │
   │    │                            │ ################################################################# │
   │    │                            │ ################################################################# │
   ├────┼────────────────────────────┼───────────────────────────────────────────────────────────────────┤
   │50  │ КЛИЕНТ-ПЛАТЕЛЬЩИК          │ счет № ########################################                   │
   │    │                наименование│ ################################################################# │
   │    │                            │ ################################################################# │
   │    │                            │ ################################################################# │
   │    │                         ИНН│ ####################                                              │
   │    │               город, страна│ ################################################################# │
   ├────┼────────────────────────────┼───────────────────────────────────────────────────────────────────┤
   │56  │ БАНК-ПОСРЕДНИК             │ SWIFT-код: ############################## Код: ################## │
   │    │                наименование│ ################################################################# │
   │    │                            │ ################################################################# │
   │    │                            │ ################################################################# │
   │    │               город, страна│ ################################################################# │
   ├────┼────────────────────────────┼───────────────────────────────────────────────────────────────────┤
   │57  │ БАНК БЕНЕФИЦИАРА           │ SWIFT-код: ############################## Код: ################## │
   │    │                  кор.счет №│ ################################################################# │
   │    │                наименование│ ################################################################# │
   │    │                            │ ################################################################# │
   │    │                            │ ################################################################# │
   │    │               город, страна│ ################################################################# │
   ├────┼────────────────────────────┼───────────────────────────────────────────────────────────────────┤
   │59  │ БЕНЕФИЦИАР                 │ счет № ########################################################## │
   │    │                наименование│ ################################################################# │
   │    │                            │ ################################################################# │
   │    │                            │ ################################################################# │
   │    │                         ИНН│ ################################################################# │
   │    │               город, страна│ ################################################################# │
   ├────┼────────────────────────────┼───────────────────────────────────────────────────────────────────┤
   │70  │ НАЗНАЧЕНИЕ ПЛАТЕЖА         │ ################################################################# │
   │    │                            │ ################################################################# │
   │    │                            │ ################################################################# │
   │    │                            │ ################################################################# │
   ├────┼────────────────────────────┼───────────────────────────────────────────────────────────────────┤
   │71A │ КОМИССИИ И РАСХОДЫ         │ # OUR - все комиссии и расходы отнести на                         │
   │    │ (отметить один из возможных│         наш счет № ####################                           │
   │    │  вариантов)                │ # BEN - все комиссии и расходы отнести на счет бенефициара        │
   │    │                            │ # SHA - комиссии и расходы #################### отнести на наш    │
   │    │                            │     счет № ####################, комиссии и расходы других банков │
   │    │                            │     за счет бенефициара                                           │
   ├────┼────────────────────────────┼───────────────────────────────────────────────────────────────────┤
   │72  │ ДОПОЛНИТЕЛЬНАЯ             │ ################################################################# │
   │    │ ИНФОРМАЦИЯ                 │ ################################################################# │
   │    │                            │ ################################################################# │
   │    │                            │ ################################################################# │
   │    │                            │ ################################################################# │
   ╞════╧════════════════════════════╧═══════════════════════════════════════════════════════════════════╡
   │ Срочный #                       код вида валютной операции - ###################################### │
   ╘═════════════════════════════════════════════════════════════════════════════════════════════════════╛
       Банк не несет ответственности за сроки прохождения платежа и при не поступлении средств по 
       назначению в результате неверного заполнения полей данного бланка перевода, указания 
       ошибочной, неразборчивой или неоднозначно толкуемой информации, а также из-за заполнения 
       бланка на русском языке.


         РУКОВОДИТЕЛЬ ОРГАНИЗАЦИИ _____________________________/######################################/ 
    М.П.                                                                                                
         ГЛАВНЫЙ БУХГАЛТЕР        _____________________________/######################################/                                         

  
  ]
   (" ", " ",
    pr_pmrmprop.rec.Number, string(pr_pmrmprop.rec.Date), /* Номер и дата */
    pr_pmpaym.rec.OrderAmount:l, /* Сумма */
    StringSum:w,                  /* Сумма прописью */
    Currency:l,                 /* Валюта */
    InstructionCode(0),        /* Код инструкции */
    InstructionCode(1),
    InstructionCode(2),
    InstructionCode(3),
    pr_pmpaym.rec.PayerAccount:l,                         /* Счет плательщика */
    PayerName(0):l,                                         /* Название плательщика */
    PayerName(1):l,
    PayerName(2):l,
    pr_pmrmprop.rec.PayerINN:l,                           /* ИНН плательщика */
    CP_GetAdressByParty(pr_pmpaym.rec.Payer),  /* Наименование населенного пункта, в котором находится приказодатель */
    SwiftCorrCodeKind,
    CorrCodeKind,
    ReceiverCorrBankName(0),
    ReceiverCorrBankName(1),
    ReceiverCorrBankName(2),
    CP_GetAdressByCode(pr_credit.rec.CorrCodeKind, pr_credit.rec.CorrCode),
    SwiftCredCodeKind,
    CredCodeKind,
    pr_pmrmprop.rec.ReceiverCorrAccNostro,
    ReceiverBankName(0),
    ReceiverBankName(1),
    ReceiverBankName(2),                                  
    CP_GetAdressByCode(pr_credit.rec.CodeKind, pr_credit.rec.BankCode),
    pr_pmpaym.rec.ReceiverAccount:l,
    ReceiverName(0):l,
    ReceiverName(1):l,
    ReceiverName(2):l,
    pr_pmrmprop.rec.ReceiverINN:l,
    CP_GetAdressByParty(pr_pmpaym.rec.Receiver),
    Ground(0),
    Ground(1),
    Ground(2),
    Ground(3),
    OUR,
    pr_pmpaym.rec.ComissAccount:l,
    BEN,
    SHA,
    GetPartyShortName({OurBank}),
    IfThenElse(SHA == "X", pr_pmpaym.rec.ComissAccount, " " ),
    AdditionalInfo(0),
    AdditionalInfo(1),
    AdditionalInfo(2),
    AdditionalInfo(3),
    AdditionalInfo(4),
    IfThenElse(pr_pmrmprop.rec.Instancy != 0, "X", " "),
    CP_GetKindCodeCurrOper(pr_pmpaym.rec.PaymentID),
    CP_GetPersonName(pr_pmpaym.rec.Payer, true),
    CP_GetPersonName(pr_pmpaym.rec.Payer, false)
    );
    ncopy = ncopy - 1;
  end;
end;

macro PrintDocument( ncopy:integer ):bool
  debugbreak;
  var DocKind:integer = pr_pmpaym.rec.DocKind;
  
  if( DocKind != PS_CPORDER )
    MsgBox("Данный вид документа не поддерживается макросом");
    return FALSE;
  end;

  PrintCPOrder( ncopy );

  return TRUE;
end;
