//-----------------------------------------------------------------------------
// Блок     : 29016 - "Предобработка клиентского платежа"
// Шаг      : 10    - "Системный контроль"
// Описание : Макрос шага
//-----------------------------------------------------------------------------
// KS          28.05.2012 I-00198430 Проставлю 3 недостающих признака
// KS          08.06.2012 I-00198430 Проставлю 3 недостающих признака - доработка
// KS          13.06.2012 I-00198430 И валюта
// Gurin S.    26.06.2012 I-00212909-2
// KS          31.07.2012 C-12598 Для документов картотеки контроль не нужен
// TAM         22.08.2012 I-00240422-2
// Gurin S.N.  19.10.2012 C-14575
// LAO         28.12.2012 При конкурентном доступе к ИК платежам, при одновременном проведение, портится статус 291,
//             нужно что бы было 2
// Gurin S.    09.04.2013 C-18203-6 
// EVG         25/05/2013 Открыл единовременные комиссии для документов с происхождением ПостоянПеречисл (C-19613)
// DEV         11.07.2013 C-21254-6 Убран шаг Контроля для документов с происхождение ПостоянПеречисл
// TAM         15.08.2013 I-00413505 Документы с происхождением ПостоянПеречисл тоже выгружаются во Фронт
// VV          09.09.13   C-22956
// Gurin S.    01.10.2013 C-23747-6 (Добавил отправку писем в Лотус при помещении платежей ИК на согласование)
// TAM         05.09.2013 C-23305 - поиск и привязка договора ЗДА к требованию
// TAM         29.10.2013 C-24556 - изменение пачки, при наличии в ТП примечания "Пачка 915"
// VV          05.11.2013 C-24133
// TAM         12.11.2013 - ориентируемся на просихождение в первичеке (перенесено выше по макросу)
// joy         04.02.2014 Перенос, адаптация модификаций:
//                        от 17.12.2013 R-302919-2 Шаг ед.комиссий по платежным требованиям должен появляться 
//                        только после акцепта
//             23.12.2013  C-25038 Автоматическое изменение происхождения платежа для гр.216
//                         + добавлен import "lib_access.mac", "lib_pm_check.mac", "pspobuff.mac"
// UDA         2014-02-20 C-19151 Логгирование массово выполненных шагов
// joy         23.12.2013 Жаворонкова Н. C-25038 Автоматическое изменение происхождения платежа для гр.216
// RR          30.12.2013 C-26027 - Костыль по 3063-У Приостановка операций клиента
// Yushmanov   23.01.2014 C-19151 Добавлено логгирование шагов, выполненных в массовом (пакетном) режиме
// TAM         28.01.2014 C-26550 - для банкротов не меняем очередность
// TAM         10.02.2014 C-26779 - замена наименования плательщика в п\п ABBY и ручной ввод
// RR          14.03.2014 Исправляю недоработки по R-302919-2
// VV          04.03.2014 C-27271 153 примечание на платеже
// RR          09.06.2014 Добавил простановку сегмента статуса ПЗО для документов солидарности
// SDA         11.06.2014 - атавистическое условие оставшееся от перехода с 5.0 
//                        - из за него в Солидарности не списывались ковертированные картотеки   
// joy         27.06.2014 R-402622 При простановке статуса, идти ли на ед.комиссию, исправила скобки для Солидарности. 
//                        По ВУЗу информации так и не получила, оставила проверку, как была
// joy         08.07.2014 R-391183 Платежи со счетов "депозиты физ.лиц" (40817) не попадают на шаг ед.комиссий
// joy         15.07.2014 R-411265 Ед. комиссии в солидарности взимаются и по платежам клиент-банка
// TAM         14.07.2014 C-25551  Нечеткий поиск по ЗДА
// VDN         04.09.2014 C-32938 Обработка примечаний
// VDN         11.09.2014 R-448253-2
// joy         23.09.2014 R-457013 В базе условие акцепта обновляется позже, поэтому проверяем и по объекту класса (см. по R-302919)
// TAM         17.10.2014 C-32407
// VDN         28.10.2014 C-34034
// VDN         21.01.2014 R-531325
// Chesnokov   22.01.2015 По R-532052 платежи себе но в другой банк идут на КК
// TAM         09.02.2015 C-35059
// TAM         13.02.2015 C-34990 - контроль УИН на 40822*
// TAM         06.03.2015 C-37632 - позиционирование на схему Саратова, платежей на Сбер
// Chesnokov   20.04.2014 C-38413 - Добавил проверку по справочнику КК для ГЭБ, ВУЗ, Солидарность, ЭВ-Саратов
// VDN         04.08.2015 I-00579000-2
// RR 15.12.2015 Доработки в соответствии с R-631562
//-------------------------------------------------------------------------------

import PaymInter, OprInter, pmdefbo, pm_syscont, pmpurp, pmchk117, pschkrst, pmterror,BankInter, ptinter, pmprepromass;
import "naVK.mac","ppp.mac","NaSogl.mac" /*, "PS_NAME.MAC"*/;
import FrontRoute, FrontCommon, lib_pm_check;
import "SetVOStaff.mac", "AvtoCode.mac", "CommissLib.mac";
import "GetNodeByAcc.mac";
import "fg_Life_parm.mac";
import "FS.mac"; //kOZINA для работы контроля целевого использования кредитных средств
import "rmcmptl.mac"; //А.Киселев 09.06.2011 используем для контроля наименования клиента-получателя в документе
import "lib_account.mac", "lib_const.mac", "lib_access.mac", "lib_pm_check.mac", "pspobuff.mac", "lib_fg.mac"; //TAM 06.03.2015 C-37632
import oralib; //Jushmanov 2014-02-20 C-19151
import "Compl_contr_rule.mac";

private const fgBank = fg_life_subject( {OurBank} );
private var PaymentObj:RsbPayment; //TAM 10.02.2014
var isNaSoglERC :bool = false;
private var _Rec_Account:TRecHandler = TRecHandler( "account.dbt" );

// А.Киселев 16.06.2011 проверяем наличие платежей по счету плательщика в Ожидающих поступления
private macro isPartyClosed( PartyID ) :integer
   var DataSet, cmd;
   cmd = RSDCommand( " SELECT 1 FROM dparty_dbt " +
                     " WHERE T_PARTYID = :PartyID " +
                     "   AND T_LOCKED <> CHR(88) ");
   cmd.AddParam("PartId",RSDBP_IN, PartyID);
   DataSet = RSDRecordset(cmd);
   if (DataSet.MoveNext)
      return 0;
   end;
   return 1;
end;

private macro del_turnpay(v_paymentid)
        var cmd;
          cmd = RSDCommand("delete from usr_doprtemp_tmp where t_orderid=? ");
          cmd.addparam("paym", RSDBP_IN, v_paymentid);
          cmd.Execute;
          cmd = RSDCommand("delete from USR_DEFFERED_START where t_orderid=? ");
          cmd.addparam("paym", RSDBP_IN, v_paymentid);
          cmd.Execute;
          
end;
//LAO 26.09.2013 R-253768-2 R-249085-3
//проверка на платежи с большим приоритетом(очередность и время создания)
private macro isMaxPriorPaym( v_paymentid ) :bool
    var DataSet, cmd;
    //Запрос покажет есть ли платежи на предобработке у которых либо приоритет выше либо время создания лучше
    //Проверка по двум таблицам, 1. Реальная очередь робота, 2. Очередь для отложенного старта
    cmd = RSDCommand("SELECT   1" +
                    "  FROM   usr_doprtemp_tmp ispaym, usr_doprtemp_tmp tmp" +
                    "  WHERE       ispaym.t_orderid = ?" +
                    "         AND tmp.t_payeraccount = ispaym.t_payeraccount" +
                    "         AND tmp.t_orderid != ispaym.t_orderid" +
                    "         AND (tmp.t_priority < ispaym.t_priority" +
                    "              OR (    tmp.T_CREATIONDATE <= ispaym.T_CREATIONDATE" +
                    "                  AND tmp.T_CREATIONTIME + interval '59' second < ispaym.T_CREATIONTIME" +
                    "                  AND tmp.t_priority = ispaym.t_priority))" +
                    " UNION ALL " +
                    " SELECT   1" +
                    "  FROM   USR_DEFFERED_START ispaym, USR_DEFFERED_START deff" +
                    " WHERE   ispaym.t_orderid = ? and  deff.T_PAYERACCOUNT = ispaym.t_payeraccount" +
                    "         AND deff.t_orderid != ispaym.t_orderid" +
                    "         AND (deff.t_priority < ispaym.t_priority" +
                    "              OR (    deff.T_CREATE_DATE <= ispaym.T_CREATE_DATE" +
                    "                  AND deff.T_CREATE_TIME + interval '59' second < ispaym.T_CREATE_TIME" +
                    "                  AND deff.T_PRIORITY = ispaym.t_priority))");
    cmd.AddParam("payid",RSDBP_IN, v_paymentid);
    cmd.AddParam("payids",RSDBP_IN, v_paymentid);
    DataSet = RSDRecordset(cmd);
    if (DataSet.MoveNext)
    //записываем в таблицу отложенного старта, что бы через 10 сек. попытаться провести платежи еще раз.
        cmd = RSDCommand( "MERGE INTO   USR_DEFFERED_START deff" +
                        "     USING   (SELECT   tmp.T_DOCKIND," +
                        "                       tmp.T_ORDERID," +
                        "                       tmp.T_PRIORITY," +
                        "                       tmp.T_CREATIONDATE," +
                        "                       tmp.T_CREATIONTIME," +
                        "                       tmp.T_PAYERACCOUNT," +
                        "                       defs.t_orderid order_def" +
                        "                FROM   usr_doprtemp_tmp tmp, USR_DEFFERED_START defs" +
                        "               WHERE   tmp.t_orderid = ?" +
                        "                       AND tmp.t_orderid = defs.t_orderid(+)) olds" +
                        "        ON   (deff.T_ORDERID = olds.order_def)" +
                        " WHEN NOT MATCHED" +
                        " THEN" +
                        "   INSERT VALUES (olds.T_DOCKIND, olds.T_ORDERID, olds.T_PRIORITY,olds.T_CREATIONDATE,olds.T_CREATIONTIME,olds.T_PAYERACCOUNT)");
        cmd.AddParam("payid",RSDBP_IN, v_paymentid);
        cmd.execute;
        return false;
    end;
 
    return true;
end;

private macro ExistsWaitMoney( PayerAccount, PaymId, IdOper ) :integer
   var DataSet, cmd;
   cmd = RSDCommand( " SELECT 1 FROM dpmpaym_dbt A,  doproper_dbt B, doprstep_dbt C " +
                     " WHERE A.T_PAYERACCOUNT = ? AND A.T_PAYMENTID <> ? " +
                     "  AND B.T_DOCUMENTID = LPAD(TO_CHAR(A.T_PAYMENTID),34,'0') " +
                     "  AND C.T_ID_OPERATION = B.T_ID_OPERATION " +
                     "  AND C.T_SYMBOL = CHR(137) " + //--Й 
                     "  AND C.T_ISEXECUTE = CHR(82) " + //--R
                     "  AND C.T_BLOCKID = 10000141 "
                     "  AND NOT EXISTS(SELECT 1 FROM doprstep_dbt D WHERE D.T_ID_OPERATION = ? " +
                     "                                               AND D.T_SYMBOL = CHR(137) " +
                     "                                               AND D.T_BLOCKID = 10000141) ");
   cmd.AddParam("acc",RSDBP_IN, PayerAccount);
   cmd.AddParam("PaymId",RSDBP_IN, PaymId);
   cmd.AddParam("IdOper",RSDBP_IN, IdOper);
   DataSet = RSDRecordset(cmd);
   if (DataSet.MoveNext)
      return 1;
   end;
   return 0;
end;

// KS 28.05.2012 I-00198430 Определю срану субъекта
private macro СтранаСубъекта( PartyID ) :string
   var DataSet, cmd;
   // KS 08.06.2012 Иначе ищем по даннын субъекта
   cmd = RSDCommand( "SELECT c.t_codenum3 FROM dparty_dbt p, dcountry_dbt c " +
                     " WHERE T_PARTYID = :PartyID " +
                     "   AND p.t_nrcountry = c.t_codelat3 " +
                     "   AND nvl(replace(p.t_nrcountry,' ',''),chr(1)) not in (chr(1),chr(0)) ");
   cmd.AddParam("PartId",RSDBP_IN, PartyID);
   DataSet = RSDRecordset(cmd);
   if (DataSet.MoveNext)
      return DataSet.value(0);
   end;
   // KS 08.06.2012 Иначе ищем по адресу
   cmd = RSDCommand( "SELECT c.t_codenum3 FROM dadress_dbt a, dcountry_dbt c " +
                     " WHERE a.T_PARTYID = :PartyID " +
                     "   AND nvl(replace(a.t_country,' ',''),chr(1)) not in (chr(1),chr(0)) "
                     " ORDER BY T_TYPE ");
   cmd.AddParam("PartId",RSDBP_IN, PartyID);
   DataSet = RSDRecordset(cmd);
   if (DataSet.MoveNext)
      return DataSet.value(0);
   end;
   // KS 08.06.2012 Иначе просто смотрим - резидент или нет
   cmd = RSDCommand( "SELECT 1 FROM dparty_dbt p " +
                     " WHERE T_PARTYID = :PartyID " +
                     "   AND t_notresident = chr(0) ");
   cmd.AddParam("PartId",RSDBP_IN, PartyID);
   DataSet = RSDRecordset(cmd);
   if (DataSet.MoveNext)
      return "643";
   end;
   return "";
end;

MACRO ExecuteStep( doc, paymDoc, DocKind:integer, ID_Operation:integer, ID_Step:integer )
   debugbreak;
   const CheckAccMask = 
   "'40501'40502'40503'40504'40505'40601'40602'40603'40701'40702'40703'40704'40801'40802'40803'40804'40805'40806'40807'40809'40810'40811'40812'40813'40814'40815'40818'40819'40821'";
   
   var stat:integer = 0;
   var obj:object;
   var RegVal, error;
   var PrichSogl, PrichSogl153 = ""; // причина отправки документа на "Согласование", для 153 примечания 
   var StatBank;  // статус банка из ППП в"Согласование"
   var rs, cmd, nd, ret_val;
   var AcNer, errAn;
   var cmdobj;
   var valutn;
   var realName;
   var obj1;
   // EVG 31/05/2011 Переменные для чтения настройки PRBB\МЕЖБАНКОВСКИЕ РАСЧЕТЫ\ДПП_ТЕКУЩИМ_ДНЕМ\ПОЧТОВЫЕ 
   var POSTA_ExecToday, err;
   var CABS_Segment,
       BICReceiver = "",
       CoincidStr = "";
   // KS 13.03.2012 
   var isFCOver = 0; //Нецелевой за счет овердрафта отмечаем единичкой и помещаем в ожид.поступлений 
   var ПришелИзОжидающихПоступления = ПлатежИзОжидающихПоступления( ID_Operation, ID_Step);
   //TAM 17.10.2014 C-32407
   private var payer_acc = RSL_Account(PaymentObj.PayerAccount,PaymentObj.PayerFiid);
   
   //TAM 12.11.2013 Перенесено выше для сверки происхождения попервичке
   if( DocKind == PS_PAYORDER )
      obj = GenObject( "RsbPsPayOrder", PaymentObj.DocumentID );
   elif( DocKind == PS_CPORDER )
      obj = GenObject( "RsbPsCpOrder", PaymentObj.DocumentID );
   elif( DocKind == PS_INRQ )
      obj = GenObject( "RsbRequestOrder", PaymentObj.DocumentID );
   end;

   //Gurin S. 19.12.2014 C-33995-7 Валютные платежи по БГ Лайф
   if ((PaymentObj.dockind == PS_CPORDER) and PaymentObj.isExternal and (PaymentObj.UserTypeDocument == "S"))
       if (not WL_IsExistsMessage (PaymentObj.PaymentID))
           if (PaymentObj.OutRlsForm == 0)
               var _TpSchemID, _RlsFormID; 
               DefMessRelForPm(PaymentObj.PaymentID, _TpSchemID, _RlsFormID);
               setdialogflag(0);
               //Генерируем SWIFT сообщение по платежу
               stat = PM_GenerateMessage(PaymentObj.PaymentID, _RlsFormID, _TpSchemID);
               setdialogflag(1);
               if (stat != 0)
                   MsgBox( "Возникла ошибка при генерации SWIFT сообщения по платежу" );
                   return 1;
               else
                   //Gurin S. 21.01.2015 R-531563-2
                   PaymentObj.OutTransport = 2;
               end;
           end;     
       end;
   end;
   
   //TAM 13.12.13 C-25730
   if((PaymentObj.dockind == PS_PAYORDER) or (PaymentObj.dockind == PS_CPORDER))
      if  (((PaymentObj.ShifrOper == "01") or (PaymentObj.ShifrOper == "02")) and 
           (PaymentObj.Priority == 6))
         PaymentObj.Priority = 5;
      elif(((PaymentObj.ShifrOper == "01") or (PaymentObj.ShifrOper == "02")) and 
           (PaymentObj.Priority == 4) and 
           (not Acc_IsBankrupt(PaymentObj.PayerAccount)) and //TAM 28.01.2014 C-26550
           (not payer_acc.check_usertypeaccount("№")) and //TAM 17.10.2014 C-32407
           ((subStr(PaymentObj.ReceiverAccount, 1, 3) == "401") or
            (subStr(PaymentObj.ReceiverAccount, 1, 3) == "402") or
            (subStr(PaymentObj.ReceiverAccount, 1, 3) == "403") or
            (subStr(PaymentObj.ReceiverAccount, 1, 3) == "404")))
         PaymentObj.Priority = 5;
      elif((PaymentObj.ShifrOper == "01") and 
           (PaymentObj.Priority == 3) and 
           (not Acc_IsBankrupt(PaymentObj.PayerAccount)) and //TAM 28.01.2014 C-26550
           (not payer_acc.check_usertypeaccount("№")) and //TAM 17.10.2014 C-32407
           ((subStr(PaymentObj.ReceiverAccount, 1, 3) == "401") or
            (subStr(PaymentObj.ReceiverAccount, 1, 3) == "402") or
            (subStr(PaymentObj.ReceiverAccount, 1, 3) == "403") or
            (subStr(PaymentObj.ReceiverAccount, 1, 3) == "404")))
         PaymentObj.Priority = 5;
      end;
   end;

   /* zmp 04.04.2014 C-28467 >>> */
   if( (PaymentObj.ShifrOper == "01") and 
       (PaymentObj.date > date("31.03.2014")) and
         (( substr(PaymentObj.ReceiverAccount, 1, 5) == "40101")
       or ( substr(PaymentObj.ReceiverAccount, 1, 5) == "40302")
       or ((substr(PaymentObj.ReceiverAccount, 1, 5) == "40501") and (substr(PaymentObj.ReceiverAccount , 14, 1)  == "2")) /*VDN 21.01.2015 R-531325-2*/
       or ((substr(PaymentObj.ReceiverAccount, 1, 5) == "40503") and (substr(PaymentObj.ReceiverAccount , 14, 1)  == "4")) /*VDN 21.01.2015 R-531325-2*/
       or ((substr(PaymentObj.ReceiverAccount, 1, 5) == "40603") and (substr(PaymentObj.ReceiverAccount , 14, 1)  == "4"))
       or ((substr(PaymentObj.ReceiverAccount, 1, 5) == "40703") and (substr(PaymentObj.ReceiverAccount , 14, 1)  == "4"))
       or ((substr(PaymentObj.ReceiverAccount, 1, 5) == "40601") and (inList(substr(PaymentObj.ReceiverAccount , 14, 1), "1", "3")))
       or ((substr(PaymentObj.ReceiverAccount, 1, 5) == "40701") and (inList(substr(PaymentObj.ReceiverAccount , 14, 1), "1", "3")))))

      var UIN_WRONG_VALUE = "Неверно Указан Уникальный Идентификатор Начисления в поле <КОД> ";
      
    /* LVV 18.11.2014 По заявке R-495739 убрал проверку примечания 53 для валютных платежей, оставил только для рублевых клиентских платежей */
    // Gurin S. R-545146-3 19.02.2015 ABBYY на пусто не проверять
       if(PaymentObj.dockind == PS_PAYORDER)
         if(obj.origin != PSPO_OR_MANUAL)      
            if ( (strLen(PaymentObj.UIN) >  20 ) 
                or ( (strLen(PaymentObj.UIN) < 20) and (PaymentObj.UIN != "0") ) //Gurin S. 22.03.2016 R-642577-2
                or ((trim(PaymentObj.UIN) == "" ) and (obj.Origin != USR_PAYMENT_OR_ABBYY_FC)) )
               PaymentObj.notes.addnote(42, UIN_WRONG_VALUE);               
               PaymentObj.PaymStatus = PM_REJECTED;
               PM_SetPrimDocumentState( PaymentObj, DOCUMENT_ST_REJECTED ); 
               if (GetDialogFlag()) msgBox(UIN_WRONG_VALUE); end;
               return УстановитьСтатусыПлатежа(OPR_PAYM_STATE,OPR_PM_ST_REJECT);
            end;
         end;
       end;  
   end;
   
   //RR 11.12.2015 Все условия ниже
   var UIN_NEED_FILL = "Необходимо заполнение Уникального Индентификатора Платежа в поле <КОД>";
   var KPP_NEED_FILL = "Необходимо заполнить КПП получателя";
   debugbreak;
   
   //RR Временная заглушка
   if (fgBank.is_VUZ)
   if (    (PaymentObj.dockind == PS_PAYORDER)
       and (inList(Obj.Origin, PSPO_OR_MANUAL, PSPO_OR_CLB, USR_PAYMENT_OR_ABBYY_FC))
      )
     /* При заведении платежа, установить контроль и запрет на сохранение и проведение  платежа, 
        если счет получателя 40101*, КБК (поле 104) в разрядах с 4 по 9 содержат набор цифр 116300 (это штрафы ГИБДД), 
        и при этом поле 22 пустое или <0>. При попытке сохранить и провести такой  платеж, должно выдаваться сообщение 
        <Необходимо заполнение Уникального идентификатора платежа> в поле <код>. */
     if (ExecMacroFile("lib_pm_check.mac","CheckFillUIN", PaymentObj))
       if (GetDialogFlag()) 
         msgBox(UIN_NEED_FILL); 
       end;
       return УстановитьСтатусыПлатежа(OPR_PAYM_STATE,OPR_PM_ST_REJECT);
     end;
     /* Поставить контроль на обязательное заполнение КПП Получателя( поле 103), при заведении платежа, где счет получателя = 
        40101*,40302*,40501????????2*,40601????????1*,40601????????3*,40701????????1*,40701????????3*,40503????????4*,40603????????4*,
        40703????????4* (в соответствии с 383-П). При попытке сохранить и отправить  платеж  , без указания КПП должно выдаваться 
        сообщение <Необходимо заполнить КПП Получателя. */
     if (ExecMacroFile("lib_pm_check.mac","CheckFillKPP", PaymentObj))
       if (GetDialogFlag()) 
         msgBox(KPP_NEED_FILL); 
       end;
       return УстановитьСтатусыПлатежа(OPR_PAYM_STATE,OPR_PM_ST_REJECT);
     end;
     if (   ((CompareStrWithMasks ("40101*", PaymentObj.ReceiverAccount, 1)) == 0)
         or ((CompareStrWithMasks ("40302*", PaymentObj.ReceiverAccount, 1)) == 0)
         or ((CompareStrWithMasks ("40302*", PaymentObj.ReceiverAccount, 1)) == 0)
         or ((CompareStrWithMasks ("40501????????2*", PaymentObj.ReceiverAccount, 1)) == 0)
         or ((CompareStrWithMasks ("40601????????1*", PaymentObj.ReceiverAccount, 1)) == 0)
         or ((CompareStrWithMasks ("40601????????3*", PaymentObj.ReceiverAccount, 1)) == 0)
         or ((CompareStrWithMasks ("40701????????1*", PaymentObj.ReceiverAccount, 1)) == 0)
         or ((CompareStrWithMasks ("40701????????3*", PaymentObj.ReceiverAccount, 1)) == 0)
         or ((CompareStrWithMasks ("40503????????4*", PaymentObj.ReceiverAccount, 1)) == 0)
         or ((CompareStrWithMasks ("40603????????4*", PaymentObj.ReceiverAccount, 1)) == 0)
         or ((CompareStrWithMasks ("40703????????4*", PaymentObj.ReceiverAccount, 1)) == 0))
        if (GetDialogFlag()) 
          if (not gettrue(false,"Вы уверены, что поле <КОД> заполнено верно?"))
            return УстановитьСтатусыПлатежа(OPR_PAYM_STATE,OPR_PM_ST_REJECT);
          end;
        end;
     end;
     
   end;
   end;
   
   //TAM 13.02.2015 C-34990
   if((PaymentObj.dockind == PS_PAYORDER) and
      (substr(PaymentObj.ReceiverAccount, 1, 5) == "40822"))
      //проверка на длину в 25 знаков
      if(StrLen(trim(PaymentObj.UIN)) != 25)
         msgbox("Заполните поле <КОД> значением в 25 знаков");
         return 1;
      //проверку прошёл, проверяем ключ
      else
         if(not Check_UIN_Control_Key("40822", substr(trim(PaymentObj.UIN), 1, 16)))
            msgbox("Контрольный ключ УИН не верен");
            return 1;
         end;
      end;
   end;
  
   //TAM 05.09.2013 C-23305 - требования должна пройти проверку на наличие договора ЗДА к счету плательщика
   //TAM 20.06.2014 C-25551 - неточное соответсвие в реквизитах ЗДА
   var ZdaContractId:integer,//TAM 05.09.2013 C-23305
       ContragentName:string, 
       ContrDate:string,
       Reason:string = "";
   var IsNameEqual:bool = false,
       IsContrDateEqual:bool = false;
   if(PaymentObj.ShifrOper == "02")
      //есть ли шаг "Обработка отвергнутого": если есть, то поиск ЗДА "строгий"
      if(PM_IsStepExist (PaymentObj.PaymentId, 10000126, 10, "X"))
         if (GetZdaContrForPayment(PaymentObj.PaymentId, ZdaContractId, ContragentName, ContrDate, true))
            obj = GenObject( "RsbPsPayOrder", PaymentObj.PaymentId );
            obj.AcceptTerm = PM_DEMAND_TERM_PREACCEPT;
            obj.Accept = PM_DEMAND_ACCEPT_WAIT;
            obj.UserField1 = ZdaContractId;
         end;
      //шага нет - поиск "нечеткий"
      else
         if (GetZdaContrForPayment(PaymentObj.PaymentId, ZdaContractId, ContragentName, ContrDate, false))
            if(StrUpr(StrSubst(ContragentName, "\"","")) == StrUpr(StrSubst(PaymentObj.ReceiverName,"\"","")))   IsNameEqual        = true; end;
            if(Index(PaymentObj.Ground, ContrDate))                                                              IsContrDateEqual   = true; end;
            //проверяем кол-во совпадений
            if(IsNameEqual and IsContrDateEqual) //все совпадения - договор нашелся
               obj = GenObject( "RsbPsPayOrder", PaymentObj.PaymentId );
               obj.AcceptTerm = PM_DEMAND_TERM_PREACCEPT;
               obj.Accept = PM_DEMAND_ACCEPT_WAIT;
               obj.UserField1 = ZdaContractId;
            else //не все совпадения, записываем причину несовпадений
               if (not IsNameEqual)        Reason = Reason + "Не совпало наименование получателя; "; end;
               if (not IsContrDateEqual)   Reason = Reason + "Не совпала дата договора;"; end;
               //отправляем в отвергнутые
               PaymentObj.notes.addnote(42, Reason);
               PaymentObj.PaymStatus = PM_REJECTED;
               PM_SetPrimDocumentState( PaymentObj, DOCUMENT_ST_REJECTED ); 
               if (GetDialogFlag()) msgBox("Документ помещен в отвергнутые при сопоставлении реквизитов ЗДА: " + Reason); end;
               return УстановитьСтатусыПлатежа(OPR_PAYM_STATE,OPR_PM_ST_REJECT);
            end;
         end;
      end;
   end;
   
   //TAM 29.10.2013 C-24556
   if ((obj.Origin == PSPO_OR_CLB) and PaymentObj.IsExternal)
      if (PM_Is915PackTP(PaymentObj.payer, PaymentObj.PayerAccount))
         PaymentObj.NumberPack = 915;
      end;
   end;
   
   /* 04.02.3014 joy Перенос модификации от  12.12.2013  C-25038*/
   if  (obj.Origin == USR_PAYMENT_OR_INVOICE_IBANK)
      if (ACS_CheckGroupOper(ACS_GRP_INVOICE_FOR_PAYMENT, {oper}, false))
         r_Pmpaym.PaymentID = PaymentObj.PaymentId;
         var ctg = RsbObjCategories(OBJTYPE_PAYMENT, UniID (r_Pmpaym, OBJTYPE_PAYMENT));
         ctg.ConnectAttr(1022, 1, null, null, {curdate});
         ctg.Save(UniID (r_Pmpaym, OBJTYPE_PAYMENT)); 
      else
         msgbox ("Вы не входите в группу 216. Проводка запрещена");
         return 1;
      end;
   end;

   //TAM 10.02.2014 C-26779 (п. 5)
   // Проверить значение настройки CB\PAYMENTS\DEPARTMENTALINFO\BUDGPAYRECMASK
   var BudgPayRecMask:string = "";
   GetRegistryValue( "CB/PAYMENTS/DEPARTMENTALINFO/BUDGPAYRECMASK", V_STRING, BudgPayRecMask, err );
   if( ( not err ) and  // задана настройка
       ( CompareStrWithMasks( string("40101*,",BudgPayRecMask),PaymentObj.ReceiverAccount ) == 0 ) and 
       ( PaymentObj.TaxAuthorState == "" ) and
       ( PaymentObj.dockind == PS_PAYORDER) and  //LVV 18.11.2014 пофиксил, добавил проверку на вид дока (налоговые реквизиты только у рублевых платежей)
       ( Paymentobj.ShifrOper != "16")) //TAM 07.11.2014
      PaymentObj.notes.addnote(PM_NOTEKIND_DENIALGROUND,"Поле \"Статус составителя\" должно быть заполнено!");
      MsgBox("Поле \"Статус составителя\" не заполнено - документ помещен в отвергнутые");
      PaymentObj.PaymStatus = PM_REJECTED;
      PM_SetPrimDocumentState( PaymentObj, DOCUMENT_ST_REJECTED );
      stat = УстановитьСтатусыПлатежа(OPR_PAYM_STATE,OPR_PM_ST_REJECT);
      return stat;
   end;
   
   //TAM 09.02.2015 C-35059
   Reason = "";
   if((CompareStrWithMasks( "40302*",PaymentObj.ReceiverAccount ) == 0) and
      (PaymentObj.dockind == PS_PAYORDER) and
      (Paymentobj.ShifrOper == "01"))
      //Статус составителя
      if (PaymentObj.TaxAuthorState == "")
         Reason = "Поле \"Статус составителя\" не заполнено!";
      end;
      //Контроль КБК
      if((strlen(PaymentObj.BttTICode) != 20) and (PaymentObj.BttTICode != "0"))
         Reason = "Поле \"КБК\" заполнено некорректно!";
      end;
      //Контроль ОКТМО
      if((strlen(PaymentObj.OKATOCODE) != 8) and
         (strlen(PaymentObj.OKATOCODE) != 11) and 
         (PaymentObj.OKATOCODE != "0"))
         Reason = "Поле \"ОКТМО\" заполнено некорректно!";
      end;
      if(Reason != "")
         PaymentObj.notes.addnote(PM_NOTEKIND_DENIALGROUND,Reason);
         MsgBox(string(Reason, " - документ помещен в отвергнутые"));
         PaymentObj.PaymStatus = PM_REJECTED;
         PM_SetPrimDocumentState( PaymentObj, DOCUMENT_ST_REJECTED );
         stat = УстановитьСтатусыПлатежа(OPR_PAYM_STATE,OPR_PM_ST_REJECT);
         return stat;
      end;
   end;

   //TAM 10.02.2014 C-26779 (п. 4)
   if(( PaymentObj.dockind == PS_PAYORDER) and 
      ( (obj.Origin == PSPO_OR_MANUAL) or (obj.Origin == USR_PAYMENT_OR_ABBYY_FC) ) and
      ( subStr(PaymentObj.PayerAccount,    1, 5) == "40802" ) and
      ( subStr(PaymentObj.ReceiverAccount, 1, 5) == "40101" ))
      //Gurin S. 11.08.2014 R-428727-2 (В Солидарности есть юрики у которых есть счет 40802*, отключаю проверку временно)
      var _tmp = RsbParty(PaymentObj.Payer);
      if (not ((_tmp.LegalForm == 1) and (fgBank.is_SLD)))
          if(CreateEmploerPayerName(PaymentObj.Payer) != "")
              PaymentObj.PayerName = CreateEmploerPayerName(PaymentObj.Payer);
          else
              msgbox("Проверьте плательщика (адрес, тип субъекта) по 107н!");
              return 1;
          end;
      end;
      _tmp = NULL;
   end;
   
   //SDA корректировки по первичке - статусы не устанавливаются, передается null
   PM_SetPrimDocumentState(PaymentObj,null);
   stat = УстановитьСтатусыПлатежа(   OPR_PAYM_DO, OPR_PM_ST_PREP,
                                      OPR_PAYM_CABS, OPR_PM_ST_MFR_YES ); 
    // KS 05.09.2011 Для обработчика и массового режима
    if (IsOprMultiExec())
       SetDialogFlag(0);
    end;
   //LAO 27.12.2012 fix ошибки C-16223  и I-00303578-3
   if (paymentobj.Origin == 2) 
      if (GetOprStatus(OPR_PAYM_STATE) == OPR_PM_ST_DEFER) /* LAO проверяем на битый сегмент статуса        */
         /*LAO исправляем битый сегмент, ну не может на шаге предобработки быть сегмент статуса отложен!!!!!*/
         /*интер УстановитьСтатусыПлатежа при данных условиях не отрабатывает, пришлось делать правку в базе*/
         cmdobj = RSDCommand(" update doprcurst_dbt cur set cur.T_NUMVALUE=?"+
                             " where T_ID_OPERATION=?"+
                             " and T_STATUSKINDID=?");
         cmdobj.addparam("st", RSDBP_IN, OPR_PM_ST_OPEN);
         cmdobj.addparam("op", RSDBP_IN, ID_Operation);
         cmdobj.addparam("tt", RSDBP_IN,OPR_PAYM_STATE);
         cmdobj.Execute;
         /*Логирование  платежей с битыми статусами*/
         cmdobj = RSDCommand(" insert into usr_crashstatus_log (T_PAYMENTID) values (?) ");
         cmdobj.addparam("p", RSDBP_IN, PaymentObj.paymentID);
         cmdobj.Execute;
      end; 
        //isMaxPriorPaym( v_paymentid,v_payer,v_prior,v_date_creat,v_date_time ) :bool
        if (({OPER}==20001) and (not isMaxPriorPaym(PaymentObj.PaymentId)))
              msgbox("Платеж поставлен в очередь ожидания, есть платежи с большим приоритетом");
            return 1;   
        end;
    end;
  
   
   if( stat == 0 )
      AvCodeVo(PaymentObj); // Dex - простановка кода 99090 для погашения кредита
      GetRegistryValue("PS\\REQOPENACC\\173-ФЗ СЧЕТА НЕРЕЗИДЕНТОВ\\ДЛЯ ВК", V_STRING, AcNer, errAn);
      
      // A.Gregeradsky - 01.02.2010 - Код ВО для платежа комиссии за ВК 
      if( index(strlwr(trim(PaymentObj.Ground)),"комиссия за валютный контроль") != 0 )
         if(not(CompareStrWithMasks (AcNer, PaymentObj.PayerAccount)))
            //TAM 25.07.2012 I-00226434-2  Нет свойства VO_Code        PaymentObj.VO_Code = 212; /* 99090 - Прочие */
            if(paymentObj.pmco.FindPmCOGeneral(pm_co) == 0)
               pm_co.rec.vo_code = 212;
               paymentObj.pmco.update(pm_co);
            else
               pm_co.clear();
               pm_co.rec.vo_code = 212;
               paymentObj.pmco.insert(pm_co);
            end;
         end;
      end;
      // A.Gregeradsky - 18.02.2010 - Замена опечаток в коде ВО в основании 
      if ((fgBank.is_VUZ) or (fgBank.is_GEB) or (fgBank.is_EXV))
         if( (index(PaymentObj.Ground,"{V") == 1) and (index(PaymentObj.Ground,"}") == 9) ) /* Есть код ВО в основании платежа */
            PaymentObj.Ground = Strsubst(PaymentObj.Ground,"{V0","{VO"); /* Замена "0" (ноль) на "O" (лат.) */
            PaymentObj.Ground = Strsubst(PaymentObj.Ground,"{VО","{VO"); /* Замена "О" (рус.) на "O" (лат.) */
         end;
      else
         if( index(PaymentObj.Ground,"{V") == 1 )                                           /* Есть код ВО в основании платежа */
            PaymentObj.Ground = Strsubst(PaymentObj.Ground,"{V0","{VO"); /* Замена "0" (ноль) на "O" (лат.) */
            PaymentObj.Ground = Strsubst(PaymentObj.Ground,"{VО","{VO"); /* Замена "О" (рус.) на "O" (лат.) */
         end;
      end;
      // EVG Заполнение параметров, необходимых для валютного контроля 
      // EVG Заполнение примечания вида 111 "Паспорта, коды валютного контроля"   шаблоном для ввода информации 
      if ( strLen (ReadNoteForPayment (PaymentObj.paymentID, 111)) == 0 )
         InsertNoteForPayment(PaymentObj.paymentID, 111, "ХХХХХХХХ/2412/0000/Х/0{xxxxx}$;ХХХХХХХХ/2412/0000/Х/0{xxxxx}$;");
      end;
      // EVG Заполнение данных о валютной операции исходя из паспорта сделки, если он есть в назначении платежа. 
      УстановитьКодВОиПаспортСделкиИзПримечания( PaymentObj );
      // EVG Для плательщика-нерезидента - перенос страны нерезидента в категорию платежа 118 "Код страны нерезидента-отправителя". 
      UpdateNRCountryInPaymetnCat( PaymentObj, PaymentObj.Payer, 118 );
      // EVG Для получателя-нерезидента - перенос страны нерезидента в категорию платежа 119 "Код страны нерезидента-получателя". 
      UpdateNRCountryInPaymetnCat( PaymentObj, PaymentObj.Receiver, 119 );
     
      //Seleznev для платежей с К2 нужно привести в соответствие счета корсхемы и futurereceiveraccount
      if ((PaymentObj.PartPaymNumber > 0) and (PaymentObj.isexternal == true))//Lavrenov добавил проверку на внешние платежи
         cmdobj = RSDCommand(
                            "update   dpmpaym_dbt t " +
                            "   set   t_futurereceiveraccount = " +
                            "            (select   t_account " +
                            "               from   dpmprop_dbt, dcorschem_dbt " +
                            "              where   t_fi_kind = 1 and t_fiid = 0 and t_number = t_corschem and t_debetcredit = 1 and t_paymentid = t.t_paymentid) " +
                            " where   t_paymentid = ? "
                           );
         cmdobj.addparam("pmid", RSDBP_IN, PaymentObj.paymentID);
         cmdobj.Execute;
      end;

      //SDA 12.12.2011  Для платежей из ожидающих поступлений устанавливаем дату текущего опредня 
      If (( DocKind == PS_PAYORDER ) and 
          ((obj.Origin == 2) or (ПришелИзОжидающихПоступления)))
         PaymentObj.ValueDate = {curdate};
         if (PaymentObj.OutTransferDate < {curdate} )
            PaymentObj.OutTransferDate = {curdate};
         end;
      end;

      //Контроль
      IF  (Obj.Origin != PSPO_OR_CLB) //Str! для КБ "Проконтролирован" (не КБ - как в дистр.)
         if( (PaymentObj.Origin == PAYMENT_OR_AUTO) or (PaymentObj.Origin >= 10000) or 
            ((Obj.Origin == 2100)  and (PaymentObj.ShifrOper == "01"))) // KS 14.12.2011 C-4873
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL );
         else
            if ((not PaymentObj.IsExternal) and 
                (PaymentObj.ShifrOper == "02") and 
                (SubStr(PaymentObj.ReceiverAccount, 1, 5) == "47423"))
               stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL );
            elif (PM_IsPaymentERC(PaymentObj)) /*25.03.2013 zmp C-17511 Для документов картотеки контроль не нужен*/
               stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL );                           
            elif ((fgBank.is_VUZ)  and  
                  ((PaymentObj.Origin == 3300) or
                   (PaymentObj.Origin == 2100) or
                   (PaymentObj.Origin == 19  )) and
                  ((PaymentObj.ShifrOper == "02") or 
                   (PaymentObj.ShifrOper == "06") ))//VV C-22956 09.09.13
               stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL );   
               
            elif( (fgBank.is_VUZ) and (PaymentObj.ShifrOper == "16") )
               stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL ); //VV C-22956 09.09.13
            //Gurin S. N. 19.10.2012 C-14575
            elif ((fgBank.is_EXV) and 
                  ((( PaymentObj.Origin == 3300 ) and (PaymentObj.ShifrOper == "06")) or
                   (( PaymentObj.Origin == 19 )   and ((PaymentObj.ShifrOper == "06") or (PaymentObj.ShifrOper == "02")))))
               stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL );
            elif(Obj.Origin == 3400) //DEV 11.07.2013 C-21254-6 Убран шаг контроля для документов с происхождением ПостоянПеречисл
               stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL );
            else                 
               stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_NOTCONTROL );
            end;
         end;
        
         // EVG 17.02.2011 Документы с происхождением "FineReader Bank" отправляются  на автоматическое сопоставление с дубликатом. 
         //SDA - в случае, если производится сразу полная оплата распознать что документ идет с карт.2 можно по PaymentObj.I2PlaceDate
         if ((Obj.Origin == PSPO_OR_FINEREADER ) and (PaymentObj.PartPaymNumber == 0) and (PaymentObj.I2PlaceDate < date(1,1,1111)))
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, 99 );
         end;
         
         if(PM_IsPaymentERC(PaymentObj)) /*25.03.2013 zmp C-17511*/            
            if((SubStr(PaymentObj.ReceiverAccount, 1, 5) == "40101")  and (PaymentObj.PayType == 0))
               PaymentObj.PayType = 1;             
            end;
         end;
         
         if(PaymentObj.PartPaymNumber > 0) 
            cmd = RsdCommand("select T_INITIALPAYMENT from dpmlink_dbt where T_PURPOSEPAYMENT = ?");
            cmd.AddParam("", RSDBP_IN, PaymentObj.PaymentID);
            rs = RsdRecordset(cmd);
            if (rs.moveNext())
               var ParentPaymentObj = RsbPayment(rs.value(0));
               if(PM_IsPaymentERC(ParentPaymentObj))
                  stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL ); 
               end;
               //VV
               if ( (fgBank.is_VUZ)  and  
                    ( (PaymentObj.Origin == 3300)   or
                    (PaymentObj.Origin == 2100  ) or
                    (PaymentObj.Origin == 19  ) ) and
                    (  (PaymentObj.ShifrOper=="02") or 
                       (PaymentObj.ShifrOper=="06") ) )
                  stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL ); 
               end;   
            end;
         end;

         //Gurin S. 19.12.2014 C-33995-7 Валютные платежи по БГ Лайф
         if ((PaymentObj.dockind == PS_CPORDER) and PaymentObj.isExternal and (PaymentObj.UserTypeDocument == "S"))
             stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL ); 
         end;

         //Gurin S. 11.11.2015 R-626940-4 
         if ( (PaymentObj.dockind == PS_CPORDER) and 
              (PaymentObj.BaseFiid != NATCUR) and 
              ( (substr(PaymentObj.PayerAccount,1,3) == "423") or (substr(PaymentObj.PayerAccount,1,5) == "40817") ) and 
              ( (substr(PaymentObj.ReceiverAccount,1,3) == "423") or (substr(PaymentObj.ReceiverAccount,1,5) == "40817") )
            )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL ); 
         end;

         //Gurin S. 19.11.2015 R-628364-2
         if ((PaymentObj.Origin == USR_PAYMENT_OR_ABBYY_FC) and (PaymentObj.PartPaymNumber > 0) and (inList(PaymentObj.ShifrOper,"01","16")) and (fgBank.is_SLD))
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL );
         end;
      //КБ 
      ELSE
         IF ((Obj.Payment.BaseFiid != NATCUR))  
         // Str! Для валютныех платежей Клиент-Банка шаг контроля нужен
         //Seleznev контроль нужен для оплат К2
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_NOTCONTROL );
         else
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL );
         End;
      END;
      //Направление
      if( stat == 0 )
         //SDA 19.04.2012 - на платежах из внешних систем зачастую проставляется неверное определение "внешности платежа"
         PM_GetAccountRecord( PaymentObj.ReceiverAccount, PaymentObj.ReceiverFIID, PaymentObj.Chapter, _Rec_Account );
         if (( PaymentObj.ReceiverGroup == PAYMENTS_GROUP_EXTERNAL ) and 
             ((PaymentObj.ReceiverBankID != {OurBank}) or (Index( _Rec_Account.rec.Type_Account, "К" ))))
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_OUT );
         else
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_INTERNAL );
            if ( PaymentObj.ReceiverGroup == PAYMENTS_GROUP_EXTERNAL )
               PaymentObj.SetReceiverPI( PAYMENTS_GROUP_INTERNAL, 
                                         {OurBank} , 
                                         PaymentObj.ReceiverBankCodeKind, 
                                         PaymentObj.ReceiverBankCode, 
                                         PaymentObj.ReceiverBankName,
                                         PaymentObj.ReceiverBankCorrAcc,
                                         PaymentObj.ReceiverFIID, 
                                         PaymentObj.chapter,
                                         PaymentObj.ReceiverAccount,
                                         //TAM 12.07.2013 I-00398453
                                         null,
                                         PaymentObj.ReceiverName,
                                         PaymentObj.ReceiverINN); 
            end;
         end;
         //zmp 17.10.2012 C-14934 >>> --Перенес условие с Payminit, оказалось что робот этот макрос не выполняет
         if ((PaymentObj.ReceiverGroup == PAYMENTS_GROUP_EXTERNAL ) and 
            (PaymentObj.ReceiverBankID != {OurBank}) and 
            (PaymentObj.PaymentKind == "С"))
            PaymentObj.SetReceiverPI( PAYMENTS_GROUP_EXTERNAL, 
                                      PaymentObj.ReceiverBankID, 
                                      PaymentObj.ReceiverBankCodeKind, 
                                      PaymentObj.ReceiverBankCode, 
                                      PaymentObj.ReceiverBankName,
                                      PaymentObj.ReceiverBankCorrAcc,
                                      PaymentObj.ReceiverFIID, 
                                      PaymentObj.chapter,
                                      PaymentObj.ReceiverAccount, 
                                      null, 
                                      PaymentObj.ReceiverName, 
                                      PaymentObj.ReceiverINN,
                                      null,
                                      null,
                                      1, /* Corschem = РКЦ */
                                      PM_CORRPOS_TYPE_USER /* PM_CORRPOS_TYPE_SYSTEM*/);
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_OUT );
         end;
         //TAM С-37632 05.03.2015 
         //Gurin S. 25.08.2015 I-00580699-2 закомментировал
         //if ((_bank.is_EXV_Volgograd or _bank.is_EXV_Voronezh or _bank.is_EXV_Stavropol) and
         //    (PaymentObj.ReceiverGroup == PAYMENTS_GROUP_EXTERNAL ) and 
         //    (PaymentObj.BaseFiid == NATCUR) and
         //    (PaymentObj.PaymentKind != "С") and //TAM 19.03.2015 
         //    (IsPartyTheSberbank(PaymentObj.ReceiverBankID)) and 
         //    (PaymentObj.PartPaymNumber = 0) and
         //    (PaymentObj.Origin != 19))//Gurin S. 07.07.2015 R-601044-2
         //   var CorSchemId = 0,
         //       TransportId = 0,
         //       SchemaId = 0,
         //       ReleaseId = 0;
         //   if(GetMfrParamsForExvBank("046311808", TransportId, SchemaId, ReleaseId, CorSchemId))
         //      PaymentObj.SetReceiverPI( PAYMENTS_GROUP_EXTERNAL, 
         //                                PaymentObj.ReceiverBankID, 
         //                                PaymentObj.ReceiverBankCodeKind, 
         //                                PaymentObj.ReceiverBankCode, 
         //                                PaymentObj.ReceiverBankName,
         //                                PaymentObj.ReceiverBankCorrAcc,
         //                                PaymentObj.ReceiverFIID, 
         //                                PaymentObj.chapter,
         //                                PaymentObj.ReceiverAccount, 
         //                                null, 
         //                                PaymentObj.ReceiverName, 
         //                                PaymentObj.ReceiverINN,
         //                                null,
         //                                null,
         //                                CorSchemId,
         //                                PM_CORRPOS_TYPE_USER /* PM_CORRPOS_TYPE_SYSTEM*/);
         //      PaymentObj.OutTransport = TransportId;
         //      PaymentObj.OutTpSchem   = SchemaId;
         //      PaymentObj.OutRlsForm   = ReleaseId;
         //      stat = УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_OUT );
         //   end;
         //end;
//LVV 10.06.15 C-40028
         if (
             (_bank.is_VUZ) and     //LVV - это условие про ВУЗ скорее всего лишнее, но если в других банках такие платежи должны идти не только через РКЦ, то нужно раскомментить.
             (PaymentObj.BaseFiid == NATCUR) and
             IsPartyTheSberbank(PaymentObj.ReceiverBankID) and
             (( CompareStrWithMasks("401-404",PaymentObj.ReceiverAccount ) == 0 ) or ( Paymentobj.ShifrOper != "01") ) //
            )
              PaymentObj.SetReceiverPI( PAYMENTS_GROUP_EXTERNAL, 
                                      PaymentObj.ReceiverBankID, 
                                      PaymentObj.ReceiverBankCodeKind, 
                                      PaymentObj.ReceiverBankCode, 
                                      PaymentObj.ReceiverBankName,
                                      PaymentObj.ReceiverBankCorrAcc,
                                      PaymentObj.ReceiverFIID, 
                                      PaymentObj.chapter,
                                      PaymentObj.ReceiverAccount, 
                                      null, 
                                      PaymentObj.ReceiverName, 
                                      PaymentObj.ReceiverINN,
                                      null,
                                      null,
                                      1, /* Corschem = РКЦ */
                                      PM_CORRPOS_TYPE_USER /* PM_CORRPOS_TYPE_SYSTEM*/);
         end;
      end;
      //Уточнение причастности к терроризму - Не требуется
      if( stat == 0 )
         stat = УстановитьСтатусыПлатежа( OPR_PAYM_TERR, OPR_PAYM_ST_TERR_NOTNEED );
      end;  
          
      //Квитовка - не сквитован
      if( stat == 0 )
         stat = УстановитьСтатусыПлатежа( OPR_PAYM_OUT_KVIT, OPR_PM_ST_UNKVIT );
      end;

      //Квитанция - не сквитован
      if( stat == 0 )
         stat = УстановитьСтатусыПлатежа( OPR_PAYM_KVT, OPR_PM_ST_UNKVIT );
      end;  
    
      //ЦАБС
      if( stat == 0 )
        stat = УстановитьСтатусыПлатежа( OPR_PAYM_CABS, OPR_PM_ST_MFR_NO );
      end;
          
      //Обработка в БО - нет
      if( stat == 0 )
         stat = УстановитьСтатусыПлатежа( OPR_PAYM_BO_PROCESS, OPR_PAYM_ST_BO_NO );
      end;  
    
      //ПЗО - Seleznev единовременных комиссий нет
      stat = УстановитьСтатусыПлатежа( OPR_PAYM_PZO, OPR_PAYM_ST_PZO_NOTNEED );
      
      // EVG Единовременные комиссии для валютных платежей за счёт бенефициара 
      if ( IsPaymentForBeneficiaryCommission( PaymentObj ) )
         stat = УстановитьСтатусыПлатежа( 310 /*Плата за обслуживание / бенефициар*/, 1 /*Требуется*/ );
      // EVG 21.07.2010 Единовременные комиссии для банка ВУЗ */
      // EVG 22.02.2011 Также для банка ЭВ */
      // joy 15.07.2014 R-411265 Ед. комиссии в солидарности взимаются и по платежам клиент-банка
      elif ( ( (fgBank.is_VUZ() or fgBank.is_SLD() or 
            (fgBank.is_EXV() and (Obj.Origin != PSPO_OR_CLB)) ) and 
            (Obj.Origin != 2000)) and  // Перечисление на основании распоряжения к транзитному счету
            (PaymentObj.ShifrOper != 16) ) 
         stat = УстановитьСтатусыПлатежа( OPR_PAYM_PZO, OPR_PAYM_ST_PZO_NEED );
      else
         if ( (PaymentObj.BaseFiid > 0) and 
              (PaymentObj.IsExternal) and
              (subStr(PaymentObj.PayerAccount, 1, 3) != "423") and       // платежи физ. лиц
              (subStr(PaymentObj.PayerAccount, 1, 3) != "426") and      // платежи физ. лиц нерез.
              (subStr(PaymentObj.PayerAccount, 1, 5) != "40911") and    // платежи фл без открытия счёта
              (subStr(PaymentObj.PayerAccount, 1, 5) != "40912") and    // переводы из РФ
              (subStr(PaymentObj.PayerAccount, 1, 5) != "40817") and    // + депозиты физ.лиц 08.07.2014 joy R-391183
              (subStr(PaymentObj.PayerAccount, 1, 5) != "40913") )   // переводы из РФ нерез.
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_PZO, OPR_PAYM_ST_PZO_NEED );
         end;
      end;
    /*04.02.2014 joy Перенос и адаптация модификации от  17.12.2013 R-302919-2 Ед. комиссия по палтежным требованиям должна быть только после помещения в К1*/
      if  ( (fgBank.is_EXV() ) or (fgBank.is_VUZ() )  )
      
            //RR 14.03.2014 GetEQ для r_paydem'a не пашет, ввожу переменную будет искать селектом
            var PaymAcceptTerm = ExecMacroFile ("lib_pm_check", "PM_GetAcceptState", PaymentObj.paymentID);;
            var wasStep = ExecMacroFile ("lib_pm_check", "PM_IsStepExist" , PaymentObj.paymentID, 10000133, 10, "X" );
            
            if (     (Obj.Origin != PSPO_OR_CLB) 
                 and (Obj.Origin != USR_PAYMENT_OR_TRANSIT_ACC) 
                 and (PaymentObj.ShifrOper == "02") 
                 and (PaymAcceptTerm == 0) and (obj.AcceptTerm == 0) // 23.09.2014 joy R-457013 В базе условие акцепта обновляется позже, поэтому проверяем и по объекту класса
                 and (wasStep == false) );
              stat = УстановитьСтатусыПлатежа( OPR_PAYM_PZO, OPR_PAYM_ST_PZO_NOTNEED );
            elif (     (Obj.Origin != PSPO_OR_CLB)
                   and (PaymentObj.ShifrOper == "02")
                   and (PaymAcceptTerm != 0) )
              stat = УстановитьСтатусыПлатежа( OPR_PAYM_PZO, OPR_PAYM_ST_PZO_NEED );
            end;            
       end;
    /*---end joy*/
      // EVG 25/05/2013 Единовременные комиссии для платежей по Постоянным перечислениям (доработка C-19613) 
      if( Obj.Origin == 3400 )   // Происхождение "ПостоянПеречисл"
         stat = УстановитьСтатусыПлатежа( OPR_PAYM_PZO, OPR_PAYM_ST_PZO_NEED );
      end;

      // EVG 19/4/2016 Открываем ед. комиссии для документов Клиент-Банка по зарплатному проекту
      var SOVCOMBANK_BRANCH_CENTRAL = "045003848";
      if( fgBank.is_EXV() and ( Obj.Origin == PSPO_OR_CLB )
          and ( PaymentObj.ReceiverBankCode == SOVCOMBANK_BRANCH_CENTRAL )
          and ( subStr( PaymentObj.ReceiverAccount, 1, 5 ) == "40817" ) )
   
         stat = УстановитьСтатусыПлатежа( OPR_PAYM_PZO, OPR_PAYM_ST_PZO_NEED );
      end;


      // РО - не требуется
      if( stat == 0 )
         stat = УстановитьСтатусыПлатежа( OPR_PAYM_MANUAL, OPR_PAYM_ST_MANUAL_NOTNEED );
      end;  

      // МФ
      if( stat == 0 )
         if( PaymentObj.StartDepartment != PaymentObj.EndDepartment )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_BRANCH, OPR_PAYM_ST_BRANCH_YES );
         else
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_BRANCH, OPR_PAYM_ST_BRANCH_NO );
         end;
      end;

/*SDA 11.06.2014 - атавистическое условие оставшееся от перехода с 5.0 
                 - из за него в Солидарности не списывались ковертированные картотеки   */
//      if ((PaymentObj.origin < 10000) or (fgBank.is_SLD)) /*Для конвертированных платежей*/
         // КАРТ - нет
         if( stat == 0 )
            stat = УстановитьСтатусыПлатежа( OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_NO );
         end;

         IF ( (PaymentObj.BaseFiid==0) and (PaymentObj.PayerFiid == 0) and (PaymentObj.ReceiverFiid == 0) )
            If(ПользовательскиеПроверкиПредобработки(PaymentObj,StatBank))                   
               PaymentObj.PaymStatus = PM_REJECTED;
               PM_SetPrimDocumentState( PaymentObj, DOCUMENT_ST_REJECTED ); 
               stat = УстановитьСтатусыПлатежа(OPR_PAYM_STATE,OPR_PM_ST_REJECT);  
               if( stat != 0 )      
                  msgbox("Ошибка при установке статуса платежа");
                  return 1;
               end;
               return 0;//заканчиваю
            End;
         END;
      
         if( stat != 0 )      
            msgbox("Ошибка при установке статуса платежа");
            return 1;
         end;

         //Gurin S. 19.12.2014 C-33995-7 Валютные платежи по БГ Лайф
         if (not ((PaymentObj.dockind == PS_CPORDER) and PaymentObj.isExternal and (PaymentObj.UserTypeDocument == "S")))
             //необходимость ВК Str! Контроль по 117и закоментарен ниже, вместо него статус платежа
             if ( naVK(PaymentObj) )
                 stat = УстановитьСтатусыПлатежа(117,1);
                 // KS 28.05.2012 I-00198430 Проставлю 3 недостающих признака
                 PaymentObj.IsVO = "X"; // Платеж по валютной операции
                 PaymentObj.VO_Accept = 1; // Акцепт ВК
                 PaymentObj.VO_ReceiverBankCountry  = СтранаСубъекта(PaymentObj.ReceiverBankID); // Страна Банка
                 PaymentObj.VO_PayerBankCountry     = СтранаСубъекта(PaymentObj.PayerBankID); // Страна Банка
                 PaymentObj.VO_ReceiverBankID       = PaymentObj.ReceiverBankID;
                 PaymentObj.VO_PayerBankID          = PaymentObj.PayerBankID;
                 PaymentObj.VO_PayerBankCodeKind    = PaymentObj.PayerBankCodeKind;
                 PaymentObj.VO_ReceiverBankCodeKind = PaymentObj.ReceiverBankCodeKind;
                 PaymentObj.VO_PayerBankCode        = PaymentObj.PayerBankCode;
                 PaymentObj.VO_ReceiverBankCode     = PaymentObj.ReceiverBankCode;
             end;
         end;

         //Seleznev для FR и Интербанк фронт определяем здесь, т.к. инициализации операции для них не делается
         if ((obj.origin == PSPO_OR_CLB) or (obj.origin == PSPO_OR_FINEREADER) or (obj.origin == 2100) or (obj.origin == 3400)) 
            if (PaymentObj.dockind == PS_PAYORDER)
               SetFrontRoute(PaymentObj,string(paymentObj.dockind)+string(obj.dockind),obj.origin); 
            else
               SetFrontRoute(PaymentObj,string(paymentObj.dockind),obj.origin); 
            end;
         end;

         if ((PaymentObj.dockind == PS_PAYORDER) and (obj.origin == PSPO_OR_CLB))
            nd = GetPmTSNode(PaymentObj);
            cmd = RsdCommand("UPDATE dpmpaym_dbt SET t_opernode = ? WHERE t_paymentid = ?");
            cmd.AddParam("nd", RSDBP_IN, nd);
            cmd.AddParam("pmid", RSDBP_IN, PaymentObj.PaymentID);
            cmd.execute();
            
            if( Comparestrwithmasks("401-404", PaymentObj.ReceiverAccount) and 
                ((PaymentObj.priority == 3) or (PaymentObj.priority == 4)) and 
                  not (((subStr(PaymentObj.PayerAccount, 1, 3) == "405") or
                        (subStr(PaymentObj.PayerAccount, 1, 3) == "406") or
                        (subStr(PaymentObj.PayerAccount, 1, 3) == "407") or
                        (subStr(PaymentObj.PayerAccount, 1, 3) == "408")) and 
                       ( (subStr(PaymentObj.ReceiverAccount, 1, 3) == "423") or
                         (subStr(PaymentObj.ReceiverAccount, 1, 3) == "426") or
                         (subStr(PaymentObj.ReceiverAccount, 1, 5) == "40817") or
                         (subStr(PaymentObj.ReceiverAccount, 1, 5) == "40820") or
                         (subStr(PaymentObj.ReceiverAccount, 1, 5) == "30232") or
                         (subStr(PaymentObj.ReceiverAccount, 1, 5) == "30102") or /*zmp 25.03.2014 R-351902*/
                         (subStr(PaymentObj.ReceiverAccount, 1, 5) == "47422") or
                         (subStr(PaymentObj.ReceiverAccount, 1, 5) == "30301"))) and  //TAM 18.10.2012 I-00270767-2
                  (not Acc_IsBankrupt(PaymentObj.PayerAccount)) and
                  (not payer_acc.check_usertypeaccount("№")) ) //TAM 17.10.2014 C-32407
               PaymentObj.notes.addnote(42,"Ошибка в очередности");
               MsgBox("Ошибка в очередности - документ помещен в отвергнутые");
               PaymentObj.PaymStatus = PM_REJECTED;
               PM_SetPrimDocumentState( PaymentObj, DOCUMENT_ST_REJECTED ); 
               stat = УстановитьСтатусыПлатежа(OPR_PAYM_STATE,OPR_PM_ST_REJECT);
               return stat;//TAM 13.04.2015 R-570233-2
            end;
         end;

         if ((fgBank.is_VUZ) or (fgBank.is_GEB) or (fgBank.is_EXV))
            // А.Киселев 07.06.2011 проверяем достоверность БИК платежей от Клиент-Банк
            if ( (obj.origin == PSPO_OR_CLB) and (PaymentObj.BaseFiid==0) )
               BICReceiver = ПолучитьКодСубъекта(PaymentObj.ReceiverBankID, PTCK_BIC, err);
               
               if ( (err != 0) or (PaymentObj.ReceiverBankCode != BICReceiver) )
                  PaymentObj.PaymStatus = PM_REJECTED;
                  PM_SetPrimDocumentState( PaymentObj, DOCUMENT_ST_REJECTED ); 
                  PaymentObj.notes.AddNote(PM_NOTEKIND_DENIALGROUND,PaymentObj.notes.ReadNote(PM_NOTEKIND_DENIALGROUND,{CurDate}) + 
               " " + "БИК КО получателя не найден в справочнике.");
                  stat = УстановитьСтатусыПлатежа(OPR_PAYM_STATE,OPR_PM_ST_REJECT);
                  return stat;
               end;
               
               if ( isPartyClosed(PaymentObj.ReceiverBankID) )
                  PaymentObj.PaymStatus = PM_REJECTED;
                  PM_SetPrimDocumentState( PaymentObj, DOCUMENT_ST_REJECTED ); 
                  PaymentObj.notes.AddNote(PM_NOTEKIND_DENIALGROUND,PaymentObj.notes.ReadNote(PM_NOTEKIND_DENIALGROUND,{CurDate}) + 
               " " + "КО получателя закрыта.");
                  stat = УстановитьСтатусыПлатежа(OPR_PAYM_STATE,OPR_PM_ST_REJECT);
                  return stat;
               end;
            end;
         end;
        
         //Seleznev Установка Выгрузка во Фронт = Требуется
         //для платежей которым назначена категория "внешняя систма"
         if (IsFrontPayment(PaymentObj))
            InsertOprStatus(OPR_STATUS_FRONT, OPRSTAT_FRONT_YES);
         end;
  
         // Выбор бэк-офиса
         //!!!Seleznev БэкОфис определяется пользовательским алгоритмом
         stat = 0;//ОпределениеБэкОфиса( PaymentObj );
         if( stat == 0 ) // Системный контроль
            stat = ExecuteSysControlStep( PaymentObj );
            // Проверить, не является ли платеж целевым финансированием
            if( stat == 0 )
               if( ( PaymentObj.IsPurpose == "" ) and ( IsPurposefulPayment( PaymentObj ) ) )
                  PaymentObj.IsPurpose = "X";
               end;
            elif( stat < 0 )
               return 1;
            elif( stat > 0 )
               return 0;
            end;
         end;

         if (not ПришелИзОжидающихПоступления) 
            //DAI на предобработке рассылка в Lotus есть, повторное выставление категории и если 1 или 5
            КонтрольЦелевогоИспользоваия(PaymentObj, true, isFCOver, stat);
         end;      
         
         stat = УстановитьСтатусыПлатежа( OPR_PAYM_CABS, OPR_PM_ST_MFR_YES ); 
         if (PM_IsPaymentERC(PaymentObj) and (NaSoglERC(PrichSogl, PaymentObj, obj.origin))) /*25.03.2013 zmp C-17511 проверка на признак согласования идет выше проверки остатка*/        
            if (GetDialogFlag())
               Msgbox("Исполнение документа требует согласования|документ будет помещен в список 'Документы для согласования' тк. "+PrichSogl);
            end;
            isNaSoglERC = true;
            PaymentObj.notes.addnote(123,PrichSogl);
            stat = УстановитьСтатусыПлатежа(118,2);
         end;
         
         //VV C-22956 09.09.13          
         if (( (fgBank.is_VUZ)  and  
             ( (PaymentObj.Origin == 3300)   or
               (PaymentObj.Origin == 2100  ) or
               (PaymentObj.Origin == 19  ) ) and
             (  (PaymentObj.ShifrOper=="02") or 
               (PaymentObj.ShifrOper=="06") ) ) 
               and (NaSoglERC(PrichSogl, PaymentObj, obj.origin))) 
            if (GetDialogFlag())
                Msgbox("Исполнение документа требует согласования|документ будет помещен в список 'Документы для согласования' тк. "+PrichSogl);
            end;
            isNaSoglERC = true;
            PaymentObj.notes.addnote(123,PrichSogl);
            stat = УстановитьСтатусыПлатежа(118,2);
         end;

         //25.11.2014 Chesnokov D.S. Если документ уже был на шаге комплаенса, то повторно его не проверяем и не ставим
         //Gurin S. 29.01.2015 R-535519-2 Если на шаге комплаенса отвергли платеж, а с отвергнутых повторно перезапускаем операцию - нужно проверять
         if ((GetOprStatus(400) != 2) or (PM_IsStepExist (PaymentObj.Paymentid, 10000126, 10, "X")))
           //Chesnokov D.S. Проверяем только ИНН, если сможем его получить из ИНН/КПП
           var INN_Payer, INN_Receiver;
           stat = SplitFullINN(PaymentObj.payerINN, INN_Payer, null);
           if (stat)
             INN_Payer = PaymentObj.payerINN;
           end;
           stat = SplitFullINN(PaymentObj.receiverINN, INN_Receiver, null);
           if (stat)
             INN_Receiver = PaymentObj.receiverINN;
           end;
           //30.12.2014 Chesnokov D.S По C-36594 перенес условия на БИК и ИНН для всех проверок
           // 23.01.15 TAM R-532801
           //Gurin S. 25.06.2015 C-40459 КБК должен быть пустой
           if( not( (INN_Payer == INN_Receiver) and
                    (PaymentObj.ReceiverBankID == {OurBank}) and
                    (PaymentObj.PayerFIID == PaymentObj.ReceiverFIID) and
                    (PaymentObj.BttTICode != "")
                  )
             )
           // Golovkin 12.08.2014 C-32179 Комплаэнс-контроль
             var sql = " SELECT 1 FROM dobjatcor_dbt                       " +
                       "         WHERE t_objecttype = 3                    " +
                       "           AND t_groupid = 300                     " +
                    //LAO C-38649 27.04.15 добавляем уровень 4,5     "           AND t_attrid = 3                        " +
                       "           AND t_attrid in (3,5,6)                 " +
                       "           AND t_object = LPAD (:partyid, 10, '0') " +
                       "           AND T_VALIDTODATE = to_date('31.12.9999','dd.mm.yyyy') " ;
             sql = execSQLSelect( sql, makeArray( SQLParam( "partyid",  PaymentObj.payer ) ) );
        
             if( ( sql.movenext ) and
                 ( ( not ( ( PaymentObj.ShifrOper == "02" ) and ( PaymentObj.Origin == 3 ) ) and // Golovkin 28.08.2014 C-32663 комиссии не должны попадать на КК 
                     not ( ( PaymentObj.ShifrOper == "16" ) and ( PaymentObj.Origin == 3 ) ) and
                     not ( ( PaymentObj.ShifrOper == "17" ) and ( PaymentObj.Origin == 3 ) ) and
                         ( subStr(PaymentObj.ReceiverAccount, 1, 3) != "401"               )
                   )
                 )
                )
               stat = УстановитьСтатусыПлатежа(400,1);
             else
               //16.12.2014 Chesnokov D.S. По письму Афониной добавил проверку на Дт. = 40*
               //20.04.2014 Chesnokov D.S. C-38413 Добавил проверку по справочнику для ГЭБ, ВУЗ, Солидарность, ЭВ-Саратов
               if ((Substr(PaymentObj.PayerAccount, 1, 2) == "40") and 
                  ((fgBank.is_PRBB) or (fgBank.is_GEB) or (fgBank.is_VUZ) or (fgBank.is_EXV) or (fgBank.is_SLD))) //Chesnokov D.S. После перехода на 2031 делаю только для ПРББ
                 // 01.11.2014 Chesnokov D.S. C-33929 добавил новую проверку на комплаенс-контроль
                 if(CheckRule(PaymentObj))
                   stat = УстановитьСтатусыПлатежа(400,1);
                 end;
               end;
             end;
           end;
         end;

         // Golovkin 16.07.2014 C-22939 поиск задвоенных документов
         if((PaymentObj.ShifrOper == "06") and inList(PaymentObj.NumberPack,1003,1002,7005,8002) and _bank.is_PRBB())
            cmd = rsdCommand( " select   pm.t_valuedate "
                              "   from   dpmpaym_dbt pm, dpmrmprop_dbt rm "
                              "  where       pm.t_paymentid = rm.t_paymentid "
                              "          and pm.t_numberpack in (1003, 1002, 7005, 8002) "
                              "          and rm.t_shifroper = '06' "
                              "          and pm.t_creationdate between add_months (:date1,-3) and :date2 "
                              "          and rm.t_date = :date3 "
                              "          and pm.t_payeraccount = :payeraccount "
                              "          and pm.t_receiveraccount = :receiveraccount "
                              "          and pm.t_amount = :amount "
                              "          and rm.t_okatocode = nvl(:okatocode,chr(1)) "
                              "          and rm.t_bttticode = nvl(:bttticode,chr(1)) "
                              "          and pm.t_paymentid != :paymentid "
                              "          and rownum = 1 " );
            cmd.addParam("date1",           RSDBP_IN, Date);
            cmd.addParam("date2",           RSDBP_IN, Date);
            cmd.addParam("date3",           RSDBP_IN, PaymentObj.Date);
            cmd.addParam("payeraccount",    RSDBP_IN, PaymentObj.PayerAccount);
            cmd.addParam("receiveraccount", RSDBP_IN, PaymentObj.ReceiverAccount);
            cmd.addParam("amount",          RSDBP_IN, PaymentObj.BaseAmount);
            cmd.addParam("okatocode",       RSDBP_IN, PaymentObj.OkatoCode);
            cmd.addParam("bttticode",       RSDBP_IN, PaymentObj.bttticode);
            cmd.addParam("paymentid",       RSDBP_IN, PaymentObj.paymentid);

            rs = rsdRecordset(cmd);

            if(rs.movenext)
              PrichSogl = "Необходима проверка: найден аналогичный документ, дата " + date(rs.value(0));

              isNaSoglERC = true;

              PaymentObj.notes.addnote(123,PrichSogl);
              stat = УстановитьСтатусыПлатежа(118,2);

              if(GetDialogFlag())
                 Msgbox("Исполнение документа требует согласования|документ будет помещен в список 'Документы для согласования' тк. " + PrichSogl);
              end;
            end;
         end;

         //VV C-27271 04.03.14>>>>// utl_raw.cast_to_varchar2(t_text)
         //VDN R-448253-2 При отсутствии счета получателя - запись первого примечания с таблицы, ошибка 
         //VDN R-589617-2 Переписал обработку
        // VDN I-00579000-2 добавил сортировку, так как примечания не закрываются
         var select_text = "SELECT UTL_RAW.cast_to_varchar2 (t_text) FROM dnotetext_dbt nox WHERE nox.t_objecttype = 4 AND nox.t_notekind = 153 and NOX.T_DOCUMENTID = CONCAT('010000000', ?) ORDER BY t_validtodate DESC";         

         var select_note = RSDCommand(select_text);
             select_note.AddParam( "account_value", RSDBP_IN, PaymentObj.PayerAccount);
         var cmd_note = RSDRecordset(select_note);
         var note = ""; 

         if (cmd_note.MoveNext)
           note = cmd_note.value(0); 
         elif ( PaymentObj.receiveraccount != "" ) 
           select_note = RSDCommand(select_text);
           select_note.AddParam( "account_value", RSDBP_IN, PaymentObj.receiveraccount);
           cmd_note = RSDRecordset(select_note);
           if (cmd_note.MoveNext) note=cmd_note.value(0); end;
         end; 

         if (note != "")
           if(not(fgBank.is_GO or fgBank.is_NBS)
             and (paymentobj.origin == 2)
             and (PaymentObj.ShifrOper == "01")
             and (NaSoglERC(PrichSogl, PaymentObj, obj.origin)))
             PaymentObj.notes.addnote(153, note);          
           end;          
         end;
         //VV C-27271 04.03.14<<<<

         // VV C-24133   >> 
         if(     (fgBank.is_PRBB) 
            and (PaymentObj.PayerAmount>=90000)           
            and (  (PaymentObj.NumberPack==7005)
                or (PaymentObj.NumberPack==3005)
                or (PaymentObj.NumberPack==1002) 
                or (PaymentObj.NumberPack==1003) 
                or (PaymentObj.NumberPack==8002) ) 
            and (  (PaymentObj.ShifrOper=="02") or 
                (PaymentObj.ShifrOper=="06") ) )
                   stat = УстановитьСтатусыПлатежа(118,2); 
         end;           
         //VV C-24133   << 

         // 30.01.2013 Golovkin I-00319590 
         if( (fgBank.is_EXV) and 
             ( (PaymentObj.Origin == 3300) or
               (PaymentObj.Origin == 19  ) ) and
               (NaSogl(PrichSogl, PaymentObj, obj.origin) ))
            if (index(PrichSogl,err_payacc_J))
               if (GetDialogFlag())
                  Msgbox("Исполнение документа требует согласования|документ будет помещен в список 'Документы для согласования' тк. "+PrichSogl);
               end;
               PaymentObj.notes.addnote(123,PrichSogl);
               stat = УстановитьСтатусыПлатежа(118,2);
            end;
         end;
        
         if ((not ПришелИзОжидающихПоступления) and
             (isFCOver          != 1)           and // KS 29.02.2012 Если это нецелевой платёж за счёт овердрафта, то должно уходить на ожидающие поступлений
             (GetOprStatus(400) != 1)           and // Golovkin C-32589 27.08.2014 исключаем проверку остатка для платежей идущих на комплаэнс контроль
             (GetOprStatus(118) != 2)) // KS 06.08.2012 C-12598 Если уже на согласовании, то проверять на остаток не надо
            stat = PS_CheckAccRest( PaymentObj, ID_Operation, ID_Step );
            if (stat != 0)
               PaymentObj.FreeReserve( PaymentObj.PayerAccount, CHAPT1, PaymentObj.PayerFIID );
               return 1;
            end;
         end; 
         
         // zmp 16.08.2012 I-00237232-2 добавил условие (GetOprStatus(118)==2) and (ПришелИзОжидающихПоступления)
         //TAM 22.08.2012 I-00240422-2 - эти условия надо убрать и вернуть как было раньше, так как если статус проставился на первом шаге предобработки,
         // то на втором шаге он игнорируется, но автоматом по умолчанию проставляется значение 1 (не требуется) дя сегмента согласования. И поэтому доки минуют этот шаг.
         if (not isNaSoglERC) 
            If (NaSogl(PrichSogl, PaymentObj, obj.origin, PrichSogl153)) //Seleznev HD A40839 //Тихомиров Анализ на Происхождение проведем позже I-077194
               if (GetDialogFlag())
                  Msgbox("Исполнение документа требует согласования|документ будет помещен в список 'Документы для согласования' тк. "+PrichSogl + " " + PrichSogl153);
               end;
               //VDN C-32938 04.09.2014 Если сработала только проверка для 153-го примечания, а остальные нет, то 123 не заполняем
               if ( PrichSogl != "" ) PaymentObj.notes.addnote( 123, PrichSogl ); end;
               stat = УстановитьСтатусыПлатежа(118,2);
               if ( fgBank.is_VUZ )
                  stat = УстановитьСтатусыПлатежа(OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_NOTCONTROL);
               end;
               var datanote, _stat;
               //Gurin S. 01.10.2013 C-23747-6
               if (PaymentObj.Origin == 2) 
                  _stat = ExecMacroFile ("Send_Lotus.mac", "SendLetterSogl", PaymentObj.PaymentID, datanote);
                  if (not _stat) PaymentObj.notes.addnote(160,datanote); end;
               end;
            end;
         end;
         if (NaSogl_unkvit(PrichSogl, PaymentObj)) //проверка наличия несквитованных платежей с приоритетной очередностью
            if (GetDialogFlag())
               Msgbox("Исполнение документа требует согласования|документ будет помещен в список 'Документы для согласования' тк. "+PrichSogl);
            end;
            PaymentObj.notes.addnote(123,PrichSogl);
            stat = УстановитьСтатусыПлатежа(118,2);  
            if ( fgBank.is_VUZ )
               stat = УстановитьСтатусыПлатежа(OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_NOTCONTROL);           
            end;   
         end;

         If ((valtype(StatBank) != V_UNDEF) and(StatBank != ""))
            if (GetDialogFlag())
               Msgbox("Исполнение документа требует согласования|документ будет помещен в список 'Документы для согласования' тк. Банк получателя имеет статус: " + StatBank);
            end;
            PaymentObj.notes.addnote(123,"Статус банка получателя " + StatBank);
            stat = УстановитьСтатусыПлатежа(118,2);  
            if ( fgBank.is_VUZ )
               stat = УстановитьСтатусыПлатежа(OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_NOTCONTROL);
            end;
         End;

         // SDA освобождаем резерв для документов пошедших на согласование или ожидающих поступления
         if ((GetOprStatus( OPR_PAYM_INDEX ) == OPR_PAYM_ST_INDEX_WAIT))
            PaymentObj.FreeReserve( PaymentObj.PayerAccount, CHAPT1, PaymentObj.PayerFIID );
            stat = УстановитьСтатусыПлатежа(   OPR_PAYM_DO,   OPR_PM_ST_PREP,
                                               OPR_PAYM_CABS, OPR_PM_ST_MFR_YES ); 
         else
            stat = УстановитьСтатусыПлатежа(OPR_PAYM_DO, OPR_PM_ST_ENTER);
         end;

         if (stat !=0)
            return stat;
         end;

         //SDA дата значения устанавливается текущим операционным днем 
         if ( fgBank.is_PRBB )
            PaymentObj.ValueDate = {curdate};
         end;  
        
         if (((PaymentObj.dockind == PS_PAYORDER) and (PaymentObj.PaymentKind == "П") and (GetOprStatus( OPR_PAYM_INDEX ) == OPR_PAYM_ST_INDEX_NO))) 
            // EVG Для ЭВ и ВУЗ такое изменение ДПП не требуется 
            if ( not fgBank.is_EXV() and not fgBank.is_VUZ() )
               //SDA для почтовых документов ДПП устанавливается следующим рабочим днем 
               PaymentObj.ValueDate = 
               PaymentObj.OutTransferDate = GetDateAfterWorkDays ( {curdate}, 1); //на следующий рабочий день 
            end;
           
            if ( fgBank.is_EXV )
               POSTA_ExecToday = true; /*SDA - значение по-умолчанию*/
               GetRegistryValue( "PRBB\\МЕЖБАНКОВСКИЕ РАСЧЕТЫ\\ДПП_ТЕКУЩИМ_ДНЕМ\\ПОЧТОВЫЕ", V_BOOL, POSTA_ExecToday, err );
               if ( err != 0 )
                  POSTA_ExecToday = false;
               end;
               if ( not POSTA_ExecToday )
                  PaymentObj.OutTransferDate = GetDateAfterWorkDays ( PaymentObj.ValueDate, 1); //на следующий рабочий день
               end;
            end; 
         end;
/* 
     else
         // КАРТ - Да
         if( stat == 0 )
            if(PaymentObj.origin == 10000)
               stat = УстановитьСтатусыПлатежа( OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_2 );
            elif(PaymentObj.origin==10001)
               stat = УстановитьСтатусыПлатежа( OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_1 );
            elif(PaymentObj.origin==10002)
               stat = УстановитьСтатусыПлатежа( OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_WP );
            end;
         end;
      end;
*/
      //Lavrenov: Автоматическое генерирование ДО для счетов 423* и 426* 
      if((PaymentObj.dockind == 201) or (PaymentObj.dockind == 202))
         if( (substr(PaymentObj.PayerAccount,1,3)=="423") or (substr(PaymentObj.PayerAccount,1,3)=="426") )
            cmd = RsdCommand( "begin ? := usr_ins_sfcontr(?,?); end;" );
            cmd.addParam( "ret_val", V_INTEGER, RSDBP_OUT);
            cmd.AddParam("", RSDBP_IN, PaymentObj.PayerAccount);
            cmd.AddParam("", RSDBP_IN, PaymentObj.PayerFiid);
            cmd.Execute();
            ret_val = cmd.Param("Ret_Val").value;
            if(ret_val < 0)
               msgbox("Ошибка ("+Ret_Val+") при генерации договора обслужавания для счета: "+PaymentObj.PayerAccount+"!");
            end;
         end;
      end;
   end;

   //RR 24.12.2013 C-26027 
   if (fgBank.is_VUZ)
     if (    (PaymentObj.shifroper == "01") 
         and ( (  (PaymentObj.TaxAuthorState) == "" )
               or (    (substr(PaymentObj.receiveraccount,1,3) != "401" )
                   and (substr(PaymentObj.receiveraccount,1,3) != "402" )
                   and (substr(PaymentObj.receiveraccount,1,3) != "403" )
                   and (substr(PaymentObj.receiveraccount,1,3) != "404" ))) )
       if (CheckUSRType_For_7777TerrCode(PaymentObj.PayerAccount)) 
         stat = УстановитьСтатусыПлатежа(OPR_PAYM_TERR, OPR_PAYM_ST_TERR_NEED,
                                         OPR_PAYM_DO, OPR_PM_ST_PREP );
         CreateFMOperation(PaymentObj);
         return stat;
       end; 
     end;

   //если отвергли, сбросить ручную обработку, чтобы можно было после перезапуска запланировать предобработку
   if (GetOprStatus(OPR_PAYM_STATE)==OPR_PM_ST_REJECT) 
     stat = УстановитьСтатусыПлатежа( OPR_PAYM_MANUAL, OPR_PAYM_ST_MANUAL_NOTNEED );
   end;
  end; 
  
   return stat;
END;

macro CheckStepAction ( mes )
   //Gurin S. 09.04.2013 C-18203-6 
   if (mes == OP_REJECT_STEP)
      var reason = "";
      if (PaymentObj.Origin == USR_PAYMENT_OR_ABBYY_FC)
         getstring(reason, "Введите причину отвержения шага:");
         if (reason == "") 
            return 1; 
         else
            PaymentObj.notes.addnote(42,reason);
            PaymentObj.notes.save(true); //SCR #194241
         end;
      end;
   end;
   return 0;
End;

MACRO PostStepAction( message,     /* 1 - выполнение шага; 2 - откат шага;   */
                      errTrn,      /* статус выполнения шага. Если параметр  */
                                   /* не равен 0, произошла ошибка           */
                      primDoc,     /* указатель на первичный документ        */
                      ID_Oper,     /* внутренний идентификатор операции      */
                      Number_Step, /* Номер шага операции (из настроек)      */
                      KindOper,    /* номер вида операции                    */
                      KindDoc,     /* номер вида первичного документа        */
                      KindStep,    /* вид шага операции                      */
                      ID_Step )    /* внутренний идентификатор шага операции */
   
    var cmdobj; // KS 13.06.2012
    private var logquery;

    if (message == 2)
        if (PaymentObj.origin==2)
            del_turnpay(PaymentObj.paymentID);
        end;  
        return PaymentObj.FreeReserve( PaymentObj.PayerAccount, CHAPT1, PaymentObj.PayerFIID );
    end;
    // KS 13.06.2012 I-00198430 И валюта
    if(( message == OP_EXECUTE_STEP ) and (errTrn==0))
        cmdobj = RSDCommand(
                          "update   dpmcurtr_dbt t " +
                          "   set   t_fiid = ?" +
                          " where   t_paymentid = ? "
                          );
        cmdobj.addparam("fiid", RSDBP_IN, PaymentObj.BaseFIID);
        cmdobj.addparam("pmid", RSDBP_IN, PaymentObj.paymentID);
        cmdobj.Execute;      
        //LAO платеж прошел, чистим очередь в КР
        if (PaymentObj.origin==2)
            del_turnpay(PaymentObj.paymentID);
        end;  
    end;

    //Jushmanov 2014-02-20 C-19151
    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(ID_Oper) != V_INTEGER) and (valtype(ID_Oper) != V_STRING)) ID_Oper = 0; end;
        if ((valtype(ID_Step) != V_INTEGER) and (valtype(id_Step) != V_STRING)) ID_Step = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + ID_Oper + " AND t_id_step = " + ID_Step;
        ExecSQL(logquery, null, false);
    end;

    return 0;
END;


/* -----------------------------------------------------------------------------
   Массовое выполнение шага "Предобработка клиентского платежа"
   ----------------------------------------------------------------------------- */

/* -----------------------------------------------------------------------------
   Предтранзакционные действия 
   Все проверки отражаются только на временной таблице dpmprepro_tmp,
   никакие изменения в БД не делаются
   ----------------------------------------------------------------------------- */
macro PrepMassExecuteStep() 
   var stat:integer = execStoredFunc( "RSI_PS_POPREPRO.MassPreprocessPrepare", V_INTEGER );
   if( not stat )
      stat = PM_MassPreproPrepare();
   end;
   if( stat )
      MemoryError( stat );
   end;
   return stat;
end;

/* -----------------------------------------------------------------------------
   Транзакционные действия 
   Всё, что напроверяли, отражается на статусах документа, платежа, операции 
   ----------------------------------------------------------------------------- */
macro MassExecuteStep()
   var stat:integer = execStoredFunc( "RSI_PS_POPREPRO.MassPreprocessExecute", V_INTEGER );
   if( not stat )
      stat = PM_MassPreproExecute();
   end;
   if( stat )
      MemoryError( stat );
   end;
   return stat;
end;

/* -----------------------------------------------------------------------------
   Действия после транзакции
   Заполняем лог обработки платежей для отчета 
   ----------------------------------------------------------------------------- */
macro PostMassExecuteStep()
   var stat:integer = execStoredFunc( "RSI_PM_PREPRO.MassFillLog", V_INTEGER );
   if( stat )
      MemoryError( stat );
   end;
   return stat;
end;