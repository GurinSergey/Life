//------------------------------------------------------------------------------
// Перевод поручений на п/п/к валюты на категории учета
//------------------------------------------------------------------------------
// KS 16.12.2014 Адаптация под 31ю сборку. Перенос пользовательских доработок
import BankInter, PSInter, CTInter, globals, "payconst.mac", likepy;

//------------------------------------------------------------------------------
// Первичный документ для категорий
//------------------------------------------------------------------------------
CLASS (RsbBuyCurrencyOrder) BuyCurOrder_FirstDoc( PaymentObj )

//------------------------------------------------------------------------------
// данные класса
//------------------------------------------------------------------------------
  // Допустимые базис ролей
  PRIVATE VAR FIRoleB:TArray = makeArray( FIROLE_FIREQ, //ФИ требования по сделке
                                          FIROLE_FICOM, //ФИ обязательства по сделке
                                          FIROLE_EXCHFI //ФИ торгов 
                                        );

  VAR Error = 0, kind, id, cmd, rs;

  var ConvType;
  const ConvType_Buy     = 502; //покупка
  const ConvType_Cell_tr = 501; //продажа с транзитного счета   
  const ConvType_Cell    = 500; //продажа с текущего счета
  const ConvType_Cell_cr = 503; //конвертация при гашении кредита


//------------------------------------------------------------------------------
// вернуть параметр второго рода
//------------------------------------------------------------------------------
  MACRO GetParametr( ParmKind, OperDate, CatCode, FIRole )
     VAR Parametr = -1;

     if( ParmKind == MC_TYPE_PARAMETR_DOCKIND       )
        return Payment.DocKind;
     elif( ParmKind == MC_TYPE_PARAMETR_DOCID         )
        return PaymentID;
     elif( ParmKind == MC_TYPE_PARAMETR_DEPARTMENT    )
       return {OperDprtNode};
     elif( ParmKind == MC_TYPE_PARAMETR_OWNER         ) 
        return Payment.Payer;
     elif( ParmKind == MC_TYPE_PARAMETR_CONTRACTOR    )
        return /*Payment.Payer*/{OurBank};
     elif( (ParmKind == MC_TYPE_PARAMETR_FIID) OR
           (ParmKind == MC_TYPE_PARAMETR_PAYCURRENCY) )
         if( FIRole == FIROLE_FIREQ  )
         return Payment.ReceiverFIID;
       elif( FIRole == FIROLE_FICOM  )
         return Payment.PayerFIID;
       elif( FIRole == FIROLE_EXCHFI )
         return ExchangeFIID;
       end;
     end;

     return Parametr;
  END;

//------------------------------------------------------------------------------
// параметры шаблона
//------------------------------------------------------------------------------

    MACRO GetParametrTemplate ( ObjectID, Classificator, OperDate, FIRole )         
       VAR Parametr = -1;
       if (ObjectID==5000) 
          return ConvType;
       end;
       return Parametr;
    END;

//------------------------------------------------------------------------------
// основная роль фИ
//------------------------------------------------------------------------------
    MACRO GetBasisFIRole( FIRole )
       return FIRole;
    END;

//------------------------------------------------------------------------------
// вернуть весь базис ролей
//------------------------------------------------------------------------------
    MACRO GetFIRoleBArray()
       return FIRoleB;
    END;

//------------------------------------------------------------------------------
// найти/открыть счет
//------------------------------------------------------------------------------
   MACRO FindAndOpenAccount( Category, isMass, Open_Date, FIRole )
      var opendate:Date = {curDate};
      
      if ( ValType(Open_Date) == V_DATE )
         opendate = Open_Date;
      end;

      return MC_FindAndOpenAccount( Category, this, opendate, isMass, MC_OPENACC_CREATE, null, null, null, null, null, FIRole );
   END; 

//------------------------------------------------------------------------------
// Корректировка счета
//------------------------------------------------------------------------------
   MACRO CorrectAccount( account, accblnc, ORScheme, categ, templ, accdoc, OperDate )
      return true;
   END;

//------------------------------------------------------------------------------
// конструктор
//------------------------------------------------------------------------------
    InitRsbBuyCurrencyOrder( PaymentObj.DocumentID );
    Kind = Payment.DocKind;
    Id   = Payment.PaymentID;

    if (PaymentObj.dockind == PS_BUYCURORDER)
       cmd = RSDCommand(
                        "select   ac.t_type_account, cp.t_convoper " +
                        "  from   dps_bcord_dbt cp, dpmpaym_dbt pm, daccount_dbt ac " +
                        " where       pm.t_paymentid = cp.t_paymentid " +
                        "         and pm.t_payeraccount = ac.t_account(+) " +
                        "         and pm.t_fiid = ac.t_code_currency(+)  " +
                        "         and ac.t_chapter(+) = 1 " +
                        "         and pm.t_paymentid = ? "
                       );

       cmd.addparam("pmid", RSDBP_IN, PaymentObj.PaymentID);
       rs = RSDRecordset(cmd);

       if (rs.MoveNext);
          if (rs.value("t_convoper") == 1) /*покупка*/
             ConvType = ConvType_Buy;
          elif (rs.value("t_convoper") == 3) /*конверсия*/
             ConvType = ConvType_Buy;
          elif (rs.value("t_convoper") == 2) /*продажа*/
             if ( index(rs.value("t_type_account"), "Y") != 1) /*с транзитного счета*/
                ConvType = ConvType_Cell_tr;
             elif ( index(rs.value("t_type_account"), "X") != 1) /*с текущего счета*/
                ConvType = ConvType_Cell;
             end;
          else
             ConvType = ConvType_Buy;
          end;
       end;
    end;


END;
//------------------------------------------------------------------------------
