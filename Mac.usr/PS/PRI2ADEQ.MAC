/*SDA 18.03.2014 добавлено условие отбора только по открытым счетам */
/*SDA 18.03.2014 - ошибка подсчета суммы документов К2 */

import PSInter, globals, likepy, oralib, CTInter, FIInter, CurrInter;
import "fg_Life_parm.mac";

file op (person);

// В отчет попали разновалютные счета - не нужно выводить итоги 
private var РазновалютныеСчета = false;
private const fgBank = fg_life_subject( {OurBank} );
//-----------------------------------------------------------------------
//
// Отчет о сравнении остатков внеб.счетов и сумм документов картотеки 2
//
//-----------------------------------------------------------------------

//-----------------------------------------------------------------------
// Печать заголовка
//-----------------------------------------------------------------------
MACRO PrintHeader( Номер_картотеки, Глава, ДатаОтчета )
[                                                 #

         ВЕДОМОСТЬ РАСХОЖДЕНИЯ ОСТАТКОВ КАРТОТЕКИ # И БАЛАНСОВЫХ СЧЕТОВ ГЛАВЫ #
                                                  на #

┌──────────────────────────────┬──────────────────────┬──────────────────────┬──────┬────────────────────────┬──────────────────────┬─────────────────────────┐
│                              │   Сумма находящихся  │   Текущий остаток    │      │                        │     Расхождение      │     Балансовый счет     │
│        Счет картотеки        │ докум.на счете карт. │  на внебалан. счете  │ Вал. │   Внебалансовый счет   │   суммы и остатка    │     корреспонденции     │
├──────────────────────────────┴──────────────────────┴──────────────────────┴──────┴────────────────────────┴──────────────────────┴─────────────────────────┤
] ({Name_Bank}:r, Номер_картотеки:l, Глава, ДатаОтчета:m );
END;

//-----------------------------------------------------------------------
// Печать счета
//-----------------------------------------------------------------------
MACRO PrintAccount(Oper,Счет,ВБСчет,ВалютаВБСчета, Балансовый_счет,ОстатокКартотеки,ОстатокВБ,LinkedAccountNotFound)
  // LinkedAccountNotFound - Признак ошибки при поиске 
  //                           "привязанного" внебалансового 
  //                           счет картотеки
  var Acc = IfThenElse( Счет == "", Счет, string( Счет:f ) );
if( LinkedAccountNotFound == 0 )
[│ #                            │                     #│                     #│ #    │#                       │                     #│ #                       │]
(Acc:l, ОстатокКартотеки:a:r, ОстатокВБ:a:r, ВалютаВБСчета, ВБСчет:l:f, (ОстатокКартотеки-ОстатокВБ):a:r, Балансовый_счет);
else                                                                                                                                                            
[│ #                            │                     #│не найден "привязанный" внебалансовый счет картотеки                                                   │]
(Acc:l, ОстатокКартотеки:a:r, Балансовый_счет);
end;
// ├──────────────────────────────┼──────────────────────┼──────────────────────┼──────┼────────────────────────┼──────────────────────┼─────────────────────────┤
//[+------------------------------+----------------------+----------------------+-------------------------+----------------------+-------------------------+];
END;

//-----------------------------------------------------------------------
// Печать нового опера
//-----------------------------------------------------------------------
MACRO PrintNewOper(Oper, isFirst )
  var NameOper;

  op.Oper = Oper;
  if( not GetEQ(op) ) NameOper = "";
  else                NameOper = op.Name;
  end;
  if( not isFirst )
  [├──────────────────────────────┴──────────────────────┴──────────────────────┴──────┴────────────────────────┴──────────────────────┴─────────────────────────┤];
  end;
  [│     Операционист: ##### ###########################################                                                                                         │]
  ( Oper, NameOper );
  [├──────────────────────────────┬──────────────────────┬──────────────────────┬──────┬────────────────────────┬──────────────────────┬─────────────────────────┤]; 
                                                                                                                 
END;

//-----------------------------------------------------------------------
// Печать итога по оперу
//-----------------------------------------------------------------------
MACRO PrintItogOper(Oper, ОстатокКартотеки,ОстатокВБ)
  if( РазновалютныеСчета )
    return 0;
  end;
  [│                              │                      │                      │      │                        │                      │                         │
   │Итого по операционисту #####  │######################│######################│      │                        │######################│                         │
  ]
  (Oper:r,  ОстатокКартотеки:a:r, ОстатокВБ:a:r, (ОстатокКартотеки-ОстатокВБ):a:r);
  return 0;
END;

//-----------------------------------------------------------------------
// Печать итога
//-----------------------------------------------------------------------
MACRO PrintItog(ОстатокКартотеки, ОстатокВБ)                                                                                            
  if( РазновалютныеСчета )
  [└──────────────────────────────┴──────────────────────┴──────────────────────┴──────┴────────────────────────┴──────────────────────┴─────────────────────────┘];
    return 0;
  end;
  [├──────────────────────────────┼──────────────────────┼──────────────────────┼──────┼────────────────────────┼──────────────────────┼─────────────────────────┤
   │Итого по всем операционистам  │######################│######################│      │                        │######################│                         │
   └──────────────────────────────┴──────────────────────┴──────────────────────┴──────┴────────────────────────┴──────────────────────┴─────────────────────────┘
  ]
  ( ОстатокКартотеки:a:r, ОстатокВБ:a:r, (ОстатокКартотеки-ОстатокВБ):a:r);
  return 0;
END;

//-----------------------------------------------------------------------------
// Подсчет кол-ва документов
//-----------------------------------------------------------------------------
PRIVATE MACRO CountAdequacy( rs:RsdRecordset ):integer
 var mcount:integer = 0;
 if( (rs) AND (rs.MoveNext()) )
   mcount = rs.value(0);
 end;
 return mcount;
END;

PRIVATE MACRO СуммаДокументовК2ПоСчету( Account:string, FIID:integer ):money
/*
  var query:string = " select NVL( SUM(t_FutureBaseAmount), 0 ) "
                       " from dpmpaym_dbt " +
                      " where t_PayerAccount = :Account " +
                        " and t_BaseFIID     = :FIID    " +
                        " and t_PaymStatus   = 2000     ";/*PM_I2PLACED*/
*/
/*SDA 18.03.2014 - ошибка подсчета суммы документов К2 */



  var query:string = " select NVL( SUM(T_FUTUREPAYERAMOUNT), 0 ) "
                       " from dpmpaym_dbt " +
                      " where t_PayerAccount = :Account " +
                        " and t_BaseFIID     = :FIID    " +
                        " and t_PaymStatus   = 2000     ";/*PM_I2PLACED*/

  var params:TArray = makeArray( SQLParam( "Account" , Account   ), 
                                 SQLParam( "FIID"    , FIID      ) ); 
  var rs:RsdRecordset = execSQLselect( query, params, true );
  if( rs AND rs.MoveNext() ) //                      
    return money( rs.Value(0) );                             
  end;
  return $0.0;
END;

PRIVATE MACRO СуммаДокументовК2ПоСчетам( Account:string, FIID:integer ,Client:integer ):money

  var query:string = " select NVL( SUM(T_FUTUREPAYERAMOUNT), 0 ) "
                       " from dpmpaym_dbt " +
                      " where t_Payer        = :Client " +
                        " and t_BaseFIID     = :FIID    " +
                        " and t_PaymStatus   = 2000     ";/*PM_I2PLACED*/

  var params:TArray = makeArray( SQLParam( "Client" , Client   ), 
                                 SQLParam( "FIID"    , FIID      ) ); 
  var rs:RsdRecordset = execSQLselect( query, params, true );
  if( rs AND rs.MoveNext() ) //                      
    return money( rs.Value(0) );                             
  end;
  return $0.0;
END;

//-----------------------------------------------------------------------------
// Печать самого отчета
//-----------------------------------------------------------------------------
MACRO PrintAdequacyRest( mapVal:PSRepMap )
  debugbreak;
  // Данные для отчета
  var DateRep  :date     = MapVal.Value( "DateRep" );
  var Account  :string   = MapVal.Value( "Account" );
  var FIID     :integer  = MapVal.Value( "FIID"    );
  var DepNum   :integer  = MapVal.Value( "DepNum"  );
  var NodeNum  :integer  = MapVal.Value( "NodeNum" );
  var OnlyErr  :bool     = MapVal.Value( "OnlyErr" );

  // Переменные
  var mAccount    :string  = ""; /*Счет                                 */
  var mFIID       :integer = -1; /*Валюта счета                         */
  var mDocSum     :money   = $0.0; /*Сумма документов по счету            */
  var mOper       :integer =  0; /*Операционист счета                   */
  var mNotBalAcc  :string  = ""; /*Внебалансовый счет                   */
  var mNotBalFI   :string  = ""; /*Код валюты внебалансового счета      */
  var mRest       :money   = $0.0; /*Остаток на внебалансовом счете       */

  var mDocAllSum  :money   = $0.0; /*Сумма документов по счетам       */

  if( Account == "" )
    Account = "*";
  end;
  
//  var query:string = " select acc.t_account, acc.t_code_currency, acc.t_oper, lnknbal.t_account, lnknbal.t_code_currency "
/*SDA 19.03.2014 - в ВУЗ-е К2 ведется ко всем счетам клиента на одном внебалансовом 90902 */
  var query:string = " select acc.t_account, acc.t_code_currency, acc.t_oper, lnknbal.t_account, lnknbal.t_code_currency, acc.t_client "
                       " from dobjlink_dbt lnk, daccount_dbt lnknbal, daccount_dbt acc " +
                      " where lnk.t_objecttype          = :LnkObjType " +
                        " and lnk.t_groupid             = :LnkGroupID " +
                        " and lnk.t_attrtype            = :LnkAttrType " +
                        " and lnknbal.t_chapter         = to_number(substr(lnk.t_attrid, 1, 2)) " +
                        " and lnknbal.t_account         = substr(lnk.t_attrid, 10) " +
                        " and lnknbal.T_code_currency   = to_number(substr(lnk.T_ATTRID, 3, 7)) "+
                        " and lnknbal.t_department      = :LnkDep " +
                        " and acc.t_account             = substr(lnk.t_objectid, 10) " +
                        " and acc.t_chapter             = to_number(substr(lnk.t_objectid, 1, 2)) " +
// KS 06.06.2014 I-00493040
//                        " and acc.t_code_currency       = to_number(substr(lnk.t_objectid, 3, 7)) " +
                        " and TO_CHAR (acc.t_code_currency, 'FM0xxxxxx') = substr(lnk.t_objectid, 3, 7) " +
                        " and acc.t_type_account not like '%' || 'П' || '%' " +
                        " and acc.t_department          = :AccDep "; 
  if( NodeNum > 0 )
    query = query +     " and acc.t_branch              = :AccNode "; 
  end;
  query = query +       " and " + ConvertMaskToSQLFormat( Account, "acc.t_account" );
  if( FIID > -1/*ALLFININSTR*/)
    query = query +     " and acc.t_code_currency       = :FIID ";
  end;
/*SDA 18.03.2014 добавлено условие отбора только по открытым счетам */
  query = query +       " and acc.T_OPEN_CLOSE = chr(0) "; 

  query = query +       " order by acc.t_oper, acc.t_code_currency, acc.t_account";

  var select_count:string = "select count(*) from ( " + query + " )";

  var params:TArray = makeArray( SQLParam( "LnkObjType"  , OBJTYPE_ACCOUNT      ), 
                                 SQLParam( "LnkGroupID"  , OBJROLE_ACC_I2OBACC  ), 
                                 SQLParam( "LnkAttrType" , OBJTYPE_ACCOUNT      ),
                                 SQLParam( "LnkDep"      , DepNum               ),
                                 SQLParam( "AccDep"      , DepNum               ) ); 
  if( NodeNum > 0 )
    params[params.size] =        SQLParam( "AccNode"     , NodeNum              );
  end;

  if( FIID > -1 )
    params[params.size] =        SQLParam( "FIID"        , FIID                 );
  end;

  var rs:RsdRecordset = execSQLselect( query, params, true );
  var count          = 0,/*Счетчик счетов отчета                                */ 
      countDiv       = 0,/*Счетчик счетов, по которым есть расхождения          */
      mSaveOper      = 0,/*Текущий операционист счета                           */
      OperDocSum     = 0,/*Сумма находящихся документов по операционисту        */ 
      OperRest       = 0,/*Сумма остатков по операционисту                      */
      AllOperDocSum  = 0,/*Сумма находящихся документов по всем операционистам  */ 
      AllOperRest    = 0;/*Сумма остатков по всем операционистам                */

  var mcount:integer = CountAdequacy( execSQLselect( select_count, params, true ) );
  var err = 0;

  if( rs AND (mcount > 0) )

    PrintHeader( 2, 3, DateRep );

    InitProgress( mcount + 1, NULL, "Сравнение остатков" );

    while( rs.moveNext() )

      if( ( mFIID > -1 ) and ( mFIID != rs.value(1) ) )
        РазновалютныеСчета = true;
      end;

      mNotBalAcc = rs.value(3);

      mDocSum    = СуммаДокументовК2ПоСчету( rs.value(0), rs.value(4) );


      if( rs.value(4) == 0/*NATCUR*/ )  
        mRest    = Abs( RestA( rs.value(3), {curdate}, {curdate}, 3/*CHAPT3*/) );
      else
        mRest    = Abs( RestAC( rs.value(3), rs.value(4), {curdate}, {curdate}, 3/*CHAPT3*/) );
      end;
                                                                                        
//      if( ( not OnlyErr ) or ( OnlyErr and ( ( mDocSum != mRest ) or ( strlen( mNotBalAcc ) == 0 ) ) ) )
/*SDA 19.03.2014 ошибка сравнения  mDocSum != mRest */
      var Razn =  ((int(abs(mDocSum - mRest))*100) > 0);

     if ((fgBank.is_VUZ ) and (Razn))
     /*SDA 19.03.2014 - в ВУЗ-е К2 ведется ко всем счетам клиента на одном внебалансовом 90902 */
        mDocAllSum  = СуммаДокументовК2ПоСчетам( rs.value(0), rs.value(4), rs.value(5) );
        Razn =  ((int(abs(mDocAllSum - mRest))*100) > 0);
     end;

      if( ( not OnlyErr ) or ( OnlyErr and ( ( Razn ) or ( strlen( mNotBalAcc ) == 0 ) ) ) )
        mAccount   = IfThenElse( mAccount != rs.value(0), rs.value(0), "" );
        mFIID      = rs.value(1);
        mOper      = rs.value(2);
        mNotBalFI  = ПолучитьКодФинИн( rs.value(4), err );

        if( mDocSum != mRest )
          countDiv = countDiv + 1;
        end;

        if( (count > 0 ) AND ( mSaveOper != mOper) )
          PrintItogOper( mSaveOper, OperDocSum, OperRest );
        end;

        if( mSaveOper != mOper )                    
          PrintNewOper( mOper, IfThenElse( mSaveOper == 0, true, false ) );
          mSaveOper  = mOper;
          OperDocSum = 0;
          OperRest   = 0;
        end;

        OperDocSum = OperDocSum + mDocSum;
        OperRest   = OperRest   + mRest;

        PrintAccount( mOper, mAccount, mNotBalAcc, mNotBalFI, substr( mNotBalAcc, 1, 5 ), mDocSum, mRest, mNotBalAcc == "" );

        if( count == ( mcount - 1 ) )
          PrintItogOper( mOper, OperDocSum, OperRest );
        end;

        AllOperDocSum = AllOperDocSum + mDocSum;
        AllOperRest   = AllOperRest   + mRest;

//        UseProgress( count );
//        count = count + 1;

      end;
        UseProgress( count );
        count = count + 1;

    end;

    PrintItog( AllOperDocSum, AllOperRest );

    RemProgress();
  end;

  if( countDiv == 0 )
    MsgBox( "Расхождений между остатками главы 3 и данными картотеки 2 не найдено" );
    return 1;
  end;

  return 0;
  
ONERROR(x)
  
  MsgBox( "Ошибка |" + x.Message );

END;