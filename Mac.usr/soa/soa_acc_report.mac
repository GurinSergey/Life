import RSD,"soa_core.mac";
import PTInter;



class Taccount_info 
        var  START_DATE      :  DATE   ;
        var  ACCTRNID        :  INTEGER; 
        var  PAYMENTID       :  INTEGER; 
        var  PRIORITY        :  INTEGER;        
        var  ACCOUNT_PAYER   :  STRING ;
        var  ACCOUNT_RECEIVER:  STRING ;  
        var  CODEINACCOUNT   :  STRING ;
        var  FIID_PAYER      :  STRING ;
        var  FIID_RECEIVER   :  STRING ;
        var  AMOUNTD         :  MONEY  ;
        var  AMOUNTK         :  MONEY  ;
        var  DIRECTION       :  INTEGER;
        var  GROUND          :  STRING ;
        var  NUMB_DOCUMENT   :  STRING ;
        var  DOCKIND         :  INTEGER;
        var  PAYMENTKIND     :  STRING ;
        var  PAYERBANKNAME   :  STRING ;
        var  BANKCODEPAYER   :  STRING ;
        var  PAYERINN        :  STRING ;
        var  PAYERKPP        :  STRING ;
        var  PAYERCORRACCNOSTRO :  STRING ;
        var  PAYERNAME       :  STRING   ;
        var  RECEIVERBANKNAME:  STRING   ;
        var  BANKCODERECEIVER:  STRING ;
        var  RECEIVERINN     :  STRING   ;
        var  RECEIVERKPP     :  STRING   ;
        var  RECEIVERCORRACCNOSTRO :  STRING   ;
        var  RECEIVERNAME    :  STRING   ;
        var  time_date       :  STRING   ;
        var  time_step       :  STRING   ;
        var  step            :  STRING   ;
end;

macro get_acctrn_list(account,dateperiod)

var paym_info =Taccount_info;
var list_account_info= tArray();
var parm = tArray();
var cmd;
var sql = "SELECT   acctrn.T_DATE_CARRY T_START_DATE, "+
        " acctrn.T_ACCTRNID, "+
        " paym.T_PAYMENTID, "+
        " prop.T_PRIORITY, "+
        " acctrn.T_ACCOUNT_PAYER, "+
        " acctrn.T_ACCOUNT_RECEIVER, "+
        " FININST.T_CODEINACCOUNT, "+
        " acctrn.t_fiid_payer t_fiid_payer, "+
        " acctrn.t_fiid_receiver t_fiid_receiver, "+
        " NVL (acctrn.T_SUM_PAYER, 0.0) AS T_AMOUNTD, "+
        " NVL (acctrn.T_SUM_RECEIVER, 0.0) AS T_AMOUNTK, "+
        " DECODE (acc.T_ACCOUNT, acctrn.T_ACCOUNT_PAYER, 1, 2) T_DIRECTION, "+
        " acctrn.T_GROUND, "+
        " acctrn.T_NUMB_DOCUMENT, "+
        " paym.T_DOCKIND, "+
        " PROP.T_PAYMENTKIND, "+
        " PROP.T_PAYERBANKNAME, "+
        " prop_payer.t_bankcode t_bankcodepayer, "+
        " usr_get_inn (prop.T_PAYERINN) T_PAYERINN, "+
        " usr_get_kpp (prop.T_PAYERINN) T_PAYERKPP, "+
        " PROP.T_PAYERCORRACCNOSTRO, "+
        " prop.T_PAYERNAME, "+
        " PROP.T_RECEIVERBANKNAME, "+
        " prop_receiver.t_bankcode t_bankcodereceiver, "+
        " usr_get_inn (PROP.T_RECEIVERINN) T_RECEIVERINN, "+
        " usr_get_kpp (prop.T_RECEIVERINN) T_RECEIVERKPP, "+
        " PROP.T_RECEIVERCORRACCNOSTRO, "+
        " PROP.T_RECEIVERNAME "+
        " FROM   DFININSTR_DBT fininst, "+
        " DACCOUNT_DBT acc, "+
        " dacctrn_dbt acctrn, "+
        " DOPRDOCS_DBT oprdoc, "+
        " DOPROPER_DBT oper, "+
        " DPMPAYM_DBT paym, "+
        " DPMRMPROP_DBT prop, "+
        " dpmprop_dbt prop_payer, "+
        " dpmprop_dbt prop_receiver "+
        " WHERE       acc.T_ACCOUNT =:account "+
        " AND acc.T_CODE_CURRENCY = fininst.T_FIID "+
        " AND (acctrn.T_ACCOUNT_PAYER = acc.T_ACCOUNT "+
        "      OR acctrn.T_ACCOUNT_RECEIVER = acc.T_ACCOUNT) "+
        " AND oprdoc.T_ACCTRNID(+) = acctrn.T_ACCTRNID "+
        " AND oprdoc.T_DOCKIND(+) = 1 "+
        " AND oper.T_ID_OPERATION(+) = oprdoc.T_ID_OPERATION "+
        " AND paym.T_PAYMENTID(+) = TO_NUMBER (oper.T_DOCUMENTID) "+
        " AND paym.T_DOCKIND(+) = oper.T_DOCKIND "+
        " AND prop.T_PAYMENTID(+) = paym.T_PAYMENTID "+
        " AND acctrn.t_state = 1 "+
        " AND (1 = "+
        "         CASE "+
        "            WHEN acctrn.T_RESULT_CARRY IN (23, 18) THEN 0 "+
        "            ELSE 1 "+
        "         END) "+
        " AND PROP_PAYER.T_PAYMENTID = PAYM.T_PAYMENTID "+
        " AND prop_receiver.T_PAYMENTID = PAYM.T_PAYMENTID "+
        " AND prop_payer.T_DEBETCREDIT = 0 "+
        " AND prop_receiver.T_DEBETCREDIT = 1"+
        " AND ( 1 = CASE WHEN acctrn.T_RESULT_CARRY IN (23, 18) THEN 0  ELSE 1  END )";
        
        parm [ parm.size () ] = SqlParam ("account", account);
        if ((notNull (dateperiod)) and (notNull(safeGetPropMandatory(dateperiod, "datebegin", V_DATE)))) //если передали период
            sql=sql+" AND acctrn.T_DATE_CARRY Between :datebegin AND :dateend";
            parm [ parm.size () ] = SqlParam ("datebegin", safeGetPropMandatory(dateperiod, "datebegin", V_DATE));
            parm [ parm.size () ] = SqlParam ("dateend", nvl_ex (safeGetProp (dateperiod,"dateend", V_DATE) ,{curdate} ));
        end;
        sql =sql+" order by T_DATE_CARRY, T_DIRECTION";
        sql = execSqlSelect (sql, parm);
        
        while (sql.moveNext ())
        
        /*Собираем*/
            paym_info = Taccount_info;
            
            paym_info.START_DATE      =sql.value ("t_START_DATE"        , null, V_DATE);
            paym_info.ACCTRNID        =sql.value ("t_ACCTRNID"          , null, V_INTEGER);
            paym_info.PAYMENTID       =sql.value ("t_PAYMENTID"         , null, V_INTEGER);
            paym_info.PRIORITY        =sql.value ("t_PRIORITY"          , null, V_INTEGER);
            paym_info.ACCOUNT_PAYER   =sql.value ("t_ACCOUNT_PAYER"     , null, V_STRING);
            paym_info.ACCOUNT_RECEIVER=sql.value ("t_ACCOUNT_RECEIVER"  , null, V_STRING);
            paym_info.CODEINACCOUNT   =sql.value ("t_CODEINACCOUNT"     , null, V_STRING);
            paym_info.FIID_PAYER      =sql.value ("t_FIID_PAYER"        , null, V_INTEGER);
            paym_info.FIID_RECEIVER   =sql.value ("t_FIID_RECEIVER"     , null, V_INTEGER);
            paym_info.AMOUNTD         =sql.value ("t_AMOUNTD"           , null, V_MONEY);
            paym_info.AMOUNTK         =sql.value ("t_AMOUNTK"           , null, V_MONEY);
            paym_info.DIRECTION       =sql.value ("t_DIRECTION"         , null, V_INTEGER);
            paym_info.GROUND          =sql.value ("t_GROUND"            , null, V_STRING);
            paym_info.NUMB_DOCUMENT   =sql.value ("t_NUMB_DOCUMENT"     , null, V_STRING);
            paym_info.DOCKIND         =sql.value ("t_DOCKIND"           , null, V_INTEGER);
            paym_info.PAYMENTKIND     =sql.value ("t_PAYMENTKIND"       , null, V_STRING);
            paym_info.PAYERBANKNAME   =sql.value ("t_PAYERBANKNAME"     , null, V_STRING);
            paym_info.BANKCODEPAYER   =sql.value ("t_BANKCODEPAYER"     , null, V_STRING);
            paym_info.PAYERINN        =sql.value ("t_PAYERINN"          , null, V_STRING);
            paym_info.PAYERKPP        =sql.value ("t_PAYERKPP"          , null, V_STRING);
            paym_info.PAYERCORRACCNOSTRO =sql.value ("t_PAYERCORRACCNOSTRO"          , null, V_STRING);
            paym_info.PAYERNAME       =sql.value ("t_PAYERNAME"         , null, V_STRING);
            paym_info.RECEIVERBANKNAME=sql.value ("t_RECEIVERBANKNAME"  , null, V_STRING);
            paym_info.BANKCODERECEIVER=sql.value ("t_BANKCODERECEIVER"  , null, V_STRING);
            paym_info.RECEIVERINN     =sql.value ("t_RECEIVERINN"       , null, V_STRING);
            paym_info.RECEIVERKPP     =sql.value ("t_RECEIVERKPP"       , null, V_STRING);
            paym_info.RECEIVERCORRACCNOSTRO =sql.value ("t_RECEIVERCORRACCNOSTRO"    , null, V_STRING);
            paym_info.RECEIVERNAME   =sql.value ("t_RECEIVERNAME"       , null, V_STRING);

            list_account_info [ list_account_info.size () ] = paym_info;
        end;
        return list_account_info;
end;

macro get_accpaym_list(account,dateperiod)

var paym_info =Taccount_info;
var list_account_info= tArray();
var parm = tArray();
var cmd;
var sql = "SELECT   paym.T_VALUEDATE T_START_DATE, "+
          " acctrn.t_acctrnid, "+
          "  paym.T_PAYMENTID, "+
          "  prop.T_PRIORITY, "+
          "  DECODE (acctrn.t_acctrnid, "+
          "          NULL, paym.T_PAYERACCOUNT, "+
          "          acctrn.T_ACCOUNT_PAYER) "+
          "     T_ACCOUNT_PAYER, "+
          "  DECODE (acctrn.t_acctrnid, "+
          "          NULL, paym.T_RECEIVERACCOUNT, "+
          "          acctrn.T_ACCOUNT_RECEIVER) "+
          "     T_ACCOUNT_RECEIVER, "+
          "  FININST.T_CODEINACCOUNT, "+
          "  DECODE (acctrn.t_acctrnid, NULL, paym.t_fiid, acctrn.t_fiid_payer) "+
          "     t_fiid_payer, "+
          "  DECODE (acctrn.t_acctrnid, "+
          "          NULL, paym.t_payfiid, "+
          "          acctrn.t_fiid_receiver) "+
          "     t_fiid_receiver, "+
          "  DECODE (acctrn.t_acctrnid, "+
          "          NULL, NVL (paym.T_AMOUNT, 0.0), "+
          "          acctrn.T_SUM_PAYER) "+
          "     AS T_AMOUNTD, "+
          "  DECODE (acctrn.t_acctrnid, "+
          "          NULL, NVL (PAYM.T_PAYAMOUNT, 0.0), "+
          "          acctrn.T_SUM_RECEIVER) "+
          "     AS T_AMOUNTK, "+
          "  DECODE (acc.T_ACCOUNT, acctrn.T_ACCOUNT_PAYER, 1, 2) T_DIRECTION, "+
          "  prop.T_GROUND, "+
          "  prop.T_NUMBER T_NUMB_DOCUMENT, "+
          "  paym.T_DOCKIND, "+
          "  PROP.T_PAYMENTKIND, "+
          "  PROP.T_PAYERBANKNAME, "+
          "  prop_payer.t_bankcode t_bankcodepayer, "+
          "  usr_get_inn (prop.T_PAYERINN) T_PAYERINN, "+
          "  usr_get_kpp (prop.T_PAYERINN) T_PAYERKPP, "+
          "  PROP.T_PAYERCORRACCNOSTRO, "+
          "  PROP.T_PAYERNAME, "+
          "  PROP.T_RECEIVERBANKNAME, "+
          "  prop_receiver.t_bankcode t_bankcodereceiver, "+
          "  usr_get_inn (PROP.T_RECEIVERINN) T_RECEIVERINN, "+
          " usr_get_kpp (prop.T_RECEIVERINN) T_RECEIVERKPP, "+
          "  PROP.T_RECEIVERCORRACCNOSTRO, "+
          "  PROP.T_RECEIVERNAME, "+
          "  OPER.T_ID_OPERATION, "+
          "  TO_CHAR (OPER.T_SYST_DATE, 'dd.mm.yyyy') time_date, "+
          "  TO_CHAR (OPER.T_SYST_TIME, 'hh24:mi:ss') time_step, "+
          "  NVL ( "+
          "     (SELECT   BL.T_NAME stlist "+
          "        FROM   doprstep_dbt st, doprblock_dbt bl "+
          "       WHERE   st.t_id_operation = OPER.T_ID_OPERATION "+
          "               AND st.T_BLOCKID = BL.T_BLOCKID "+
          "               AND st.t_id_step = "+
          "                     (SELECT   MAX (t_id_step) "+
          "                        FROM   doprstep_dbt t "+
          "                       WHERE   t_id_operation = st.t_id_operation "+
          "                               AND t_isexecute <> CHR (0))), "+
          "     'в отложенных' "+
          "  ) "+
          "     step "+
    " FROM   DFININSTR_DBT fininst, "+
    "        DACCOUNT_DBT acc, "+
    "        dacctrn_dbt acctrn, "+
    "        dpmdocs_dbt docs, "+
    "        DOPROPER_DBT oper, "+
    "        DPMPAYM_DBT paym, "+
    "        DPMRMPROP_DBT prop, "+
    "        dpmprop_dbt prop_payer, "+
    "        dpmprop_dbt prop_receiver "+
    "  WHERE       acc.T_ACCOUNT = :account  "+
    "        AND acc.T_CODE_CURRENCY = fininst.T_FIID "+
    "        AND (PAYM.T_PAYERACCOUNT = acc.T_ACCOUNT "+
    "             OR PAYM.T_RECEIVERACCOUNT = acc.T_ACCOUNT) "+
    "        AND paym.t_paymentid = docs.t_paymentid(+) "+
    "        AND DOCS.T_acctrnid = ACCTRN.T_ACCTRNID(+) "+
    "        AND acctrn.t_state(+) = 1 "+
    "        AND LPAD (paym.T_PAYMENTID, 34, 0) = oper.T_DOCUMENTID "+
    "        AND paym.T_DOCKIND = oper.T_DOCKIND "+
    "        AND prop.T_PAYMENTID = paym.T_PAYMENTID "+
    "        AND PROP_PAYER.T_PAYMENTID = PAYM.T_PAYMENTID "+
    "        AND prop_receiver.T_PAYMENTID = PAYM.T_PAYMENTID "+
    "        AND prop_payer.T_DEBETCREDIT = 0 "+
    "        AND prop_receiver.T_DEBETCREDIT = 1 "+
    "        AND (1 = "+
    "               CASE "+
    "                    WHEN acctrn.T_RESULT_CARRY IN (23, 18) THEN 0 "+
    "                   ELSE 1 "+
    "                END) "+
    "        AND paym.t_paymstatus != 32000 ";

        
        parm [ parm.size () ] = SqlParam ("account", account);
        if ((notNull (dateperiod)) and (notNull(safeGetPropMandatory(dateperiod, "datebegin", V_DATE)))) //если передали период
            sql=sql+" AND paym.T_VALUEDATE Between :datebegin AND :dateend";
            parm [ parm.size () ] = SqlParam ("datebegin", safeGetPropMandatory(dateperiod, "datebegin", V_DATE));
            parm [ parm.size () ] = SqlParam ("dateend", nvl_ex (safeGetProp (dateperiod,"dateend", V_DATE) ,{curdate} ));
        end;
        sql =sql+" ORDER BY  paym.T_VALUEDATE , T_DIRECTION, paym.t_paymentid ";
        sql = execSqlSelect (sql, parm);
        
        while (sql.moveNext ())
        
        /*Собираем*/
            paym_info = Taccount_info;

            paym_info.START_DATE      =sql.value ("t_START_DATE"        , null, V_DATE);
            paym_info.ACCTRNID        =sql.value ("t_ACCTRNID"          , null, V_INTEGER);
            paym_info.PAYMENTID       =sql.value ("t_PAYMENTID"         , null, V_INTEGER);
            paym_info.PRIORITY        =sql.value ("t_PRIORITY"          , null, V_INTEGER);
            paym_info.ACCOUNT_PAYER   =sql.value ("t_ACCOUNT_PAYER"     , null, V_STRING);
            paym_info.ACCOUNT_RECEIVER=sql.value ("t_ACCOUNT_RECEIVER"  , null, V_STRING);
            paym_info.CODEINACCOUNT   =sql.value ("t_CODEINACCOUNT"     , null, V_STRING);
            paym_info.FIID_PAYER      =sql.value ("t_FIID_PAYER"        , null, V_INTEGER);
            paym_info.FIID_RECEIVER   =sql.value ("t_FIID_RECEIVER"     , null, V_INTEGER);
            paym_info.AMOUNTD         =sql.value ("t_AMOUNTD"           , null, V_MONEY);
            paym_info.AMOUNTK         =sql.value ("t_AMOUNTK"           , null, V_MONEY);
            paym_info.DIRECTION       =sql.value ("t_DIRECTION"         , null, V_INTEGER);
            paym_info.GROUND          =sql.value ("t_GROUND"            , null, V_STRING);
            paym_info.NUMB_DOCUMENT   =sql.value ("t_NUMB_DOCUMENT"     , null, V_STRING);
            paym_info.DOCKIND         =sql.value ("t_DOCKIND"           , null, V_INTEGER);
            paym_info.PAYMENTKIND     =sql.value ("t_PAYMENTKIND"       , null, V_STRING);
            paym_info.PAYERBANKNAME   =sql.value ("t_PAYERBANKNAME"     , null, V_STRING);
            paym_info.BANKCODEPAYER   =sql.value ("t_BANKCODEPAYER"     , null, V_STRING);
            paym_info.PAYERINN        =sql.value ("t_PAYERINN"          , null, V_STRING);
            paym_info.PAYERKPP        =sql.value ("t_PAYERKPP"          , null, V_STRING);
            paym_info.PAYERCORRACCNOSTRO =sql.value ("t_PAYERCORRACCNOSTRO"          , null, V_STRING);
            paym_info.PAYERNAME       =sql.value ("t_PAYERNAME"         , null, V_STRING);
            paym_info.RECEIVERBANKNAME=sql.value ("t_RECEIVERBANKNAME"  , null, V_STRING);
            paym_info.BANKCODERECEIVER=sql.value ("t_BANKCODERECEIVER"  , null, V_STRING);
            paym_info.RECEIVERINN     =sql.value ("t_RECEIVERINN"       , null, V_STRING);
            paym_info.RECEIVERKPP     =sql.value ("t_RECEIVERKPP"       , null, V_STRING);
            paym_info.RECEIVERCORRACCNOSTRO =sql.value ("t_RECEIVERCORRACCNOSTRO"    , null, V_STRING);
            paym_info.RECEIVERNAME    =sql.value ("t_RECEIVERNAME"      , null, V_STRING);
            paym_info.time_date       =sql.value ("time_date"           , null, V_STRING);
            paym_info.time_step       =sql.value ("time_step"           , null, V_STRING);
            paym_info.step            =sql.value ("step"                , null, V_STRING);

            list_account_info [ list_account_info.size () ] = paym_info;
        end;
        return list_account_info;
end;

