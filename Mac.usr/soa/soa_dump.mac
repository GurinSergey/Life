
macro makeUniqueFile ()
    var dd, mm, yyyy;
    dateSplit (date (), dd, mm, yyyy);

    var time_stamp = strSubst (string (time ()), ":", "_");
    var fname = string (yyyy, "-", mm:c2, "-", dd:c2, "_", time_stamp);
    
    return "C:/" + fname + ".log";
end;

macro print_value (v:variant)
    var type;
    if   (valType (v) == V_INTEGER) type = "INTEGER";
    elif (valType (v) == V_STRING ) type = "STRING";
    elif (valType (v) == V_MONEY  ) type = "MONEY";
    elif (valType (v) == V_BOOL   ) type = "BOOL";
    elif (valType (v) == V_UNDEF  ) type = "UNDEF";
    elif (valType (v) == 26       ) type = "SPECVAL";
    else                            type = "?? - " + valType (v);
    end;
    
    [#                                                                                            #] 
    (v, type);
end;

macro dump (macroname:string, function:string)
    var i:integer = 2, parm:variant; 
    setOutput (makeUniqueFile ());
    while (getParm (i, parm) )
        if (valType (parm) == V_GENOBJ) printprops (parm);
        else                            print_value (parm);
        end;

        i = i + 1;
    end;
    setOutput (null, true);
end;

