import RSD, oralib, likepy, "lib_fg.mac";

debugbreak;

macro GetBICAndKPP(main_str, BankBIC, KppReceiver) 
  
  var pos;
  
  pos = index(main_str, ".");
  
  if (pos != 0)
    SetParm(1, Substr(main_str, 1, pos - 1));
    SetParm(2, Substr(main_str, pos + 1));
  else
    SetParm(1, main_str);
    SetParm(2, "");
  end;
  
end;

macro Insert_PosTerm()
  
  var rs, sql; 
  var curbank = "", sqlquery, AccPercent;
  var IdPos, CompanyName, CompanyAddress, FeePercent, BankBIC, InnReceiver, KppReceiver, AccountReceiver, AccOplat, warning_str = "";
  
  sql = " SELECT XMLTYPE(acq.T_XML_DATA).EXTRACT ( " +
        "           '//ApplicationsList/Application/SubApplList/Application/SubApplList/Application/Data/Contract/DeviceInfo/DeviceRecord/DeviceType/text()', " +
        "           'xmlns=""' " +
        "        ).GETSTRINGVAL () AS t_bank_name, " +
        "        XMLTYPE(acq.T_XML_DATA).EXTRACT ( " +
        "           '//ApplicationsList/Application/ObjectFor/ClientIDT/ClientInfo/ShortName/text()', " +
        "           'xmlns=""' " +
        "        ).GETSTRINGVAL () AS t_CompanyName, " +
        "        XMLTYPE(acq.T_XML_DATA).EXTRACT ( " +
        "           '//ApplicationsList/Application/SubApplList/Application/SubApplList/Application/SubApplList/Application/Data/Address/AddressLine1/text()', " +
        "           'xmlns=""' " +
        "        ).GETSTRINGVAL () || ' ' || " +
        "        XMLTYPE(acq.T_XML_DATA).EXTRACT ( " +
        "           '//ApplicationsList/Application/SubApplList/Application/SubApplList/Application/SubApplList/Application/Data/Address/City/text()', " +
        "           'xmlns=""' " +
        "        ).GETSTRINGVAL () || ' ' || " +
        "        XMLTYPE(acq.T_XML_DATA).EXTRACT ( " +
        "           '//ApplicationsList/Application/SubApplList/Application/SubApplList/Application/SubApplList/Application/Data/Address/AddressLine2/text()', " +
        "           'xmlns=""' " +
        "        ).GETSTRINGVAL () AS t_CompanyAdress, " +
        "        XMLTYPE(acq.T_XML_DATA).EXTRACT ( " +
        "           '//ApplicationsList/Application/ObjectFor/ClientIDT/ClientInfo/ClientNumber/text()', " +
        "           'xmlns=""' " +
        "        ).GETSTRINGVAL () AS t_InnReceiver, " +
        "        XMLTYPE(acq.T_XML_DATA).EXTRACT ( " +
        "           '//ApplicationsList/Application/SubApplList/Application/Data/Contract/ContractIDT/RBSNumber/text()', " +
        "           'xmlns=""' " +
        "        ).GETSTRINGVAL () AS t_AccountReceiver, " +
        "        XMLTYPE(acq.T_XML_DATA).EXTRACT ( " +
        "           '//ApplicationsList/Application/SubApplList/Application/SubApplList/Application/Data/Contract/CommentText/text()', " +
        "           'xmlns=""' " +
        "        ).GETSTRINGVAL () AS t_bic_kpp, " +
        "        XMLTYPE(acq.T_XML_DATA).EXTRACT ( " +
        "           '//ApplicationsList/Application/SubApplList/Application/SubApplList/Application/Data/Contract/ContractIDT/ContractNumber/text()', " +
        "           'xmlns=""' " +
        "        ).GETSTRINGVAL () AS t_IdPos, " +
        "        XMLTYPE(acq.T_XML_DATA).EXTRACT ( " +
        "           '//FileHeader/FormatVersion/text()', " +
        "           'xmlns=""' " +
        "        ).GETSTRINGVAL () AS t_FeePercent " +
        "   FROM USR_ACQUIRING_XML acq ";

  rs = RsdRecordSet(sql);

  if (rs and rs.MoveNext)

    debugbreak;
    
    //определим переменные из рекордсета
    IdPos           = rs.value("t_IdPos");
    CompanyName     = rs.value("t_CompanyName");
    CompanyAddress  = rs.value("t_CompanyAdress");
    FeePercent      = rs.value("t_FeePercent");
    InnReceiver     = rs.value("t_InnReceiver");
    AccountReceiver = rs.value("t_AccountReceiver");
    
    //Разделим БИК И КПП
    GetBICAndKPP(rs.value("t_bic_kpp"), BankBIC, KppReceiver);

    //определим наш банк
    //if   (_bank.is_PRBB) curbank = "ПРББ";
    //elif (_bank.is_VUZ)  curbank = "ВУЗ";
    //elif (_bank.is_GEB)  curbank = "ГЭБ";
    //elif (_bank.is_EXV)  curbank = "ЭВ";
    //end;
    
    //для проверки уникальности карточки по полю "номер терминала"
    sqlquery = RsdRecordSet(string("select * from dsprterm_usr where t_number_terminal = '" + IdPos + "'"));
    
    //проверяем наличие всех обязательных параметров в файле
    //if   (BankName != curbank)
    //  return("Устройство " + IdPos + " по '" + CompanyName + "' не может быть введено: указан неверный банк");

    if(IdPos == "")
      return ("Устройство ??? по '" + CompanyName + "' не может быть введено: в файле отсутствует параметр 'Номер терминала'");
    //проверяем уникальность карточки
    elif(sqlquery.MoveNext)
      return("Устройство " + IdPos + " по '" + CompanyName + "' уже существует.");
    elif (strlen(IdPos) > 12)
      return("Устройство " + IdPos + " по '" + CompanyName + "' не может быть введено: параметр 'Название фирмы' превышает установленную длину в 12 символов");
    elif (CompanyName == "")
      return("Устройство " + IdPos + " по '" + CompanyName + "' не может быть введено: в файле отсутствует параметр 'Название фирмы'");
    elif (CompanyAddress == "")
      return("Устройство " + IdPos + " по '" + CompanyName + "' не может быть введено: в файле отсутствует параметр 'Название филиала'");
    elif (FeePercent == "")
      return("Устройство " + IdPos + " по '" + CompanyName + "' не может быть введено: в файле отсутствует параметр 'Комиссия'");
    elif (BankBIC == "")
      return("Устройство " + IdPos + " по '" + CompanyName + "' не может быть введено: в файле отсутствует параметр 'БИК банка получателя'");
    elif (InnReceiver == "")
      return("Устройство " + IdPos + " по '" + CompanyName + "' не может быть введено: в файле отсутствует параметр 'ИНН получателя'");
    elif (KppReceiver == "")
      return("Устройство " + IdPos + " по '" + CompanyName + "' не может быть введено: в файле отсутствует параметр 'КПП получателя'");
    elif (AccountReceiver == "")
      return("Устройство " + IdPos + " по '" + CompanyName + "' не может быть введено: в файле отсутствует параметр 'Счет получателя'");
    else
      //Определим счет оплат
      if (_bank.is_EXV)
        AccOplat = "30232810500000010285";
      elif (_bank.is_VUZ)
        AccOplat = "30233810201080000005";
      else
        AccOplat = "30233810609000060071";
      end;
      //подбираем счёт комиссии
      if(not CompareStrWithMasks("M?????UP", IdPos))
        AccPercent = "70601810100006203240";
      elif(not CompareStrWithMasks("M?????KB", IdPos))
        AccPercent = "70601810400006203241";
      elif(not CompareStrWithMasks("M?????UE", IdPos))
        AccPercent = "70601810400006203240";
      elif(not CompareStrWithMasks("M?????KE", IdPos))
        AccPercent = "70601810700006203241";
      elif(not CompareStrWithMasks("M?????UV", IdPos))
        AccPercent = "70601810400006203240";
      elif(not CompareStrWithMasks("M?????KU", IdPos))
        AccPercent = "70601810700006203241";
      elif(not CompareStrWithMasks("M?????UG", IdPos))
        AccPercent = "70601810500006203193";
      elif(not CompareStrWithMasks("M?????KG", IdPos))
        AccPercent = "70601810100006203195";
      else
        AccPercent = "";
        warning_str = "Не найден счёт комиссии для '" + CompanyName + "' по устройству " + IdPos + ". ";
      end;
      
      //блок проверок на соответствие принимаемых параметров условиям на таблице dsprterm_usr
      if (double(KppReceiver) == 0)
        KppReceiver = "";
      end;
      
      if(strlwr(substr(CompanyName,1,30)) == "индивидуальный предприниматель")
        CompanyName = "ИП" + substr(CompanyName, 31);
      elif(strlwr(substr(CompanyName,1,40)) == "общество с ограниченной ответственностью")
        CompanyName = "ООО" + substr(CompanyName, 41);
      elif (strlwr(substr(CompanyName,1,29)) == "закрытое акционерное общество")
        CompanyName = "ЗАО" + substr(CompanyName, 30);
      end;

      if(strlen(CompanyName) > 60)
        CompanyName = substr(CompanyName,1,60);
        warning_str = warning_str + "По устройству " + rs.value("t_IdPos") + " параметр 'Название фирмы' превышает 60 символов и будет обрезан. ";
      end;
      
      if(strlen(CompanyAddress) > 60)
        CompanyAddress = substr(CompanyAddress,1,60);
        warning_str = warning_str + "По устройству " + IdPos + " параметр 'Название филиала' превышает 60 символов и будет обрезан. ";
      end;

      if(strlen(FeePercent) > 8)
        FeePercent = substr(FeePercent,1,8);
        warning_str = warning_str + "По устройству " + IdPos + " параметр 'Комиссия' превышает 8 символов и будет обрезан. ";
      end;
      
      if(strlen(BankBIC) > 10)
        BankBIC = substr(BankBIC,1,10);
        warning_str = warning_str + "По устройству " + IdPos + " параметр 'БИК банка' превышает 10 символов и будет обрезан. ";
      end;

      if(strlen(InnReceiver) > 13)
        InnReceiver = substr(InnReceiver,1,13);
        warning_str = warning_str + "По устройству " + IdPos + " параметр 'ИНН получателя' превышает 13 символов и будет обрезан. ";
      end;

      if(strlen(KppReceiver) > 10)
        KppReceiver = substr(KppReceiver,1,10);
        warning_str = warning_str + "По устройству " + IdPos + " параметр 'КПП получателя' превышает 10 символов и будет обрезан.";
      end;

      if(strlen(AccountReceiver) > 21)
        AccountReceiver = substr(AccountReceiver,1,21);
        warning_str = warning_str + "По устройству " + IdPos + " параметр 'Счёт получателя' превышает 21 символ и будет обрезан.";
      end;
      
      
      //вставляем запись в справочник терминалов
      sqlquery = " insert into dsprterm_usr"
                 "            (T_CODE_FIRM,      T_OPEN_CLOSE,       " +
                 "             T_NAME_FIRM,      T_CODE_OFFICE,      " +
                 "             T_NAME_OFFICE,    T_NUMBER_TERMINAL,  " +
                 "             T_PERCENT_VALUE,  T_ACC_POSTUPLEN,    " +
                 "             T_ACC_OPLAT,      T_ACC_PERCENT,      " +
                 "             T_MFO_RECEIVER,   T_INN_RECEIVER,     " +
                 "             T_KPP_RECEIVER,   T_ACCOUNT_RECEIVER, " +
                 "             T_NUMBER_DOGOVOR, T_RESERVE, T_DEBT ) " +
                 "     values (chr(1), chr(1),                       " + // T_CODE_FIRM, T_OPEN_CLOSE
                 "             :m_name_firm, chr(1),                 " + // T_NAME_FIRM, T_CODE_OFFICE
                 "             :m_address_firm, :m_id_pos,           " + // T_NAME_OFFICE, T_NUMBER_TERMINAL
                 "             :m_fee_percent, chr(1),               " + // T_PERCENT_VALUE, T_ACC_POSTUPLEN
                 "             :m_acc_oplat, :m_acc_percent,         " + // T_ACC_OPLAT, T_ACC_PERCENT
                 "             :m_mfo_bank, :m_inn_receiver,         " + // T_MFO_RECEIVER, T_INN_RECEIVER
                 "             :m_kpp_receiver, :m_acc_receiver,     " + // T_KPP_RECEIVER, T_ACCOUNT_RECEIVER
                 "             chr(1), '', 0 )                       " ; // T_NUMBER_DOGOVOR, T_RESERVE, T_DEBT
                 
      ExecSQL (sqlquery, makeArray (SQLParam("m_name_firm"   , CompanyName),//
                                    SQLParam("m_address_firm", CompanyAddress),//
                                    SQLParam("m_id_pos"      , IdPos),
                                    SQLParam("m_fee_percent" , string(FeePercent)),
                                    SQLParam("m_acc_oplat"   , AccOplat),//
                                    SQLParam("m_acc_percent" , AccPercent),//
                                    SQLParam("m_mfo_bank"    , BankBIC),
                                    SQLParam("m_inn_receiver", InnReceiver),
                                    SQLParam("m_kpp_receiver", KppReceiver),
                                    SQLParam("m_acc_receiver", AccountReceiver)));
      
      if (warning_str == "")
        return "Терминал " + IdPos + " успешно загружен";
      else
        return "Терминал " + IdPos + " успешно загружен. Имеются предупреждения -> " + warning_str;
      end;
      
    end;
    
    return("Ошибка. Не могу преобразовать данные из XML в SQL");
  end;
end;

macro Upload_PosTerm(XML_File_Path)

  var strm, ha = TArray, hd_blob, cmd, rs, err_mes;
/*var*/ 
  //исходник
  //XML_File_Path = "\\\\172.16.22.150\\C$\\RSB_PRBB\\TxtFile\\acquiring\\XADVAPL800100_00028.034"; 
  //тест терминала
  //XML_File_Path = "\\\\172.16.22.150\\C$\\RSB_PRBB\\TxtFile\\acquiring\\X1_REM_ID_POS.xml";
  //длинна терминала 
  //XML_File_Path = "\\\\172.16.22.150\\C$\\RSB_PRBB\\TxtFile\\acquiring\\X1_LEN_ID_POS.xml";

  if (not ExistFile(XML_File_Path))
    return "Не могу найти файл в указанной директории " + XML_File_Path;
  end;

  strm = TStream( XML_File_Path , "R" );

  ha[ha.size] = "xml";
  ha[ha.size] = V_STRING;
  ha[ha.size] = strm.getsize;
  ha[ha.size] = 0;
  ha[ha.size] = 0;
  
  hd_blob = TRecHandler ( "xmlread", ha );
  strm.read2( hd_blob );
  
  //Очищаем временную таблицу
  cmd = RSDCommand("truncate table usr_acquiring_xml");
  cmd.execute;

  cmd = RSDCommand("insert into usr_acquiring_xml values (1, null)");
  cmd.execute;

  cmd = RSDCommand(" SELECT T_ID, T_XML_DATA FROM usr_acquiring_xml where T_ID = 1 FOR UPDATE");
  rs  = RSDRecordset( cmd, null, RSDVAL_STATIC );
  rs.bloblimitsize = 1;
  
  if (rs.MoveNext());
     rs.edit;
     rs.Fld(1).Write( hd_blob );
     rs.update;
  end;

  err_mes = Insert_PosTerm();
  
  debugbreak;
  return err_mes;
//  return "Файл успешно загружен";

end;

//msgbox(Upload_PosTerm());