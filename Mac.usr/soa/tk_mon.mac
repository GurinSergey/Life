/***************************************************************************/
/* Монитор обработчиков                                                    */
/* 24.12.2012 Golovkin изменил интервал времени                            */
/***************************************************************************/

IMPORT RSD, BankInter, oralib, likepy, globals, KeyCodes;

/* Подключаем форму */

var Fulloutputl, outl, outputl="mon_tk.lbr";
GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
Fulloutputl = FindPath(outputl, outl);
var mon_panel = TRecHandler("ONLINETK", fulloutputl, TRUE);

/* Robots - Список обработчиков              */
/* Robot - Выбранный обработчик              */
/* ErrCode - Ошибка чтения ветки реестра     */
/* UpdateTime - Время обновления данных (мс) */

VAR Robots, Robot, ErrCode, UpdateTime = 30000;


MACRO Print_TK_MON()

    VAR query = RsdCommand( "SELECT   NAME_BANK,"
                            +" T_ENTRY_POINT,"
                            +" TIME_OUT,"
                            +" nvl((SELECT   REQUEST"
                            +"   FROM   test_xml_IIS logs"
                            +"  WHERE       EPOINT.NAME_BANK = LOGS.BANK_NAME and LOGS.REQUEST is not null"
                            +"          AND TIME_END > SYSTIMESTAMP - INTERVAL '20' MINUTE"
                            +"          AND ROWNUM = 1),'нет ошибок') err"
                            +" FROM   IIS_ENTRY_POINT epoint Where ENABLE_POINT = chr(88)");

    VAR rs = RsdRecordset(query);

    VAR i = 1;

    while (rs.movenext())
        [│#########│##################################################################│#######│#####################################│]
        (String(rs.value("NAME_BANK")):w:l,rs.value("T_ENTRY_POINT"):c:l, rs.value("TIME_OUT"):c:w, rs.value("err"):c:w);

       i = i + 1;
    end;                                                                                                                                                                                                                                               

END;
MACRO PrintTK()
        [Для проверки ТК нажмите F2];
        [┌─────────┬──────────────────────────────────────────────────────────────────┬───────┬─────────────────────────────────────┐
         │Банк     │Название точки доступа                                            │Таймаут│Последняя ошибка                     │
         ├─────────┼──────────────────────────────────────────────────────────────────┼───────┼─────────────────────────────────────┤
        ];
    
        Print_TK_MON();
        [└─────────┴──────────────────────────────────────────────────────────────────┴───────┴─────────────────────────────────────┘];
  
END;


MACRO Print_LOG_MON()

    VAR query = RsdCommand( "SELECT   logs.BANK_NAME,"
                            +" to_char(logs.TIME_START,'hh24:mi:ssxff4') TIME_START,"
                            +" to_char(logs.TIME_END,'hh24:mi:ssxff4') TIME_END,"
                            +" +EXTRACT (HOUR FROM logs.TIME_END - logs.TIME_START) * 3600"
                            +" + EXTRACT (MINUTE FROM logs.TIME_END - logs.TIME_START) * 60"
                            +" + (EXTRACT (SECOND FROM logs.TIME_END - logs.TIME_START) * 1000)/ 1000 AS time_long,"
                            +" NVL (REQUEST, 'успешно') REQUEST,"
                            +" T_REQID"
                            +" FROM   test_xml_IIS logs,IIS_ENTRY_POINT point"
                            +" WHERE   logs.time_start >= SYSDATE - INTERVAL '10' MINUTE and point.NAME_BANK=logs.BANK_NAME and point.ENABLE_POINT=chr(88) "
                            +" ORDER BY   logs.time_start DESC");

    VAR rs = RsdRecordset(query);

    VAR i = 1;

    while (rs.movenext())
        [│##################│###############│#################│############│##################│#####################################│]
        (String(rs.value("BANK_NAME")):w:l,rs.value("TIME_START"):c:w, rs.value("TIME_END"):c:w, rs.value("time_long"):c:w, rs.value("REQUEST"):c:w, rs.value("T_REQID"):c:w);

       i = i + 1;
    end;                                                                                                                                                                                                                                               

END;

MACRO PRINT_LOG(pn)

        [┌──────────────────┬───────────────┬─────────────────┬────────────┬──────────────────┬─────────────────────────────────────┐
         │Название Точки    │Начало опроса  │Окончание Опроса │Разница     │Статус            │                                     │
         ├──────────────────┼───────────────┼─────────────────┼────────────┼──────────────────┼─────────────────────────────────────┤
        ];

    
        Print_LOG_MON(Robots);


        [└──────────────────┴───────────────┴─────────────────┴────────────┴──────────────────┴─────────────────────────────────────┘];
      
END;


/* Списки(скролинги)                             */
/* ListSchemaName - Список схем(не используется) */
/* ListOp - Список обработчиков                  */

MACRO test_iis
    var cmd_iis = RSDCommand("BEGIN SEND_REQUEST_TEST_IIS(); END;");
        cmd_iis.Execute();
END;

/* Списки(скролинги)                             */
/* ListSchemaName - Список схем(не используется) */
/* ListOp - Список обработчиков                  */

MACRO ListSchemaName(schema: @string)

    Var cmd = RsdCommand(
                     " SELECT SCHEMANAME "
                     "   FROM v$session "
                     "  group by SCHEMANAME "),
        rs = RsdRecordSet(cmd,RSDVAL_CLIENT,RSDVAL_STATIC);

    MACRO EvProc(rs, cmd, id, key)
        if ((cmd == DLG_KEY) and (key == 13 ))
           return CM_SELECT;
        end;
    END;

    if(RunScroll(rs, null, null, null, "EvProc"))
        Schema = rs.value(0);
        return true;
    else
        return false;
    end;

    return false;

END;

MACRO ListOp(oper: @string)

    Var cmd = RsdCommand(
                         " SELECT T_OPER, T_NAME "
                         "   FROM DPERSON_DBT "
                         "  WHERE T_OPER IN ("+Robots+") "),
        rs = RsdRecordSet(cmd,RSDVAL_CLIENT,RSDVAL_STATIC);
    Var col = TArray();
        col(0) = "T_OPER"; col(1) = "Номер"; col(2) = 7;  col(3) = 1; col(4) = 0; col(5) = 0;
        col(6) = "T_NAME"; col(7) = "Имя"  ; col(8) = 10; col(9) = 1; col(10)= 0; col(11)= 0; 	

    MACRO EvProc(rs, cmd, id, key)
        if ((cmd == DLG_KEY) and (key == 13 ))
           return CM_SELECT;
        end;
    END;

    if(RunScroll(rs,2,col,null,"EvProc","Обработчики","~ESC~ Выход ~ENTER~ Выбор",false,null,null,30,null ))
        Robot = rs.value(0);
        oper = rs.value(1);
        return true;
    else
        return false;
    end;

    return false;

END;

MACRO ListPanel(pn, CMD, ID, KEY)

    VAR CurrentField = FldName(pn, ID),
        schemaname;

    record oper(person);

    if (CurrentField == "oper")
        if (ListOp(@oper.name))
            pn.rec.oper = oper.name;
        end;
    elif (CurrentField == "schema")
        if (ListSchemaName(@schemaname))      
            pn.rec.schema =  schemaname;
        end; 
    end;

END;

/* Отчеты по обработчикам                                        */
/* ShowReportRunTime - Показывает отчет в главной форме монитора */
/* ShowReport - Показывает отчет в окне редактора                */

MACRO ShowReportRunTime(pn);

    FILE f_rep_out() txt;

    var f_rep_name = GetTXTFileName("online_point_request");

    SetOutput(f_rep_name,false);
    PRINT_LOG(pn);  // формируем историю опросов
    SetOutput(null,false);

    if ((ExistFile(f_rep_name,0)) and (open(f_rep_out,f_rep_name))) ;
        Pn.rec.rep_point= "";
        while(Next(f_rep_out))
            Var Str = f_rep_out.str;
                Pn.rec.rep_point = Pn.rec.rep_point+Str+"\n";
        end;
        close(f_rep_out);
    end;
    
    f_rep_name = GetTXTFileName("online_point_TK");

    SetOutput(f_rep_name,false);
    PrintTK(pn);  // формируем историю опросов
    SetOutput(null,false);

    if ((ExistFile(f_rep_name,0)) and (open(f_rep_out,f_rep_name))) ;
        Pn.rec.tk_point= "";
        while(Next(f_rep_out))
                Str = f_rep_out.str;
                Pn.rec.tk_point = Pn.rec.tk_point+Str+"\n";
        end;
        close(f_rep_out);
    end;
    

END;



/* Инициализация панели */

MACRO InitPanel(pn, CMD, ID, KEY);

    //VAR rs = RsdRecordSet(" SELECT   * "+
    //                      " FROM   test_xml_IIS"+
    //                      " WHERE   time_start >= SYSDATE - INTERVAL '10' MINUTE order by time_start desc");

  //  if(rs.movenext())
   //     pn.rec.schema = rs.value(0);
   // end;

  //  pn.rec.oper = "Все";
  //  pn.rec.spisok = Robots;
    ShowReportRunTime(pn);
    SetTimer(mon_panel,UpdateTime);
    UpdateFields(pn);
    return CM_IGNORE;

END;

/* Скролинги                                                                      */
/* ShowErrorsForRobot - Показывает ошибки которые были при обработке сообщений    */
/* ShowOperations - Показывает, обработанные сообщения                            */
/* ShowRobots - Показывает обработчики по дате последнего обработанного документа */
/* ShowUnknownRobots - Не известные науке обработчики                             */

macro AddCol (ar, ind, fld, head, width, rdonly, DecPoint)

   ar.value (ind * 6)     = fld;
   ar.value (ind * 6 + 1) = head;
   ar.value (ind * 6 + 2) = width;
   if(rdonly)
      ar.value (ind * 6 + 3 ) = 2;
   else
      ar.value (ind * 6 + 3 ) = 5;
   end;
   ar.value (ind * 6 + 4 ) = decPoint;
   ar.value (ind * 6 + 5 ) = 0;

end;

MACRO ShowErrorsForRobot(SID,StartTime)

    Var cmd = RsdCommand(" select "
                         "    t_sid, "
                         "    t_lasttime, "
                         "    to_char(T_LASTTIME,'HH24:MI:SS') times, "
                         "    t_doctime, "
                         "    t_msgvalue, "
                         "    t_error "
                         " from usr_robotslog_dbt "
                         "    where t_sid = ? "
                         "      and t_starttime = ? "
                         "      and t_error not like '%no_error%' "
                         "      and t_error not like 'ready' "
                         "    Order by t_lasttime, to_char(T_LASTTIME,'HH24:MI:SS') ");

        cmd.addparam("t_sid", RSDBP_IN, SID);
        cmd.addparam("t_starttime", RSDBP_IN, StartTime);

    Var rs  = RsdRecordSet(cmd,RSDVAL_CLIENT,RSDVAL_STATIC);

    Var col = TArray();

        AddCol (col, 0, "t_sid", "SID", 5, true, 0);
        AddCol (col, 1, "t_lasttime", "Дата", 10, true);
        AddCol (col, 2, "times", "Время", 7, true);
        AddCol (col, 3, "t_doctime", "Время проведения(знач./100=сек.)", 5, true, 0);
        AddCol (col, 4, "t_msgvalue", "Сообщение", 20, false);
        AddCol (col, 5, "t_error", "Ошибка", 25, false);

    RunScroll( rs,6,col,null,"EvProc","Ошибки","~ESC~ Выход",false,null,null,150,null );

END;

MACRO ShowOperations(SID,StartTime)
debugbreak;
    Var cmd = RsdCommand(" select "
                         "    t_sid, "
                         "    t_lasttime, "
                         "    to_char(T_LASTTIME,'HH24:MI:SS') times, "
                         "    t_doctime, "
                         "    t_msgvalue, "
                         "    t_error "
                         " from usr_robotslog_dbt "
                         "    where t_sid = ? "
                         "      and t_starttime = ? "
                         "    Order by t_lasttime, to_char(T_LASTTIME,'HH24:MI:SS') ");

        cmd.addparam("t_sid", RSDBP_IN, SID);
        cmd.addparam("t_starttime", RSDBP_IN, StartTime);

    Var rs  = RsdRecordSet(cmd,RSDVAL_CLIENT,RSDVAL_STATIC);

    Var col = TArray();

        AddCol (col, 0, "t_sid", "SID", 5, true, 0);
        AddCol (col, 1, "t_lasttime", "Дата", 10, true);
        AddCol (col, 2, "times", "Время", 7, true);
        AddCol (col, 3, "t_doctime", "Время проведения(знач./100=сек.)", 5, true, 0);
        AddCol (col, 4, "t_msgvalue", "Сообщение", 20, false);
        AddCol (col, 5, "t_error", "Ответ", 25, false);

    RunScroll( rs,6,col,null,"EvProc","Все операции","~ESC~ Выход",false,null,null,70,null );

END;

MACRO ShowRobots(pn)

    var date_from = date, date_to = date;

    getdate(date_from,"Дата начала периода");
    getdate(date_to,"Дата конца периода");
    date_to = date_to + 1;

    Var cmd = RsdCommand(
                         " SELECT "
                         "    fd.T_SID, "
                         "    fd.T_ROBOT, "
                         "    fd.T_STARTTIME, "
                         "    to_char(fd.T_STARTTIME,'HH24:MI:SS') starttimes, "
                         "    fd.T_LASTTIME, "
                         "    to_char(fd.T_LASTTIME,'HH24:MI:SS') times, "
                         "    fd.T_ALLDOC, "
                         "    fd.T_LOGFILE, "
                         "    fd.T_ERRMSG, "
                         "    NVL2(vs.SID,'X','') as active "
                         " FROM USR_FIXDOC_DBT fd, v$session vs "
                         "    WHERE "
                         "          fd.T_LASTTIME between to_date('"+date_from+"','DD.MM.YYYY') AND to_date('"+date_to+"','DD.MM.YYYY') "
                         "      AND fd.t_robot IN ("+pn.rec.spisok+") " 
                         "      AND fd.t_SID = vs.SID(+) "
                         "      AND fd.T_STARTTIME = vs.LOGON_TIME(+) "
                         "    ORDER BY fd.t_robot, fd.t_lasttime, to_char(fd.T_LASTTIME,'HH24:MI:SS') "),

        rs = RsdRecordSet(cmd,RSDVAL_CLIENT,RSDVAL_STATIC);

    Var col = TArray();

    AddCol (col, 0, "T_ROBOT", "Номер обработчика", 15, true);
    AddCol (col, 1, "T_STARTTIME", "Дата запуска", 11, true);
    AddCol (col, 2, "starttimes", "Время", 7, true);
    AddCol (col, 3, "T_LASTTIME", "Дата последнего документа", 21, true);
    AddCol (col, 4, "TIMES", "Время", 7, true);
    AddCol (col, 5, "T_ALLDOC", "Обработано документов", 17, true, 0);
    AddCol (col, 6, "T_LOGFILE", "Логфайл", 22, false);
    AddCol (col, 7, "T_ERRMSG", "Последнее сообщение об ошибке", 10, false);
    AddCol (col, 8, "active", "A", 2, true);

    MACRO EvProc(rs, cmd, id, key)
        if ((cmd == DLG_KEY) and (key == 319 )) /* F5 */
           ShowOperations(rs.value(0),rs.value(2));
        end;
        if ((cmd == DLG_KEY) and (key == 320 )) /* F6 */
           ShowErrorsForRobot(rs.value(0),rs.value(2));
        end;
    END;

    RunScroll( rs,9,col,null,"EvProc","Обработчики","~ESC~ Выход ~F5~ Обработанные сообщения ~F6~ Ошибки ",false,null,null,150,null ) 

END;

MACRO ShowUnknownRobots(pn)

    var date_from = date,date_to = date;

    getdate(date_from,"Дата начала периода");
    getdate(date_to,"Дата конца периода");
    date_to = date_to + 1;

    Var cmd = RsdCommand(
                         " select "
                         "    T_SID, "
                         "    T_ROBOT, "
                         "    T_STARTTIME, "
                         "    to_char(T_STARTTIME,'HH24:MI:SS') starttimes, "
                         "    T_LASTTIME, "
                         "    to_char(T_LASTTIME,'HH24:MI:SS') times, "
                         "    T_ALLDOC, "
                         "    T_LOGFILE, "
                         "    T_ERRMSG "
                         " from USR_FIXDOC_DBT "
                         "    where "
                         "          T_LASTTIME between to_date('"+date_from+"','DD.MM.YYYY') and to_date('"+date_to+"','DD.MM.YYYY') "
                         "      and t_robot not in ("+Robots+") " 
                         "    Order by t_robot, t_lasttime, to_char(T_LASTTIME,'HH24:MI:SS') "),
        rs = RsdRecordSet(cmd,RSDVAL_CLIENT,RSDVAL_STATIC);
    Var col = TArray();

    AddCol (col, 0, "T_ROBOT", "Номер обработчика", 15, true);
    AddCol (col, 1, "T_STARTTIME", "Дата запуска", 11, true);
    AddCol (col, 2, "starttimes", "Время", 7, true);
    AddCol (col, 3, "T_LASTTIME", "Дата последнего документа", 21, true);
    AddCol (col, 4, "TIMES", "Время", 7, true);
    AddCol (col, 5, "T_ALLDOC", "Обработано документов", 17, true, 0);
    AddCol (col, 6, "T_LOGFILE", "Логфайл", 22, false);
    AddCol (col, 7, "T_ERRMSG", "Последнее сообщение об ошибке", 10, false);


    MACRO EvProc(rs, cmd, id, key)
        if ((cmd == DLG_KEY) and (key == 319 )) /* F5 */
           ShowOperations(rs.value(0),rs.value(2));
        end;
        if ((cmd == DLG_KEY) and (key == 320 )) /* F6 */
           ShowErrorsForRobot(rs.value(0),rs.value(2));
        end;
    END;

    RunScroll( rs,8,col,null,"EvProc","Неизвестные обработчики","~ESC~ Выход",false,null,null,145,null ) 

END;

/* Обработчик панели */

MACRO EventPanel(pn, CMD, ID, KEY)

    if (CMD == DLG_INIT)
        return InitPanel(pn, CMD, ID, KEY);
    end;
    if (CMD == DLG_KEY)
       /* if(KEY == 317) // F3 
            SetTimer(mon_panel,UpdateTime,false);
            ListPanel(pn, CMD, ID, KEY);
            ShowReportRunTime(pn);
            SetTimer(mon_panel,UpdateTime);
            UpdateFields(pn);
            return CM_IGNORE;
        elif((KEY == 13) and (ID == FldNumber(pn)-1)) //ENTER 
            SetFocus(pn,0);
            return CM_IGNORE;*/
        if(KEY == 316) // F2 
           // SetTimer(mon_panel,UpdateTime,false);
            test_iis();
            ShowReportRunTime(pn);
            UpdateFields(pn);
            return CM_IGNORE;
     /*   elif(KEY == 32)  // Пробел 
            if(pn.rec.oper != "Все")
                pn.rec.oper = "Все";
                ShowReportRunTime(pn);
            end;
            UpdateFields(pn);
            return CM_IGNORE;
        elif(KEY == 319)  // F5 
            SetTimer(mon_panel,UpdateTime,false);
            ShowRobots(pn);
            SetTimer(mon_panel,UpdateTime);
        elif(KEY == 320) // F6 
            SetTimer(mon_panel,UpdateTime,false);
            ShowUnknownRobots(pn);
            SetTimer(mon_panel,UpdateTime);
        elif(KEY == KEY_CTRL_F)
            SetTimer(mon_panel,UpdateTime,false);
            ExecMacroFile("SearchForOperation.mac","RunSearch");
            SetTimer(mon_panel,UpdateTime);
        elif(KEY == KEY_ALT_P)
            SetTimer(mon_panel,UpdateTime,false);
            ExecMacroFile("RobotsPing.mac","RunCheckRobot");
            SetTimer(mon_panel,UpdateTime);*/
        end;
    end;
    if(CMD == DLG_TIMER) // Таймер 

        ShowReportRunTime(pn);
        UpdateFields(pn);
        return CM_IGNORE
    end;
  
END;

//Точка входа
if (rundialog(mon_panel,"EventPanel"))
    exit(1);
else
    exit(1);
end;
