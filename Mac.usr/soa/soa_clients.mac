// -------------------------------------------------------------------------------------------------
// @filename: soa_clients.mac v.1
// @author  : 2013-05-01 zip_z. 
// @desc    : ТК Life - субъекты экономики
// @changes : none
// -------------------------------------------------------------------------------------------------
import ptinter, bankinter;
import soa_core, soa_client_checkdata, SOA_DUMP;

/*** ВНУТРЕННИЕ ИНТЕРФЕЙСНЫЕ МЕТОДЫ (исключаем дублирование кода в бизнес-логике) ***/

// @desc: найти id регистрирующего органа
private macro getRegPartyId( _regCode )
    var cmd, rs;
    cmd = rsdCommand( " SELECT   CODE.T_OBJECTID OBJECTID "
                      "   FROM   DPARTYOWN_DBT PTOWN, DOBJCODE_DBT CODE "
                      "  WHERE       CODE.T_OBJECTID   = PTOWN.T_PARTYID "
                      "          AND PTOWN.T_PARTYKIND = 6 "
                      "          AND CODE.T_OBJECTTYPE = 3 "
                      "          AND CODE.T_CODEKIND   = 28 "
                      "          AND T_CODE            = :REG_CODE; " );
    cmd.addparam( "", RSDBP_IN, _regCode );

    rs = rsdRecordset( cmd );

    if( rs.movenext ) return rs.value( "OBJECTID", NULL, V_INTEGER )
    else              return 0;
    end;
onerror return 0;
end;

// @desc    : заполнить и обновить структуру клиента
private macro PT_FillClientParameters (p_partyid          :integer // dparty_dbt.t_partyid
                                      ,p_legalform        :integer // форма собственности
                                      ,p_shortname        :string  // краткое наименование
                                      ,p_fullname         :string  // полное наименование
                                      ,p_addname          :string  // дополнительное наименование
                                      ,p_lastname         :string  // фамилия
                                      ,p_firstname        :string  // имя
                                      ,p_secondname       :string  // отчество
                                      ,p_latnameP         :string  // латинское полное наименование
                                      ,p_latnameJ         :string  // латинское полное наименование
                                      ,p_birthdate        :date    // дата рождения
                                      ,p_birthplace       :string  // место рождения
                                      ,p_ismale           :bool    // is мужчина
                                      ,p_nationality      :string  // национальность
                                      ,p_isemployer       :bool    // is работотатель (ЧП)
                                      ,p_workplace        :string  // место работы и должность
                                      ,p_okpo             :string  // код ОКПО
                                      ,p_country          :string  // страна
                                      ,p_superiorid       :integer // id вышестоящей организации
                                      ,p_charterdate      :date    // {нет документации}
                                      ,p_capitalfi_iso    :string  // {нет документации}
                                      ,p_declarecapital   :money   // {нет документации}
                                      ,p_realcapital      :money   // {нет документации}
                                      )
    // заполнение
    private var clientId = nvl_ex( p_partyid, 0 );
    private var pt       = RsbParty( clientId );

    pt.LegalForm = p_legalform; 
    
    if   ( p_legalform == PT_PARTYKIND_LEGAL )
        if (notnull (p_charterdate    )) pt.charterdate    = p_charterdate;    end;
        if (notnull (p_capitalfi_iso  )) pt.capitalfi      = p_capitalfi_iso;  end;
 //       if (notnull (p_declarecapital )) pt.declarecapital = p_declarecapital; end;//LAO убрал
 //       if (notnull (p_realcapital    )) pt.realcapital    = p_realcapital;    end;
        if (notnull (p_okpo           )) pt.okpo           = p_okpo;           end;
        if (notnull (p_latnameJ        )) pt.latname        = p_latnameJ;      end;//LAO Добавил в обработку
    
    elif ( p_legalform == PT_PARTYKIND_PHYSICAL )
        if (notnull (p_isemployer     )) pt.isemployer = p_isemployer;         end;
        if (p_isemployer == true) 
           if (notnull (p_okpo       )) pt.okpo       = p_okpo;                end;
        end;
        if (notnull (p_firstname      )) pt.firstname  = p_firstname;          end;
        if (notnull (p_secondname     )) pt.patronymic = p_secondname;         end;
        if (notnull (p_lastname       )) pt.lastname   = p_lastname;           end;
        if (notnull (p_latnameP       )) pt.latname    = p_latnameP;           end;//LAO Добавил в обработку
        if (notnull (p_birthdate      )) pt.birthdate  = p_birthdate;          end;
        if (notnull (p_birthplace     )) pt.birthplace = p_birthplace;         end;
        if (notnull (p_ismale         )) pt.ismale     = p_ismale;             end;
        if (notnull (p_nationality    )) pt.ethnos     = p_nationality;        end;
        if (notnull (p_workplace      )) pt.placework  = p_workplace;          end;
    end;
    
    // общее для всех
    if (notnull (p_fullname  )) pt.fullname   = p_fullname;  end;
    if (notnull (p_shortname )) pt.shortname  = p_shortname; end;
    if (notnull (p_addname   )) pt.addname    = p_addname;   end;
    
    // LAO дополнительная проверка на наличие полного /сокращенного наименования у физика
    // zip_z. В общем, если полное/сокращённое наименование не задано (пробел), мы его дозаполняем; процедуры определены в soa_client_checkdata.mac
    if (p_legalform == PT_PARTYKIND_PHYSICAL) 
        if (pt.fullname  == EMPTY_STRING) 
            pt.fullname   = getFullName (nvl_ex (pt.lastname   ,SPACE_STRING),
                                         nvl_ex (pt.firstname  ,SPACE_STRING),
                                         nvl_ex (pt.patronymic ,SPACE_STRING));  
        end;
        
        if (pt.shortname == EMPTY_STRING) 
            pt.shortname  = getShortName(pt.fullname); 
        end;
    end;
    
    
    // если внешняя система не передала параметры, заполняем их значениями по умолчанию
    // ага, а при обновлении если ИП был нерезидентом, то он ВНЕЗАПНО станет резидентом
    // Golovkin 31.01.2013 R-322998
    if  ( clientId == 0 )        pt.nrcountry = nvl_ex (p_country, "RUS"); // при создании клиента
    elif( notnull( p_country ) ) pt.nrcountry = p_country;                 // при обновлении, если передан параметр p_country
    end;

    pt.superiorid = nvl_ex (p_superiorid, -1);
    
    // LAO обновление, возврат результата, костыль для вставки капитала
    if (true == pt.update ())
        if (p_legalform == PT_PARTYKIND_LEGAL)
            add_capital (pt.partyid,p_declarecapital,p_realcapital);
        end;
        return pt.partyid;
    else
        runerror (TrimErrMsg (GetErrMsg()));
    end;

//onerror (e) catchUserError (e); 
end;

/*** КЛИЕНТЫ (usr_create_client; usr_update_client; usr_delete_client) ***/

// @desc    : создать клиента
macro usr_create_client (p_legalform        :integer // форма собственности
                        ,p_country          :string  // страна
                        ,j                  :object  // описание ЮЛ
                        ,p                  :object  // описание ФЛ
                        ):integer
    // Vaschenko D. обнуляем опера
    initSessionData();

    // проверки параметров
    private   var inter_mode,stat;
    private   var country;
  /*  inter_mode = SetDialogFlag(0);
    stat = SetRSTrace(true);
    SetDialogFlag(inter_mode);
    */

    if ((ValType (p_country) != V_STRING) and (p_country != null))
        runerror ("Параметр Country должен быть строкой или NULL");
    end;
    
    // Golovkin 31.01.2013 R-322998 невозможно было создать физ. лицо нерезидент!!! 
    if ( p_legalform == PT_PARTYKIND_LEGAL ) country = safeGetProp( j, "country", V_STRING ); // для юр.  лица код страны из структуры юр. лица
    else                                     country = p_country;                             // для физ. лица код из параметра p_country
    end;
    
    var chk = checkData (p_legalform
                        ,safeGetProp (j, "shortname" , V_STRING )
                        ,safeGetProp (j, "fullname"  , V_STRING )
                        ,safeGetProp (p, "firstname" , V_STRING )
                        ,safeGetProp (p, "secondname", V_STRING )
                        ,safeGetProp (p, "lastname"  , V_STRING ));
    if (chk != EMPTY_STRING) runerror (TrimErrMsg (chk)); end;
    
    // всё пройдено - старт транзакции ввода
    return PT_FillClientParameters ( null
                                    ,p_legalform
                                    ,safeGetProp (j, "shortname"       ,   V_STRING  )
                                    ,safeGetProp (j, "fullname"        ,   V_STRING  )
                                    ,safeGetProp (j, "addname"         ,   V_STRING  )
                                    ,safeGetProp (p, "lastname"        ,   V_STRING  )
                                    ,safeGetProp (p, "firstname"       ,   V_STRING  )
                                    ,safeGetProp (p, "secondname"      ,   V_STRING  )
                                    ,safeGetProp (p, "latname"         ,   V_STRING  ) //LAO Добавил в обработку
                                    ,safeGetProp (j, "latname"         ,   V_STRING  ) //LAO Добавил в обработку
                                    ,safeGetProp (p, "birthdate"       ,   V_DATE    )
                                    ,safeGetProp (p, "birthplace"      ,   V_STRING  )
                                    ,safeGetProp (p, "ismale"          ,   V_BOOL    )
                                    ,safeGetProp (p, "nationality"     ,   V_STRING  )
                                    ,safeGetProp (p, "isemployer"      ,   V_BOOL    )
                                    ,safeGetProp (p, "workplace"       ,   V_STRING  )
                                    ,safeGetProp (j, "okpo"            ,   V_STRING  )
                                    ,country
                                    ,nvl_ex (safeGetProp (j, "superiorid", V_INTEGER ), -1)
                                    ,safeGetProp (j, "charterdate"     ,   V_DATE    ) 
                                    ,safeGetProp (j, "capitalfi_iso"   ,   V_STRING  )
                                    ,safeGetProp (j, "declarecapital"  ,   V_MONEY   )
                                    ,safeGetProp (j, "realcapital"     ,   V_MONEY   )
                                   );
onerror (e) 
    //dump ("soa_clients", "usr_create_client", p_legalform, p_country, j, p); 
    catchUserError (e);    
end;

// @desc    : обновить параметры клиента
macro usr_update_client (p_partyid          :integer // dparty_dbt.t_partyid
                        ,j                  :object  // описание ЮЛ
                        ,p                  :object)  // описание ФЛ
// Vaschenko D. обнуляем опера 
    initSessionData();
    var message; 
    
    if (isNull(p_partyid)) //LAO Добавил
        runerror (TrimErrMsg ("Отсутствует обязательный параметр: Код клиента"));
    end;
    
    //LAO Проверка на присутствие клиента в базе
    if (SOA_CheckPartyID(p_partyid, message) == false)        
        runerror (TrimErrMsg (message));
    end;
    
    return (0 < PT_FillClientParameters ( p_partyid
                                        ,PT_GetLegalForm (p_partyid)
                                        ,safeGetProp (j, "shortname"       ,   V_STRING  )
                                        ,safeGetProp (j, "fullname"        ,   V_STRING  )
                                        ,safeGetProp (j, "addname"         ,   V_STRING  )
                                        ,safeGetProp (p, "lastname"        ,   V_STRING  )
                                        ,safeGetProp (p, "firstname"       ,   V_STRING  )
                                        ,safeGetProp (p, "secondname"      ,   V_STRING  )
                                        ,safeGetProp (p, "latname"         ,   V_STRING  ) // zip_z
                                        ,safeGetProp (j, "latname"         ,   V_STRING  ) // LAO Добавил в обработку
                                        ,safeGetProp (p, "birthdate"       ,   V_DATE    )
                                        ,safeGetProp (p, "birthplace"      ,   V_STRING  )
                                        ,safeGetProp (p, "ismale"          ,   V_BOOL    )
                                        ,safeGetProp (p, "nationality"     ,   V_STRING  )
                                        ,safeGetProp (p, "isemployer"      ,   V_BOOL    )
                                        ,safeGetProp (p, "workplace"       ,   V_STRING  )
                                        ,safeGetProp (j, "okpo"            ,   V_STRING  )
                                        ,safeGetPropMandatory (j, "country",   V_STRING  )
                                        ,nvl_ex (safeGetProp (j, "superiorid", V_INTEGER ), -1)
                                        ,safeGetProp (j, "charterdate"     ,   V_DATE    )
                                        ,safeGetProp (j, "capitalfi_iso"   ,   V_STRING  )
                                        ,safeGetProp (j, "declarecapital"  ,   V_MONEY   )
                                        ,safeGetProp (j, "realcapital"     ,   V_MONEY   )
                                       ));
         
onerror (e) catchUserError (e);  
end;

// @desc    : заблокировать клиента

macro usr_delete_client (p_partyid:integer):bool
    var message;
    if (SOA_CheckPartyID(p_partyid, message) == false)
        runerror(message);
    end;
  
    var pt = RsbParty (p_partyid);
    return pt.lock ();
onerror (e) catchUserError (e);    
end;

/*** ОБСЛУЖИВАНИЕ КЛИЕНТОВ ***/

// @desc    : установить вид обслуживания клиента
macro usr_set_client_service (p_partyid       :integer // dparty_dbt.t_partyid
                             ,d               :object  // блок данных "описание подразделения" (department)
                             ,s               :object  // блок данных "вид обслуживания" (service)
                             ):bool
    // Vaschenko D. обнуляем опера
    initSessionData();

    var cmd, message,Branch,stat,StartDate_Read, FinishDate_Read,startdate,servkind;   

      //LAO Не были добавлены проверки, добавил
      //LAO Проверка на присутствие клиента в базе, вид обслуживания, замена по дефолту бранч на департмент при его отсутсвие
      //I-012048
      //LAO инициализация сразу
    Branch= nvl_ex(safeGetProp (d ,"branch" ,V_INTEGER),nvl_ex (safeGetProp (d ,"Department"    ,V_INTEGER),{OPERDPRTNODE} ));
    startdate=nvl_ex (safeGetProp (s ,"startdate" ,V_DATE   ), {CURDATE}      );
    ServKind= nvl_ex (safeGetProp (s ,"servkind"  ,V_INTEGER), 3               );
    
    if (SOA_CheckPartyID(p_partyid, message) == false)
        runerror (TrimErrMsg(message));
    end;
    
    if (SOA_CheckServKind(ServKind, message) == false)
        runerror (TrimErrMsg(message));
    end;    

    //LAO не учтен нюанс со сроком обслуживания. Копипаста с Котопса.
    stat= PT_BindClientWithBranch (p_partyid
                                   ,ServKind
                                   ,Branch//nvl_ex (safeGetProp (d ,"branch"    ,V_INTEGER), {OPERDPRTNODE} )
                                   ,nvl_ex (safeGetProp (s ,"oper"      ,V_INTEGER), {OPER}         )
                                   ,startdate
                                   ,true  //Golovkin 14.05.2014 HF#37
                                   );
    if (stat)
        СрокОбслуживанияКлиента(p_partyid, nvl_ex (safeGetProp (s ,"servkind"  ,V_INTEGER), 3), StartDate_Read, FinishDate_Read);
        if (StartDate_Read != startdate)
            // KS 29.09.2010 I-066835 дата РКО: Ошибка при постановке клиента на обслуживание. Дата не установлена. Обновляю напрямую
            cmd = RSDCommand("update dclient_dbt set t_startdate="+getSqlDate(StartDate)+" where t_partyid = ? and t_servicekind = ?");
            cmd.addParam("PartyID", RSDBP_IN, p_partyid);
            cmd.addParam("ServKind", RSDBP_IN, ServKind);
            cmd.Execute();
        end;
        return stat;
    else
        runerror (TrimErrMsg ("Ошибка при постановке клиента на обслуживание. " + GetErrMsg()));
    end;                       

//onerror (e) catchUserError (e);    
end;

// @desc    : удалить вид обслуживания клиента
//LAO Совершенно не та структура что в ТЗ, меняю.
macro usr_delete_client_service ( p_partyid:integer, d:object )
    // Vaschenko D. обнуляем опера
    initSessionData();
    //LAO до хотфикса  207945 удаления только через РС 
   
    
    var message,stat,servkind,startdate;
    
//    message =  "Временно не доступно, пожалуйста, сделайте это через РС Банк";
//    runerror (TrimErrMsg(message));
    
    
    ServKind = safeGetProp (d ,"servkind"  ,V_INTEGER);
    
    if (ServKind==0)
        message = "Отсутствует обязательный параметр servkind";
        runerror (TrimErrMsg(message));
    end; 
     
     //LAO проверки добавил
    if (SOA_CheckPartyID(p_partyid, message) == false)
        runerror (TrimErrMsg(message));
    end;
    
    if (SOA_CheckServKind(ServKind, message) == false)
        runerror (TrimErrMsg(message));
    end;  
    
    stat = PT_CloseClientService(p_partyid, ServKind,date("31.12.9999"), true);
    if (not stat)
        message = "Клиент уже снят с обслуживания/У клиента нет данного вида осблуживания ";
        runerror (TrimErrMsg(message));
    else
        return stat;
    end; 
    
//onerror (e) catchUserError (e);    
end;

/*** КОДЫ КЛИЕНТОВ ***/

// @desc    : установить клиенту p_partyid код вида p_codekind со значением p_codevalue
// @return  : V_BOOL
// LAO
macro usr_set_client_code ( p_partyid:integer, d:object )
    // Vaschenko D. обнуляем опера
    initSessionData();

    var   CodeKind, CodeValue, Message, code, pt;
    
    CodeKind  = safeGetPropMandatory (d ,"CodeKind"  ,V_INTEGER);
    CodeValue = safeGetPropMandatory (d ,"CodeValue"  ,V_STRING);
    
    if (isNull (CodeKind))                       
        runerror("Не указан вид добавляемого кода"); 
    end;
    
    if (not SOA_CheckPartyID (p_partyid,Message)) runerror (TrimErrMsg (Message)); end;
    if (not SOA_CHECKCODE (CodeKind,Message))     runerror (TrimErrMsg (Message)); end;
    
    // инициализируем RsbParty, закрываем старый код, устанавливаем новый (если p_codevalue) задан
    // если прилетает p_codekind == 1 (PTCK_CONTR), зовем нашу собственноручно писанную установку RS-кода,
    // на переданное значение p_codevalue не обращаем внимания (ничего страшного, таке життя)
    pt   = RsbParty (p_partyid);
    
    code = pt.code;
    code.closeCode (CodeKind); 
    
    // установка RS-кода
    if ((CodeKind == PTCK_CONTR)  and ((valtype(CodeValue) == V_UNDEF) or (CodeValue == "")))
        if (execMacroFile ("set_rscode.mac", "SetRScode", pt) == false) 
            runerror (getErrMsg ()); 
        end;
    else
        code.setCode (CodeKind, CodeValue); 
    end;
    
    return pt.update ();
end;

// @desc    : удалить у клиента p_partyid код вида p_codekind
macro usr_delete_client_code (p_partyid:integer, p_codekind:integer):bool
    var  message,stat;
    //LAO добавил проверки
    if (SOA_CheckPartyID(p_partyid, message) == false)        
        runerror (TrimErrMsg (Message));
    end;
    
    if (SOA_CHECKCODE(p_codekind,Message) ==false)
        runerror (TrimErrMsg (Message));
    end;
    
    var pt = RsbParty (p_partyid);
    var code = pt.code;

    stat = code.DeleteCode (p_codekind); 
    
    //LAO сделал как было раньше, по старинке =)
    if (stat == true)
        stat = pt.Update();
    end;

    if (stat == true)        
        return true;
    else
        runerror (TrimErrMsg ("Ошибка при удалении кода клиента. " + GetErrMsg()));    
    end;

end;


/*** АДРЕСА КЛИЕНТОВ ***/
//LAO слезы Оо, добавляю недостающие параметры, да не, переписываю всё по-старинке
macro usr_set_client_address (p_partyid         :integer 
                             ,a                 :object
                             )
    // Vaschenko D. обнуляем опера
    initSessionData();

    var stat,message;
 /*     private var inter_mode, stats;
      inter_mode = SetDialogFlag(0);
    stat = SetRSTrace(true);
    SetDialogFlag(inter_mode);*/
      //LAO Добавляю проверки
    if (safeGetProp (a ,"Addresstype"  ,V_INTEGER) ==0)
        runerror ("Не указан  тип адресса");
    end;
    
    if (SOA_CheckPartyID(p_partyid, message) == false)        
        runerror("tyt mil jz"); //  (TrimErrMsg (Message));
    end;
    
    if (SOA_CHECKADDTYPE(a.Addresstype,message) == false)
        runerror (TrimErrMsg (Message));
    end; 
    
    if (SOA_ISDoubleADRESS(p_partyid,a.Addresstype))
        runerror("Адрес для клиента с типом "+a.Addresstype+" уже существует в системе");
    end;
    
    var Client   = RsbParty(p_partyid);
   


    var ClientAddress = Client.address(a.Addresstype);
     
    ClientAddress.Country        = safeGetProp (a ,"Country"        ,V_INTEGER);
    ClientAddress.Address        = safeGetProp (a ,"Address"        , V_STRING);
    ClientAddress.PhoneNumber    = safeGetProp (a ,"PhoneNumber"    , V_STRING);
    ClientAddress.PhoneNumberAd  = safeGetProp (a ,"PhoneNumberAd"  , V_STRING);
    ClientAddress.FaxNumber      = safeGetProp (a ,"FaxNumber"      , V_STRING);
    ClientAddress.EMail          = safeGetProp (a ,"Email"          , V_STRING);
    ClientAddress.MobilePhone    = safeGetProp (a ,"Mobilephone"    , V_STRING);
    ClientAddress.CodeDistrict   = safeGetProp (a ,"Codedistrict"   , V_STRING);
    ClientAddress.CodePlace      = safeGetProp (a ,"Codeplace"      , V_STRING);
    ClientAddress.CodeProvince   = safeGetProp (a ,"Codeprovince"   , V_STRING);
    ClientAddress.CodeRegion     = safeGetProp (a ,"Coderegion"     , V_STRING);
    ClientAddress.CodeStreet     = safeGetProp (a ,"Codestreet"     , V_STRING);
    ClientAddress.District       = safeGetProp (a ,"District"       , V_STRING);
    ClientAddress.Flat           = safeGetProp (a ,"Flat"           , V_STRING);
    ClientAddress.House          = safeGetProp (a ,"House"          , V_STRING);
    ClientAddress.MobileProvider = safeGetProp (a ,"MobileProvider" , V_STRING);
    ClientAddress.NumCorps       = safeGetProp (a ,"NumCorps"       , V_STRING);
    ClientAddress.Place          = safeGetProp (a ,"Place"          , V_STRING);
    ClientAddress.PostIndex      = safeGetProp (a ,"Postindex"      , V_STRING);
    ClientAddress.Province       = safeGetProp (a ,"Province"       , V_STRING);
    ClientAddress.Region         = safeGetProp (a ,"Region"         , V_STRING);
    ClientAddress.RegionNumber   = safeGetProp (a ,"Regionnumber"   , V_STRING);
    ClientAddress.RS_Mail_Country= safeGetProp (a ,"RsMailCountry"  ,V_INTEGER);
    ClientAddress.RS_Mail_Node   = safeGetProp (a ,"RsMailNode"     ,V_INTEGER);
    ClientAddress.RS_Mail_Region = safeGetProp (a ,"RsMailRegion"   ,V_INTEGER);
    ClientAddress.Street         = safeGetProp (a ,"Street"         , V_STRING);
    ClientAddress.Telegraph      = safeGetProp (a ,"Telegraph"      , V_STRING);
    ClientAddress.TelexNumber    = safeGetProp (a ,"TelexNumber"    , V_STRING);
    ClientAddress.Territory      = safeGetProp (a ,"Territory"      , V_STRING);
    //фу-хххх
    
    stat = Client.Update();    

    if (stat == true)
        return stat;  
    else
        runerror (TrimErrMsg ("Ошибка при создании адреса клиента. " + GetErrMsg()));
    end;
end;

macro usr_del_client_address (p_partyid:integer, p_addresstype:integer):bool
    // Vaschenko D. обнуляем опера
    initSessionData();

    var pt   = RsbParty(p_partyid);
    var addr = pt.address(p_addresstype);
    addr.delete ();
    return pt.update ();
onerror (e) catchUserError (e);    
end;


/*** ДАННЫЕ РЕГИСТРАЦИИ КЛИЕНТОВ ***/

macro usr_set_client_paper (p_partyid:integer, paper :object)
    // Vaschenko D. обнуляем опера
    initSessionData();

    var message;
    
    if (SOA_CheckPartyID(p_partyid, message) == false)
        runerror(message);
    end;
    
    if (isnull(safeGetPropMandatory (paper ,"Paperkind"  ,V_INTEGER )))  runerror ("Не указан вид документа"        ); end;
    if (isnull(safeGetPropMandatory (paper ,"number"     ,V_STRING  )))  runerror ("Не указан номер документа"      ); end;
    
    if (SOA_ISDoubleDUL(p_partyid, paper.Paperkind   )) runerror ("Документ с типом "+paper.Paperkind+" уже существует"); end;
    if (not SOA_CheckDOCKind(paper.Paperkind, message)) runerror (message);                                               end; 

    var pt   = RsbParty(p_partyid);
      //12.02.2014 Vaschenko D. проверка удостоверяющего документа, только для физ лиц.
    if(pt.LegalForm == 2)    
        var p    = pt.personPaper (paper.paperkind);
    
        p.series     = safeGetProp (paper ,"Series"  ,V_STRING);
        p.number     = safeGetProp (paper ,"Number"  ,V_STRING);
        p.issuer     = safeGetProp (paper ,"Issuer"  ,V_STRING);
        
        p.issueddate = nvl_ex (safeGetProp (paper ,"Issueddate"  ,V_DATE),date("01-01-0001"));
        p.issuercode = safeGetProp (paper ,"Issuercode"  ,V_STRING);
        p.ismain     = (safeGetProp (paper ,"ismain"  ,V_STRING)==CHAR_ISSET);
     
        return pt.update ();
    else
        runerror("Удостоверяющий документ задается только для физических лиц!");
    end;
onerror (e) catchUserError (e);    
end;

macro usr_delete_client_paper (p_partyid:integer, p_paperkind:integer)
    // Vaschenko D. обнуляем опера
    initSessionData();

    var message;
    if (not SOA_CheckDOCKind(p_paperkind, message )) runerror(message); end; 
    if (not SOA_CheckPartyID(p_partyid,   message )) runerror(message); end;
    
    var pt   = RsbParty (p_partyid);
    var p    = pt.personPaper (p_paperkind);
    
    p.delete ();
    return pt.update ();
onerror (e) catchUserError (e);    
end;

/*** РЕГИСТРАЦИОННЫЕ ДОКУМЕНТЫ КЛИЕНТОВ ***/

// @desc   : установка данных о регистрации клиента
// @return : V_INTEGER rdoc.documentid
// LAO 
macro usr_set_client_regdoc (p_partyid :integer,doc )
    // Vaschenko D. обнуляем опера
    initSessionData();

    var message,docdate;
    
    if (not SOA_CheckPartyID(p_partyid, message)) runerror (message); end;

    if (isnull (safeGetPropMandatory (doc ,"RegPartyKind"  ,V_INTEGER )))  runerror("Не указан вид рег. органа"      ) end;
    if (isnull (safeGetPropMandatory (doc ,"RegDocKind"    ,V_INTEGER )))  runerror("Не указан вид рег. документа"   ) end;
    if (isnull (safeGetPropMandatory (doc ,"StarDate"      ,V_DATE    )))  runerror("Не указана дата начала действия") end; // StarDate... звёздная дата #$@...
  //  if (isnull (safeGetPropMandatory (doc ,"Number"        ,V_STRING  )))  runerror("Не указан номер документа"      ) end;
    
    docdate = nvl_ex (safeGetPropMandatory (doc ,"DocDate", V_DATE), {curdate});
    
    if (not SOA_CHECKREGDOCTYPE (doc.RegPartyKind,doc.RegDocKind,message))               runerror(message); end; 
    if (not SOA_CHECKREGDOC (p_partyid,doc.RegPartyKind,doc.RegDocKind,docdate,message)) runerror(message); end; 

    var pt = RsbParty (p_partyid);
    var rdoc = pt.partyRegDoc(doc.RegPartyKind, doc.RegDocKind);

    // 04.12.2013 Golovkin R-296249 если Фронт не передал RegPartyId, то определяем его по RegCode
    rdoc.regpartyid = nvl_ex ( safeGetProp (doc, "RegPartyId", V_INTEGER), getRegPartyId( safeGetProp (doc, "RegCode", V_STRING) ) );

    rdoc.series     = safeGetProp (doc,"Series",V_STRING);
    
    rdoc.startdate  = doc.StarDate;
    rdoc.number     = safeGetProp (doc,"number",V_STRING); // zip_z
    rdoc.docdate    = docdate;
    rdoc.ismain     = (safeGetProp(doc,"IsMain",V_STRING) == "1");
    
    if (pt.update ())        
        return rdoc.documentid;
    else
        runerror("Ошибка при создании регистрации клиента. " + GetErrMsg());
    end;
onerror (e) catchUserError (e);    
end;

// @desc   : удаление данных о регистрации клиента
// @return : V_BOOL (true - если все хорошо)
macro usr_delete_client_regdoc ( p_partyid:integer, doc:object )
    // Vaschenko D. обнуляем опера
    initSessionData();

    var message;
    
    //Проверки на обязательные параметры, прямо тут делаем
    if (isnull (safeGetPropMandatory (doc ,"RegPartyKind"  ,V_INTEGER)))  runerror("Не указан вид рег. органа"      ); end;
    if (isnull (safeGetPropMandatory (doc ,"RegDocKind"    ,V_INTEGER)))  runerror("Не указан вид рег. документа"   ); end;
    
    // if (not SOA_CHECKREGDOCTYPE (doc.RegPartyKind, doc.RegDocKind, message    )) runerror(message); end;
    // if (not FIND_REGDOC (p_partyid, doc.RegPartyKind, doc.RegDocKind, message )) runerror(message); end;
    
    var pt = RsbParty (p_partyid);
   
    var rdoc = pt.partyRegDoc(doc.RegPartyKind, doc.RegDocKind);
    rdoc.delete ();
    return pt.update ();
onerror (e) catchUserError (e);    
end;

/*** СОТРУДНИКИ КЛИЕНТА ***/
macro usr_set_client_officer (p_partyid :integer, c_off :object)
    // Vaschenko D. обнуляем опера
    initSessionData();

    var message,p_dateto;                   
    //LAO Делаю проверки
    if ( not SOA_CheckPartyID(p_partyid, message)) runerror(message); end;
    
    if (isnull (safeGetPropMandatory ( c_off ,"personid"  ,V_INTEGER ))) runerror ("Не указан ID субъекта"               ); end;
    if (isnull (safeGetPropMandatory ( c_off ,"DateFrom"  ,V_DATE    ))) runerror ("Не указана дата начала полномочий"   ); end;
    if (isnull (safeGetPropMandatory ( c_off ,"dateto"    ,V_DATE    ))) 
        p_dateto = "00.00.0000";
    else
        p_dateto = c_off.dateto;
    end; 


    var pt   = RsbParty (p_partyid);
    var off  = pt.officer();
    var pers = TRecHandler ("party.dbt");
    var stat;
    
    off.new();
    off.personid       = c_off.personid;
    off.isfirstperson  = (safeGetProp (c_off,"isfirstperson",  V_STRING) == CHAR_ISSET);
    off.issecondperson = (safeGetProp (c_off,"issecondperson", V_STRING) == CHAR_ISSET);
    
    off.post           = safeGetProp  (c_off,"post", V_STRING);
    off.datefrom       = c_off.datefrom;
    off.dateto         = date(p_dateto);
    
    // добавляем RS-код сотруднику, если его нет (сомнительная доработка, т.к. используется 110-й референс)
    var pers_code = "";
    var p         = RsbParty ( c_off.personid);
    var pcode     = p.code;
    
    if (ПолучитьКодСубъекта ( c_off.personid, PTCK_CONTR) == EMPTY_STRING)
        pers.rec.partyid =  c_off.personid;
        if ( stat = (GenerateReference(110, pers_code, OBJ_PARTY, pers) == EXIT_SUCCESS));
            stat = pcode.setCode (PTCK_CONTR, pers_code);
           if (stat==true)
                p.update;
            else
                runerror("Ошибка при создании кода сотрудника. " + GetErrMsg());
            end;
        else 
            runerror("Ошибка при создании кода сотрудника. " + GetErrMsg());
        end;
    else
        stat=true;    
    end;
    
    if (stat==true)
        stat = pt.update ();
    end; 
    if (stat)
        return c_off.personid;
    else
        runerror("Ошибка при создании сотрудника. " + GetErrMsg());
    end;
end;


macro usr_delete_client_officer (p_partyid:integer, p_personid:integer):bool
    // Vaschenko D. обнуляем опера
    initSessionData();

    var pt   = RsbParty (p_partyid);
    var off  = pt.officer();

    //LAO Делаю проверки
    var message;
    if (not SOA_CheckPartyID(p_partyid, message)) runerror(message); end;
    
    var stat = ((off.deletePerson (p_personid)) and (pt.Update()));
    if (not stat) runerror("Не удалось удалить сотрудника " + GetErrMsg()); end;
    
    return stat;
end;