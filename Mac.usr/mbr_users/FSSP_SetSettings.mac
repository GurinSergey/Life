import RSD, likepy, oralib;

macro FindKeyID(RegName)
   var sql = " WITH t                                                                        "+
             "        AS (SELECT   REG.T_KEYID keyid, fld                                    "+
             "              FROM   (    SELECT   T.T_KEYID,                                  "+
             "                                   SYS_CONNECT_BY_PATH (T.T_NAME, '\\') FLD,   "+
             "                                   LEVEL LV,                                   "+
             "                                   T.T_DESCRIPTION                             "+
             "                            FROM   dregparm_dbt T                              "+
             "                      START WITH   T.T_PARENTID = 0                            "+
             "                      CONNECT BY   PRIOR T.T_KEYID = T.T_PARENTID) REG,        "+
             "                     dregval_dbt VAL                                           "+
             "             WHERE   VAL.T_KEYID = REG.T_KEYID AND VAL.T_OBJECTID = 0)         "+
             " SELECT   *                                                                    "+
             "   FROM   t                                                                    "+
             "  WHERE   fld = ?                                                              ";
       sql = execSQLSelect(sql, makeArray(SQLParam("", RegName)));      
       if (sql.moveNext()) return sql.value("keyid"); end;
       return -1;
end;   

macro RegPath(KeyID, RegPath)
  var sql = " MERGE INTO   dregval_dbt t                                          "+
            "        USING   (    SELECT   1 FROM DUAL)                           "+
            "           ON   (    T.T_KEYID = :KeyID1                             "+
            "                 AND T.T_OBJECTID = RSBSESSIONDATA.OPER              "+
            "                 AND T.T_REGKIND = 2)                                "+
            "   WHEN MATCHED                                                      "+
            "   THEN                                                              "+
            "      UPDATE SET T_FMTBLOBDATA_XXXX = UTL_RAW.cast_to_raw (:PATH1)   "+
            "   WHEN NOT MATCHED                                                  "+
            "   THEN                                                              "+
            "      INSERT              (T_KEYID,                                  "+
            "                           T_REGKIND,                                "+
            "                           T_OBJECTID,                               "+
            "                           T_BLOCKUSERVALUE,                         "+
            "                           T_EXPDEP,                                 "+
            "                           T_LINTVALUE,                              "+
            "                           T_LDOUBLEVALUE,                           "+
            "                           T_FMTBLOBDATA_XXXX)                       "+
            "          VALUES   (:KeyID2,                                         "+
            "                    2,                                               "+
            "                    RSBSESSIONDATA.OPER,                             "+
            "                    CHR (1),                                         "+
            "                    0,                                               "+
            "                    0,                                               "+
            "                    0,                                               "+
            "                    UTL_RAW.cast_to_raw (:PATH2))                    ";
      sql = execSQL(sql, makeArray(SQLParam("", KeyID)
                                  ,SQLParam("", RegPath)
                                  ,SQLParam("", KeyID)
                                  ,SQLParam("", RegPath)));      
end;                                                                               
            
           
macro RegInit()
   var PATH_IN, 
       PATH_OLDMES, 
       PATH_OUT;
   CONST 
       REGNAME_IN     = "\\PRBB\\FSSPPATH\\IN", 
       REGNAME_OLDMES = "\\PRBB\\FSSPPATH\\OLDMES",  
       REGNAME_OUT    = "\\PRBB\\FSSPPATH\\OUT" ;
   
       while(not SelectFolder(PATH_IN    , NULL, "Выберите папку Import-а сообщения " + REGNAME_IN )) end;
       while(not SelectFolder(PATH_OLDMES, NULL, "Выберите папку Oldmes-a обработанных сообщений " + REGNAME_OLDMES)) end;
       while(not SelectFolder(PATH_OUT   , NULL, "Выберите папку Export-a сообщений " + REGNAME_OUT)) end;

       rsldefcon.BeginTrans;
          RegPath(FindKeyID(REGNAME_IN    ),PATH_IN);
          RegPath(FindKeyID(REGNAME_OLDMES),PATH_OLDMES);
          RegPath(FindKeyID(REGNAME_OUT   ),PATH_OUT);
       rsldefcon.CommitTrans;
       msgBox("Настройки успешно сохранены, теперь нужно перезайти в РС");
onError()
   if (RSLDefCon.IsinTrans)
      RSLDefCon.RollbackTrans;
   end;
end;

RegInit();
exit(1);









