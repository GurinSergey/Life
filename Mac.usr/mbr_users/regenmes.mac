/*
  Перегенерация сообщения в МСН.
  За основу взят макрос mnsgmsbc.mac, функция GenMes();
  (с) Diver
*/

import "mnsgmsbc.mac";
import MesInter;
import PsInter;
import "lib_str.mac";
import ptinter,rsd,rsbdataset,  bankinter , FIinter;
import "diver.mac";
import "wlmnstls.mac";

var acc,cur_id,op,ErrorCod;
var ValueChangeArr=TArray;
var i=-1;
 
/*record wlsess(wlsess);
record wlmes(wlmes);*/
record account_rec  ("account.dbt");
record fi(fininstr);


private const  KEY_F2      =316;
private const  KEY_F3      =317;
private const KEY_ESC      = 27;
private const KEY_SPACE    = 32;
private const KEY_ENTER    = 13;

private const TA_SACNT  = 1;
private const TA_SACNTC = 4;
private const NATCUR = 0;

var Genmesl, outl, outputl="Diver.lbr";                    

GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
Genmesl = FindPath(outputl, outl);
        if (not Genmesl)
                msgbox("Не найдена LBR");
                exit();
        end;
var dlg = TRecHandler("GenMesNS", Genmesl, TRUE); 


macro ПрименитьИзменения;
 var update,select, cmd, rs;
 var StrValAr=TArray;
 var n=0;
 
 while (n<=i)
   StrValAr = StrCut(ValueChangeArr(n),"|");
   if (StrValAr(2) == "") StrValAr(2) = " "; end;//Тримается там оно всё
   select = "select wltpfld.t_name,  wltpfld.t_size, t.t_mesid, t.t_index, t.t_value " 
          + " from dwlmesfld_dbt wlmesfld, dwltpfld_dbt wltpfld, dwlmesval_dbt t "
          + " where (t.t_FieldID = wlmesfld.t_FieldID(+) AND  t.t_TpFieldID = wltpfld.t_TpFieldID(+)) "
          + " and t.t_mesid = " + wlmes.mesid 
          + " and wltpfld.t_name = '" + StrValAr(0) + "'";
   cmd = RSDCommand(select);
   rs = rsdRecordSet(cmd);
   if (rs and rs.MoveNext())
      update = "UPDATE dwlmesval_dbt SET t_value = '" + Ternary(StrLen(StrValAr(2)) > rs.value("t_size"),substr(StrValAr(2),1,rs.value("T_size")),StrValAr(2)) + "'"
              +" WHERE t_mesid = "+ wlmes.mesid 
              +" AND t_index = " + rs.value("t_index");
      cmd = RSDCommand(update);
      cmd.execute();
//getstring(update);
    else
    return false;
   end;
   n = n + 1;
 end;
 return true;
end;

macro ИзменитьПоле(field_name, field_value_new)
var field_value_old: STRING = " ";

  If (ПолучитьПоле(wlmes.mesid, field_name, field_value_old))
     if (trim(field_value_new) != trim(field_value_old))
  [│###########│###########################################│###########################################│]
  (field_name,field_value_old,field_value_new);
      ValueChangeArr(i = i + 1) = field_name + "|" + field_value_old + "|" + field_value_new + "|";
     end;
   Else
     msgbox("Ошибка при попытке получить значение поля " + field_name);
  End;
end;

/*Прим.: Если изменилось что-то в этой функции в макросе mnsgmsbc.mac, нужно внести изменения в regenmes.mac в функцию ReGenMes()
  Diver
*/
macro ReGenMes( buff, Открытие )
  Var RespID, Error, ИдПол, Адрес, Год, ИНННП, ОГРННП, КодНОНП, ИДГНИКлиента, КодНОБ, ИДГНИБанка,КодВидаСчета, ОГРНКО,
      Серия = "" , Номер = "", ДатаРегистрации = date(), Счет, Валюта,
      ФДЛБанка, ТелБанка, ИННКО = "", КППКО = "", НаимКО, КодСостДог, ИНН, 
      ДолжнПрБ = "", ФИОПрБ, НомФ, КППНП = " ", ФИОИП = "", СвидГР, СвидНУ, Нотариус, Адвокат;

  /*Kozina */
  var  OpenAccYear;

  /*
  if(not IsMacroInOperation())
     RunError(string("|Данное сообщение МНС генерируется только на шаге операции"));
  end;

  SetBuff( wlmes,  addrMes );

  PrintLog(2,"Генерация сообщения по SBC");
  */
  ПолучитьСчетСВалютой(buff, Открытие, Счет, Валюта );
  if((not Открытие))
     ПолучитьСчет(Валюта, Счет, GenAcc );
  else

     /* EVG */
     if (not ПолучитьСчет(Валюта, Счет, GenAcc ))
        GenAcc.Client = buff.ClientID;
        GenAcc.Open_Date = buff.Date;
        GenAcc.Type_Account = buff.Type_Account;
     end;

  end;

  /*Kozina определим год открытия счета*/
  var RSD;
  RSD = RSDRecordset( "Select to_char(t_open_date,'yyyy') from daccount_dbt "+
                      "where t_account='"+Счет+"'" );

  if( RSD.MoveNext() )

    OpenAccYear = RSD.Value(0);

  end;

  /* EVG Получение информации по пользователю,
     выгружающему сообщение. */
  var SenderName = "",
      SenderPost = "",
      SenderPhone = "";
  /* EVG Отменено.
  GetSenderData( buff.OperAcc, @SenderName, @SenderPost, @SenderPhone );*/

  
  DateSplit({curdate}, NULL, NULL, Год);
  /*ИдФайл*/
  /* Diver Оставим так как есть 
  ИзменитьПоле( "ИдФайл", " " );
  */
  /*ТипИнФ*/
  ИзменитьПоле( "ТипИнф", "СООБЩБАНКА" );

  /*ВерсПрог*/
  ИзменитьПоле( "ВерсПрог", "RS-Bank V.6");

  
  /* EVG Вывод информации по пользователю.*/
  /*ТелОтпр*/
  /* Diver Оставим так как есть
  ИзменитьПоле( "ТелОтпр", " " );
  */
  /*ДолжнОтпр*/
  /* Diver Оставим так как есть
  ИзменитьПоле( "ДолжнОтпр", " " );
  */
  /*ФИООтпр*/
  /* Diver Оставим так как есть
   ИзменитьПоле( "ФамОтпр", " " );
  */
  /* EVG Отменено
  /*ТелОтпр*/
  ИзменитьПоле( "ТелОтпр", SenderPhone );
  /*ДолжнОтпр*/
  ИзменитьПоле( "ДолжнОтпр", SenderPost );
  /*ФИООтпр*/
  ИзменитьПоле( "ФамОтпр", SenderName );*/

  /*КолДок*/
  ИзменитьПоле( "КолДок", "1" );
  /*ВерсФорм*/
  ИзменитьПоле( "ВерсФорм", "5.02" );
  /*ИдДок*/
  /* Diver Оставим так как есть
  ИзменитьПоле( "ИдДок", " "); 
  */ 
  /*НомСооб*/
  //msgbox (Счет, "|", Валюта);
  /* Diver Оставим так как есть
     Это вообще отдельный разговор*/
  Error = not GetMessageNumber502({OurBank}, Счет, "", 1, Валюта, GenAcc.Client, Серия, Номер );//not GetMessageNumber502({OurBank}, Счет, "", Валюта, -1, Серия, Номер);  
  if(Error)
     RunError(string("Ошибка при генерации номерации номера сообщения"));
  end;
  
  //msgbox (Серия, " - ", Номер);
  ИзменитьПоле( "НомСооб", string(Серия,",",Номер) );
  
  /*КодНОБ*/
  ИДГНИБанка = ПолучитьИДГНИ({OurBank});
  if(ИДГНИБанка == -1)
     RunError("Не задан налоговый орган, в котором зарегистрирован банк (филиал)");
  end; 

  КодНОБ = ПолучитьКодСубъекта( ИДГНИБанка, PTCK_MNS, Error);
  if(Error)
     RunError("Не задан код налогового органа по месту регистрации банка (филиала)");
  end;
  ИзменитьПоле( "КодНОБ", КодНОБ );
  /*НаимКО*/
  НаимКО = ПолучитьНаимКо();
  ИзменитьПоле("НаимКО",НаимКО);
  /*АдрКО*/
  Адрес = ПолучитьАдрес({OurBank});
  if(Адрес != "")
     ИзменитьПоле( "АдрКО", Адрес );
  else
     RunError(string("Не найден адрес субъекта с идентификатором", {OurBank}));
  end;
  /*РегНомКО*/
  /* Diver Оставим так как есть
  ИзменитьПоле("РегНомКО", string(int(SubStr(Серия,1,4))));
  */
  /*НомФ*/
  if( not НашБанкГоловной() )
    НомФ = string(int(SubStr(Серия,5,4)));
    ИзменитьПоле("НомФ", НомФ );

  /* EVG Иначе записывается пробел */
  else
    ИзменитьПоле("НомФ", " " );
  end;

  /*БИК*/
  ИзменитьПоле( "БИК", {MFO_Bank} );

  /*ИННКО*/
  ПроверитьИНН();
  ИННКО = RemoveKPP(GetPartyINN({OurBank}, 1) );
  ИзменитьПоле( "ИННКО", ИННКО );
  /*КППКО*/
  КППКО = RemoveINN(GetPartyINN({OurBank}, 1) );
  ИзменитьПоле( "КППКО", КППКО );
  
  /*ОГРНКО*/
  ОГРНКО = ПолучитьКодСубъекта({OurBank}, PTCK_OGRN, Error, 0, 1 );
  if(Error)
     RunError(string("Не найден код ОГРН у субъекта с идентификатором ", {OurBank} ));
  end;
  ИзменитьПоле( "ОГРНКО", ОГРНКО );

  
  /*НаимНП*/
  /*ФИОИП*/
  if(ПолучитьСубъекта(GenAcc.Client, Налогоплательщик))
     RunError("Не найден налогоплательщик");
  end;

/*Kozina Ошибку об отсутствии ИНН не выдаем, если "правильный" опер закрывает старый счет*/
    ИНН = ПолучитьКодСубъекта(Налогоплательщик.PartyID, PTCK_INN, Error);
    if((ИНН == "") or Error )
       if( not((not Открытие) and ( int(OpenAccYear)<2003) and (ВходитВГруппу({oper},174))) )
            RunError("Не найден ИНН клиента банка");
       end;

      
    else    ИНННП = RemoveKPP(ИНН);
            КППНП = RemoveINN(ИНН);
    end;
//  if(strlen( ИНННП ) != 12)  
/*Kozina*/
  if(Налогоплательщик.LegalForm != 2)

    ИзменитьПоле("НаимНП",Налогоплательщик.Name);
  else
    ClearRecord(persn);
    persn.PersonID = Налогоплательщик.PartyID;
    if( getEQ(persn) )
      ФИОИП =  string( persn.Name1 + "," + persn.Name2 + "," + persn.Name3);
      ИзменитьПоле("ФИОИП", ФИОИП);
    end;
  end;
  
  /*СвидГР*/
  Серия = "";
  Номер = "";
  СвидГР = "";
  CheckObjAttrPresence( Нотариус, OBJTYPE_PARTY, UniID( Налогоплательщик, OBJTYPE_PARTY ), 
                        _OBJTYPE_GROUP_PTTYPE, null, "", ТипСубъекта_Нотариус ); 
  CheckObjAttrPresence( Адвокат,  OBJTYPE_PARTY, UniID( Налогоплательщик, OBJTYPE_PARTY ), 
                        _OBJTYPE_GROUP_PTTYPE, null, "", ТипСубъекта_Адвокат );
                        
  ИДГНИКлиента = ПолучитьИДГНИ(Налогоплательщик.PartyID, Серия, Номер, ДатаРегистрации, СвидетельствоГосРегистрации );
  if( (Серия != "") and (Номер != "") and (Налогоплательщик.NotResident != "X") and 
      (not Нотариус) and (not Адвокат) // не является нотариусом или адвокатом
    )
    СвидГР =  string(Серия, ",", Номер);
  end;
  if(СвидГР != "")
     ИзменитьПоле( "СвидГР", СвидГР);
  else

     /* EVG Сообщение об отсутствии свид-ва */
     if ( not getTrue(true, "У клиента отсутствует свидетельство о гос. регистрации.|" +
                            "Формировать сообщение без него?") )
        return false;
     end;

     ИзменитьПоле( "СвидГР", " ");
  end;

  /*СвидНУ*/
  Серия = "";
  Номер = "";
  СвидНУ = "";
  ИДГНИКлиента = ПолучитьИДГНИ(Налогоплательщик.PartyID, Серия, Номер, ДатаРегистрации, СвидетельствоОПостановкеНаУчет );
  if( (Серия != "") and (Номер != "") )
    СвидНУ =  string(Серия, ",", Номер);
  end;

  if(СвидНУ != "")
     ИзменитьПоле( "СвидНУ", СвидНУ);
  else

     /* EVG Сообщение об отсутствии свид-ва */
     if ( not getTrue(true, "У клиента отсутствует свидетельство о постановке на налоговый учёт.|" +
                            "Формировать сообщение без него?") )
        return false;
     end;

     ИзменитьПоле( "СвидНУ", " ");
  end;

  
  /*ИНННП*/
  if(ИНННП == "")
/*Kozina Ошибку об отсутствии ИНН не выдаем, если "правильный" опер закрывает старый счет*/
   if( not((not Открытие) and ( int(OpenAccYear)<2003) and (ВходитВГруппу({oper},174))) )
      RunError("Не найден ИНН клиента банка");
   end;
  end;
 
  ИзменитьПоле( "ИНННП", ИНННП );

  /* EVG Проверка длины ИНН */
  if ( (StrLen(ИНННП) != 5)             // нерез-ты
        and
       (StrLen(ИНННП) != 10)            // ЮЛ
        and
       (StrLen(ИНННП) != 12) )          // ФЛ

     if ( not getTrue(true, "Длина ИНН клиента составляет " + StrLen(ИНННП) + " символов (ИНН = " + ИНННП + ").|" +
                            "Формировать сообщение с таким ИНН?") )
        return false;
     end;
  end;

  /*КППНП*/
  /* EVG Не совсем понятно, почему в заявлениях на закрытие счёта не печатается
     КПП в корешке. 
  if(Открытие and (StrLen(ИНННП) != 12)) // клиент - юридическое лицо
  */
  if(StrLen(ИНННП) != 12) // клиент - юридическое лицо
    if(КППНП == "")
 
     /*Kozina Ошибку об отсутствии КПП не выдаем, если "правильный" опер закрывает старый счет*/
      if( not((not Открытие) and ( int(OpenAccYear)<2003) and (ВходитВГруппу({oper},174))) )
        RunError("Не задан КПП клиента по счету");
      end;
     end;

    /* EVG Проверка длины КПП (только для ЮЛ) */
    if (StrLen(КППНП) != 9)
       if ( not getTrue(true, "Длина КПП клиента составляет " + StrLen(КППНП) + " символов (КПП = " + КППНП + ").|" +
                              "Формировать сообщение с таким КПП?") )
          return false;
       end;
    end;
      
    ИзменитьПоле( "КППНП", КППНП );
  end;

  if(StrLen(ИНННП) == 12)                // клиент - физическое лицо
    ИзменитьПоле( "КППНП", " " );
  end;

  
  /*ОГРН*/
  ОГРННП = ПолучитьКодСубъекта(Налогоплательщик.PartyID, PTCK_OGRN, Error, 0, 1 );
  if( (ОГРННП != "") and (Налогоплательщик.NotResident != "X") and 
      (not Нотариус) and (not Адвокат) // не является нотариусом или адвокатом
    )

    /* EVG */
    if ((strLen(ОГРННП) != 13)
         and
        (strLen(ОГРННП) != 15))

       if ( not getTrue(true, "Длина ОГРН клиента составляет " + StrLen(ОГРННП) + " символов (ОГРН = " + ОГРННП + ").|" +
                              "Формировать сообщение с таким ОГРН?") )
          return false;
       end;
    end;

    ИзменитьПоле( "ОГРННП", ОГРННП );
  else

     /* EVG Сообщение об отсутствии ОГРН */
     if ( not getTrue(true, "У клиента отсутствует ОГРН.|" +
                            "Формировать сообщение без него?") )
        return false;
     end;

     ИзменитьПоле( "ОГРННП", " ");
  end;

  /*КодСостДог*/
  if(Открытие)
     КодСостДог = 1;
  else
     КодСостДог = 0;
  end;
  ИзменитьПоле( "КодСостДог", string(КодСостДог));
  
  if(not Открытие)
     ПолучитьДоговорОбслуживания(Валюта, Счет);
     /*ДатаРастДог*/
     ИзменитьПоле( "ДатаРастДо",ДатаДДpММpГГГГ(SfCntr.dateClose));
     /*НомерДог*/
     if(SfCntr.Number != "")
       ИзменитьПоле( "НомерДог", SfCntr.Number );
     else
       ИзменитьПоле( "НомерДог", " " );
     end;
  else
     /*ДатаДог*/
     ИзменитьПоле( "ДатаЗаклДо", ДатаДДpММpГГГГ(buff.date));
     /*НомерДог*/

     /*
     /* EVG */
     buff.SFContrNum = "777";
       */
     if(buff.SFContrNum == "")
       RunError("Не определен номер договора счета");
     else
       ИзменитьПоле( "НомерДог", buff.SFContrNum );
     end;
  end;

  /*КодСостСч*/
  ИзменитьПоле( "КодСостСч", string(Открытие));
  /*ВалСч*/
  if( Валюта == NATCUR )
     КодВидаСчета = "0";
     typeac.iNumType = TA_SACNT;
  else
     КодВидаСчета = "1";
     typeac.iNumType = TA_SACNTC;
  end;
  ИзменитьПоле("ВалСч", КодВидаСчета);

  /*ВидСч*/

  /* EVG Так тупо делать нельзя. В заявление уходит первый попавшийся
     вид, установленный на счёте. Необходимо фильтровать виды.
  typeac.Type_Account = GenAcc.Type_Account;
  if(getEQ( typeac ))
    ИзменитьПоле("ВидСч",typeac.Name_Type);
  */
  //debugbreak;
  var AccTypeStr = "";
  if ( GetAccType(GenAcc.Type_Account, @AccTypeStr) )
    ИзменитьПоле("ВидСч", AccTypeStr);
  else
    RunError("Не определен вид счета");
  end;
  /*ДатаОткрСч*/
  if(Открытие)
    /* EVG
    ИзменитьПоле( "ДатаОткрСч", ДатаДДpММpГГГГ({curdate}) );
    ИзменитьПоле( "ДатаОткрСч", ДатаДДpММpГГГГ(buff.date) );*/
    ИзменитьПоле( "ДатаОткрСч", ДатаДДpММpГГГГ(GenAcc.Open_Date) );
  end;
  /*ДатаЗакрСч*/
  if(not Открытие)
    /* EVG Так неправильно. Если дата закрытия счёта определена,
       используем её, иначе - дату заявления.
    ИзменитьПоле( "ДатаЗакрСч", ДатаДДpММpГГГГ({curdate}) );*/
    if (GenAcc.Close_Date > date(0,0,0))
       ИзменитьПоле( "ДатаЗакрСч", ДатаДДpММpГГГГ(GenAcc.Close_Date) );
    else
       ИзменитьПоле( "ДатаЗакрСч", ДатаДДpММpГГГГ(buff.date) );
    end;
  end;
        //msgbox (GenAcc.account);

  /*НомСч*/
  ИзменитьПоле( "НомСч", Счет );
  /*ДолжнПрБ*/
  GetRegValForOPENAC("ИМНС_ДОЛЖ", V_STRING, ДолжнПрБ);
  ИзменитьПоле("ДолжнПрБ",ДолжнПрБ);

  /*ФИОПрБ*/
  ФИОПрБ = "";
  Error = GetRegValForOPENAC("ИМНС_ФИО", V_STRING, ФИОПрБ);
  if( Error or (ФИОПрБ == ""))
    RunError(string("Не найдена фамилия должностного лица банка "));
  else
    ФИОПрБ = РазделитьЗапятымиФИО( ФИОПрБ );
  end;
  ИзменитьПоле( "ФИОПрБ", ФИОПрБ );
  
  /*ДатаСооб*/
 /* Diver Оставим так как есть
  ИзменитьПоле("ДатаСооб", " ");
 */
  /*ТелБанка*/
  ТелБанка = ПолучитьТелефон({OurBank});
  if( ТелБанка != "")
    ИзменитьПоле("ТелБанка",ТелБанка);
  else
    ИзменитьПоле("ТелБанка", " ");
  end;

  return TRUE; /* Успешное завершение */

  OnError(er) /* обработка ошибок */
    ExeptionMessage(er);
    return FALSE;
end;

macro main(Счет, КодВал, Открытие)
var stat=false;
var stat2=false;
var select, cmd, rs;
var ReqOpenAccObj: RsbReqOpenAcc,
    ReqCloseAccObj:RsbReqCloseAcc;
var TB_ReqOpenAcc = TBFile("reqopena.dbt",  "R", 0, "reqopena.dbt",  "bank.def");
var TB_ReqCloseAcc = TBFile("reqclosa.dbt",  "R", 0, "reqclosa.dbt",  "bank.def");
RECORD reqop  ( reqopena );
RECORD reqcl  ( reqclosa );


  /*Нарисуем шапочку*/
  [                           Генерация(перегенерация) сообщения по SBC  
                                    Счет:             ################################
                                    КодВал:           ###
                                    Открытие/Закрытие:################################                 
   ┌───────────┬───────────────────────────────────────────┬───────────────────────────────────────────┐
   │ Кр. назв. │                Старое значение            │                 Новое значение            │
   ├───────────┼───────────────────────────────────────────┼───────────────────────────────────────────┤]
  (Счет, КодВал,Ternary(Открытие == 1,"Откр","Закр"));

  
  if (Открытие)
    select = " select reqop.t_requestid from dreqopena_dbt reqop where "
             " reqop.t_account = '" + Счет + "' "
             " and reqop.t_code_currency = " + КодВал;
    else
    select = " select reqcl.t_requestid from dreqclosa_dbt reqcl where "
             " reqcl.t_account = '" + Счет + "' "
             " and reqcl.t_code_currency = " + КодВал;
  end;

  cmd =  RsdCommand( select );
  rs = RSDRecordset(cmd);
  if ( rs and rs.movenext )
    if (ПолучитьСообщение (rs.value(0), (451 - Открытие)/*(450 Откр, 451 Закр)*/, 0, wlmes, wlsess ))
   //  msgbox(wlmes.sessionid);
     if (Открытие)
         TB_ReqOpenAcc.rec.RequestID = rs.value(0);
         if( TB_ReqOpenAcc.GetEQ() )
           Copy( reqop, TB_ReqOpenAcc);
           stat=ReGenMes(reqop,Открытие);//1 - Открытие
         end;
       else //Открытие <> 1
         TB_ReqCloseAcc.rec.RequestID = rs.value(0);
         if( TB_ReqCloseAcc.GetEQ() )
           Copy( reqcl, TB_ReqCloseAcc);
           stat=ReGenMes(reqcl,Открытие);
         end;
     end;
     else //ПолучитьСообщение = фалсе
       msgbox("Сформированого сообщения на основании заявления на открытие(закрытие) счета не обнаружено");
    end;
   else
    msgbox("Необнаружено заявление на открытие(закрытие) счета " + Счет);
  end;

   if (not stat)
  [                         При перегенарации возникли проблемы: не отработал поиск изменений.
                                                     Процедура прервана.                               ];
    else

       if (not (stat2 = ПрименитьИзменения()))
  [                         При перегенарации возникли проблемы: не могу изменить сообщение.
                                                     Процедура прервана.                               ];
       end;

   end;


  /*подзакроем табличку*/
  [└───────────┴───────────────────────────────────────────┴───────────────────────────────────────────┘];
   
   if ((stat) and (stat2) and (ValueChangeArr.Size > 0))
      if (wlmes.sessionid != 0)
          /*Если были именения сообщения, то отрываем его от сеанса выгрузки, а так же ставим в статус _Подготовлен_ для последующей выгрузки вручную.*/
          var sqltext =       "BEGIN \n";
          sqltext = sqltext + " INSERT INTO dwlhistor_dbt (T_OBJID,T_OBJKIND,T_STATE,T_BANKDATE,T_SYSDATE,T_SYSTIME,T_USERID,T_WLHISTORID) \n" +
                              "  VALUES (" + wlmes.mesid + ",502,10,to_date('" + {curdate} + "','DD.MM.YYYY'),sysdate,sysdate," + {oper} + ",0);\n";
      
          sqltext = sqltext + " UPDATE dwlmes_dbt \n" +
                             "    SET T_SESSIONID=0,T_OUTSIDEABONENTDATE=to_date('01.01.0001','DD.MM.YYYY'),T_OUTSIDEABONENTTIME=to_date('01.01.0001','DD.MM.YYYY'),T_STATE=10,T_SYSTIME=sysdate \n" + 
                             "    WHERE T_MESID= " + wlmes.mesid + ";\n";
          sqltext = sqltext + "END;";
          cmd =  RsdCommand( sqltext );
          cmd.execute();
          println("Сообщение изменено и осуществлен откат до состояния \"Подготовлен\".");
          println("Сообщение необходимо выгрузить повторно.");
        else
          println("Сообщение изменено.");
          println("Сообщение необходимо выгрузить.");
      end;
          println("───────────────────────");
          println("Информация о сообщении:");
          println("Уникальный идентификатор сообщения: " + wlmes.mesid);
          println("Дата создания сообщения: " + wlmes.bankdate);
          println("Номер сообщения(Референс): " + wlmes.trn);
          println("Идентификатор операциониста, создавшего сообщение: " + wlmes.userid);
       sqltext = "SELECT t_errcode FROM dwlresprm_dbt where t_initialmesid ="+ wlmes.mesid;
       cmd = RsdRecordset( sqltext);
     //  println(sqltext);
       if (cmd.MoveNext() == false)
         cmd = RsdCommand( "INSERT INTO dwlresprm_dbt VALUES (null,"+ wlmes.mesid +"," + ErrorCod + ",'Откорректированное или повторное' )");
         cmd.execute();
       else cmd = RsdCommand( "UPDATE dwlresprm_dbt set t_errcode = " + ErrorCod + " where t_initialmesid ="+ wlmes.mesid); 
            cmd.execute();
       end;
   end;
  if (ValueChangeArr.Size == 0)
     println("Не обнаружено изменений. ");
  end;
  println("──────────────────────────────── "+date()+" "+time()+" ───── "+{oper}+" ──────────────────────────────────── ");
end;

/*Найдем имя по Partyid*/
private MACRO GetClientName(id)
var  sl=" select part.t_name from dparty_dbt part where part.t_partyid="+id;
var  DataS=TRsbDataSet(sl);

  if( DataS.moveNext())
    return DataS.name;
  else
    if (id !=0)
       msgbox("Субъект не найден в party.dbt");
       return 0;
    else
      return "ОАО АКБ Пробизнесбанк";
    end;
  end;

END;


 /*Обработчик диалоговой панели*/
MACRO Event (dlg, cmd, id, key) 

   var const_mess = "~F2~ Продолжить ~ESC~ Выход ";
   var const_mess2 = "~F2~ Продолжить ~SPACE~ ~ESC~ Выход ";

   /*Первоначальная инициализация полей*/
   if(cmd == DLG_INIT)
      dlg.rec.Val  ="810";
      dlg.rec.Account = "";
      dlg.rec.ClientName = "";
      dlg.rec.Opena = "X";
      dlg.rec.Repeated = "X";
      UpdateFields(dlg);
      fi.fiid = 0;
   end;
   
   /*Установка подсказок в строке состояния*/
   if (cmd==DLG_SETFOCUS)
     if (FldName(dlg,id)=="Val") 
       message(" ~F3~ Справочник валют "+const_mess2);
     elif (FldName(dlg,id)=="Account")
       message(" ~F3~ Выбор счета "+const_mess2);
    end;
   end;
   
   if (cmd == DLG_REMFOCUS)
     /*Проверка корректности дат отчета*/
     if (FldName(dlg,id) == "Val")
       if ( dlg.rec.Val == "" )
         MsgBox("Сначала нужно выбрать валюту");
//        return CM_CANCEL;
        end;
     end;
      UpdateFields(dlg); 
   end;

   if (cmd == DLG_KEY)
     /*Выход из диалогового окна*/
     if (KEY == KEY_ESC)
       return exit(1);//CM_CANCEL;
     /*Выбор данных из списка*/
     elif ( KEY == KEY_F3)
        if (FldName(dlg,id) == "Val")
          if (ListFI(FIKIND_CURRENCY,0,fi))
           dlg.rec.val = fi.fi_code;
          end;
        end;
        /*Выбор счета */
        if (FldName(dlg,id) == "Account")
           if (Listaccount (account_rec,1,fi.fiid,dlg.rec.account))
              dlg.rec.account = account_rec.account;
              dlg.rec.clientname = getclientname(account_rec.client);
              message(" ~F3~ Выбор счета "+const_mess);
              UpdateFields(dlg);
           end;
        end;
     elif (KEY == KEY_SPACE)
          /*Сброс установок*/
          if (FldName(dlg,id) == "Opena")
            if (dlg.rec.Opena == "X")
             dlg.rec.Opena = "";
             dlg.rec.Closa = "X";
             else
              dlg.rec.Opena = "X";
              dlg.rec.Closa = "";
            end; 
            UpdateFields(dlg);
          end;
          if (FldName(dlg,id) == "Repeated")
            if (dlg.rec.Repeated == "X")
             dlg.rec.Repeated = "";
             dlg.rec.Corrected = "X";
             else
              dlg.rec.Repeated = "X";
              dlg.rec.Corrected = "";
            end; 
            UpdateFields(dlg);
          end;
     elif (( KEY == KEY_F2 )  /*or ( KEY == KEY_ENTER )*/)         //Проверки при вводе
           acc = dlg.rec.account;
           cur_id = fi.fiid;
           if (dlg.rec.Opena == "X")
            op = 1
            else
             op = 0; 
           end;
           if (dlg.rec.Repeated == "X")
            ErrorCod = 2
            else
             ErrorCod = 3; 
           end;
           Return CM_SAVE;
/*
      else
           Return CM_IGNORE;
*/
     end;
   end;
        
END;


/*Точка входа в макрос*/
if (ВходитВГруппу({oper},173)) //173 - "Перегенерация сообщения в ФНС"
  if (RunDialog(dlg, "Event"))
     main(acc, cur_id,op);
  end;
    else
  msgbox("Вы не включены в группу \"Перегенерация сообщения в ФНС\" ");
end;


