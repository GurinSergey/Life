/*************************************************************************************/
/*  RS-Bank 6.0                                          R-Style Software Lab        */
/*                                                                                   */
/*  File Name   : wlfnsgdzno.mac                                                     */
/*  Created     : 01.12.2011                                                         */
/*  Programmer  : Chesnokov D.                                                       */
/*  Description : Макрос генерации учетного объекта запроса НО                       */
/*  Заявка      : C-7026                                                             */
/*              : 12.01.2012 На основании письма Климахиной от 11.01.2012            */
/*              : 20.07.2012 Chesnokov D.S. добавил заполнение параметров            */
/*                BankDate, SysDate, SysTime, UserId в функцию ВставитьСвязанныйСчет */
/*************************************************************************************/

Import MesInter, PtInter, globals, WldInter, CtInter, "wllog.mac", RSD, "likepy.mac", "oralib.mac", "fns_const.mac";
import "mnsznousr.mac","diver.mac"; 

record wlreqOtv(wlreq);

var РелизID;

private macro GetAccountFIID( Account:string ):integer

  var select:string = "SELECT t_fiid"+
                     " FROM dfininstr_dbt " +
                     " WHERE t_fi_code = :Code";
                      
  var params:TArray = makeArray( SQLParam( "Code", substr( Account, 6, 3 ) ) );
  var rset:RsdRecordset = execSQLselect( select, params, TRUE );

  if( rset and rset.moveNext() )
    return rset.value(0);
  end;
  return -1;
end;

macro GenDoc (AddrMes)
debugbreak;
  if (not ВходитВГруппу({oper},195))
      msgBox("Вы не включены в группу \"195 - Обработка информационных сообщений\"");
      return false;
  end;

  SetBuff( wlmes, addrMes );
  var error = 0, ReqID = -1, i = 0;
  var Message = MnsMessageFormZNO();
  var stat = 0, ClientId, rs;

  //Lavrenov: чистим переменные, иначе кака получается.
  /*ИдФайл = ТипИнф = ВерсПрог = ТелОтпр = ДолжнОтпр = ФамОтпр = КолДок = ВерсФорм = ИдДок = НомЗапр = ДатаЗапр = КодНО = НаимНО = АдрНО = 
  ИННКО = КППКО = БИК = НаимКО = НомФ = ОсновЗапр = ВидЗапр = ТипЗапр = ДатаНач = ДатаКон = ИНННП = КППНП = НаимНП = ФИОИП = КласЧинРук = 
  ФИОРук = ДолжРук = "";
  НомСч = TArray();*/

  printlog(2, "Генерация формы ZNO");
  Message.MnsMessageFormZNO;
  ClearRecord(wlreq);

  /* Заполнение учетных буферов */
  wlreq.Kind                     = MESKIND_REQUEST;
  wlreq.SubKind                  = Message.GetSubKind;
  wlreq.Trn                      = Message.НомЗапр;
  wlreq.PmDateValue              = date(Message.ДатаЗапр);// int( substr( ДатаЗапр, 1, 2 )), int( substr( ДатаЗапр, 4, 2 )), int( substr( ДатаЗапр, 7 ) ) );
  wlreq.RelatedRef               = wlmes.Trn;
  wlreq.OriginatorID             = ПолучитьКодСубъекта( Message.КодНО, PTCK_MNS, error );
  if (error != 0)
    std.msg("Не найдена налоговая с кодом " + Message.КодНО);
    return false;
  end;
  wlreq.OriginatorCodeKind       = PTCK_MNS;
  wlreq.OriginatorCode           = Message.КодНО;
  wlreq.OriginatorName           = Message.НаимНО; 
  wlreq.RecipientID              = {OurBank}; //wlmes.InsideAbonentID;
  wlreq.RecipientCodeKind        = PTCK_BIC; //wlmes.InsideAbonentCodekind;
  wlreq.RecipientCode            = {MFO_Bank}; //wlmes.InsideAbonentcode;
  wlreq.RecipientName            = {Name_Bank};
  wlreq.Corschem                 = -1;
  wlreq.FIID                     = -1;
  wlreq.Queries                  = substr(Message.ОсновЗапр,1,215);
  wlreqOtv.INITDATEMES           = date(Message.ДатаЗапр);


  if( not ВставитьЗапрос( wlreq, Message.GetNarrative(), " ", NULL, ReqID ) )
    std.msg("Ошибка при вводе запроса");
    return FALSE;
  end;

  /* Заполнение связанных счетов */
  if( ReqID > 0 )
    if( Message.ТипЗапр == "2" )
      while( i < Message.НомСч.Size )
        ClearRecord( wlacclnk );
        wlacclnk.ObjectID      = ReqID;
        wlacclnk.ObjectType    = OBJTYPE_REQ;
        wlacclnk.Account       = Message.НомСч[i];
        wlacclnk.FIID          = GetAccountFIID( Message.НомСч[i] );
        wlacclnk.Chapter       = 1;
        wlacclnk.BankDate      = {curdate};
        wlacclnk.SysDate       = Date();
        wlacclnk.SysTime       = DtTm(Date, Time);
        wlacclnk.UserId        = {oper};
        if( not ВставитьСвязанныйСчет( wlacclnk ) )
          std.msg("Ошибка при вставке связанного счета");
        end;
        i = i + 1;
      end;
    else //По всем счетам
      Message.GetClientId();
      rs = GetClientAccounts(Message.partyid, Message);    
      while(rs and rs.MoveNext() )
        ClearRecord( wlacclnk );
        wlacclnk.ObjectID      = ReqID;
        wlacclnk.ObjectType    = OBJTYPE_REQ;
        wlacclnk.Account       = rs.value("t_Account");
        wlacclnk.FIID          = rs.value("t_FIID");
        wlacclnk.Chapter       = 1;
        wlacclnk.BankDate      = {curdate};
        wlacclnk.SysDate       = Date();
        wlacclnk.SysTime       = DtTm(Date, Time);
        wlacclnk.UserId        = {oper};
        if( not ВставитьСвязанныйСчет( wlacclnk ) )
          std.msg("Ошибка при вставке связанного счета");
        end;
      end;  
    end;
  end;
  
  return TRUE;

  OnError(er) /* обработка ошибок времени выполнения */
    return FALSE;

end;