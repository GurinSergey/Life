// -------------------------------------------------------------------------------------------------
// @filename: WL_CheckFNSMessageInter.mac
// @author  : zip_z. 
// @desc    : Проверки сообщений по 365-П
// @request : C-7026 
// @mod     : 27.11.2012 Chesnokov D.S. I-00290785 - в поле с типом T2 добавлены латинские символы
//          : 14.01.2013 Chesnokov D.S. По письму Мазловой, в поле с типом Т2 добавлены скобки
//          : 14.01.2013 zip_z. I-00311757 - изменен алгоритм проверки даты - isValidDate ()
//          : 07.02.2013 Chesnokov D.S. I-00322883 Изменил формат поля на T1, TRB/TRG не используем.
//          : 01.11.2013 Chesnokov D.S. I-00438880 Cкорректирована проверка реквизита СрокУплТр.
//          : 18.11.2013 Chesnokov D.S. По заявкам I-00443580 и I-00443581 добавил проверку 
//                                      обязательных реквизитов для RPO и ROO
//          : 19.12.2013 Chesnokov D.S. По R-304503 привел проверку ФИОИП в соответствие с форматом
//          : 16.03.2015 Chesnokov D.S. На основании изменения форматов
// -------------------------------------------------------------------------------------------------
import BankInter;
import Календарь;
import PSInter;
import LikePy;
import RCW;

// enum: типы разделителей
 class TBound ()
    const FNS_END_FILE     = "==="; // признак окончания файла
    const FNS_END_BLOCK    = "###"; // признак окончания блока
    const FNS_END_FRAGMENT = "@@@"; // признак окончания фрагмента
 end;

// enum: типы данных в поле
 class TDataType ()
    const FNS_T           =  "T";           // текст 
    const FNS_T0          =  "T0";          // текст0
    const FNS_T1          =  "T1";          // текст1
    const FNS_T2          =  "T2";          // текст2
    const FNS_N           =  "N";           // число
    const FNS_D           =  "D";           // дата
    const FNS_K           =  "K";           // код
    const FNS_I1          =  "I1";          // идентификатор файла
    const FNS_I2          =  "I2";          // идентификатор документа
    const FNS_I3          =  "I3";          // ИНН
    const FNS_I4          =  "I4";          // КПП
    const FNS_I5          =  "I5";          // ИННИП
    const FNS_I6          =  "I6";          // ОГРН
    const FNS_I7          =  "I7";          // ОГРНИП
    const FNS_I8          =  "I8";          // КИО
    const FNS_Е           =  "Е";           // пустое выражение.
    const FNS_COMPLICATED =  "COMPLICATED"; // сложное поле :)          
 end;                       

// enum: обязательность заполнения полей
 class TFieldType ()
    const FNS_MANDATORY   = "О"; // обязательный реквизит
    const FNS_OPTIONAL    = "Н"; // необязательный реквизит
    const FNS_CONDITIONAL = "У"; // условно-обязательный реквизит
    const FNS_ORDER       = "П"; // предписанный реквизит
 end;

// enum: ошибки контроля формата
 class TFormatError ()
    const WRONG_FIRST_SYMBOL    =  "WRONG_FIRST_SYMBOL";     // неверный первый символ строки (содержимого поля) // ERRCODE_WRONG_FIRST_SYMBOL
    const WRONG_CONTENTS        =  "WRONG_CONTENTS";         // неверное содержимое поля
    const WRONG_DATESTAMP       =  "WRONG_DATESTAMP";        // неверный формат даты
    const WRONG_INN             =  "WRONG_INN";              // неверный формат ИНН 
    const WRONG_KPP             =  "WRONG_KPP";              // неверный формат КПП
    const WRONG_KIO             =  "WRONG_KIO";              // неверный формат КИО
    const WRONG_OGRN            =  "WRONG_OGRN";             // неверный формат ОГРН 
    const WRONG_CODE_NO         =  "WRONG_CODE_NO";          // неверный формат кода
    const WRONG_YEAR            =  "WRONG_YEAR";             // неверный год
    const WRONG_MONTH           =  "WRONG_MONTH";            // неверный месяц
    const ORDER_FL_NOTFOUND     =  "ORDER_FL_NOTFOUND";      // не найден предписанный реквизит
    const MANDATORY_FL_NOTFOUND =  "MANDATORY_FL_NOTFOUND";  // не найден обязательный реквизит 
    const MANDATORY_FL_ISEMPTY  =  "MANDATORY_FL_ISEMPTY";   // не заполнен обязательный реквизит
 end;                            

// class: описатель поля сообщения ФНС
 class (PSRepMap) TFieldDescriptor (_msgForm:string)
    var msgForm = _msgForm;
    initPSRepMap (V_STRING);
    
    // добавление описателя формата по ключу (имени поля сообщения)
    macro addDescription (fieldName)
        if   (fieldName == "АдрКО") // N(6), K(2), T0(50), T0(50), T0(50), T0(50), T0(8), T0(8), T0(8)
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,  TDataType.FNS_COMPLICATED ));

        elif (fieldName == "АдрНО")  // N(6), K(2), T0(50), T0(50), T0(50), T0(50), T0(8), T0(8), T0(8)
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,  TDataType.FNS_COMPLICATED ));

        elif (fieldName == "АдрНП ") // N(6), K(2), T0(50), T0(50), T0(50), T0(50), T0(8), T0(8), T0(8)
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,   TDataType.FNS_COMPLICATED ));

        elif (fieldName == "БанкПл")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,  TDataType.FNS_T,    160));

        elif (fieldName == "БанкПол")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,  TDataType.FNS_T,    160));

        elif (fieldName == "БИК")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,  TDataType.FNS_T,      9));

        elif (fieldName == "БИКБПл")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,  TDataType.FNS_K,      9));

        elif (fieldName == "БИКБПол")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,  TDataType.FNS_T,      9));

        elif (fieldName == "ВерсПрог")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,  TDataType.FNS_T,     40));

        elif (fieldName == "ВерсФорм")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,  TDataType.FNS_N,    4.2));

        elif (fieldName == "ВидЗапр")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,  TDataType.FNS_K,      1));

        elif (fieldName == "ВидОп")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,  TDataType.FNS_K,      2));

        elif (fieldName == "ВидПлат")
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,   TDataType.FNS_K,      1));

        elif (fieldName == "ВидРеш")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,  TDataType.FNS_K,      1));

        elif (fieldName == "ВидСч")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,    25));

        elif (fieldName == "ДатаБГ")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_D,    10));

        elif (fieldName == "ДатаЗап")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_D,    10));

        elif (fieldName == "ДатаКон")
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL, TDataType.FNS_D,    10));

        elif (fieldName == "ДатаНач")
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL, TDataType.FNS_D,    10));

        elif (fieldName == "ДатаПодп")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_D,    10));
         
        elif (fieldName == "ДатаПорВал")
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL,   TDataType.FNS_D,    10));

        elif (fieldName == "ДатаПоруч")
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL,   TDataType.FNS_D,    10));

        elif (fieldName == "ДатаРешВзыск")
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,    TDataType.FNS_D,    10));

        elif (fieldName == "ДатаРешОт")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_D,    10));

        elif (fieldName == "ДатаРешПр")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_D,    10));

        elif (fieldName == "ДатаСооб")
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,    TDataType.FNS_D,    10));

        elif (fieldName == "ДатаТреб")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_D,    10));

        elif (fieldName == "ДатаТребВозв")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_D,    10));

        elif (fieldName == "ДатаТребУпл")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_D,    10));

        elif (fieldName == "ДолжнОтпр")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,   100));

        elif (fieldName == "ДолжРук")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T2,  100));
      /*
        elif (fieldName == "ИдДок")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_I2,   36));
        */

        elif (fieldName == "ИдФайл")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_I1,   65));

        elif (fieldName == "ИННКО")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_I3,   10));

        elif (fieldName == "ИНННП") // I3(10) | I5(12) | I8(5)
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_COMPLICATED ));

        elif (fieldName == "ИННПол")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_I3,   10));

        elif (fieldName == "КБК")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_K,    20));

        elif (fieldName == "КласЧинРук")
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,    TDataType.FNS_T,    50));

        elif (fieldName == "КодНО")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_K,     4));

        elif (fieldName == "КодОснов")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_K,     2));

        elif (fieldName == "КодПл")
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,    TDataType.FNS_K,     2));

        elif (fieldName == "КолДок")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_N,     5));

        elif (fieldName == "КППКО")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_I4,    9));

        elif (fieldName == "КППНП")
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL, TDataType.FNS_I4,    9));

        elif (fieldName == "КПППол")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_I4,    9));

        elif (fieldName == "КППЮЛ")
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL, TDataType.FNS_I4,    9));

        elif (fieldName == "НазнПл")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,   210));

        elif (fieldName == "НазПлКод")
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,    TDataType.FNS_K,     2));

        elif (fieldName == "НаимКО")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,   160));

        elif (fieldName == "НаимНО")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,   160));

        elif (fieldName == "НаимНП")
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL, TDataType.FNS_T,   160));

        elif (fieldName == "НаимПол")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,   160));

        elif (fieldName == "НаимПрич")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,   250));

        elif (fieldName == "НаимЮЛ")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,   160));

        elif (fieldName == "НомБГ")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,    20));

        elif (fieldName == "НомВалСч")
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL,   TDataType.FNS_T,    20));

        elif (fieldName == "НомЗапр")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_N,     6));

        elif (fieldName == "НомПорВал")
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL,   TDataType.FNS_T,     20));

        elif (fieldName == "НомПоруч")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_N,      6));

        elif (fieldName == "НомРешВзыск")
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,    TDataType.FNS_N,      6));

        elif (fieldName == "НомРешОт")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_N,      6));

        elif (fieldName == "НомРешПр")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_N,      6));

        elif (fieldName == "НомСооб")
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,    TDataType.FNS_T1,     6)); 

        elif (fieldName == "НомСч")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,     20));

        elif (fieldName == "НомСчБПл")
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL, TDataType.FNS_T,     20));

        elif (fieldName == "НомСчБПол")
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL, TDataType.FNS_T,     20));

        elif (fieldName == "НомСчПл")
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL, TDataType.FNS_T,     20));

        elif (fieldName == "НомСчПол")
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL, TDataType.FNS_T,     20));
        /*07.02.2013 Chesnokov D.S. Изменил формат поля на T1, т.к. TRB и TRG мы не используем.*/
        elif (fieldName == "НомТреб")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T1,     6));

        elif (fieldName == "НомТребВозв")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T1,     6));

        elif (fieldName == "НомТребУпл")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T1,     6));

        elif (fieldName == "НомФ")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_N,      4));

        elif (fieldName == "Обстоят")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,    512));

        elif (fieldName == "ОКТМО") // Golovkin //"ОКАТО")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_K,     11));

        elif (fieldName == "ОКУД")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_K,      7));

        elif (fieldName == "ОсновЗапр")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,    512));

        elif (fieldName == "ОснПл")
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,    TDataType.FNS_K,      2));

        elif (fieldName == "ОчерПл")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_K,      1));

        elif (fieldName == "Плательщ")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,    160));

        elif (fieldName == "РезПоле")
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,    TDataType.FNS_T,     20));

        elif (fieldName == "СведВзыск")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,    512));

        elif (fieldName == "СрокИсп")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_D,    10));

        elif (fieldName == "СрокПлат")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_D,    10));
        /*01.11.2013 Chesnokov D.S. по I-00438880 скорректирована проверка реквизита СрокУплТр*/
        elif (fieldName == "СрокУплТр")
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,    TDataType.FNS_COMPLICATED));

        elif (fieldName == "Статус")
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,    TDataType.FNS_K,     2));

        elif (fieldName == "СумВзыск")
            add (fieldName, 
                      makeArray (TFieldType.FNS_OPTIONAL,    TDataType.FNS_N,  15.2));

        elif (fieldName == "СуммаПлат")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_N,  15.2));

        elif (fieldName == "СумПоруч")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_N,    18));

        elif (fieldName == "ТелИсп")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,    20));

        elif (fieldName == "ТелОтпр")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T,    20));

        elif (fieldName == "ТипЗапр")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_K,     1));

        elif (fieldName == "ТипИнф")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T2,   12));

        elif (fieldName == "ТипПлат")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_K,    2));

        elif (fieldName == "ФамИсп")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T2,   60));

        elif (fieldName == "ФамОтпр")
            add (fieldName, 
                      makeArray (TFieldType.FNS_MANDATORY,   TDataType.FNS_T2,   60));

        elif (fieldName == "ФИОИП ") // T2(50), T2(50), T2(50)
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL, TDataType.FNS_COMPLICATED ));

        elif (fieldName == "ФИОРук")  // T2(50), T2(50), T2(50)
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL, TDataType.FNS_COMPLICATED ));

        elif (fieldName == "ФИОФЛ")  // T2(50), T2(50), T2(50)
            add (fieldName, 
                      makeArray (TFieldType.FNS_CONDITIONAL, TDataType.FNS_COMPLICATED ));

        end; // if

    end;
    
    macro init ()
        // --- блок служебной информации ---
        addDescription ("ИдФайл");    
        addDescription ("ТипИнф");    
        addDescription ("ВерсПрог");  
        addDescription ("ТелОтпр");   
        addDescription ("ДолжнОтпр"); 
        addDescription ("ФамОтпр");   
        addDescription ("КолДок");    
        addDescription ("ВерсФорм");  

        // --- описатели полей, специфичных для отдельных форм сообщений ---
        // 1. запрос налогового органа
        if   (strUpr (msgForm) == "ZNO")
            addDescription ("ИдДок");      
            addDescription ("НомЗапр");    
            addDescription ("ДатаЗапр");   
            addDescription ("КодНО");      
            addDescription ("НаимНО");     
            addDescription ("АдрНО");      
            addDescription ("ИННКО");      
            addDescription ("КППКО");      
            addDescription ("БИК");        
            addDescription ("НаимКО");     
            addDescription ("НомФ");       
            addDescription ("ОсновЗапр");  
            addDescription ("ВидЗапр");    
            addDescription ("ТипЗапр");    
            addDescription ("ДатаНач");    
            addDescription ("ДатаКон");    
            addDescription ("ИНННП");      
            addDescription ("КППНП");      
            addDescription ("НаимНП");     
            addDescription ("ФИОИП");      
            addDescription ("КласЧинРук"); 
            addDescription ("ФИОРук");     
            // addDescription ("ДолжРук");    
            addDescription ("НомСч");   
        
        // 2. Решение о приостановлении операций по счетам
        elif (strUpr (msgForm) == "RPO")
            addDescription ("ИдДок");
            addDescription ("НомРешПр");
            addDescription ("ДатаРешПр");
            addDescription ("КодНО");
            addDescription ("НаимНО");
            addDescription ("КодОснов");
            addDescription ("НаимПрич");
            addDescription ("ИНННП");
            addDescription ("КППНП");
            addDescription ("НаимНП");
            addDescription ("ФИОИП");
            addDescription ("АдрНП");
            addDescription ("Обстоят");
            addDescription ("БИК");
            addDescription ("НаимКО");
            addDescription ("НомФ");
            addDescription ("СумВзыск");
            addDescription ("НомРешВзыск");
            addDescription ("ДатаРешВзыск");
            addDescription ("КласЧинРук");
            addDescription ("ФИОРук");
            // addDescription ("ДолжРук");

            addDescription ("НомСч");
            addDescription ("ВидСч");
        
        // 3. Решение об отмене приостановления
        elif (strUpr (msgForm) == "ROO")
            addDescription ("ИдДок");
            addDescription ("НомРешОт");
            addDescription ("ДатаРешОт");
            addDescription ("КодНО");
            addDescription ("НаимНО");
            addDescription ("НомРешВзыск");
            addDescription ("ДатаРешВзыск");
            addDescription ("ИНННП");
            addDescription ("КППНП");
            addDescription ("НаимНП");
            addDescription ("ФИОИП");
            addDescription ("НомРешПр");
            addDescription ("ДатаРешПр");
            addDescription ("ВидРеш");
            addDescription ("БИК");
            addDescription ("НаимКО");
            addDescription ("НомФ");
            addDescription ("КласЧинРук");
            addDescription ("ФИОРук");
            // addDescription ("ДолжРук");

            addDescription ("НомСч");
            addDescription ("ВидСч");
            
        
        // 4. Поручение НО о перечислении денежных средств
        elif (strUpr (msgForm) == "PNO")
            addDescription ("ИдДок");
            addDescription ("ОКУД");
            addDescription ("НомПоруч");
            addDescription ("ДатаПоруч");
            addDescription ("ВидПлат");
            addDescription ("СумПоруч");
            addDescription ("ИНННП");
            addDescription ("КППНП");
            addDescription ("Плательщ");
            addDescription ("НомСчПл");
            addDescription ("БанкПл");
            addDescription ("БИКБПл");
            addDescription ("НомСчБПл");
            addDescription ("НомФ ");
            addDescription ("БанкПол");
            addDescription ("БИКБПол");
            addDescription ("НомСчБПол");
            addDescription ("ИННПол");
            addDescription ("КПППол");
            addDescription ("НаимПол");
            addDescription ("НомСчПол");
            addDescription ("ВидОп");
            addDescription ("НазПлКод");
            addDescription ("ОчерПл");
            addDescription ("КодПл");
            addDescription ("РезПоле");
            addDescription ("НазнПл");
            addDescription ("Статус");
            addDescription ("КБК");
            addDescription ("ОКТМО"); // Golovkin //"ОКАТО");
            addDescription ("ОснПл");
            addDescription ("СрокУплТр");
            addDescription ("НомТреб");
            addDescription ("ДатаТреб");
            addDescription ("ТипПлат");

            addDescription ("НомПорВал");
            addDescription ("ДатаПорВал");
            addDescription ("НомВалСч");


        // 5. Требование НО о перечислении налога
        elif (strUpr (msgForm) == "TRB")
            addDescription ("ИдДок");
            addDescription ("НомТреб");
            addDescription ("ДатаТреб");
            addDescription ("КодНО");
            addDescription ("НаимНО");
            addDescription ("АдрНО");
            addDescription ("НаимКО");
            addDescription ("БИК");
            addDescription ("ИННКО");
            addDescription ("КППКО");
            addDescription ("АдрКО");
            addDescription ("НомФ ");
            addDescription ("НомСооб");
            addDescription ("ДатаСооб");
            addDescription ("НомПоруч");
            addDescription ("ДатаПоруч");
            addDescription ("НаимЮЛ");
            addDescription ("ФИОФЛ");
            addDescription ("ИНННП");
            addDescription ("КППЮЛ");
            addDescription ("СуммаПлат");
            addDescription ("КБК");
            addDescription ("ОКТМО"); // Golovkin//"ОКАТО");
            addDescription ("СрокИсп");
            addDescription ("СведВзыск");
            addDescription ("ФамИсп");
            addDescription ("ТелИсп");
            addDescription ("ДатаПодп");
            addDescription ("КласЧинРук");
            addDescription ("ФИОРук");
        
        // 6. Требование по уплате по гарантии
        elif (strUpr (msgForm) == "TRG")
            addDescription ("ИдДок");
            addDescription ("НомТреб");
            addDescription ("ДатаТреб");
            addDescription ("КодНО");
            addDescription ("НаимНО");
            addDescription ("АдрНО");
            addDescription ("НаимКО");
            addDescription ("ИННКО");
            // addDescription ("КППКО");
            addDescription ("БИК");
            addDescription ("АдрКО");
            addDescription ("НомФ ");
            addDescription ("НомБГ");
            addDescription ("ДатаБГ");
            addDescription ("НаимЮЛ ");
            addDescription ("ФИОФЛ");
            addDescription ("ИНННП");
            addDescription ("КППЮЛ");
            addDescription ("АдрНП");
            addDescription ("НомТребУпл");
            addDescription ("НомТребВозв");
            addDescription ("ДатаТребУпл");
            addDescription ("ДатаТребВозв");
            addDescription ("СуммаПлат");
            addDescription ("СрокПлат");
            addDescription ("КБК");
            addDescription ("ОКТМО");// Golovkin //"ОКАТО");
            addDescription ("ФамИсп");
            addDescription ("ТелИсп");
            addDescription ("ДатаПодп");
            addDescription ("КласЧинРук");
            addDescription ("ФИОРук");

            /*  BOS, BNS и BV сознательно не проверяются. 
             *  Подразумевается, что RS-Bank достаточно умён и сам в состоянии корректно сформировать ответ.
             *  Следовательно, ему не нужно лишний раз проверять самого себя на предмет возможной ошибки программиста :)
             */
        end;
    end;
    
    init ();
 end;

// class: поле сообщения ФНС
 class TFNSMessageField (_name, _value, _type, _dataType, _precision, _stringNumber)
    var m_name         = _name;          // имя поля
    var m_value        = _value;         // значение поля
    var m_type         = _type;          // тип поля 
    var m_dataType     = _dataType;      // тип данных в поле (для проверок содержимого строки собщения)
    var m_precision    = _precision;     // заданная точность (длина для строки, число знаков для числа и т.п.)
    var m_stringNumber = _stringNumber;  // порядковый номер строки в сообщении (для проверки структуры)
 end;

// class: блок сообщения ФНС
 class TFNSMessageBlock ()
    var field:TArray  = TArray ();
    var size :integer = 0;
    
    macro setField (f:TFNSMessageField)
        size = field.size;
        field (field.size) = f;
    end;
    
    macro getField (n)
        return field (n);
    end;
 end;

// class: фрагмент сообщения ФНС
 class TFNSMessageFragment (_type)
    var block:TArray  = TArray ();
    var type :integer = _type;
    var size :integer = 0;
    
    macro setBlock (b:TFNSMessageBlock)
        size = block.size;
        block (block.size) = b;
    end;
    
    macro getBlock (n)
        return block (n);
    end;
 end;

// class: строка-содержимое поля сообщения ФНС
 class TFnsString (_str)
    var str = trim (_str);
    
    private const RUS_CHARSET = "АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ";
    private const LAT_CHARSET = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    private const DIG_CHARSET = "0123456789";
    
    private var errDescription;
    private var firstSymbol = substr (str, 1, 1);
    
    // вернуть строку, обращенную в кавычки
    macro getQuoted ()
        return (string ("\"", str, "\""));
    end;

    // строка пустая
    macro isEmpty ()
        return ((str == "") or (str == "00.00.0000"));
    end;

    // строка содержит верную дату
    macro isValidDate ()
        var arr = split (str, ".");
        // 14.01.2013 zip_z. I-00311757 >
        var m_date_day   = int (arr (0));
        var m_date_month = int (arr (1));
        var m_date_year  = int (arr (2));
        
        // дата не соответствует формату (в массиве менее трёх объектов) 
        // либо месяц не в промежутке [1;12] = неверная дата
        if ((arr.size != 3) or ((m_date_month < 1) or (m_date_month > 12)))
            return false;
        end;
        
        // число дней в месяце больше положенного = неверная дата
        if (m_date_day > getDaysInMonth (date (1, m_date_month, m_date_year)))
            return false;
        end;
        // < 14.01.2013 zip_z. I-00311757 
        // если прокатили два условия - всё ок.
        return true;
    onError (e)
        // ошибка разбора = неверная дата
        return false;
    end;  
    
    // строка содержит только заданный набор символов
    macro stringContainsOnly (what)
        var i = 1;
        while (i < StrLen (str))
            if (strBrk (substr (strUpr (str), i, 1), what) == 0)
                return false;
            end;
            i = i + 1;
        end;
        return true;
    end;
    
    // длина строки соответствует формату
    macro isProperLength (_length)
        return (StrLen (str) <= int (_length));
    end;
    
    // --- разнообразные проверки формата строки ---
    
    // 1. Текст 
    macro isValid_T  (_length)
        if (isProperLength (_length))
            if (firstSymbol == " ")
                return TFormatError.WRONG_FIRST_SYMBOL;
            end;
        else
            return TFormatError.WRONG_CONTENTS;
        end;
        
        return true;
    end;
    
    // 2. Текст0 
    macro isValid_T0 (_length)
        if (isEmpty (str))
            return true;
        end;
        
        if (isProperLength (_length))
            if ((firstSymbol == " ") or (firstSymbol == ","))
                return TFormatError.WRONG_FIRST_SYMBOL;
            end;
        else
            return TFormatError.WRONG_CONTENTS;
        end;

        return true;
    end;
    
    // 3. Текст1 
    macro isValid_T1 (_length)
        if (isEmpty)
            return true;
        end;
        
        if (isProperLength (_length))
            if (0 == strBrk (strUpr (firstSymbol), string (RUS_CHARSET, LAT_CHARSET, DIG_CHARSET)))
                return TFormatError.WRONG_FIRST_SYMBOL;
            end;
            if (not stringContainsOnly (RUS_CHARSET + LAT_CHARSET + DIG_CHARSET + " -/№,.;:#$%*-+="))
                return TFormatError.WRONG_CONTENTS;
            end;
        else
            return TFormatError.WRONG_CONTENTS;
        end;

        return true;
    end;
    
    // 4. Текст2
    macro isValid_T2 (_length)
        if (isProperLength (_length) and (stringContainsOnly (RUS_CHARSET + LAT_CHARSET + DIG_CHARSET + " ()-/№,.;:#$%*-+=")))
            return true;
        else
            return TFormatError.WRONG_CONTENTS;
        end;
    end;
    
    // 5. Число
    macro isValid_N  (_length)
        if ((isProperLength (_length)) and (stringContainsOnly (DIG_CHARSET + ".-")))
            return true;
        else
            return TFormatError.WRONG_CONTENTS;
        end;
    end;
    
    // 6. Дата
    macro isValid_D  (_length)   
        if (isProperLength (_length) and isValidDate)
            return true;
        else
            return TFormatError.WRONG_DATESTAMP;
        end;
    end;
    
    // 7. Код
    macro isValid_K  (_length) 
        if (isProperLength (_length))
            return true;
        else
            return TFormatError.WRONG_CODE_NO;
        end;
    end;
    
    // 8. Идентификатор файла
    macro isValid_I1 (_length) 
        if (isProperLength (_length))
            return true;
        else
            return TFormatError.WRONG_CONTENTS;
        end;
    end;
    
    // 9. Идентификатор документа
    macro isValid_I2 (_length)
        if (isProperLength (_length))
            return true;
        else
            return TFormatError.WRONG_CONTENTS;
        end;
    end;
    
    // 10. ИНН
    macro isValid_I3 (_length)
        if ((isProperLength (_length)) and (stringContainsOnly (DIG_CHARSET)))
            return true;
        else
            return TFormatError.WRONG_INN;
        end;
    end;
    
    // 11. КПП
    macro isValid_I4 (_length) 
        if ((isProperLength (_length)) and (stringContainsOnly (DIG_CHARSET)))
            return true;
        else
            return TFormatError.WRONG_KPP;
        end;
    end;
    
    // 12. ИНН индивидуального предпринимателя
    macro isValid_I5 (_length)
        if ((isProperLength (_length)) and (stringContainsOnly (DIG_CHARSET)))
            return true;
        else
            return TFormatError.WRONG_INN;
        end;
    end;
    
    // 13. ОГРН
    macro isValid_I6 (_length)
        if ((isProperLength (_length)) and (stringContainsOnly (DIG_CHARSET)))
            return true;
        else
            return TFormatError.WRONG_OGRN;
        end;
    end;
    
    // 14. ОГРН индивидуального предпринимателя
    macro isValid_I7 (_length)  
        if ((isProperLength (_length)) and (stringContainsOnly (DIG_CHARSET)))
            return true;
        else
            return TFormatError.WRONG_OGRN;
        end;
    end;
    
    // 15. КИО
    macro isValid_I8 (_length)
        if ((isProperLength (_length)) and (stringContainsOnly (DIG_CHARSET)))
            return true;
        else
            return TFormatError.WRONG_KIO;
        end;
    end;
    
    // 16. Пустое поле
    macro isValid_Е  (_length) 
        if (isEmpty (str))
            return true;
        else
            return TFormatError.WRONG_CONTENTS;
        end;
    end;

 end;

// class: реализация проверки типа данных
 class (TFnsString) TDataTypeValidator (_field:TFNSMessageField)
    var field = _field;
    initTFnsString (_field.m_value);

    macro validate ()
        
        var fldContentArray = TArray (); 
        var checkResult     = false;
            
        if   (field.m_dataType == TDataType.FNS_T)
            return ( isValid_T  (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_T0)
            return ( isValid_T0 (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_T1)
            return ( isValid_T1 (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_T2)
            return ( isValid_T2 (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_N)
            return ( isValid_N  (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_D)
            return ( isValid_D  (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_K)
            return ( isValid_K  (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_I1)
            return ( isValid_I1 (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_I2)
            return ( isValid_I2 (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_I3)
            return ( isValid_I3 (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_I4)
            return ( isValid_I4 (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_I5)
            return ( isValid_I5 (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_I6)
            return ( isValid_I6 (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_I7)
            return ( isValid_I7 (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_I8)
            return ( isValid_I8 (field.m_precision));
        
        elif (field.m_dataType == TDataType.FNS_Е)
            return ( isValid_Е  (field.m_precision) );
        
        elif (field.m_dataType == TDataType.FNS_COMPLICATED)
            // сложные поля. Проверяем тоже непросто :) 
            // N(6), K(2), T0(50), T0(50), T0(50), T0(50), T0(8), T0(8), T0(8) 
            if ((field.m_name == "АдрКО") or (field.m_name == "АдрНО") or (field.m_name == "АдрНП"))
                return true;
                /*
                fldContentArray = split (str, ",");
                if (fldContentArray.size == 9)
                    str = fldContentArray (0);
                    checkResult = isValid_N (6);
                    
                    str = fldContentArray (1);
                    checkResult = isValid_K (2);
                    
                    str = fldContentArray (2);
                    checkResult = isValid_T0 (50);
                    
                    str = fldContentArray (3);
                    checkResult = isValid_T0 (50);
                    
                    str = fldContentArray (4);
                    checkResult = isValid_T0 (50);
                    
                    str = fldContentArray (5);
                    checkResult = isValid_T0 (50);
                    
                    str = fldContentArray (6);
                    checkResult = isValid_T0 (8);
                    
                    str = fldContentArray (7);
                    checkResult = isValid_T0 (8);
                    
                    str = fldContentArray (8);
                    checkResult = isValid_T0 (8);
                    
                 
                end;
                */
            
            elif ((field.m_name == "ФИОИП") or (field.m_name == "ФИОРук") or (field.m_name == "ФИОФЛ"))
                // T2(50), T2(50), T2(50)
                fldContentArray = split (str, ",");
                if (fldContentArray.size == 3)
                    str = strUpr (fldContentArray (0));  checkResult = isValid_T2 (50);
                    str = strUpr (fldContentArray (1));  checkResult = isValid_T2 (50);
                    str = strUpr (fldContentArray (2));  checkResult = isValid_T2 (50);

                    if (checkResult == false)
                        return TFormatError.WRONG_CONTENTS;
                    end;

                end;
                
            elif (field.m_name == "ИНННП") 
                // I3(10) | I5(12) | I8(5)
                if   (strLen (str) ==  5) return (isValid_I8  (5));
                elif (strLen (str) == 10) return (isValid_I3 (10));
                else                      return (isValid_I5 (12));
                end;
            end;
            
            
        end;
        
       return true;
    
    end;
 end;

// class: сообщение ФНС
 class TFNSMessage (_fileName)
    var field   :TArray = TArray ();   // массив полей сообщения
    var block   :TArray = TArray ();   // массив блоков сообщения
    var fragment:TArray = TArray ();   // массив фрагментов сообщения
    
    var num_fields    :integer = 0;
    var num_blocks    :integer = 0;
    var num_fragments :integer = 0;
    
    var m_fileName = _fileName;
    var m_shortFilename;
    splitFile (m_fileName, m_shortFilename);
    var msgForm    = strUpr (subStr (m_shortFilename, 1, 3));
    
    var errorsArray :TArray = TArray (); // массив с ошибками
    
    // private-вызовы для использования изнутри (так удобнее)
    private macro setField (fieldData:TFNSMessageField)
        field (field.size) = fieldData;
        num_fields = num_fields + 1;
    end;
    
    private macro setBlock (b:TFNSMessageBlock)
        block (block.size) = b;
        num_blocks = num_blocks + 1;
    end;
    
    private macro getBlock (n)
        return block (n);
    end;
    
    private macro setFragment (f:TFNSMessageFragment)
        fragment (fragment.size) = f;
        num_fragments = num_fragments + 1;
    end;
    
    private macro getFragment (n)
        return fragment (n);
    end;
    
    // поиск содержимого поля по его имени
    private macro findFieldByName (name)
        var i = 0;
        while (i < field.size)
            if (field (i).m_name == name)
                return field (i);
            end;
            i = i + 1;
        end;
        return false;
    end;
    
    // получить текстовое описание ошибки
    private macro getErrorDescription (err, errField)
        var errDescription;

        if   (err == TFormatError.WRONG_FIRST_SYMBOL)
            errDescription = string ("в значении реквизита ", 
                                     strUpr (errField.m_name), 
                                     " первый символ не соответствует формату ");
        
        elif (err == TFormatError.WRONG_CONTENTS)
            errDescription = string ("в значении реквизита ", 
                                     strUpr (errField.m_name), 
                                     " использованы недопустимые для его формата символы ", 
                                     strUpr (errField.m_value));
        
        elif (err == TFormatError.WRONG_DATESTAMP)
            errDescription = string ("в реквизите ", 
                                     errField.m_stringNumber, 
                                     " указана дата в неверном формате для поля ", 
                                     strUpr (errField.m_name));
        
        elif (err == TFormatError.WRONG_INN)
            errDescription = string ("в реквизите ", 
                                     errField.m_stringNumber, 
                                     " ИНН не соответствует формату ", 
                                     strUpr (errField.m_name));
        
        elif (err == TFormatError.WRONG_KPP)
            errDescription = string ("в реквизите ", 
                                     errField.m_stringNumber, 
                                     " КПП не соответствует формату ", 
                                     strUpr (errField.m_name));
        
        elif (err == TFormatError.WRONG_KIO)
            errDescription = string ("в реквизите ", 
                                     errField.m_stringNumber, 
                                     " КИО не соответствует формату ", 
                                     strUpr (errField.m_name));
        
        elif (err == TFormatError.WRONG_OGRN)
            errDescription = string ("в реквизите ", 
                                     errField.m_stringNumber, 
                                     " ОГРН не соответствует формату ", 
                                     strUpr (errField.m_name));
        
        elif (err == TFormatError.WRONG_CODE_NO)
            errDescription = string ("в реквизите ", 
                                     errField.m_stringNumber, 
                                     " код налогового органа не соответствует формату ", 
                                     strUpr (errField.m_name));
        
        end;
        
        return errDescription;
    end;
    
    // заполнение массива ошибок
    private macro fillErrorsArray (errCode, errValue, errDescription)
        if (errValue != null)
            errorsArray (errorsArray.size) = string (errCode, ";", errValue, ":", errDescription);
        else
            errorsArray (errorsArray.size) = string (errCode, ";", errDescription);
        end;
    end;
    
    // Разбор формата строки сообщения
    private macro parseString (_stringNumber:integer, _stringContainer:string):TFNSMessageField 
        var fieldName  = trim (substr (_stringContainer, 1, index (_stringContainer, ":") - 1));
        var fieldValue = trim (substr (_stringContainer, index (_stringContainer, ":") + 1));
        var arr = TFieldDescriptor(msgForm).value (fieldName);

        if (not arr)
            return TFNSMessageField (fieldName, fieldValue, null, null, null, _stringNumber);
        end;
        
        var fieldType      = arr (0);
        var fieldDataType  = arr (1);
        var fieldPrecision = arr (2);
        
        return TFNSMessageField (fieldName, fieldValue, fieldType, fieldDataType, fieldPrecision, _stringNumber);
    end;
    
    // воистину public
    macro loadFromFile ()
        file f_pointer () txt;

        var fnsMessageField    :TFNSMessageField;
        var fnsMessageFragment :TFNSMessageFragment;
        var fnsMessageBlock    :TFNSMessageBlock;
        var s = 1;
        var f; 
        
        open (f_pointer, m_fileName);
        while (next (f_pointer))
            f = parseString (s, f_pointer.str);
            
            if (f.m_value == TBound.FNS_END_BLOCK)
                setBlock (fnsMessageBlock);
                fnsMessageFragment.setBlock (fnsMessageBlock);
                fnsMessageBlock = null;
            
            elif (f.m_value == TBound.FNS_END_FRAGMENT)
                setFragment (fnsMessageFragment);
                fnsMessageFragment = null;
            
            elif (f.m_value == TBound.FNS_END_FILE)
                if (next (f_pointer))
                    fillErrorsArray (15, null, string ("в строке ", s, " найдены данные после окончания файла сообщения"));
                end;
            
            else
                setField (f);
                fnsMessageBlock.setField (f);
            end;
            
            s = s + 1;
        end;
    end;
    
    // логический контроль содержимого полей сообщения
    macro checkFieldContents ()
        var i = 0, j = 0;
        var result;
        var fld;
        var fld_double; //Поле для проверки сложных реквизитов 
        
        // проверки типа данных
        while (i < field.size)
             fld = field [i];
             result = TDataTypeValidator (fld).validate ();
             if ((valType (result) != V_BOOL) or (not result))
                 fillErrorsArray (15, null, getErrorDescription (result, fld));
             end;
             i = i + 1;
        end;
        
        // прямые проверки содержимого полей сообщения
        i = 0;
        while (i < field.size)
            fld = field [i];
            
            if (msgForm == "ZNO")
                if (fld.m_name == "ТипИнф") 
                    if (fld.m_value != "ЗАПРОСНО")
                        fillErrorsArray (15, null, string ("реквизит ", fld.m_stringNumber, 
                                                           " не соответствует формату поля ", strUpr (fld.m_name)));
                    end;
                end;
            
            elif (msgForm == "RPO")
                if   (fld.m_name == "ТипИнф") 
                    if (fld.m_value != "РЕШЕНПРИОСТ")
                        fillErrorsArray (15, null, string ("реквизит ", fld.m_stringNumber, 
                                                           " не соответствует формату поля ", strUpr (fld.m_name)));
                    end;
               
                elif (fld.m_name == "КолДок") 
                    if (fld.m_value != "1")
                        fillErrorsArray (15, null, string ("реквизит ", fld.m_stringNumber,
                                                           " не соответствует формату поля ", strUpr (fld.m_name)));
                    end;
                
                elif (fld.m_name == "КодОснов") 
                    //16.03.2015 Chesnokov D.S. На основании изменения форматов
                    if (not ((fld.m_value == "01") or (fld.m_value == "02") or (fld.m_value == "03") or (fld.m_value == "04")))
                        fillErrorsArray (15, null, string ("реквизит ", fld.m_stringNumber, 
                                                           " не соответствует формату поля ", strUpr (fld.m_name)));
                    end;
                end;
            
            
            elif (msgForm == "ROO")
                if (fld.m_name == "ТипИнф") 
                    if (fld.m_value != "РЕШЕНОТМЕНА")
                        fillErrorsArray (15, null, string ("реквизит ", fld.m_stringNumber, 
                                                           " не соответствует формату поля ", strUpr (fld.m_name)));
                    end;
                
                elif (fld.m_name == "ВидРеш") 
                    if (not ((fld.m_value == "1") or (fld.m_value == "2")))
                        fillErrorsArray (15, null, string ("реквизит ", fld.m_stringNumber, 
                                                           " не соответствует формату поля ", strUpr (fld.m_name)));
                    end;
                end;
            
            elif (msgForm == "PNO")
                if (fld.m_name == "ТипИнф") 
                    if (fld.m_value != "ПОРУЧЕНИЕНО")
                        fillErrorsArray (15, null, string ("реквизит ", fld.m_stringNumber, 
                                                           " не соответствует формату поля ", strUpr (fld.m_name)));
                    end;
                
                elif (fld.m_name == "КолДок") 
                    if (fld.m_value != "1")
                        fillErrorsArray (15, null, string ("реквизит ", fld.m_stringNumber,
                                                           " не соответствует формату поля ", strUpr (fld.m_name)));
                    end;
                elif (fld.m_name == "ОКУД") 
                    if (fld.m_value != "0401071")
                        fillErrorsArray (15, null, string ("реквизит ", fld.m_stringNumber,
                                                           " не соответствует формату поля ", strUpr (fld.m_name)));
                    end;
                /*01.11.2013 Chesnokov D.S. по I-00438880 скорректирована проверка реквизита СрокУплТр*/
                elif (fld.m_name == "СрокУплТр")
                    j = 0;
                    
                    while (j < field.size)
                      fld_double = field [j];
                      if (fld_double.m_name == "ОснПл")
                        debugbreak;
                        if((fld_double.m_value == "АР") and (fld.m_value != "0"))
                          fillErrorsArray (15, null, string ("реквизит ", fld.m_stringNumber,
                                                             " не соответствует формату поля ", strUpr (fld.m_name)));
                        elif((fld_double.m_value == "ТР") and (strlen(fld.m_value) < 10))
                          fillErrorsArray (15, null, string ("реквизит ", fld.m_stringNumber,
                                                             " не соответствует формату поля ", strUpr (fld.m_name)));
                        end;
                      end;
                      j = j + 1;
                    end;
                end;
            end;
            
            i = i + 1;
        end;
    end;
    
    macro checkFieldExists ()
        var desc = TFieldDescriptor (msgForm);
        var errDescription = "";
        var fname = "";
        var fvalue = "";
        
        // Ищем предписанные реквизиты
        desc.first ();

        if (desc.value ()(0) == TFieldType.FNS_ORDER)
            if (not (fvalue = findFieldByName (fname = desc.key)))
                errDescription = string ("не найден предписанный реквизит ", fname);
                fillErrorsArray  (15, null, errDescription); 
            end;
        end;

        while (desc.next () )
            if (desc.value ()(0) == TFieldType.FNS_ORDER)
                if (not (fvalue = findFieldByName (fname = desc.key)))
                    errDescription = string ("не найден предписанный реквизит ", fname);
                    fillErrorsArray  (15, null, errDescription); 
                end;
            end;
        end;
        
        if   (msgForm == "ZNO")
            desc.first ();

            if (desc.value ()(0) == TFieldType.FNS_MANDATORY)
                if (not (fvalue = findFieldByName (fname = desc.key)))
                    if ((fname == "НомСч") and (fvalue = findFieldByName ("ТипЗапр")))
                        if (trim (fvalue.m_value) != "1")
                            errDescription = string ("не найден обязательный реквизит ", fname);
                            fillErrorsArray  (15, null, errDescription); 
                        end;
                    else
                        errDescription = string ("не найден обязательный реквизит ", fname);
                        fillErrorsArray  (15, null, errDescription); 
                    end;
                else
                    if (TFnsString (fvalue.m_value).isEmpty)
                        errDescription = string ("не заполнен обязательный реквизит ", fname);
                        fillErrorsArray  (15, null, errDescription); 
                    end;
                end;
            end;

            while (desc.next () )
                if (desc.value ()(0) == TFieldType.FNS_MANDATORY)
                    if (not (fvalue = findFieldByName (fname = desc.key)))
                        if ((fname == "НомСч") and (fvalue = findFieldByName ("ТипЗапр")))
                            if (trim (fvalue.m_value) != "1")
                                errDescription = string ("не найден обязательный реквизит ", fname);
                                fillErrorsArray  (15, null, errDescription); 
                            end;
                        else
                            errDescription = string ("не найден обязательный реквизит ", fname);
                            fillErrorsArray  (15, null, errDescription); 
                        end;
                    else
                        if (TFnsString (fvalue.m_value).isEmpty)
                            fillErrorsArray  (15, null, errDescription); 
                        end;
                    end;
                end;
            end;
            
            // Условно-обязательные реквизиты
            // 1. /ВидЗапр/ = '3' => ДатаКон, ДатаНач
            if ((fvalue = findFieldByName ("ВидЗапр")) and (fvalue.m_value == "3")) /* выписка по операциям на счете*/
                if (not (fvalue = findFieldByName ("ДатаНач")))
                    errDescription = string ("не найден условно-обязательный реквизит ", "ДатаНач",
                                             " при выполненном условии - /ВидЗапр/ = '3'" );
                    fillErrorsArray  (15, null, errDescription);
                else
                    if (TFnsString (fvalue.m_value).isEmpty)
                        errDescription = string ("не заполнен условно-обязательный реквизит ", "ДатаНач",
                                                 " при выполненном условии - /ВидЗапр/ = '3'" );
                        fillErrorsArray  (15, null, errDescription);
                    end;
                end;
                
                if (not (fvalue = findFieldByName ("ДатаКон")))
                    errDescription = string ("не найден условно-обязательный реквизит ", "ДатаКон",
                                             " при выполненном условии - /ВидЗапр/ = '3'" );
                    fillErrorsArray  (15, null, errDescription);
                
                else
                    if (TFnsString (fvalue.m_value).isEmpty)
                        errDescription = string ("не заполнен условно-обязательный реквизит ", "ДатаКон",
                                                 " при выполненном условии - /ВидЗапр/ = '3'" );
                        fillErrorsArray  (15, null, errDescription);
                    end;
                end;

            else // не выписка по операциям. Дата начала и дата окончания не должны присутствовать
                if (findFieldByName ("ДатаНач"))
                    errDescription = string ("в сообщении присутствует условно-обязательный реквизит ", "ДатаНач" ,
                                             " при невыполненном условии - /ВидЗапр/ = '3'");
                    fillErrorsArray  (15, null, errDescription);
                end;
                
                if (findFieldByName ("ДатаКон"))
                    errDescription = string ("в сообщении присутствует условно-обязательный реквизит ", "ДатаКон", 
                                             " при невыполненном условии - /ВидЗапр/ = '3'");
                    fillErrorsArray  (15, null, errDescription);
                end;
            end;
            
            // 2. /длина ИНННП/ =10 | 5 => КППНП, НаимНП 
            // 3. /длина ИНННП/ =12 => ФИОИП
            if (fvalue = findFieldByName ("ИНННП"))
                if ((StrLen (fvalue.m_value) == 10) or (StrLen (fvalue.m_value) == 5))
                    if (not (fvalue = findFieldByName ("КППНП")))
                        errDescription = string ("не найден условно-обязательный реквизит ", "КППНП",
                                                 " при выполненном условии - /длина ИНННП/ =10|5" );
                        fillErrorsArray  (15, null, errDescription);
                    else
                        if (TFnsString (fvalue.m_value).isEmpty)
                            errDescription = string ("не заполнен условно-обязательный реквизит ", "КППНП",
                                                     " при выполненном условии - /длина ИНННП/ =10|5" );
                            fillErrorsArray  (15, null, errDescription);
                        end;
                    end;
                    
                    if (not (fvalue = findFieldByName ("НаимНП")))
                        errDescription = string ("не найден условно-обязательный реквизит ", "НаимНП",
                                                 " при выполненном условии - /длина ИНННП/ =10|5" );
                        fillErrorsArray  (15, null, errDescription);
                    else
                        if (TFnsString (fvalue.m_value).isEmpty)
                            errDescription = string ("не заполнен условно-обязательный реквизит ", "НаимНП",
                                                     " при выполненном условии - /длина ИНННП/ =10|5" );
                            fillErrorsArray  (15, null, errDescription);
                        end;
                    end;
                    
                    if (findFieldByName ("ФИОИП"))
                        errDescription = string ("в сообщении присутствует условно-обязательный реквизит ", "ФИОИП", 
                                                 " при невыполненном условии - /длина ИНННП/ =12");
                        fillErrorsArray  (15, null, errDescription);
                    end;
                end;
                
                fvalue = findFieldByName ("ИНННП");
                if (StrLen (fvalue.m_value) == 12)
                    if (not (fvalue = findFieldByName ("ФИОИП")))
                        errDescription = string ("не найден условно-обязательный реквизит ", "ФИОИП",
                                                 " при выполненном условии - /длина ИНННП/ =12" );
                        fillErrorsArray  (15, null, errDescription);
                    else
                        if (TFnsString (fvalue.m_value).isEmpty)
                            errDescription = string ("не заполнен условно-обязательный реквизит ", "ФИОИП",
                                                     " при выполненном условии - /длина ИНННП/ =12" );
                            fillErrorsArray  (15, null, errDescription);
                        end;
                    end;
                    
                    if (findFieldByName ("КППНП"))
                        errDescription = string ("в сообщении присутствует условно-обязательный реквизит ", "КППНП", 
                                                 " при невыполненном условии - /длина ИНННП/ =10|5");
                        fillErrorsArray  (15, null, errDescription);
                    end;
                    
                    if (findFieldByName ("НаимНП"))
                        errDescription = string ("в сообщении присутствует условно-обязательный реквизит ", "НаимНП", 
                                                 " при невыполненном условии - /длина ИНННП/ =10|5");
                        fillErrorsArray  (15, null, errDescription);
                    end;
                end;
            end;
           
            
        elif ((msgForm == "RPO") or (msgForm == "ROO"))
            desc.first ();
            if (desc.value ()(0) == TFieldType.FNS_MANDATORY)
                if (not (fvalue = findFieldByName (fname = desc.key)))
                    errDescription = string ("не найден обязательный реквизит ", fname);
                    fillErrorsArray  (15, null, errDescription); 
                
                else
                    if (TFnsString (fvalue.m_value).isEmpty)
                        errDescription = string ("не заполнен обязательный реквизит ", fname);
                        fillErrorsArray  (15, null, errDescription); 
                    end;
                end;
            end;

            while (desc.next () )
              /*18.11.2013 Chesnokov D.S. По заявкам I-00443580 и I-00443581 добавил проверку */
              /*                          обязательных реквизитов                             */
              if (desc.value ()(0) == TFieldType.FNS_MANDATORY)
                if (not (fvalue = findFieldByName (fname = desc.key)))
                    errDescription = string ("не найден обязательный реквизит ", fname);
                    fillErrorsArray  (15, null, errDescription); 
                
                else
                    if (TFnsString (fvalue.m_value).isEmpty)
                        errDescription = string ("не заполнен обязательный реквизит ", fname);
                        fillErrorsArray  (15, null, errDescription); 
                    end;
                end;
              end;
            end;
        
            // Условно-обязательные реквизиты
            if (fvalue = findFieldByName ("ИНННП"))
                if   (StrLen (fvalue.m_value) == 12)
                    fvalue = findFieldByName ("КППНП");
                    if (fvalue)
                        errDescription = string ("в сообщении присутствует условно-обязательный реквизит КППНП "
                                                 "при невыполненном условии - /длина ИНННП/ = 10" );
                        fillErrorsArray  (15, null, errDescription);
                    end;
                    
                    fvalue = findFieldByName ("НаимНП");
                    if (fvalue)
                        errDescription = string ("в сообщении присутствует условно-обязательный реквизит НаимНП "
                                                 "при невыполненном условии - /длина ИНННП/ = 10" );
                        fillErrorsArray  (15, null, errDescription);
                    end;
                    
                    fvalue = findFieldByName ("ФИОИП");
                    if (not (fvalue))
                        errDescription = string ("не найден условно-обязательный реквизит ФИОИП "
                                                 "при выполненном условии - /длина ИНННП/ = 12" );
                        fillErrorsArray  (15, null, errDescription); 
                    else
                        if (TFnsString (fvalue.m_value).isEmpty)
                            errDescription = string ("не заполнен условно-обязательный реквизит ФИОИП "
                                                     "при выполненном условии - /длина ИНННП/ = 12" );
                            fillErrorsArray  (15, null, errDescription); 
                        else
                            // Дополнительные требования: фамилия и имя не пустое
                            var tmpFioArray = split (fvalue.m_value, ",");
                            if (tmpFioArray.size != 3)
                                errDescription = string ("значение реквизита ФИОИП не соответствует формату" );
                                fillErrorsArray  (15, null, errDescription); 
                            else
                            /*19.12.2013 Chesnokov D.S. По R-304503 привел проверку в соответствие с форматом*/
                                if ((TFnsString (tmpFioArray [0]).isEmpty) or
                                    (TFnsString (tmpFioArray [1]).isEmpty))// or 
                                    //(TFnsString (tmpFioArray [2]).isEmpty))
                                    errDescription = string ("значение реквизита ФИОИП не соответствует формату" );
                                    fillErrorsArray  (15, null, errDescription); 
                                end;
                            end;
                        end;
                    end;
                
                elif (StrLen (fvalue.m_value) == 10)
                    fvalue = findFieldByName ("ФИОИП");
                    if (fvalue)
                        errDescription = string ("в сообщении присутствует условно-обязательный реквизит ФИОИП "
                                                 "при невыполненном условии - /длина ИНННП/ = 12" );
                        fillErrorsArray  (15, null, errDescription);
                    end;
                    
                    fvalue = findFieldByName ("КППНП");
                    if (not (fvalue))
                        errDescription = string ("не найден условно-обязательный реквизит КППНП "
                                                 "при выполненном условии - /длина ИНННП/ = 10" );
                        fillErrorsArray  (15, null, errDescription); 
                    else
                        if (TFnsString (fvalue.m_value).isEmpty)
                            errDescription = string ("не заполнен условно-обязательный реквизит КППНП "
                                                     "при выполненном условии - /длина ИНННП/ = 10" );
                            fillErrorsArray  (15, null, errDescription); 
                        end;
                    end;
                    
                    fvalue = findFieldByName ("НаимНП");
                    if (not (fvalue))
                        errDescription = string ("не найден условно-обязательный реквизит НаимНП "
                                                 "при выполненном условии - /длина ИНННП/ = 10" );
                        fillErrorsArray  (15, null, errDescription); 
                    else
                        if (TFnsString (fvalue.m_value).isEmpty)
                            errDescription = string ("не заполнен условно-обязательный реквизит НаимНП "
                                                     "при выполненном условии - /длина ИНННП/ = 10" );
                            fillErrorsArray  (15, null, errDescription); 
                        end;
                    end;
                    
                end;
            end;
            
        elif   (msgForm == "PNO")
         debugbreak;

            desc.first ();
            if (desc.value ()(0) == TFieldType.FNS_MANDATORY)
                if (not (fvalue = findFieldByName (fname = desc.key)))
                    errDescription = string ("не найден обязательный реквизит ", fname);
                    fillErrorsArray  (15, null, errDescription); 
                
                else
                    if (TFnsString (fvalue.m_value).isEmpty)
                        errDescription = string ("не заполнен обязательный реквизит ", fname);
                        fillErrorsArray  (15, null, errDescription); 
                    end;
                end;
            end;

            while (desc.next () )
            if (desc.value ()(0) == TFieldType.FNS_MANDATORY)
                if (not (fvalue = findFieldByName (fname = desc.key)))
                    errDescription = string ("не найден обязательный реквизит ", fname);
                    fillErrorsArray  (15, null, errDescription); 
                
                else
                    if (TFnsString (fvalue.m_value).isEmpty)
                        errDescription = string ("не заполнен обязательный реквизит ", fname);
                        fillErrorsArray  (15, null, errDescription); 
                    end;
                end;
            end;
            end;


            if (fvalue = findFieldByName ("ИНННП"))
                if ((StrLen (fvalue.m_value) == 10) or (StrLen (fvalue.m_value) == 5))
                    if (not (fvalue = findFieldByName ("КППНП")))
                        errDescription = string ("не найден условно-обязательный реквизит ", "КППНП",
                                                 " при выполненном условии - /длина ИНННП/ =10|5" );
                        fillErrorsArray  (15, null, errDescription);
                    else
                        if (TFnsString (fvalue.m_value).isEmpty)
                            errDescription = string ("не заполнен условно-обязательный реквизит ", "КППНП",
                                                     " при выполненном условии - /длина ИНННП/ =10|5" );
                            fillErrorsArray  (15, null, errDescription);
                        end;
                    end;
                end;    
            end;
                    
                    if (not (fvalue = findFieldByName ("НомСчПл")) and (not (fvalue = findFieldByName ("НомСчБПл"))) )
                        errDescription = string ("не найдены условно-обязательный реквизит ", "НомСчПл" );
                        fillErrorsArray  (15, null, errDescription);
                    else
                        if (TFnsString (fvalue.m_value).isEmpty)
                            errDescription = string ("не заполнен условно-обязательный реквизит ", "НомСчПл");
                            fillErrorsArray  (15, null, errDescription);
                        end;
                    end;

                    
                    if (not (fvalue = findFieldByName ("НомСчПол")) and (not (fvalue = findFieldByName ("НомСчБПол"))) )
                        errDescription = string ("не найден обязательный реквизит ", "НомСчПол" );
                        fillErrorsArray  (15, null, errDescription);
                    else
                        if (TFnsString (fvalue.m_value).isEmpty)
                            errDescription = string ("не заполнен обязательный реквизит ", "НомСчПол");
                            fillErrorsArray  (15, null, errDescription);
                        end;
                    end;


        end;
    end;
    
    // проверка порядка следования полей в информационной части сообщения
    macro checkFieldOrder ()
        var correctFieldsSet = makeArray ("ИдФайл", "ТипИнф",  "ВерсПрог", "ТелОтпр", "ДолжнОтпр", "ФамОтпр",  "КолДок",  "ВерсФорм");
        var fieldNameMsg, fieldNameFormat;
        
        var i = 0;
        while (i < correctFieldsSet.size)
            fieldNameMsg    = getFragment (0).getBlock (0).getField (i).m_name;
            fieldNameFormat = correctFieldsSet (i);
            
            if (fieldNameMsg != fieldNameFormat)
                fillErrorsArray (15, null, string ("Найдено поле ", fieldNameMsg, " ожидается ", fieldNameFormat));
            end;
            
            i = i + 1;
        end;
    end;
    
    macro hasErrors ()
        return (errorsArray.size > 0);
    end;
    
    macro printErrors ()
        var i = 0;
        while (i < errorsArray.size )
            println (errorsArray (i));
            i = i + 1;
        end;
    end;
    
    macro getFormatErrors ()
        return errorsArray;
    end;
 end; 


/*** точка входа ***/
macro WL_CheckAll (_fileName, ErrStruct)
    var msg = TFNSMessage (_fileName);
    
    msg.loadFromFile ();
    msg.checkFieldContents ();
    msg.checkFieldExists ();
    msg.checkFieldOrder ();
    
    if (msg.hasErrors)
        setparm (1, msg.getFormatErrors ());
        msg.printErrors ();
        return false;
    end;
    
    return true;
end;

// @debug
// var err = TArray ();
// msgbox (WL_CheckAll ("../import/fns/365/old/RPO14525986_775020111018_010133.txt", err));
// msgbox (WL_CheckAll ("../import/fns/365/old/ROO14525986_775020111018_010140.txt", err));
