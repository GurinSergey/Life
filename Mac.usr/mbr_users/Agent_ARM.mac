// ---------------------------------------------------------------------------------------------
//   €€€€€€ ‹‹‹€€€€€≤ ‹‹‹       €€ﬂ€€€    €€€€€€  ‹€€€€‹   €€ﬂ€€€  ≤€€€€€ ‹‹‹       €€€‹ ‹€€€≤
// ±€€    ± ≤  €€± ≤±±€€€€‹    ≤€€ ± €€±±€€    ± ±€€ﬂ ﬂ€  ≤€€ ± €€±≤€   ﬂ±€€€€‹    ≤€€±ﬂ€ﬂ €€±
// ∞ ≤€€‹   ± ≤€€∞ ±∞±€€  ﬂ€‹  ≤€€ ∞‹€ ±∞ ≤€€‹   ±≤€    ‹ ≤€€ ∞‹€ ±±€€€  ±€€  ﬂ€‹  ≤€€    ≤€€∞
//   ±   €€±∞ ≤€€≤ ∞ ∞€€‹‹‹‹€€ ±€€ﬂﬂ€‹    ±   €€±±≤≤‹ ‹€€±±€€ﬂﬂ€‹  ±≤€  ‹∞€€‹‹‹‹€€ ±€€    ±€€ 
// ±€€€€€€±±  ±€€± ∞  ≤€   ≤€€±∞€€≤ ±€€±±€€€€€€±±± ≤€€€ﬂ ∞∞€€≤ ±€€±∞±€€€€±≤€   ≤€€±±€€±   ∞€€±
// ± ±≤± ± ∞  ± ∞∞    ±±   ≤±€∞∞ ±≤ ∞±≤∞± ±≤± ± ∞∞ ∞± ±  ∞∞ ±≤ ∞±≤∞∞∞ ±∞ ∞±±   ≤±€∞∞ ±∞   ∞  ∞
// ∞ ∞±  ∞ ∞    ∞      ±   ±± ∞  ∞± ∞ ±∞∞ ∞±  ∞ ∞  ∞  ±     ∞± ∞ ±∞ ∞ ∞  ∞ ±   ±± ∞∞  ∞      ∞
// ∞  ∞  ∞    ∞        ∞   ±     ∞∞   ∞ ∞  ∞  ∞  ∞          ∞∞   ∞    ∞    ∞   ±   ∞      ∞   
//      ∞                 ∞  ∞   ∞           ∞  ∞ ∞         ∞        ∞  ∞     ∞  ∞       ∞   
//                                              ∞                                            
// @filename: Agent_ARM.mac
// @author  : Gurin S. N., Zlenko M. P. 
// @desc    : Ä¢‚Æ¨†‚®ß†Ê®Ô Ø‡ÆÊ•··Æ¢ Æ°‡†°Æ‚™® Ø´†‚•¶•© ¢ Äêå èÆß®Ê®Æ≠•‡†
// @request : C-30151-7
// ---------------------------------------------------------------------------------------------

import rsd, RsbFormsInter, globals, rsbdataset, rsexts, lib_sqltools, PaymInter, CTInter; 
import keycodes, likepy, ä†´•≠§†‡Ï;
import lib_const, lib_agents;
import rm_check_general, cdoub, doub, fm_terr_uor;

private const	FT_INTEGER = 0;
private const	FT_LONG    = 1;
private const	FT_FLOAT   = 2;
private const	FT_DOUBLE  = 4;
private const	FT_DOUBLEM = 6;
private const	FT_STRING  = 7;
private const	FT_SNR     = 8;
private const	FT_DATE    = 9;
private const	FT_TIME    = 10;
private const	FT_CHR     = 12;
private const	FT_UCHR    = 13;
private const	FT_LDMON   = 14;
private const	FT_LDMONR  = 15;
private const	FT_DOUBLER = 16;
private const	FT_LDOUBLE = 17;
private const	FT_NUMSTR  = 18;

private class ( TRsbEditField ) EditField( type: integer, x: integer, y: integer, width: integer, height: integer, bindVal, active: bool)  
    var bindString = bindVal;       
    InitTRsbEditField( type );
    SetPosition( x, y );
    SetSize( width, height );        
    if( active == false ) editable = focusable = false; end;                                               
    if  ( type == 7 ) bindValue( this, "bindString", 100 );
    elif( bindVal != null ) value = bindVal;
    end;    
end; 

macro get_setting_value(code)
   var sql = execSQLSelect("SELECT  DECODE(TYPE_VALUE, 'DATE', TO_CHAR(VAL_DATE,'DD.MM.YYYY'), 'INTEGER', VAL_INTEGER, VAL_STRING) val, TYPE_VALUE FROM USR_ROBOTS_SETTINGS WHERE UPPER(CODE) = UPPER('" + code + "')");
   if(sql and sql.moveNext())
      if  (index(sql.value("TYPE_VALUE"), "INTEGER") != 0)  return int   (sql.value("VAL")); 
      elif(index(sql.value("TYPE_VALUE"), "DATE")    != 0)  return date  (sql.value("VAL"));
      else                                                  return string(sql.value("VAL"));
      end;  
   end;
   msgBox("ç• ≠†©§•≠†  ≠†·‚‡Æ©™† · ™Æ§Æ¨ " + code);
   return -1;
end;

macro get_setting_value_type(code)
   var sql = execSQLSelect("SELECT TYPE_VALUE FROM USR_ROBOTS_SETTINGS WHERE UPPER(CODE) = UPPER('" + code + "')");
   if(sql and sql.moveNext())
      return sql.value("TYPE_VALUE", NULL, V_STRING);  
   end;
   msgBox("ç• ≠†©§•≠†  ≠†·‚‡Æ©™† · ™Æ§Æ¨ " + code);
   return -1;
end;

macro set_setting_value(code, value)
   var type = get_setting_value_type(code), sql_field = "";
   
   if  (index(type, "INTEGER") != 0)  sql_field = " set VAL_INTEGER = "  + int    (value) ; 
   elif(index(type, "DATE"   ) != 0)  sql_field = " set VAL_DATE    = to_date('" + value + "', 'dd.mm.yyyy') ";
   else                               sql_field = " set VAL_STRING  = '" + string (value) + "'";
   end;     
   var sql = "update USR_ROBOTS_SETTINGS " + sql_field + " where upper(CODE) = upper('" + code + "')";
   execSqlSelect(sql);

onError
end;

macro get_filter_setting_value(_id, Time_Begin, Time_End, Is_Holiday, Paym_Kind, Paym_Pack, ëient_Code, Rec_Account, Rec_BIC, Tarif_Code, Priority, Paym_Shifr, TaxAuthorState,
                               _Time_Begin, _Time_End, _Is_Holiday, _Paym_Kind, _Paym_Pack, _ëient_Code, _Rec_Account, _Rec_BIC, _Tarif_Code, _Priority, _Paym_Shifr, _TaxAuthorState);
   if (not(_id)) _id = 0; end;
   var sql = execSQLSelect("SELECT usr.TIME_BEGIN, usr.TIME_END, usr.IS_HOLIDAY, usr.PAYM_KIND, usr.PAYM_PACK, usr.CLIENT_CODE, usr.REC_ACCOUNT, REC_BIC, "+
                           "       usr.TARIF_CODE, usr.PRIORITY, usr.PAYM_SHIFR, usr.TAXAUTHORSTATE, "+
                           "       usrpr.prTIME_BEGIN, usrpr.prTIME_END, usrpr.prIS_HOLIDAY, usrpr.prPAYM_KIND, usrpr.prPAYM_PACK, usrpr.prCLIENT_CODE, usrpr.prREC_ACCOUNT, usrpr.prREC_BIC, "+
                           "       usrpr.prTARIF_CODE, usrpr.prPRIORITY, usrpr.prPAYM_SHIFR, usrpr.prTAXAUTHORSTATE "+
                           "  FROM USR_ROBOTS_FILTER_SETTINGS usr, USR_ROBOTS_FILTER_SETTINGS_PR usrpr "+ 
                           " WHERE usr.id = usrpr.id AND usr.id = " + _id );
   if(sql and sql.moveNext())
      SetParm(1,  sql.value("TIME_BEGIN"));
      SetParm(2,  sql.value("TIME_END"));
      SetParm(3,  sql.value("IS_HOLIDAY"));
      SetParm(4,  sql.value("PAYM_KIND"));
      SetParm(5,  sql.value("PAYM_PACK"));
      SetParm(6,  sql.value("CLIENT_CODE"));
      SetParm(7,  sql.value("REC_ACCOUNT"));
      SetParm(8,  sql.value("REC_BIC"));
      SetParm(9,  sql.value("TARIF_CODE"));
      SetParm(10, sql.value("PRIORITY"));
      SetParm(11, sql.value("PAYM_SHIFR"));
      SetParm(12, sql.value("TAXAUTHORSTATE"));
      SetParm(13, sql.value("prTIME_BEGIN"));
      SetParm(14, sql.value("prTIME_END"));
      SetParm(15, sql.value("prIS_HOLIDAY"));
      SetParm(16, sql.value("prPAYM_KIND"));
      SetParm(17, sql.value("prPAYM_PACK"));
      SetParm(18, sql.value("prCLIENT_CODE"));
      SetParm(19, sql.value("prREC_ACCOUNT"));
      SetParm(20, sql.value("prREC_BIC"));
      SetParm(21, sql.value("prTARIF_CODE"));
      SetParm(22, sql.value("prPRIORITY"));
      SetParm(23, sql.value("prPAYM_SHIFR"));
      SetParm(24, sql.value("prTAXAUTHORSTATE"));
   end;
end;

macro set_filter_setting_value(obj, _id)
   var id = _id;
   debugbreak;
   if (not _id)
   var sql = execSqlSelect("SELECT NVL (MAX (id), 0) + 1 id FROM USR_ROBOTS_FILTER_SETTINGS");
   sql.movenext();
   id = int(sql.value("id"));
   end;
   var parm = makeArray (SQLParam ("1",  string(obj.otime_begin.value)),  SQLParam ("2",  string(obj.otime_end.value)),
                         SQLParam ("3",  obj.ois_holiday.value),  SQLParam ("4",  obj.opaym_kind.value),
                         SQLParam ("5",  obj.opaym_pack.value),   SQLParam ("6",  obj.oclient_code.value),
                         SQLParam ("7",  obj.orec_account.value), SQLParam ("8",  obj.orec_bic.value),
                         SQLParam ("9",  obj.otarif_code.value),  SQLParam ("10", obj.opriority.value),
                         SQLParam ("11", obj.opaym_shifr.value),  SQLParam ("12", obj.otaxauthorstate.value),
                         SQLParam ("13", id),
                         SQLParam ("14", obj.prtime_begin.value), SQLParam ("15", obj.prtime_end.value),
                         SQLParam ("16", obj.pris_holiday.value), SQLParam ("17", obj.prpaym_kind.value),
                         SQLParam ("18", obj.prpaym_pack.value),  SQLParam ("19", obj.prclient_code.value),
                         SQLParam ("20", obj.prrec_account.value),SQLParam ("21", obj.prrec_bic.value),
                         SQLParam ("22", obj.prtarif_code.value), SQLParam ("23", obj.prpriority.value),
                         SQLParam ("24", obj.prpaym_shifr.value), SQLParam ("25", obj.prtaxauthorstate.value),
                         SQLParam ("26", id));

   if (_id)
      ExecSql("BEGIN "+
              "   update USR_ROBOTS_FILTER_SETTINGS set TIME_BEGIN = ?, TIME_END = ?, IS_HOLIDAY = ?, PAYM_KIND = ?, PAYM_PACK = ?, "+
              "          CLIENT_CODE = ?, REC_ACCOUNT = ?, REC_BIC = ?, TARIF_CODE = ?, PRIORITY = ?, PAYM_SHIFR = ?, TAXAUTHORSTATE = ? "+
              "    where ID = ?; "+
              "   update USR_ROBOTS_FILTER_SETTINGS_PR set PRTIME_BEGIN = ?, PRTIME_END = ?, PRIS_HOLIDAY = ?, PRPAYM_KIND = ?, PRPAYM_PACK = ?, "+
              "          PRCLIENT_CODE = ?, PRREC_ACCOUNT = ?, PRREC_BIC = ?, PRTARIF_CODE = ?, PRPRIORITY = ?, PRPAYM_SHIFR = ?, PRTAXAUTHORSTATE = ? "+
              "    where ID = ?; "+
              "END;", parm);
   else
      ExecSql("BEGIN "+
              "   insert into USR_ROBOTS_FILTER_SETTINGS values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); "+
              "   insert into USR_ROBOTS_FILTER_SETTINGS_PR values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); "+
              "END;", parm);
   end;

onError
end;

//macro FormFileName(prefix)
//    var timestapm = strsubst(strsubst(string(date(),"_",time()),":","_"),".","_");
//    var _name = string(prefix,timestapm,".txt");
//    return _name;
//end;

class (TRsbPanel) TMainForm          

   private var mes = "F2 - á†Ø„·™, F8 - é·‚†≠Æ¢™†, F7 - ç†·‚‡Æ©™®, F11 - è†‡†¨•‚‡Î Æ‚°Æ‡†, F6 - ÆÁ®·‚®‚Ï ÆÁ•‡•§Ï";
   private var cnt_all, sum_all, cnt_norm, sum_norm, cnt_rush, sum_rush, cnt_1, cnt_2, cnt_3, cnt_4, 
               dyn_norm, dyn_rush, dyn_norm_manual, dyn_rush_manual;
   private var needCheck3; //, NeedGetDynStat;

   private  class(TRsbPanel) TSettings(_code)
      private var field, code = _code;
      InitTRsbPanel();
      
      setPosition(35, 5);
      SetSize(38, 2 ); 
      setCaption("á≠†Á•≠®• ≠†·‚‡Æ©™®");
        
      var value      = get_setting_value     (code);
      var value_type = get_setting_value_type(code);

      if  (index(value_type, "INTEGER") != 0 )  field = EditField(FT_INTEGER,  2 , 1 , 35, 1, int   (value), true ); 
      elif(index(value_type, "DATE"   ) != 0 )  field = EditField(FT_DATE   ,  2 , 1 , 35, 1, date  (value), true ); 
      else                                      field = EditField(FT_STRING ,  2 , 1 , 35, 1, string(value), true ); 
      end;
      addControl(field);
      addEventHandler ( RSB_EV_KEY_PRESSED,  R2M( this, "onKeyPressed"            ));  

      macro onKeyPressed( RsbEvent:object )     
         if ( rsbEvent.KeyCode == KEY_ESC )
            if((value != field.value));
               if(getTrue(false, "á≠†Á•≠®• ≠†·‚‡Æ©™® ®ß¨•≠®´Æ·Ï. ëÆÂ‡†≠®‚Ï •£Æ? "))
                  set_setting_value(code, field.value);
               end;
            end;
         elif (rsbEvent.KeyCode == KEY_F3)
               if(value_type == "DATE") field.value = GetDateByCalendar({curdate}); end;
         end;
      end;

   end;

   private class(TRsbPanel) TFilterSettings(_id)
      private var field, id = _id;

      InitTRsbPanel();
      setCaption("è†‡†¨•‚‡Î Æ‚°Æ‡†");
      addLabel(TRsbLabel( 1 , 1, "è‡®Æ‡®‚•‚:" )); 
      setPosition(38, 5);
      SetSize(38, 17); 
        
      var Time_Begin = time(0,0,0), Time_End = time(0,0,0), 
          IsHoliday = "", Paym_Kind = "", Paym_Pack = 0, ëlient_Code = "", Rec_Account = "", Rec_BIC = "",
          Tarif_Code = "", Priority = 0, Paym_Shifr = "", TaxAuthorState = "", 
          _Time_Begin = 0, _Time_End = 0, _IsHoliday = 0, _Paym_Kind = 0, _Paym_Pack = 0, _ëlient_Code = 0, _Rec_Account = 0, _Rec_BIC = 0, 
          _Tarif_Code = 0, _Priority = 0, _Paym_Shifr = 0, _TaxAuthorState = 0;
      debugbreak;
      get_filter_setting_value(id, Time_Begin, Time_End, IsHoliday, Paym_Kind, Paym_Pack, ëlient_Code, Rec_Account, Rec_BIC, Tarif_Code, Priority, Paym_Shifr, TaxAuthorState,
                                   _Time_Begin, _Time_End, _IsHoliday, _Paym_Kind, _Paym_Pack, _ëlient_Code, _Rec_Account, _Rec_BIC, _Tarif_Code, _Priority, _Paym_Shifr, _TaxAuthorState);

      var prTime_Begin      = EditField(FT_INTEGER,   1,  2,  2, 1, int(_Time_Begin),      true ); 
      addLabel(TRsbLabel( 4 , 2, "ç†Á†´Æ:" )); 
      var oTime_Begin       = EditField(FT_TIME,     15,  2,  8, 1, time(Time_Begin),      true ); 

      var prTime_End        = EditField(FT_INTEGER,   1,  3,  2, 1, int(_Time_End),        true ); 
      addLabel(TRsbLabel( 4 , 3, "äÆ≠•Ê:" )); 
      var oTime_End         = EditField(FT_TIME,     15,  3,  8, 1, time(Time_End),        true ); 
                                                                                    
      var prIsHoliday       = EditField(FT_INTEGER,   1,  4,  2, 1, int(_IsHoliday),       true ); 
      addLabel(TRsbLabel( 4 , 4, "ÇÎÂÆ§≠Æ©:" )); 
      var oIsHoliday        = EditField(FT_STRING,   15,  4,  2, 1, IsHoliday,             true );

      var prPaym_Kind       = EditField(FT_INTEGER,   1,  5,  2, 1, int(_Paym_Kind),       true ); 
      addLabel(TRsbLabel( 4 , 5, "Ç®§ Ø´†‚•¶†:" )); 
      var oPaym_Kind        = EditField(FT_STRING,   15,  5,  5, 1, Paym_Kind,             true ); 

      addLabel(TRsbLabel( 1 , 7, "Ä‚‡®°„‚Î Ø´†‚•¶†:" )); 

      var prPaym_Pack       = EditField(FT_INTEGER,   1,  8,  2, 1, int(_Paym_Pack),       true ); 
      addLabel(TRsbLabel( 4 , 8, "è†Á™†:" )); 
      var oPaym_Pack        = EditField(FT_INTEGER,  15,  8,  8, 1, int(Paym_Pack),        true ); 
                                                             
      var prëlient_Code     = EditField(FT_INTEGER,   1,  9,  2, 1, int(_ëlient_Code),     true ); 
      addLabel(TRsbLabel( 4 , 9, "ä´®•≠‚(™Æ§):" ));          
      var oëlient_Code      = EditField(FT_STRING,   15,  9, 20, 1, ëlient_Code,           true ); 

      var prRec_Account     = EditField(FT_INTEGER,   1, 10,  2, 1, int(_Rec_Account),     true ); 
      addLabel(TRsbLabel( 4 , 10, "ëÁ•‚ ØÆ´„Á.:" )); 
      var oRec_Account      = EditField(FT_STRING,   15, 10, 20, 1, Rec_Account,           true ); 

      var prRec_BIC         = EditField(FT_INTEGER,   1, 11,  2, 1, int(_Rec_BIC),         true ); 
      addLabel(TRsbLabel( 4 , 11, "Åàä ØÆ´„Á.:" )); 
      var oRec_BIC          = EditField(FT_STRING,   15, 11, 20, 1, Rec_BIC,               true ); 

      var prTarif_Code      = EditField(FT_INTEGER,   1, 12,  2, 1, int(_Tarif_Code),      true ); 
      addLabel(TRsbLabel( 4 , 12, "äÆ§ ‚†‡®‰†.:" )); 
      var oTarif_Code       = EditField(FT_STRING,   15, 12, 20, 1, Tarif_Code,            true ); 

      var prPriority        = EditField(FT_INTEGER,   1, 13,  2, 1, int(_Priority),        true ); 
      addLabel(TRsbLabel( 4 , 13, "éÁ•‡•§≠Æ·‚Ï:" )); 
      var oPriority         = EditField(FT_INTEGER,  15, 13,  3, 1, Priority,              true ); 

      var prPaym_Shifr      = EditField(FT_INTEGER,   1, 14,  2, 1, int(_Paym_Shifr),      true ); 
      addLabel(TRsbLabel( 4 , 14, "ò®‰‡:" )); 
      var oPaym_Shifr       = EditField(FT_STRING,   15, 14 , 4, 1, Paym_Shifr,            true ); 

      var prTaxAuthorState  = EditField(FT_INTEGER,   1, 15,  2, 1, int(_TaxAuthorState),  true ); 
      addLabel(TRsbLabel( 4 , 15, "ë‚†‚„· ·Æ·‚†¢.:" ));                                    
      var oTaxAuthorState   = EditField(FT_STRING,   15, 15 , 4, 1, TaxAuthorState,        true ); 

      addControl(prTime_Begin);  addControl(prTime_End); addControl(prIsHoliday);  addControl(prPaym_Kind); addControl(prPaym_Pack);  addControl(prëlient_Code);
      addControl(prRec_Account); addControl(prRec_BIC);  addControl(prTarif_Code); addControl(prPriority);  addControl(prPaym_Shifr); addControl(prTaxAuthorState);

      addControl(oTime_Begin);  addControl(oTime_End); addControl(oIsHoliday);  addControl(oPaym_Kind); addControl(oPaym_Pack);  addControl(oëlient_Code);
      addControl(oRec_Account); addControl(oRec_BIC);  addControl(oTarif_Code); addControl(oPriority);  addControl(oPaym_Shifr); addControl(oTaxAuthorState);

      addEventHandler ( RSB_EV_KEY_PRESSED,  R2M( this, "onKeyPressed"            ));  
      

      macro onKeyPressed( RsbEvent:object )     
         if ( rsbEvent.KeyCode == KEY_ESC )
            var tmp_data = null;
            tmp_data = TDialogFieldsTmp(oTime_Begin, oTime_End, oIsHoliday, oPaym_Kind, oPaym_Pack, oëlient_Code, oRec_Account, oRec_BIC, oTarif_Code, oPriority, oPaym_Shifr, oTaxAuthorState,
                                        prTime_Begin, prTime_End, prIsHoliday, prPaym_Kind, prPaym_Pack, prëlient_Code, prRec_Account, prRec_BIC, prTarif_Code, prPriority, prPaym_Shifr, prTaxAuthorState);
            if (CompareDialogFields_Agent(tmp_data) == false)
               if(getTrue(false, "á≠†Á•≠®• ≠†·‚‡Æ©™® ®ß¨•≠®´Æ·Ï. ëÆÂ‡†≠®‚Ï •£Æ? "))
                  set_filter_setting_value(tmp_data, id);
               end;
            end;
         end;
      end;

   end;

   private macro FastUpdateScroll(rs, sql)
        rs.refreshcommand = RSDCommand(sql);
        rs.refreshrecord;
        UpdateScroll(rs); 
   //onError
   end;

   macro scroll_settings ( rs, cmd, id, key )
      var obj;
      if (cmd == DLG_KEY) 
         if(key == KEY_ENTER)
            obj = TSettings(strUpr(rs.value("CODE")));
            obj.run;
            FastUpdateScroll(rs, rs.command.cmdtext + " AND UPPER (CODE) = UPPER ('"+ rs.value("CODE") +"')");
            obj = null;
         end;
      end;
   end;   

   private macro viewScrollSettings()
       var column = makeArray ("DESCRIPT", "éØ®·†≠®• ≠†·‚‡Æ©™®"  ,55,  0,  0, 0, 
                               "VAL"     , "á≠†Á•≠®•"            ,30,  0,  0, 0);                             
       var sql = "SELECT CODE, DECODE(TYPE_VALUE, 'DATE', TO_CHAR(VAL_DATE,'DD.MM.YYYY'), 'INTEGER', VAL_INTEGER, VAL_STRING)  VAL , DESCRIPT, TYPE_VALUE "+
                 "  FROM USR_ROBOTS_SETTINGS "+
                 " WHERE SHOW = CHR(88)";
       var msg = "Enter - ê•§†™‚®‡Æ¢†‚Ï, Esc - ÇÎÂÆ§";
       runScroll (RsdRecordSet (sql, RSDVAL_CLIENT, RSDVAL_STATIC), column.size/6, column, null, r2m(this, "scroll_settings"), "ç†·‚‡Æ©™®", msg);
   end;

   macro clearQueue()
       execSql("delete from USR_ROBOT_PAYMENT_TMP");
       msgbox("ÇÎØÆ´≠•≠Æ");
   end;

   macro scroll_filter_settings ( rs, cmd, id, key )
      var obj;
      if (cmd == DLG_KEY) 
         if(key == KEY_ENTER)
            obj = TFilterSettings(rs.value("id"));
            obj.run;
            obj = null;
         elif(key == KEY_F9)
            obj = TFilterSettings();
            obj.run;
            //FastUpdateScroll(rs, rs.command.cmdtext + " where id = " + rs.value("id"));     ??????
            obj = null;
         elif(key == KEY_F8)
            DelFilterSettingsRow(rs.value("id"));
            //FastUpdateScroll(rs, rs.command.cmdtext + " where id = " + rs.value("id"));     ??????
         end;
      end;
	   end;   

   private macro viewScrollFilterSettings()
       var column = makeArray ("TIME_BEGIN"     ,"ç†Á†´Æ"              ,  7,  0,  0, 0, 
                               "TIME_END"       ,"äÆ≠•Ê"               ,  7,  0,  0, 0,
                               "IS_HOLIDAY"     ,"ÇÎÂÆ§≠Æ©"            ,  7,  0,  0, 0,
                               "PAYM_KIND"      ,"Ç®§ Ø´†‚•¶†"         ,  9,  0,  0, 0,
                               "PAYM_PACK"      ,"çÆ¨•‡ Ø†Á™®"         ,  9,  0,  0, 0,
                               "CLIENT_CODE"    ,"ä´®•≠‚(™Æ§)"         , 10,  0,  0, 0,
                               "REC_ACCOUNT"    ,"ëÁ•‚ ØÆ´„Á†‚•´Ô"     , 20,  0,  0, 0,
                               "REC_BIC"        ,"Åàä °†≠™† ØÆ´„Á."    , 20,  0,  0, 0,
                               "TARIF_CODE"     ,"äÆ§ ‚†‡®‰†"          ,  9,  0,  0, 0,
                               "PRIORITY"       ,"éÁ•‡•§≠Æ·‚Ï"         ,  9,  0,  0, 0,
                               "PAYM_SHIFR"     ,"ò®‰‡ ÆØ•‡†Ê®®"       , 13,  0,  0, 0,
                               "TAXAUTHORSTATE" ,"ë‚†‚„· ·Æ·‚†¢®‚•´Ô"  , 17,  0,  0, 0);

       var sql = "SELECT TIME_BEGIN, TIME_END, IS_HOLIDAY, PAYM_KIND, PAYM_PACK, CLIENT_CODE, REC_ACCOUNT, REC_BIC, "+
                 "       TARIF_CODE, PRIORITY, PAYM_SHIFR, TAXAUTHORSTATE, ID "+
                 "  FROM USR_ROBOTS_FILTER_SETTINGS ";
       var msg = "Enter - ê•§†™‚®‡Æ¢†‚Ï, F9 - Ç¢Æ§, F8 - ì§†´®‚Ï, Esc - ÇÎÂÆ§";
       runScroll (RsdRecordSet (sql, RSDVAL_CLIENT, RSDVAL_STATIC), column.size/6, column, null, r2m(this, "scroll_filter_settings"), "ç†·‚‡Æ©™®", msg);
   end;

   InitTRsbPanel();

   addLabel(TRsbLabel( 2 , 1, "íÖäìôÖÖ ëéëíéüçàÖ êéÅéíÄ èÑ:"      )); 
   addLabel(TRsbLabel( 2 , 2, "í•™„È®© ·‚†‡‚: "                   )); 
   addLabel(TRsbLabel( 30, 2, "ë´•§„ÓÈ®© ·‚†‡‚: "                 )); 
   addLabel(TRsbLabel( 54, 2, "í•™„È®© ·‚†‚„·: "                  )); 
   addLabel(TRsbLabel( 2,  4, "éóÖêÖÑú ÄÇíéåÄíàóÖëäéâ éÅêÄÅéíäà " )); 

   addLabel(TRsbLabel( 2,  5, "íÖäìôÖÖ áçÄóÖçàÖ:"                 )); 
   addLabel(TRsbLabel( 2,  6, "ä-¢Æ ¢·•£Æ:"                       )); 
   addLabel(TRsbLabel( 2,  7, "é°ÎÁ≠Î•:"                          )); 
   addLabel(TRsbLabel( 2,  8, "ë‡ÆÁ≠Î•:"                          )); 
   //addLabel(TRsbLabel( 2,  9, "Ç‡•¨Ô ®ß¨•≠•≠®Ô:"                  )); 

   addLabel(TRsbLabel( 16,  6, "ë„¨¨†(¢·•):"                      )); 
   addLabel(TRsbLabel( 16,  7, "ë„¨¨†(Æ°ÎÁ≠Î•):"                  )); 
   addLabel(TRsbLabel( 16,  8, "ë„¨¨†(·‡ÆÁ≠Î•):"                  )); 

   //addLabel(TRsbLabel( 45,  5, "ÑàçÄåàäÄ"                         )); 

   addLabel(TRsbLabel( 38,  5, "ÇëÖÉé éÅêÄÅéíÄçé êéÅéíéå:"        )); 
   addLabel(TRsbLabel( 38,  6, "ä-¢Æ ¢·•£Æ:"                      )); 
   addLabel(TRsbLabel( 38,  7, "é°ÎÁ≠Î•:"                         )); 
   addLabel(TRsbLabel( 38,  8, "ë‡ÆÁ≠Î•:"                         )); 
   //addLabel(TRsbLabel( 54,  9, "Ç‡•¨Ô ®ß¨•≠•≠®Ô:"                 )); 

   addLabel(TRsbLabel( 52,  6, "ë„¨¨†(¢·•):"                      )); 
   addLabel(TRsbLabel( 52,  7, "ë„¨¨†(Æ°ÎÁ≠Î•):"                  )); 
   addLabel(TRsbLabel( 52,  8, "ë„¨¨†(·‡ÆÁ≠Î•):"                  ));

   addLabel(TRsbLabel( 74,  5, "Ç åÅê:"                           )); 
   addLabel(TRsbLabel( 74,  6, "ä-¢Æ ¢·•£Æ:"                      )); 
   addLabel(TRsbLabel( 74,  7, "é°ÎÁ≠Î•:"                         )); 
   addLabel(TRsbLabel( 74,  8, "ë‡ÆÁ≠Î•:"                         )); 

   addLabel(TRsbLabel( 2,   11, "éóÖêÖÑú êìóçéâ éÅêÄÅéíäà "       )); 

   addLabel(TRsbLabel( 2,  12, "íÖäìôÖÖ áçÄóÖçàÖ:"                )); 
   addLabel(TRsbLabel( 2,  13, "ä-¢Æ ¢·•£Æ:"                      )); 
   addLabel(TRsbLabel( 2,  14, "é°ÎÁ≠Î•:"                         )); 
   addLabel(TRsbLabel( 2,  15, "ë‡ÆÁ≠Î•:"                         )); 
   //addLabel(TRsbLabel( 2,  16, "Ç‡•¨Ô ®ß¨•≠•≠®Ô:"                 )); 

   addLabel(TRsbLabel( 16, 13, "ë„¨¨†(¢·•):"                      )); 
   addLabel(TRsbLabel( 16, 14, "ë„¨¨†(Æ°ÎÁ≠Î•):"                  )); 
   addLabel(TRsbLabel( 16, 15, "ë„¨¨†(·‡ÆÁ≠Î•):"                  )); 

   //addLabel(TRsbLabel( 45, 12, "ÑàçÄåàäÄ"                         )); 

   addLabel(TRsbLabel( 38,  12, "ÇëÖÉé çÄ êìóçéâ éÅêÄÅéíäà:"      )); 
   addLabel(TRsbLabel( 38,  13, "ä-¢Æ ¢·•£Æ:"                     )); 
   addLabel(TRsbLabel( 38,  14, "é°ÎÁ≠Î•:"                        )); 
   addLabel(TRsbLabel( 38,  15, "ë‡ÆÁ≠Î•:"                        )); 
   //addLabel(TRsbLabel( 54,  16, "Ç‡•¨Ô ®ß¨•≠•≠®Ô:"                 )); 

   addLabel(TRsbLabel( 52,  13, "ë„¨¨†(¢·•):"                     )); 
   addLabel(TRsbLabel( 52,  14, "ë„¨¨†(Æ°ÎÁ≠Î•):"                 )); 
   addLabel(TRsbLabel( 52,  15, "ë„¨¨†(·‡ÆÁ≠Î•):"                 )); 

   addLabel(TRsbLabel( 2,  18, "ÑéäìåÖçíõ çÄ êìóçéâ éÅêÄÅéíäà (Ç ëäêéããàçÉÄï èêéÇÖêéä)" )); 
   addLabel(TRsbLabel( 2,  19, "è‡•§¢†‡®‚•´Ï≠†Ô ¢Î£‡„ß™†:"       )); 
   addLabel(TRsbLabel( 2,  20, "è‡Æ¢•‡™† ≠† §„°´Ï:"              )); 
   addLabel(TRsbLabel( 2,  21, "è‡Æ¢•‡™† ≠† ß†§¢Æ•≠≠Æ·‚Ï:"       )); 
   addLabel(TRsbLabel( 2,  22, "è‡Æ¢•‡™† \"≠•Á•‚™®© ØÆ®·™\":"    )); 
   
   var oCurrentStart                = EditField( 10 , 15 , 2 , 10, 1, "", false ); 
   var oNextStart                   = EditField( 10 , 42 , 2 , 10, 1, "", false ); 
   var oCurrentState                = EditField(  FT_STRING  , 67 , 2 , 15, 1, "ç•†™‚®¢≠Î©",        false ); 

   var oAutoPaymentCnt              = EditField(  FT_INTEGER , 10 , 6 ,  5, 1, "",        false ); 
   var oAutoPaymentCntNorm          = EditField(  FT_INTEGER , 10 , 7 ,  5, 1, "",        false ); 
   var oAutoPaymentCntRush          = EditField(  FT_INTEGER , 10 , 8 ,  5, 1, "",        false ); 

   var oAutoPaymentSum              = EditField(  FT_DOUBLE  , 27 , 6 ,  9, 1, "",        false ); 
   var oAutoPaymentSumNorm          = EditField(  FT_DOUBLE  , 27 , 7 ,  9, 1, "",        false ); 
   var oAutoPaymentSumRush          = EditField(  FT_DOUBLE  , 27 , 8 ,  9, 1, "",        false ); 
    

   //var oAutoPaymentDynam            = EditField(  FT_INTEGER , 44 , 6 ,  9, 1, "",        false ); 
   //var oAutoPaymentDynamNorm        = EditField(  FT_INTEGER , 44 , 7 ,  9, 1, "",        false ); 
   //var oAutoPaymentDynamRush        = EditField(  FT_INTEGER , 44 , 8 ,  9, 1, "",        false ); 

   var oAutoPaymentCntAll           = EditField(  FT_INTEGER , 46 , 6 ,  5, 1, "",        false ); 
   var oAutoPaymentCntAllNorm       = EditField(  FT_INTEGER , 46 , 7 ,  5, 1, "",        false ); 
   var oAutoPaymentCntAllRush       = EditField(  FT_INTEGER , 46 , 8 ,  5, 1, "",        false ); 

   var oAutoPaymentSumAll           = EditField(  FT_DOUBLE  , 63 , 6 ,  9, 1, "",        false ); 
   var oAutoPaymentSumAllNorm       = EditField(  FT_DOUBLE  , 63 , 7 ,  9, 1, "",        false ); 
   var oAutoPaymentSumAllRush       = EditField(  FT_DOUBLE  , 63 , 8 ,  9, 1, "",        false ); 

   var oMBRPaymentCntAll           = EditField(  FT_INTEGER , 82 , 6 ,  5, 1, "",        false ); 
   var oMBRPaymentCntAllNorm       = EditField(  FT_INTEGER , 82 , 7 ,  5, 1, "",        false ); 
   var oMBRPaymentCntAllRush       = EditField(  FT_INTEGER , 82 , 8 ,  5, 1, "",        false ); 

   var oAutoPaymentCntManual        = EditField(  FT_INTEGER , 10 , 13 , 5, 1, "",        false ); 
   var oAutoPaymentCntNormManual    = EditField(  FT_INTEGER , 10 , 14 , 5, 1, "",        false ); 
   var oAutoPaymentCntRushManual    = EditField(  FT_INTEGER , 10 , 15 , 5, 1, "",        false ); 

   var oAutoPaymentSumManual        = EditField(  FT_DOUBLE  , 27 , 13 , 9, 1, "",        false ); 
   var oAutoPaymentSumNormManual    = EditField(  FT_DOUBLE  , 27 , 14,  9, 1, "",        false ); 
   var oAutoPaymentSumRushManual    = EditField(  FT_DOUBLE  , 27 , 15 , 9, 1, "",        false ); 

   //var oAutoPaymentDynamManual      = EditField(  FT_INTEGER , 44 , 13 , 9, 1, "",        false ); 
   //var oAutoPaymentDynamNormManual  = EditField(  FT_INTEGER , 44 , 14 , 9, 1, "",        false ); 
   //var oAutoPaymentDynamRushManual  = EditField(  FT_INTEGER , 44 , 15 , 9, 1, "",        false ); 

   var oAutoPaymentCntAllManual     = EditField(  FT_INTEGER , 46 , 13 , 5, 1, "",        false ); 
   var oAutoPaymentCntAllNormManual = EditField(  FT_INTEGER , 46 , 14 , 5, 1, "",        false ); 
   var oAutoPaymentCntAllRushManual = EditField(  FT_INTEGER , 46 , 15 , 5, 1, "",        false ); 

   var oAutoPaymentSumAllManual     = EditField(  FT_DOUBLE  , 63 , 13 , 9, 1, "",        false ); 
   var oAutoPaymentSumAllNormManual = EditField(  FT_DOUBLE  , 63 , 14 , 9, 1, "",        false ); 
   var oAutoPaymentSumAllRushManual = EditField(  FT_DOUBLE  , 63 , 15 , 9, 1, "",        false ); 

   var oCheck1                      = EditField(  FT_INTEGER , 21 , 19 ,  5, 1, "",        false ); 
   var oCheck2                      = EditField(  FT_INTEGER , 21 , 20 ,  5, 1, "",        false ); 
   var oCheck3                      = EditField(  FT_INTEGER , 21 , 21 ,  5, 1, "",        false ); 
   var oCheck4                      = EditField(  FT_INTEGER , 21 , 22 ,  5, 1, "",        false ); 

   SetSize(88, 23);    
   
   addControl(oCurrentStart               );
   addControl(oNextStart                  );
   addControl(oCurrentState               );

   addControl(oAutoPaymentCnt             );
   addControl(oAutoPaymentCntNorm         );
   addControl(oAutoPaymentCntRush         );

   addControl(oAutoPaymentSum             );
   addControl(oAutoPaymentSumNorm         );
   addControl(oAutoPaymentSumRush         );

   //addControl(oAutoPaymentDynam           );
   //addControl(oAutoPaymentDynamNorm       );
   //addControl(oAutoPaymentDynamRush       );

   addControl(oAutoPaymentCntAll          );
   addControl(oAutoPaymentCntAllNorm      );
   addControl(oAutoPaymentCntAllRush      );

   addControl(oAutoPaymentSumAll          );
   addControl(oAutoPaymentSumAllNorm      );
   addControl(oAutoPaymentSumAllRush      );
                                            
   addControl(oMBRPaymentCntAll          );
   addControl(oMBRPaymentCntAllNorm      );
   addControl(oMBRPaymentCntAllRush      );


   addControl(oAutoPaymentCntManual       );
   addControl(oAutoPaymentCntNormManual   );
   addControl(oAutoPaymentCntRushManual   );

   addControl(oAutoPaymentSumManual       );
   addControl(oAutoPaymentSumNormManual   );
   addControl(oAutoPaymentSumRushManual   );

   //addControl(oAutoPaymentDynamManual     );
   //addControl(oAutoPaymentDynamNormManual );
   //addControl(oAutoPaymentDynamRushManual );

   addControl(oAutoPaymentCntAllManual    );
   addControl(oAutoPaymentCntAllNormManual);
   addControl(oAutoPaymentCntAllRushManual);

   addControl(oAutoPaymentSumAllManual    );
   addControl(oAutoPaymentSumAllNormManual);
   addControl(oAutoPaymentSumAllRushManual);

   addControl(oCheck1                     );
   addControl(oCheck2                     );
   addControl(oCheck3                     );
   addControl(oCheck4                     );

   addEventHandler             ( RSB_EV_KEY_PRESSED,  R2M( this, "onFramedKeyPressed" ));  
                                             
                                             
   setCaption("êÆ°Æ‚ Äêå");
   setStatus (mes);

   private macro Check1(id) //è‡•§¢†‡®‚•´Ï≠†Ô ¢Î£‡„ß™†
      if (not getCtgValue(id, PT_USR_CAT_CHECK_STATE/*1017*/,{Curdate})) 
         //SetOutPut(get_setting_value("PATH1") + "\\" + FormFileName("pred_vigr"), false);
         Run_Check(id);
         //SetOutput(NULL, true);
      end;
   end;

   private macro Check2(id) //è‡Æ¢•‡™† ≠† §„°´Ï
      if ((getCtgValue(id, PT_USR_CAT_CHECK_STATE/*1017*/,{Curdate}) == 1/*è‡•§¢†‡®‚•´Ï≠†Ô ¢Î£‡„ß™†*/) 
          and (getCtgValue(id, PT_USR_CAT_CHECK_BEFORE_UNLOAD/*1016*/,{Curdate}) != 7))
         cdoubl(id);
      end;
   end;

   private macro Check3(id) //è‡Æ¢•‡™† ≠† ß†§¢Æ•≠≠Æ·‚Ï
      if ((getCtgValue(id, PT_USR_CAT_CHECK_STATE/*1017*/,{Curdate}) == 2/*Ñ„°´®‡Æ¢†≠®•*/) 
          and (getCtgValue(id, PT_USR_CAT_CHECK_BEFORE_UNLOAD/*1016*/,{Curdate}) != 7))
         if (needCheck3)
            doubl(id);
            needCheck3 = False;
         else
            if (not setCtgVal(id, PT_USR_CAT_CHECK_STATE, 3/*á†§¢Æ•≠≠Î•*/, {curdate})) end;
         end;
      end;
   end;

   private macro Check4(id) //è‡Æ¢•‡™† "≠•Á•‚™®© ØÆ®·™"
      if ((getCtgValue(id, PT_USR_CAT_CHECK_STATE/*1017*/,{Curdate}) == 3/*á†§¢Æ•≠≠Î•*/) 
          and (getCtgValue(id, PT_USR_CAT_CHECK_BEFORE_UNLOAD/*1016*/,{Curdate}) != 7))
         fm_run(1/*ScrolStates*/,id)      
      end;
   end;

   private macro getDynamicStat(flg)
       getStat(cnt_all, sum_all, cnt_norm, sum_norm, cnt_rush, sum_rush, cnt_1, cnt_2, cnt_3, cnt_4, flg);

       if (flg == "1")
          oAutoPaymentCnt.value              = cnt_all;  oAutoPaymentCntNorm.value          = cnt_norm;  oAutoPaymentCntRush.value          = cnt_rush;
          oAutoPaymentSum.value              = sum_all;  oAutoPaymentSumNorm.value          = sum_norm;  oAutoPaymentSumRush.value          = sum_rush; 
//          if (NeedGetDynStat)
//             dyn_norm = cnt_norm; 
//             dyn_rush = cnt_rush;
//             NeedGetDynStat = False;
//          end;

//          oAutoPaymentDynamNorm.value       = dyn_norm - cnt_norm; dyn_norm = oAutoPaymentCntNorm.value;
//          oAutoPaymentDynamRush.value       = dyn_rush - cnt_rush; dyn_rush = oAutoPaymentCntRush.value;
//          oAutoPaymentDynam.value           = oAutoPaymentDynamNorm.value + oAutoPaymentDynamRush.value;

       elif (flg == "2")
          oAutoPaymentCntAll.value       = cnt_all;  oAutoPaymentCntAllNorm.value       = cnt_norm;  oAutoPaymentCntAllRush.value       = cnt_rush;
          oAutoPaymentSumAll.value       = sum_all;  oAutoPaymentSumAllNorm.value       = sum_norm;  oAutoPaymentSumAllRush.value       = sum_rush; 
       elif (flg == "3")
          oAutoPaymentCntManual.value    = cnt_all;  oAutoPaymentCntNormManual.value    = cnt_norm;  oAutoPaymentCntRushManual.value    = cnt_rush;
          oAutoPaymentSumManual.value    = sum_all;  oAutoPaymentSumNormManual.value    = sum_norm;  oAutoPaymentSumRushManual.value    = sum_rush; 
       elif (flg == "4")
          oAutoPaymentCntAllManual.value = cnt_all;  oAutoPaymentCntAllNormManual.value = cnt_norm;  oAutoPaymentCntAllRushManual.value = cnt_rush;
          oAutoPaymentSumAllManual.value = sum_all;  oAutoPaymentSumAllNormManual.value = sum_norm;  oAutoPaymentSumAllRushManual.value = sum_rush; 
       elif (flg == "5") 
          oMBRPaymentCntAll.value        = cnt_all;  oMBRPaymentCntAllNorm.value        = cnt_norm;  oMBRPaymentCntAllRush.value        = cnt_rush;
       elif (flg == "all")
          oCheck1.value = cnt_1;  oCheck2.value = cnt_2;  oCheck3.value = cnt_3;  oCheck4.value = cnt_4; 
          if (int(cnt_1 + cnt_2 + cnt_3 + cnt_4) >= int(get_setting_value("LIMIT_PAYMENT_MANUAL")))
             if (Agent_Send_Letter(4, get_setting_value("ADRES_MAIL"))) end;
          end;
       end;

//       dyn_norm_manual = dyn_rush_manual

//       oAutoPaymentDynamManual.value     =
//       oAutoPaymentDynamNormManual.value =
//       oAutoPaymentDynamRushManual.value =
   end;

   private macro getAllStat();
      //ëÆ°®‡†•¨ ·‚†‚®·‚®™„:
      // - ÆÁ•‡•§Ï †¢‚Æ¨†‚®Á•·™Æ© Æ°‡†°Æ‚™®
      getDynamicStat("1");
      // - ¢·•£Æ Æ°‡†°Æ‚†≠Æ ‡Æ°Æ‚Æ¨
      getDynamicStat("2");
      // - ÆÁ•‡•§Ï ‡„Á≠Æ© Æ°‡†°Æ‚™®
      getDynamicStat("3");
      // - ¢·•£Æ ≠† ‡„Á≠Æ© Æ°‡†°Æ‚™®
      getDynamicStat("4");
      // - ¢ åÅê ≠† ¢Î£‡„ß™•
      getDynamicStat("5");
      // - ™Æ´®Á•·‚¢Æ §Æ™„¨•≠‚Æ¢ ¢ ·™‡Æ´´®≠£†Â Ø‡Æ¢•‡Æ™
      getDynamicStat("all");

   end;

   private macro GetPaym()
      var sql, _sql;

      sql = execSQl("delete from USR_ROBOT_PAYMENT_TMP where ismanual = CHR(88)");

      sql = " INSERT INTO USR_ROBOT_PAYMENT_TMP (PAYMID, AMOUNT, PAYMKIND, CREATIONDATE)" 
          + "\n   ( "
          + "\n    SELECT /*+FIRST_ROWS LEADING(oprstep oproper t pmpaym pmrmprop prop2) INDEX(oprstep doprstep_dbt_idx10) " 
          + "\n             INDEX(t dpmprop_dbt_idx0) INDEX(pmpaym dpmpaym_dbt_idx0) USE_NL(oprstep oproper t pmpaym pmrmprop prop2)*/ " 
          + "\n             t.t_paymentid, pmpaym.t_amount, pmrmprop.t_paymentkind, :d1 "
          + "\n      FROM   dpmprop_dbt t, doproper_dbt oproper, doprstep_dbt oprstep, dpmpaym_dbt pmpaym, dpmrmprop_dbt pmrmprop, "
          + "\n             dpmprop_dbt prop2, dwltransp_dbt wltransp "
          + "\n     WHERE   (    t.t_issender = CHR (0) AND t.t_group = 1 AND t.t_transferdate = :d2 "
          + "\n               AND t.t_propstatus BETWEEN 3000 AND 5000) "
          + "\n               AND (    t.t_PaymentID = prop2.t_PaymentID AND prop2.t_DebetCredit = DECODE (t.t_DebetCredit, 1, 0, 1) "
          + "\n               AND t.t_PaymentID = pmpaym.t_PaymentID AND t.t_PaymentID = pmrmprop.t_PaymentID AND t.t_Group = 1 "
          + "\n               AND t.t_IsSender = CHR (0) AND wltransp.t_TpID(+) = t.t_TpID AND oprstep.t_DocKind IN "
          + "\n                                                                     (16, 17, 27, 201, 202, 450, 320, 322, 311) "
          + "\n               AND oproper.t_ID_Operation = oprstep.t_ID_Operation AND oproper.t_DocKind = oprstep.t_DocKind "
          + "\n               AND t.t_PaymentID = TO_NUMBER (oproper.t_DocumentID) AND oproper.t_DocumentID = LPAD (t.t_PaymentID, 34, CHR (48))) "
          + "\n               AND (    oprstep.t_Symbol = CHR (148) AND oprstep.t_IsExecute = CHR (82) AND t.t_PropStatus <> 4000 "
          + "\n                    AND pmpaym.t_Department = 1 AND t.t_TransferDate = :d3 AND t.t_PayFIID = 0 "
          + "\n                    AND t.t_Corschem = 1 AND NOT EXISTS "
          + "\n                                               (SELECT  1 "
          + "\n                                                  FROM  dpmlink_dbt link "
          + "\n                                                 WHERE      link.t_PurposePayment = pmpaym.t_PaymentID "
          + "\n                                                        AND link.t_LinkKind = 9)) "
          + "\n               AND NOT EXISTS "
          + "\n                     (SELECT  1 "
          + "\n                        FROM  dobjatcor_dbt "
          + "\n                       WHERE      t_objecttype = 501 AND t_groupid = 1016 AND t_attrid = 7 "
          + "\n                              AND t_object = LPAD (pmpaym.t_paymentid, 10, CHR (48))) "
          + "\n               AND NOT EXISTS (SELECT   1 "
          + "\n                                 FROM   USR_ROBOT_PAYMENT_TMP "
          + "\n                                WHERE   paymid = pmpaym.t_paymentid) "
          + "\n               AND ROWNUM <= :d4 "
          + "\n   )";
      var parm = makeArray (SQLParam ("d1", {Curdate}), SQLParam ("d2", {Curdate}), SQLParam ("d3", {Curdate}), SQLParam ("d4", get_setting_value("LIMIT_PACKAGE_COUNT")));
      sql = execSql(sql, parm);

      sql = execSqlSelect("select paymid, amount, reqid, paymkind from USR_ROBOT_PAYMENT_TMP where ismanual = CHR(0) order by paymkind desc"); //·‡ÆÁ≠Î• ¢ Ø•‡¢„Ó ÆÁ•‡•§Ï

      //ëÆ°®‡†•¨ ·‚†‚®·‚®™„:
      getAllStat();

      needCheck3 = True;
      while (sql.moveNext)
         //‚„‚ ≠†Á®≠†•‚·Ô ¶†‡†

         // è‡•§¢†‡®‚•´Ï≠†Ô ¢Î£‡„ß™†
         Check1(sql.value("paymid"));
         // è‡Æ¢•‡™† ≠† §„°´Ï
         Check2(sql.value("paymid"));
         // è‡Æ¢•‡™† ≠† ß†§¢Æ•≠≠Æ·‚Ï
         Check3(sql.value("paymid"));
         // è‡Æ¢•‡™† "≠•Á•‚™®© ØÆ®·™"
         Check4(sql.value("paymid"));

         if ((getCtgValue(sql.value("paymid"), PT_USR_CAT_CHECK_STATE/*1017*/,{Curdate}) == 4/*ç•Á•‚™®© ØÆ®·™*/) 
             and (getCtgValue(sql.value("paymid"), PT_USR_CAT_CHECK_BEFORE_UNLOAD/*1016*/,{Curdate}) != 7/*ê„Á≠†Ô Æ°‡†°Æ‚™†*/))
                if (not setCtgVal(sql.value("paymid"), PT_USR_CAT_CHECK_BEFORE_UNLOAD/*1016*/, 6/*äÆ≠‚‡Æ´Ï Ø‡Æ©§•≠*/, {curdate})) end;
         end;

         if ( (getCtgValue(sql.value("paymid"), PT_USR_CAT_CHECK_BEFORE_UNLOAD/*1016*/,{Curdate}) == 6/*äÆ≠‚‡Æ´Ï Ø‡Æ©§•≠*/) 
              and (sql.value("reqid") == "") )
            //Ø‡®ß≠†™ Ø‡ÆÂÆ¶§•≠®Ô §Æ™„¨•≠‚† ¢·•Â Ø‡Æ¢•‡Æ™
            SetChecked(sql.value("paymid"));
         end;
         //ëÆ°®‡†•¨ ·‚†‚®·‚®™„:
         getAllStat();
      end;

      //•·´® ¢ USR_ROBOT_PAYMENT_TMP ØÆ·´• SEND_REQUEST_FROM_MBR_ROBOT Æ·‚†´®·Ï ß†Ø®·®
      sql = execSqlSelect("select paymid, reqid from USR_ROBOT_PAYMENT_TMP where reqid != CHR(1) and notanswered != CHR(88)");
      while (sql.movenext())
         _sql = execSqlSelect("select t_errorcode err, xmltype (t_message).EXTRACT ('/').getstringval () msg "
                              "  from dxr_log_dbt where t_reqid = :reqid and t_kind = 3",
                              makeArray (SQLParam ("reqid", sql.value("reqid"))));
         if (_sql.movenext())
            if (_sql.value("err") == 0)
               execsql("delete from USR_ROBOT_PAYMENT_TMP where paymid = :id AND ismanual = CHR(0) AND checked = CHR(88)", 
                       makeArray (SQLParam ("id", sql.value("paymid"))));
               //ëÆ°®‡†•¨ ·‚†‚®·‚®™„:
               getAllStat();
            else
               //ÆË®°™† ¢ dxr_log_dbt.t_message
               if (Agent_Send_Letter(5, get_setting_value("ADMIN_ADRES_MAIL"), sql.value("paymid"), _sql.value("msg"))) end;
            end;
         end;
      end;
      //ëÆ°®‡†•¨ ·‚†‚®·‚®™„:
      getAllStat();

      sql = execSqlSelect("select paymid, paymkind, reqid, notanswered from USR_ROBOT_PAYMENT_TMP where reqid != CHR(1) and notanswered = CHR(88)");
      while(sql.movenext())
         //•·´® Æ‚¢•‚ Æ‚ íä ≠• ØÆ´„Á®´® - /*Ø´†‚•¶® Æ‚Ø‡†¢´Ô•¨ ≠† ‡„Á≠„Ó Æ°‡†°Æ‚™„*/ ® Ë´•¨ „¢•§Æ¨´•≠®• ¢ ãÆ‚„· ØÆ ·‡ÆÁ≠Î¨
         if (sql.value("paymkind") == StrFor(145)/*"ë"-·‡ÆÁ≠Î©*/)
            if (Agent_Send_Letter(2, get_setting_value("ADRES_MAIL"), sql.value("paymid"))) end;
         end;
         //if (not setCtgVal(sql.value("paymid"), PT_USR_CAT_CHECK_BEFORE_UNLOAD, 7/*ê„Á≠†Ô Æ°‡†°Æ‚™†*/, {curdate})) end;
         DelFromTMP(sql.value("paymid"));
         //ëÆ°®‡†•¨ ·‚†‚®·‚®™„:
         getAllStat();
      end;
      //ëÆ°®‡†•¨ ·‚†‚®·‚®™„:
      getAllStat();

      testEvent( 1000 );
      execsql("delete from USR_ROBOT_PAYMENT_TMP where reqid != CHR(1) AND ismanual = CHR(0) AND checked = CHR(88) AND notanswered = CHR(0)");
      //ëÆ°®‡†•¨ ·‚†‚®·‚®™„:
      getAllStat();

   onError(er)
      //Æ‚Ø‡†¢™† ¢ ãÆ‚„· ·ÆÆ°È•≠®Ô Æ° ÆË®°™•
      if (Agent_Send_Letter(6, get_setting_value("ADMIN_ADRES_MAIL"), null, string("å†™‡Æ·: ", er.module, ", c‚‡Æ™†: ", er.line, ", ÆË®°™†: ", er.message))) end;
   end;

   macro onFramedKeyPressed( RsbEvent:object )     
       if ( rsbEvent.KeyCode == KEY_F2 )
           msgBox("êÆ°Æ‚ ß†Ø„È•≠");
           var intPay     = get_setting_value("INTERVAL_PAYMENT");
           var intSendMes = get_setting_value("INTERVAL_SEND_MESS");
           var _hh, _mi;
           UsrTimeSplit(intSendMes,_hh,_mi);
           var sendtime = time() + time(_hh,_mi,0);
           while(1)
               var flag = true;
               var time1 = time();
               var FinalCollect = True;
               oCurrentState.value = "é¶®§†≠®•";
               UsrTimeSplit(intPay,_hh,_mi);
               oNextStart.value = time() + time(_hh,_mi,0);
               //·Á•‚Á®™® §´Ô ØÆ§·Á•‚† ·‚†‚®·‚®™® (§®¨†≠®™®)
               //dyn_norm = dyn_rush = dyn_norm_manual = dyn_rush_manual = 0;
               //NeedGetDynStat = True;
               //ëÆ°®‡†•¨ ·‚†‚®·‚®™„:
               getAllStat();
               if (time() >= time(get_setting_value("END_OF_WORK")))
                  oCurrentState.value = "é·‚†≠Æ¢´•≠";
                  oNextStart.value = time(0,0,0);
                  exit();
               end;
               while (flag)
                   var time2 = time();
                   UsrTimeSplit(intPay,_hh,_mi);
                   message(string("F8 - é·‚†≠Æ¢™†, é¶®§†≠®•:",(time(_hh,_mi,0,0) - (time2 - time1))));
                   var key = testevent(10);

                   //¢ ‡•¶®¨• Æ¶®§†≠®Ô Ø‡Æ§Æ´¶†•¨ ·Æ°®‡†‚Ï ·‚†‚®·‚®™„
                   var tmp_exists = execSqlselect("select 1 from USR_ROBOT_PAYMENT_TMP where CHECKED = CHR(88)");
                   if (tmp_exists.movenext())
                      //ëÆ°®‡†•¨ ·‚†‚®·‚®™„:
                      getAllStat();
                   elif (FinalCollect)
                      //ëÆ°®‡†•¨ ·‚†‚®·‚®™„:
                      getAllStat();
                      FinalCollect = False;
                   end;
                   
                   UsrTimeSplit(intPay,_hh,_mi);
                   if ((time2 - time1) >= time(_hh,_mi,0))
                       oCurrentState.value = "Ä™‚®¢•≠";
                       message("à§•‚ Æ°‡†°Æ‚™† §Æ™„¨•≠‚Æ¢, ¶§®‚• ...");
                       if (time() >= sendtime)
                          if (Agent_Send_Letter(1, get_setting_value("ADRES_MAIL"))) end;
                          UsrTimeSplit(intSendMes,_hh,_mi);
                          sendtime = time() + time(_hh,_mi,0);
                       end;
                       oCurrentStart.value = time();
                       oNextStart.value = time(0,0,0);
                       debugbreak;
 	                GetPaym();
                       flag = false;
                   end;
                   if(key == 322)
                       msgBox("êÆ°Æ‚ Æ·‚†≠Æ¢´•≠");
                       oCurrentState.value = "é·‚†≠Æ¢´•≠";
                       message(mes);
                       exit();
                   end;     
               end;
           end;      
       elif ( rsbEvent.KeyCode == KEY_F7 )
           viewScrollSettings();
       elif ( rsbEvent.KeyCode == KEY_F11 )
           viewScrollFilterSettings();
       elif ( rsbEvent.KeyCode == KEY_F6 )
           clearQueue();
       end;      
   end;
end;

var panel = TMainForm;
    panel.setPosition(15, 5);
    panel.run;
    exit(1);








