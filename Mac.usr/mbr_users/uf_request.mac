//--------------------------------------------------------------------------
// @filename: uf_request.mac
// @desc    : создать сообщение ЕД 243
// @author  : 2013-08-14 C-21844-6 Гурин С.
// @changes : 2013-10-08 R-262148-2 Гурин С.Изменения в соответствии 
//                   с письмом ЦБ от 02.10.2013г для банка '046577001' 
//            2014-11-21 I-00533698 Teleshova Некорректное формирование тэга EDDefineRequestInfo: два таких быть не может
//--------------------------------------------------------------------------
import OraLib, LikePy;
import uf_common, lib_registry, lib_types, lib_fg;

/* номера справочников кодов */
private const UF_REF_TYPE_ANSWER  = 10001; // (пользовательский) ED244
private const UF_REF_TYPE_REQUEST = 10000; // (пользовательский) ED243

private const UF_REF_TYPE_TAX        = 1800;  // (дистрибутив) статус составителя налогового платежа
private const UF_REF_TYPE_TAX_GROUND = 1801;  // (дистрибутив) основание налогового платежа
private const UF_REF_TYPE_TAX_TYPE   = 1802;  // (дистрибутив) тип налогового платежа

private class UF_KeyValue (_key, _value)
   var key   = _key;
   var value = _value;
end;


/* @desc: поля платежа */
private class TPaymentFields ()
    var field60  = 0; // ИНН плательщика                         (поле 60) 
    var field61  = 0; // ИНН получателя                          (поле 61) 
    var field101 = 0; // Статус составителя расчетного документа (поле 101)
    var field102 = 0; // КПП плательщика                         (поле 102)
    var field103 = 0; // КПП получателя                          (поле 103)
    var field104 = 0; // Код бюджетной классификации             (поле 104)
    var field105 = 0; // Код ОКАТО                               (поле 105)
    var field106 = 0; // Основание налогового платежа            (поле 106)
    var field107 = 0; // Налоговый период                        (поле 107)
    var field108 = 0; // Номер налогового документа              (поле 108)
    var field109 = 0; // Дата налогового документа               (поле 109)
    var field110 = 0; // Тип налогового платежа                  (поле 110)
    
    const IS_SET_VALUE = 1; /* значение задано */
end;                

// @desc: класс-описатель полей панели (пригодится для анализа на предмет изменений перед сохранением)
private class TDialogFields (d)
   var OriginalEPD_EdNo            = d.rec.OriginalEPD_EdNo;          
   var OriginalEPD_EdDate          = d.rec.OriginalEPD_EdDate;
   var OriginalEPD_EDAuthor        = d.rec.OriginalEPD_EDAuthor;
   var EdDefineRequestCode         = d.rec.EdDefineRequestCode;
   var EdDefineRequestDescr        = d.rec.EdDefineRequestDescr;
   var PayerINN                    = d.rec.PayerINN;
   var PayerKPP                    = d.rec.PayerKPP;
   var PayeeINN                    = d.rec.PayeeINN;
   var PayeeKPP                    = d.rec.PayeeKPP;
   var PayerAcc                    = d.rec.PayerAcc;
   var PayeeAcc                    = d.rec.PayeeAcc;
   var PayerName                   = d.rec.PayerName;
   var PayeeName                   = d.rec.PayeeName;
   var Address                     = d.rec.Address;
   var DrawerStatus                = d.rec.DrawerStatus;
   var TaxPaytKind                 = d.rec.TaxPaytKind;
   var CBC                         = d.rec.CBC;
   var OKATO                       = d.rec.OKATO;
   var AccDocNo                    = d.rec.AccDocNo;
   var PaytReason                  = d.rec.PaytReason;
   var AccDocDate                  = d.rec.AccDocDate;
   var TaxPeriod                   = d.rec.TaxPeriod;
   var Sum                         = d.rec.Sum;
   var DocNo                       = d.rec.DocNo;
   var DocDate                     = d.rec.DocDate;
   var Purpose                     = d.rec.Purpose;                   
   var EDDefineRequestText         = d.rec.EDDefineRequestText;                   
   var PayeeCorrAcc                = d.rec.PayeeCorrAcc;                   
   var PayeeBIC                    = d.rec.PayeeBIC;                   
end;    

// @desc  : сравнивает поля классов src и dest.
// @return: true (всё одинаково), false (что-то отличается)
private macro CompareDialogFields (src:TDialogFields, dest:TDialogFields)
 return (    
             (src.OriginalEPD_EdNo       == dest.OriginalEPD_EdNo     )
         and (src.OriginalEPD_EdDate     == dest.OriginalEPD_EdDate   )
         and (src.OriginalEPD_EDAuthor   == dest.OriginalEPD_EDAuthor )
         and (src.EdDefineRequestCode    == dest.EdDefineRequestCode  )
         and (src.EdDefineRequestDescr   == dest.EdDefineRequestDescr )
         and (src.PayerINN               == dest.PayerINN )
         and (src.PayerKPP               == dest.PayerKPP )
         and (src.PayeeINN               == dest.PayeeINN )
         and (src.PayeeKPP               == dest.PayeeKPP )
         and (src.PayerAcc               == dest.PayerAcc )
         and (src.PayeeAcc               == dest.PayeeAcc )
         and (src.PayerName              == dest.PayerName )
         and (src.PayeeName              == dest.PayeeName )
         and (src.Address                == dest.Address       )
         and (src.DrawerStatus           == dest.DrawerStatus  )
         and (src.TaxPaytKind            == dest.TaxPaytKind  )
         and (src.CBC                    == dest.CBC      )
         and (src.OKATO                  == dest.OKATO    )
         and (src.AccDocNo               == dest.AccDocNo )
         and (src.PaytReason             == dest.PaytReason )
         and (src.AccDocDate             == dest.AccDocDate )
         and (src.TaxPeriod              == dest.TaxPeriod  )
         and (src.Sum                    == dest.Sum   )
         and (src.DocNo                  == dest.DocNo )
         and (src.DocDate                == dest.DocDate )
         and (src.Purpose                == dest.Purpose )
         and (src.EDDefineRequestText    == dest.EDDefineRequestText )
         and (src.PayeeCorrAcc           == dest.PayeeCorrAcc )
         and (src.PayeeBIC               == dest.PayeeBIC )
        );
end; 

// @desc: класс справочника видов запросов/ответов
private class UF_CodeReference (_type:integer, _reqcode)
    var row = null;
    
    // @desc: обработчик событий скроллинга
    macro HandleScroll ( rs, cmd, id, key )
        var ret = CM_DEFAULT;
        if (cmd == DLG_KEY)
            if (key == 13) // Enter
                row = UF_KeyValue (rs.value ("t_code", null, V_STRING), rs.value ("t_name", null, V_STRING)); // пара key-value
                ret = CM_SELECT;
            end;
        end;
        return ret;
    end;
    
    // @desc: конструктор
    macro GetScroll (_type:integer, _reqcode)
        if (isNull(_reqcode)) _reqcode = ""; end;
        var sql = "select t_code, t_name, t_note from dllvalues_dbt where t_list = :m_list";

        if   (_reqcode == "10") sql = sql + " and t_code in (13,14,15,99)"; 
        elif (_reqcode == "11") sql = sql + " and t_code in (09,10,99)";
        elif (_reqcode == "99") sql = sql + " and t_code in (99)";
        end;

        var col = MakeArray ("t_code", "Код"                 ,  3,  0, -1, 0,
                             "t_name", "Вид запроса (ответа)", 40,  0, -1, 0);
        var cmd = RsdCommand (sql);
        cmd.addParam("m_list", RSDBP_IN, _type, V_INTEGER);

        var rs = RsdRecordSet (cmd, RSDVAL_CLIENT, RSDVAL_STATIC);
        RunScroll (rs, col.size/6, col, null, r2m(this, "HandleScroll"));
    end;
    
    /* явная инициализация сразу же при создании объекта */
    GetScroll (_type, _reqcode);
end;

// @desc: класс проверки кода ответа 2013-07-27 Gurin S. C-21105-6
private class UF_CompareCodeAnswer (_id)
    macro GetCode (_id)
        var sql = " SELECT   listagg (init_eddefinerequestcode, ', ') "
                  "             WITHIN GROUP (ORDER BY paymentid) "
                  "             OVER (PARTITION BY paymentid) "
                  "             AS ans_code  "
                  "   FROM   USR_UF_VIEW_243 "
                  "  WHERE   fname != '-' and paymentid = :m_id ";
        var rs:RsdRecordset = execSQLselect(sql, makeArray (SqlParam ("m_id", _id)));

        while (rs and rs.movenext())
            return rs.value("ans_code");
        end;

        return "";
    end;
end;

class (TRecHandler) UF_Request()
    var fname = "";                              // имя файла запроса
    var rs_global = null;                        // DataSet для инициализации панели ввода ответа
    var pf :TPaymentFields = TPaymentFields ();  // описатель налоговых полей документа
    var old_data:TDialogFields;                  // старые данные панели (до редактирования)
    var new_data:TDialogFields;                  // новые данные панели (после редактирования)
    var p       :EDParams     = EDParams (); 
    
    macro UF_Hlp_GetAnswerCodeByRequest (req)
        var retVal = req;
        if (req == "01") retVal = "02"; end;
        return retVal;
    end;      

    macro RPAD_MFO() 
        const StrSize = 10;  
        var StrName = SUBSTR({MFO_Bank},3) + mkstr( "0", StrSize - strlen(SUBSTR({MFO_Bank},3)) );
        return StrName;
    end;
    
    macro UF_HLP_GetXMLData (dlg, _cond)
        var ret = "";
        var self:EDIdentity =  EDIdentity (); // идентифицируем себя :)
        if (_cond == null) _cond = True; end;
       
        // основная "болванка" XML ED243 
        // сорри, что не на MS XML Parser, потому что в гробу я видал его тормоза
        // <ED244 xmlns="urn:cbr-ru:ed:v2.0" EDAuthor="4585161000" EDDate="2012-08-01" EDDefineAnswerCode="05" EDDefineRequestCode="00" EDNo="1174">
        // ret = ret + "<?xml version=\"1.0\" encoding=\"windows-1251\" ?>"               + "\n";
        ret = ret + "<ED243 xmlns=\"urn:cbr-ru:ed:v2.0\" "                             + "\n";
        ret = ret + "       EDAuthor=\"$EDAuthor$\" "                                  + "\n";
        //new ufebs
        ret = ret + "       EDReceiver=\"$EDReceiver$\" "                              + "\n";
        
        ret = ret + "       EDDate=\"$EDDate$\" "                                      + "\n";
        
        
        ret = ret + "       EDDefineRequestCode=\"$EDDefineRequestCode$\" "            + "\n";
        ret = ret + "       EDNo=\"$EDNo$\">"                                          + "\n";
        
        ret = ret + "    <OriginalEPD EDAuthor=\"$OriginalEPD_EDAuthor$\" "            + "\n";
        ret = ret + "                 EDDate=\"$OriginalEPD_EDDate$\" "                + "\n";
        ret = ret + "                 EDNo=\"$OriginalEPD_EDNo$\"/>"                   + "\n";


        ret = ret + "    <EDDefineRequestInfo "                                        + "\n";

        ret = ret + "                           AccDocDate=\"$AccDocDate$\" "          + "\n";
        ret = ret + "                           AccDocNo=\"$AccDocNo$\" "              + "\n";
        ret = ret + "                           Sum=\"$Sum$\" "                        + "\n";
        ret = ret + "                           PayerAcc=\"$PayerAcc$\" "              + "\n";

        ret = ret + "                             >"                                   + "\n";
        ret = ret + "        <PayerName>$EDPayerName$</PayerName>"                     + "\n";

        if ((dlg.("EDDefineRequestCode") == REQ_RETURN_TRANSF_AMOUNT) or (dlg.("EDDefineRequestCode") == REQ_INFORM_PAYEE_ABOUT_CASH))
            ret = ret + "        <PayeeName>$EDPayeeName$</PayeeName>"                 + "\n";
        end;

        if ((dlg.("EDDefineRequestCode") == REQ_RETURN_TRANSF_AMOUNT) or (dlg.("EDDefineRequestCode") == REQ_TO_USE_OTHER_CODES))
            ret = ret + " <EDDefineRequestText>$EDDefineRequestText$</EDDefineRequestText>"  + "\n";
        end;

        if (dlg.("EDDefineRequestCode") == REQ_NEED_INFO_BY_MASK)
            if (trim (dlg.rec.PayerINN) == "X")
                ret = ret + " <EDFieldList> "                                              + "\n";
                ret = ret + " <FieldNo>60</FieldNo> "                                      + "\n";
                ret = ret + " </EDFieldList> "                                             + "\n";
            end;

            if (trim (dlg.rec.PayeeINN) == "X")
                ret = ret + " <EDFieldList> "                                              + "\n";
                ret = ret + " <FieldNo>61</FieldNo> "                                      + "\n";
                ret = ret + " </EDFieldList> "                                             + "\n";
            end;

            if (trim (dlg.rec.DrawerStatus) == "X")
                ret = ret + " <EDFieldList> "                                              + "\n";
                ret = ret + " <FieldNo>101</FieldNo> "                                     + "\n";
                ret = ret + " </EDFieldList> "                                             + "\n";
            end;

            if (trim (dlg.rec.PayerKPP) == "X")
                ret = ret + " <EDFieldList> "                                              + "\n";
                ret = ret + " <FieldNo>102</FieldNo> "                                     + "\n";
                ret = ret + " </EDFieldList> "                                             + "\n";
            end;

            if (trim (dlg.rec.PayeeKPP) == "X")
                ret = ret + " <EDFieldList> "                                              + "\n";
                ret = ret + " <FieldNo>103</FieldNo> "                                     + "\n";
                ret = ret + " </EDFieldList> "                                             + "\n";
            end;

            if (trim (dlg.rec.CBC) == "X")
                ret = ret + " <EDFieldList> "                                              + "\n";
                ret = ret + " <FieldNo>104</FieldNo> "                                     + "\n";
                ret = ret + " </EDFieldList> "                                             + "\n";
            end;

            if (trim (dlg.rec.OKATO) == "X")
                ret = ret + " <EDFieldList> "                                              + "\n";
                ret = ret + " <FieldNo>105</FieldNo> "                                     + "\n";
                ret = ret + " </EDFieldList> "                                             + "\n";
            end;

            if (trim (dlg.rec.PaytReason) == "X")
                ret = ret + " <EDFieldList> "                                              + "\n";
                ret = ret + " <FieldNo>106</FieldNo> "                                     + "\n";
                ret = ret + " </EDFieldList> "                                             + "\n";
            end;

            if (trim (dlg.rec.TaxPeriod) == "X")
                ret = ret + " <EDFieldList> "                                              + "\n";
                ret = ret + " <FieldNo>107</FieldNo> "                                     + "\n";
                ret = ret + " </EDFieldList> "                                             + "\n";
            end;

            if (trim (dlg.rec.DocNo) == "X")
                ret = ret + " <EDFieldList> "                                              + "\n";
                ret = ret + " <FieldNo>108</FieldNo> "                                     + "\n";
                ret = ret + " </EDFieldList> "                                             + "\n";
            end;

            if (trim (dlg.rec.DocDate) == "X")
                ret = ret + " <EDFieldList> "                                              + "\n";
                ret = ret + " <FieldNo>109</FieldNo> "                                     + "\n";
                ret = ret + " </EDFieldList> "                                             + "\n";
            end;

            if (trim (dlg.rec.TaxPaytKind) == "X")
                ret = ret + " <EDFieldList> "                                              + "\n";
                ret = ret + " <FieldNo>110</FieldNo> "                                     + "\n";
                ret = ret + " </EDFieldList> "                                             + "\n";
            end;
        end;
        //TAM 21.11.2014 I-00533698
        ret = ret + "    </EDDefineRequestInfo>"                                           + "\n";
        ret = ret + "</ED243>";

        DebugBreak ();
        /* заполняем данные по оригинальному платежу, реквизиты которого мы должны уточнить */
        ret = strSubst (ret, "$OriginalEPD_EDNo$"    , trim (dlg.("OriginalEPD_EDNo"    )));
        ret = strSubst (ret, "$OriginalEPD_EDDate$"  , UF_DateYYYYMMDD (dlg.("OriginalEPD_EDDate"  )));
        ret = strSubst (ret, "$OriginalEPD_EDAuthor$", dlg.("OriginalEPD_EDAuthor"));
        
        ret = strSubst (ret, "$EDNo$",       self.EdNo);
        ret = strSubst (ret, "$EDDate$",     self.EDDate);
        ret = strSubst (ret, "$EDAuthor$",   self.EDAuthor);

        if ((dlg.("EDDefineRequestCode") == REQ_RETURN_TRANSF_AMOUNT) or (dlg.("EDDefineRequestCode") == REQ_INFORM_PAYEE_ABOUT_CASH)
              or ((dlg.("EDDefineRequestCode") == REQ_TO_USE_OTHER_CODES) and (dlg.rs_global.value("direct")=="X" ))) 
            ret = strSubst (ret, "$EDReceiver$", dlg.rs_global.value("init_EDAuthor"  ));
        else
            ret = strSubst (ret, "$EDReceiver$", this.("OriginalEPD_EdAuthor"));
        end;

        ret = strSubst (ret, "$EDDefineRequestCode$", dlg.("EDDefineRequestCode")); 
        ret = strSubst (ret, "$AccDocDate$",  UF_DateYYYYMMDD (dlg.("AccDocDate")));
        ret = strSubst (ret, "$AccDocNo$",    string(int(trim (dlg.("AccDocNo")))));
        ret = strSubst (ret, "$Sum$",         substr( string (double(dlg.("Sum")) * 100),1,strlen( string (double(dlg.("Sum")) * 100))-5)); 
        ret = strSubst (ret, "$PayerAcc$",    trim (dlg.("PayerAcc")));
        //Gurin S. 18.04.2014 I-00481340-3 --"PayerName"
        private var tmpname = strsubst(dlg.("PayerName"),"<","\"");
        tmpname = strsubst(tmpname,">","\"");
        ret = strSubst (ret, "$EDPayerName$",  trim (tmpname));
        ret = strSubst (ret, "$EDPayeeName$",  trim (dlg.("PayeeName")));
        ret = strSubst (ret, "$EDDefineRequestText$",       trim (dlg.("EDDefineRequestText")));
        return ret;
    end;
    
    
    // сохранение данных XML ED243 в usr_uf_container.xmldata 
    macro UF_Hlp_SaveXML243 (dlg)
        var sql, parm;
        //Gurin S. 18.08.2014 R-433313-2
        var xmldata = UF_StrSubSt(UF_HLP_GetXMLData (dlg));
        p.readEDParams();
        sql = " INSERT INTO USR_UF_CONTAINER (FNAME, XMLDATA, IS_PAYMENT_FOUND, PAYMENTID, IS_OUR_243) " +
              "              VALUES   (:fname, :xmldata, chr(88), :id, chr(88)); ";
        
        parm = makeArray (SQLParam ("fname"         ,rs_global.value ("fname")), 
                          SQLParam ("xmldata"       ,xmldata), 
                          SQLParam ("id"            ,rs_global.value ("id"))
                          );
        if (not execSQL (sql, parm))
            msgbox ("Не удалось записать в БД XML-ответ ED244");
        else
            msgbox("Cформирован запрос ", rs_global.value ("fname"));
        end;
    end;
    
    // блокируем ненужные поля
    macro UF_Hlp_DisableFields (dlg)
        // да, нам придется перебирать все поля панели в DisableFields, потому что после
        // DisableFields (dlg) у нас потом не отработает EnableFields.
        DisableFields (dlg, FldIndex ("EdDefineRequestDescr"));
        DisableFields (dlg, FldIndex ("AccDocNo"));
        DisableFields (dlg, FldIndex ("AccDocDate"));
        DisableFields (dlg, FldIndex ("DrawerStatus"));
        DisableFields (dlg, FldIndex ("PayerINN"));
        DisableFields (dlg, FldIndex ("PayerKPP"));
        DisableFields (dlg, FldIndex ("PayerName"));
        DisableFields (dlg, FldIndex ("PayeeINN"));
        DisableFields (dlg, FldIndex ("PayeeKPP"));
        DisableFields (dlg, FldIndex ("PayeeName"));
        DisableFields (dlg, FldIndex ("Address"));
        DisableFields (dlg, FldIndex ("Sum"));
        DisableFields (dlg, FldIndex ("Purpose"));
        DisableFields (dlg, FldIndex ("PayerAcc"));
        DisableFields (dlg, FldIndex ("PayeeAcc"));
        DisableFields (dlg, FldIndex ("CBC"));
        DisableFields (dlg, FldIndex ("OKATO"));
        DisableFields (dlg, FldIndex ("PaytReason"));
        DisableFields (dlg, FldIndex ("TaxPeriod"));
        DisableFields (dlg, FldIndex ("DocNo"));
        DisableFields (dlg, FldIndex ("DocDate"));
        DisableFields (dlg, FldIndex ("TaxPaytKind"));
        DisableFields (dlg, FldIndex ("OriginalEPD_EdNo"));
        DisableFields (dlg, FldIndex ("OriginalEPD_EdDate"));
        DisableFields (dlg, FldIndex ("OriginalEPD_EdAuthor"));
        DisableFields (dlg, FldIndex ("EDDefineRequestText"));
        DisableFields (dlg, FldIndex ("PayeeCorrAcc"));
        DisableFields (dlg, FldIndex ("PayeeBIC"));
        UpdateFields (dlg);
    end;

    macro UF_Hlp_EnableFieldsByCode (dlg)
        if   (dlg.("EdDefineRequestCode") == "01")
            EnableFields (dlg, FldIndex ("AccDocNo"));
            EnableFields (dlg, FldIndex ("AccDocDate"));
            EnableFields (dlg, FldIndex ("PayerName"));
            EnableFields (dlg, FldIndex ("PayeeName"));
            EnableFields (dlg, FldIndex ("Sum"));
            EnableFields (dlg, FldIndex ("PayerAcc"));
            EnableFields (dlg, FldIndex ("PayeeAcc"));
    
        elif (dlg.("EdDefineRequestCode") == "02")
            EnableFields (dlg, FldIndex ("PayeeName"));
            EnableFields (dlg, FldIndex ("PayeeAcc"));

        elif (dlg.("EdDefineRequestCode") == "03")
            // хз, нет в ТЗ
            
        elif (dlg.("EdDefineRequestCode") == "04")
            EnableFields (dlg, FldIndex ("PayerName"));
        
        elif (dlg.("EdDefineRequestCode") == "05")
            EnableFields (dlg, FldIndex ("PayeeName"));
            
        elif (dlg.("EdDefineRequestCode") == "06")
            EnableFields (dlg, FldIndex ("PayerINN"));
            EnableFields (dlg, FldIndex ("Address"));
            
        elif (dlg.("EdDefineRequestCode") == "07")
            EnableFields (dlg, FldIndex ("Purpose"));
            
        elif (dlg.("EdDefineRequestCode") == "08")
            var sql = "select field60, field61, field101, field102, field103, field104, field105, field106, "
                    + " field107, field108, field109, field110 from usr_uf_view_243 where fname = :f"
                    + "   and or_edauthor = :EDAuthor " 
                    + "   and or_eddate   = :EDDate " 
                    + "   and or_edno     = :EDNo ";
                    
            sql = execSQLSelect (sql, makeArray (SQLParam ("f"            ,rs_global.value ("fname"                )),
                                                 SQLParam ("EDAuthor"     ,rs_global.value ("Or_EDAuthor" )),
                                                 SQLParam ("EDDate"       ,rs_global.value ("Or_EDDate", null, V_DATE   )),
                                                 SQLParam ("EDNo"         ,rs_global.value ("Or_EDNo"     ))));
            
            /* если удается прочитать данные запроса ED243, разблокируем только определенные поля*/
            DebugBreak ();
            if (sql.moveNext ())
                if (sql.value ("field60" , null, V_INTEGER) == 1) EnableFields (dlg, FldIndex ("PayerINN"));           end;
                if (sql.value ("field61" , null, V_INTEGER) == 1) EnableFields (dlg, FldIndex ("PayeeINN"));           end;
                if (sql.value ("field101", null, V_INTEGER) == 1) EnableFields (dlg, FldIndex ("DrawerStatus"));       end;
                if (sql.value ("field102", null, V_INTEGER) == 1) EnableFields (dlg, FldIndex ("PayerKPP"));           end;
                if (sql.value ("field103", null, V_INTEGER) == 1) EnableFields (dlg, FldIndex ("PayeeKPP"));           end;
                if (sql.value ("field104", null, V_INTEGER) == 1) EnableFields (dlg, FldIndex ("CBC"));                end;
                if (sql.value ("field105", null, V_INTEGER) == 1) EnableFields (dlg, FldIndex ("OKATO"));              end;
                if (sql.value ("field106", null, V_INTEGER) == 1) EnableFields (dlg, FldIndex ("PaytReason"));         end;
                if (sql.value ("field107", null, V_INTEGER) == 1) EnableFields (dlg, FldIndex ("TaxPeriod"));          end;
                if (sql.value ("field108", null, V_INTEGER) == 1) EnableFields (dlg, FldIndex ("DocNo"));              end;
                if (sql.value ("field109", null, V_INTEGER) == 1) EnableFields (dlg, FldIndex ("DocDate"));            end;
                if (sql.value ("field110", null, V_INTEGER) == 1) EnableFields (dlg, FldIndex ("TaxPaytKind"));        end;
                
                /* заполняем информацию TPaymentFields для дальнейшего разбора при сохранении ED244 с кодом ответа 08*/
                this.pf.field60  = sql.value ("field60" , null, V_INTEGER);
                this.pf.field61  = sql.value ("field61" , null, V_INTEGER);
                this.pf.field101 = sql.value ("field101", null, V_INTEGER);
                this.pf.field102 = sql.value ("field102", null, V_INTEGER);
                this.pf.field103 = sql.value ("field103", null, V_INTEGER);
                this.pf.field104 = sql.value ("field104", null, V_INTEGER);
                this.pf.field105 = sql.value ("field105", null, V_INTEGER);
                this.pf.field106 = sql.value ("field106", null, V_INTEGER);
                this.pf.field107 = sql.value ("field107", null, V_INTEGER);
                this.pf.field108 = sql.value ("field108", null, V_INTEGER);
                this.pf.field109 = sql.value ("field109", null, V_INTEGER);
                this.pf.field110 = sql.value ("field110", null, V_INTEGER);
            
            /* если не удается прочитать данные запроса ED243, разблокируем все поля*/
            else
                EnableFields (dlg, FldIndex ("PayerINN"));           // Field60    ИНН плательщика                         (поле 60)  
                EnableFields (dlg, FldIndex ("PayeeINN"));           // Field61    ИНН получателя                          (поле 61)  
                EnableFields (dlg, FldIndex ("DrawerStatus"));       // Field101   Статус составителя расчетного документа (поле 101) 
                EnableFields (dlg, FldIndex ("PayerKPP"));           // Field102   КПП плательщика                         (поле 102) 
                EnableFields (dlg, FldIndex ("PayeeKPP"));           // Field103   КПП получателя                          (поле 103) 
                EnableFields (dlg, FldIndex ("CBC"));                // Field104   Код бюджетной классификации             (поле 104) 
                EnableFields (dlg, FldIndex ("OKATO"));              // Field105   Код ОКАТО                               (поле 105) 
                EnableFields (dlg, FldIndex ("PaytReason"));         // Field106   Основание налогового платежа            (поле 106) 
                EnableFields (dlg, FldIndex ("TaxPeriod"));          // Field107   Налоговый период                        (поле 107) 
                EnableFields (dlg, FldIndex ("DocNo"));              // Field108   Номер налогового документа              (поле 108) 
                EnableFields (dlg, FldIndex ("DocDate"));            // Field109   Дата налогового документа               (поле 109) 
                EnableFields (dlg, FldIndex ("TaxPaytKind"));        // Field110   Тип налогового платежа                  (поле 110) 
            end;
        elif (dlg.("EdDefineRequestCode") == "09")
            EnableFields (dlg, FldIndex ("Sum"));
        elif (dlg.("EdDefineRequestCode") == "10")
            EnableFields (dlg, FldIndex ("EDDefineRequestText"));
        elif (dlg.("EdDefineRequestCode") == "11")
            EnableFields (dlg, FldIndex ("PayerName"));
            EnableFields (dlg, FldIndex ("PayeeName"));
        elif (dlg.("EdDefineRequestCode") == "99")
            EnableFields (dlg, FldIndex ("EDDefineRequestText"));
        end;
        
        UpdateFields (dlg);
    end;

    macro UF_Hlp_GetDescriptionByCode (ref, code)
        var ret = "";
        var sql = "select t_code, t_name, t_note from dllvalues_dbt where t_list = :m_list and t_code = :m_code";
        
        var cmd = RsdCommand (sql);
        cmd.addParam("m_list", RSDBP_IN, ref,  V_INTEGER);
        cmd.addParam("m_code", RSDBP_IN, code, V_STRING);
        
        var rs = RsdRecordSet (cmd);
        
        if (rs.moveNext ())
            ret = rs.value ("t_name");
        end;
        return ret;

    onError return ret;
    end;
    
    macro PanelHandler ( dlg, cmd, id, key )
        var tmp;

        if   (cmd == DLG_INIT)
            UF_Hlp_DisableFields (dlg);
            UF_Hlp_EnableFieldsByCode (dlg);
            old_data = TDialogFields (dlg);
            message ("Esc - выход, F3 - выбор значения, F9 - сохранить изменения");
        
        // разрешаем ручное заполнение кодов запросов
        elif ((cmd == DLG_KEY) and (id == fldIndex ("EdDefineRequestCode")) and (key != 317) )
            this.("EdDefineRequestDescr") = UF_Hlp_GetDescriptionByCode (UF_REF_TYPE_REQUEST, this.("EdDefineRequestCode"));
            if (this.("EdDefineRequestDescr") == "")
                msgbox ("В справочнике форматов нет кода запроса с номером " + this.("EdDefineRequestCode") + 
                        "|Повторите ввод или воспользуйтесь справочником (F3).");
                return CM_IGNORE;
            else
                UF_Hlp_DisableFields (dlg);
                UF_Hlp_EnableFieldsByCode (dlg);
            end;
        
        // разрешаем ручное заполнение кодов ответов
        elif ((cmd == DLG_KEY) and (id == fldIndex ("EdDefineAnswerCode")) and (key != 317) )
            this.("EdDefineAnswerDescr") = UF_Hlp_GetDescriptionByCode (UF_REF_TYPE_ANSWER, this.("EdDefineAnswerCode"));
            if (this.("EdDefineAnswerDescr") == "")
                msgbox ("В справочнике форматов нет кода ответа с номером " + this.("EdDefineAnswerCode") + 
                        "|Повторите ввод или воспользуйтесь справочником (F3).");
                return CM_IGNORE;
            else
                UF_Hlp_DisableFields (dlg);
                UF_Hlp_EnableFieldsByCode (dlg);
            end;

        // Space на поле "ИНН плательщика"
        elif ((cmd == DLG_KEY) and (key == 32) and (id == fldIndex ("PayerINN")) )
            if (dlg.rec.PayerINN == "")
                this.("PayerINN") = "X";
            else 
                this.("PayerINN") = "";
            end;
            UpdateFields (dlg);

        // Space на поле "КПП плательщика"
        elif ((cmd == DLG_KEY) and (key == 32) and (id == fldIndex ("PayerKPP")) )
            if (dlg.rec.PayerKPP == "")
                this.("PayerKPP") = "X";
            else 
                this.("PayerKPP") = "";
            end;
            UpdateFields (dlg);

        // Space на поле "ИНН получателя"
        elif ((cmd == DLG_KEY) and (key == 32) and (id == fldIndex ("PayeeINN")) )
            if (dlg.rec.PayeeINN == "")
                this.("PayeeINN") = "X";
            else 
                this.("PayeeINN") = "";
            end;
            UpdateFields (dlg);

        // Space на поле "КПП получателя"
        elif ((cmd == DLG_KEY) and (key == 32) and (id == fldIndex ("PayeeKPP")) )
            if (dlg.rec.PayeeKPP == "")
                this.("PayeeKPP") = "X";
            else 
                this.("PayeeKPP") = "";
            end;
            UpdateFields (dlg);

        // Space на поле "Статус составителя"
        elif ((cmd == DLG_KEY) and (key == 32) and (id == fldIndex ("DrawerStatus")) )
            if (dlg.rec.DrawerStatus == "")
                this.("DrawerStatus") = "X";
            else 
                this.("DrawerStatus") = "";
            end;
            UpdateFields (dlg);
        
        // Space на поле "Тип налогового платежа"
        elif ((cmd == DLG_KEY) and (key == 32) and (id == fldIndex ("TaxPaytKind")) )
            if (dlg.rec.TaxPaytKind == "")
                this.("TaxPaytKind") = "X";
            else 
                this.("TaxPaytKind") = "";
            end;
            UpdateFields (dlg);

        // Space на поле "Код бюджетной класификации"
        elif ((cmd == DLG_KEY) and (key == 32) and (id == fldIndex ("CBC")) )
            if (dlg.rec.CBC == "")
                this.("CBC") = "X";
            else 
                this.("CBC") = "";
            end;
            UpdateFields (dlg);

        // Space на поле "Код ОКАТО"
        elif ((cmd == DLG_KEY) and (key == 32) and (id == fldIndex ("OKATO")) )
            if (dlg.rec.OKATO == "")
                this.("OKATO") = "X";
            else 
                this.("OKATO") = "";
            end;
            UpdateFields (dlg);

        // Space на поле "Основание налогового платежа"
        elif ((cmd == DLG_KEY) and (key == 32) and (id == fldIndex ("PaytReason")) )
            if (dlg.rec.PaytReason == "")
                this.("PaytReason") = "X";
            else 
                this.("PaytReason") = "";
            end;
            UpdateFields (dlg);

        // Space на поле "Налоговый период"
        elif ((cmd == DLG_KEY) and (key == 32) and (id == fldIndex ("TaxPeriod")) )
            if (dlg.rec.TaxPeriod == "")
                this.("TaxPeriod") = "X";
            else 
                this.("TaxPeriod") = "";
            end;
            UpdateFields (dlg);

        // Space на поле "Номер налогового документа"
        elif ((cmd == DLG_KEY) and (key == 32) and (id == fldIndex ("DocNo")) )
            if (dlg.rec.DocNo == "")
                this.("DocNo") = "X";
            else 
                this.("DocNo") = "";
            end;
            UpdateFields (dlg);
            
        // F3 на поле "Дата налогового документа"
        elif ((cmd == DLG_KEY) and (key == 32) and (id == fldIndex ("DocDate")) )
            if (dlg.rec.DocDate == "")
                this.("DocDate") = "X";
            else 
                this.("DocDate") = "";
            end;
            UpdateFields (dlg);
            
        // F3 на поле кода запроса
        elif ((cmd == DLG_KEY) and (key == 317) and (id == fldIndex ("EdDefineRequestCode")) )
            tmp = UF_CodeReference(UF_REF_TYPE_REQUEST).row;
            if (tmp != null)
                this.("EdDefineRequestCode")  = tmp.key;
                this.("EdDefineRequestDescr") = tmp.value;
                UF_Hlp_DisableFields (dlg);
                UF_Hlp_EnableFieldsByCode (dlg);
                UpdateFields (dlg);
            end;
        
        // F3 на поле счета плательщика
        elif ((cmd == DLG_KEY) and (key == 317) and (id == fldIndex ("PayerAcc")) )
        
        
        // F3 на поле счета получателя
        elif ((cmd == DLG_KEY) and (key == 317) and (id == fldIndex ("PayeeAcc")) )
        
        
        // F9 - сохранение реквизитов формы
        elif ((cmd == DLG_KEY) and (key == 323))
            new_data = TDialogFields (dlg);
            //if ((CompareDialogFields (new_data, old_data) == false) and 
            //    (GetTrue (true, "Параметры ответа были изменены. Сохранить изменения ?")))
            if (this.("EdDefineRequestText") == "")
                if (this.("EdDefineRequestCode") == REQ_RETURN_TRANSF_AMOUNT /*10*/)
                    msgbox("Для формирования запроса с кодом " + this.("EdDefineRequestCode") + " нужно указать причину | возврата платежа в поле \"Уточнение платежа\"");
                    return CM_IGNORE;
                elif (this.("EdDefineRequestCode") == REQ_TO_USE_OTHER_CODES /*99*/)
                    msgbox("Для формирования запроса с кодом " + this.("EdDefineRequestCode") + " нужно ввести | уточнение в поле \"Уточнение платежа\"");
                    return CM_IGNORE;
                end;
            end;
                UF_Hlp_SaveXML243 (dlg);
            //end;
        end;
    end;
    

    initTRecHandler ("ED_243", RSL_GetLbrPath ("EDLib.lbr", true), true);
    
    macro InitByRowData (_rs)
        var rs = "";
        if (_rs.moveNext ())
            if (valType (_rs.value ("Or_EdNo"))                   != 26) this.("OriginalEPD_EdNo")     = int(_rs.value ("Or_EdNo"));               end; //Gurin убрал trim
            if (valType (_rs.value ("Or_EdDate", null, V_DATE))   != 26) this.("OriginalEPD_EdDate")   = _rs.value ("Or_EdDate", null, V_DATE);    end;
            if (valType (_rs.value ("Or_EdAuthor"))               != 26) this.("OriginalEPD_EdAuthor") = trim (_rs.value ("Or_EdAuthor"));                end;
            if (valType (_rs.value ("Init_EdDefineRequestCode"))  != 26) this.("EdDefineRequestCode")  = trim (_rs.value ("Init_EdDefineRequestCode"));   end;
            
            this.("EdDefineRequestDescr") = trim (UF_Hlp_GetDescriptionByCode   (UF_REF_TYPE_REQUEST, this.("EdDefineRequestCode")));
        
            if (valType (_rs.value ("AccDocNo"))      != 26) this.("AccDocNo")      = trim (_rs.value ("AccDocNo"));      end;
            if (valType (_rs.value ("AccDocDate"))    != 26) this.("AccDocDate")    = _rs.value ("AccDocDate");    end;
            if (valType (_rs.value ("PayeeCorrAcc"))  != 26) this.("PayeeCorrAcc")  = trim (_rs.value ("PayeeCorrAcc"));  end;
            if (valType (_rs.value ("PayeeBIC"))      != 26) this.("PayeeBIC")      = trim (_rs.value ("PayeeBIC"));      end;
            if (valType (_rs.value ("Address"))       != 26) this.("Address")       = trim (_rs.value ("Address"));       end;
            if (valType (_rs.value ("EdSum"))         != 26) this.("Sum")           = money(_rs.value ("EdSum")) / 100;   end;

            //if (valType (_rs.value ("EnterDate", null, V_DATE)) != 26) this.("EnterDate")     = _rs.value ("EnterDate", null, V_DATE);  end;
            if (valType (_rs.value ("PayerName"))     != 26) this.("PayerName")     = trim (_rs.value ("PayerName")); end;
            if (valType (_rs.value ("PayeeName"))     != 26) this.("PayeeName")     = trim (_rs.value ("PayeeName")); end;
            if (valType (_rs.value ("PayerAcc"))      != 26) this.("PayerAcc")           = trim (_rs.value ("PayerAcc"));      end;
            if (valType (_rs.value ("PayeeAcc"))      != 26) this.("PayeeAcc")           = trim (_rs.value ("PayeeAcc"));      end;
            if (valType (_rs.value ("Purpose"))            != 26) this.("Purpose")            = trim (_rs.value ("Purpose"));       end;

            this.rs_global = _rs;
            
            return runDialog (this, R2M (this, "PanelHandler"));
        end;
    end;

    macro CreateRequest(id)
        debugbreak;
        var _or_edno, _fname_ed243, sql;
        generateReference (3,       _or_edno);
        generateReference (1000044, _fname_ed243);

        sql = " select CASE WHEN dpm.t_dockind NOT IN (320, 322) THEN 'X' ELSE ' ' END direct,"
        + "\n         :fname_ed243 fname "
        + "\n         ,dpm.t_paymentid id "
        + "\n         ,SUBSTR (dwlmes.t_trn, -6, 6) or_edno "
        + "\n         ,prop.t_transferdate or_eddate ";
        if (_bank.is_VUZ)
            sql = sql + "\n ,DECODE ( "
                      + "\n (SELECT   t_bankcode "
                      + "\n    FROM   dpmprop_dbt "
                      + "\n   WHERE   t_paymentid = dpm.t_paymentid AND t_debetcredit = 0), "
                      + "\n '046577001','6577001551', "
                      + "\n (SELECT   RPAD (SUBSTR (t_bankcode, 3), 10, '0') "
                      + "\n    FROM   dpmprop_dbt "
                      + "\n   WHERE   t_paymentid = dpm.t_paymentid AND t_debetcredit = 0) "
                      + "\n ) or_edauthor ";
        else
            sql = sql + "\n         ,(select   RPAD (SUBSTR (t_bankcode, 3), 10, '0') "
                      + "\n             from   dpmprop_dbt "
                      + "\n            where   t_paymentid = dpm.t_paymentid AND t_debetcredit = 0) "
                      + "\n             or_edauthor ";
        end;
        sql = sql + "\n         ,to_char(:or_edno + 600000) init_edno "
        + "\n         ,sysdate init_eddate "
        + "\n         ,rpad ( substr ( prop.t_bankcode, 3 ), 10, '0' ) init_edauthor "        
        + "\n         ,'01' init_eddefinerequestcode "
        + "\n         ,substr(concat('000',rmpr.t_number), -3, 3) accdocno "
        //+ "\n         ,dpm.t_valuedate accdocdate "
        + "\n         ,rmpr.t_date accdocdate "
        + "\n         ,to_char((dpm.t_amount * 100)) edsum "
        + "\n         ,DECODE (dprt.t_coracc, CHR (1), '00000000000000000000', dprt.t_coracc) payeecorracc "
        + "\n         ,prop.t_bankcode payeebic "
        + "\n         ,dpm.t_payeraccount payeracc "
        + "\n         ,rmpr.t_payername payername "
        + "\n         , ( select t_adress "
        + "\n               from dadress_dbt "
        + "\n              where t_partyid = dpm.t_payer and t_type = 1 ) "
        + "\n               address "
        + "\n         ,dpm.t_receiveraccount payeeacc "
        + "\n         ,rmpr.t_receivername payeename "
        + "\n         ,rmpr.t_ground purpose "
        + "\n    from dpmpaym_dbt dpm, dpmprop_dbt prop, dpmrmprop_dbt rmpr, "
        + "\n         dwlmes_dbt dwlmes, dwlmeslnk_dbt dwllnk, dwlpm_dbt dwlpm, dbankdprt_dbt dprt "
        + "\n   where     dpm.t_paymentid = rmpr.t_paymentid and dpm.t_paymentid = prop.t_paymentid "
        + "\n         and dpm.t_receiverbankid = dprt.t_partyid "
        + "\n         and dwlpm.t_wlpmid = dwllnk.t_objid(+) and dwllnk.t_mesid = dwlmes.t_mesid(+) "
        + "\n         and dwlpm.t_paymentid = dpm.t_paymentid "
        + "\n         and prop.t_debetcredit = 1 and dpm.t_paymentid = :id ";

        sql = execSqlSelect (sql, makeArray (SqlParam ("fname_ed243", string(UF_Request.RPAD_MFO(),_fname_ed243,".xml")), 
                                             SqlParam ("or_edno", _or_edno), 
                                             SqlParam ("id", id)));
        UF_Request.InitByRowData (sql); 
    end;
end;

// var a = UF_Request.CreateRequest(101087826);