//------------------------------------------------------------------------------
//                                                                  
// @filename: fssp_xml_lib.mac                                    
// @author  : Golovkin                                          
// @desc    : Простые функции для создания XML
// @changes :                                                   
//                                                               
//                                                                                                                               
//------------------------------------------------------------------------------
import "likepy.mac";
import XmlRpcInter;

macro simpleXMLOpenTag( tagName:string )
    return "<" + tagName + ">";
end;

macro simpleXMLCloseTag( tagName:string )
    return "</" + tagName + ">";
end;

macro simpleXMLOneTag( tagName:string )
    return "<" + tagName + "/>";
end;

macro simpleXMLElement( tagName:string, value:string )
    return simpleXMLOpenTag( tagName ) + value + simpleXMLCloseTag( tagName );
end;

class XMLAttribute( attrNane:string, attrValue:string )
    var name; 
    var value;

    macro text return name + "=\"" + value + "\""; end;

    name  = attrNane;
    value = attrValue;
end;

class XMLElement( tagName:string, val:string, attrArr:TArray, chldArr:TArray )
    var name       = "";
    var value      = "";
    var attributes = TArray();
    var childs     = TArray(false,10,10);

    private macro AttrsText
        var i, result = "";
        if( attributes.size != 0 ) 
            for ( i, 0, attributes.size - 1 ) result = result + " " + attributes[i].text; end;
        end;
        return result;
    end;    

    macro addAttribute( attribute:XMLAttribute )
        attributes[attributes.size] = attribute;
    end;

    macro addChild( child:XMLElement ) 
        childs[childs.size] = child; 
    end;

    macro openTag  return "<"     + name  + AttrsText +  ">"; end;
    macro oneTag   return "<"     + name  + AttrsText + "/>"; end;
    macro closeTag return "</"    + name  +              ">"; end;
    macro text     return openTag + value + closeTag        ; end;

    macro toString( indent:string )
       var i; 
       var result = "";

       if( indent == null ) indent = ""; end;

       if( childs.size != 0 ) 
            result = result + indent + openTag  + "\n";
            for( i, 0, childs.size - 1 ) result = result + childs[i].toString( indent + "   " ); end;
            result = result + indent + closeTag + "\n";
       else result = result + indent + text     + "\n";
       end;

       return result;
    end;

    name = tagName;

    if( val     != null ) value      = val;     end;
    if( attrArr != null ) attributes = attrArr; end;
    if( chldArr != null ) childs     = chldArr; end;
end;

/* 
 * sample
 * purely neighing
 *
 */

//import "fssp_xml_lib.mac","likepy"; 

/*

var testXMLDoc = XMLElement( "dx:root", null, makeArray( XMLAttribute( "xmlns:dx", "http://www.red-soft.biz/ncore/dx/1.1" ) ) );
    testXMLDoc.addChild( XMLElement( "element1", "Value1" ) );
    testXMLDoc.addChild( XMLElement( "element2", "Value2" ) );
    testXMLDoc.addChild( XMLElement( "element3", null, null, makeArray( XMLElement( "element4", "Value4" ), 
                                                                        XMLElement( "element5", "Value5" ), 
                                                                        XMLElement( "element6", null, null, makeArray( XMLElement( "element7", "Value7" ) ) ) ) ) );
println ( testXMLDoc );

*/

/*
 * result
 *
 */

/*

<dx:root xmlns:dx="http://www.red-soft.biz/ncore/dx/1.1">
   <element1>Value1</element1>
   <element2>Value2</element2>
   <element3>
      <element4>Value4</element4>
      <element5>Value5</element5>
      <element6>
         <element7>Value7</element7>
      </element6>
   </element3>
</dx:root>

*/