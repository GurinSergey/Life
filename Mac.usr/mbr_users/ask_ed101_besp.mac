// -------------------------------------------------------------------------------------------------
// @filename: ask_ed243.mac
// @author  : Гурин С.
// @desc    : Квитовка сообщений ED101 по системе БЭСП
// @request : C-25393 
// @modify  : Gurin S. 10.06.2014 C-30354-7 (Добавил колонку к отчету "Имя файла ED101")
// -------------------------------------------------------------------------------------------------
import globals, likepy, RsExts, treport, BankInter, CTInter;
import lib_registry, lib_compare; 

private const ERR_EXIT_SUCCESS = 0;
private const ERR_EXIT_FAILURE = 1;

var ask_besp_array: TArray = TArray();

class AskEDParams ()
    var path_ask_ed101_besp_in :string = ""; // директория импорта
    var path_ask_ed101_besp_old:string = ""; // директория архивации
    var ask_ed101_besp_mask            = "*.xml";
  
    private macro normalizePath(path)
        if (SubStr(path, StrLen(path), 1)!="\\")
            path = path + "\\";
        end;
        return path;
    end;

    macro readParams ()
        path_ask_ed101_besp_in  = normalizePath(RSL_GetRegistryValue ("PRBB/ED101_BESP/IN"));
        path_ask_ed101_besp_old = normalizePath(RSL_GetRegistryValue ("PRBB/ED101_BESP/OLDMES"));
    end;

end;

class AskBESPRecord(_PaymentID, _FName, _TRN, _Format, _Result, _AskResult)
    var m_PaymentID = _PaymentID;
    var m_FName     = _FName;
    var m_TRN       = _TRN;
    var m_Format    = _Format;
    var m_Result    = _Result;
    var m_AskResult = _AskResult;
end;

private class ASKED101_BESP ()
    var params :AskEDParams = AskEDParams (); // параметры обработки ED
    var reportName = getTxtFileName ("ask_ed101_besp");

    macro moveFile (src:string, dst:string)
        var m_copy   = copyFile (src, dst);
        var m_remove = removeFile (src);
        return (m_copy and m_remove);
    end;

    private macro readEDFile (fileName)
         file f () txt;
         var ret = "";
         var sql, parm;
     
         if (not open (f, string (params.path_ask_ed101_besp_in, fileName))) 
             ret = "Невозможно открыть файл для чтения ";                                                 
         end;
        
         var xmlData = "";
         while (next (f))
             xmlData = xmlData + f.str;
         end;

         sql  = "insert into USR_ASK_CONTAINER_BESP_TMP (fname, xmldata) values (trim (:fname), xmltype (convert (:xmldata ,'RU8PC866' ,'CL8MSWIN1251')))";
         parm = makeArray (SQLParam ("fname", fileName), SQLParam ("xmldata", xmlData));
         if (0 != execSQL (sql, parm, false))
             ret = ERR_EXIT_SUCCESS;
         else
             ret = ERR_EXIT_FAILURE;
         end;
                          
         return ret;
    end;

    macro printImportRep ()
        var obj, sql, parm, tmp_author;
        SetOutput (reportName);
        
        println (string ("                  Отчет о выполнении процедуры импорта квитовок ED101 БЭСП "):c:80);
        println (string ("                           Дата - ", date, ", время - ", time):c:70);

        sql = "WITH vw " + "\n" +
              "  AS (SELECT t.fname, " + "\n" +
              "             CASE " + "\n" +
              "                WHEN (REGEXP_SUBSTR (t.xmldata.EXTRACT ('/','xmlns=urn:cbr-ru:ed:v2.0').getstringval (),'ED[0-9]{3}') = 'ED206') " + "\n" +
              "                THEN " + "\n" +
              "                   TO_CHAR(SUBSTR (REPLACE (EXTRACTVALUE (t.xmldata,'/ED206/EDRefID/@EDDate','xmlns=urn:cbr-ru:ed:v2.0'),'-',''),3)) " + "\n" +
              "                   || TO_CHAR(EXTRACTVALUE (t.xmldata,'/ED206/EDRefID/@EDAuthor','xmlns=urn:cbr-ru:ed:v2.0')) " + "\n" +
              "                   || TO_CHAR(EXTRACTVALUE (t.xmldata,'/ED206/EDRefID/@EDNo','xmlns=urn:cbr-ru:ed:v2.0')) " + "\n" +
              "                                       WHEN (REGEXP_SUBSTR (t.xmldata.EXTRACT ('/','xmlns=urn:cbr-ru:ed:v2.0').getstringval (), " + "\n" +
              "                                                            'ED[0-9]{3}') = 'ED201') " + "\n" +
              "                THEN " + "\n" +
              "                   TO_CHAR(SUBSTR (REPLACE (EXTRACTVALUE (t.xmldata,'/ED201/EDRefID/@EDDate','xmlns=urn:cbr-ru:ed:v2.0'),'-',''),3)) " + "\n" +
              "                   || TO_CHAR(EXTRACTVALUE (t.xmldata,'/ED201/EDRefID/@EDAuthor','xmlns=urn:cbr-ru:ed:v2.0')) " + "\n" +
              "                   || TO_CHAR(EXTRACTVALUE (t.xmldata,'/ED201/EDRefID/@EDNo','xmlns=urn:cbr-ru:ed:v2.0')) " + "\n" +
              "                ELSE " + "\n" +
              "                   CHR(1) " + "\n" +
              "             END " + "\n" +
              "                trn, " + "\n" +
              "             CASE " + "\n" +
              "                WHEN (REGEXP_SUBSTR (t.xmldata.EXTRACT ('/','xmlns=urn:cbr-ru:ed:v2.0').getstringval (),'ED[0-9]{3}') = 'ED206') " + "\n" +
              "                THEN " + "\n" +
              "                   (SELECT   dpm.t_paymentid " + "\n" +
              "                      FROM   dwlmes_dbt mes, " + "\n" +
              "                             dwlmeslnk_dbt wlnk, " + "\n" +
              "                             dwlpm_dbt wlpm, " + "\n" +
              "                             dpmpaym_dbt dpm, " + "\n" +
              "                             dpmrmprop_dbt rm " + "\n" +
              "                     WHERE   mes.t_trn = " + "\n" +
              "                                (TO_CHAR(SUBSTR (REPLACE (EXTRACTVALUE (t.xmldata,'/ED206/EDRefID/@EDDate','xmlns=urn:cbr-ru:ed:v2.0'), " + "\n" +
              "                                                          '-',''),3)) " + "\n" +
              "                                 || TO_CHAR(EXTRACTVALUE (t.xmldata,'/ED206/EDRefID/@EDAuthor','xmlns=urn:cbr-ru:ed:v2.0')) " + "\n" +
              "                                 || TO_CHAR(EXTRACTVALUE (t.xmldata,'/ED206/EDRefID/@EDNo','xmlns=urn:cbr-ru:ed:v2.0'))) " + "\n" +
              "                             AND mes.t_mesid = wlnk.t_mesid " + "\n" +
              "                             AND wlnk.t_objid = wlpm.t_wlpmid " + "\n" +
              "                             AND wlpm.t_paymentid = dpm.t_paymentid " + "\n" +
              "                             AND dpm.t_paymentid = rm.t_paymentid " + "\n" +
              "                             AND rm.t_paymentkind = CHR (145)) " + "\n" +
              "                WHEN (REGEXP_SUBSTR (t.xmldata.EXTRACT ('/','xmlns=urn:cbr-ru:ed:v2.0').getstringval (),'ED[0-9]{3}') = 'ED201') " + "\n" +
              "                THEN " + "\n" +
              "                   (SELECT   dpm.t_paymentid " + "\n" +
              "                      FROM   dwlmes_dbt mes, " + "\n" +
              "                             dwlmeslnk_dbt wlnk, " + "\n" +
              "                             dwlpm_dbt wlpm, " + "\n" +
              "                             dpmpaym_dbt dpm, " + "\n" +
              "                             dpmrmprop_dbt rm " + "\n" +
              "                     WHERE   mes.t_trn = " + "\n" +
              "                                (TO_CHAR(SUBSTR (REPLACE (EXTRACTVALUE (t.xmldata,'/ED201/EDRefID/@EDDate','xmlns=urn:cbr-ru:ed:v2.0'), " + "\n" +
              "                                                          '-',''),3)) " + "\n" +
              "                                 || TO_CHAR(EXTRACTVALUE (t.xmldata,'/ED201/EDRefID/@EDAuthor','xmlns=urn:cbr-ru:ed:v2.0')) " + "\n" +
              "                                 || TO_CHAR(EXTRACTVALUE (t.xmldata,'/ED201/EDRefID/@EDNo','xmlns=urn:cbr-ru:ed:v2.0'))) " + "\n" +
              "                             AND mes.t_mesid = wlnk.t_mesid " + "\n" +
              "                             AND wlnk.t_objid = wlpm.t_wlpmid " + "\n" +
              "                             AND wlpm.t_paymentid = dpm.t_paymentid " + "\n" +
              "                             AND dpm.t_paymentid = rm.t_paymentid " + "\n" +
              "                             AND rm.t_paymentkind = CHR (145)) " + "\n" +
              "             END " + "\n" +
              "                paymentid, " + "\n" +
              "             CASE  " + "\n" +
              "                WHEN (REGEXP_SUBSTR (t.xmldata.EXTRACT ('/','xmlns=urn:cbr-ru:ed:v2.0').getstringval (),'ED[0-9]{3}') = 'ED206') " + "\n" +
              "                THEN " + "\n" +
              "                    TO_CHAR(EXTRACTVALUE (t.xmldata,'/ED206/EDRefID/@EDAuthor','xmlns=urn:cbr-ru:ed:v2.0')) " + "\n" +
              "                WHEN (REGEXP_SUBSTR (t.xmldata.EXTRACT ('/','xmlns=urn:cbr-ru:ed:v2.0').getstringval (),'ED[0-9]{3}') = 'ED201') " + "\n" +
              "                THEN " + "\n" +
              "                    TO_CHAR(EXTRACTVALUE (t.xmldata,'/ED201/EDRefID/@EDAuthor','xmlns=urn:cbr-ru:ed:v2.0')) " + "\n" +
              "             END " + "\n" +
              "                edauthor, " + "\n" +
              "             CASE " + "\n" +
              "                WHEN (REGEXP_SUBSTR (t.xmldata.EXTRACT ('/','xmlns=urn:cbr-ru:ed:v2.0').getstringval (),'ED[0-9]{3}') = 'ED206') " + "\n" + 
              "                THEN " + "\n" + 
              "                    TO_CHAR(EXTRACTVALUE (t.xmldata,'/ED206/EDRefID/@EDNo','xmlns=urn:cbr-ru:ed:v2.0')) " + "\n" + 
              "                WHEN (REGEXP_SUBSTR (t.xmldata.EXTRACT ('/','xmlns=urn:cbr-ru:ed:v2.0').getstringval (),'ED[0-9]{3}') = 'ED201') " + "\n" + 
              "                THEN " + "\n" + 
              "                    TO_CHAR(EXTRACTVALUE (t.xmldata,'/ED201/EDRefID/@EDNo','xmlns=urn:cbr-ru:ed:v2.0')) " + "\n" + 
              "             END " + "\n" + 
              "                edno, " + "\n" +
              "              REGEXP_SUBSTR (t.xmldata.EXTRACT ('/','xmlns=urn:cbr-ru:ed:v2.0').getstringval (),'ED[0-9]{3}') format " + "\n" +
              "        FROM   usr_ask_container_besp_tmp t) " + "\n" +
              "SELECT  NVL(paymentid, 0) paymentid, " + "\n" +
              "        fname, " + "\n" +
              "        trn, " + "\n" +
              "        format, " + "\n" +
              "        CASE " + "\n" +
              "           WHEN (format = 'ED201' OR format = 'ED206') " + "\n" +
              "                AND EXISTS (SELECT   1 " + "\n" +
              "                              FROM   usr_uf_container_besp besp " + "\n" +
              "                             WHERE       besp.trn = vw.trn " + "\n" +
              "                                     AND REGEXP_SUBSTR (besp.xml_ask.EXTRACT ('/','xmlns=urn:cbr-ru:ed:v2.0').getstringval (), " + "\n" +
              "                                                        'ED[0-9]{3}') = format) " + "\n" +
              "           THEN " + "\n" +
              "              ('Пропущено. Ранее уже загружалось это ' || format) " + "\n" +
              "           WHEN (format = 'ED206') AND (paymentid IS NOT NULL) " + "\n" +
              "           THEN " + "\n" +
              "              'Сообщение сквитовано' " + "\n" +
              "           WHEN (format = 'ED206') AND (paymentid IS NULL) AND (EDAuthor = :1) AND (substr(edno,1,1) = '8') " + "\n" +
              "           THEN " + "\n" +
              "              (SELECT   '!!! Не найден документ: N ' " + "\n" +
              "                        || TO_CHAR(EXTRACTVALUE (tm.xmldata,'/ED206/AccDoc/@AccDocNo','xmlns=urn:cbr-ru:ed:v2.0')) " + "\n" +
              "                        || ', Дата докумeнта ' " + "\n" +
              "                        || TO_CHAR(TO_DATE(EXTRACTVALUE (tm.xmldata,'/ED206/AccDoc/@AccDocDate','xmlns=urn:cbr-ru:ed:v2.0'),'yyyy-mm-dd'),'dd.mm.yyyy') " + "\n" +
              "                        || ', Сумма ' " + "\n" +
              "                        || TO_CHAR( EXTRACTVALUE (tm.xmldata, '/ED206/@Sum', 'xmlns=urn:cbr-ru:ed:v2.0')/100, 'FM999999999990.99') " + "\n" +
              "                 FROM   usr_ask_container_besp_tmp tm " + "\n" +
              "                WHERE   tm.FNAME = vw.fname) " + "\n" +
              "           WHEN (format = 'ED201') AND (paymentid IS NOT NULL) " + "\n" +
              "           THEN " + "\n" +
              "              (SELECT   'Сообщение не сквитовано. ' " + "\n" +
              "                        || TO_CHAR(EXTRACTVALUE (tmp.xmldata,'/ED201/Annotation','xmlns=urn:cbr-ru:ed:v2.0')) " + "\n" +
              "                        || ', ' " + "\n" +
              "                        || TO_CHAR(EXTRACTVALUE (tmp.xmldata,'/ED201/ErrorDiagnostic','xmlns=urn:cbr-ru:ed:v2.0')) " + "\n" +
              "                 FROM   usr_ask_container_besp_tmp tmp " + "\n" +
              "                WHERE   tmp.FNAME = vw.fname) " + "\n" +
              "           WHEN (format = 'ED201') AND (paymentid IS NULL) AND (EDAuthor = :2) AND (substr(edno,1,1) = '8') " + "\n" +
              "           THEN " + "\n" +
              "              '!!! Не найден документ' " + "\n" +
              "           ELSE " + "\n" +
              "               '!!! Не соответствует формату' " + "\n" +
              "        END " + "\n" +
              "           res, " + "\n" +
              "        CASE " + "\n" +
              "           WHEN (format = 'ED206') AND (paymentid IS NOT NULL) THEN CHR (88) " + "\n" +
              "           WHEN (format = 'ED201') AND (paymentid IS NOT NULL) THEN CHR (45) " + "\n" +
              "        END " + "\n" +
              "           ask_res " + "\n" +
              "  FROM  vw " + "\n" +
              " WHERE  (EDAuthor = :3) AND (substr(edno,1,1) = '8')";

        tmp_author = string(RSL_RPAD(substr({MFO_Bank},3),10,"0"));
        parm = makeArray (SQLParam ("1", tmp_author), SQLParam ("2", tmp_author), SQLParam ("3", tmp_author));
        sql = execSQLSelect (sql, parm);
        var table = CTableReport();

        table.addColumn ("Имя файла",              25, AL_LEFT);
        table.addColumn ("Референс ED101 БЭСП",    25, AL_LEFT);
        table.addColumn ("Формат",                  3, AL_LEFT);
        table.addColumn ("Результат обработки",    55, AL_LEFT);
        table.addColumn ("Имя файла ED101",        40, AL_LEFT);

        table.printHead ();
        var i = 0, cnt_201 = 0, cnt_206 = 0, _sql, ed101name = "";
            
        while (sql.moveNext ())
            //Gurin S. 10.06.2014 C-30354-7
            _sql = execSQLSelect("SELECT   SUBSTR (T_FILENAME,(LENGTH (T_FILENAME) - INSTR (reverse (T_FILENAME), '\\') + 2)) ed101name "
                                 "  FROM   dwlsess_dbt sess, dwlmes_dbt mes "
                                 " WHERE   sess.t_sessionid = mes.t_sessionid AND mes.t_trn = :trn ",
                                 makeArray (SQLParam ("trn", sql.value ("trn")))); 
            if (_sql.moveNext ()) ed101name = _sql.value("ed101name"); else ed101name = "Нет данных"; end;

            table.printStringTransferByWord ( sql.value ("fname"), sql.value ("trn"), sql.value ("format"), sql.value ("res"), ed101name);
            obj = AskBESPRecord(int(sql.value ("paymentid")), sql.value ("fname"), sql.value ("trn"), sql.value ("format"), sql.value ("res"), sql.value ("ask_res"));
            ask_besp_array(ask_besp_array.size()) = obj;
            
            if ((sql.value ("format") == "ED206") and (substr(sql.value ("Res"),1,9) != "Пропущено")) cnt_206 = cnt_206 + 1; 
            elif ((sql.value ("format") == "ED201") and (substr(sql.value ("Res"),1,9) != "Пропущено")) cnt_201 = cnt_201 + 1; 
            end;

            i = i + 1;
        end;
            
        table.printSeparator ();
        table.printStringTransferByWord ("Всего файлов:", i);
        table.printBottom ();

        println();
        println("ED206 - доставлено получателю: " ,cnt_206);
        println("ED201 - не доставлено получателю: ",cnt_201);

        SetOutput (NULL, true);
    end;

    macro MatchMessage ()
        var sql, parm, i = 0;

        while (i < ask_besp_array.size())
            if ((((ask_besp_array(i).m_Format == "ED206") and (ask_besp_array(i).m_AskResult == "X")) 
                   or ((ask_besp_array(i).m_Format == "ED201") and (ask_besp_array(i).m_AskResult == "-")))
                  and (substr(ask_besp_array(i).m_Result,1,9) != "Пропущено"))
                sql = " INSERT INTO USR_UF_CONTAINER_besp " + "\n" +
                      "  VALUES   (:paymentid, " + "\n" +
                      "            (SELECT   xmldata " + "\n" +
                      "               FROM   usr_ask_container_besp_tmp " + "\n" +
                      "              WHERE   fname = :fname), " + "\n" +
                      "            :trn, " + "\n" +
                      "            :fname_ask, " + "\n" +
                      "            :ask_result, " + "\n" +
                      "            :creationdate, " + "\n" +
                      "            :creationtime ) ";
                parm = makeArray (SQLParam ("paymentid"    , ask_besp_array(i).m_PaymentID), SQLParam ("fname"        , ask_besp_array(i).m_FName),
                                  SQLParam ("trn"          , ask_besp_array(i).m_TRN)      , SQLParam ("fname_ask"    , ask_besp_array(i).m_FName), 
                                  SQLParam ("ask_result"   , ask_besp_array(i).m_AskResult), SQLParam ("creationdate" , date),
                                  SQLParam ("creationtime" , time));
                execSQL (sql, parm);

                if (ask_besp_array(i).m_AskResult == "X")
                    AddNoteForObject(OBJTYPE_PAYMENT,RSL_LPAD(ask_besp_array(i).m_PaymentID,10,"0"), 163, string(ReadNoteForObject(OBJTYPE_PAYMENT, 
                                   RSL_LPAD(ask_besp_array(i).m_PaymentID,10,"0"), 163 ), "Доставлено получателю(ED206); "));
                elif (ask_besp_array(i).m_AskResult == "-")
                    AddNoteForObject(OBJTYPE_PAYMENT,RSL_LPAD(ask_besp_array(i).m_PaymentID,10,"0"), 163, string(ReadNoteForObject(OBJTYPE_PAYMENT, 
                                   RSL_LPAD(ask_besp_array(i).m_PaymentID,10,"0"), 163 ), ask_besp_array(i).m_Result, "; "));
                end;     
            end;
            i = i + 1;
        end;
    end;
    
    macro importEDAsk ()
        var dir, fullPath = "", fullPathOldMes = "";
        var i;

        var sql = "delete USR_ASK_CONTAINER_BESP_TMP";
        execSQL (sql);
        
        //debugbreak;                                                 
        dir = TDirList (string (params.path_ask_ed101_besp_in, params.ask_ed101_besp_mask), "f");
        dir.sort (0);
        
        // читаем файлы и заполняем временную таблицу (USR_ASK_CONTAINER_BESP_TMP)
        for (i, 0, dir.count - 1)
            fullPath       = string (params.path_ask_ed101_besp_in , dir.name (i));
            fullPathOldMes = string (params.path_ask_ed101_besp_old, dir.name (i));

            readEDFile (dir.name (i));
            moveFile   (fullPath, fullPathOldMes);
        end;
    end;

    macro ViewReport ()
        file fp () txt;
        if (open (fp, this.reportName)) viewFile (fp); else MsgBox ("Не удалось открыть файл протокола"); end;
    end;

    macro init()
        //1. Установка выходных параметров
        params.readParams ();

        //2. Импорт отбивок
        this.importEDAsk ();
        
        //3. Печать отчета
        this.printImportRep ();
        
        //4. Квитуем ED101 
        this.MatchMessage (); 

        //5. Протокол
        this.ViewReport ();
        
    onError (e)
        if (e.code == 47) // Error: Файл данных или таблица не открыты
            msgbox ("В директории загрузки |" + params.path_ask_ed101_besp_in + "|отсутствуют файлы ED206/ED201 для импорта");
        end;
        exit (1);
    end;
end;

ASKED101_BESP.init ();




