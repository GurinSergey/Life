import rsd, rsbFormsInter;
import "KeyCodes.mac","lib_registry.mac","globals.mac","likepy.mac","ZubRunScroll.mac";

private const	FT_INTEGER = 0;
private const	FT_LONG    = 1;
private const	FT_FLOAT   = 2;
private const	FT_DOUBLE  = 4;
private const	FT_DOUBLEM = 6;
private const	FT_STRING  = 7;
private const	FT_SNR     = 8;
private const	FT_DATE    = 9;
private const	FT_TIME    = 10;
private const	FT_CHR     = 12;
private const	FT_UCHR    = 13;
private const	FT_LDMON   = 14;
private const	FT_LDMONR  = 15;
private const	FT_DOUBLER = 16;
private const	FT_LDOUBLE = 17;
private const	FT_NUMSTR  = 18;

private const CONTROLS_POSITION        = 2;
private const LABELS_POSITION          = 4;
private const INFOLINES_FIRST_POSITION = 6;
private const LEFT_POSITION            = 3;
private const IDENT_INFOLINES          = 1;
private const PANEL_WIDTH              = 117;

private const ROBOT_STATE_DISABLE = "ВЫКЛЮЧЕН";
private const ROBOT_STATE_ENABLE  = "РАБОТАЕТ";
private const ROBOT_STATE_MISSING = "ОТСУТСТВУЕТ ПЛАНИРОВЩИК";

private var settingsPanelResulState = 0;
private var scrollIsRunning = true;

macro enamble_job
    rsdCommand("BEGIN DBMS_SCHEDULER.ENABLE(name => 'FSSP_AGENT_JOB'); END;").execute;
end;

macro disable_job
    rsdCommand("BEGIN DBMS_SCHEDULER.DISABLE (name => 'FSSP_AGENT_JOB'/*, force => TRUE*/); END;").execute;
end;

class ( TRsbEditField ) EditField( typeFld: integer, x: integer, y: integer, width: integer, height: integer, bindVal, active: bool, panel )
    var bindString = string( bindVal );
        
    initTRsbEditField( typeFld       );
    setPosition      ( x    , y      );
    setSize          ( width, height );
        
    if( active  == false     ) editable = focusable = false;    end;
    if( typeFld == FT_STRING ) bindValue( this, "bindString", 100 );
  elif( bindVal != null      ) value    = bindVal;              end;    
    if( panel   != null      ) panel.addControl( this );        end;
end;

class ( TRsbCheckBox ) CheckBox( x: integer, y: integer, state:bool, panel )
    initTRsbCheckBox;
    setPosition( x, y);
    if( state != null ) checked = state;          end;
    if( panel != null ) panel.addControl( this ); end;
end;

class( TRsbPushButton ) pushButton( name:string, x: integer, y: integer, sz:integer, panel:object, infoLine:object )
    initTRsbPushButton(name);

    name = "pushTheButton";

    var infoLineLnk = infoLine;

    setPosition(x, y);
    setSize(sz);
    panel.addControl(this);
end;

macro GET_JOB_STATE_NAME
    var rs = rsdRecordset( "SELECT ENABLED FROM USER_SCHEDULER_JOB_DESTS WHERE JOB_NAME = 'FSSP_AGENT_JOB';" );

    if( rs.movenext )
        if( rs.value("ENABLED") == "TRUE" )
            return ROBOT_STATE_ENABLE;
        else
            return ROBOT_STATE_DISABLE;
        end;
    else
        return ROBOT_STATE_MISSING;
    end;
end;

class ( TRsbPanel ) TFsspEditSettings( objkakoyto, rs, id, key )
    InitTRsbPanel;
    SetSize(75,10);    

    var isInsert = true; 

    var first_position = 2;

    addLabel( TRsbLabel( LEFT_POSITION, first_position,     "Id"                     ) ); 
    addLabel( TRsbLabel( LEFT_POSITION, first_position + 1, "Банк"                   ) ); 
    addLabel( TRsbLabel( LEFT_POSITION, first_position + 2, "url"                    ) ); 
    addLabel( TRsbLabel( LEFT_POSITION, first_position + 5, "периодичность загрузки" ) ); 
    addLabel( TRsbLabel( LEFT_POSITION, first_position + 6, "периодичность выгрузки" ) ); 
    addLabel( TRsbLabel( LEFT_POSITION, first_position + 3, "загрузка"               ) ); 
    addLabel( TRsbLabel( LEFT_POSITION, first_position + 4, "выгрузка"               ) ); 

    var idSettingFld = EditField( FT_INTEGER, LEFT_POSITION + 17, first_position, 10, 1,  0,                                                                false, this );
    var bankNameFld  = EditField( FT_STRING,  LEFT_POSITION + 17, first_position + 1, 53, 1, "set new name",                                                true,  this );
    var urlFld       = EditField( FT_STRING,  LEFT_POSITION + 17, first_position + 2, 53, 1, "http://x.x.x.x:xxxx/RSBANK_xxxx/RSBankWS.asmx?op=XMLRPCCall", true,  this );
    var loadFreqFld  = EditField( FT_INTEGER, LEFT_POSITION + 17, first_position + 5, 10, 1, 0,                                                             true,  this );
    var upFreqFld    = EditField( FT_INTEGER, LEFT_POSITION + 17, first_position + 6, 10, 1, 0,                                                             true,  this );

    var CB_Loading    = CheckBox( LEFT_POSITION + 17, first_position + 3, false, this ); 
    var CB_unLoading  = CheckBox( LEFT_POSITION + 17, first_position + 4, false, this );

    macro TFsspEditSettings( objkakoyto, rs, id, key )
        idSettingFld.value = rs.value("T_ID",         NULL, V_INTEGER);
        bankNameFld .value = rs.value("T_BANKNAME",   NULL, V_STRING );
        urlFld      .value = rs.value("T_URL",        NULL, V_STRING );
        loadFreqFld .value = rs.value("T_LOADFREQ",   NULL, V_INTEGER);
        upFreqFld   .value = rs.value("T_UPLOADFREQ", NULL, V_INTEGER);

        CB_Loading  .checked = (rs.value("T_LOAD",  NULL,V_STRING) == strFor(88));
        CB_unLoading.checked = (rs.value("T_UPLOAD",NULL,V_STRING) == strFor(88));
    end;

    if(rs)
        setCaption("Редактирование настроек");
        isInsert = false;
        TFsspEditSettings( objkakoyto, rs, id, key );
    else
        setCaption("Ввод настроек");
    end;

    setStatus("~F9~ Сохранить ~ESC~ Выход");

    addEventHandler( RSB_EV_KEY_PRESSED, R2M( this, "onSettingsPanelKeyPressed" ) );

    macro onSettingsPanelKeyPressed( rsbEvent:object )
        var rsSettings;
        var newId = 0;

        if( rsbEvent.keyCode == KEY_F9 )
            var loadCHR   = strFor(0);
            var upLoadCHR = strFor(0);

            if( CB_Loading.checked ) 
                loadCHR = strFor(88);
            end;

            if( CB_unLoading.checked ) 
                upLoadCHR = strFor(88);
            end;

            if(isInsert)
                rsSettings = rsdRecordset("SELECT NVL(MAX(T_ID),0) t_id FROM USR_FSSP_AGENT_SETTINGS");
                rsSettings.movenext;

                newId = rsSettings.value("t_id",NULL,V_INTEGER) + 1; 

                rsSettings = rsdCommand( " INSERT INTO USR_FSSP_AGENT_SETTINGS "
                                         "   VALUES   (:t_id, "
                                         "             :t_bankname, "
                                         "             :t_url, "
                                         "             :t_loadfreq, "
                                         "             :t_uploadfreq, "
                                         "             :t_load, "
                                         "             :t_upload) " );

                rsSettings.addParam("t_id",         RSDBP_IN, newId             );
                rsSettings.addParam("t_bankname",   RSDBP_IN, bankNameFld .value);
                rsSettings.addParam("t_url",        RSDBP_IN, urlFld      .value);
                rsSettings.addParam("t_loadfreq",   RSDBP_IN, loadFreqFld .value);
                rsSettings.addParam("t_uploadfreq", RSDBP_IN, upFreqFld   .value);
                rsSettings.addParam("t_load",       RSDBP_IN, loadCHR           );
                rsSettings.addParam("t_upload",     RSDBP_IN, upLoadCHR         );
                rsSettings.execute;

                close(1); // insert
            else
                rsSettings = rsdCommand( " UPDATE   USR_FSSP_AGENT_SETTINGS "
                                         "    SET   t_bankname   = :t_bankname, "
                                         "          t_url        = :t_url, "
                                         "          t_loadfreq   = :t_loadfreq, "
                                         "          t_uploadfreq = :t_uploadfreq, "
                                         "          t_load       = :t_load, "
                                         "          t_upload     = :t_upload "
                                         "  WHERE   t_id = :t_id " );
                rsSettings.addParam("t_bankname",   RSDBP_IN, bankNameFld .value);
                rsSettings.addParam("t_url",        RSDBP_IN, urlFld      .value);
                rsSettings.addParam("t_loadfreq",   RSDBP_IN, loadFreqFld .value);
                rsSettings.addParam("t_uploadfreq", RSDBP_IN, upFreqFld   .value);
                rsSettings.addParam("t_load",       RSDBP_IN, loadCHR           );
                rsSettings.addParam("t_upload",     RSDBP_IN, upLoadCHR         );
                rsSettings.addParam("t_id",         RSDBP_IN, idSettingFld.value);
                rsSettings.execute;

                close(2); // update
            end;
        end;
    end;
end;

macro exitScroll( objkakoyto, rs, id, key )
    scrollIsRunning = false;
    return CM_CANCEL;
end;

macro runEditSettingDialog(objkakoyto, rs, id, key)
    var panel = TFsspEditSettings(objkakoyto, rs, id, key);
        panel.setPosition(10, 5);
    var exitCode = panel.run;

    if  ( exitCode == 0 )
        return CM_IGNORE;
    elif( exitCode == 1 )
        return CM_CANCEL;
    elif( exitCode == 2 )
        return CM_CANCEL;
    end;
end;

macro runInsertSettingDialog(objkakoyto, rs, id, key)
    var panel = TFsspEditSettings();
        panel.setPosition(10, 5);
    var exitCode = panel.run;

    if  ( exitCode == 0 )
        return CM_IGNORE;
    elif( exitCode == 1 )
        return CM_CANCEL;
    elif( exitCode == 2 )
        return CM_CANCEL;
    end;
end;

macro deleteSetting(objkakoyto, rs, id, key)
    if(getTrue(false,"Вы уверены?"))
        rsdCommand( "DELETE FROM USR_FSSP_AGENT_SETTINGS WHERE T_ID = " + rs.value("T_ID", NULL, V_INTEGER) ).execute;
        return CM_CANCEL;
    end;

    return CM_IGNORE;
end;

class ( TRsbPanel ) TFsspRoBotPanel
    
    InitTRsbPanel();
    SetSize( PANEL_WIDTH, 1 );    

    var infoLines = TArray;
    var agentStateFld = EditField( FT_STRING, LEFT_POSITION + 6, CONTROLS_POSITION, 20, 1, GET_JOB_STATE_NAME, false, this );;

    class bankInfoLine( p_inum      :integer, 
                        p_recordset :variant,
                        p_panelLnk  :TRsbPanel
                      )

        var inum           = p_inum;
        var pos            = IDENT_INFOLINES*inum+INFOLINES_FIRST_POSITION;
        var loadFileFld    = EditField( FT_INTEGER, LEFT_POSITION + 10, pos, 4, 1, p_recordset.value("T_FILES",             NULL, V_INTEGER), false, p_panelLnk );
        var loadMsgFld     = EditField( FT_INTEGER, LEFT_POSITION + 15, pos, 4, 1, p_recordset.value("T_MESSAGES",          NULL, V_INTEGER), false, p_panelLnk );
        var processedMsgFld= EditField( FT_INTEGER, LEFT_POSITION + 20, pos, 4, 1, p_recordset.value("T_PROCESSED",         NULL, V_INTEGER), false, p_panelLnk );
        var manualMsgFld   = EditField( FT_INTEGER, LEFT_POSITION + 25, pos, 4, 1, p_recordset.value("T_MANUAL",            NULL, V_INTEGER), false, p_panelLnk );
        var uploadFiles    = EditField( FT_INTEGER, LEFT_POSITION + 30, pos, 4, 1, p_recordset.value("T_UPLOAD",            NULL, V_INTEGER), false, p_panelLnk );
        var logDateFld     = EditField( FT_DATE   , LEFT_POSITION + 40, pos, 9, 1, p_recordset.value("T_DATE",              NULL, V_DATE   ), false, p_panelLnk );
        var loadTimeFld    = EditField( FT_STRING , LEFT_POSITION + 50, pos,20, 1, p_recordset.value("T_LASTTIMELOAD",      NULL, V_DTTM   ), false, p_panelLnk );
        var processTimeFld = EditField( FT_STRING , LEFT_POSITION + 71, pos,20, 1, p_recordset.value("T_LASTTIMEPROCESSING",NULL, V_DTTM   ), false, p_panelLnk );
        var uploadTimeFld  = EditField( FT_STRING , LEFT_POSITION + 92, pos,20, 1, p_recordset.value("T_LASTTIMEUPLOAD",    NULL, V_DTTM   ), false, p_panelLnk );
        var bankId         = p_recordset.value( "T_ID", NULL, V_INTEGER );


        p_panelLnk.addLabel( TRsbLabel( LEFT_POSITION, pos, p_recordset.value("T_BANKNAME") ) );

        p_panelLnk.setSize( PANEL_WIDTH, pos + 2 );

        macro onRefreshBtnClicked( rsbEvent:object )
            var updateLogCmd = rsdCommand("BEGIN USR_FSSP_AGENT.get_bank_log(:bank_id, :log_date); END;");
                updateLogCmd.addparam( "bank_id" , RSDBP_IN, bankId           );
                updateLogCmd.addparam( "log_date", RSDBP_IN, logDateFld.value );
                updateLogCmd.execute;

            var getLogCmd = rsdCommand( " SELECT   * "
                                        "   FROM   USR_FSSP_AGENT_LOG "
                                        "  WHERE   T_BANKID = :bank_id AND T_DATE = :log_date; " );
                getLogCmd.addparam( "bank_id" , RSDBP_IN, bankId           );
                getLogCmd.addparam( "log_date", RSDBP_IN, logDateFld.value );

            var rsLog = rsdRecordSet(getLogCmd);

            if(rsLog.movenext)
                loadFileFld    .value = rsLog.value("T_FILES",             NULL, V_INTEGER);
                logDateFld     .value = rsLog.value("T_DATE",              NULL, V_DATE   );    
                loadMsgFld     .value = rsLog.value("T_MESSAGES",          NULL, V_INTEGER);
                processedMsgFld.value = rsLog.value("T_PROCESSED",         NULL, V_INTEGER);
                manualMsgFld   .value = rsLog.value("T_MANUAL",            NULL, V_INTEGER);
                uploadFiles    .value = rsLog.value("T_UPLOAD",            NULL, V_INTEGER);
                loadTimeFld    .value = rsLog.value("T_LASTTIMELOAD",      NULL, V_DTTM   );
                processTimeFld .value = rsLog.value("T_LASTTIMEPROCESSING",NULL, V_DTTM   );
                uploadTimeFld  .value = rsLog.value("T_LASTTIMEUPLOAD",    NULL, V_DTTM   );
            end;              
        end;

    end;

    macro initPanel
        var ipos = INFOLINES_FIRST_POSITION;
        var rs ;

        setSize( PANEL_WIDTH, 2 );

        addLabel( TRsbLabel( LEFT_POSITION, CONTROLS_POSITION, "СТАТУС" ) ); 

        var refresh_all   = pushButton("Обновить все",LEFT_POSITION+30,CONTROLS_POSITION,10,this);
        var enable_agent  = pushButton("Включить",    LEFT_POSITION+41,CONTROLS_POSITION,10,this);
        var disable_agent = pushButton("Выключить",   LEFT_POSITION+52,CONTROLS_POSITION,10,this);

        refresh_all  .addEventHandler(RSB_EV_BUTTON_CLICKED,R2M(this,"onRefreshBtnClicked"));
        enable_agent .addEventHandler(RSB_EV_BUTTON_CLICKED,R2M(this,"onEnableBtnClicked" ));
        disable_agent.addEventHandler(RSB_EV_BUTTON_CLICKED,R2M(this,"onDisableBtnClicked"));
/*
        BegAction(0);
        rsdCommand( "BEGIN USR_FSSP_AGENT.GET_LOCAL_LOG; END;" ).execute;
        EndAction;
*/
        addLabel( TRsbLabel( LEFT_POSITION,      LABELS_POSITION, "Банк"                ) );
        addLabel( TRsbLabel( LEFT_POSITION + 10, LABELS_POSITION, "Файлы"               ) );
        addLabel( TRsbLabel( LEFT_POSITION + 15, LABELS_POSITION, "Сообщ."              ) );
        addLabel( TRsbLabel( LEFT_POSITION + 20, LABELS_POSITION, "Обр."                ) );
        addLabel( TRsbLabel( LEFT_POSITION + 25, LABELS_POSITION, "Ручн."               ) );
        addLabel( TRsbLabel( LEFT_POSITION + 30, LABELS_POSITION, "Выгр."               ) );
        addLabel( TRsbLabel( LEFT_POSITION + 40, LABELS_POSITION, "Дата"                ) );
        addLabel( TRsbLabel( LEFT_POSITION + 50, LABELS_POSITION, "Последняя загрузка"  ) );
        addLabel( TRsbLabel( LEFT_POSITION + 71, LABELS_POSITION, "Последняя обработка" ) );
        addLabel( TRsbLabel( LEFT_POSITION + 92, LABELS_POSITION, "Последняя выгрузка"  ) );

        rs = rsdRecordset( " SELECT   STTNGS.T_ID, "
                           "          nvl(STTNGS.T_BANKNAME,' ') T_BANKNAME,"
                           "          nvl(LG.T_DATE,to_date('01.01.0001','dd.mm.yyyy')) T_DATE, "
                           "          nvl(LG.T_FILES,0)     T_FILES, "
                           "          nvl(LG.T_MESSAGES,0)  T_MESSAGES, "
                           "          nvl(LG.T_PROCESSED,0) T_PROCESSED, "
                           "          nvl(LG.T_MANUAL,0)    T_MANUAL, "
                           "          nvl(LG.T_UPLOAD,0)    T_UPLOAD, "
                           "          nvl(LG.T_LASTTIMELOAD,       to_date('01.01.0001 00:00:00','dd.mm.yyyy hh24:mi:ss')) T_LASTTIMELOAD, "
                           "          nvl(LG.T_LASTTIMEPROCESSING, to_date('01.01.0001 00:00:00','dd.mm.yyyy hh24:mi:ss')) T_LASTTIMEPROCESSING, "
                           "          nvl(LG.T_LASTTIMEUPLOAD,     to_date('01.01.0001 00:00:00','dd.mm.yyyy hh24:mi:ss')) T_LASTTIMEUPLOAD "
                           "   FROM   USR_FSSP_AGENT_SETTINGS STTNGS, "
                           "          USR_FSSP_AGENT_LOG LG "
                           "  WHERE       STTNGS.T_ID = LG.T_BANKID (+) "
                           "          and rownum < 16 AND LG.T_DATE(+) = TRUNC (sysdate) " );

        while( rs.movenext )
            infoLines[infoLines.size] = bankInfoLine( infoLines.size, rs, this );
            ipos = ipos + 1;
        end;

        addEventHandler( RSB_EV_KEY_PRESSED, R2M( this, "onKeyPressed" ) );
    end;

    macro onKeyPressed( rsbEvent:object )
        if( rsbEvent.keyCode == KEY_F7 )
            var scroll = ZubScroll ();                 
                scroll.Columns.Add ("T_ID"          , "id"                      ,  3, ZUB_SCR_COL_NONEDITABLE,0);
                scroll.Columns.Add ("T_BANKNAME"    , "банк"                    , 10, ZUB_SCR_COL_NONEDITABLE  );
                scroll.Columns.Add ("T_URL"         , "url"                     , 30, ZUB_SCR_COL_NONEDITABLE  );
                scroll.Columns.Add ("T_LOADFREQ"    , "периодичность загрузки"  , 10, ZUB_SCR_COL_NONEDITABLE,0);
                scroll.Columns.Add ("T_UPLOADFREQ"  , "периодичность выгрузки"  , 10, ZUB_SCR_COL_NONEDITABLE,0);
                scroll.Columns.Add ("T_LOAD"        , "загрузка"                , 10, ZUB_SCR_COL_NONEDITABLE  );
                scroll.Columns.Add ("T_UPLOAD"      , "выгрузка"                , 10, ZUB_SCR_COL_NONEDITABLE  );
                scroll.ScrollReadOnly = true;

                scroll.SqlText = " SELECT t_id, "
                                 "        T_BANKNAME, " 
                                 "        t_url, "
                                 "        T_LOADFREQ, "
                                 "        T_UPLOADFREQ,"
                                 "        nvl(T_LOAD,' ') T_LOAD, "
                                 "        nvl(T_UPLOAD,' ') T_UPLOAD"
                                 "   FROM USR_FSSP_AGENT_SETTINGS";

                scroll.ScrollHead   = "Настройки";
                scroll.scrollPrompt = "~ENTER~ Корректировка ~F8~ Удаление настроек ~F9~ Ввод настроек ~ESC~ Выход";
                scroll.SetMacroOnKeys(KEY_ESC,   "exitScroll"            );
                scroll.SetMacroOnKeys(KEY_ENTER, "runEditSettingDialog"  );
                scroll.SetMacroOnKeys(KEY_F8,    "deleteSetting"         );
                scroll.SetMacroOnKeys(KEY_F9,    "runInsertSettingDialog");
                scrollIsRunning = true;   

                while(scrollIsRunning)
                    scroll.was_getrecordset = false;
                    scroll.Scroll ();
                end;
        end;
    end;

    macro onRefreshBtnClicked( rsbEvent:object )
        InitProgress(infoLines.size,"Обновление....","Обновление....");
        var i = 0;
        if( infoLines.size > 0 )
            for(i,0,infoLines.size-1)
                infoLines[i].onRefreshBtnClicked;
                UseProgress ( i + 1 );
            end;
        end;

        agentStateFld.value = GET_JOB_STATE_NAME;
        RemProgress;
    end;

    macro onEnableBtnClicked( rsbEvent:object )
        enamble_job;
        agentStateFld.value = GET_JOB_STATE_NAME;
    end;

    macro onDisableBtnClicked
        disable_job;
        agentStateFld.value = GET_JOB_STATE_NAME;
    end;

    initPanel;
end;

var panel = TFsspRoBotPanel;
    panel.setPosition(10, 5);
    panel.setStatus("~F7~ Настройки ~ESC~ Выход");
    panel.run;
exit(1);