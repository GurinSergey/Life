/*************************************************************************************/
/*  RS-Bank 6.0                                          R-Style Software Lab        */
/*                                                                                   */
/*  File Name   : wlfnsgdRPO.mac                                                     */
/*  Created     : 01.12.2011                                                         */
/*  Programmer  : Chesnokov D.                                                       */
/*  Description : Макрос генерации учетного объекта запроса НО                       */
/*  Заявка      : C-7026                                                             */
/*  Изменен     : 20.07.2012 Chesnokov D.S. добавил заполнение параметров            */
/*                BankDate, SysDate, SysTime, UserId в функцию ВставитьСвязанныйСчет */
/*************************************************************************************/
Import MesInter, WldInter, globals, RSD, likepy;
import  "mnsRPOusr.mac", "fns_const.mac", "diver.mac"; 

record wlreqOtv(wlreq);

private macro GetAccountFIID( Account:string ):integer

  var select:string = "SELECT t_fiid"+
                     " FROM dfininstr_dbt " +
                     " WHERE t_fi_code = :Code";
                      
  var params:TArray = makeArray( SQLParam( "Code", substr( Account, 6, 3 ) ) );
  var rset:RsdRecordset = execSQLselect( select, params, TRUE );

  if( rset and rset.moveNext() )
    return rset.value(0);
  end;
  return -1;
end;

macro GenDoc (AddrMes)
if (not ВходитВГруппу({oper},197))
    msgBox("Вы не включены в группу \"197 - Обработка приостановлений по счетам\"");
    return false;
end;

  debugbreak;
  SetBuff( wlmes, addrMes );
  var error = 0, ReqID = -1, i = 0;
  var Message:MnsMessageFormRPO;
  var stat = 0, ClientId, rs;
  var cmd;

  printlog(2, "Генерация формы RPO");
  ClearRecord(wlreq);

  /* Заполнение учетных буферов */
  wlreq.Kind                     = MESKIND_REQUEST;
  wlreq.SubKind                  = 0;
  wlreq.Trn                      = Message.НомРешПр;
  wlreq.PmDateValue              = date( Message.ДатаРешПр );
  wlreq.RelatedRef               = wlmes.Trn;
  wlreq.OriginatorID             = ПолучитьКодСубъекта( Message.КодНО, PTCK_MNS, error );
  wlreq.OriginatorCodeKind       = PTCK_MNS;
  wlreq.OriginatorCode           = Message.КодНО;
  wlreq.OriginatorName           = Message.НаимНО; 
  wlreq.RecipientID              = {OurBank}; //wlmes.InsideAbonentID;
  wlreq.RecipientCodeKind        = PTCK_BIC; //wlmes.InsideAbonentCodekind;
  wlreq.RecipientCode            = {MFO_Bank}; //wlmes.InsideAbonentcode;
  wlreq.RecipientName            = {Name_Bank};
  wlreq.Corschem                 = -1;
  wlreq.FIID                     = -1;
  wlreq.Queries                  = substr(Message.Обстоят,1,215);

  debugbreak;
   
  if( not ВставитьЗапрос( wlreq, string(Message.КодОснов+": "+Message.НаимПрич), clientid, NULL, ReqID ) )
    std.msg("Ошибка при вводе запроса");
    return FALSE;
  end;

  if( ReqID > 0 )
    while( i < Message.НомСч.Size )
      ClearRecord( wlacclnk );
      wlacclnk.ObjectID      = ReqID;
      wlacclnk.ObjectType    = OBJTYPE_REQ;
      wlacclnk.Account       = Message.НомСч[i];
      wlacclnk.FIID          = GetAccountFIID( Message.НомСч[i] );
      wlacclnk.Chapter       = 1;
      wlacclnk.BankDate      = {curdate};
      wlacclnk.SysDate       = Date();
      wlacclnk.SysTime       = DtTm(Date, Time);
      wlacclnk.UserId        = {oper};
      if( not ВставитьСвязанныйСчет( wlacclnk ) )
        std.msg("Ошибка при вставке связанного счета");
      end;
      i = i + 1;
    end;
  end;
  
  return TRUE;

  OnError(er) /* обработка ошибок времени выполнения */

    return FALSE;

end;