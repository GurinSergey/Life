/*Функция BuildGround()
  Формирование назначения платежа или основания ТО по данным удержанной комиссии и буферу ДО. 
  Для единоразовых комиссий генерим назначение платежа, для периодических -основание ТО. 
Принимаемые параметры:
  - ComBuf - буфер удержанной комиссии
  - SfComiss - буфер 
  - SfContr - буфер ДО
Возвращаемый параметр:
 - Строка основание РДД.*/

import SfInter, BankInter, RSD;
import "sfconpaym.mac";
// EVG 27/07/2011
import fg_Life_parm;

private const NOTEKIND_COMISS_GROUND    = 1;
private const OBJTYPE_SFCOMISS          = 650;
private const OBJTYPE_SFSINGDF          = 664; // Удержанная разовая комиссия
private const NOTEKIND_COMISS_PARTYCODE = 101;  //корректировать при внедрении
private const NOTEKIND_COMISS_NUM_MONTH = 102;  //корректировать при внедрении
private const NOTEKIND_COMISS_YEAR = 103;  //корректировать при внедрении
// EVG 19/08/2011
private const NOTEKIND_COMISS_EXTNUMBER = 104;  // Расширенный номер договора


private macro GetCurrencyShortName( CCur ) : string

  var sqlString : string;
  var rs : RsdRecordset;

  sqlString = "SELECT t_Ccy FROM dfininstr_dbt WHERE t_fiid = " + CCur;

  rs = RsdRecordset( sqlString );

  if( rs.moveNext())
    return rs.value( 0 );
  end;

  return "";
end;

/*заменить спецпеременную без учета регистра*/
private macro ReplaceSpecVariable( ground, specVar, strToReplace )
  
  var VarIndex, groundOut = "";

  VarIndex = Index( StrUpr(ground), specVar );
  while( VarIndex > 0 )
    groundOut = groundOut + SubStr( ground, 1, VarIndex -1 ) + strToReplace;
    ground = SubStr( ground, VarIndex + strlen(specVar) );
    VarIndex = Index( StrUpr(ground), specVar );
  end;

  groundOut = groundOut + ground;

  return groundOut;

end;

/*Отрезать незначащие нули в дробной части. Если после точки все нули, то точку тоже вырезать */
private macro doubleValToStr( doubleVal )
  
  var Symbol, loop = true;
  var retStr = string(doubleVal); 

  while( loop )
    Symbol = substr( retStr, strlen(retStr), 1 );
    if( Symbol == "0" )
       retStr = substr( retStr, 1, strlen(retStr)-1 );
    elif( Symbol == "." )
       retStr = substr( retStr, 1, strlen(retStr)-1 );
       loop = false;
    else
       loop = false;
    end;
  end;

  if( strlen(retStr) == 0 )
    retStr = "0";
  end;

  return retStr;
end;



/* EVG Функция возвращает сумму и валюту первичного документа
   по переданному ID операции. */
macro GetPrimaryPaymentSum_FI( opID, rSum:@money, rFiid:@integer )

  var SQL, rs;

  SQL = " SELECT paym.t_amount, paym.T_FIID ";
  SQL = SQL + "  FROM dpmpaym_dbt paym, doproper_dbt op ";
  SQL = SQL + " WHERE op.t_id_operation = " + opID;
  /* EVG 9.02.2011 Убрал из-за того, что для ответных платежей op.t_dockind всегда 320,
     а paym.t_dockind может быть 320, а может 322. В принципе, условие по t_dockind из-
     лишне, т.к. по t_documentid в dpmpaym_dbt и так есть уникальный индекс.
  SQL = SQL + "   AND paym.t_dockind = op.t_dockind ";*/
  SQL = SQL + "   AND paym.t_documentid = LTRIM (op.t_documentid, '0') ";

  rs = rsdRecordSet( SQL );
  if (rs and rs.MoveNext())
     rSum  = rs.Value(0, null, V_MONEY);
     rFiid = rs.Value(1, null, V_INTEGER);

     return true;
  end;

  return false;
end;


/* EVG Функция возвращает номер первичного документа
   по переданному ID операции. */
macro GetPrimaryPaymentNumber( opID, rNumber:@string )

  var SQL, rs;

  SQL = " SELECT rmpr.t_number ";
  SQL = SQL + "  FROM dpmpaym_dbt paym, dpmrmprop_dbt rmpr, doproper_dbt op ";
  SQL = SQL + " WHERE op.t_id_operation = " + opID;
  SQL = SQL + "   AND paym.t_dockind    = op.t_dockind ";
  SQL = SQL + "   AND paym.t_documentid = LTRIM (op.t_documentid, '0') ";
  SQL = SQL + "   AND rmpr.t_paymentid  = paym.t_paymentid ";

  rs = rsdRecordSet( SQL );
  if (rs and rs.MoveNext())
     rNumber = rs.Value(0, null, V_STRING);

     return true;
  end;

  return false;
end;


//А.Киселев получим предыдущий месяц использовать с DateSplit
private macro GetPreviosMonth(Month:@integer, Year:@integer) :integer; 
var bufM, bufY;
 bufM = Month - 1;
 bufY = Year - 1;
 if ((bufM > 0) and (bufM <= 12 ) and ( Year > 0))
  Month = bufM;
  return 1;
 elif ( (bufM <= 0)  and ( bufY > 0) )
  Month = 12;
  Year = bufY;
  return 1;
 else
  return 0;
 end;
end;



/* EVG 27/07/2011 Функция предназначена для определения базовой суммы периодической комиссии
   за валютный контроль входящих платежей на основании данных таблицы USR_TRNSF_COMISS. */
macro GetInVoSum( defCom, sfContr )

  var SQL, cmd, rs;
  var baseSum = $0,
      fgBank  = fg_life_subject();

  fgBank.ConsrtuctByBic( {MFO_bank} );

  /* Для ПРББ, ВУЗ и НБС запрос один, для ГЭБ и ЭВ - другой, т.к. технологии работы с уведомлениями различаются */
  if ( fgBank.is_PRBB or fgBank.is_NBS or fgBank.is_VUZ )
  
        SQL = " SELECT   SUM( NVL(utc.SUM,0) ) ";
        SQL = SQL + "  FROM   dpmpaym_dbt pm, ";
        SQL = SQL + "         usr_trnsf_comiss utc, ";
        SQL = SQL + "         dsfcomiss_dbt com ";
        SQL = SQL + " WHERE       pm.t_futurereceiveraccount = ? ";
        SQL = SQL + "         AND pm.t_paymentid = utc.notify_num";
        SQL = SQL + "         AND utc.comdate BETWEEN ? ";
        SQL = SQL + "                                AND  ? ";
        SQL = SQL + "         AND com.t_number  = ? ";
        SQL = SQL + "         AND com.t_feetype = 1 ";
        SQL = SQL + "         AND utc.comid = com.t_number ";

  else
  
     /* Запрос взят один в один из GebComLib.mac -> GEB_GetComCurrencyControlSum, минимально видоизменён */
     if ( sfContr.Fiid > 0 )

        SQL = " SELECT   SUM( NVL(utc.SUM,0) ) ";
        SQL = SQL + "  FROM   dpmpaym_dbt pm, ";
        SQL = SQL + "         usr_trnsf_comiss utc, ";
        SQL = SQL + "         dsfcomiss_dbt com ";
        SQL = SQL + " WHERE       pm.t_futurereceiveraccount = ? ";
        SQL = SQL + "         AND pm.t_paymentid = ( Select Payment_Id From usr_trnsf_notify Where notify_num  = utc.notify_num ";
        // EVG 29.07.2011 Проверка даты больше не нужна SQL = SQL + "                                                                          and notify_date = utc.comdate )";

        /* EVG 16.02.2012 Сделаем проверку и на месяц, т.к. из-за того, что повторно обнулились счётчики, номера уведомлений дуб-
           лируются внутри года. */
        SQL = SQL + "                                   and to_char(notify_date, 'YYYY')||to_char(notify_date, 'MM') ";
        SQL = SQL + "                                     = to_char(utc.comdate, 'YYYY')||to_char(utc.comdate, 'MM') ) ";

        SQL = SQL + "         AND utc.comdate BETWEEN ? ";
        SQL = SQL + "                                AND  ? ";
        SQL = SQL + "         AND com.t_number  = ? ";
        SQL = SQL + "         AND com.t_feetype = 1 ";
        SQL = SQL + "         AND utc.comid = com.t_number ";
        
     else
        
        SQL = " SELECT   SUM( NVL(utc.SUM,0) )";
        SQL = SQL + "  FROM   dpmpaym_dbt pm, ";
        SQL = SQL + "         usr_trnsf_comiss utc, ";
        SQL = SQL + "         dsfcomiss_dbt com ";
        SQL = SQL + " WHERE       pm.t_futurereceiveraccount = ? ";
        SQL = SQL + "         AND pm.t_paymentid = utc.notify_num";
        SQL = SQL + "         AND EXISTS (SELECT   1 ";
        SQL = SQL + "                       FROM   usr_trnsf_notify_rur ";
        SQL = SQL + "                      WHERE   payment_id = utc.notify_num) ";
        SQL = SQL + "         AND utc.comdate BETWEEN ? ";
        SQL = SQL + "                                AND  ? ";
        SQL = SQL + "         AND com.t_number  = ? ";
        SQL = SQL + "         AND com.t_feetype = 1 ";
        SQL = SQL + "         AND utc.comid = com.t_number ";
        
     end;

  end;

  cmd = rsdcommand( SQL );
  cmd.AddParam("", RSDBP_IN, sfContr.Object);
  cmd.AddParam("", RSDBP_IN, defCom.DatePeriodBegin);
  cmd.AddParam("", RSDBP_IN, defCom.DatePeriodEnd);
  cmd.AddParam("", RSDBP_IN, defCom.CommNumber);
  rs = rsdRecordSet( cmd );

  if ( rs and rs.moveNext() )
     baseSum = rs.Value( 0, null, V_MONEY );
  end;

  return baseSum;
end;


macro BuildGround( ComBuf, SfComiss, SfContr )
  var ground = "";
  var month, year, ndsSum;
  var dateStr = "", monthStr = "", sumStr = "", quantityStr = "", ndsStr = "", contractStr = "",
      percentStr = "", sumPerUnitStr = "", strBegYear = "",
      monthPrevStr = "", PartyName = "", PartyID = 0, PartyIdStr = "", PartyCodeOne = "", MonthFromNote = "", YearFromNote = "" ;
  var fiidCCY = "";

  /* EVG Номер из формы разовой комиссии */
  var numberStr = "", BaseSum, FiidBaseSum;
  /* Chesnokov D. Номер и дата письма из формы разовой комиссии*/
  /*              Год для годовой комиссии 2.2.1               */
  var PostNumber, PostDate, YearStr;
    
  /* EVG 3/10/2011 Обработка новых спецпеременных {НАЧАЛО_ПЕРИОДА} / {КОНЕЦ_ПЕРИОДА} */
  var dPeriodBeg, dPeriodEnd;


  
  ground = readNoteForObject( OBJTYPE_SFCOMISS, MakeObjectID(OBJTYPE_SFCOMISS, NULL, SfComiss), NOTEKIND_COMISS_GROUND );
  if( ground == "" )
   /*генерим назначение по жестко прописанным правилам и возвращаем его.*/
   ground = "Оплата комиссии " + SfComiss.code;

   ndsSum = ComBuf.SumNDS;
   fiidCCY = GetCurrencyShortName( ComBuf.fiid_sum );
   
   if( ndsSum > $0 )
     ground = ground + ". В том числе НДС " + ndsSum + " " + fiidCCY +".";
   else
     ground = ground + ". НДС не облагается.";
   end;

  else  
    /*Заменяем в полученном шаблоне спец. переменные их значениями из ComBuf и SfContr*/    
    if( SfComiss.feeType == SF_FEE_TYPE_PERIOD ) /*периодическая комиссия*/      
      /*{Date} datePeriodEnd*/
      dateStr = string( ComBuf.datePeriodEnd );

      /*{Month} - Месяц и год, в котором взимается комиссия (например, "март 2009г.") от {Date}*/
      DateSplit( ComBuf.datePeriodEnd, NULL, month, year);
      monthStr = monname(month) + " " + string(year) + " г.";

      /*{Sum} baseSum, fiid_comm_sum   Базовая сумма, используемая при расчете комиссии в валюте расчета комиссии 
      с указанием буквенного кода ISO валюты расчета комиссии (например, 2000 USD).*/
      fiidCCY = GetCurrencyShortName( ComBuf.fiid_sum ); 

      /* EVG 27/07/2011 Для комиссий за ВК входящих платежей базовая сумма не хранится.
         Можно попробовать собрать её из USR_TRNSF_COMISS. */
      if ( index( strLwr(SfComiss.code), "in" ) > 0 )

         /* EVG 8/12/2011 Для этих комиссий базовый код валюты нужно брать не из рассчитанной комиссии (там рубли всегда),
            а логичнее всего - из ДО, т.к. по данному ДО (счёту) всегда проходят платежи только в одной валюте. */
         FiidBaseSum = GetCurrencyShortName( SfContr.fiid ); 
         
         sumStr = GetInVoSum( ComBuf, SfContr ) + " " + FiidBaseSum;

      else
         sumStr = string(ComBuf.baseSum) + " " + fiidCCY;
      end;

      /*{Quantity}*/
      quantityStr = string(ComBuf.BaseQuant);

      /*{Nds} ndsSum, fiid_comm_sum 
      Сумма НДС по комиссии в валюте счета-получателя комиссии с указанием буквенного кода ISO валюты. Например "120.50 RUR"*/
      ndsStr = string(ComBuf.SumNDS) + " " + fiidCCY;

      /*{Contract}*/
      contractStr = "№" + SfContr.number + " от "  + string(SfContr.dateConc);
      
      /*{Year} - Чесноков Д.С. 14 февраля 2010 для комиссии 2.2.1 возьмем год из даты оплаты*/ 
      DateSplit( ComBuf.datePeriodBegin, NULL, NULL, strBegYear);

      /* EVG 3/10/2011 Обработка новых спецпеременных {НАЧАЛО_ПЕРИОДА} / {КОНЕЦ_ПЕРИОДА} */
      DateSplit( {CurDate}, NULL, month, year );
      //dPeriodBeg = trim(string( ComBuf.datePeriodBegin ))
      dPeriodBeg = trim(string( date(1, month, year) ));
      dPeriodEnd = trim(string( ComBuf.datePeriodEnd ));
    
    
    elif( SfComiss.feeType == SF_FEE_TYPE_SINGLE ) /*единовременная*/
      /*{Date} dateFee*/
      dateStr = string( ComBuf.dateFee );
      
      /*{Month}*/
      DateSplit( ComBuf.dateFee, NULL, month, year );
      monthStr = monname(month) + " " + string(year) + " г.";

      /*{Sum} baseSum, fiid_sum */
      /* EVG Попробуем взять сумму и валюту из первичного документа */
      BaseSum     = ComBuf.baseSum;
      FiidBaseSum = ComBuf.fiid_sum;
      GetPrimaryPaymentSum_FI( ComBuf.Id_Operation, @BaseSum, @FiidBaseSum );
      fiidCCY = GetCurrencyShortName( FiidBaseSum ); 
      sumStr = string(BaseSum) + " " + fiidCCY;

      /* EVG Номер первичного документа */
      /* {Number} */
      GetPrimaryPaymentNumber( ComBuf.Id_Operation, @numberStr );

      /*{Quantity}*/
      quantityStr = "1";

      /*{Nds} sumNDS, fiid_sum */
      /* EVG 09/09/2011 В ед. комиссии fiidCCY - это валюта платежа, с которого берётся комиссия.
         Валюта НДС - это валюта платежа оплаты комиссии.
      ndsStr = string(ComBuf.sumNDS) + " " + fiidCCY;*/
      ndsStr = string(ComBuf.sumNDS) + " " + GetCurrencyShortName( ComBuf.fiid_sum );

      /*{Contract}*/
      if( SfContr != null )
        contractStr = "№" + SfContr.number + " от "  + string(SfContr.dateConc);
      end;

    elif( SfComiss.feeType == SF_FEE_TYPE_ONCE ) /*разовая*/
      /*{Date} commDate*/
      dateStr = string( ComBuf.DateFee );
      
      /*{Month}*/
      /* EVG 26/07/2011 Ошибка дистрибутива
      DateSplit( ComBuf.commDate, NULL, month, year );*/
      DateSplit( ComBuf.DateFee, NULL, month, year );
      monthStr = monname(month) + " " + string(year) + " г.";
      

// А.Киселев 13.04.2011
      PartyCodeOne = readNoteForObject_SQL( OBJTYPE_SFSINGDF, ComBuf.Id, NOTEKIND_COMISS_PARTYCODE );

      /*{MonthPrev}*/
      DateSplit( ComBuf.DateFee, NULL, month, year );
      if (GetPreviosMonth(@month, @year))
       monthPrevStr = monname(month) + " " + string(year) + " г.";
      else
       monthPrevStr = "";
      end;

      /*{MonthFromNote}*/
      MonthFromNote = readNoteForObject_SQL( OBJTYPE_SFSINGDF, ComBuf.Id, NOTEKIND_COMISS_NUM_MONTH );
      if ( MonthFromNote != "" )
       MonthFromNote = monname(int(MonthFromNote));
      end;

      /*{YearFromNote}*/
      YearFromNote = readNoteForObject_SQL( OBJTYPE_SFSINGDF, ComBuf.Id, NOTEKIND_COMISS_YEAR );
      if ( YearFromNote != "" )
       YearFromNote = YearFromNote + " г.";
      end;


      /*{PartyID}*/
      PartyId = GetClientId( PartyCodeOne );
      if (PartyId != 0)
       PartyIdStr = "( ID " + string(PartyId) + " )";
      else
       PartyIdStr = 0;
      end;

      /*{PartyName}*/
      PartyName = GetClientName_( PartyId );
// А.Киселев 13.04.2011
      
      
      /*{Sum} amountSum*/
      fiidCCY = GetCurrencyShortName( ComBuf.fiid_Sum );
      /* EVG 26/07/2011 Ошибка дистрибутива
      sumStr = string(ComBuf.amountSum) + " " + fiidCCY;*/
      sumStr = string(ComBuf.baseSum) + " " + fiidCCY;

      /*{Quantity}*/
      /* EVG 26/07/2011 Ошибка дистрибутива
      quantityStr = string(ComBuf.amount);*/
      quantityStr = string(ComBuf.baseQuant);

      /*{Nds} sumNDS*/
      ndsStr = string(ComBuf.sumNDS) + " " + fiidCCY;

      /*{Contract}*/
      if( SfContr != null )
        contractStr = "№" + SfContr.number + " от "  + string(SfContr.dateConc);
      end;

      /* EVG Номер из формы разовой комиссии */
      /* {Number} */
      numberStr = ComBuf.Code;
      
      /* EVG 19/08/2011 Так как длина поля "Номер" в форме разовой комиссии ограничена,
         реализовано сохранение номера в примечании вида 104 "Расширенный номер договора".
         Если примечание задано, номер берётся из него, иначе - из поля "Номер".
         Заявка № I-00087224-1. */
      var NumberInNote104 = readNoteForObject_SQL( OBJTYPE_SFSINGDF, ComBuf.Id, NOTEKIND_COMISS_EXTNUMBER );
      //msgbox ( NumberInNote104 );
      if ( NumberInNote104 )
         numberStr = NumberInNote104;
      end;

      /*09.11.2010 Chesnokov D. Доработка заполнения основания мемордера и проводки для комиссии 3.5.2
                                на основании заявки I-086612   */
      if (SfComiss.code == "3.5.2")
        if(not GetString(PostNumber, "Введите номер уточняющего письма", 20))
          PostNumber = 0;
        end;
        if(not GetDate(PostDate, "Введите дату уточняющего письма"))
          PostDate = date(0,0,0);
        end;
      end;

    end;

    /**/
    percentStr = doubleValToStr( ComBuf.Percent );
    
    sumPerUnitStr = string( money(ComBuf.Sum_Per_Unit) );
    if( ComBuf.Sum_Per_Unit > 0 )
      sumPerUnitStr = sumPerUnitStr + " " + GetCurrencyShortName( ComBuf.fiid_Tarscl );
    end;
    
    /* EVG Лишний пробел убрать
    ground = ReplaceSpecVariable( ground, "{DATE}", dateStr );*/
    ground = ReplaceSpecVariable( ground, "{DATE}", trim(dateStr) );

    ground = ReplaceSpecVariable( ground, "{MONTH}", monthStr );
    ground = ReplaceSpecVariable( ground, "{SUM}", sumStr );
    ground = ReplaceSpecVariable( ground, "{QUANTITY}", quantityStr );
    ground = ReplaceSpecVariable( ground, "{NDS}", ndsStr );
    ground = ReplaceSpecVariable( ground, "{CONTRACT}", contractStr );
    ground = ReplaceSpecVariable( ground, "{PERCENT}", percentStr );
    ground = ReplaceSpecVariable( ground, "{SUM_PER_UNIT}", sumPerUnitStr );

    /* EVG */
    ground = ReplaceSpecVariable( ground, "{NUMBER}", numberStr );
    /*Chesnokov D.*/
    ground = ReplaceSpecVariable( ground, "{POSTNUMBER}", PostNumber);
    ground = ReplaceSpecVariable( ground, "{POSTDATE}", PostDate);
    /*Chesnokov D. Добавил вывод года для комиссии 2.2.1*/
    ground = ReplaceSpecVariable( ground, "{YEAR}", strBegYear);

    //А.Киселев
    ground = ReplaceSpecVariable( ground, "{MONTHPREV}", monthPrevStr);
    ground = ReplaceSpecVariable( ground, "{PARTY_NAME}", PartyName);
    ground = ReplaceSpecVariable( ground, "{PARTY_ID}", PartyIdStr);
    ground = ReplaceSpecVariable( ground, "{MONTHFROMNOTE}", MonthFromNote);
    ground = ReplaceSpecVariable( ground, "{YEARFROMNOTE}", YearFromNote);
    //А.Киселев

    /* EVG 3/10/2011 Добавил обработку новых спецпеременных */
    ground = ReplaceSpecVariable( ground, "{НАЧАЛО_ПЕРИОДА}", dPeriodBeg);
    ground = ReplaceSpecVariable( ground, "{КОНЕЦ_ПЕРИОДА}", dPeriodEnd);


  end;

  return ground;

end;