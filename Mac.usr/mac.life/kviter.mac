/*SDA квитовка по текстовой выписке РКЦ */
import BankInter,rcw,rsd;
import rsexts,"commdlgs.d32";
import Globals;
import oralib, likepy;

var select,SQL:string;
var params:TArray;
var rs:object;     
var dt={curdate};
var _i=0,_j=0,_k=0,_pos=0,_sum =$0.0,ДК; 
var curnumb="";
private macro Win2Dos(s)
 private macro OEM2Char(WinChar)
  var DosN, WinN;
  WinN = CodeFor(WinChar);
  if ((WinN > 175) and (WinN < 192))
    DosN = WinN + 64;
  elif ((WinN > 191) and (WinN < 240))
    DosN = WinN - 64;
  elif ((WinN > 239) and (WinN < 256))
    DosN = WinN - 16;
  else
    DosN = WinN;
  end;
  Return StrFor(DosN);
 end; /* OEM2Char */

  var i = 1, ss = "";
  While ( i <= StrLen(s) )
    ss = ss + OEM2Char(SubStr(s,i,1));
    i = i + 1;
  end;
  Return ss;
end; /* Win2Dos */

private macro ChrSplitStr(cStr,aSegment,cChr)
var
  i=0,j=-1,l=StrLen(cStr),cC=cStr;

  While (i<l)
    if ((i=StrBrk((cC=substr(cC,i+1)),cChr))==0) i=l+1; end; 
    aSegment((j=j+1))=substr(cC,1,i-1);
  end;
end;

private macro SpacesOut(cStr);
var i;
  while((i=index(cStr,"  "))) cStr=strsubst(cStr,"  "," "); end;
  return(cStr);
end;

private macro PadL(cStr,nN,cSmb)
var cS=cStr;
  if (cSmb==null) cSmb=" ";end;
  if (nN>StrLen(cStr))
    cS=MkStr(cSmb,nN);
    StrSet(cS,nN-StrLen(cStr)+1,cStr);
  end;
  return(cS);
end;    

private macro PadR(cStr,nN,cSmb)
var cS=cStr;
  if (cSmb==null) cSmb=" ";end;
  if (nN>StrLen(cStr))
    cS=MkStr(cSmb,nN);
    StrSet(cS,1,cStr);
  end;
  return(cS);
end;



class DOCUMVIP();
var numdoc ="",vo="",bic="",payeracc="",reciveracc="",sumdoc=$0.0,numstr="",debetkredit=0, found=false; 
end;

class DOCUMDAY();
var numdoc ="",vo="",bic="",payeracc="",reciveracc="",sumdoc=$0.0,numstr="",debetkredit=0, found=false;  
end;

/************************************************************************************/
var ImportDir,errcode=0; 
    GetRegistryValue ( "PRBB\\МЕЖБАНКОВСКИЕ РАСЧЕТЫ\\ДИРЕКТОРИЯ ВЫПИСКИ", V_STRING, ImportDir, errCode ); 
   if (errCode !=0)
    ImportDir   =  "..\\Txtfile\\*.*";
   end;

var  XL_WorkBook_Path=ImportDir;
/*var book_path = Win2Dos(GetOpenFileName ("*.*"));*/
file  vipfile() txt;

  if ( not getdate(dt, "Введите дату выписки"))
    exit(0);
  end;

    select = "select t_name,t_number,t_fiid,t_account from dcorschem_dbt c where t_state=0 order by c.t_number,c.t_fiid";
    rs = RSDRecordset( RSDCommand(select));
var    count = 0;
array mas_schem;     
array mas_schem_id;  
array mas_schem_fiid;
array mas_schem_acc; 
      
    while (rs.MoveNext)
      mas_schem     (count) = rs.Value(0);
      mas_schem_id  (count) = rs.Value(1);
      mas_schem_fiid(count) = rs.Value(2);
      mas_schem_acc (count) = rs.Value(3);
      count = count + 1;
    end;
  
var  v_mas_schem = menu(mas_schem, "Выберите схему расчетов", "Выберите схему расчетов:");

    if (v_mas_schem<0)
      exit(1);
    end;
var  shemacc = mas_schem_acc(v_mas_schem);

/****** подготовка массива обектов документов выписки **********/
var stat = SelectFile(XL_WorkBook_Path, ImportDir,"Выберите файл для обработки");
array  aSegment;
var DOCUMVIPar = Tarray;

initprogress(-1,"Подготовка данных для квитовки","Подготовка данных для квитовки");
_j=0;_i = 0;

open(vipfile,XL_WorkBook_Path);
rewind (vipfile);
var nextvy = next(vipfile);
var _str= "", sum = $0.0, DebetKredit=0,cursize=0;

 while  (nextvy)
 useprogress(_j=_j+1);
 if (mas_schem_id(v_mas_schem) == 1) /* по выписке РКЦ */

    if (substr(vipfile.Str,14,2) == "04") /*БИК банка*/
        cursize = DOCUMVIPar.size;
        DOCUMVIPar[cursize] = DOCUMVIP;
        sum = Moneyl(trim(substr(vipfile.Str,75,22)));
        DebetKredit = 1;
        if (sum == $0)
         sum = Moneyl(trim(substr(vipfile.Str,98,22)));
         DebetKredit = 0;
        end;

         DOCUMVIPar[cursize].numdoc = PadL(trim(substr(vipfile.Str,1,9)),3,"0");  
         DOCUMVIPar[cursize].vo = trim(substr(vipfile.Str,11,2));  
         DOCUMVIPar[cursize].bic = trim(substr(vipfile.Str,14,9));  
         DOCUMVIPar[cursize].payeracc = trim(substr(vipfile.Str,30,20));  
         DOCUMVIPar[cursize].reciveracc = trim(substr(vipfile.Str,51,20));  
         DOCUMVIPar[cursize].sumdoc = sum; 
         DOCUMVIPar[cursize].numstr = trim(substr(vipfile.Str,121,6));  
         DOCUMVIPar[cursize].debetkredit = DebetKredit; 
         DOCUMVIPar[cursize].found = false; 
     end;

   elif (mas_schem_id(v_mas_schem) == 3) /*по выписке сбера */

     if (StrLen(trim(substr(vipfile.Str,49,35))) == 20) /*счет*/
          cursize = DOCUMVIPar.size;
          DOCUMVIPar[cursize] = DOCUMVIP;
          sum = Moneyl(trim(substr(vipfile.Str,104,18)));
         if (sum >$0.0) 
          DebetKredit = 0;
         else
          sum = Moneyl(trim(substr(vipfile.Str,85,18)));
          DebetKredit = 1;
         end;

         DOCUMVIPar[cursize].numdoc = trim(substr(vipfile.Str,29,9));  
         DOCUMVIPar[cursize].vo = trim(substr(vipfile.Str,20,8));  
/*       DOCUMVIPar[cursize].bic =  */
         if (DebetKredit == 0)
          DOCUMVIPar[cursize].payeracc = trim(substr(vipfile.Str,49,35));  
         else
          DOCUMVIPar[cursize].reciveracc = trim(substr(vipfile.Str,49,35));  
         end;
         DOCUMVIPar[cursize].sumdoc = sum; 
/*         DOCUMVIPar[cursize].numstr = */  
         DOCUMVIPar[cursize].debetkredit = DebetKredit; 
         DOCUMVIPar[cursize].found = false; 
     end;
   else
   msgbox(" Отсутствует функциональность для выбраннойй схемы расчетов ");
   exit(1);

  end; 
  nextvy = next(vipfile);

 end;

close(vipfile);

/****** подготовка массива обектов документов дня **********/
var DOCUMDAYar = Tarray;
/*Gurin S. 30.01.2014 Адаптация 2031
      SQL = " SELECT distinct pr.t_number, PR.T_SHIFROPER, PROP.T_BANKCODE, pm.t_payeraccount, pm.t_receiveraccount, pm.t_amount, ";
SQL = SQL + "\n         prop.t_debetcredit, pr.t_ground , pm.t_paymentid";
SQL = SQL + "\n    FROM darhdoc_dbt d, ";
SQL = SQL + "\n         dpmdocs_dbt pd, ";
SQL = SQL + "\n         dpmpaym_dbt pm, ";
SQL = SQL + "\n         dpmrmprop_dbt pr, ";
SQL = SQL + "\n         dpmprop_dbt prop ";
SQL = SQL + "\n   WHERE d.t_chapter = 1 ";
SQL = SQL + "\n     AND d.t_date_carry = ? ";
SQL = SQL + "\n     AND (   d.t_account_payer = ? ";
SQL = SQL + "\n          OR d.t_account_receiver = ? ";
SQL = SQL + "\n         ) ";
SQL = SQL + "\n     AND d.t_result_carry != 23 ";
SQL = SQL + "\n     AND d.t_iapplicationkind = pd.t_applicationkind(+) ";
SQL = SQL + "\n     AND d.t_applicationkey = pd.t_applicationkey(+) ";
SQL = SQL + "\n     AND d.t_chapter = 1 ";
SQL = SQL + "\n     AND pm.t_paymentid(+) = pd.t_paymentid ";
SQL = SQL + "\n     AND pr.t_paymentid(+) = pd.t_paymentid ";
SQL = SQL + "\n     AND prop.t_paymentid(+) = pd.t_paymentid ";
SQL = SQL + "\n     AND prop.t_debetcredit = ";
SQL = SQL + "\n                NVL ((SELECT 1 ";
SQL = SQL + "\n                        FROM DUAL ";
SQL = SQL + "\n                       WHERE d.t_account_receiver = ?), ";
SQL = SQL + "\n                     0) ";

SQL = SQL + "\n     ORDER BY prop.t_debetcredit, pm.t_amount ";
/*SQL = SQL + "\n     ORDER BY pm.t_amount ";*/                */

      SQL = " SELECT distinct pr.t_number, PR.T_SHIFROPER, PROP.T_BANKCODE, pm.t_payeraccount, pm.t_receiveraccount, pm.t_amount, ";
SQL = SQL + "\n         prop.t_debetcredit, pr.t_ground , pm.t_paymentid";
SQL = SQL + "\n    FROM dacctrn_dbt d, ";
SQL = SQL + "\n         dpmdocs_dbt pd, ";
SQL = SQL + "\n         dpmpaym_dbt pm, ";
SQL = SQL + "\n         dpmrmprop_dbt pr, ";
SQL = SQL + "\n         dpmprop_dbt prop ";
SQL = SQL + "\n   WHERE d.t_chapter = 1 ";
SQL = SQL + "\n     AND d.t_date_carry = ? ";
SQL = SQL + "\n     AND (   d.t_account_payer = ? ";
SQL = SQL + "\n          OR d.t_account_receiver = ? ";
SQL = SQL + "\n         ) ";
SQL = SQL + "\n     AND d.t_result_carry != 23 ";
SQL = SQL + "\n     AND d.t_acctrnid = pd.t_acctrnid(+) ";
SQL = SQL + "\n     AND d.t_chapter = 1 ";
SQL = SQL + "\n     AND pm.t_paymentid(+) = pd.t_paymentid ";
SQL = SQL + "\n     AND pr.t_paymentid(+) = pd.t_paymentid ";
SQL = SQL + "\n     AND prop.t_paymentid(+) = pd.t_paymentid ";
SQL = SQL + "\n     AND prop.t_debetcredit = ";
SQL = SQL + "\n                NVL ((SELECT 1 ";
SQL = SQL + "\n                        FROM DUAL ";
SQL = SQL + "\n                       WHERE d.t_account_receiver = ?), ";
SQL = SQL + "\n                     0) ";

SQL = SQL + "\n     ORDER BY prop.t_debetcredit, pm.t_amount ";

       params = makeArray(SQLParam(":dt"  , dt),
                          SQLParam(":shemacc1",shemacc),
                          SQLParam(":shemacc2",shemacc),
                          SQLParam(":shemacc3",shemacc));

  rs = execSQLselect( SQL, params, false );

  while( rs and rs.moveNext())
useprogress(_j=_j+1);
     cursize = DOCUMDAYar.size;
     DOCUMDAYar[cursize] = DOCUMDAY;
     DOCUMDAYar[cursize].numdoc      = Trim(rs.value("t_number"));
     DOCUMDAYar[cursize].vo          = Trim(rs.value("T_SHIFROPER"));
     DOCUMDAYar[cursize].bic         = Trim(rs.value("T_BANKCODE"));        
     DOCUMDAYar[cursize].payeracc    = Trim(rs.value("t_payeraccount"));    
     DOCUMDAYar[cursize].reciveracc  = Trim(rs.value("t_receiveraccount")); 
     DOCUMDAYar[cursize].sumdoc      = Moneyl(rs.value("t_amount"));          
     DOCUMDAYar[cursize].debetkredit = rs.value("t_debetcredit");
     DOCUMDAYar[cursize].found = false;
/* приведение номеров документов к формату выписки */
       curnumb = DOCUMDAYar[cursize].numdoc;
   if (mas_schem_id(v_mas_schem) == 1)  /*РКЦ - 3 знака дополненых слева нулями */
       curnumb= Padl(Trim(curnumb),3,"0");
       if (strlen(curnumb) > 3) curnumb = substr(curnumb,(strlen(curnumb) - 2)); end; 
       DOCUMDAYar[cursize].numdoc = curnumb;
   elif (mas_schem_id(v_mas_schem) == 3) /*Сбер - 6 знаков, слева нули */
       curnumb= PadL(Trim(curnumb),6,"0");
       curnumb=substr(curnumb,1,6);
      /* if (strlen(curnumb) > 6) curnumb = substr(curnumb,(strlen(curnumb) - 5)); end; */
       DOCUMDAYar[cursize].numdoc = curnumb;
   end;
  end;
remprogress;  

/******* тело квитовки **************/
var  cursizevip = DOCUMVIPar.size;
var  cursizeday = DOCUMDAYar.size;
var  found = false;

initprogress(DOCUMVIPar.size,"Квитовка документов выписки","Квитовка документов выписки");
[    Протокол квитовки платежей выписки за #            (отсутствуют в документах дня)
    ┌───┬──────┬──┬─────────┬────────────────────┬────────────────────┬───────────────┬─┐
    │ № │  №   │В │   БИК   │ Счет  плательщика  │   Счет получателя  │ Сумма платежа │Д│
    │п/п│ док  │ О│         │                    │                    │               │К│
    ├───┼──────┼──┼─────────┼────────────────────┼────────────────────┼───────────────┼─┤](dt);

_i=0;_j=0;_k=0;_pos=0;
 while (_i < cursizevip) 
     _j=_pos; found = false;
     _sum = DOCUMVIPar[_i].sumdoc;
     while ((_j <cursizeday) and (not found))

      if (not DOCUMDAYar[_j].found)

       if (                  (DOCUMDAYar[_j].numdoc == DOCUMVIPar[_i].numdoc) 
             and         (DOCUMDAYar[_j].debetkredit== DOCUMVIPar[_i].debetkredit)

             and  ((DOCUMDAYar[_j].bic =="") or (DOCUMDAYar[_j].bic == DOCUMVIPar[_i].bic) or (DOCUMVIPar[_i].bic == ""))       
             and  ((DOCUMDAYar[_j].payeracc=="") or (DOCUMDAYar[_j].payeracc == DOCUMVIPar[_i].payeracc) or (DOCUMVIPar[_i].payeracc == ""))  
             and  ((DOCUMDAYar[_j].reciveracc =="") or (DOCUMDAYar[_j].reciveracc == DOCUMVIPar[_i].reciveracc) or (DOCUMVIPar[_i].reciveracc ==""))
          /*   and (DOCUMDAYar[_j].vo         == DOCUMVIPar[_i].vo)         */
             and         (DOCUMDAYar[_j].sumdoc     == DOCUMVIPar[_i].sumdoc))     

             DOCUMDAYar[_j].found = true;
             DOCUMVIPar[_i].found = true;
             found = true;
             _pos = _j;
       end;
      end; 
       _j=_j+1;
     end;
      _pos=0;
     
      while ((_pos > 0) and (_sum <= DOCUMDAYar[_pos].sumdoc))
            _pos=_pos-1;
      end;
      
    if (not found)

  ДК = "Д"; if (DOCUMVIPar[_i].debetkredit == 1) ДК = "К"; end;
[   │###│######│##│#########│####################│####################│###############│#│
    ├───┼──────┼──┼─────────┼────────────────────┼────────────────────┼───────────────┼─┤]
(     _k=_k+1:r,
          DOCUMVIPar[_i].numdoc:r,
              DOCUMVIPar[_i].vo,
                 DOCUMVIPar[_i].bic,
                           DOCUMVIPar[_i].payeracc,
                                                DOCUMVIPar[_i].reciveracc,                              
                                                                     DOCUMVIPar[_i].sumdoc,
                                                                                    ДК
);
   end;
  _i=_i+1;
  useprogress(_i);
 end; 
[   └───┴──────┴──┴─────────┴────────────────────┴────────────────────┴───────────────┴─┘];     
remprogress;

/*********/

initprogress(DOCUMDAYar.size,"Квитовка документов дня","Квитовка документов дня");
[    Протокол квитовки документов дня за #            (отсутствуют в выписке)
    ┌───┬──────────┬──┬─────────┬────────────────────┬────────────────────┬───────────────┬─┐
    │ № │    №     │В │   БИК   │ Счет  плательщика  │   Счет получателя  │ Сумма платежа │Д│
    │п/п│   док    │ О│         │                    │                    │               │К│
    ├───┼──────────┼──┼─────────┼────────────────────┼────────────────────┼───────────────┼─┤](dt);

_i=0;_j=0;_k=0;_pos=0;
 while (_i < cursizeday) 
  if  (not DOCUMDAYar[_i].found)
     _j=0;_j =_pos;  found = false;
     _sum = DOCUMDAYar[_i].sumdoc;
  
     while ((_j <cursizevip) and (not found))

      if (not DOCUMVIPar[_j].found)


       if (                  (DOCUMDAYar[_i].numdoc == DOCUMVIPar[_j].numdoc) 
             and         (DOCUMDAYar[_i].debetkredit== DOCUMVIPar[_j].debetkredit)

             and  ((DOCUMDAYar[_i].bic =="") or (DOCUMDAYar[_i].bic == DOCUMVIPar[_j].bic) or (DOCUMVIPar[_j].bic == ""))       
             and  ((DOCUMDAYar[_i].payeracc=="") or (DOCUMDAYar[_i].payeracc == DOCUMVIPar[_j].payeracc) or (DOCUMVIPar[_j].payeracc == ""))  
             and  ((DOCUMDAYar[_i].reciveracc =="") or (DOCUMDAYar[_i].reciveracc == DOCUMVIPar[_j].reciveracc) or (DOCUMVIPar[_j].reciveracc ==""))
          /*   and (DOCUMDAYar[_j].vo         == DOCUMVIPar[_i].vo)         */
             and         (DOCUMDAYar[_i].sumdoc     == DOCUMVIPar[_j].sumdoc))     

             DOCUMDAYar[_i].found = true;
             DOCUMVIPar[_j].found = true;
             found = true;
             _pos = _j;
       end;
        end; 
       _j=_j+1;
     end;
     
      while ((_pos > 0) and (_sum <= DOCUMVIPar[_pos].sumdoc))
            _pos=_pos-1;
      end;

    if (not found)

  ДК = "Д"; if (DOCUMDAYar[_i].debetkredit == 1) ДК = "К"; end;
[   │###│##########│##│#########│####################│####################│###############│#│
    ├───┼──────────┼──┼─────────┼────────────────────┼────────────────────┼───────────────┼─┤]
(     _k=_k+1:r,
          DOCUMDAYar[_i].numdoc:r,
              DOCUMDAYar[_i].vo,
                 DOCUMDAYar[_i].bic,
                           DOCUMDAYar[_i].payeracc,
                                                DOCUMDAYar[_i].reciveracc,                              
                                                                     DOCUMDAYar[_i].sumdoc,
                                                                                    ДК
);
   end;

  end;
  _i=_i+1;
  useprogress(_i);
 end; 
[   └───┴──────────┴──┴─────────┴────────────────────┴────────────────────┴───────────────┴─┘];     
remprogress;

/*onerror(x);
Println(cursize);*/