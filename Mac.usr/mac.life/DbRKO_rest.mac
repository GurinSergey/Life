/*Дебиторская задолженность за РКО                                     */
/*                                                                     */
/*                                                                     */
/*Тихомиров А.Н. 09.04.2009                    Версия 1.1              */

/* EVG */

// А.Киселев адаптировано для ГЭБ и ВУЗ 12.11.2010
//30.04.2014 C-28764-6 - Шестизначная нумерация ВУЗ


import "fg_Life_parm.mac";

CONST en2="Фамилия исполнителя";
CONST en4="Фамилия руководителя"; 


import rsbdataset,bankinter, globals, календарь;
import "frontcommon.mac";
/*SDA 02.04.2012 - строка соединения из ТМ */
import "to_frontcommon.mac";

var  ex, ob, out, outputx="dbrko.xls", fulloutput, obBook, obsheet, i, reportdate, total;
var  text, result, percent, s:integer;

private var oConnection_lib = ActiveX("ADODB.Connection");

const  KEY_F1      =315;
const  KEY_F2      =316;
const  KEY_F3      =317;
const KEY_ESC      = 27;
const KEY_SPACE    = 32;
const KEY_ENTER    = 13;

var Fulloutputl, outl, outputl="dbrko.lbr";                    
GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
Fulloutputl = FindPath(outputl, outl);
var dlg = TRecHandler("dbrko", fulloutputl, TRUE); 


/*Подключение к фронту*/
private macro CallProcedure(Bic, Account)
  var oConnection = oConnection_lib, connstring, rsd;
  array aInput, aOutPut;

/*Подключение к фронту*/
macro front_open(conn,stri)
  conn2front(conn, stri);
END;

macro front_close
  if (oConnection and (oConnection.State == 1) )
     oConnection.Close();
  end;
END;



   /* Инициализация параметров */
   aInput(0) = Account;
   aInput(1) = Bic;
   asize(aOutput,0);
   
/*SDA 02/04/2012 - строка соединения из таблицы маршрутизации */
   if (get_string_2_front_connect(@connstring,1)==0)

       front_open(oConnection,connstring);

   else msgbox("не могу получить строку коннекта к ФРОНТ. причина: "+connstring);
   end;

   rsd = RSADORecordset(ExecuteFrontProcEx("rsb6_get_riskgroup", aInput, oConnection));
   result = 0;
   percent = 0;
   text = "";
    if (rsd.movenext())
        result = rsd.m_value[0];
        percent = rsd.m_value [1];
    end;
   if ((Result == 1) or (Result == 2) or (Result == 3) or (Result == 4))
     text = "Не определено";
   end;



   /* Если осталось открытое соединение, закрываем */
   if (oConnection and (oConnection.State == 1) )
      oConnection.Close();
   end;

  return 0;

END;





private macro outall
var total=0;
 if (IsStandAlone()) // Двухзвенка
              if ((ValType(ex)!=V_UNDEF) and (ex.Visible==False))
                ex = ActiveX("Excel.Application",NULL,false); 
              else
                ex = ActiveX("Excel.Application",NULL,true);
                
              end;
  else // Трехзвенка
            ob = CreateObject ("rsax","TRsAxServer","RsAxServer",IsStandAlone());
            ex = ob.CreateComObject ("Excel.Application",true);
  end; 
               
  GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,out);
  Fulloutput = FindPath(outputx, out);                    
  //msgbox (out, " - ", outputx, "|----------------|", Fulloutput);


  obBook = ex.Workbooks.open(fulloutput); 
  obSheet = obBook.ActiveSheet(); 
  initprogress(-1,"Ждите, производится расчет...","Производится расчет дебиторской задолженности");

  useprogress(-1);

  s=0;
//Выбираем остатки на дату                                                                                 
//Lavrenov добавил условие "and t_state = 0"                                                                             


  /* EVG 16/12/2013 Запрос адаптирован под версию 2031.
  var sq =  " SELECT D.T_NAME,                                                                               " +
            "        ( SELECT B.T_CODE FROM  dobjcode_dbt B                                                  " +
            "          WHERE B.T_OBJECTID=C.T_CLIENT AND B.T_CODEKIND=101 and t_state = 0                    " +
            "        ) AS CL_CODE, C.T_ACCOUNT, RSB_ACCOUNT.RESTA(C.T_ACCOUNT,?,1,C.T_R0) AS ACC_REST,       " +
            "        (SELECT MIN(G.T_DATE_VALUE) FROM drestdate_dbt G                                        " +
            "          WHERE G.T_CHAPTER=C.T_CHAPTER                                                         " +
            "                AND G.T_ACCOUNT = C.T_ACCOUNT                                                   " +
            "                AND G.T_CODE_CURRENCY=C.T_CODE_CURRENCY                                         " +
            "                AND (G.T_DATE_VALUE > (SELECT MAX(E.T_DATE_VALUE) FROM drestdate_dbt E          " +
            "                                      WHERE E.T_CHAPTER=C.T_CHAPTER                             " +
            "                                            AND E.T_ACCOUNT = C.T_ACCOUNT                       " +
            "                                            AND E.T_CODE_CURRENCY=C.T_CODE_CURRENCY             " +
            "                                            AND E.T_DATE_VALUE <= ?                             " +
            "                                            AND E.T_REST = 0                                    " +
            "                                     )                                                          " +
            "                     OR NOT EXISTS (SELECT H.T_DATE_VALUE FROM drestdate_dbt H                  " +
            "                                      WHERE H.T_CHAPTER=C.T_CHAPTER                             " +
            "                                            AND H.T_ACCOUNT = C.T_ACCOUNT                       " +
            "                                            AND H.T_CODE_CURRENCY=C.T_CODE_CURRENCY             " +
            "                                            AND H.T_DATE_VALUE <= ?                             " +
            "                                            AND H.T_REST = 0)                                   " +
            "                    )                                                                           " +
            "                AND G.T_REST <> 0                                                               " +
            "        ) AS DATE_REST,                                                                         " +
            "        (SELECT MIN(F.T_ACCOUNT) FROM daccount_dbt F WHERE                                      " +
            "            (F.T_ACCOUNT LIKE '452%' OR F.T_ACCOUNT LIKE '454%') AND F.T_CLIENT = C.T_CLIENT    " +
            "            AND RSB_ACCOUNT.RESTA(F.T_ACCOUNT,  ? ,1,F.T_R0) <> 0                               " +
            "        ) AS ACC_454_452,                                                                       " +
            "        ( SELECT T_NAME FROM ddp_dep_dbt WHERE T_CODE = C.T_BRANCH                              " +
            "        ) AS NUM_BRANCH                                                                         " +
            " FROM daccount_dbt C, dparty_dbt D                                                              " +
            " WHERE C.T_CHAPTER = 1                                                                          " +
            "       AND C.T_ACCOUNT LIKE '47423810%_300000%'                                                 " +
            "       AND RSB_ACCOUNT.RESTA(C.T_ACCOUNT, ? , 1,C.T_R0) <> 0                                    " +
            "       AND C.T_OPEN_DATE <=  ?                                                                  " +
            "       AND D.T_PARTYID = C.T_CLIENT                                                             " +
            " ORDER BY SUBSTR(T_ACCOUNT, 16, 5)                                                              " ;
*/

  var sq =  " SELECT D.T_NAME,                                                                               " +
            "        ( SELECT B.T_CODE FROM  dobjcode_dbt B                                                  " +
            "           WHERE B.T_OBJECTID=C.T_CLIENT AND B.T_CODEKIND=101 and t_state = 0                   " +
            "        ) AS CL_CODE, C.T_ACCOUNT, RSB_ACCOUNT.RESTA(C.T_ACCOUNT,?,1,0) AS ACC_REST,            " +
            "        (SELECT MIN(G.T_RESTDATE) FROM drestdate_dbt G                                          " +
            "          WHERE G.T_ACCOUNTID    = C.T_ACCOUNTID                                                " +
            "            AND G.T_RESTCURRENCY = C.T_CODE_CURRENCY                                            " +
            "            AND (G.T_RESTDATE    > (SELECT MAX(E.T_RESTDATE) FROM drestdate_dbt E               " +
            "                                     WHERE E.T_ACCOUNTID    = C.T_ACCOUNTID                     " +
            "                                       AND E.T_RESTCURRENCY = C.T_CODE_CURRENCY                 " +
            "                                       AND E.T_RESTDATE    <= ?                                 " +
            "                                       AND E.T_REST         = 0                                 " +
            "                                     )                                                          " +
            "                     OR NOT EXISTS (SELECT H.T_RESTDATE FROM drestdate_dbt H                    " +
            "                                     WHERE H.T_ACCOUNTID    = C.T_ACCOUNTID                     " +
            "                                       AND H.T_RESTCURRENCY = C.T_CODE_CURRENCY                 " +
            "                                       AND H.T_RESTDATE    <= ?                                 " +
            "                                       AND H.T_REST         = 0)                                " +
            "                    )                                                                           " +
            "                AND G.T_REST <> 0                                                               " +
            "        ) AS DATE_REST,                                                                         " +
            "        (SELECT MIN(F.T_ACCOUNT) FROM daccount_dbt F WHERE                                      " +
            "            (F.T_ACCOUNT LIKE '452%' OR F.T_ACCOUNT LIKE '454%') AND F.T_CLIENT = C.T_CLIENT    " +
            "            AND RSB_ACCOUNT.RESTA(F.T_ACCOUNT,  ? , 1, 0) <> 0                                  " +
            "        ) AS ACC_454_452,                                                                       " +
            "        ( SELECT T_NAME FROM ddp_dep_dbt WHERE T_CODE = C.T_BRANCH                              " +
            "        ) AS NUM_BRANCH                                                                         " +
            " FROM daccount_dbt C, dparty_dbt D                                                              " +
            " WHERE C.T_CHAPTER = 1                                                                          " +
            "       AND c.t_account LIKE '47423810_30_00%'                                                   " + //30.04.2014 C-28764-6 - Шестизначная нумерация ВУЗ
            "       AND RSB_ACCOUNT.RESTA(C.T_ACCOUNT, ? , 1, 0) <> 0                                        " +
            "       AND C.T_OPEN_DATE <=  ?                                                                  " +
            "       AND D.T_PARTYID = C.T_CLIENT                                                             " +
            " ORDER BY SUBSTR(T_ACCOUNT, 16, 5)                                                              " ;



//Выбираем остатки на дату
  i=0;

  var cmd1 = rsdcommand ( sq );
  cmd1.addparam("d_param_1", RSDBP_IN, reportdate); //???????????????исправить убрать конвертацию и поправить запрос
  cmd1.addparam("d_param_2", RSDBP_IN, reportdate);
  cmd1.addparam("d_param_3", RSDBP_IN, reportdate);
  cmd1.addparam("d_param_4", RSDBP_IN, reportdate);
  cmd1.addparam("d_param_5", RSDBP_IN, reportdate);
  cmd1.addparam("d_param_6", RSDBP_IN, reportdate);
  cmd1.execute;
  var datas = rsdrecordset(cmd1);


  obSheet.Cells(1,1).Value="Отчет по Дебиторской задолженности за РКО на заданную дату";
  obSheet.Cells(3,1).Value="ОАО АКБ Пробизнесбанк";
  obSheet.Cells(4,1).Value="По состоянию";
  obSheet.Cells(4,3).Value=reportdate;
  obSheet.Cells(6,1).Value="№ п/п ";
  obSheet.Cells(6,2).Value="Наименование клиента";
  obSheet.Cells(6,3).Value="RS-код клиента";
  obSheet.Cells(6,4).Value="Лицевой счет по маске 47423810K30000NNNNNN"; //30.04.2014 C-28764-6 - Шестизначная нумерация ВУЗ
  obSheet.Cells(6,5).Value="Подр.";
  obSheet.Cells(6,6).Value="Сумма остатка на отчетную дату";
  obSheet.Cells(6,7).Value="Дата образования остатка";
  obSheet.Cells(6,8).Value="Наличие/отсутствие остатка на 452,454 бал. счетах";
  obSheet.Cells(6,9).Value="Группа риска по ссуде";

/* EVG Для дочерних банков должно указываться их название */
  var fgBank = fg_life_subject( {OurBank} );
  if ( fgBank.is_VUZ )
     obSheet.Cells(3,1).Value = "ОАО \"ВУЗ-банк\"";
  elif ( fgBank.is_EXV )
     obSheet.Cells(3,1).Value = "ЗАО АКБ\"ЭКСПРЕСС-ВОЛГА\"";
  elif ( fgBank.is_GEB )
     obSheet.Cells(3,1).Value = "ОАО \"ГАЗЭНЕРГОБАНК\"";
  end;


  while (datas.movenext())    //acc
   useprogress(s);
   s=s+1;

   total = total + datas.value(3);
   i=i+1;
   obSheet.Cells(i+6,1).Value = i;
   obSheet.Cells(i+6,2).Value = datas.value(0);
   obSheet.Cells(i+6,3).Value = datas.value(1);
   obSheet.Cells(i+6,4).Value = datas.value(2);
   obSheet.Cells(i+6,5).Value = datas.value(6);
   obSheet.Cells(i+6,6).Value = abs(datas.value(3));
   obSheet.Cells(i+6,7).Value = datas.value(4);
   if ( valtype(datas.value(5)) != 26 )
    obSheet.Cells(i+6,8).Value= "Да";
       CallProcedure({MFO_Bank}, datas.value(5));
     if (not text)
       if ( (valtype(result) != 26) and (valtype(percent) != 26) )
        obSheet.Cells(i+6,9).Value = result+" "+string(percent)+"%";
       else
        obSheet.Cells(i+6,9).Value = "Отсутствуют данные из Front";
       end;
     else
       obSheet.Cells(i+6,9).Value=text;
     end;

   else
    obSheet.Cells(i+6,9).Value="";
    obSheet.Cells(i+6,8).Value= "Нет";
   end;
  end; //acc

  obSheet.Cells(i+8,2).Value="ИТОГО ДОКУМЕНТОВ:";
  obSheet.Cells(i+8,3).Value=i;
  obSheet.Cells(i+8,4).Value="Общая сумма:";
  obSheet.Cells(i+8,6).Value=abs(total);
  obSheet.Cells(i+10,2).Value="Ответственный исполнитель";
  obSheet.Cells(i+10,5).Value=En2;
  obSheet.Cells(i+12,2).Value="Начальник Управления Организации Расчетов:";
  obSheet.Cells(i+12,5).Value=En4;
  obSheet.Range("A6:I"+(i+6)).Borders.Weight=2;
  remprogress(s);
  Ex.visible = true;
end;


 /*Обработчик диалоговой панели ввода исходных данных для печати*/
MACRO Event (dlg, cmd, id, key) 

   var const_mess = " ~F3~ Выбор даты из календаря ~F2~ Продолжить ~ESC~ Выход ";

   /*Первоначальная инициализация полей*/
   if(cmd == DLG_INIT)
      dlg.rec.reportdate = {curDate};
      UpdateFields(dlg); 
   end;
   
   /*Установка подсказок в строке состояния*/
   if (cmd==DLG_SETFOCUS)
       message(const_mess);
   end;
   
   if (cmd == DLG_REMFOCUS)
     /*Проверка корректности дат отчета*/
      UpdateFields(dlg); 
   end;

   if (cmd == DLG_KEY)
     /*Выход из диалогового окна формирования отчета*/
     if (KEY == KEY_ESC)
       return exit(1);//CM_CANCEL;
     /*Выбор данных из списка*/
     elif ( KEY == KEY_F3)
        /*Выбор даты из календаря*/
        if (FldName(dlg,id) == "ReportDate")
          dlg.rec.ReportDate = GetDateByCalendar ({curDate}-1);
        end;
        
     elif (( KEY == KEY_F2 ) or (KEY == KEY_ENTER))         //Проверки при вводе
         if ( dlg.rec.ReportDate > {curdate} )
                MsgBox("Дата должна быть не больше даты текущего операционного дня");
                return CM_IGNORE;
         end;
        ReportDate  = dlg.rec.ReportDate;
        Return CM_SAVE;
     end;
      else
           Return CM_IGNORE;
   end;
        
END;

/*Точка входа в макрос*/
if (RunDialog(dlg, "Event"))                  
  OutAll;
end; 
End;
