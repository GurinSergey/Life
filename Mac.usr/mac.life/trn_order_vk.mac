/**************************************************************************************************/
/*                                                                               R-Style Softlab  */
/*                                                                                                */
/*    Функциональность: Распоряжения по транзитному счету                                         */
/*              Макрос: Макрос шага валютного контроля                                            */
/*               Автор: Селезнев                                                                  */
/*           Изменения: 12.02.2014 Chesnokov D.S. Адаптация для 2031. Убрал {SelfID}, старые и    */
/*                      неиспользуемые куски кода, неактуальные комментарии                       */
/*                      2014-02-20 Jushmanov C-19151 Логгирование массово выполенных шагов        */
/**************************************************************************************************/
import PaymInter, PSInter, rsd, globals, "trn_order_common.mac", "cbsttls.mac";
import op_lib, CommissLib;
import OprInter, oralib; //Jushmanov 2014-02-20 C-19151

var PaymentObj:RsbPayment;
var oper2docs;

macro check_execdocs

  var cmd, rs, sum;
  
  cmd = RSDCommand("select   1 " +
                   "  from   (select   sell_sum, " +
                   "                   transf_sum, " +
                   "                   nvl ( (select   t_paymstatus " +
                   "                            from   dpmpaym_dbt " +
                   "                           where   t_paymentid = sell_docid), -1) " +
                   "                      sell_stat, " +
                   "                   nvl ( (select   t_paymstatus " +
                   "                            from   dpmpaym_dbt " +
                   "                           where   t_paymentid = transf_docid), -1) " +
                   "                      transf_stat " +
                   "            from   usr_trnsf_order t " +
                   "           where   PaymentId = ? ) " +
                   " where   (sell_sum > 0 and sell_stat <> 32000) or (transf_sum > 0 and transf_stat <> 32000) "
                  );
  cmd.addparam("PaymentId", RSDBP_IN, PaymentObj.PaymentID);
  

  rs = RSDRecordset(cmd);

  sum = PaymentObj.ReceiverAmount - getusedsum(PaymentObj.PaymentID);
  if (sum != 0 )
     MsgBox("По платежу зарегистрированы не все распоряжения, не распределенная сумма "+sum);
     return 1;
  elif (rs.movenext)
     Msgbox("По платежу не проведены все документы исполнения распоряжений");
     return 1;
  end;

  return 0;

end;

macro create_doc(order_rec:rsdrecordset)

   var BcOrder:object;
   var PSOrder:object;
   var Payment:RsbPayment;
   var prim_payment = RSBPayment(order_rec.value("payment_id"));
   var stat, cmd;

   if ((order_rec.value("sell_sum") > 0) and (order_rec.value("sell_docid") == 0))

      BcOrder = GenObject( "RsbBuyCurrencyOrder", 0 );
      Payment = BcOrder.Payment;

      BcOrder.BCOrdKind        = PSBCKIND_PAY;
      BcOrder.ConvOper         = KINDOPCONV_BUY;
      BcOrder.Oper             = oper2docs;//PaymentObj.Oper;
      BcOrder.State            = PSBCORD_ST_DEFERRED;
      BcOrder.BankFunds        = true;
      BcOrder.Origin           = 2000;//Продажа на основании распоряжения к транзитному счету

      Payment.Oper             = BcOrder.Oper;
      Payment.Number           = order_rec.value("order_num");
      Payment.ClientDate       = 
      Payment.Date             = 
      Payment.ValueDate        = {curdate};//order_rec.value("date_value");

      Payment.DocKind          = PS_BUYCURORDER;
      Payment.Purpose          = PM_PURP_PSBCCONV;

      Payment.PayerFIID        = prim_payment.receiverfiid;
      Payment.ReceiverFIID     = NATCUR;

      Payment.PayerAmount      = order_rec.value("sell_sum");
      Payment.BaseAmount       = order_rec.value("sell_sum");
      Payment.ReceiverAmount   = order_rec.value("sell_sum")*order_rec.value("sell_rate")/order_rec.value("sell_scale");

      /* EVG 21/06/2012 Проверка того, что в распоряжении указан счёт */
      if( SQL_ConvTypeStr( order_rec.value("sell_account") ) == "" )
         msgbox( "В распоряжении по тр.сч. не указан счёт продажи валюты" );
         return false;
      end;
      
      Payment.SetPayerPI( PAYMENTS_GROUP_UNDEF, 
                          {OurBank}, 
                          0, 
                          "", 
                          "",
                          "",
                          prim_payment.receiverfiid, 
                          1/*CHAPT1*/, 
                          order_rec.value("pay_acc"), 
                          0, 
                          "", 
                          "" );

      Payment.SetReceiverPI( PAYMENTS_GROUP_UNDEF, 
                          0, 
                          PTCK_BIC, 
                          rs_nvl(order_rec.value("sell_bik"),""),
                          "",
                          "",
                          0, 
                          1/*CHAPT1*/, 
                          order_rec.value("sell_account"), 
                          0, 
                          "", 
                          "" );

      Payment.BaseFIID = prim_payment.receiverfiid;
      Payment.IsFixPayerAmount = "X";
      Payment.LinkPayment(prim_payment, 2000, order_rec.value("order_num"));
      Payment.Ground = "Продажа валюты на основании распоряжения по транзитному счету N"+order_rec.value("order_num")+" от "+date(order_rec.value("date_value"));

      BcOrder.LaunchOper = true;
   end;

   if ((order_rec.value("transf_sum") > 0) and (order_rec.value("transf_docid") == 0))

      PSOrder = GenObject( "RsbPSCpOrder", 0 );
      Payment = PSOrder.Payment;

      PSOrder.Oper             = oper2docs;//PaymentObj.Oper;
      PSOrder.CurrentState     = PSPO_ST_DEFERRED;
      PSOrder.Origin           = 2000;//Перечисление на основании распоряжения к транзитному счету

      Payment.Oper             = PSOrder.Oper;
      Payment.Purpose          = 7;
      Payment.Number           = order_rec.value("order_num");
      Payment.ClientDate       = 
      Payment.Date             = 
      Payment.ValueDate        = {curdate};//order_rec.value("date_value");
                         
      Payment.DocKind          = PS_CPORDER;

      Payment.ReceiverFIID     = 
      Payment.PayerFIID        = 
      Payment.BaseFIID         = prim_payment.receiverfiid;

      Payment.PayerAmount      = 
      Payment.ReceiverAmount   = 
      Payment.BaseAmount       = order_rec.value("transf_sum");

      /* EVG 21/06/2012 Проверка того, что в распоряжении указан счёт */
      if( SQL_ConvTypeStr( order_rec.value("transf_account") ) == "" )
         msgbox( "В распоряжении по тр.сч. не указан счёт перечисления валюты" );
         return false;
      end;

      Payment.SetPayerPI( PAYMENTS_GROUP_UNDEF, 
                          {OurBank}, 
                          PTCK_SWIFT, 
                          "", 
                          "",
                          "",
                          prim_payment.receiverfiid, 
                          1/*CHAPT1*/, 
                          order_rec.value("pay_acc"),
                          0, 
                          "", 
                          "" );

      Payment.SetReceiverPI( PAYMENTS_GROUP_UNDEF, 
                          {OurBank}, 
                          PTCK_SWIFT,
                          "",
                          "",
                          "",
                          prim_payment.receiverfiid, 
                          1/*CHAPT1*/, 
                          order_rec.value("transf_account"), 
                          0, 
                          "", 
                          "" );

      Payment.Ground = "Перевод валюты на основании распоряжения по транзитному счету N"+order_rec.value("order_num")+" от "+date(order_rec.value("date_value"));
      // Установить признак автозапуска операции.
      PSOrder.LaunchOper = true;
   end;

   return true;
end;

macro ExecuteStep( Kind_Operation, first, KindDoc, ID_Operation, Id_step )

   var cmd, rs, sum, stat = 1;
   var vk_stat=2, usedsum = $0;

   cmd = RSDCommand("select t_oper from doprstep_dbt where t_symbol = 'г' and t_isexecute = 'X' and t_ID_Operation = ?");
   cmd.addparam("oprid", RSDBP_IN, ID_Operation);
   rs = RSDRecordset(cmd);
   rs.MoveNext;
   oper2docs = rs.value(0);

   cmd = RSDCommand  (
                      "select   notify_num,   " +
                      "         order_num,   " +
                      "         date_value,   " +
                      "         sell_sum,   " +
                      "         sell_rate,   " +
                      "         sell_scale,   " +
                      "         sell_account,   " +
                      "         sell_bik,   " +
                      "         sell_docid,   " +
                      "         transf_docid,   " +
                      "         transf_sum,           " +
                      "         transf_account,   " +
                      "         origin, " +
                      "         pay_acc,        " +
                      "         payment_id " +  // EVG 11/03/2011 Добавил.
                      "  from   (select   order_num,   " +
                      "                   date_value,   " +
                      "                   sell_sum,   " +
                      "                   sell_rate,   " +
                      "                   nvl(sell_account,' ') sell_account ,   " +
                      "                   nvl(sell_bik, '"+{MFO_BANK}+"') sell_bik,   " +
                      "                   transf_sum,  " +
                      "                   nvl((select   pmr.t_paymentid from doprdocs_dbt st, dpmrmprop_dbt pmr   " +
                      "                     where  st.t_id_operation = op.t_id_operation  " +
                      "                             and t_dockind = 200  " +
                      "                             and pmr.t_paymentid = st.t_documentid  " +
                      "                             and pmr.t_number = order_num  " +
                      "                             ),0)   " +
                      "                      sell_docid,   " +
                      "                   nvl((select   pmr.t_paymentid from doprdocs_dbt st, dpmrmprop_dbt pmr   " +
                      "                     where  st.t_id_operation = op.t_id_operation  " +
                      "                             and t_dockind = 202  " +
                      "                             and pmr.t_paymentid = st.t_documentid  " +
                      "                             and pmr.t_number = order_num),0)   " +
                      "                      transf_docid,   " +
                      "                   transf_account,   " +
                      "                   decode (origin, 0, 'Создан вручную', 1, 'Интербанк', 'Неизвестно') orig_name,   " +
                      "                   o.notify_num,   " +
                      "                   origin,   " +
                      "                   sell_scale, " +
                      "                   nvl((select t_account from dpmaddpi_dbt where t_paymentid = n.payment_id ), " +
                      "                   (select t_futurereceiveraccount from dpmpaym_dbt where t_paymentid = n.payment_id)) pay_acc,   " +
                      "                   n.payment_id " +      // EVG 11/03/2011 Добавил.
                      "            from   usr_trnsf_order o,  usr_trnsf_notify n, doproper_dbt op  " +

                      "           where   o.PaymentID = ? " +
                      "             and   n.Payment_ID = o.PaymentID " +
                      "             and   op.t_documentid = lpad(o.PaymentID, 34 , '0') and op.t_dockind = 320 )  " +
                      "where (sell_docid = 0 and sell_sum > 0) or (transf_docid = 0 and transf_sum > 0)  "
                      );
   cmd.AddParam("PaymentId", RSDBP_IN, PaymentObj.PaymentID);   

   rs = RSDRecordset(cmd);

   usedsum = getusedsum(PaymentObj.PaymentID);
   if (usedsum > double(PaymentObj.ReceiverAmount)) //TAM 24.12.12
      msgbox("Сумма распоряжений превышает сумму платежа");
      return 1;
   end;

   while (rs.movenext)
      stat = 0;
      /* EVG 21/06/2012 Сделал обработку значения, возвращаемого create_doc() */
      if( not create_doc(rs) )
         return 1;
      end;
   end;


   if (usedsum != double(PaymentObj.PayerAmount))//TAM 11.09.2013 R-246122
      vk_stat = 1;
      //зацикливаем обработку пока не все распоряжения исполнены
   end;

   if( УстановитьСтатусыПлатежа(119, vk_stat) ) //Исполнение распоряженния к тр. счету = требуется
      MsgBox( "Возникла ошибка при смене статусов операции платежа" );
      return 1;
   /* EVG Выбор тарифов комиссий за ВК и сохранение в примечании */
   else
      stat = Execute_CC_CommissionChoice( PaymentObj, Id_step );
   end;

   if (stat == 0)
      msgbox ("Документ проконтролирован ВК");
   end;

   return stat;
end;

macro PostStepAction( message,     /* данный параметр может принимать следующие */
                                   /* значения: 1 - выполнение шага; 2 - откат шага;  */
                      errTrn,      /* статус выполнения шага. Если параметр не равен 0*/
                                   /* произошла ошибка                                */
                      FirstDoc,    /* указатель на первичный документ                 */
                      ID_Oper,     /* внутренний идентификатор операции               */
                      Number_Step, /* номер шага операции          */
                      KindOper,    /* номер вида операции                             */
                      KindDoc,     /* номер вида первичного документа                 */
                      KindStep,    /* вид шага операции                               */
                      ID_Step )    /* идентификатор шага операции                     */
    var  SQL, cmd;
    private var logquery;

    //Jushmanov 2014-02-20 C-19151
    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(ID_Oper) != V_INTEGER) and (valtype(ID_Oper) != V_STRING)) ID_Oper = 0; end;
        if ((valtype(ID_Step) != V_INTEGER) and (valtype(id_Step) != V_STRING)) ID_Step = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + ID_Oper + " AND t_id_step = " + ID_Step;
        ExecSQL(logquery, null, false);
    end;

    /*FIV при откате удаляем комиссии за ВК*/
    if((message== OP_BACKOUT_STEP) AND (errTrn == 0))
        SQL = " DELETE   usr_trnsf_comiss utc ";
        SQL = SQL + " WHERE   utc.id_step = ? ";
        SQL = SQL + "         AND utc.notify_num = (SELECT   LTRIM (oo.t_documentid, '0') ";
        SQL = SQL + "                                 FROM   doproper_dbt oo ";
        SQL = SQL + "                                WHERE   oo.t_id_operation = ?) ";
        cmd = rsdcommand(sql);
        cmd.AddParam("", RSDBP_IN,ID_Step);
        cmd.AddParam("", RSDBP_IN,ID_Oper);
        cmd.Execute;
    end;

    return 0;
end;
