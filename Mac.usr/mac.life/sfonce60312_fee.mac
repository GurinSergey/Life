/*
А.Киселев 13.04.2011

Шаг начисления Разовой комиссии за услуги аренды Наряд №I-00012707
Технология Экспресс-Волга, контактное лицо М.Журавлев

*/

import sfpay, sfground, sfcomcat;
import "sfconpaym.mac";

private const SFDOC_DEF_ONCE = 52;
private const PlusCalc_CatCode = "+Расчеты"; 
private const PlusCalcNDS_CatCode = "+Расчеты НДС"; 
private const MinusNDSAccrual_CatCode = "-НДС начисленный";


/* EVG */
import "sf_prbb.mac";

//private const SFDOC_DEF_ONCE = 52;

/*record sfcontrRec( "sfcontr.dbt") key 0*/;
file sfcomissFile( "sfcomiss.dbt"  ) key 0;

record documentRec( "acctrn.dbt" );

/* EVG 13/02/2012 To 2030 Другая структура.
record sfsingdfRec( "sfsingdf.dbt" );*/
record sfsingdfRec( "sfdef.dbt" );

private const NOTEKIND_COMISS_PARTYCODE = 101;  //корректировать при внедрении


private macro SfSingAccrue( SfSingPD, sfsingdfRec, sfcomiss, sicredit )  
  
  var PayerAccount:string, ReceiverAccount:string;
  var SumPayer = $0, SumNDS = $0;
  var Ground = string( "За разовые услуги." );
  var err = 0;
  var carryDate = sfsingdfRec.DateFee;
  var payFIID = sfsingdfRec.FIID_paySum;

  PayerAccount = SfSingPD.GetDefComSfSiAccount( sfsingdfRec.ID, CALC_SFSI_KIND, PlusCalc_CatCode, carryDate, payFIID );
  ReceiverAccount = sicredit.Account;
  
  if( ConvSum( SumPayer, sfsingdfRec.sum, carryDate, sfsingdfRec.FIID_Sum, payFIID, sfcomiss.Ratetype ) == 0 )
    err = CountComissAsIncome( carryDate, payFIID, PayerAccount, sicredit.FIID, ReceiverAccount, SumPayer, Ground );
  else
    err = 1;
  end;
  
  if( (err == 0) AND (sfsingdfRec.sumNDS > 0) )
    Ground = string("НДС за разовые услуги.");
    PayerAccount = SfSingPD.GetDefComSfSiAccount( sfsingdfRec.ID, CALCNDS_SFSI_KIND, PlusCalcNDS_CatCode, carryDate, payFIID );
    ReceiverAccount 
      = SfSingPD.GetDefComSfSiAccount( sfsingdfRec.ID, NDSACRUAL_SFSI_KIND, MinusNDSAccrual_CatCode, carryDate, payFIID );
    if( ConvSum( SumNDS, sfsingdfRec.sumNDS, carryDate, sfsingdfRec.FIID_Sum, payFIID, sfcomiss.Ratetype ) == 0 )
      err = CountComissAsIncome( carryDate, payFIID, PayerAccount, payFIID, ReceiverAccount, SumNDS, Ground );
    else
      err = 1;
    end;
  end;

  if( err == 0 )
    sfsingdfRec.IsIncluded = "X";
  end;

  return err;
end;



macro ExecuteStep( outBuff, primIn )
 const OBJTYPE_SFSINGDF           = 664; // Удержанная разовая комиссия

 var stat = 0;
 setbuff( documentRec, outBuff );
 setbuff( sfsingdfRec, primIn  );
 var FacturaId = 0,
     PayerID = 0,
     facturaLineAr :TArray;

 record factura("bilfactura.dbt");
 ClearRecord(factura);
 
debugbreak;

 file sfcontr( "sfcontr.dbt") key 0;
 var sfcontr_found = false;

   if( sfsingdfRec.SfContrID > 0 )
     sfcontr.ID = sfsingdfRec.SfContrID;
     if( getEQ(sfcontr) )
       sfcontr_found = true;
     end;
   end;

   var bilfDocArray = TArray;

   sfcomissFile.FeeType = sfsingdfRec.FeeType;
   sfcomissFile.Number  = sfsingdfRec.CommNumber;

   if( not getEQ( sfcomissFile ) )
      MsgBox("Не найдена комиссия");
      return 1;
   end;

   var ground = "";
   if( sfcontr_found )
     ground = BuildGround( sfsingdfRec, sfcomissFile, sfcontr );
   else
     ground = BuildGround( sfsingdfRec, sfcomissFile );
   end;

   var SfAccrueRegVal = SfComAccrueGetRegValue();
      
   var sidebet = TRecHandler("sfsi.dbt");
   var sicredit = TRecHandler("sfsi.dbt");
   sidebet.Clear;
   sicredit.Clear;
   if(SfGetSI_Uni( 664, sfsingdfRec, sidebet, sicredit ))  /*ObjectType = OBJTYPE_SFSINGDF = 664*/
      MsgBox("Ошибка при взятии платежных инструкций");
      return 1;
   end;

   var SfSingPD = null;

   var payMethod = SF_PAY_METHOD_PAYM;
   if( sfcomissFile.receiverID == {HeadBankID} )
    PayMethod = 98; //А.Киселев для формирования мем.ордера начисления аренды без НДС и мем.ордера начисления НДС
     
     /* EVG Класс ПД инициализируется всегда */
     SfSingPD = SfSingDfPrimDoc( SFDOC_DEF_ONCE, sfsingdfRec );

     if( (SfAccrueRegVal == 0) OR ((SfAccrueRegVal == 2) AND (sfsingdfRec.sumNds > 0)) )
       // EVG SfSingPD = SfSingDfPrimDoc( SFDOC_DEF_ONCE, sfsingdfRec );
       SfSingAccrue( SfSingPD, sfsingdfRec, sfcomissFile, sicredit.rec );
     end;
   end;
  
   var payDate = sfsingdfRec.DateFee;
   if( sfsingdfRec.CalcComissSumAlg == 3 ) /*SFCOMISS_CALCCOMISSSUMALG_BEFOREPAY*/
     payDate = sfsingdfRec.DateFee - 1;
   end;


   stat = SfFormDocs( documentRec, sidebet, sicredit, sfcomissFile,
                      payDate, ground,
                      sfsingdfRec.sum, sfsingdfRec.sumNDS, sfsingdfRec.FIID_Sum,
                      SFDOC_DEF_ONCE, sfsingdfRec.id, OBJTYPE_SFSINGDF, sfsingdfRec, payMethod,
                      SfSingPD, sfsingdfRec.IsIncluded, false, sfsingdfRec.FacturaID, @bilfDocArray, null );

  if(stat == 0)
    PayerID = GetClientId( readNoteForObject_SQL( OBJTYPE_SFSINGDF, sfsingdfRec.ID, NOTEKIND_COMISS_PARTYCODE ) );

    FacturaID = SfOnce_GetFacturaId(sfsingdfRec.ID);// получить данные из комиссии по созданному СФ из буфера почему то не актуальные
    if( (FacturaID == 0) AND (PayerID > 0) )
     SFOnce_FillBilFactura( sfsingdfRec.feeType, sfsingdfRec.ID, payDate, {OperDprt}, {OperDprtNode},
        PayerID, sfsingdfRec.FIID_Sum, factura );

     facturaLineAr = FillFacturaLines_( sfsingdfRec.feeType, sfsingdfRec.ID, payDate, ground );
     BFCreateBilFactura(factura, facturaLineAr, facturaID);
     if( facturaID > 0)
      sfsingdfRec.FacturaID = facturaID;
      copy(primIn,sfsingdfRec );
     else
      MsgBox("Не удалось создать СФ");
     end;
    end;
  end;

/*  if(stat == 0)                   
     if( (sfsingdfRec.FacturaID > 0) AND (bilfDocArray.Size > 0) )       
       if(not CreateBilBookEntry(sfsingdfRec.FacturaID, payDate, bilfDocArray) )  
         MsgBox("Не удалось связать оплату комиссии с СФ");
       end;
     end;
  end;
*/
                      
  return stat;
end;                      


macro PostStepAction( message,     /* данный параметр может принимать следующие       */
                             /* значения: 1 - выполнение шага; 2 - откат шага;  */
                errTrn,      /* статус выполнения шага. Если параметр не равен 0*/
                             /* произошла ошибка                                */
                primDoc,    /* указатель на первичный документ                 */
                ID_Oper,     /* внутренний идентификатор операции               */
                ID_Step,     /* внутренний идентификатор шага операции          */
                KindOper,    /* номер вида операции                             */
                KindDoc,     /* номер вида первичного документа                 */
                KindStep )   /* вид шага операции                               */     


 if( (message == OP_EXECUTE_STEP) and (not errTrn)) 
  SetBuff( sfsingdfRec, primDoc );
  if( sfsingdfRec.facturaID > 0)
   SF_UpdateOnce( sfsingdfRec.ID, sfsingdfRec.facturaID ); //привязываем СФ к комиссии
  end;
 end;   
 return 0;
end;
