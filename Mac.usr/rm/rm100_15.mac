//-----------------------------------------------------------------------------
// Блок      : 29025 - "Предобработка входящего платежа"
// Шаг       : 30    - "Предобработка входящего платежа"
// Назначение: Макрос шага
// Описание  : Макрос шага
// Изменения :
// SDA      30.05.2012 I-00200889-2 проверяются только наименования расчетных счетов
// SDA      30.05.2012 I-00200889-2 проверка достаточности остатка на активном счете получателя 
// SDA      13.08.2012 C-13133 Необходима выгрузка в МБР для Payments  рублевых кредитовых авизо  банкам группы ЛАЙФ
// zip_z.   24.01.2013 С-7683 Автоматическое формирование кредитовых авизо swift
// TAM      31.01.2013 возвраты на 40911/12/13 идут через незавершенные (все банки группы) + "причесывание" макроса
// TAM      25.03.2013 I-00345074: поступления на счета кассы должны идти через невыясненные
// TAM      04.09.2013 C-23100: ED111 идут на невыясненные 
// TAM      12.08.2013 C-21757  обработка сводных платежей
// TAM      19.09.2013 R-249983 проверка наличия счета 40912 в наименовании плательщика
// KS       06.12.2013 Перенос пользовательских доработок в 31ю сборку
// UDA      2014-02-21 C-19151 Логгирование массово выполненных шагов
// SDA      21.03.2014 все документы поступающие на 40817 счета автоматом ставятся на сводник по пластику - особенность работы банка с OpenWay
// TAM      01.04.2014 R-355605 - требования ED103 должны просто зачисляться
// TAM      17.06.2014 C-28306 - валютные платежи комиссий без шага ручной обработки 
// Gurin S. 22.12.2015 HotFix 2031.19.25 (Life_1 1.3)_11
//-----------------------------------------------------------------------------
import RMInter, PaymInter, BankInter, OprInter, PTInter, CTInter, CurrInter, WldInter, pm_chkrst,
       "rmtools.mac", "rmcmptl.mac", "akkrtls.mac", "cbsttls.mac", "cbdefbo.mac", "wlglobal.mac", "pmpurp.mac", "pm_const.mac", "pmprops.mac",
       "globals.mac", "oralib.mac", "likepy.mac", pm_tools, pmterror;

import "sw_notes.mac";
import FrontCommon, FrontRoute, op_lib, "SetVOStaff.mac", "CommissLib.mac";
import "check_val_acc.mac";
import "PaymTestFormat.mac";
import "edit_pmnote.mac";
import "lib_pm_check.mac";//TAM 12.08.2013 C-21757

//SDA 30/05/2012 I-00200889-2 проверка достаточности остатка на активном счете получателя 
import "pm_common.mac";
import fg_Life_parm;

// EVG Инициализация банка ФГ 
private const fgBank = fg_life_subject( {OurBank} );

//SDA - 15.06.2012 I-00209002 не формируется шаг ВЫГРУЗКА В МБР для зачисления на 30109* по сообщениям формата МТ202 
private var _Rec_Account:TRecHandler = TRecHandler( "account.dbt" );
RECORD Corschem( corschem );
private RECORD cors (corschem);

private var PaymentObj:RsbPayment;

private const ПутьКНастройкеСчетаНерезидентов:string = "173-ФЗ СЧЕТА НЕРЕЗИД ДО 116-И";

//TAM 31.01.13 возвраты на 40911/12/13 идут через незавершенные (все банки группы)
private var Acc_Not_Check = ""; //счета, исключаемые из проверок
var acc_rub;
var acc_from_name = "";

private macro PaymBankCodeIsAccountBankCode(Account :string, FIID :integer, PaymBankCode :string, PaymBankCodeKind :integer ):bool
    VAR select:string =" select dep.t_PartyID " +
                       "   from daccount_dbt acc, " +
                       "        ddp_dep_dbt dep "+
                       "  where acc.t_department=dep.t_Code "+
                       "    and acc.T_ACCOUNT = :account" +
                       "    and acc.T_CODE_CURRENCY = :fiid " +
                       "    and acc.t_Chapter=1";

    VAR params:TArray = makeArray( SQLParam( "account", Account),  
                                   SQLParam( "fiid", FIID ));
    debugbreak;
    VAR rset:RsdRecordset = execSQLselect( select, params, TRUE );
    var Code :string;

    if( rset and rset.moveNext() )
        GetPartyCodeEx(rset.value(0),PaymBankCodeKind, @Code); 
        if(Code==PaymBankCode)
            return true;
        end;
    end;
    return false;
end;
//-----------------------------------------------------------------------------
// Получить название филиала
//-----------------------------------------------------------------------------
PRIVATE MACRO GetDepartmentName( Department:integer ):string
    var rset:object;
    var select:string;
    var params:TArray = TArray();

    select = " SELECT T_NAME FROM DDP_DEP_DBT WHERE T_CODE = :Department ";
    params[params.size] = SQLParam( "Department", Department );
    rset = execSQLselect( select, params, TRUE );

    if( rset and rset.moveNext() )
        return rset.value(0);
    end;

    return "";
END;

PRIVATE MACRO GetDepartmentNameByBankID( BankID:integer ):string
    var rset:object;
    var select:string;
    var params:TArray = TArray();

    select = " SELECT T_NAME FROM DDP_DEP_DBT WHERE T_PARTYID = :BankID ";

    params[params.size] = SQLParam( "BankID", BankID );
    rset = execSQLselect( select, params, TRUE );

    if( rset and rset.moveNext() )
        return rset.value(0);
    end;

    return "";
END;

// ----------------------------------------------------------------------------
// Проверка необходимости помещения в невыясненные или на ручную обработку
// Возвращает 0, если все нормально
// Возвращает -1, если шаг вообще не может быть выполнен
// Возвращает >0, если выявлена ошибка и документ куда-то пойдет
// ----------------------------------------------------------------------------
private macro ПоместитьВНевыясненныеПо117И():integer

    var Reject = "";
    var RejectGround = "";
    var stat:integer = PaymentObj.PM_Check117( Reject, RejectGround );

    if(stat != 0)
        msgbox( "Ошибка при выполнении шага");
        return -1;
    end;    

    if( Reject == SET_CHAR )
        if( УстановитьСтатусыПлатежа( OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_UNKNOWN, OPR_PAYM_MANUAL, OPR_PAYM_ST_MANUAL_NEED ) )
            msgbox( "Ошибка при установке значения сегмента статуса");
            return -1;
        end;
        // Заполнить примечание
        if( PaymentObj.Notes.AddNote( PM_NOTEKIND_DENIALGROUND, RejectGround ) != 0 )
            msgbox( "Ошибка при вставке примечания платежа" );
            return -1;
        end;
    end;

    return stat;
end;

// ----------------------------------------------------------------------------
// Поместить в невыясненные
// ----------------------------------------------------------------------------
private macro PM_ToUnknown( note_text:string ):integer

    if( УстановитьСтатусыПлатежа( OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_UNKNOWN, OPR_PAYM_MANUAL, OPR_PAYM_ST_MANUAL_NOTNEED ) )
        msgbox("Ошибка при установке сегментов статуса экземпляра операции");
        return 1;
    end;
    if( УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_IN ) )
        msgbox("Ошибка при установке сегментов статуса экземпляра операции");
        return 1;
    end;
    if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_ENTER ) )
        msgbox("Ошибка при установке сегментов статуса экземпляра операции");
        return 1;
    end;
    //TAM 23.07.2012 I-00222186-2 - снимаем контроль
    if( УстановитьСтатусыПлатежа( 296, 2) )
        msgbox("Ошибка при установке сегментов статуса экземпляра операции");
        return 1;
    end;
    //end TAM

    if( (ValType(note_text) != V_UNDEF) and (note_text != "") ) // Заполнить примечание
        if (not IsOprmultiExec())  
            msgbox(note_text,"|","Документ помещен в невыясненные");
        end;
        if( PaymentObj.Notes.AddNote( PM_NOTEKIND_DENIALGROUND, note_text ) != 0 )
            msgbox( "Ошибка при вставке примечания платежа" );
            return 1;
        end;
    end;
    
    //SDA I-077679 30.10.2010 
    //При помещении в невыясненные устанавливаем вид "создан по сообщению", чтобы была возможность возврата
    PaymentObj.DocKind = WL_INDOC;

    return 0;
end;

// ----------------------------------------------------------------------------
// На ручную обработку
// ----------------------------------------------------------------------------
private macro PM_ToManual( note_text:string ):integer
    if( УстановитьСтатусыПлатежа( OPR_PAYM_MANUAL, OPR_PAYM_ST_MANUAL_NEED, OPR_PAYM_DO, OPR_PM_ST_ENTER, OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL ) )
        msgbox("Ошибка при установке сегментов статуса экземпляра операции");
        return 1;
    end;

    //09.07.2012 I-00217045-2
    if( УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_IN ) )
        msgbox("Ошибка при установке сегментов статуса экземпляра операции");
        return 1;
    end;

    if( note_text != "" ) // Заполнить примечание
        if (not IsOprmultiExec())  
            msgbox(note_text,"|","Документ помещен на ручную обработку");
        end;
        if( InsertNoteForPayment( PaymentObj.PaymentID, 130, note_text ) != 0 )
            msgbox( "Ошибка при вставке примечания платежа" );
            return 1;
        end;
    end;

    //SDA I-077679 30.10.2010 
    //При помещении на ручную обработку устанавливаем вид "создан по сообщению", чтобы была возможность возврата 
    PaymentObj.DocKind = WL_INDOC;

    return 0;
end;

// ----------------------------------------------------------------------------
// В ожидание выгрузки во Фронт
// ----------------------------------------------------------------------------
private macro PM_ToFront( note_text:string ):integer
    if( УстановитьСтатусыПлатежа( OPR_PAYM_MANUAL, OPR_PAYM_ST_MANUAL_NOTNEED, OPR_PAYM_DO, OPR_PM_ST_ENTER, OPR_STATUS_FRONT, OPRSTAT_FRONT_YES ) )
        msgbox("Ошибка при установке сегментов статуса экземпляра операции");
        return 1;
    end;

    return 0;
end;

// ----------------------------------------------------------------------------
// Субъект является юридическим лицом
// ----------------------------------------------------------------------------
private macro PartyIsInst( PartyID ):bool
    var SelectStr:string;
    var params   :TArray;
    var rs       :object;

    SelectStr = "select pt.t_LegalForm " +
                "  from dparty_dbt pt " +
                "  where  pt.t_PartyID = :PartyID ";

    params = makeArray( SQLParam( "PartyID", PartyID ));
    rs = execSQLselect( SelectStr, params, FALSE );

    if( rs and rs.moveNext() )
        if( rs.value(0) == 1 )
            return true;
        end;
    end;

    return false;
end;

// ----------------------------------------------------------------------------
// Субъект является предпринимателем
// ----------------------------------------------------------------------------
private macro PartyIsIndividual( PartyID ):bool
    var SelectStr:string;
    var params   :TArray;
    var rs       :object;

    SelectStr = "select pers.t_IsEmployer " +
                "  from dpersn_dbt pers " +
                " where pers.t_PersonID = :PartyID ";
    params = makeArray( SQLParam( "PartyID", PartyID ));
    rs = execSQLselect( SelectStr, params, FALSE );

    if( rs and rs.moveNext() )
        if( rs.value(0) == "X" )
            return true;
        end;
    end;

    return false;
end;

// ----------------------------------------------------------------------------
// Регистрационный номер нашего банка
// KS 24.08.2010 I-055130 Необходимо, чтобы стоял регистрационный номер ОАО Газэнергобанк в номере паспорта сделки.
// ----------------------------------------------------------------------------
private macro РегНомерБанка():integer
    var SelectStr:string;
    var params   :TArray;
    var rs       :object;

    SelectStr = "select t.t_code" +
                "  from dobjcode_dbt t" +
                " where t.t_objectid = :PartyID" +
                "   and t.t_objecttype = :objecttype" +
                "   and t.t_codekind = :codekind";
    params = makeArray( SQLParam( "PartyID", {OurBank} ),
                        SQLParam( "objecttype", 3 ),
                        SQLParam( "codekind", 13 ));
    rs = execSQLselect( SelectStr, params, FALSE );

    if( rs and rs.moveNext() )
        return rs.value(0);
    end;

    return 0;
end;

private macro ПроверитьКодБанка(Account :string, FIID :integer, PaymBankCode :string, PaymBankCodeKind :integer):integer
    if( PaymBankCodeIsAccountBankCode(Account, FIID, PaymBankCode, PaymBankCodeKind))
        if(УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_ENTER ))
            msgbox( "Ошибка при установке значения сегмента статуса");
            return 1;
        end;
    else
        PM_ToManual("Нет открытого счёта "+Account+" в филиале "+PaymBankCode);
    end;

    return 0;
end;

//TAM 24.01.2013 возвраты на 40911/12/13 идут через незавершенные (все банки группы)
macro GetAccountIncomplete(Corschem, Fiid, BankCode)
    var RKC = 1; //номер корсхемы РКЦ
    var SelectStr: string;
    var params   : TArray;
    var rs       : object;

    SelectStr = " SELECT t_account " +
                "   FROM incomplete_accounts_usr " +
                "  WHERE T_BANKCODE = :cod AND T_FININSTR = :fid ";
    if(Corschem == RKC)
        SelectStr = SelectStr + " AND T_CORSCHEM = 1 ";
    else 
        SelectStr = SelectStr + " AND T_CORSCHEM <> 1 ";
    end;

    params = makeArray( SQLParam( "cod", BankCode ),
                        SQLParam( "fid", Fiid ));
    rs = execSQLselect( SelectStr, params, FALSE );

    if( rs and rs.moveNext() )
       return rs.value(0);
    else
       return "";
    end;
end;

private macro ПроверитьСчетПлательщикаЭСИД( PaymentObj:object ):integer

    var select:string = " select acc.t_department, acc.t_open_date, acc.t_close_date " +
                        "   from daccount_dbt acc " +
                        "  where acc.t_chapter         = :chapter " +
                        "    and acc.t_code_currency   = :fiid    " +
                        "    and acc.t_account         = :account ";
    var params:TArray = makeArray(SQLParam( "chapter", PaymentObj.Chapter       ),     
                                  SQLParam( "fiid"   , PaymentObj.PayerFIID     ),     
                                  SQLParam( "account", PaymentObj.PayerAccount  ) );

    var rset:RsdRecordset = execSQLselect( select, params, TRUE );
    var RejectGround = "";

    if( rset and rset.moveNext() )
        if( rset.Value(0) != PaymentObj.StartDepartment )
            RejectGround = "32;В банке (филиале банка) отсутствует номер счета, указанный в электронном документе, сформированном налоговым органом";
        elif( ( rset.Value(1) > PaymentObj.ValueDate ) or                                         /*счет на дату валютирования еще не открыт*/
              ( ( rset.Value(2) != date(0,0,0) ) and ( rset.Value(2) < PaymentObj.ValueDate ) ) ) /*или уже закрыт*/
            RejectGround = "35;На дату получения банком (филиалом банка) электронного документа, сформированного налоговым органом, счет плательщика закрыт";
        end;
    else
        RejectGround = "32;В банке (филиале банка) отсутствует номер счета, указанный в электронном документе, сформированном налоговым органом";
    end;     

    if( RejectGround != "" )
        RejectPayment( PaymentObj, RejectGround );
        return 1;
    end;

    return 0;

ONERROR(x)
    MsgBox( x.Message );
    return false;
end;

private macro СравнитьНаименованияПлательщика( PaymentID:integer ):integer
    return execStoredFunc( "PM_CLNNAMES.CheckPaymPayerName", 
                           V_INTEGER, 
                           makeArray( SQLParam( "p_PaymentID", PaymentID ) ) );

end;

private macro СравнитьНаименованияПолучателя( PaymentID:integer, SecondError:@integer):integer
    var arr = makeArray( SQLParam( "p_PaymentID", PaymentID),
                         SQLParam( "p_SeconError", SecondError, RSDBP_OUT ) );
    var res: integer = execStoredFunc( "PM_CLNNAMES.CheckPaymReceiverName",
                                       V_INTEGER,
                                       arr );

    if ( ValType(SecondError) == V_INTEGER )
        SecondError = arr.value(1).value;
    end;

    return res;
end;

// ----------------------------------------------------------------------------
// Выполнение шага
// ----------------------------------------------------------------------------
macro ExecuteStep( Kind_Operation, first, KindDoc, ID_Operation )

    var FlagTrans  :bool    = false,
        IsAkkr     :bool    = false,
        PaymWithSPI:bool    = false,
        err_bool   :bool    = false,
        Остаток    :money   = $0,
        err        :integer = 0,
        Покрытие   :integer = 0,
        DO_Segment :integer = 0,
        stat       :integer = 0,
        AccType    :string  = "",
        DKFlag     :string,
        symbol     :string;
    var Department:integer,
        settaccDep:integer,
        RegVal    :bool = false;
    var err_mes:string;
    var checkName:integer = 0;

    var МаскиСчетовКлиентов:string = "";
    var field_value        :string = "";

    var Masks:string;
    // KS 24.08.2010 I-055130 Необходимо, чтобы стоял регистрационный номер ОАО Газэнергобанк в номере паспорта сделки.
    var РегНомер:integer;
    var err_acc:integer; // KS 10.12.2010 I-098166 Зачисление на пластиковые карты Код ошибки для настроек реестра
    var rep_acc  :bool   = false; // KS   Для флага использовать-не использовать технологию
    var acc_day  :string,// KS 10.12.2010 I-098166 Зачисление на пластиковые карты Счета из настроек
        acc_evening:string,
        acc_time :string;
    //SDA 13.08.2012 C-13133
    var rset; 
    var Direct = GetOprStatus(OPR_PAYM_DIRECT);
  
    // Для установки значений сегментов статусов
    var CABS_Segment:integer = OPR_PM_ST_MFR_YES;
    var BO_Segment  :integer = OPR_PAYM_ST_BO_NO;
    var SkipArest;
debugbreak;
    if( GetOprStatus(OPR_PAYM_PERMISSION) == OPR_PAYM_ST_PERMISSION_YES )
        SkipArest = true;
    else
        SkipArest = false;
    end;

    RECORD settacc ( settacc  );
    RECORD corschem( corschem );

    // актуализируем платеж
    if( PaymentObj.Actuate() )
        RejectPayment(PaymentObj, "Не определен курс конверсии");
        MsgBox("Ошибка при актуализации платежа ");
        return 1;
    end;
       
    //Gurin S. I-00562228-2 14.04.2015
    if (InList(PaymentObj.DocKind, 320, 322))
       if ((Acc_GetFiidByAccount(PaymentObj.PayerAccount) != Acc_GetFiidByAccount(PaymentObj.ReceiverAccount)) and (SubStr(PaymentObj.FuturePayerAccount,1,5) == "30102")
            and (PaymentObj.PayerAccount != "") and (PaymentObj.ReceiverAccount != ""))
          return PM_ToUnknown("Валюта счета плательщика и получателя не совпадают");
       end;
    end;

    // C-7683 Автоматическое формирование кредитовых авизо swift>>
    if(PaymentObj.Basefiid!=0)
        PM_InsertNote_Callback (PaymentObj.PaymentID);
    end;
  
    var acc, msg, notresident, inn, innv, flg=0;//рез/нерез
    var clacc;
    // Транзитный?
    FlagTrans = PaymentObj.IsTransit();
    var FlagFront = IsFrontPayment(PaymentObj);

    macro typeaccH(account, chapter)
        var cmd = rsdcommand ("select 1 from daccount_dbt where t_account = ? and t_usertypeaccount like '%H%' and t_chapter = ?");
        cmd.addparam("acc",RSDBP_IN, account);
        cmd.addparam("chapter",RSDBP_IN, chapter);
        var rsd = rsdrecordset(cmd);

        if (rsd.movenext())
            return true;
        else
            return false;
        end;
    end;

    macro typeaccD(account, chapter)
        var cmd = rsdcommand ("select 1 from daccount_dbt where t_account = ? and t_usertypeaccount like '%D%' and t_chapter = ?");
        cmd.addparam("acc",RSDBP_IN, account);
        cmd.addparam("chapter",RSDBP_IN, chapter);
        var rsd = rsdrecordset(cmd);
        if (rsd.movenext())
            return true;
        else
            return false;
        end;
    end;

    macro СчетРасчетный(acc)
        var cmd = RSDCommand("select 1 from daccount_dbt where t_chapter = 1 and t_account = ? and t_type_account like '%Ч%'");
        cmd.AddParam("acc", RSDBP_IN,acc);
        var rs = RSDRecordset(cmd);
        return rs.movenext;
    end;

    macro AccInOurBalance(acc)
        var cmd = RSDCommand("select 1 from daccount_dbt where t_chapter = 1 and t_account = ? ");
        cmd.AddParam("acc", RSDBP_IN,acc);
        var rs = RSDRecordset(cmd);
        return rs.movenext;
    end;

    macro GetCorshemRecv(acc);
        var SQL = " SELECT s.t_corrid, s.t_number, s.t_coraccount, c.t_code, b.t_coracc, ";
        SQL = SQL + "\n       (p.t_name || ' ' || b.t_place || b.t_placename) bankname ";
        SQL = SQL + "\n  FROM dcorschem_dbt s, dobjcode_dbt c, dbankdprt_dbt b, dparty_dbt p ";
        SQL = SQL + "\n WHERE s.t_fiid = 0 ";
        SQL = SQL + "\n   AND s.t_account = '"+acc+"' ";
        SQL = SQL + "\n   AND c.t_codekind = 3 ";
        SQL = SQL + "\n   AND c.t_objectid = s.t_corrid ";
        SQL = SQL + "\n   AND b.t_partyid = s.t_corrid ";
        SQL = SQL + "\n   AND p.t_partyid = s.t_corrid ";

        var rs=RsdrecordSet(SQL);

        if (rs.movenext())
            return rs;
        end;

    onerror(x);
        return;
    end;

    //SDA 09.06.2012 - предотвращение планирования шага квитовки на ответном платеже
    if (УстановитьСтатусыПлатежа( OPR_PAYM_IN_KVIT, 0 ))
        MsgBox( "Возникла ошибка при смене статусов операции платежа" );
        return 1;
    end;     

    if( УстановитьСтатусыПлатежа( OPR_PAYM_ACCEPT, OPR_PAYM_ST_ACPT_NONE ) )
        msgbox("Ошибка при установке сегментов статуса экземпляра операции");
        return 1;
    end;

    //Gurin 26.12.2014 C-36456-7
    if (InList(PaymentObj.DocKind, 320, 322))
        if (PM_PaymOnIncomplete(PaymentObj.PaymentID))
            return PM_ToManual( "Платеж на незавершенные расчеты" );
        end;
    end;

    //SDA 21.06.2012 - транзитные платежи возвратов - не трогаем 
    if (substr(PaymentObj.PayerAccount,1,5) != "47416") 
        if (((Direct == OPR_PM_ST_DIR_TRANZIT) and (PaymentObj.OutCorschem == -1)) 
        //SDA и документы на корсчета - подкрепления и пр. 
        or ((PaymentObj.OutCorschem != -1) and ( PaymentObj.receiverbankcode == {mfo_bank})and (AccInOurBalance(PaymentObj.receiveraccount)))
        //SDA Если бик получателя равен бику плательщика и не равен нашему бику, платеж не является пранзитным 
        or ((PaymentObj.payerbankcode== PaymentObj.receiverbankcode) and (PaymentObj.payerbankcode !={mfo_bank}))
        //SDA Если участник отправилель равен банку получателю и не равен нашему бику, платеж не является пранзитным 
        or ((PaymentObj.payermesbankID == PaymentObj.receiverbankID) and (PaymentObj.payerbankcode !={mfo_bank})))
        //SDA - 15.06.2012 I-00209002: не формируется ВЫГРУЗКА В МБР для зачисления на 30109* по сообщениям МТ202 
            PM_GetAccountRecord( PaymentObj.ReceiverAccount, PaymentObj.ReceiverFIID, PaymentObj.Chapter, _Rec_Account );
            if (((not fgBank.is_PRBB ) and (not fgBank.is_VUZ)) or (Index( _Rec_Account.rec.Type_Account, "К" ) == 0 ))
                FlagTrans = false;
                PaymentObj.Futurereceiveraccount=PaymentObj.receiveraccount;
                Direct = OPR_PM_ST_DIR_IN;
                PaymentObj.SetReceiverPI( PAYMENTS_GROUP_INTERNAL,                   
                                          {OurBank},
                                          PaymentObj.ReceiverBankCodeKind,
                                          PaymentObj.ReceiverBankCode,
                                          PaymentObj.ReceiverBankName,
                                          PaymentObj.ReceiverBankCorrAcc,
                                          PaymentObj.ReceiverFIID,
                                          PaymentObj.chapter,
                                          PaymentObj.ReceiverAccount,
                                          PaymentObj.Receiver,
                                          PaymentObj.ReceiverName,
                                          PaymentObj.ReceiverINN,
                                          null,
                                          null,
                                          -1,
                                          PM_CORRPOS_TYPE_USER);

                if( УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_IN ) )
                    msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                    return 1;
                end;

                if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_ENTER ) )
                    msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                    return 1;
                end;
            end;
        end;
    else //SDA 10.08.2012 возвраты из РКЦ транзитных документов C-13133 
        // Необходима выгрузка  в  МБР  для отправки в Payments  рублевых кредитовых авизо  банкам группы ЛАЙФ
        if ((PaymentObj.InCorschem == 1) and (Direct == OPR_PM_ST_DIR_IN))
            rset= GetCorshemRecv(PaymentObj.ReceiverAccount);
            if (valtype(rset) == V_GENOBJ) 
                if (not fgBank.is_PRBB )
                    return PM_ToManual( "Возврат платежа на корреспондентский счет, присутствующий в балансе банка" );
                else
                    PaymentObj.SetReceiverPI( PAYMENTS_GROUP_EXTERNAL,
                                              PaymentObj.ReceiverBankID, // rset.value("t_corrid"),
                                              3,
                                              PaymentObj.ReceiverBankCode,     // rset.value("t_code"),
                                              PaymentObj.ReceiverBankName,     //  rset.value("BankName"),
                                              PaymentObj.ReceiverBankCorrAcc,  // rset.value("t_coracc"),
                                              0, 
                                              1, 
                                              PaymentObj.ReceiverAccount,      // rset.value("t_coraccount"),   
                                              -1, 
                                              PaymentObj.ReceiverName, 
                                              PaymentObj.ReceiverINN, 
                                              null, 
                                              null, 
                                              rset.value("t_number"), //-1, 
                                              PM_CORRPOS_TYPE_user);

                    if( УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_TRANZIT ) )
                        msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                        return 1;
                    end;

                    if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_ENTER ) )
                        msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                        return 1;
                    end;

                    return 0;
                end;
            end;
        end;
    end;


    // TAM 31.01.13 возвраты на 40911, 40912, 40913 должны идти на незавершенные - для этого на шаге предобработки 
    // будем подменять futurereceiveraccount
    //TAM 25.03.13 - not CompareStrWithMasks -> 0 == CompareStrWithMasks
    if(( 0 == (CompareStrWithMasks( "40911*,40912*,40913*", PaymentObj.ReceiverAccount))) 
    //TAM 12.02.2013 C-17597 - в ЭВ счета указываются в наименовании получателя
    or ((fgBank.is_EXV) and ((Index(PaymentObj.ReceiverName,"40911") != 0) or 
                             (Index(PaymentObj.ReceiverName,"40912") != 0)))) //TAM 19.09.2013 R-249983
        //Проверим ЭВ на наличие счета в наименовании и его существование в БД
        if(fgBank.is_EXV and ((Index(PaymentObj.ReceiverName,"40911") != 0) or 
                              (Index(PaymentObj.ReceiverName,"40912") != 0))) //TAM 19.09.2013 R-249983
            //сохраняем из наименования счет, если его там нет, то будет пустая строка
            acc_from_name = Substr(PaymentObj.ReceiverName,Index(PaymentObj.ReceiverName,"40911"),20);

            if(acc_from_name == "") //40911 нет в наименовании, проверяем 40912
                acc_from_name = Substr(PaymentObj.ReceiverName,Index(PaymentObj.ReceiverName,"40912"),20); //TAM 19.09.2013 R-249983
            end;

            //Проверим на наличие в БД на случай неверного счета
            if (PaymentObj.ReceiverFIID == 0)
                acc = Tbfile("account.dbt");
            else
                acc = Tbfile("account$.dbt");
            end;

            acc.rec.Account = acc_from_name;
            acc.rec.chapter = 1;

            if(not GetEQ(acc))
                acc_from_name = "";
            end;
        end;
        //TAM 30.01.13 - у ЭВ есть счета, по которым через незавершенные проводить не надо. 
        //Счета размещены в реестре. Для всех банков.
        GetRegistryValue("PRBB\\МЕЖБАНКОВСКИЕ РАСЧЕТЫ\\ИСКЛЮЧЕНИЯ_40911",v_string,Acc_Not_Check,err);
        if(err == 0)
            //если счета пол-ля нет в списке запрещенных счетов - делаем подмену
            if((Index( Acc_Not_Check, PaymentObj.ReceiverAccount) == 0)  and
            //TAM 12.02.2013 C-17597 - проверяем и то, что в наименовании получателя
            IfThenElse((fgBank.is_EXV and (Index(PaymentObj.ReceiverName,"40911") != 0)),(Index( Acc_Not_Check, acc_from_name) == 0),1))
                var Incomplete_Acc = GetAccountIncomplete(PaymentObj.InCorschem, ПолучитьКодФинИн(PaymentObj.ReceiverFIID, null, FICK_ISONUMBER), PaymentObj.ReceiverBankCode);

                if(Incomplete_Acc != "")
                    PaymentObj.FutureReceiverAccount = Incomplete_Acc;
                end;

            end;
        end;
    end;

    // A.Gregeradsky - 18.02.2010 - Замена опечаток в коде ВО в основании 
    if( (index(PaymentObj.Ground,"{V") == 1) and (index(PaymentObj.Ground,"}") == 9) ) 
        PaymentObj.Ground = Strsubst(PaymentObj.Ground,"{V0","{VO"); /* Замена "0" (ноль) на "O" (лат.) */
        PaymentObj.Ground = Strsubst(PaymentObj.Ground,"{VО","{VO"); /* Замена "О" (рус.) на "O" (лат.) */
    end;
    if ( strLen (ReadNoteForPayment (PaymentObj.paymentID, 111)) == 0 )
        РегНомер = РегНомерБанка();
        InsertNoteForPayment(PaymentObj.paymentID, 111, "ХХХХХХХХ/"+РегНомер+"/0000/Х/0{xxxxx}$;ХХХХХХХХ/"+РегНомер+"/0000/Х/0{xxxxx}$;");
    end;

    // A.Gregeradsky - 03.12.2009 - Возврат первоначального назначения платежа, если оно изменилось. HD 47889А 
    ReturnStartGroundBack(PaymentObj);
    УстановитьКодВОиПаспортСделкиИзПримечания( PaymentObj );
    // EVG Для плательщика-нерезидента - перенос страны нерезидента в категорию "Код страны нерезидента-отправителя". 
    UpdateNRCountryInPaymetnCat( PaymentObj, PaymentObj.Payer, 118 );

    // EVG Только для распоряжений по ТС 
    if ( PaymentObj.DocKind == 322 )
        // EVG Для получателя-нерезидента - перенос страны нерезидента в категорию "Код страны нерезидента-получателя". 
        UpdateNRCountryInPaymetnCat( PaymentObj, PaymentObj.Receiver, 119 );
    end;
//if(fgBank.is_EXV)     // vea 10.04.2016 временное зачисление всех
//  return PM_ToUnknown("Признак невыясненные");
//end;
    // Платеж с признаком "В невыясненные"
    if( PaymentObj.IsUnknown == "X" )
        if( IsOprMultiExec() == FALSE ) 
            return PM_ToUnknown("Признак невыясненные");
        else // Оставляем платеж в списке принятых (27285)
            return PM_ToManual( "Признак в невыясненные" );
        end;
    end;  

    //SDA 25.04.2012 - по замечаниям А.Буглаевой - в ПРББ неполноформатные сразу идут в невыясненные
    // Если платеж неполноформатный
    if (( PaymentObj.IsShortFormat ) and (( PaymentObj.IsUnknown == "X" ) or (fgBank.is_PRBB)))
        return PM_ToUnknown("Платеж неполноформатный");
    elif((( PaymentObj.IsShortFormat ) and  ( PaymentObj.IsUnknown != "X" )))
        return PM_ToManual( "Платеж неполноформатный");
    end;

    if((not FlagTrans ) and (not FlagFront))
        if (paymentobj.basefiid!=0)  //Tikh Проверка для валюты?
            if(not IsAccValid(PaymentObj.ReceiverAccount, msg, null))
                return PM_ToManual(msg);
            end;
        end;
    end;

    //TAM 09.08.2013 C-21757 - помещаем в невыясненные
    if( PaymentObj.Purpose == PM_PURP_MULTI )
        return PM_ToUnknown("Сводный документ проходит через счета невыясненных сумм");
    end; 

    // Для Акцептных требований
    //TAM 01.04.2014 R-355605 - никаких картотек требований быть не должно, исправлено в ufgd101
    if( (PaymentObj.DemandAcceptTerm == PM_DEMAND_TERM_ACCEPT) and (PaymentObj.DemandAccept == PM_DEMAND_ACCEPT_WAIT))
        if( УстановитьСтатусыПлатежа( OPR_PAYM_ACCEPT, OPR_PAYM_ST_ACPT_NEED ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;
        // Платеж Транзитный
        if( ( PaymentObj.PayerGroup    == PAYMENTS_GROUP_EXTERNAL ) and
            ( PaymentObj.ReceiverGroup == PAYMENTS_GROUP_EXTERNAL ) )
            msgbox( "Транзитные акцептные требования системой не обрабатываются" );
            return 1;
        // Платеж входящий
        elif( ( not ( ( PaymentObj.PayerGroup  == PAYMENTS_GROUP_EXTERNAL ) and
                      ( PaymentObj.ReceiverGroup == PAYMENTS_GROUP_EXTERNAL ) ) ) and 
                        PaymentObj.IsExternalIncoming )
            if( УстановитьСтатусыПлатежа( OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_TP ) )
                msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                return 1;
            end;
            return 0;
        end;
    else
        if( УстановитьСтатусыПлатежа( OPR_PAYM_ACCEPT, OPR_PAYM_ST_ACPT_NONE ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;
    end;

    // Дебетовый или кредитовый?
    if( PaymentObj.IsCredit() )
        DKFlag = FL_KREDIT;
    else
        DKFlag = FL_DEBET;
    end;
/*SDA 12.03.2014 кто-то сделал "ПроверкаПричастностиТерроризму" в pmterror.mac приватной для ВУЗ-а
    // Проверка на причастность к терроризму 
    if( PaymentObj.DemandIsESID != "X" )
        if( PaymentObj.CheckTerror == CHT_NOTCHECK )
            stat = ПроверкаПричастностиТерроризму( PaymentObj );
            if( stat < 0 )
                return 1;
            elif( stat > 0 )
                return 0;
            end;
            PaymentObj.CheckTerror = CHT_APPROVED;
        end;
    end;

    // Проверка на причастность к терроризму
    if( PaymentObj.DemandIsESID != "X" )
        if( PaymentObj.CheckTerror == CHT_NOTCHECK )
            stat = ПроверкаПричастностиТерроризму( PaymentObj );
            if( stat < 0 )
                return 1;
            elif( stat > 0 )
                return 0;
            end;
            PaymentObj.CheckTerror = CHT_APPROVED;
        end;
    end;
*/
    //SDA 25.04.2012 оставил только для ВУЗ - больше нигде не востребовано. В целях оптмизациии скорости выполнения 
    if ( fgBank.is_VUZ )
        // KS 10.12.2010 I-098166 Зачисление на пластиковые карты
        // Если счет получателя сводный 40817 и выполняем шаг вечером после 17:00, то меняем счет на сводный 30232


        GetRegistryValue("PRBB\\ПЛАСТИКОВЫЕ КАРТЫ\\ЗАМЕНА СВОДНОГО СЧЕТА",v_bool,rep_acc,err_acc);
        if ( err_acc == 0)
            if (rep_acc)
                GetRegistryValue("PRBB\\ПЛАСТИКОВЫЕ КАРТЫ\\ЗАМЕНА СВОДНОГО СЧЕТА\\ВРЕМЯ",v_string,acc_time);
                GetRegistryValue("PRBB\\ПЛАСТИКОВЫЕ КАРТЫ\\ЗАМЕНА СВОДНОГО СЧЕТА\\СЧЕТ ДЕНЬ" ,v_string,acc_day);
                GetRegistryValue("PRBB\\ПЛАСТИКОВЫЕ КАРТЫ\\ЗАМЕНА СВОДНОГО СЧЕТА\\СЧЕТ ВЕЧЕР",v_string,acc_evening);
/*
              // SDA 21.03.2014 все документы поступающие на 40817 счета автоматом ставятся на сводник по пластику - особенность работы банка с OpenWay
              if (0 == (CompareStrWithMasks ("40817*",PaymentObj.ReceiverAccount)))
                 PaymentObj.FutureReceiverAccount = acc_day;
              end;
*/
                if ((PaymentObj.ValueDate < {curdate}) or (time() >= time (time (int(substr(acc_time,1,2)),int(substr(acc_time,4,2),0)))))
                    if (PaymentObj.ReceiverAccount == acc_day)
                        PaymentObj.FutureReceiverAccount = acc_evening;
                    end;
                else
                    if ((PaymentObj.ReceiverAccount == acc_evening) and (( fgBank.is_PRBB ) or ( fgBank.is_VUZ ) or ( fgBank.is_EXV )))
                        PaymentObj.FutureReceiverAccount = acc_day;
                    end;
                end;
            end;
        end;
    end; 
  
    // Проверить, не является ли платеж целевым финансированием
    if( ( PaymentObj.IsPurpose == "" ) and ( IsPurposefulPayment( PaymentObj ) ) )
        PaymentObj.IsPurpose = "X";
    end;

    // Принудительно помещать в невыясненные - а если действительно надо?
    if( IsForcePlaceInUnknown() )
        return PM_ToUnknown();
    end;

    If((PaymentObj.Basefiid!=0) and (not FlagTrans))
       //TAM 17.06.2014 C-28306
       if( fgBank.is_PRBB )
          if (not ((PaymentObj.NumberPack == 190) and stringEqMask(PaymentObj.ReceiverAccount,"30114*, 30110*")))
             return PM_ToManual( "Валютные платежи должны обрабатываться вручную" );
          end;
      else
         return PM_ToManual( "Валютные платежи должны обрабатываться вручную" );
       end;
    End;

    CABS_Segment = OPR_PM_ST_MFR_YES;
    if( УстановитьСтатусыПлатежа( OPR_PAYM_CABS, CABS_Segment, OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL ) )
        msgbox("Ошибка при установке сегментов статуса экземпляра операции");
        return 1;
    end;

    // EVG 27/02/2012 Закомментил, т.к. из-за этого присвоения транзитный платёж  проводится не по корсчёту, 
    //а пытается зачислиться на несуществующий счёт получателя.
    //PaymentObj.Futurereceiveraccount=PaymentObj.receiveraccount;
    PaymentObj.ValueDate = PaymentObj.InTransferDate;
    //платеж во фронт отправляется в список ожидания выгрузки во Фронт
    if ((FlagFront) and (not СчетЗакрыт( PaymentObj.ReceiverFIID, PaymentObj.ReceiverAccount, 1, @Department )) ) //Gurin S. 10.11.2015 R-627075-2 счет не закрыт или не существует
        PaymentObj.ToBackOffice = "Ъ";
        return PM_ToFront
    end;

    if (not(FlagTrans))  
          If((index(Substr(PaymentObj.FutureReceiverAccount,11,1),"9"))or
             (typeaccD(PaymentObj.FutureReceiverAccount, 1)))
            // KS 18.11.2010 I-084287 В региональных банках признаком счета СКС является наличие пользовательского типа D
             if (typeaccH(PaymentObj.FutureReceiverAccount, 1))
             else
                return PM_ToManual("Счет получателя - СКС");
             end;
          End;
       

        if (substr(PaymentObj.ReceiverAccount,1,5) == "47416")
            if (fgBank.is_PRBB)
                return PM_ToUnknown("Указан счет невыясненных сумм");
            //TAM 03.04.13 I-00350855-2
            elif (fgBank.is_GO and (trim(PaymentObj.ReceiverAccount) == "47416810000000000001"))
                return PM_ToUnknown("Указан счет невыясненных сумм 47416810000000000001");
            else
                return PM_ToManual("Указан счет невыясненных сумм");
            end;
        end;

        if (trim(PaymentObj.ReceiverAccount) == "")
            if (fgBank.is_PRBB )
                return PM_ToUnknown( "Счет получателя не указан в платеже");
            else
                return PM_ToManual( "Счет получателя не указан в платеже");
            end;
        end;

        if (fgBank.is_PRBB)
            //TAM 13.01.2013 C-15538
            if ( (0 == (CompareStrWithMasks ("202*",PaymentObj.ReceiverAccount))) 
              or (0 == (CompareStrWithMasks ("202*",PaymentObj.FutureReceiverAccount))))
                return PM_ToUnknown("Счет получателя - счет кассы ");
            end;
        elif (fgBank.is_GO) //TAM 25.03.13 I-00345074-2
            if ( (0 == (CompareStrWithMasks ("20202*",PaymentObj.ReceiverAccount))) 
              or (0 == (CompareStrWithMasks ("20202*",PaymentObj.FutureReceiverAccount))))
                return PM_ToUnknown("Счет получателя - счет кассы ");
            end;
        elif (fgBank.is_VUZ)
            //SDA  - жестко на ручную 
            if ( (0 == (CompareStrWithMasks ("301*,30221*,314*-329*,40817*",PaymentObj.ReceiverAccount))) 
              or (0 == (CompareStrWithMasks ("301*,30221*,314*-329*,40817*",PaymentObj.FutureReceiverAccount))))
/*
           //SDA 18.03.2014 специфика ВУЗ-а - в случае если сводным счетом является "PRBB\\ПЛАСТИКОВЫЕ КАРТЫ\\ЗАМЕНА СВОДНОГО СЧЕТА\\СЧЕТ ДЕНЬ" то платежи не нужно направлять на ручную обработку
              if (PaymentObj.FutureReceiverAccount !=  acc_day )
                 return PM_ToManual("Счет получателя - банковский ");
              end;
*/
            end;

        elif (fgBank.is_EXV)
            //SDA  - жестко на ручную 
            if ((0 == (CompareStrWithMasks ("301*,30210*,30213*,303*,314*-329*,409*,47422*,706*",PaymentObj.ReceiverAccount))) 
             or (0 == (CompareStrWithMasks ("301*,30210*,30213*,303*,314*-329*,409*,47422*,706*",PaymentObj.FutureReceiverAccount))))
                return PM_ToManual("Счет получателя - банковский ");
            end;
            //SDA  - жестко на невыясненные 
            if ((0 == (CompareStrWithMasks ("202*,423*-426*,40817*,40820*,30220*,30223*",PaymentObj.ReceiverAccount))) 
              or(0 == (CompareStrWithMasks ("202*,423*-426*,40817*,40820*,30220*,30223*",PaymentObj.FutureReceiverAccount))))
                if (IsOprMultiExec())
                    return PM_ToUnknown("Счет получателя - банковский ");
                else
                    return PM_ToManual("Счет получателя - банковский ");
                end;
            end;
        elif (fgBank.is_SLD)
            //Gurin S. 23.11.2015 R-628750-2 просят конкретный счет
            if (PaymentObj.ReceiverAccount == "40817810500000000001")
                return PM_ToUnknown("Счет получателя - сводный");
            end;
        end;
        //SDA 26.04.2012 
        if (((not(CompareStrWithMasks ("423*",PaymentObj.ReceiverAccount))) or
             (not(CompareStrWithMasks ("40817*",PaymentObj.ReceiverAccount)))) and
             (AccInOurBalance(PaymentObj.ReceiverAccount)))

           //SDA 18.03.2014 специфика ВУЗ-а - в случае если сводным счетом является "PRBB\\ПЛАСТИКОВЫЕ КАРТЫ\\ЗАМЕНА СВОДНОГО СЧЕТА\\СЧЕТ ДЕНЬ" то платежи не нужно направлять на ручную обработку
           if (fgBank.is_VUZ ) 
              if ( PaymentObj.FutureReceiverAccount !=  acc_day )
                 return PM_ToManual("Счет получателя - сводный");
              end;
           else
              return PM_ToManual("Счет получателя - сводный");
           end;

        end;
        //SDA 05.10.2011 - поступления на 40821 только с 40821 или с кассы 103-фз
        if ((substr(PaymentObj.ReceiverAccount,1,5) == "40821") and 
        not ((substr(PaymentObj.PayerAccount,1,5) == "40821") or 
             (substr(PaymentObj.PayerAccount,1,5) == "20202") or
             (substr(PaymentObj.PayerAccount,1,5) == "20207") or 
             (substr(PaymentObj.PayerAccount,1,5) == "40906") or 
             //Gurin S. 08.07.2015 R-601564-1
             (substr(PaymentObj.PayerAccount,1,5) == "30305") or
             (substr(PaymentObj.PayerAccount,1,5) == "30306") or
              (index(PaymentObj.PayerName, "40821") != 0)))
            MsgBox("Операция не соответствует режиму спецсчета получателя - документ помещен на ручную обработку");
            return PM_ToManual("Операция не соответствует режиму спецсчета получателя");
        end;
    else //SDA - заглушки для транзитных платежей 
        // Если Банк плательщика и банк получателя один и тот же и не является нашим банком 
        if (PaymentObj.PayerBankID == PaymentObj.ReceiverBankID)
            return PM_ToManual("Банк плательщика идентичен банку получателя платежа ");
        end;
    end;

    // Платеж с признаком "В невыясненные"
    if( PaymentObj.IsUnknown == "X" )
        if( IsOprMultiExec() == FALSE ) 
            return PM_ToUnknown();
        else // Оставляем платеж в списке принятых (27285)
            return PM_ToManual( "" );
        end;
    end;  

    // Найти входящую корсхему
    if( НайтиКорсхему( PaymentObj.InCorschem, PaymentObj.BaseFIID, cors ) )
        msgBox("Не найдена входящая корсхема");
        return 1;
    end;

    // Если платеж не является транзитным - установить символ бэк-офиса
    if( not FlagTrans )
        if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_ENTER ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;
    end;

    // Проверить ДПП
    var IsWorkdayCurdate:bool = ( IsWorkday({curdate}) == 1 );
    array Text, Buttons;

    if( ( PaymentObj.DemandIsESID != "X" ) and ( PaymentObj.InTransferDate != {curdate} ) )
        var IsDPPOperday = false, IsDPPBalance = "";

        IsDPPOperday = existsOperDay(PaymentObj.InTransferDate, cors.Department, @IsDPPBalance);

        if( IsDPPOperday and IsDPPBalance )
            if( GetDialogFlag() )
                Text(0) = "Входящая ДПП платежа не соответствует текущему операционному дню.";
                Text(1) = "Провести платеж текущим оперднем?";
                Buttons( 0 ) = "Да";
                Buttons( 1 ) = "Нет";
                if( ConfWin( Text, Buttons ) == 1 )
                    return 1;
                end;
            end;
            PaymentObj.ValueDate = {curdate};
        else
            if( not IsWorkdayCurdate )
                if( IsDPPOperday )
                    err_mes = "Входящая ДПП платежа не соответствует текущему операционному дню. " +
                              "Исполнение платежа текущим операционным днем невозможно";
                else
                    err_mes = "Нет операционного дня, совпадающего с входящей ДПП платежа. " +
                              "Исполнение платежа текущим операционным днем невозможно";
                end;
                msgbox(err_mes);
                return 1;
            else
                if( (PaymentObj.InTransport != TRANSP_SWIFT) and (PaymentObj.DocKind != 322 /*WL_WIPM*/) )
                    PaymentObj.ValueDate = {curdate};
                end;
            end;
        end;
    // Gurin S. 22.12.2014 В 2030 такого не было
    //elif( ( PaymentObj.DemandIsESID != "X" ) and ( PaymentObj.InTransferDate == {curdate} ) and not IsWorkdayCurdate )
    //    //Gurin S. 15.12.2014 R-513339-2 Для 20013 (робот-планировщик 24*7) проверка не нужна
    //    if ({oper} != 20013)
    //       //TAM 04.11.2014
    //       if( fgBank.is_EXV and (PaymentObj.InTransport == 53)) //для транспорта МФР разрешаем зачисления в нерабочие дни
    //       else
    //           return PM_ToManual( "Невозможно исполнение платежа в дне входящей ДПП" );
    //       end;
    //    end;
    end;

    if( (GetOprStatus(OPR_PAYM_MANUAL) == OPR_PAYM_ST_MANUAL_PROCESSED) or 
        (GetOprStatus(OPR_PAYM_INDEX) == OPR_PAYM_ST_INDEX_UNKNOWN) )
        if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_ENTER ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;

        return 0;
    end;

    if( PaymentObj.Date > {curdate})
        return PM_ToManual( "Дата документа больше даты операционного дня" );
    end;

    // Проверки требований ЭСИД
    if( PaymentObj.DemandIsESID == "X" )
        if( strlen(PaymentObj.PayerAccount) == 0)
            RejectPayment( PaymentObj, "35;В электронном документе, сформированном налоговым органом, не указан счет плательщика, с которого должна быть списана сумма взыскания");
            return 0;
        elif( strlen(PaymentObj.ReceiverAccount) == 0)
            RejectPayment( PaymentObj, "35;В электронном документе, сформированном налоговым органом, не указан счет получателя, на который должна быть зачислена сумма взыскания");
            return 0;
        elif( PaymentObj.PayerBankID <= 0 )
            RejectPayment( PaymentObj, "31;Электронный документ ошибочно направлен налоговым органом не в тот банк (филиал банка)");
            return 0;
        elif( PaymentObj.PayerGroup != PAYMENTS_GROUP_INTERNAL )
            RejectPayment( PaymentObj, "100;Поручение на списание направлено в филиал " + GetDepartmentNameByBankID( PaymentObj.PayerBankID ) + ", не включенный в ЦАБС. Автоматическая передача инкассового поручения в этот филиал невозможна");
            return 0;
    elif( int( PaymentObj.Number ) == 0 )
      RejectPayment( PaymentObj, "35;Номер поручения не соответсвует требованиям Положения Банка России от 19.06.2012 №383-П");
            return 0;
        elif( PaymentObj.BaseAmount <= 0 )
            RejectPayment( PaymentObj, "35;Не задана сумма взыскания");
            return 0;
        elif( PaymentObj.PayerAccount == "" )
            RejectPayment( PaymentObj, "35;В электронном документе, сформированном налоговым органом, не указан счет плательщика, с которого должна быть списана сумма взыскания");
            return 0;
        elif( ПроверитьСчетПлательщикаЭСИД( PaymentObj ) != 0 )
            return 0;
        elif( PaymentObj.ReceiverAccount == "" )
            RejectPayment( PaymentObj, "35;В электронном документе, сформированном налоговым органом, не указан счет получателя, с которого должна быть списана сумма взыскания");
            return 0;
        else
            checkName = СравнитьНаименованияПлательщика( PaymentObj.PaymentID );
            if( (checkName == PAYMERR_CHECKNAMNEWRONGINN) or (checkName == PAYMERR_CHECKNAMENOINN) )                       
                RejectPayment( PaymentObj, "35; ИНН " + PaymentObj.PayerINN + " клиента " + PaymentObj.PayerName + " не соответствует номеру счета клиента "+
                               PaymentObj.PayerAccount + ", указанному в поручении налогового органа на списание денежных средств № " + PaymentObj.Number + 
                               " от " + PaymentObj.Date + " на сумму " + PaymentObj.BaseAmount + ", направленном в банк (филиал банка) БИК " +
                               PaymentObj.PayerBankCode + " " + PaymentObj.PayerBankName );
            elif( (checkName == PAYMERR_CHECKNAMNEWRONGNAME) or (checkName == PAYMERR_CHECKNAMENONAME) )
                RejectPayment( PaymentObj, "33;Наименование клиента не соответствует номеру счета клиента, указанному в электронном документе, сформированном налоговым органом");
            else
                if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_EXEC_ORDER ) )
                    msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                    return 1;
                end;
                return 0;
            end;
        end;
    end;


    if( not FlagTrans )
        if( DKFlag == FL_KREDIT )
        //SDA 30/05/2012 I-00200889-2 проверка достаточности остатка на активном счете получателя 
            if (СчетАктивный( PaymentObj.FutureReceiverAccount, 1, PaymentObj.FutureReceiverFIID ))
                if (abs(ПолучитьОстаток( PaymentObj.FutureReceiverAccount, 1, PaymentObj.FutureReceiverFIID )) < abs(PaymentObj.ReceiverAmount)) 
                    return PM_ToManual( "Недостаточно средств на активном счете получателя" );
                end;
            end;
/* 16.06.2014 SDA тип счета Й - вСолидарности  это Клиент банк
            //Tikh Проверка на признак счета
            if(typeacc(PaymentObj.ReceiverAccount))
                return PM_ToUnknown("Пользовательский тип счета Й");
            end;
*/
        else
            if( ( strlen( PaymentObj.PayerAccount ) == 0 ) ) 
                return PM_ToManual( "Не указан счет плательщика" );
            end;
/*
            // Tikh Проверка на признак счета
            if(typeacc(PaymentObj.PayerAccount))
                return PM_ToUnknown("Пользовательский тип счета Й");
            end;
*/
        end;
    end;

    //Kozina по УФЭБС приходят платежи только на рублевые счета
    if((PaymentObj.IsExternal) and (PaymentObj.InCorschem == 1) and (PaymentObj.ReceiverFIID != 0))
        PM_ToUnknown("Валюта счета получателя отлична от рублей");
    end;

    // Tikh Шифр операции, отличный от 01
    // SDA 18.03.2014 Теперь ходят и  06 и 02 ED103 и ED104
    if ((( PaymentObj.ShifrOper != "01" ) and ( PaymentObj.ShifrOper != "16" ) and ( PaymentObj.ShifrOper != "06" ) and ( PaymentObj.ShifrOper != "02" )) and 
        (PaymentObj.BaseFIID == 0) and 
        (not (FlagTrans)))
        //TAM 04.09.2013 C-23100
        if(PaymentObj.ShifrOper == "09") //мемориальный ордер ED111
            return PM_ToUnknown("Шифр операции 09 (ED111)");
        else
//            return PM_ToManual( "Шифр операции, отличный от 01 или 16" );
            return PM_ToManual( "Неверный шифр операции" );
        end;
    end;

    //#144442 
    if( DKFlag == FL_KREDIT )
        if( PM_AccountIsMFR(PaymentObj.ReceiverAccount, CHAPT1, PaymentObj.ReceiverFIID) ) 
            return PM_ToManual( "Конечный счет получателя не задан" );
        end;
    else
        if( PM_AccountIsMFR(PaymentObj.PayerAccount, CHAPT1, PaymentObj.PayerFIID) ) 
            return PM_ToManual( "Конечный счет плательщика не задан" );
        end;
    end;

    // Если платеж является непокрытым аккредитивом
    if( ( not PaymentObj.ReceiverFIID ) and ( PaymentObj.ShifrOper == "08" ) )
        field_value = PaymentObj.AkkrType;
        if( field_value )
            if ( (field_value == "О") OR (field_value == "Б") )
                Покрытие = КодПокрытия;
            else
                Покрытие = КодНепокрытия;
                IsAkkr   = true;
            end;
        end;
    end;

    // Проверка по настройке "Счета клиентов"
    if( not FlagTrans )
        if( DKFlag == FL_KREDIT )
            if( ( PM_IsBankAccount( PaymentObj.ReceiverAccount, PaymentObj.ReceiverFIID ) ) ) 
               if (PaymentObj.ReceiverAccount == PaymentObj.FutureReceiverAccount)
                  return ПроверитьКодБанка(PaymentObj.ReceiverAccount, PaymentObj.ReceiverFIID, PaymentObj.ReceiverBankCode, PaymentObj.ReceiverBankCodeKind);
               else
                  return ПроверитьКодБанка(PaymentObj.FutureReceiverAccount, PaymentObj.ReceiverFIID, PaymentObj.ReceiverBankCode, PaymentObj.ReceiverBankCodeKind);
               end;
            end;
        else
            if( ( PM_IsBankAccount( PaymentObj.PayerAccount, PaymentObj.PayerFIID ) ) ) 
                return ПроверитьКодБанка(PaymentObj.PayerAccount, PaymentObj.PayerFIID, PaymentObj.PayerBankCode, PaymentObj.PayerBankCodeKind);
            end;
        end;
    end;

    // Произвести проверку номера счета плательщика
    // Для входящих дебетовых документов
    if( ( not FlagTrans ) and ( DKFlag == FL_DEBET ) )
        if( СчетОткрыт( PaymentObj.PayerFIID, PaymentObj.PayerAccount, 1, AccType ) )
            // Если запрет на дебет
            if( Index( AccType, "Т" ) ) 
                return PM_ToManual( "Нельзя списать требуемую сумму со счета плательщика № " + PaymentObj.PayerAccount );
            end;
        else
            return PM_ToManual( "Нельзя списать требуемую сумму со счета плательщика № " + PaymentObj.PayerAccount );
        end;
    end;

    // Если платеж является аккредитивом
    if( ( not PaymentObj.ReceiverFIID ) and ( PaymentObj.ShifrOper == "08" ) )
        // В групповом режиме аккредитивы не обрабатываются
        if( IsOprMultiExec())
            msgbox("В групповом режиме аккредитивы не обрабатываются");
            return 1;
        end;
        // транзитный аккредитив
        if( FlagTrans )
            return PM_ToUnknown("Транзитный аккредитив");
        end;
        // Если аккредитив - непокрытый
        if( Покрытие == КодНепокрытия )
            if( УстановитьСтатусыПлатежа( OPR_PAYM_STATE, OPR_PM_ST_CLOSE ) )
                msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                return 1;
            end;
            return 0;
        end;
        if( Покрытие == 0 )
            msgBox("Невозможно определить вид покрытия аккредитива");
            return 1;
        end;
    end;

    // Если платеж неполноформатный
    if( PaymentObj.IsShortFormat )
        return PM_ToUnknown();
    end;

    //SDA заполняем пустые поля ИНН получателя нулем 
    if ( Trim(PaymentObj.ReceiverINN) == "")
        PaymentObj.ReceiverINN ="0";
    end;

    // Проверить наименования
    if( not FlagTrans )
        // Только юридические или предприниматели !!!
        var errFirst: integer = 0,
            errSecond: integer = 0;

        if( DKFlag == FL_KREDIT )
            //SDA 30/05/2012 I-00200889-2 проверяются только наименования расчетных счетов
            if((СчетРасчетный(PaymentObj.ReceiverAccount)) or 
               ((fgBank.is_EXV) and (substr(PaymentObj.PayerAccount,1,5) == "40821")))  //zmp 20.01.2015 C-35359
                errFirst = СравнитьНаименованияПолучателя( PaymentObj.PaymentID, @errSecond );
            end;
            
        end;
        if( errFirst == 0 )
            if( PaymWithSPI )
                DO_Segment = OPR_PM_ST_REDIRECT;
            else
                DO_Segment = OPR_PM_ST_ENTER;
            end;
            if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, DO_Segment ) )
                msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                return 1;
            end;
        else
            err_mes = "";
            if( (errSecond == PAYMERR_CHECKNAMENOINN) or (errFirst == PAYMERR_CHECKNAMENOINN) )
                err_mes = "В платежном документе № " + PaymentObj.Number + " от " + PaymentObj.Date + " отсутствует ИНН получателя";
            end;
            if( (errSecond == PAYMERR_CHECKNAMENONAME) or (errFirst == PAYMERR_CHECKNAMENONAME) )
                if (err_mes != "") err_mes = err_mes + "\n"; end;
                err_mes = err_mes + "В платежном документе № " + PaymentObj.Number + " от " + PaymentObj.Date + " отсутствует наименование получателя";
            end;
            if( (errSecond == PAYMERR_CHECKNAMNEWRONGINN) or (errFirst == PAYMERR_CHECKNAMNEWRONGINN) )
                if (err_mes != "") err_mes = err_mes + "\n"; end;
                err_mes = err_mes + "В платежном документе № " + PaymentObj.Number + " от " + PaymentObj.Date + " ИНН получателя не совпадает с имеющимся в справочнике клиентов";
            end;
            if( (errSecond == PAYMERR_CHECKNAMNEWRONGNAME) or (errFirst == PAYMERR_CHECKNAMNEWRONGNAME) )
                if (err_mes != "") err_mes = err_mes + "\n"; end;
                err_mes = err_mes + "В платежном документе № " + PaymentObj.Number + " от " + PaymentObj.Date + " наименование получателя не совпадает с имеющимся в справочнике клиентов";
            end;
            if( PaymentObj.Notes.AddNote( PM_NOTEKIND_PAYM_ERRORSCHECK, err_mes ) != 0 )
                msgbox( "Ошибка при вставке примечания платежа" );
                return 1;
            end;

            if( (errFirst == PAYMERR_CHECKNAMENOINN) or (errFirst == PAYMERR_CHECKNAMENONAME) )
                GetRegistryValue( "АРМ ПОЗИЦИОНЕРА\\ЗАЧИСЛЕНИЕ\\ОТСУТСТВИЕ ДАННЫХ", V_INTEGER, errSecond, err );
                if (err) errSecond = 0; end;
                err_mes = "Не указаны необходимые для зачисления реквизиты клиента по счету № " + PaymentObj.ReceiverAccount;
            //TAM 19.02.2014 Adaptation I-00466027-2
            elif( (errSecond == PAYMERR_CHECKNAMNEWRONGNAME) or (errFirst == PAYMERR_CHECKNAMNEWRONGNAME) )
                if( DKFlag == FL_KREDIT )
                    err_mes = "Несоответствие номера счета наименованию получателя"; 
                else
                    err_mes = "Несоответствие номера счета наименованию плательщика";
                end;
            elif( (errFirst == PAYMERR_CHECKNAMNEWRONGINN) or (errFirst == PAYMERR_CHECKNAMNEWRONGNAME) )
                GetRegistryValue( "АРМ ПОЗИЦИОНЕРА\\ЗАЧИСЛЕНИЕ\\НЕВЕРНЫЕ ДАННЫЕ", V_INTEGER, errSecond, err );
                if (err) errSecond = 0; end;
                err_mes = "Указаны неверные реквизиты клиента по счету № " + PaymentObj.ReceiverAccount;
            end;

            if ( errSecond == 1 )
                PM_ToUnknown(err_mes);
            elif( errSecond == 0)
                PM_ToManual(err_mes);
            else
                msgbox("Ошибка в макросе! Не все исправили.");
                return 1;
            end;
        end;

    end;

    //Gurin S. 11.12.2014
    // Произвести проверку по настройке "Счета нерезидентов до 116-И"
    // Для входящих кредитовых документов, кроме непокрытых аккредитивов
    if( ( not FlagTrans ) and ( DKFlag == FL_KREDIT ) and ( not IsAkkr ) )
        // Если счет найден и открыт
        if( СчетОткрыт( PaymentObj.ReceiverFIID, PaymentObj.ReceiverAccount, 1, AccType, @Department ) )
            // Если запрет на кредит или счет в 116-И
            if( ( Index( AccType, "У" ) ) or ( PM_FindBalanceInReg_117( ПутьКНастройкеСчетаНерезидентов, PaymentObj.ReceiverAccount, 0 ) ) )
                if (not fgBank.is_PRBB)
                    return PM_ToManual("Запрещено зачисление на счет "+PaymentObj.ReceiverAccount+" в филиале " + Department);
                else
                    return PM_ToUnknown("Запрещено зачисление на счет "+PaymentObj.ReceiverAccount+" в филиале " + Department);
                end;
            end;
            /* Проверка спецбанковского */
            if( Index( AccType, "Я" ) )
                if( not PM_ExternalAccountIsSpecial( PaymentObj.PayerAccount ) )
                    return PM_ToManual( "Не допускается зачисление средств на специальный банковский счет со счета, не являющегося специальным банковским" );
                end;
            end;
        // Если счет найден и закрыт
        elif( СчетЗакрыт( PaymentObj.ReceiverFIID, PaymentObj.ReceiverAccount, 1, @Department ) )
            // Если для счета есть СПИ перенаправления
            if( not FoundSPI( 0, PaymentObj.ReceiverAccount, settacc ) )
                GetRegistryValue( "АРМ ПОЗИЦИОНЕРА\\ПЕРЕМЕННЫЕ\\CLOSEDACCOUNTREDIRECTTOEXTERNAL", V_BOOL, RegVal, err ); 
                if( СчетОткрыт( settacc.FIID, settacc.Account, 1, "", @settaccDep ) )
                    if( not НайтиКорсхему( PaymentObj.InCorschem, PaymentObj.BaseFIID, corschem ) )
                        PaymWithSPI = IfThenElse( settaccDep != corschem.Department, RegVal, true ); 
                    end;
                elif( not СчетЗакрыт( settacc.FIID, settacc.Account, 1, @settaccDep ) )
                    PaymWithSPI = RegVal; 
                end;
            end;
            if( PaymWithSPI == false )
                //SDA 15.02.2012 при поступлении на закрытый счет в случае отсутсвия редиректа  
              if( IsOprMultiExec())
                  return PM_ToUnknown( "Счет № " + PaymentObj.ReceiverAccount + " в филиале № " + GetDepartmentName( Department ) + " закрыт" );
              else
                  return PM_ToManual( "Счет № " + PaymentObj.ReceiverAccount + " в филиале № " + GetDepartmentName( Department ) + " закрыт" );
              end;
            end;
        else // Если счет не найден
            //SDA - если предварительно не указан счет для зачисления 
            if (PaymentObj.ReceiverAccount == PaymentObj.FutureReceiverAccount)
                if ((fgBank.is_VUZ ) or (fgBank.is_EXV ) or (IsSinglePaymentInMultyPayment(PaymentObj.paymentid) == 1)) //TAM 26.08.2013 C-21757
                    return PM_ToManual( "Не найден счет получателя № " + PaymentObj.ReceiverAccount );
                else
                    return PM_ToUnknown( "Не найден счет получателя № " + PaymentObj.ReceiverAccount );
                end;
            else
                // указан счет для зачисления - на ручную 
               if ((fgBank.is_VUZ ) and ( PaymentObj.FutureReceiverAccount ==  acc_day ))
               else
                  if((fgBank.is_prbb) and (PaymentObj.FutureReceiverAccount == "")) // zmp 22.01.2015 I-00546013-1
                     return PM_ToUnknown( "Не найден счет получателя № " + PaymentObj.ReceiverAccount );
                  else
                     return PM_ToManual( "Не найден счет получателя № " + PaymentObj.ReceiverAccount );
                  end;
               end;

            end;
        end;
    end;

    // проверим по 117-И
    if( ПоместитьВНевыясненныеПо117И() )
        return 0;
    end;

    // Если платеж транзитный
    if( FlagTrans )
        if( (PaymentObj.OutCorschem == PaymentObj.InCorschem) and (PaymentObj.OutCorschemFIID == PaymentObj.InCorschemFIID) )
            if(PaymentObj.IsCredit())            
                PaymentObj.SetReceiverPI( PAYMENTS_GROUP_UNDEF, 
                                          PaymentObj.ReceiverBankID, 
                                          PaymentObj.ReceiverBankCodeKind, 
                                          PaymentObj.ReceiverBankCode, 
                                          PaymentObj.ReceiverBankName,
                                          PaymentObj.ReceiverBankCorrAcc,
                                          PaymentObj.ReceiverFIID, 
                                          1/*CHAPT1*/, 
                                          PaymentObj.ReceiverAccount, 
                                          PaymentObj.Receiver, 
                                          PaymentObj.ReceiverName, 
                                          PaymentObj.ReceiverINN,
                                          NULL,
                                          NULL,
                                          -1,
                                          PM_CORRPOS_TYPE_USER );
            else
                PaymentObj.SetPayerPI(  PAYMENTS_GROUP_UNDEF, 
                                        PaymentObj.PayerBankID, 
                                        PaymentObj.PayerBankCodeKind, 
                                        PaymentObj.PayerBankCode, 
                                        PaymentObj.PayerBankName,
                                        PaymentObj.PayerBankCorrAcc,
                                        PaymentObj.PayerFIID, 
                                        1/*CHAPT1*/, 
                                        PaymentObj.PayerAccount, 
                                        PaymentObj.Payer, 
                                        PaymentObj.PayerName, 
                                        PaymentObj.PayerINN,
                                        NULL,
                                        NULL,
                                        -1,
                                        PM_CORRPOS_TYPE_USER );
            end;

            PaymentObj.OutTransport= 0;
            PaymentObj.OutRlsForm  = 0;
            PaymentObj.OutTpSchem  = 0;
            PaymentObj.OutSubKindMessage = 0;

            if( УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, OPR_PM_ST_DIR_IN ) )
                msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                return 1;
            end;
            return PM_ToManual("Совпадают входящий и исходящий корсчета"); 
        else
            if( УстановитьСтатусыПлатежа( OPR_PAYM_DIRECT, 4 ) )
                msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                return 1;
            end;
        end;

        if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_ENTER ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;
    end;

    //SDA 14.02.2012 - предобработка ответного
    if ((FlagTrans) and (PaymentObj.BaseFIID == 0))
        PaymentObj.OutTransferDate = {curdate}; 
        var tr = ПроверитьПоФорматуУФЭБС(PaymentObj);

        if(strlen(trim(tr)) > 0)
            return PM_ToManual(tr); 
        end;
    end;

    //Lavrenov: 14.06.2012 Исправление неведомой хрени с плательщиком во входящем платеже
    If((PaymentObj.dockind == 320) and (PaymentObj.Payer != -1))
        PaymentObj.SetPayerPI( PAYMENTS_GROUP_EXTERNAL, 
                               PaymentObj.PayerBankID, 
                               PaymentObj.PayerBankCodeKind, 
                               PaymentObj.PayerBankCode, 
                               PaymentObj.PayerBankName,
                               PaymentObj.PayerBankCorrAcc,
                               PaymentObj.PayerFIID, 
                               1/*CHAPT1*/, 
                               PaymentObj.PayerAccount, 
                               -1,/*у входящего платежа плательщик всегда -1*/ 
                               PaymentObj.PayerName, 
                               PaymentObj.PayerINN
                             );      
    end;

    //TAM 09.08.2013 C-21757 
    if(IsSinglePaymentInMultyPayment(PaymentObj.paymentid) == 1)
        return PM_ToManual("Одиночные платежи в составе сводного идут на ручную обработку и ждут обработки!");
    end;

    if( stat < 0 )
        return 1;
    end;

    return 0;
end;

macro CheckStepAction( mes )
    private var cmd;

    if ( mes == OP_BACKOUT_STEP )
        // KS 06.09.2012 Простановка категории
        cmd = RSDCommand( "delete from dobjatcor_dbt "+
                          "      where t_objecttype = 501"+
                          "        and t_groupid = 1016"+
                          "        and t_object = lpad(?,10,'0')");
        cmd.addParam("", RSDBP_IN, PaymentObj.paymentid);
        cmd.Execute();

        cmd = RSDCommand( "insert into dobjatcor_dbt values(501,"+
                          "   1016,"+
                          "   7,"+
                          "   lpad(?,10,'0'),"+
                          "   chr(0),"+
                          "   ?,"+
                          "   ?,"+
                          "   to_date('31.12.9999','DD.MM.YYYY'),"+
                          "   trunc(sysdate),"+
                          "   sysdate-trunc(sysdate)+to_date('01.01.0001','DD.MM.YYYY'),"+
                          "   chr(0))");
        cmd.addParam("", RSDBP_IN, PaymentObj.paymentid);
        cmd.addParam("", RSDBP_IN, {curdate});
        cmd.addParam("", RSDBP_IN, {oper});
        cmd.Execute();
    end;

    return 0;
end;


//Jushmanov 2014-02-21 C-19151
macro PostStepAction( message,      /* 1 - выполнение шага; 2 - откат шага;   */
                      errTrn,       /* статус выполнения шага. 0 - ошибки нет */
                      FirstDoc,     /* указатель на первичный документ        */
                      ID_Oper,      /* внутренний идентификатор операции      */
                      Number_Step,  /* Номер шага операции (из настроек)      */
                      KindOper,     /* номер вида операции                    */
                      KindDoc,      /* номер вида первичного документа        */
                      KindStep,     /* вид шага операции                      */
                      ID_Step )     /* внутренний идентификатор шага операции */
    private var logquery;

    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(ID_Oper) != V_INTEGER) and (valtype(ID_Oper) != V_STRING)) ID_Oper = 0; end;
        if ((valtype(ID_Step) != V_INTEGER) and (valtype(id_Step) != V_STRING)) ID_Step = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + ID_Oper + " AND t_id_step = " + ID_Step;
        ExecSQL(logquery, null, false);
    end;

    return 0;
end;