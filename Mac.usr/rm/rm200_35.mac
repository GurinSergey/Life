//-----------------------------------------------------------------------------
// Блок      : 29029 - "Ручная обработка"
// Шаг       : 35    - "Контроль отредактированного платежа"
// Назначение: Макрос шага
// Описание  : Макрос шага
// KS 09.12.2013 Перенос пользовательских доработок в 31ю сборку
// Jushmanov 2014-02-25
//-----------------------------------------------------------------------------
import WldInter, "cbsttls.mac", pm_tools, "pm_common.mac", pm_setst, pmsummo;
import OprInter, oralib; //Jushmanov 2014-02-25 C-19151

var PaymentObj:RsbPayment;


//-----------------------------------------------------------------------------
// Выполнение шага
//-----------------------------------------------------------------------------
macro ExecuteStep( Kind_Operation, first, KindDoc, ID_Operation, ID_Step )

    var err      :integer = 0;
    var Direct   :integer = GetOprStatus( OPR_PAYM_DIRECT );
    var Account  :string;
    var FIID     :integer;
    var Chapter  :integer = 1;
    var note_text:string = "";
    var err_text :string = "";
    var err_str  :string = "";
    var stat     :integer = 0;

    var CABS_Segment:integer;

    if( not IsSummaryPayment( PaymentObj ) )

        // Определить, какой счет надо проверять
        if( ( Direct == OPR_PM_ST_DIR_IN ) or ( Direct == OPR_PM_ST_DIR_TRANZIT ) ) // Входящий или транзитный
            Account = PaymentObj.FutureReceiverAccount;
            FIID    = PaymentObj.FutureReceiverFIID;
            err_text = "Счет получателя ";
            err_str  = " получателя";
        else
            if( PaymentObj.DbFlag )
                Account  = PaymentObj.FuturePayerAccount;
                FIID     = PaymentObj.FuturePayerFIID;
                err_text = "Счет плательщика ";
                err_str  = " плательщика";
            else
                Account = PaymentObj.FutureReceiverAccount;
                FIID    = PaymentObj.FutureReceiverFIID;
                err_text = "Счет получателя ";
                err_str  = " получателя";
            end;
        end;

        // Проверить счет
        if( СчетСуществуетИОткрыт( FIID, Account, Chapter ) )

            // Если счет является счетом МФР
            if( PM_AccountIsMFR( Account, Chapter, FIID, false, err ) )
                note_text = err_text + "не может быть счетом МФР";
                msgbox( note_text );
                if( PaymentObj.Notes.AddNote( PM_NOTEKIND_DENIALGROUND, note_text ) != 0 )
                    msgbox( "Ошибка при вставке примечания платежа" );
                    return 1;
                end;
                return 0;
            end;

        else

            note_text = "Нельзя работать с закрытым счетом" + err_str;
            if( PaymentObj.Notes.AddNote( PM_NOTEKIND_DENIALGROUND, note_text ) != 0 )
                msgbox( "Ошибка при вставке примечания платежа" );
                return 1;
            end;
            return 0;
        end;

    end;

    if( ( Direct == OPR_PM_ST_DIR_IN ) or ( Direct == OPR_PM_ST_DIR_TRANZIT ) ) // Входящий или транзитный

        if( УстановитьСтатусыПлатежа( OPR_PAYM_CONTROL, OPR_PAYM_ST_CTRL_CONTROL ) )
            msgbox("Ошибка при установке сегментов статуса экземпляра операции");
            return 1;
        end;

    else

        if(  not IsSummaryPayment( PaymentObj ) )
            // Проверим счет на наличие признака "К"
            if( PM_CheckAccount_Type( Account, Chapter, FIID, "К" ) )
                note_text = err_text + "не может быть корреспондентским счетом";
                msgbox( note_text );
                if( PaymentObj.Notes.AddNote( PM_NOTEKIND_DENIALGROUND, note_text ) != 0 )
                    msgbox( "Ошибка при вставке примечания платежа" );
                    return 1;
                end;
                return 0;
            end;
        end;

        if( PaymentObj.StartDepartment == PaymentObj.EndDepartment )
            CABS_Segment = OPR_PM_ST_MFR_YES;
        else
            CABS_Segment = OPR_PM_ST_MFR_NO;
        end;

        if( PaymentObj.DocKind != PS_INRQ )
            if( УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_ENTER, OPR_PAYM_CABS, CABS_Segment ) )
                msgbox("Ошибка при установке сегментов статуса экземпляра операции");
                return 1;
            end;
        end;
    end; 

    // Если все нормально - то снять признак необходимости ручной обработки
    if( УстановитьСтатусыПлатежа( OPR_PAYM_MANUAL, OPR_PAYM_ST_MANUAL_NOTNEED ) )
        msgbox("Ошибка при установке сегментов статуса экземпляра операции");
        return 1;
    end;

    // Очистить примечание
    if( PaymentObj.Notes.AddNote( PM_NOTEKIND_DENIALGROUND, note_text ) != 0 )
        msgbox( "Ошибка при вставке примечания платежа" );
        return 1;
    end;

    // Установить ToBackOffice
    return 0;
end;


//Jushmanov 2014-02-25 C-19151
macro PostStepAction( message,      /* 1 - выполнение шага; 2 - откат шага;   */
                      errTrn,       /* статус выполнения шага. 0 - ошибки нет */
                      FirstDoc,     /* указатель на первичный документ        */
                      ID_Oper,      /* внутренний идентификатор операции      */
                      Number_Step,  /* Номер шага операции (из настроек)      */
                      KindOper,     /* номер вида операции                    */
                      KindDoc,      /* номер вида первичного документа        */
                      KindStep,     /* вид шага операции                      */
                      ID_Step )     /* внутренний идентификатор шага операции */
    private var logquery, idStep = ID_Step, idOper = ID_Oper;

    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(idOper) != V_INTEGER) and (valtype(idOper) != V_STRING)) idOper = 0; end;
        if ((valtype(idStep) != V_INTEGER) and (valtype(idStep) != V_STRING)) idStep = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + idOper + " AND t_id_step = " + idStep;
        ExecSQL(logquery, null, false);
    end;

    return 0;
end;