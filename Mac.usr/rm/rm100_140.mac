//-----------------------------------------------------------------------------
// Блок      : 29027 - "Картотека ЛОРО-счета"
// Шаг       : 140   - "Списание с внебаланса"
// Назначение: Макрос шага
// Описание  : Макрос шага
//-----------------------------------------------------------------------------
import InsCarryDoc, PaymInter, PTInter, OprInter, BankInter, RMInter, WldInter,
       "rmtools.mac", "pmincom.mac", "cbctuncs.mac", "cbsttls.mac", "pm_categ.mac",
       "cor_acc.mac";
import oralib; //Jushmanov 2014-02-24 C-19151

RECORD Corschem( corschem );
var PaymentObj:RsbPayment;

//-----------------------------------------------------------------------------
// Выполнение шага
//-----------------------------------------------------------------------------
macro ExecuteStep( doc, first )

    var stat:integer = 0;

    // Счета для проводки
    var AccountLORO:string = "",
        AccountCard:string = "";

    // Виды счетов
    var AccountLOROKind:string = "",
        AccountCardKind:string = "";

    var AccCardObj;

    // Проводка
    var paymtr:RsbPaymTransaction = PaymentObj.MakeTransaction();

    // Получить счет "Картотека корсчета ЛОРО"
    AccountLORO = Corr_Acc(PaymentObj).FindAndOpenSysAccount( "ВнебалКартотекаКорсчета", 0, {curdate} );//GetCorAcc( Corschem.FIID, Corschem.Number, CORS_ACC_CARDFILELORO );

    // Получить вид счета "Картотека корсчета ЛОРО"
    AccountLOROKind = PM_GetAccountKind( AccountLORO, Corschem.FIID, 3 );

    // Получить вид счета корреспонденции с картотеками
    if( Index( AccountLOROKind, "А" ) )
        AccountCardKind = "П";
    else
        AccountCardKind = "А";
    end;

    // Получить счет корреспонденции с картотеками
    AccCardObj  = NotBalCorrAcc_FirstDoc( AccountCardKind );
    AccountCard = AccCardObj.FindAndOpenSysAccount( "ВнебалСчетКорресп", 0, {curdate} );

    // Заполняем поля документа
    paymtr.Chapter         = 3;
    paymtr.ResultCarry     = 1;
    paymtr.Kind_Oper       = " 1";
    paymtr.Shifr_Oper      = "09";
    paymtr.AccountReceiver = AccountLORO;
    paymtr.FIIDReceiver    = PaymentObj.BaseFIID;
    paymtr.SumReceiver     = PaymentObj.BaseAmount;
    paymtr.AccountPayer    = AccountCard;
    paymtr.FIIDPayer       = 0/*NATCUR*/;
    paymtr.SumPayer        = PaymentObj.BaseAmount;
    if( PaymentObj.BaseFIID != 0/*NATCUR*/)
        ConvSumCross( paymtr.SumPayer, PaymentObj.BaseAmount, {curdate}, PaymentObj.BaseFIID, 0/*NATCUR*/ );
    end;
    paymtr.Date_Carry      = PaymentObj.ValueDate;
    paymtr.Department      = PaymentObj.Department;
    paymtr.Ground          = substr( "Постановка в картотеку документа/"+PaymentObj.Ground, 1, 210 );
    paymtr.Numb_Document   = PaymentObj.Number;
    paymtr.Status_After    = ACCTRN_STATUS_DOCUMENT;

    if( not paymtr.Carry() )
        MsgBox( "Ошибка при актуализации платежа" );
        return 1;
    end;

    PaymentObj.PropStatus = PM_PROP_RECEIVED;

    return УстановитьСтатусыПлатежа( OPR_PAYM_DO, OPR_PM_ST_PREP, 
                                     OPR_PAYM_INDEX, OPR_PAYM_ST_INDEX_NO, 
                                     OPR_PAYM_PERMISSION, OPR_PAYM_ST_PERMISSION_YES );
end;


//Jushmanov 2014-02-24 C-19151
macro PostStepAction( message,      /* 1 - выполнение шага; 2 - откат шага;   */
                      errTrn,       /* статус выполнения шага. 0 - ошибки нет */
                      FirstDoc,     /* указатель на первичный документ        */
                      ID_Oper,      /* внутренний идентификатор операции      */
                      Number_Step,  /* Номер шага операции (из настроек)      */
                      KindOper,     /* номер вида операции                    */
                      KindDoc,      /* номер вида первичного документа        */
                      KindStep,     /* вид шага операции                      */
                      ID_Step )     /* внутренний идентификатор шага операции */
    private var logquery, idStep = ID_Step, idOper = ID_Oper;

    if(( message == OP_EXECUTE_STEP ) and (errTrn == 0) and (IsOprMultiExec))
        if ((valtype(idOper) != V_INTEGER) and (valtype(idOper) != V_STRING)) idOper = 0; end;
        if ((valtype(idStep) != V_INTEGER) and (valtype(idStep) != V_STRING)) idStep = 0; end;

        logquery = "UPDATE usr_doprstep_robot_dbt SET t_is_robot_step = chr(88)" +
                   " WHERE t_id_operation = " + idOper + " AND t_id_step = " + idStep;
        ExecSQL(logquery, null, false);
    end;

    return 0;
end;