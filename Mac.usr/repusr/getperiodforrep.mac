/**********************************************************/
/* Автоматическое определение дат                         */
/* по параметризованно заданному периоду                  */
/* и интервалу для пользоват. отчетов                     */
/*                                                        */
/* Коркин И. Н.                                           */
/*                                                        */
/* 17.06.2010                                             */
/**********************************************************/

import globals, Календарь, ReptCBMath;

/* Определяет день недели, 1 - понедельник */
macro DayOfWeek (day)
	var controlday, numday;
	if (ValType(day) == V_UNDEF)
		day = {curdate};
	end;
	controlday = date("14.06.2010");
	numday = mod(date(day) - controlday, 7) + 1;
	if (numday < 0)
		numday = numday + 7;
	end;
	return numday;
end;

/* Получает предыдущий раб. день от указанного */
macro PrevWorkDays (day)
	day = date(day);
	day = day - 1;
	while (Workdays(day, day) == 0)
		day = day - 1;
	end;
	return day;
end;

/* Определяет даты указанного периода */
macro getPeriod (period, seq, date_begin:@date, date_end:@date)
	var mon, day, year;
	DateSplit({curdate}, day, mon, year);
	/* Берем даты из параметров */
	if (seq == "date")
      date_begin = date(date_begin);
      date_end = date(date_end);	
	/* Текущий период */      			
	elif (seq == "cur")
      /* Месяц */
   	if (period == "month")
         date_begin = DateAfterCalenMonths({curdate}, 0) - day + 1;
         date_end = DateAfterCalenMonths({curdate}, 1) - day;	   		
      /* Неделя */
   	elif (period == "week");
   	   date_begin = {curdate} - DayOfWeek({curdate}) + 1;
   	   date_end = {curdate} - DayOfWeek({curdate}) + 7;
      /* День */
   	elif (period == "day") 
         date_begin = {curdate};
         date_end = {curdate};
   	else                ;
   	end;
	/* Предыдущий период */	
	elif (seq == "prev")
      /* Месяц */
   	if (period == "month")
         date_begin = DateAfterCalenMonths({curdate}, -1) - day + 1;
         date_end = DateAfterCalenMonths({curdate}, 0) - day;	   		
      /* Неделя */
   	elif (period == "week");
   	   date_begin = ({curdate} - 7) - DayOfWeek({curdate} - 7) + 1;
   	   date_end = ({curdate} -7) - DayOfWeek({curdate} - 7) + 7;
      /* День */
   	elif (period == "day") 
         date_begin = PrevWorkDays({curdate});
         date_end = PrevWorkDays({curdate});
      /* Период для Картотеки 2 */
      elif (period == "k2")
         date_begin = DateAfterCalenMonths(PrevWorkDays({curdate}), -1);
         date_end = PrevWorkDays({curdate});	   		
   	else;
   	end;
   else;
   end;
end;
