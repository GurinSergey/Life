/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   Гуцу Е.В.

   Имя файла: rpKorPayms.mac

   Создан:    18.09.2015

   Описание:  Отчёт по поступлениям на счета клиентов, у которых в картотеке ОР имеются документы с 4-й очередностью

   ChangeLog:
-----------------------------------------------------------------------------------------------------------------------------------------------------
--/--/---- Е.Гуцу 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
import globals, rsexts, activex, rsd;

var nameout = "..\\txtfile\\rpKorPayms_" + random();
var repDate = {CurDate};
setOutput(nameout);


/* Класс для работы с Excel, заимствован из rep_corschem.mac */
PRIVATE CLASS myExcelReport

  private var myWorkBook;
  private var myWorkExcel;
  private var myWorkSheet;
  var numSheet = 1;

  private var myRecord = null;
 
  var cntRecord = 0;
  var amountRecord = $0.0;

  macro ClearSymble(str, split_char)
      str = StrSubst(str, strfor(13), "" );
      str = StrSubst(str, strfor(10), "" );
      str = StrSubst(str, split_char, " ");
      return string(str);   
  end;

  private macro SetTypeColumns();
      var result_arr = TArray(true), i;
 
      for(i, 1, 4)
        var templs_arr = TArray(true);         
        templs_arr(0) = i;
        templs_arr(1) = 2;
        if( i == 4 )
           templs_arr(1) = 1;
        end;

        result_arr(i - 1) = templs_arr;
      end; 

      return result_arr;
  end;

  private macro GetWorkDirName() : string
      var DirName:string = "", 
          StrErr :string = "";

      GetRegistryValue( "BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR", V_STRING, DirName, StrErr );        
      if( DirName )     
        if( SubStr(DirName, 1, 1) == "." ) DirName = "$" + GetCurDir(TRUE) + strSubst (DirName, "..",""); end;     
        if (existFile(DirName))  return DirName;  end;
      end;

      DirName = "$" + GetEnv("TEMP");

      if( NOT DirName ) DirName = "$" + GetEnv("TMP"); end;
      if (existFile(DirName)) return DirName; end;

      msgbox("Ошибка поиска папки для временных файлов на терминале");

      return "";
  end;

  private macro myCopyFile (Name_file)
      var Templs_Dir_Term = GetWorkDirName();

      var TermFileName = toAnsi(Name_file);
      var SPFileName;

      if ( Templs_Dir_Term == "" )  return "";  end;
      SPFileName = "..\\txtfile\\" + Name_file; 

      if (not existFile(SPFileName)) MsgBox(string("Транспортный временный файл не найден: |", SPFileName)); return ""; end;
      if( not CopyFile(SPFileName, Templs_Dir_Term + "\\" + TermFileName) ) RunError("Ошибка при передаче файла на терминал\n" + Templs_Dir_Term + "\\" + TermFileName); end;

      return subStr(Templs_Dir_Term + "\\" + TermFileName, 2);      
  end;

  private macro OpenExcel()
      private var objectXls, WorkExcel;

      objectXls = CreateObject ("rsax", "TRsAxServer", string("RsAxServer", UserNumber()), IsStandAlone());
      WorkExcel = objectXls.CreateComObject ("Excel.Application"); 

      myWorkExcel = WorkExcel;

      return true;

  OnError(er)
      msgbox(er.Message); 
      return false;
  end;

  private macro SetHeaderExcelTable()
      var i; 
      myWorkBook.Sheets(numSheet);
      myWorkSheet = myWorkBook.ActiveSheet();

      myWorkSheet.Cells(1, 1).Value  = "Поступления на счета клиентов, по которым есть картотека ОР с 4-й очередностью " + strfor(13)+strfor(10) + " на " + repDate;
      myWorkSheet.Range("A1:I1").merge;
      myWorkSheet.Rows("1:1").RowHeight = 40;
      myWorkSheet.Range("A1:I1").font.size = 13;

      myWorkSheet.Cells(3, 1).Value  = "№ п/п";
      myWorkSheet.Cells(3, 2).Value  = "Номер счета";
      myWorkSheet.Cells(3, 3).Value  = "Наименование";
      myWorkSheet.Cells(3, 4).Value  = "Сумма поступлений";

      for (i, 1, 4)
        myWorkSheet.Cells(3, i).HorizontalAlignment = 3;
        myWorkSheet.Cells(3, i).Font.Bold = true; 
        myWorkSheet.Columns(i).EntireColumn.AutoFit;
      end; 
      //myWorkSheet.Range("A" + (cntRecord + 3) + ":D" + (cntRecord + 3)).Font.Bold = true; 
      myWorkSheet.Range("A3:D" + (cntRecord+3) ).Borders.Weight = 2;  
      myWorkSheet.Range("A3:D3").Interior.Color = #B5B5B5; 

      myWorkSheet.Columns(4).HorizontalAlignment = 4;
      myWorkSheet.columns(4).Entirecolumn.NumberFormat = "# ##0,00р.";

      return true;

   OnError
       return false;
   end;     

   macro CopyValueToExcel(myFileName)
       initprogress(-1, "", "Подготовка файла Excel");
       myFileName = myCopyFile(myFileName); 

       if ( OpenExcel() and  myFileName != "")      
        
         myWorkExcel.Workbooks.OpenText (myFileName, 866, 1, 1, 2, false, false, false, false, false, true, ";", SetTypeColumns(), 1, "."," ", true, false);
         myWorkBook = myWorkExcel.Workbooks.Application;

         SetHeaderExcelTable();

         remprogress;
         //MsgBox("Файл успешно записан");
         myWorkExcel.Visible = true;

         var wb = myWorkExcel.Workbooks.item(1);
         //wb.SaveAs( myFileName, 56 );         // xls
         wb.SaveAs( myFileName, 51 );           // xlsx

       end;                
   OnError(er)
       msgBox(er.Message);
   end;     

END;


/* Формирование рекордсета / подсчёт записей */
MACRO CriarRecordSet( isCount, pDate )

  var sql, cmd, rs;
  var SelectClause, RecCount;

  RecCount = 0;
  SelectClause = "   SELECT pm.t_receiveraccount, acc.t_nameaccount, SUM (pm.t_amount), pm.t_fiid "
                 "     FROM dpmpaym_dbt pm, daccount_dbt acc                                      "
                 "    WHERE acc.t_chapter       = pm.t_chapter                                    "
                 "      AND acc.t_code_currency = pm.t_fiid                                       "
                 "      AND acc.t_account       = pm.t_receiveraccount                            "
                 "      AND pm.t_valuedate      = ?                                               "
                 " GROUP BY pm.t_receiveraccount, acc.t_nameaccount, pm.t_fiid                    ";

  sql = SelectClause;
  if( isCount )
     sql = " SELECT count(0) FROM ( " + SelectClause + " ) ";
  end;

  cmd = rsdCommand( sql );
  cmd.addParam( "", RSDBP_IN, pDate );
  rs = rsdRecordSet( cmd );

  if( not isCount )
     return rs;
  end;

  if( rs and rs.moveNext() )
     RecCount = rs.value( 0, null, V_INTEGER );
  end;

  return RecCount;

END;


/* Формирование массива счетов с документами 4 очередности в КОР на дату отчёта */
VAR IwpAccountsArray = TArray(0);

MACRO FormaDeMatriz( pDate )

  var sql, cmd, rs, rs1;

  sql = " SELECT distinct( pm_kor.t_payeraccount )                    "
        "   FROM dpmpaym_dbt pm_kor, dpmrmprop_dbt rm, dpmhist_dbt hs "
        "  WHERE rm.t_paymentid  = pm_kor.t_paymentid                 "
        "    AND rm.t_priority   = 4                                  "
        "    AND hs.t_paymentid  = pm_kor.t_paymentid                 "
        "    AND hs.t_statusidto = 2100                               "
        "    AND hs.t_date      <= ?                                  "
        // Необходимо исключить из анализа документы, уже списанные с КОР на дату отчёта
        "    AND NOT EXISTS (SELECT 1                                 "
        "                     FROM dpmhist_dbt hs1                    "
        "                    WHERE hs1.t_paymentid = hs.t_paymentid   "
        "                      AND hs1.t_statusidfrom = 2100          "
        "                      AND hs1.t_date >= hs.t_date            "      // Дата списания с КОР больше даты постановки...
        "                      AND hs1.t_date <= ?)                   ";     // ... но меньше даты отчёта
   cmd = rsdCommand( sql );
   cmd.addParam( "", RSDBP_IN, pDate );
   cmd.addParam( "", RSDBP_IN, pDate );

   rs = rsdRecordSet( cmd );
   while( rs and rs.moveNext() )             
      IwpAccountsArray( IwpAccountsArray.Size ) = rs.value( 0, null, V_STRING );
   end;

END;


/* Проверка наличия счёта в массиве */
MACRO VerifiqueMatriz( pAccount )
  var n = 0;

  while( n < IwpAccountsArray.Size )

     if( IwpAccountsArray( n ) == pAccount )
        return true;
     end;
     n = n + 1;

  end;

  return false;
END;


MACRO GerarRelatorio( pDate, pFileName )

  var sql, cmd, rs;
  var repAccount, repAccName, repAccFiid, repAmount;

  var my_report = myExcelReport();
  var separator = ";", i = 1, amount = $0.0, text = "", vCount, ind = 1;


  /* Начинаем с 3 строяки */
  println(separator);println(separator);println(separator);

  
  /* Формируем массив счетов с документами 4 очередности в КОР на дату отчёта */
  FormaDeMatriz( pDate );

  /* Выборка всех счетов с поступлениями на отчётную дату */
  vCount = CriarRecordSet( true, pDate );

  initprogress( vCount, "Формирование отчёта...", "Обрабатываем поступления" );

  rs = CriarRecordSet( false, pDate );
  while( rs and rs.moveNext() )

     useProgress( i );
     i = i + 1;      

     repAccount = rs.value( 0, null, V_STRING  );
     repAccName = rs.value( 1, null, V_STRING  );
     repAmount  = rs.value( 2, null, V_MONEY   );
     repAccFiid = rs.value( 3, null, V_INTEGER );

     if( VerifiqueMatriz( repAccount ) )

        text = my_report.ClearSymble(string( ind          ), ";") + separator +
               my_report.ClearSymble(string( repAccount:r ), ";") + separator +
               my_report.ClearSymble(string( repAccName   ), ";") + separator +
               my_report.ClearSymble(string( repAmount    ), ";") + separator ;

        println(text);        
        ind = ind + 1;

     end;

     /*

     /* По каждому счёту необходимо проверить, есть ли на дату отчёта документы в КОР с 4 очередностью */
     sql = " SELECT pm_kor.*                                             "
           "   FROM dpmpaym_dbt pm_kor, dpmrmprop_dbt rm, dpmhist_dbt hs "
           "  WHERE pm_kor.t_payeraccount = ?                            "
           "    AND pm_kor.t_fiid         = ?                            "
           "    AND rm.t_paymentid  = pm_kor.t_paymentid                 "
           "    AND rm.t_priority   = 4                                  "
           "    AND hs.t_paymentid  = pm_kor.t_paymentid                 "
           "    AND hs.t_statusidto = 2100                               "
           "    AND hs.t_date      <= ?                                  "
           // Необходимо исключить из анализа документы, уже списанные с КОР на дату отчёта
           "    AND NOT EXISTS (SELECT 1                                 "
           "                     FROM dpmhist_dbt hs1                    "
           "                    WHERE hs1.t_paymentid = hs.t_paymentid   "
           "                      AND hs1.t_statusidfrom = 2100          "
           "                      AND hs1.t_date >= hs.t_date            "      // Дата списания с КОР больше даты постановки...
           "                      AND hs1.t_date <= ?)                   ";     // ... но меньше даты отчёта
      cmd = rsdCommand( sql );
      cmd.addParam( "", RSDBP_IN, repAccount );
      cmd.addParam( "", RSDBP_IN, repAccFiid );
      cmd.addParam( "", RSDBP_IN, pDate );
      cmd.addParam( "", RSDBP_IN, pDate );

      rs1 = rsdRecordSet( cmd );
      if( rs1 and rs1.moveNext() )             

          text = my_report.ClearSymble(string( ind          ), ";") + separator +
                 my_report.ClearSymble(string( repAccount:r ), ";") + separator +
                 my_report.ClearSymble(string( repAccName   ), ";") + separator +
                 my_report.ClearSymble(string( repAmount    ), ";") + separator ;

          println(text);        
          ind = ind + 1;

      end;
      */

  end;

  remProgress();

  setoutput(null, true);                 
  my_report.cntRecord = ind-1;
  my_report.CopyValueToExcel( pFileName );

END;



 if( getDate( repDate, "Пожалуйста, введите дату выпуска отчёта" ) )
    GerarRelatorio( repDate, nameout );
 end;

 exit( 1 );