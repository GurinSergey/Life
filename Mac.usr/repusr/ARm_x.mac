/*Документы не проведенные на невыясненные                   */
/*                                                           */
/*                                                           */
/*Тихомиров А.Н. 01.03.2010                    Версия 1.0    */

 // 15.08.2014 R-431818 DPN Адаптация под 31-й патч

import globals, RSD,rcw, rslx, Календарь, rsbdataset, ptinter, bankinter,wordintf;  // 15.08.2014 R-431818 DPN
var i:integer = 0, ib, out, output = "indocval.xls", fulloutput, ex, ob, obBook, obsheet, typedtflag, typecrdflag, typedttext, typecrdtext, maskcrdflag, maskdtflag, string1, string2, fl1;
var datebegin, dateend, k, sum, cnt:integer = 0;    


var Fulloutputl, outl, outputl="corracc.lbr";                    
GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
Fulloutputl = FindPath(outputl, outl);
var dlg = TRecHandler("arm", fulloutputl, TRUE); 
var cmd, rsd, ruletext;
array stat, type, rule;

const  KEY_F1      =315;
const  KEY_F2      =316;
const  KEY_F3      =317;
const KEY_ESC      = 27;
const KEY_SPACE    = 32;
const KEY_ENTER    = 13;


private macro code1(id)
var cmd, rsd;
if (id>0)
cmd = rsdcommand(" select codedt.t_code from  dobjcode_dbt codedt "+
 " where codedt.t_codekind = 1 "+
 "  AND codedt.t_objecttype = 3 "+
 "  AND codedt.t_objectid = LPAD (?, 9, '0') ");
cmd.addparam("ID", RSDBP_IN, id);
cmd.execute();
rsd = rsdrecordset(cmd);
else
return "Отсутствует код 1";
end;
if (rsd.movenext())
 return rsd.value(0);
 else
 return "Отсутствует код 1";
end;
END;


private macro Outall()
var acctab="", accin="", acctype="", atrtab="", atrin="", statout1="", statout2="", statin="", stattab = "",sql, rsd;
    if (IsStandAlone()) // Двухзвенка
                 if ((ValType(ex)!=V_UNDEF) and (ex.Visible==False))
                   ex = ActiveX("Excel.Application",NULL,false); 
                 else
                   ex = ActiveX("Excel.Application",NULL,true);
                   
                 end;
  
      else // Трехзвенка
               ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
               ex = ob.CreateComObject ("Excel.Application",true);

     end; 
GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,out);
Fulloutput = FindPath(output, out);                    
               
obBook = ex.Workbooks.open(RSL_FullPath(fulloutput));  // 15.08.2014 R-431818 DPN
obSheet = obBook.ActiveSheet(); 


sql =  "select count(1) as cnt "+
"  FROM dpmpaym_dbt paym, dpmdocs_dbt doc, dacctrn_dbt arh, dpmrmprop_dbt rm "+  // 15.08.2014 R-431818 DPN
" WHERE paym.t_paymentid = doc.t_paymentid "+
"   AND arh.T_ACCTRNID = doc.T_ACCTRNID "+   // 15.08.2014 R-431818 DPN
"   AND paym.t_dockind NOT IN (320, 322) "+
"   AND (arh.t_account_payer LIKE '47416%' or arh.t_account_receiver LIKE '47416%') "+
"   AND paym.t_valuedate between to_date('"+datebegin+"','DD.MM.YYYY') and to_date('"+dateend+"','DD.MM.YYYY') "+
"   AND paym.t_paymstatus = 32000 "+
"   and ARH.T_DATE_CARRY >= to_date('"+datebegin+"','DD.MM.YYYY') " +   // 15.08.2014 R-431818 DPN
"   AND rm.t_paymentid = paym.t_paymentid ";
rsd = trsbdataset(sql);
if(rsd.movenext())
initprogress(int(rsd.cnt));
end;


     i = i+1;
     ib = i;

      obSheet.Range("A"+4).Value=string1;
      obSheet.Range("A"+5).Value=string2;
      obSheet.Range("E"+ib+":F64999").numberformat = "@";
      obSheet.Range("F"+ib+":G64999").numberformat = "@";
      obSheet.Range("A"+ib+":A64999").wraptext=true;
      obSheet.Range("B"+ib+":B64999").wraptext=true;
      obSheet.Range("C"+ib+":C64999").wraptext=true;
      obSheet.Range("D"+ib+":D64999").wraptext=true;
      obSheet.Range("E"+ib+":E64999").wraptext=true;
      obSheet.Range("F"+ib+":F64999").wraptext=true;
      obSheet.Range("G"+ib+":G64999").wraptext=true;
      obSheet.Range("H"+ib+":H64999").wraptext=true;
      obSheet.Range("I"+ib+":I64999").wraptext=true;
      obSheet.Range("J"+ib+":J64999").wraptext=true;
      obSheet.Range("K"+ib+":K64999").wraptext=true;
      obSheet.Range("L"+ib+":L64999").wraptext=true;
      obSheet.Range("M"+ib+":M64999").wraptext=true;

      obSheet.Range("A1").ColumnWidth=5;
      obSheet.Range("B1").ColumnWidth=25;
      obSheet.Range("C1").ColumnWidth=15;
      obSheet.Range("D1").ColumnWidth=10;
      obSheet.Range("E1").ColumnWidth=25;
      obSheet.Range("F1").ColumnWidth=25;
      obSheet.Range("G1").ColumnWidth=15;
      obSheet.Range("H1").ColumnWidth=30;
      obSheet.Range("I1").ColumnWidth=30;
      obSheet.Range("J1").ColumnWidth=7;

      obSheet.Range("A"+ib).Value="№ п/п";
      obSheet.Range("B"+ib).Value="Плательщик";
      obSheet.Range("C"+ib).Value="Документ";
      obSheet.Range("D"+ib).Value="Дата";
      obSheet.Range("E"+ib).Value="Счет плательщика";
      obSheet.Range("F"+ib).Value="Счет получателя";
      obSheet.Range("G"+ib).Value="Сумма";
      obSheet.Range("H"+ib).Value="Назначение платежа";
      obSheet.Range("I"+ib).Value="Статус";
      obSheet.Range("J"+ib).Value="ID платежа";

sql = "select rownum, t_payername, t_date_carry, t_payeraccount, docname, t_number, t_receiveraccount, t_amount, t_paymentid, t_ground, "+
" t_basefiid, dockind from (select  t_date_carry, t_payername, t_number, docname, t_payeraccount, t_ground, t_receiveraccount, t_amount, t_paymentid, t_basefiid, DECODE (case,   "+
" 'ББ_15_16_70_400_430_440', 'ББ   (15-мультики, 16, 27 -платежки ББ, 70-мемеорики, 400,430,440 -кассовые ББ)',  "+
" 'РКО_230_231_233'        , 'РКО  (230, 231, 233 - Заявления на открытие/закрытие счетов)',  "+
" 'РКО_201_202_410_420'        , 'РКО  (201, 202 - РДД, 410,420 - Кассовые РКО-шные документы)',  "+
" 'РКО_51'                 , 'РКО  (51 - периодическая комиссия)',  "+
" 'ББ_59'                  , 'ББ   (59 - требования на оплату периодических комиссий)',  "+
" 'АРМП_320_322'        , 'АРМП (Ответные платежки)',  "+
" 'ПРОЧЕЕ'                 , 'Остальные экземпляры операций'  "+
" ) Dockind  from (  "+
" SELECT rm.t_payername,  arh.t_date_carry, rm.t_number, kind.t_name as docname, "+   // 15.08.2014 R-431818 DPN
"   paym.t_payeraccount, paym.t_receiveraccount, paym.t_amount, paym.t_paymentid, paym.t_basefiid, rm.t_ground,     "+
"     case   "+
"        when paym.t_dockind in (15, 16, 70, 400, 430, 440, 27) then 'ББ_15_16_70_400_430_440'  "+
"        when paym.t_dockind in (230, 231, 233)             then 'РКО_230_231_233'  "+
"        when paym.t_dockind in (201, 202, 410, 420)             then 'РКО_201_202_410_420'  "+
"        when paym.t_dockind in (51)                        then 'РКО_51'  "+
"        when paym.t_dockind in (59)                        then 'ББ_59'  "+
"        when paym.t_dockind in (320, 322, 27)              then 'АРМП_320_322_27'  "+
"        else 'Остальное'   "+
"     end case  "+
"  FROM dpmpaym_dbt paym, dpmdocs_dbt doc, dacctrn_dbt arh, dpmrmprop_dbt rm, doprkdoc_dbt kind "+   // 15.08.2014 R-431818 DPN
" WHERE paym.t_paymentid = doc.t_paymentid "+
"   AND ARH.T_ACCTRNID = DOC.T_ACCTRNID " +    // 15.08.2014 R-431818 DPN
"   AND kind.t_dockind = paym.t_dockind " +    // 15.08.2014 R-431818 DPN
"   AND rm.t_paymentid = paym.t_paymentid " +  // 15.08.2014 R-431818 DPN
"   AND paym.t_dockind NOT IN (320, 322) "+
"   AND (arh.t_account_payer LIKE '47416%' or arh.t_account_receiver LIKE '47416%') "+
"   AND paym.t_valuedate between to_date('"+datebegin+"','DD.MM.YYYY') and to_date('"+dateend+"','DD.MM.YYYY') "+
"   and ARH.T_DATE_CARRY >= to_date('"+datebegin+"','DD.MM.YYYY') " +   // 15.08.2014 R-431818 DPN
"   AND paym.t_paymstatus = 32000)) ";  // 15.08.2014 R-431818 DPN

rsd = trsbdataset(sql);

obSheet.Range("A"+2).Value="Отчет о исходящих в валюте платежей";
obSheet.Range("A"+3).Value="На дату "+datebegin;

 k=0;
sum = 0;
cnt = 0;
while (rsd.movenext())
useprogress(int(k));
   sum = sum + rsd.t_amount;
   cnt = cnt + 1;
   i = i+1;
   k = k+1;
   obSheet.Range("A"+i).Value=rsd.rownum;
   obSheet.Range("B"+i).Value=rsd.payername;
   obSheet.Range("C"+i).Value=rsd.docname;
   obSheet.Range("D"+i).Value=rsd.date_carry;
   obSheet.Range("E"+i).Value=rsd.payeraccount;
   obSheet.Range("F"+i).Value=rsd.receiveraccount;
   obSheet.Range("G"+i).Value=rsd.amount;
   obSheet.Range("H"+i).Value=rsd.ground;
   obSheet.Range("I"+i).Value=rsd.dockind;
   obSheet.Range("J"+i).Value=rsd.paymentid;
   if (i>64499)
      obSheet.Range("A"+4).Value=string1;
      obSheet.Range("A"+5).Value=string2;
      obSheet.Range("E8:F64999").numberformat = "@";
      obSheet.Range("F8:G64999").numberformat = "@";
      obSheet.Range("A8:A64999").wraptext=true;
      obSheet.Range("B8:B64999").wraptext=true;
      obSheet.Range("C8:C64999").wraptext=true;
      obSheet.Range("D8:D64999").wraptext=true;
      obSheet.Range("E8:E64999").wraptext=true;
      obSheet.Range("F8:F64999").wraptext=true;
      obSheet.Range("G8:G64999").wraptext=true;
      obSheet.Range("H8:H64999").wraptext=true;
      obSheet.Range("I8:I64999").wraptext=true;
      obSheet.Range("J8:J64999").wraptext=true;
      obSheet.Range("K8:K64999").wraptext=true;
      obSheet.Range("L8:L64999").wraptext=true;
      obSheet.Range("M8:M64999").wraptext=true;
      obSheet.Range("N8:N64999").wraptext=true;

      obSheet.Range("A1").ColumnWidth=5;
      obSheet.Range("B1").ColumnWidth=25;
      obSheet.Range("C1").ColumnWidth=15;
      obSheet.Range("D1").ColumnWidth=10;
      obSheet.Range("E1").ColumnWidth=25;
      obSheet.Range("F1").ColumnWidth=25;
      obSheet.Range("G1").ColumnWidth=15;
      obSheet.Range("H1").ColumnWidth=30;
      obSheet.Range("I1").ColumnWidth=30;
      obSheet.Range("J1").ColumnWidth=7;

      obSheet.Range("A"+8).Value="№ п/п";
//      obSheet.Range("B"+8).Value="Код плательщика";
      obSheet.Range("B"+8).Value="Плательщик";
      obSheet.Range("C"+8).Value="Документ";
      obSheet.Range("D"+8).Value="Дата";
      obSheet.Range("E"+8).Value="Счет плательщика";
      obSheet.Range("F"+8).Value="Счет получателя";
      obSheet.Range("G"+8).Value="Сумма";
      obSheet.Range("H"+8).Value="Назначение платежа";
      obSheet.Range("I"+8).Value="Статус";
      obSheet.Range("J"+8).Value="ID платежа";

   end;
end;
obSheet.Range("A"+(i+1)+":J"+(i+1)).mergecells=true;
obSheet.Range("A"+(i+1)).Value=string("Итого документов ",cnt,"на сумму ",sum);i=i+1;
obSheet.Range("A"+ib+":J"+(i)).Borders.Weight=2;
obSheet.Range("A"+ib+":J"+ib).interior.color=4035000;
Ex.visible = true;       
end;

/*Точка входа*/
 /*Обработчик диалоговой панели ввода исходных данных для печати*/
MACRO Event (dlg, cmd, id, key) 

   var const_mess = "~F2~ Продолжить ~ESC~ Выход ";
   var const_mess2 = "~F2~ Продолжить ~SPACE~ ~ESC~ Выход ";

   /*Первоначальная инициализация полей*/
   if(cmd == DLG_INIT)
      dlg.rec.DateBegin = {curDate};
      dlg.rec.DateEnd = {curDate};
      UpdateFields(dlg); 
   end;
   
   /*Установка подсказок в строке состояния*/
   if (cmd==DLG_SETFOCUS)
     if (FldName(dlg,id)=="DateBegin")
       message(" ~F3~ Выбор даты из календаря "+const_mess);
     elif (FldName(dlg,id)=="DateEnd")
       message(" ~F3~ Выбор даты из календаря "+const_mess);
    end;
   end;
   
   if (cmd == DLG_REMFOCUS)
     /*Проверка корректности дат отчета*/
     if (FldName(dlg,id) == "DateBegin")
       if ( dlg.rec.DateBegin > {curdate} )
         MsgBox("Дата начала периода не может быть больше даты текущего операционного дня");
        return CM_CANCEL;
       elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
         MsgBox("Дата начала периода не может быть больше даты окончания периода");
        return CM_CANCEL;
       end;
     end;
     if (FldName(dlg,id) == "DateEnd")
       if ( dlg.rec.DateEnd > {curdate} )
         MsgBox("Дата не может быть больше даты текущего операционного дня");
        return CM_CANCEL;
       elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
         MsgBox("Дата окончания периода не может быть меньше даты начала периода");
        return CM_CANCEL;
       end;

    end;
      UpdateFields(dlg); 
   end;

   if (cmd == DLG_KEY)
     /*Выход из диалогового окна формирования отчета*/
     if (KEY == KEY_ESC)
       return exit(1);//CM_CANCEL;
     /*Выбор данных из списка*/
     elif ( KEY == KEY_F3)
        /*Выбор даты из календаря*/
        if (FldName(dlg,id) == "DateBegin")
          dlg.rec.datebegin = GetDateByCalendar ({curDate});
        end;
        if (FldName(dlg,id) == "DateEnd")
          dlg.rec.dateend = GetDateByCalendar ({curDate});
        end;
        

     elif (( KEY == KEY_F2 )  or ( KEY == KEY_ENTER ))         //Проверки при вводе
         if ( dlg.rec.DateBegin > {curdate} )
                MsgBox("Дата начала периода не может быть больше даты текущего операционного дня");
                return CM_IGNORE;
          elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
                MsgBox("Дата начала периода не может быть больше даты окончания периода");
                return CM_IGNORE;
         end;
          if ( dlg.rec.DateEnd > {curdate} )
                MsgBox("Дата не может быть больше даты текущего операционного дня");
                return CM_IGNORE;
          elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
                MsgBox("Дата окончания периода не может быть меньше даты начала периода");
                return CM_IGNORE;
          end;
        Datebegin  = dlg.rec.Datebegin;
        Dateend = dlg.rec.DateEnd;
         if ((Datebegin < {curDate}))    
           Return CM_SAVE;
        elif (gettrue(true,"Дата равна текущему опрерационному дню. Продолжить?"))
           Return CM_SAVE;
           
        end;
      else
           Return CM_IGNORE;
     end;
   end;
        
END;






if (RunDialog(dlg, "Event"))                  
  OutAll;
end;
