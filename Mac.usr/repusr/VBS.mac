/*Выписка по рублевым ВБС                                              */
/*                                                                     */
/*                                                                     */
/*Тихомиров А.Н. 02.04.2009                    Версия 1.1              */
/*Ярмольчук А.Ю. 12.11.2009    Опциональная возможность переноса информации в основании по словам */

//var Fulloutput,  out,  output="\\vbs.txt";                    
var maxs:integer, s:integer, balacc, opr, dept, account, datebegin, dateend, inter, i, pos, m, g, in, dep, acc, sql, dataset, fl, fnul, sq, data;
var alldeb, symb, symbol, allkred, ap, pa, cl="", pab, apb;
var gg=3, ac, dprt_v=1, ii;
import RSD,rcw, rslx, Календарь, rsbdataset, payminter, globals, ptinter, bankinter;
var fulloutput = GetTxtFileName("vbs");

const  KEY_F1      =315;
const  KEY_F2      =316;
const  KEY_F3      =317;
const KEY_ESC      = 27;
const KEY_SPACE    = 32;
const KEY_ENTER    = 13;

var Fulloutputl, outl, outputl="vbs.lbr"; 
record oper (person);     
record department (dp_dep);    
record accountr (account);          

GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
Fulloutputl = FindPath(outputl, outl);
var dlg = TRecHandler("vbs", fulloutputl, TRUE); 

var Перенос_по_словам = true;

private macro code(id)
var sl = "select * from dobjcode_dbt where t_codekind=1 and t_objectid="+id;
var DataS = TRsbDataSet(sl);
 if (datas.movenext())
  return datas.code;
//return substr(datas.code,(strlen(datas.code)-4),5);
 end;
end;

/*Найдем имя по Partyid*/
private macro GetClientName(id)

var  sl=" select part.t_name from dparty_dbt part where part.t_partyid="+id;

var  DataS=TRsbDataSet(sl);

  if( DataS.moveNext())
    return DataS.name;
  else
    if (id !=0)
       msgbox("Субъект не найден в party.dbt");
       return 0;
    else
      return "ОАО АКБ Пробизнесбанк";
    end;
  end;

END;

private macro GetoperName(id)

var  sl=" select t_name from dperson_dbt  where t_oper="+id;

var  DataS=TRsbDataSet(sl);

  if( DataS.moveNext())
    return DataS.name;
  else
    msgbox("Субъект не найден в person.dbt");
    return 0;
  end;

END;


private macro restdate(acc,date)
var s = "SELECT   t_date_value "+
    " FROM drestdate_dbt "+
   " WHERE t_date_value < '"+date+"' "+
   "  AND t_account = '"+acc+"'  "+
" ORDER BY t_date_value desc ";
var dat = trsbdataset(s);
if (dat.movenext())
return dat.date_value;
else
return date-1;
end;
end;

private macro rest(acc,date)
var s = "SELECT   t_rest "+
    " FROM drestdate_dbt "+
   " WHERE t_date_value < '"+date+"' "+
   "  AND t_account = '"+acc+"'  "+
   " ORDER BY t_date_value desc ";
var dat = trsbdataset(s);
 if (dat.movenext())
  if (dat.rest<0)
   return " актив " + (-dat.rest);
  else
   return " пассив " + dat.rest;
  end;
 else
  return 0;
 end;
end;


private macro bicp(autokey,inter)

var s = "SELECT dobjcode_dbt.t_code "+
   " FROM darhdoc_dbt, dpmdocs_dbt, dpmpaym_dbt , dobjcode_dbt "+
   " WHERE darhdoc_dbt.t_applicationkey = dpmdocs_dbt.t_applicationkey "+
   "  AND dobjcode_dbt.t_objectid = "+inter+
   "  AND dobjcode_dbt.t_codekind = 3 "+
   "  AND dpmpaym_dbt.t_paymentid=dpmdocs_dbt.t_paymentid "+
   "  AND darhdoc_dbt.t_autokey = "+autokey;
var dat = trsbdataset(s);
 if (dat.movenext())
  return dat.code;
 else
  return "";
 end;
end;


private macro outall()
 inter="";
 dep="";
 acc="";
 symb="";
 balacc=strsubst(balacc,"*","");
 i=0;
while (i<strlen(symbol))
 i=i+1;
            if (substr(symbol,i,1)=="A");
              symb=symb+"or acc.t_usertypeaccount like '%А%'";
            elif (substr(symbol,i,1)=="D");
              symb=symb+"or acc.t_usertypeaccount like '%D%'";
            elif (substr(symbol,i,1)=="F");
              symb=symb+"or acc.t_usertypeaccount like '%F%'";
            elif (substr(symbol,i,1)=="G");
              symb=symb+"or acc.t_usertypeaccount like '%G%'";
            elif (substr(symbol,i,1)=="I");
              symb=symb+"or acc.t_usertypeaccount like '%I%'";
            elif (substr(symbol,i,1)=="L");
              symb=symb+"or acc.t_usertypeaccount like '%L%'";
            elif (substr(symbol,i,1)=="N");
              symb=symb+"or acc.t_usertypeaccount like '%N%'";
            elif (substr(symbol,i,1)=="R");
              symb=symb+"or acc.t_usertypeaccount like '%R%'";
            elif (substr(symbol,i,1)=="Q");
              symb=symb+"or acc.t_usertypeaccount like '%Q%'";
            elif (substr(symbol,i,1)=="S");
              symb=symb+"or acc.t_usertypeaccount like '%S%'";
            elif (substr(symbol,i,1)=="U");
              symb=symb+"or acc.t_usertypeaccount like '%U%'";
            elif (substr(symbol,i,1)=="Z");
              symb=symb+"or acc.t_usertypeaccount like '%Z%'";
            elif (substr(symbol,i,1)=="Б");
              symb=symb+"or acc.t_usertypeaccount like '%Б%'";
            elif (substr(symbol,i,1)=="Г");
              symb=symb+"or acc.t_usertypeaccount like '%Г%'";
            elif (substr(symbol,i,1)=="Д");
              symb=symb+"or acc.t_usertypeaccount like '%Д%'";
            elif (substr(symbol,i,1)=="Е");
              symb=symb+"or acc.t_usertypeaccount like '%Е%'";
            elif (substr(symbol,i,1)=="Ё");
              symb=symb+"or acc.t_usertypeaccount like '%Ё%'";
            elif (substr(symbol,i,1)=="Ж");
              symb=symb+"or acc.t_usertypeaccount like '%Ж%'";
            elif (substr(symbol,i,1)=="З");
              symb=symb+"or acc.t_usertypeaccount like '%З%'";
            elif (substr(symbol,i,1)=="Й");
              symb=symb+"or acc.t_usertypeaccount like '%Й%'";
            elif (substr(symbol,i,1)=="К");
              symb=symb+"or acc.t_usertypeaccount like '%К%'";
            elif (substr(symbol,i,1)=="Л");
              symb=symb+"or acc.t_usertypeaccount like '%Л%'";
            elif (substr(symbol,i,1)=="М");
              symb=symb+"or acc.t_usertypeaccount like '%М%'";
            elif (substr(symbol,i,1)=="Н");
              symb=symb+"or acc.t_usertypeaccount like '%Н%'";
            elif (substr(symbol,i,1)=="О");
              symb=symb+"or acc.t_usertypeaccount like '%О%'";
            elif (substr(symbol,i,1)=="П");
              symb=symb+"or acc.t_usertypeaccount like '%П%'";
            elif (substr(symbol,i,1)=="Т");
              symb=symb+"or acc.t_usertypeaccount like '%Т%'";
            elif (substr(symbol,i,1)=="У");
              symb=symb+"or acc.t_usertypeaccount like '%У%'";
            elif (substr(symbol,i,1)=="Ф");
              symb=symb+"or acc.t_usertypeaccount like '%Ф%'";
            elif (substr(symbol,i,1)=="Х");
              symb=symb+"or acc.t_usertypeaccount like '%Х%'";
            elif (substr(symbol,i,1)=="Ц");
              symb=symb+"or acc.t_usertypeaccount like '%Ц%'";
            elif (substr(symbol,i,1)=="Ч");
              symb=symb+"or acc.t_usertypeaccount like '%Ч%'";
            elif (substr(symbol,i,1)=="Ш");
              symb=symb+"or acc.t_usertypeaccount like '%Ш%'";
            elif (substr(symbol,i,1)=="Щ");
              symb=symb+"or acc.t_usertypeaccount like '%Щ%'";
            elif (substr(symbol,i,1)=="Ы");
              symb=symb+"or acc.t_usertypeaccount like '%Ы%'";
            elif (substr(symbol,i,1)=="Ъ");
              symb=symb+"or acc.t_usertypeaccount like '%Ъ%'";
            elif (substr(symbol,i,1)=="Ь");
              symb=symb+"or acc.t_usertypeaccount like '%Ь%'";
            elif (substr(symbol,i,1)=="Ю");
              symb=symb+"or acc.t_usertypeaccount like '%Ю%'";
            elif (substr(symbol,i,1)=="Я");
              symb=symb+"or acc.t_usertypeaccount like '%Я%'";
            else

            end;
end;

if (strlen (symb)>0)
symb=string("AND (",substr(symb,3),")");
end;

if (strlen(balacc)>0)
inter="";
i=0;
pos=1;
  while (pos>0)
   m=strlen(balacc);
    while (i<m)
    i=i+1;
     if ((substr(balacc,i,1)!=0) and (substr(balacc,i,1)!=1) and (substr(balacc,i,1)!=2) and (substr(balacc,i,1)!=3)
        and (substr(balacc,i,1)!=4) and (substr(balacc,i,1)!=5) and (substr(balacc,i,1)!=6) and (substr(balacc,i,1)!=7)
        and (substr(balacc,i,1)!=8) and (substr(balacc,i,1)!=9))
        pos =i;
         if (pos!=1)
           if (strlen(inter)<1)
            inter = inter+" and (t_balance like '"+substr(balacc,1,pos-1)+"%'"; 
           else
            inter=inter+"  or t_balance like '"+substr(balacc,1,pos-1)+"%'";
           end;
         end;
        balacc=substr(balacc, pos+1);
        i=m+1;
     end;
    end;
    if (i==m)
    pos=0;
    end;
    i=0;
   end;
   if (strlen(inter)>0)
    inter = inter +"  or t_balance like '"+substr(balacc,1)+"%'";; 
   else
    inter = " and (t_balance like '"+substr(balacc,1)+"%'"; 
   end;
    inter=inter+")";
end;
if (g=="А")
  in="blnc.T_CHAPTER = 1 ";
 elif (g=="В")
  in="blnc.T_CHAPTER = 3 ";
 elif (g=="Г")
  in="blnc.T_CHAPTER = 4 ";
 else
  in="blnc.T_CHAPTER = 6 ";
end;
if (dept!=0)
  dep = " AND acc.t_branch = "+dept;
end;
if (account!="")
  acc =StrSubst ( account, "?", "_" );
  acc =StrSubst ( acc, "*", "%" );
  acc = " AND acc.t_account like '"+acc+"' ";
end;
initprogress(-1,"Ждите, отбираются счета...", "Ждите");
useprogress(-1);
sql = " SELECT count(*) as cnt "+
  " FROM daccount_dbt acc, dobjcode_dbt obj, daccblnc_dbt blnc "+
 " WHERE  "+in+
    inter+
  dep+
  symb+
  " AND (acc.t_type_account not like '%П%' "+
  " AND acc.t_type_account not like '%U%' "+
  " AND acc.t_type_account not like '%Н%') "+
  acc+
  " AND obj.T_CODEKIND=1 "+
    /* Коркин И.Н. по заявке I-052406 */
  " AND obj.T_state = 0  "+
  " AND obj.T_OBJECTID=acc.T_CLIENT "+
  " AND blnc.t_account=acc.t_account "+
  " order by acc.t_balance, obj.t_code, acc.t_account ";
dataset = trsbdataset(sql);
dataset.movenext();
maxs=dataset.cnt;
//Для валюты
/*if (maxs>1)
cl=string(" and (acc.t_open_close<>'З' or acc.t_close_date>'",datebegin,"')");
end;
*/
//GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR",2,out);
//fulloutput=out+output;
//setoutput(fulloutput,false);

sql = " SELECT acc.t_account, acc.t_nameaccount, acc.t_oper, acc.t_kind_account "+
  " FROM daccount_dbt acc, dobjcode_dbt obj, daccblnc_dbt blnc "+
 " WHERE  "+in+
    inter+
  dep+
  symb+
  " AND (acc.t_type_account not like '%П%' "+
  " AND acc.t_type_account not like '%U%' "+
  " AND acc.t_type_account not like '%Н%') "+
  acc+
  " AND obj.T_CODEKIND=1 "+
    /* Коркин И.Н. по заявке I-052406 */
  " AND obj.T_state = 0  "+
  " AND obj.T_OBJECTID=acc.T_CLIENT "+
  " AND blnc.t_account=acc.t_account "+
    cl+
  " order by acc.t_balance, obj.t_code, acc.t_account ";
dataset = trsbdataset(sql);
remprogress(-1);
initprogress(maxs,"Ждите, производится расчет...", "Ждите, производится расчет");
s=0;
while (dataset.movenext())
s=s+1;
useprogress(s);
//102 Обновление
 if ((CheckAccountRestriction(6, 1, 0, dataset.account, 0, ACS_OnlyCheck , CNTX_None, opr  )) or (opr==""))
 if ((CheckAccountRestriction(73, 1, 0, dataset.account, 0, ACS_OnlyCheck , CNTX_None, opr  )) or (opr==""))

fl=0;
  if(fnul!="X")
   sq =  "select count(*) as cnt "+
      " from darhdoc_dbt where (t_account_receiver = '"+dataset.account+"'"+
      " or t_account_payer='"+dataset.account+"') "+
      " and t_date_carry between TO_DATE ('"+datebegin+"', 'DD-MM-YYYY') and TO_DATE ('"+dateend+"', 'DD-MM-YYYY') ";
   data=trsbdataset(sq);
   data.movenext();
    if (data.cnt>0)
      fl = 1;
    end;
  end;
  if ((fnul=="X") or (fl))
   alldeb=0;
   allkred=0;
    if (dataset.kind_account=="А")
     ap="t_account_receiver";
     pa="t_account_payer";
     apb=" dpmpaym_dbt.t_receiverbankid ";
     pab=" dpmpaym_dbt.t_payerbankid ";
    else
     pa="t_account_receiver";
     ap="t_account_payer";
     pab=" dpmpaym_dbt.t_receiverbankid ";
     apb=" dpmpaym_dbt.t_payerbankid ";
    end;
[ОАО "Пробизнесбанк"
Выписка за ########## ##########

Наименование счета: #############################################################################################
Лицевой счет: ######################
Ответственный исполнитель: ###########
Дата предыдущей проводки: ################

Входящий остаток: #############################
┌──┬───────────────┬─────────┬──────────────────────────┬───────────────────────────────┬───────────────────────────────┬───────────────────────────────────────┐
│РО│Номер          │ БИК     │ Корреспондент счет       │    Дебет                      │        Кредит                 │       Основание                       │
│  │ документа     │         │                          │                               │                               │                                       │]
(date(datebegin),date(dateend),dataset.nameaccount,dataset.account,dataset.oper,date(restdate(dataset.account, datebegin)),rest(dataset.account,datebegin));    
    
    sq =  "select t_autokey, t_shifr_oper, t_numb_document, t_sum, t_ground, t_account_receiver, t_account_payer "+
      " from darhdoc_dbt where "+pa+" = '"+dataset.account+"'"+
      " and t_date_carry between TO_DATE ('"+datebegin+"', 'DD-MM-YYYY') and TO_DATE ('"+dateend+"', 'DD-MM-YYYY') "+
      "order by t_sum ";
   data=trsbdataset(sq);
    while (data.movenext())
      if (Перенос_по_словам)
        [├──┼───────────────┼─────────┼──────────────────────────┼───────────────────────────────┼───────────────────────────────┼───────────────────────────────────────┤
         │##│###############│#########│##########################│###############################│                               │#######################################│]
        (data.shifr_oper, data.numb_document, bicP(data.autokey,pab), data.account_receiver,money(data.sum),data.ground:w);
      else
        [├──┼───────────────┼─────────┼──────────────────────────┼───────────────────────────────┼───────────────────────────────┼───────────────────────────────────────┤
         │##│###############│#########│##########################│###############################│                               │#######################################│]
        (data.shifr_oper, data.numb_document, bicP(data.autokey,pab), data.account_receiver,money(data.sum),substr(data.ground,1,39));
        ii=1;
        while ((strlen(data.ground)-ii*39)>0)
        [│  │               │         │                          │                               │                               │#######################################│]
        (substr(data.ground,(ii*39+1)));
        ii = ii+1;
        end;
      end;
      allkred=allkred+data.sum;
    end;

    sq =  "select t_autokey, t_shifr_oper, t_numb_document, t_sum, t_ground, t_account_receiver, t_account_payer "+
      " from darhdoc_dbt where "+ap+"='"+dataset.account+"' "+
      " and t_date_carry between TO_DATE ('"+datebegin+"', 'DD-MM-YYYY') and TO_DATE ('"+dateend+"', 'DD-MM-YYYY') "+
      "order by t_sum ";
   data=trsbdataset(sq);
    while (data.movenext())
      if (Перенос_по_словам)
        [├──┼───────────────┼─────────┼──────────────────────────┼───────────────────────────────┼───────────────────────────────┼───────────────────────────────────────┤
         │##│###############│#########│##########################│                               │###############################│#######################################│]
        (data.shifr_oper, data.numb_document, bicP(data.autokey,apb), data.account_payer,money(data.sum),data.ground:w);
      else
        [├──┼───────────────┼─────────┼──────────────────────────┼───────────────────────────────┼───────────────────────────────┼───────────────────────────────────────┤
         │##│###############│#########│##########################│                               │###############################│#######################################│]
        (data.shifr_oper, data.numb_document, bicP(data.autokey,apb), data.account_payer,money(data.sum),substr(data.ground,1,39));
        ii=1;
        while ((strlen(data.ground)-ii*39)>0)
        [│  │               │         │                          │                               │                               │#######################################│]
        (substr(data.ground,(ii*39+1)));
        ii = ii+1;
        end;
      end;
        alldeb=alldeb+data.sum;
    end;

[└──┴───────────────┴─────────┴──────────────────────────┴───────────────────────────────┴───────────────────────────────┴───────────────────────────────────────┘
  Итого оборотов по дебету: ####################
  Итого оборотов по кредиту: ####################
  Исходящий остаток: ######################

] // 
(money(allkred), money(alldeb), rest(dataset.account,(dateend+1)));
end;
end;
end;
end;
remprogress(s);
 setoutput(null,true);
// viewfile(fulloutput);

END;



 /*Обработчик диалоговой панели ввода исходных данных для печати*/
MACRO Event (dlg, cmd, id, key) 
   array gname, symbolname;
   gname(0)="В 'Внебалансовые счета'";
   gname(1)="Г 'Срочные сделки'";
   gname(2)="Н 'Налоговый учет'";
   gname(3)="А 'Балансовые счета'";
    
   symbolname(0)="A Касса";
   symbolname(1)="D Касса ККО Зареченский";
   symbolname(2)="F Касса ККО Пермский 1";
   symbolname(3)="G Касса ККО Иркутский 1";
   symbolname(4)="I Касса ККО Пермский 2";
   symbolname(5)="L Касса ККО Дворянский";
   symbolname(6)="N Касса ККО Иркутский 2";
   symbolname(7)="R Касса ККО Гагаринский";
   symbolname(8)="Q Касса ККО Сенной";
   symbolname(9)="S Касса ККО Березники 1";
   symbolname(10)="U Касса ККО Березники 2";
   symbolname(11)="Z Касса ККО Фрунзенский";
   symbolname(12)="Б Бухгалтерия";
   symbolname(13)="Г Резерв";
   symbolname(14)="Д Межбанк";
   symbolname(15)="Е Касса ЦМТ";
   symbolname(16)="Ё Интернет банк";
   symbolname(17)="Ж ОВКУ";
   symbolname(18)="З Депозиты юр.лиц";
   symbolname(19)="Й Касса Тверской";
   symbolname(20)="К КЭО";
   symbolname(21)="Л ГМР";
   symbolname(22)="М Касса Садово-Кудринский";
   symbolname(23)="Н Розничные финанс. Услуги";
   symbolname(24)="О Депозиты физ.лиц";
   symbolname(25)="П Вексельный сектор";
   symbolname(26)="Т К-к офис Тульский";
   symbolname(27)="У ДО 'Центральный'";
   symbolname(28)="Ф  Касса Петровский";
   symbolname(29)="Х Касса Д/о 'Автозаводский'";
   symbolname(30)="Ц Ценные бумаги";
   symbolname(31)="Ч Касса ККО Тюменский 1";
   symbolname(32)="Ш Касса ККО Дзержинский";
   symbolname(33)="Щ Неторговые операц  ";
   symbolname(34)="Ы Касса ККО Красноармейский";
   symbolname(35)="Ъ ОКВКУ 4";
   symbolname(36)="Ь Касса Толстовский";
   symbolname(37)="Ю ОКВКУ № 1 (Пудовкина)";
   symbolname(38)="Я Касса Новоданиловский";

   var const_mess = "~F2~ Продолжить ~ESC~ Выход ";
   var const_mess2 = "~F2~ Продолжить ~SPACE~ ~ESC~ Выход ";

   /*Первоначальная инициализация полей*/
   if(cmd == DLG_INIT)
      dprt_v = 0;
      dlg.rec.Fnul  = "";
      dlg.rec.G ="В";
      dlg.rec.Gname ="Внебалансовые счета";
      dlg.rec.BalAcc ="";
      dlg.rec.DateBegin = {curDate};
      dlg.rec.DateEnd = {curDate};
      dlg.rec.Dept = "";
      dlg.rec.deptname = GetClientName({operdprt});
      dlg.rec.Oper = "";
      dlg.rec.opername = "";
      dlg.rec.Account = "";
      dlg.rec.Clientid = "";
      dlg.rec.Clientname = "";
      dlg.rec.Symbol = "";
      UpdateFields(dlg); 
   end;
   
   /*Установка подсказок в строке состояния*/
   if (cmd==DLG_SETFOCUS)
     if ((FldName(dlg,id)=="Fnul"))
       message(const_mess2);
     elif (FldName(dlg,id)=="DateBegin")
       message(" ~F3~ Выбор даты из календаря "+const_mess);
     elif (FldName(dlg,id)=="DateEnd")
       message(" ~F3~ Выбор даты из календаря "+const_mess);
     elif (FldName(dlg,id)=="G")
       message(" ~F3~ Выбор главы счетов "+const_mess);
     elif (FldName(dlg,id)=="Symbol")
       message(" ~F3~ Выбор символа "+const_mess);
     elif (FldName(dlg,id)=="Dept")
       message(" ~F3~ Выбор филиала "+const_mess);
     elif (FldName(dlg,id)=="Oper")
       message(" ~F3~ Выбор операциониста "+const_mess);
     elif (FldName(dlg,id)=="Account")
       message(" ~F3~ Выбор Счета "+const_mess);
    end;
   end;
   
   if (cmd == DLG_REMFOCUS)
     /*Проверка корректности дат отчета*/
     if (FldName(dlg,id) == "DateBegin")
       if ( dlg.rec.DateBegin > {curdate} )
         MsgBox("Дата начала периода не может быть больше даты текущего операционного дня");
        return CM_CANCEL;
       elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
         MsgBox("Дата начала периода не может быть больше даты окончания периода");
        return CM_CANCEL;
       end;
     end;
     if (FldName(dlg,id) == "DateEnd")
       if ( dlg.rec.DateEnd > {curdate} )
         MsgBox("Дата не может быть больше даты текущего операционного дня");
        return CM_CANCEL;
       elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
         MsgBox("Дата окончания периода не может быть меньше даты начала периода");
        return CM_CANCEL;
       end;

     end;
     if ((FldName(dlg,id) == "Account") and (strlen(dlg.rec.account)>0))
     ac =StrSubst ( dlg.rec.account, "?", "_" );
     ac =StrSubst ( ac, "*", "%" );
     data=trsbdataset(string("select count(*) as cnt from daccount_dbt where t_account like '",ac,"'"));
     if (data.movenext())
     if (data.cnt==0)
         MsgBox("Счет не найден");
        return CM_CANCEL;
     elif (data.cnt==1)
     else
              dlg.rec.clientid = "";
              dlg.rec.clientname = "";
     end;
     end;
     end;
      UpdateFields(dlg); 
   end;

   if (cmd == DLG_KEY)
     /*Выход из диалогового окна формирования отчета*/
     if (KEY == KEY_ESC)
       return exit(1);//CM_CANCEL;
     /*Выбор данных из списка*/
     elif ( KEY == KEY_F3)
        /*Выбор даты из календаря*/
        if (FldName(dlg,id) == "DateBegin")
          dlg.rec.datebegin = GetDateByCalendar ({curDate});
        end;
        if (FldName(dlg,id) == "DateEnd")
          dlg.rec.dateend = GetDateByCalendar ({curDate});
        end;
        if (FldName(dlg,id) == "Dept")
           if (ListDepartment (Department))
              dlg.rec.dept = Department.name;
              dprt_v = department.code;
              dlg.rec.deptname = GetClientName(Department.PartyID);
              message(" ~F3~ Список подразделений "+const_mess);
              UpdateFields(dlg);
           end;
        end;
        if (FldName(dlg,id) == "G")
            g=menu(gname,"Глава счетов");
            if (g==0)  
              dlg.rec.g = "В";
              dlg.rec.gname = "Внебалансовые счета";
              gg=3;
              message(" ~F3~ Список глав счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==1)
              dlg.rec.g = "Г";
              dlg.rec.gname = "Срочные сделки";
              gg=4;
              message(" ~F3~ Список глав счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==2)
              dlg.rec.g = "Н";
              dlg.rec.gname = "Налоговый учет";
              gg=6;
              message(" ~F3~ Список глав счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==3)
              dlg.rec.g = "А";
              dlg.rec.gname = "Балансовые счета";
              gg=1;
              message(" ~F3~ Список глав счетов "+const_mess);
              UpdateFields(dlg);
            else 
              message(" ~F3~ Список глав счетов "+const_mess);
              UpdateFields(dlg);
            end;
        end;

        if (FldName(dlg,id) == "Symbol")
            g=menu(symbolname,"Символ отчетности счета");
            if (g==0)  
              dlg.rec.symbol = string(dlg.rec.symbol,"A");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==1)  
              dlg.rec.symbol = string(dlg.rec.symbol,"D");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==2)  
              dlg.rec.symbol = string(dlg.rec.symbol,"F");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==3)  
              dlg.rec.symbol = string(dlg.rec.symbol,"G");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==4)  
              dlg.rec.symbol = string(dlg.rec.symbol,"I");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==5)  
              dlg.rec.symbol = string(dlg.rec.symbol,"L");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==6)  
              dlg.rec.symbol = string(dlg.rec.symbol,"N");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==7)  
              dlg.rec.symbol = string(dlg.rec.symbol,"R");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==8)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Q");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==9)  
              dlg.rec.symbol = string(dlg.rec.symbol,"S");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==10)  
              dlg.rec.symbol = string(dlg.rec.symbol,"U");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==11)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Z");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==12)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Б");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==13)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Г");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==14)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Д");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==15)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Е");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==16)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ё");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==17)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ж");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==18)  
              dlg.rec.symbol = string(dlg.rec.symbol,"З");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==19)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Й");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==20)  
              dlg.rec.symbol = string(dlg.rec.symbol,"К");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==21)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Л");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==22)  
              dlg.rec.symbol = string(dlg.rec.symbol,"М");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==23)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Н");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==24)  
              dlg.rec.symbol = string(dlg.rec.symbol,"О");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==25)  
              dlg.rec.symbol = string(dlg.rec.symbol,"П");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==26)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Т");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==27)  
              dlg.rec.symbol = string(dlg.rec.symbol,"У");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==28)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ф");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==29)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Х");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==30)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ц");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==31)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ч");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==32)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ш");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==33)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Щ");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==34)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ы");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==35)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ъ");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==36)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ь");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==37)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ю");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==38)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Я");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            else
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);

            end;
        end;
        
        
        if (FldName(dlg,id) == "Oper")
           if (Listoper (oper))
              dlg.rec.oper = oper.oper;
              dlg.rec.opername = oper.name;
              message(" ~F3~ Выбор операциониста "+const_mess);
              UpdateFields(dlg);
          end;
        end;
        if (FldName(dlg,id) == "Account")
           if (Listaccount (accountr,gg,0,dlg.rec.account))
              dlg.rec.account = accountr.account;
              dlg.rec.clientid = code(accountr.client);
              dlg.rec.clientname = getclientname(accountr.client);
              dlg.rec.oper = accountr.oper;
              dlg.rec.opername = getopername(accountr.oper);
              message(" ~F3~ Выбор счета "+const_mess);
              UpdateFields(dlg);
           end;
          end;

        
     elif (KEY == KEY_SPACE)
          /*Сброс установок в поле офис банка*/
           if (FldName(dlg,id) == "Fnul") 
            if (dlg.rec.fnul=="")
            dlg.rec.fnul="X";
            UpdateFields(dlg);
            else
            dlg.rec.fnul="";
            UpdateFields(dlg);
            end;
           elif (FldName(dlg,id) == "Symbol")
              dlg.rec.symbol = "";
           elif (FldName(dlg,id) == "Dept")
            dlg.rec.dept="";
            dprt_v = 0;
            dlg.rec.deptname="";
            UpdateFields(dlg);
           elif (FldName(dlg,id) == "Oper")
            dlg.rec.oper="";
            dlg.rec.opername="";
            UpdateFields(dlg);
          end;

     elif (( KEY == KEY_F2 ) or (KEY == KEY_ENTER))         //Проверки при вводе
         if ( dlg.rec.DateBegin > {curdate} )
                MsgBox("Дата начала периода не может быть больше даты текущего операционного дня");
                return CM_IGNORE;
          elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
                MsgBox("Дата начала периода не может быть больше даты окончания периода");
                return CM_IGNORE;
         end;
          if ( dlg.rec.DateEnd > {curdate} )
                MsgBox("Дата не может быть больше даты текущего операционного дня");
                return CM_IGNORE;
          elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
                MsgBox("Дата окончания периода не может быть меньше даты начала периода");
                return CM_IGNORE;
          end;
        Datebegin  = dlg.rec.Datebegin;
        Dateend = dlg.rec.DateEnd;
        fnul=dlg.rec.fnul;
        g=dlg.rec.g;
        balacc=dlg.rec.balacc;
        dept=dprt_v;
        opr=dlg.rec.oper;
        account=dlg.rec.account;
        symbol=dlg.rec.symbol;
         if ((Datebegin < {curDate}))    
           Return CM_SAVE;
        elif (gettrue(true,"Дата равна текущему опрерационному дню. Продолжить?"))
           Return CM_SAVE;
        end;
      else
           Return CM_IGNORE;
     end;
   end;
        
END;


/*Точка входа в макрос*/
if (RunDialog(dlg, "Event"))                  
debugbreak;
outall();
end;
END;

