/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   Гуцу Е.В.

   Имя файла: -

   Создан:    2.06.2014

   Описание:  Выгрузка для проверки ЦБ

   ChangeLog:
-----------------------------------------------------------------------------------------------------------------------------------------------------

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

import rsd, cb_sql, "or_const.mac";

var {CurDate}, {OurBank};
var ExcelApplication,
    ActiveSheet,
    startAX;
var LastRow;



macro SchaffenExcelDatei()

   if (ExcelApplication == null)
      if (isStandAlone())
         ExcelApplication = ActiveX("Excel.Application", null, true);
      else
         if (startAX == null)
            startAX = CreateObject("rsax", "TRsAxServer", "LoansAxServer", isStandalone());
         end;
         ExcelApplication = startAX.CreateComObject("Excel.Application");
      end;
   end;

   ExcelApplication.Workbooks.Add();
   ExcelApplication.Visible = false;
   ActiveSheet = ExcelApplication.ActiveSheet;
   return true;

   onError (err)
      msgbox( err.message );
      Exit(1);

end;


macro DruckenBerichtskopf( startDate, finishDate )

   ActiveSheet.Cells( 2, 2 ).value = "Клиенты (открытые счета с " + string( startDate:m ) + " по " + string( finishDate:m ) + ")";

   ActiveSheet.Cells( 4, 2 ).value = "Наименование клиента";
   ActiveSheet.Cells( 4, 3 ).value = "ИНН";
   ActiveSheet.Cells( 4, 4 ).value = "Номер счёта";
   ActiveSheet.Cells( 4, 5 ).value = "Дата открытия счёта";
   ActiveSheet.Cells( 4, 6 ).value = "Дата закрытия счёта";
   ActiveSheet.Cells( 4, 7 ).value = "Дата госрегистрации";

   ActiveSheet.columns("A:D").entirecolumn.autofit;

end;


macro AusfuhrenBericht( startDate, finishDate, filter )

   var sql, cmd, rs, from;
   var rowCount, i = 0;
   var lastPtId, addWhereClause;

   addWhereClause = "";
   if( valType( filter ) != V_UNDEF )

      filter = strSubst( filter, "*", "%" );
      filter = strSubst( filter, "?", "_" );
      addWhereClause = "and acc.t_account not like '" + filter + "'";

   end;

   from = " From ( " +
         "                 Select pt.t_shortname,                                                               " +
         "                        REGEXP_SUBSTR( cod.t_code, '([[:digit:]]){10,12}' ),                          " +
         "                        doc.t_docdate,                                                                " +
         "                        acc.t_account,                                                                " +
         "                        pt.t_partyid,                                                                 " +
         "                        acc.t_open_date,                                                              " +
         "                        acc.t_close_date                                                              " +
         "                   From daccount_dbt acc, dparty_dbt pt, dobjcode_dbt cod, dobjrgdoc_dbt doc          " +
         "                  Where acc.t_open_date     >= ?                                                      " +
         "                    and acc.t_open_date     <= ?                                                      " +
         "                    and acc.t_account     like '40%'                                                  " +
         "                    and acc.t_account not like '40817%'                                               " +
         "                    and pt.t_partyid         = acc.t_client                                           " +
         "                    and cod.t_objecttype     = 3                                                      " +
         "                    and cod.t_codekind       = 16                                                     " +
         "                    and cod.t_objectid       = pt.t_partyid                                           " +
         "                    and cod.t_state          = 0                                                      " +
         "                    and doc.t_objecttype     = 3                                                      " +
         "                    and doc.t_objectid       = pt.t_partyid                                           " +
         "                    and doc.t_regpartykind   = 7                                                      " +
         "                    and doc.t_regdockind     = 4                                                      " +
         "                    and doc.t_codekind       = 27                                                     " +
         "                    and doc.t_isclosed      <> CHR(88)                                                " +
         "                    and doc.t_ismain         = CHR(88)                                                " +
         addWhereClause +
         "                  Group by pt.t_shortname, cod.t_code, doc.t_docdate, acc.t_account, pt.t_partyid,    " +
         "                           acc.t_open_date, acc.t_close_date                                          " +
         "                  Order by doc.t_docdate, pt.t_shortname                                              " +
         "               )                                                                                      " ;

   sql = "Select count(0)" + from;
   cmd = rsdCommand( sql );
   cmd.addParam( "", RSDBP_IN, startDate );
   cmd.addParam( "", RSDBP_IN, finishDate );
   rs = rsdRecordSet( cmd );
   if( rs and rs.moveNext )
      rowCount = rs.value( 0, null, V_INTEGER );
   end;

   initProgress( rowCount, "", "Обработка списка клиентов" );

   sql = "Select *" + from;
   cmd = rsdCommand( sql );
   cmd.addParam( "", RSDBP_IN, startDate );
   cmd.addParam( "", RSDBP_IN, finishDate );
   rs = rsdRecordSet( cmd );
   while( rs and rs.moveNext )

      i = i + 1;
      useProgress( i );

      if( lastPtId != rs.value( 4, null, V_INTEGER ) )
         ActiveSheet.Cells( i+5, 2 ).value = rs.value( 0, null, V_STRING );
         ActiveSheet.Cells( i+5, 3 ).value = rs.value( 1, null, V_STRING );
         ActiveSheet.Cells( i+5, 4 ).value = string( rs.value( 3, null, V_STRING ):f );
         ActiveSheet.Cells( i+5, 5 ).value = string( SQL_convtypedate( rs.value( 5, null, V_DATE ) ) );
         ActiveSheet.Cells( i+5, 6 ).value = string( SQL_convtypedate( rs.value( 6, null, V_DATE ) ) );
         ActiveSheet.Cells( i+5, 7 ).value = string( SQL_convtypedate( rs.value( 2, null, V_DATE ) ) );
      else
         ActiveSheet.Cells( i+5, 2 ).value = "";
         ActiveSheet.Cells( i+5, 3 ).value = "";
         ActiveSheet.Cells( i+5, 4 ).value = string( rs.value( 3, null, V_STRING ):f );
         ActiveSheet.Cells( i+5, 5 ).value = string( SQL_convtypedate( rs.value( 5, null, V_DATE ) ) );
         ActiveSheet.Cells( i+5, 6 ).value = string( SQL_convtypedate( rs.value( 6, null, V_DATE ) ) );
         ActiveSheet.Cells( i+5, 7 ).value = "";
      end;

      lastPtId = rs.value( 4, null, V_INTEGER );
   end;

   LastRow = i;
   remProgress();

end;


macro FormatierenBericht()

//debugbreak;

   ActiveSheet.columns( "A:D" ).entirecolumn.NumberFormat = "000000";
   ActiveSheet.columns( "A:G" ).entirecolumn.autofit;
   ActiveSheet.columns( "A:D" ).HorizontalAlignment = ALIGN_LEFT;
   ActiveSheet.columns( "E:G" ).HorizontalAlignment = ALIGN_RIGHT;

   ActiveSheet.columns( "B" ).entirecolumn.ColumnWidth = 45;
   ActiveSheet.Range( "B:B" ).WrapText = true;
   ActiveSheet.Range( "B:B" ).ShrinkToFit = false;

   ActiveSheet.Range( "B2:G2" ).merge;
   ActiveSheet.Range( "B2:G2").HorizontalAlignment = ALIGN_LEFT;
   ActiveSheet.Cells( 2, 2 ).font.size = 15;

   /*
   ActiveSheet.Range( "C2:G2" ).merge;
   ActiveSheet.Range( "C2:G2").HorizontalAlignment = ALIGN_LEFT;
   ActiveSheet.Cells( 2, 3 ).font.size = 14;

   ActiveSheet.rows( 4 ).HorizontalAlignment = ALIGN_CENTER;
   ActiveSheet.rows( 4 ).font.size = 12;
   ActiveSheet.rows( 4 ).font.bold = true;

   //ActiveSheet.columns( "B" ).entirecolumn.HorizontalAlignment = 2;  // По левому краю
   //ActiveSheet.columns( "E" ).entirecolumn.HorizontalAlignment = 2;  // По левому краю

   ActiveSheet.Range( "B6:G" + LastRow ).HorizontalAlignment = ALIGN_LEFT;
   ActiveSheet.Range( "B6:H" + LastRow ).VerticalAlignment = ALIGN_CENTER;

   ActiveSheet.columns( "A:G" ).entirecolumn.NumberFormat = "000000";
   ActiveSheet.columns( "A:H" ).entirecolumn.autofit;
   ActiveSheet.rows( "6:" + LastRow ).entirerow.autofit;

   // EVG 15/04/2014 Раз есть сумма, нужен и итог
   // Определим имя формулы, исходя из языка интерфейса
   var formulaName = "SUM";
   if( ExcelApplication.LanguageSettings.LanguageID( msoLanguageIDUI ) == EXCEL_INTERFACE_RUS )
      formulaName = "СУММ";
   end;

   ActiveSheet.Cells( LastRow + 1, 7 ).value = " Итого: ";
   ActiveSheet.Cells( LastRow + 1, 7 ).HorizontalAlignment = ALIGN_RIGHT;
   ActiveSheet.Cells( LastRow + 1, 8 ).FormulaR1C1 = "=" + formulaName + "(R[-" + LastRow + "]C:R[-1]C)";
   ActiveSheet.Cells( LastRow + 1, 8 ).NumberFormat = "# ##0,00р.";

   ActiveSheet.Range( "G"+(LastRow+1) + ":H"+(LastRow+1) ).font.size = 12;
   ActiveSheet.Range( "G"+(LastRow+1) + ":H"+(LastRow+1) ).font.bold = true;
   // EVG 15/04/2014 end

   ActiveSheet.columns( "A" ).delete;

   // EVG 15/04/2014 Ещё одна доработка - настройка параметров печати
   ExcelApplication.PrintCommunication  = False;
   ActiveSheet.PageSetup.Orientation    = PAPER_LANDSCAPE;
   ActiveSheet.PageSetup.FitToPagesWide = 1;
   ActiveSheet.PageSetup.FitToPagesTall = 100;
   ActiveSheet.PageSetup.LeftMargin     = 25;
   ActiveSheet.PageSetup.RightMargin    = 25;
   ActiveSheet.PageSetup.TopMargin      = 25;
   ActiveSheet.PageSetup.BottomMargin   = 25;
   ExcelApplication.PrintCommunication  = true;

//debugbreak;
//ExcelApplication.visible = true;

   // EVG 16/04/2014 Фиксируем ширину столбцов плательщик, получатель и назначение платежа
   ActiveSheet.columns( "B" ).entirecolumn.ColumnWidth = 35;
   ActiveSheet.columns( "E" ).entirecolumn.ColumnWidth = 35;
   ActiveSheet.columns( "F" ).entirecolumn.ColumnWidth = 50;
   ActiveSheet.Range( "B:B;E:E;F:F" ).WrapText = true;
   ActiveSheet.Range( "B:B;E:E;F:F" ).ShrinkToFit = false;

   // EVG 16/04/2014 Разлинуем отчёт: по горизонтали сплошные линии, по вертикали - пунктир
   var selection = ActiveSheet.Range( "A6:G"+(LastRow-1) );
   with ( selection )
      Borders( 11 ).LineStyle = -4118;  // xlInsideHorizontal -> xlDot
      Borders( 12 ).LineStyle = 1;      // xlInsideVertical -> xlContinuos
   end;
   */

end;


macro SpeichernBericht();

   var ExcelDateiName = "$Auffullung_" + random(100) + "_" + UserNumber + ".xls";

   ExcelApplication.Visible = true;

   var wb = ExcelApplication.Workbooks.item(1);
       wb.SaveAs( ExcelDateiName, 56 );

   onError (err)
      return

end;


macro CheckWrongSymbol( masc, wrongSymb )

   if( index( masc, wrongSymb ) )
      msgbox( "Введён недопустимый символ: " + wrongSymb );
      return false;
   end;
   return true;

end;


var begDate = date(  1, 8, 2012 ),
    endDate = date( 31, 5, 2014 ),
    accMasc;

getDate( begDate, "Пожалуйста, введите дату начала периода отчёта" );
getDate( endDate, "Пожалуйста, введите дату окончания периода отчёта" );
if( getTrue( false, "Хотите исключить какие-то счета??" ) )
   accMasc = "409*";
   while( true )
      getString( accMasc, "Пожалуйста, введите маску исключения счетов" );

      accMasc = trim(accMasc);
      if( ( CheckWrongSymbol( accMasc, "-" ) ) and
          ( CheckWrongSymbol( accMasc, "," ) ) and
          ( CheckWrongSymbol( accMasc, "." ) ) and
          ( CheckWrongSymbol( accMasc, "+" ) ) and
          ( CheckWrongSymbol( accMasc, "&" ) ) )
         break;
      end;

   end;
end;

SchaffenExcelDatei();
DruckenBerichtskopf( begDate, endDate );
AusfuhrenBericht( begDate, endDate, accMasc );
FormatierenBericht();
SpeichernBericht();

exit( 1 );