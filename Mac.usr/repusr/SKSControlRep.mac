/*=====================================================================================================================*/
/*  @filename: CKSControlRep.mac                                                            	       		*/
/*  @author  : Vashchenko D. N. 10.09.2014                                                       	  	       	*/
/*  @desc    : Контроль за объемами снятия наличных денежных средств по корпоративным картам	 		       */
/*  @changes :                                                                                   				*/
/*                                                                                               				*/
/*                                                                                          				*/
/*=====================================================================================================================*/
import BankInter,                                                                        
       Reporting,                                                                       
       FIInter,                                                                        
       PTInter,                                                                       
       RsbDataSet,                                                                   
       RsbFormsInter,                                                               
       Globals,                                                                    
       KeyCodes,                                                                   
       Lib_SqlTools,
       VBAConst,
       CashInter,
       Fg_Life_parm;

private const	FT_INTEGER = 0;
private const	FT_STRING  = 7;
private const	FT_DATE    = 9;

Array reportArray, subjectArray, brantchArray, brnFromArray, dvizionArray, dvizSettArray, settingsArray;
var list, list_count = 1, divName = "",
statusString = "~F2~ Выполнить ~F3~ Выбор из справочника ~SPACE~ Изменить ~ESC~ Выход";

var fgBank = fg_life_subject({OurBank});

dvizSettArray (0) = " AND D.T_ACCOUNT IN (SELECT T_ACCOUNT  FROM DACCOUNT_DBT AC, DCLIENT_DBT C WHERE AC.T_CLIENT = C.T_PARTYID "
                    " AND C.T_SERVICEKIND = 1002 AND TRUNC(C.T_FINISHDATE) = TO_DATE('01.01.0001', 'DD.MM.YYYY') ) ";//ДМСБ

dvizSettArray (1) = " AND D.T_ACCOUNT IN (SELECT T_ACCOUNT  FROM DACCOUNT_DBT AC, DCLIENT_DBT C WHERE AC.T_CLIENT = C.T_PARTYID "
                    " AND C.T_SERVICEKIND = 1001 AND TRUNC(C.T_FINISHDATE) = TO_DATE('01.01.0001', 'DD.MM.YYYY') ) ";//ДКБ

dvizSettArray (2) = " AND D.T_ACCOUNT NOT IN (SELECT T_ACCOUNT  FROM DACCOUNT_DBT AC, DCLIENT_DBT C WHERE AC.T_CLIENT = C.T_PARTYID "
                    " AND C.T_SERVICEKIND IN (1001, 1002) ) ";//Остальные


macro openExcel()
    var exObj;
    var comObj;
    var list;
    var listObj;
      
    exObj  = CreateObject ("rsax","TRsAxServer","RsAxServer",IsStandAlone());
    comObj = ExObj.CreateComObject ("Excel.Application", False);
    comObj.Application.DisplayAlerts = True;
    comObj.Workbooks.Add();

    SetParm( 0, comObj );

    return true;
onerror
    return false;
end; 

macro getRecordSet ( beginDate, endDate )
    var docInfoServer = RepDocInfoServer( PTCK_ALL, 1, 0 ), // создание сервера (0 - по платежам)
        cacheQueryText,
        sqlRequest,
        excelReport,
        list;  

    macro closeExcel( )
       MsgBox("Нет данных для построения отчета");
       excelReport.Quit;
    end; 
    
    macro setHeader( ind, dateBegin )
       var j = 6, sql;         
       
       list.range("A1").value = "Наименование клиента";
       list.range("B1").value = "ИНН клиента";
       list.range("C1").value = "Номер счета";
       list.range("D1").value = "Дивизион";
       list.range("E1").value = "Банк";
       list.range("F1").value = "Сумма по операциям";
       
       startQueryCapture ();
       [SELECT TRIM(TO_CHAR (ADD_MONTHS (TRUNC (TO_DATE ('beginDate', 'DD.MM.YYYY'), 'MONTH'), LEVEL - 1), 'MONTH', 'NLS_DATE_LANGUAGE = RUSSIAN')) MONTHS
        FROM DUAL
        CONNECT BY LEVEL <=
              (SELECT MONTHS_BETWEEN (ADD_MONTHS (TO_DATE ('endDate'  , 'DD.MM.YYYY'), 1),
                                                  TO_DATE ('beginDate', 'DD.MM.YYYY'))
               FROM DUAL)]; 
       sql = endQueryCapture ();
       sql = strSubSt(sql, "beginDate" , string(beginDate ));
       sql = strSubSt(sql, "endDate"   , string(endDate   ));

       sql = TRsbDataSet ( sql );
       
       while (sql and sql.MoveNext) 
          list.Cells(2, j).value = sql.months;
          list.Range(list.Cells(2, j), list.Cells(2, j + 2)).merge;
          for ( var s, 1, 3 )
             list.Cells(3, j)    .value = "Снятие все";
             list.Cells(3, j + 1).value = "Из них по 81 символу";
             list.Cells(3, j + 2).value = "Оплата";
          end;
          j = j + 3;
       end;        

       list.Cells(1, j)    .value = "ИТОГО";
       list.Cells(3, j)    .value = "Снятие все";
       list.Cells(3, j + 1).value = "Из них по 81 символу";
       list.Cells(3, j + 2).value = "Оплата";

       list.range("A1:A3").merge;
       list.range("B1:B3").merge;
       list.range("C1:C3").merge;
       list.range("D1:D3").merge;
       list.range("E1:E3").merge;
       list.Range(list.Cells( 1, 6 ), list.Cells( 1, ind - 3 )).merge;
       list.Range(list.Cells( 1, j ), list.Cells( 2, ind ))    .merge;
       
       list.Range(list.Cells( 1, 1 ), list.Cells( 3, ind )).Borders.Weight = 2;
       list.Range(list.Cells( 1, 1 ), list.Cells( 3, ind )).HorizontalAlignment = xlCenter; 
       list.Range(list.Cells( 1, 1 ), list.Cells( 3, ind )).VerticalAlignment   = xlCenter;     
                                                         
       list.range(list.Cells( 1, 1 ), list.Cells( 3, ind )).font.fontStyle = "bold";
       list.range(list.Cells( 1, 1 ), list.Cells( 3, ind )).interior.color = #B5B5B5;
            
       j = 1;
       while (j < ind)
          list.Columns(j).EntireColumn.AutoFit;
          j = j + 1;
       end; 
    end; 

    macro getSKSclause
       if ( fgBank.is_EXV )
          return " AND (SUBSTR (D.T_ACCOUNT, 11, 1) = '9' OR SUBSTR (D.T_ACCOUNT, 12, 1) = '9') "; 
       elif ( inList( true, fgBank.is_EXV_Stavropol, fgBank.is_EXV_Volgograd, fgBank.is_EXV_Voronezh ) )
          return " AND SUBSTR (D.T_ACCOUNT, 12, 1) = '9' ";
       elif ( fgBank.is_GEB )
          return " AND D.T_USERTYPEACCOUNT LIKE '%D%' ";
       elif ( fgBank.is_SLD )
          return " AND (SUBSTR (D.T_ACCOUNT, 14, 1) = '8' AND INSTR(D.T_USERTYPEACCOUNT, CHR(72)) = 0) "; 
       else
          return " AND (SUBSTR (D.T_ACCOUNT, 11, 1) = '9' AND INSTR(D.T_USERTYPEACCOUNT, CHR(72)) = 0) ";
       end;
    end;

    macro createRequestArh ( conditionDivizion )
     
       startQueryCapture ();
       [ 
         WITH ACCOUNTS AS (
            SELECT D.T_ACCOUNT 
            FROM DACCOUNT_DBT D, DPARTY_DBT P
            WHERE D.T_CLIENT = P.T_PARTYID
            AND (REGEXP_LIKE(D.T_ACCOUNT, '^40702|^40802|^40703'))
            MY_FRM 
            MY_SKS 
            MY_DIVIZION)           
         SELECT MY_COLLUMN
         FROM DACCTRN_DBT
         WHERE  T_ACCOUNT_PAYER IN (SELECT * FROM ACCOUNTS)
            AND T_DATE_CARRY BETWEEN TO_DATE ('MY_BEGINDATE', 'dd.mm.yyyy')
                                 AND TO_DATE ('MY_ENDDATE', 'dd.mm.yyyy') 
       ];  
       cacheQueryText = endQueryCapture (); //40702810009000066882
       cacheQueryText = strSubSt(cacheQueryText, "MY_FRM"       , settingsArray (0)                    ); 
       cacheQueryText = strSubSt(cacheQueryText, "MY_SKS"       , getSKSclause ( )                     );
       cacheQueryText = strSubSt(cacheQueryText, "MY_DIVIZION"  , conditionDivizion                    );
       cacheQueryText = strSubSt(cacheQueryText, "MY_COLLUMN"   , docInfoServer.getFieldListasString ());
       cacheQueryText = strSubSt(cacheQueryText, "MY_BEGINDATE" , string(beginDate)                    );
       cacheQueryText = strSubSt(cacheQueryText, "MY_ENDDATE"   , string(endDate)                      );       

       return true;

    onError
       return false;
    end;
        
    macro setToFile ( s, s1, divizion )
       var sqlText;
       docInfoServer.cacheInformation ( cacheQueryText );

       startQueryCapture ();
       [
       SELECT T_PAYERNAME PAYERNAME, 
              T_PAYERINN PAYERINN, 
              T_PAYERACCOUNT ACCOUNT              
       FROM CACHETABLE T 
       GROUP BY T_PAYERNAME, T_PAYERINN, T_PAYERACCOUNT
       ORDER BY T_PAYERACCOUNT
       ];
       sqlText = endQueryCapture ();
       sqlText = strSubSt(sqlText, "CACHETABLE", docInfoServer.getCacheTableName() );
       sqlText = strSubSt(sqlText, "beginDate" , string(beginDate                 ));
       sqlText = strSubSt(sqlText, "endDate"   , string(endDate                   ));

       var rs = TRsbDataSet ( sqlText ), rsVal, j = s, c = 1, i = 0, v;        
          
       while (rs and rs.MoveNext)
          i = 5;
          startQueryCapture ();
          [  
          SELECT NVL (A.SUM1, 0) REMOVAL,
                 NVL (A.SUM2, 0) SYMB_81,
                 NVL (A.SUM3, 0) PAYMENT
          FROM 
             (SELECT SUM (CASE WHEN REGEXP_LIKE (T_RECEIVERACCOUNT, '^20208|^30233810609000060071|^30233..........60164')
                             THEN T_AMOUNT
                             ELSE 0
                          END) SUM1,
                     SUM (CASE WHEN T_RECEIVERACCOUNT LIKE '20208%' AND T_RECEIVERACCOUNT IN
                                    (SELECT T_ACCOUNT FROM DACCOUNT_DBT WHERE T_ACCOUNT LIKE '20208%' AND T_TYPE_ACCOUNT NOT LIKE '%П%')
                             THEN T_AMOUNT
                             ELSE 0
                          END) SUM2,
                     SUM (CASE WHEN T_RECEIVERACCOUNT IN
                                  ('30232810209000360279', 
                                   '30232840909000360277', '30232978509000360277',
                                   '30232810409000070071',
                                   '30232840309000060423', '30232978909000060423',
                                   '30232810409000070071',
                                   '30233810809000060279',
                                   '30233840509000060277', '30233978109000060277',
                                   '30233810709000070071',
                                   '30233840609000060423', '30233978209000060423',
                                   '30232810100000003922', '30233810400000003922', '30232840400000003922',
                                   '30233840700000003922', '30232978000000003922', '30233978300000003922',
                                   '30221810101000070712', '30221840401000070712', '30221978001000070712', 
                                   '30222810401000070712', '30222840701000070712', '30222978301000070712',
                                   '30221810100000000005', '30221840400000000005', '30221978000000000005', 
                                   '30222840700000000005', '30222978300000000005', 
                                   '30221810100000060039', '30221840400000060039', 
                                   '30222810400000060039', '30222840700000060039', '30222978300000060039')
                             THEN T_AMOUNT
                             ELSE 0
                          END) SUM3,
                     TRUNC (T_DATE_CARRY, 'MONTH') MONTHS
              FROM CACHETABLE
              WHERE T_PAYERACCOUNT = ACCT
              GROUP BY T_PAYERACCOUNT, TRUNC (T_DATE_CARRY, 'MONTH')) A
          RIGHT JOIN
             (SELECT ADD_MONTHS (TRUNC (TO_DATE ('beginDate', 'DD.MM.YYYY'),'MONTH'), LEVEL - 1) MONTHS
              FROM DUAL
              CONNECT BY LEVEL <= (SELECT MONTHS_BETWEEN (ADD_MONTHS (TO_DATE ('endDate'  , 'DD.MM.YYYY'), 1),
                                                                      TO_DATE ('beginDate', 'DD.MM.YYYY') )
                                   FROM DUAL)) S
          ON A.MONTHS = S.MONTHS
          ORDER BY S.MONTHS                        
          ];
          sqlText = endQueryCapture ();
          sqlText = strSubSt(sqlText, "CACHETABLE", docInfoServer.getCacheTableName() );
          sqlText = strSubSt(sqlText, "ACCT", rs.value(2)                             );
          sqlText = strSubSt(sqlText, "beginDate" , string(beginDate                 ));
          sqlText = strSubSt(sqlText, "endDate"   , string(endDate                   ));

          rsVal   = TRsbDataSet ( sqlText );             

          list.range("B" + j).numberFormat = "@";
          list.range("C" + j).numberFormat = "@";
          list.Cells(j, 1).value = rs.payername;
          list.Cells(j, 2).value = rs.payerinn;
          list.Cells(j, 3).value = rs.account;
          list.Cells(j, 4).value = divizion;
          list.Cells(j, 5).value = fgBank.BankShortName;     
             
          while ( rsVal and rsVal.MoveNext )
             list.Cells(j, i + 1).value = rsVal.removal;
             list.Cells(j, i + 2).value = rsVal.symb_81;
	      list.Cells(j, i + 3).value = rsVal.payment;
             i = i + 3; 
          end;
          
          /*Сумируем для итогов*/
          var sum_all = 0, z = 1;
          while ( z <= 3 )
             v = 5; sum_all = 0;
             while ( v < i )
                sum_all = sum_all + list.Cells(j, v + z).value;
                v = v + 3;
             end;
             list.Cells(j, i + z).value = sum_all;
             z = z + 1;
          end;
          i = i + 3;

          list.Range(list.Cells(j, 1), list.Cells(j, i)).Borders.Weight = 2;
          j = j + 1;
          c = c + 1;
          useprogress ( j );
          
          if ( j > 65000 )
             setHeader ( i );             
             list_count = list_count + 1;                
             excelReport.WorkSheets.Add ( );               
             j = 3;   
          end;
       end;     

       setParm ( 0, j );
       setParm ( 1, i );

       remprogress;
    
    OnError (er)
       return er.Message;
    end; 
   
    /**************НАЧАЛО ОБРАБОТКИ**************/
    if ( openExcel ( excelReport ) )       
       list = excelReport.Sheets(list_count);
       var i = 0, x, y = 4, c = 0; 
 
       while ( i < (Asize(dvizionArray) ) )   
          var conditionDivizion = dvizSettArray(i);
          if ( createRequestArh( conditionDivizion ) )
             initprogress( -1, "Ожидаейте, идет выгрузка данных: " + dvizionArray ( i ) );
             message("Обработка данных по дивизиону: " + dvizionArray ( i ));
             setToFile( y, x, dvizionArray ( i ) );
             if ( x != 0 ) setHeader ( x ); c = c + x; end;
          end;
          i = i + 1; 
       end;
       
       if ( c != 0 ) 
          excelReport.visible = True;
       else 
          closeExcel (); 
       end;
    end;
    message(statusString); 
end;

class ( TRsbPanel ) TReportPanel
    InitTRsbPanel();
    SetSize( 45, 7 );

    var editFieldsPosition = 15;
    var labelsPosition     = 2;

    class ( TRsbEditField ) EditField( fldName: string, typeFld: integer, x: integer, y: integer, width: integer, height: integer, bindVal, active: bool, edittable: bool, panel )
        var bindString = string( bindVal );
        
        initTRsbEditField( typeFld       );
        setPosition      ( x    , y      );
        setSize          ( width, height );
        name = FldName;

        if( active  == false     ) editable = focusable = false;    end;
        if ( edittable == false  ) editable = false;                end;
        if( typeFld == FT_STRING ) bindValue( this, "bindString", 100 );
      elif( bindVal != null      ) value    = bindVal;              end;    
        if( panel   != null      ) panel.addControl( this );        end;
    end; 
             
    subjectArray ( 0 )  = "Юридические лица";
    subjectArray ( 1 )  = "Индивидуальные предприниматели";
    subjectArray ( 2 )  = "ВСЕ";
    
    dvizionArray ( 0 )  = "ДМСБ";
    dvizionArray ( 1 )  = "ДКБ";
    dvizionArray ( 2 )  = "";

    addLabel( TRsbLabel( labelsPosition, 2 , "Начало периода  :" ) );
    addLabel( TRsbLabel( labelsPosition, 3 , "Конец  периода  :" ) );
    addLabel( TRsbLabel( labelsPosition, 5 , "Субъект         :" ) ); 

    var Period1     = EditField( "Period1",  FT_DATE  ,  editFieldsPosition,  2, 11, 1,  {curdate}         , true, true,  this ); 
    var Period2     = EditField( "Period1",  FT_DATE  ,  editFieldsPosition,  3, 11, 1,  {curdate}         , true, true,  this ); 
    var Subject     = EditField( "Subject",  FT_STRING,  editFieldsPosition,  5, 29, 1,  subjectArray ( 0 ), true, false, this );
    var CodeDep     = 1;

    settingsArray (0) = " AND P.T_LEGALFORM = 1 ";

    addEventHandler ( RSB_EV_KEY_PRESSED, R2M( this, "KeyPressed"            ) );  

    macro getNameDep (code)
       private var rs = rsdRecordset(" SELECT D.T_NAME FROM DPARTY_DBT D, DDP_DEP_DBT P WHERE P.T_PARTYID = D.T_PARTYID AND P.T_CODE = " + code);
       if ( rs.MoveNext ) return rs.value(0);
       else return "";
       end;
    end;  

    macro keyPressed ( RsbEvent:object )  
       if   ( rsbEvent.KeyCode == KEY_F2 )
          getRecordSet(Period1.value,Period2.value);
       elif ( rsbEvent.KeyCode == KEY_SPACE ) 
          var ctrlName = RsbEvent.Source.FocusedControl.Name;
          if   ( ctrlName == Subject.Name ) 
             if   ( Subject.Value == subjectArray (0) ) Subject.Value = subjectArray (1); settingsArray (0) = " AND P.T_LEGALFORM = 2 "; 
             elif ( Subject.Value == subjectArray (1) ) Subject.Value = subjectArray (2); settingsArray (0) = " AND P.T_LEGALFORM IN (1, 2) ";
             else                                       Subject.Value = subjectArray (0); settingsArray (0) = " AND P.T_LEGALFORM = 1 "; end;                  
         end; 
      end;
    end;
end;

/**********ТОЧКА ВХОДА*************/

var panel = TReportPanel;
    panel.setPosition(40, 15); 
    panel.setStatus(statusString);
    panel.setCaption("Настройка отчета");
    panel.run;

exit(1);