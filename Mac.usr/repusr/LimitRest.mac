/*Макрос подстчета количества и суммы установленных лимитов остатка кассы */
/*Дунаев А.И.  R-Style                                                    */
/*Начат  23/12/2010  I-093258                                             */
/*Версия 1.0                                                              */

import rsd, total, ActiveX, RsbDataSet; 

var BegDate, EndDate, Ex;


macro ВвестиИсходныеДанные()
  BegDate = {curdate}-1;
  EndDate = {curdate};
  if (not ВвестиПериодДат (BegDate, EndDate, "Задайте период:"))
     exit (1);
  end;
  if (BegDate > EndDate)
     msgbox ("Начальная дата превышает конечную!");
     exit (1);
  end;
end;

macro InitBookExel()
/* DAI
Создается новая книга Excel на основе шаблона "Лимиты остатка кассы.xlt", 
размещенном в каталоге заданном в ключе реестра "BANK_INI\ОБЩИЕ ПАРАМЕТРЫ\ДИРЕКТОРИИ\LBRDIR"
При отсутствии шаблона обработка прерывается.

Создание объектной переменной Ex для работы с Excel с учетом 2х или 3х звенки
*/
   var It, ForTerm;

   ForTerm = CreateObject ("rsax","TRsAxServer","RsAxServer",IsStandAlone());
   Ex = ForTerm.CreateComObject ("Excel.Application", True);
   Ex.Visible = False;

   var i, outl, schablon;

   GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
   
   schablon = FindPath("Лимиты остатка кассы.xlt", outl, false);
   if (not schablon)
      msgbox("Не найден шаблон формы ""Лимиты остатка кассы"" для Excel");
      exit();
   end;
   
   Ex.Workbooks.add(schablon);
   Ex.Cells (3, 1).Value = "с " + BegDate + " по " + EndDate;

end;

macro ReadData(val):Object
/* DAI
Возвращает recordset лицевых счетов для которых примечание 108 попадает в заданный период
Для каждого счета дополнительно указано: клиент счета, узел ТС и значение примечания 102
Если val == True - отбор по валютным лицевым счетам, иначе по рублевым.
*/
var TextSQL = "SELECT not108.T_ACC, "+
              "       P.T_NAME NAME_cl, "+
              //"       ACC.T_DEPARTMENT, "+
              "       D.T_NAME, "+
              "       s.T_SHORTNAME T_NAME_TS, "+
              "       not108.t_dat, "+
              "       not102.t_mon "+
              "FROM (SELECT substr(T_DOCUMENTID,10) T_ACC, "+
              "             rep_utl.castRawToDate(T_TEXT) T_DAT "+
              "      FROM dnotetext_dbt "+
              "      WHERE T_OBJECTTYPE = 4 "+
              "        AND T_NOTEKIND = 108 "+
              "        AND t_numsession = 0 "+
              "        AND rep_utl.castRawToDate(T_TEXT) between (" + SQLDate(BegDate) + ") AND (" + SQLDate(EndDate) + "))  not108 "+
              "LEFT JOIN (SELECT substr(T_DOCUMENTID,10) T_ACC, "+
              "                  rep_utl.castRawToMoney(t_text) T_Mon "+
              "           FROM dnotetext_dbt "+
              "           WHERE T_OBJECTTYPE = 4 "+
              "             AND T_NOTEKIND = 102 "+
              "             AND t_numsession = 0) not102 on not108.t_acc = not102.t_acc, ";
   if (not val)
      TextSQL = TextSQL + "     daccount_dbt acc, ";
   else
      TextSQL = TextSQL + "     daccount$_dbt acc, ";
   end;
   TextSQL = TextSQL +
              "     dparty_dbt p, "+ 
              "     ddp_dep_dbt d, "+ 
              "     dparty_dbt s "+
              "WHERE not108.t_acc = ACC.T_ACCOUNT "+
              "  AND ACC.T_CHAPTER in (1, 3) "+
              "  AND ACC.T_CLIENT = P.T_PARTYID "+
              "  AND ACC.T_BRANCH = D.T_CODE"
              "  AND D.T_PARTYID = s.T_PARTYID";
   return TRsbDataSet(TextSQL);
end;

macro OutReport()
var rs, Row;
   Row = 6;
   rs = ReadData(False); //По рублевым счетам
   while (rs.MoveNext)
      Ex.Cells (Row, 1).Value = Row - 5;
      Ex.Cells (Row, 2).Value = rs.t_acc;
      Ex.Cells (Row, 3).Value = rs.name_cl;
      if (rs.t_mon)
         Ex.Cells (Row, 4).Value = rs.t_mon;
      else
         Ex.Cells (Row, 4).Value = 0;
      end;
      Ex.Cells (Row, 5).Value = rs.t_dat;
      Ex.Cells (Row, 6).Value = rs.t_name;
      Ex.Cells (Row, 7).Value = rs.t_name_ts;
      Row = Row + 1;
   end;
   rs = ReadData(True); //По валюте
   while (rs.MoveNext)
      Ex.Cells (Row, 1).Value = Row - 5;
      Ex.Cells (Row, 2).Value = rs.t_acc;
      Ex.Cells (Row, 3).Value = rs.name_cl;
      if (rs.t_mon)
         Ex.Cells (Row, 4).Value = rs.t_mon;
      else
         Ex.Cells (Row, 4).Value = 0;
      end;
      Ex.Cells (Row, 5).Value = rs.t_dat;
      Ex.Cells (Row, 6).Value = rs.t_name;
      Ex.Cells (Row, 7).Value = rs.t_name_ts;
      Row = Row + 1;
   end;
   if (Row > 6)
      Ex.Range ("A6:G"+(Row - 1)).Select;
      Ex.Selection.Borders(xlDiagonalDown).LineStyle = xlNone;
      Ex.Selection.Borders(xlDiagonalUp  ).LineStyle = xlNone;
      Ex.Selection.Borders(xlEdgeLeft).LineStyle    = xlContinuous;
      Ex.Selection.Borders(xlEdgeLeft).ColorIndex   = 0;
      Ex.Selection.Borders(xlEdgeLeft).Weight       = xlThin;
      Ex.Selection.Borders(xlEdgeTop).LineStyle    = xlContinuous;
      Ex.Selection.Borders(xlEdgeTop).ColorIndex   = 0;
      Ex.Selection.Borders(xlEdgeTop).Weight       = xlThin;
      Ex.Selection.Borders(xlEdgeBottom).LineStyle    = xlContinuous;
      Ex.Selection.Borders(xlEdgeBottom).ColorIndex   = 0;
      Ex.Selection.Borders(xlEdgeBottom).Weight       = xlThin;
      Ex.Selection.Borders(xlEdgeRight).LineStyle    = xlContinuous;
      Ex.Selection.Borders(xlEdgeRight).ColorIndex   = 0;
      Ex.Selection.Borders(xlEdgeRight).Weight       = xlThin;
      Ex.Selection.Borders(xlInsideVertical).LineStyle    = xlContinuous;
      Ex.Selection.Borders(xlInsideVertical).ColorIndex   = 0;
      Ex.Selection.Borders(xlInsideVertical).Weight       = xlThin;
      if (Row > 7)
         Ex.Selection.Borders(xlInsideHorizontal).LineStyle    = xlContinuous;
         Ex.Selection.Borders(xlInsideHorizontal).ColorIndex   = 0;
         Ex.Selection.Borders(xlInsideHorizontal).Weight       = xlThin;
      end;
      Ex.Range ("A"+Row+":C"+Row).Select;
      Ex.Selection.Merge;
      Ex.Selection.HorizontalAlignment = xlRight;
      Ex.ActiveCell.Value = "Итого:";
      Ex.Cells (Row, 4).Formula = "=СУММ(D6:D"+(Row-1)+")";
   end;
   Ex.Range ("A1:A1").Select;
end;

ВвестиИсходныеДанные();
BegAction();
InitBookExel();
OutReport();
EndAction();
Ex.Visible = True;
exit(1);
