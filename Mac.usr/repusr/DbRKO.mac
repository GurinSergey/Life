/*Дебиторская задолженность за РКО                                     */
/*                                                                     */
/*                                                                     */
/*Тихомиров А.Н. 09.04.2009                    Версия 1.1              */
//11.07.2012 vihrov C-12122 смена диапазонов кодов

/* 01.10.2012  I-00261120-2 AAN  в запрос малость оптимизировал по      */
/*          времени + убрал ошибку - указал явно что t_branch надо      */
/*          брать из табл daccount_dbt а не из какой либо др таблицу    */
/* 30.04.2014 C-28764-6 - Шестизначная нумерация ВУЗ */
/* 30.04.2014 DPN Адаптация под 31 */
/* EVG */
import "fg_Life_parm.mac";

CONST en2="Фамилия исполнителя";
CONST en4="Фамилия руководителя"; 

import rsbdataset, bankinter, globals, календарь;
import "frontcommon.mac";

var acc, rest, ex, ob, out, outputx="dbrko.xls", fulloutput, obBook, obsheet, i, reportdate, datep, sp, total, sql, dataset;
var rst45, acc45, text, result, percent,numb, maxs:integer, s:integer, dater, flag;

private var oConnection_lib = ActiveX("ADODB.Connection");

const  KEY_F1      =315;
const  KEY_F2      =316;
const  KEY_F3      =317;
const KEY_ESC      = 27;
const KEY_SPACE    = 32;
const KEY_ENTER    = 13;

var Fulloutputl, outl, outputl="dbrko.lbr";                    
GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
Fulloutputl = FindPath(outputl, outl);
var dlg = TRecHandler("dbrko", fulloutputl, TRUE); 


/*Подключение к фронту*/
private macro CallProcedure(Bic, Account)
  debugbreak;
  var oConnection = oConnection_lib, connstring, rsd,cmd,rs,ruleId;
  array aInput, aOutPut;

    /* Инициализация параметров */
   aInput(0) = Account;
   aInput(1) = Bic;
   asize(aOutput,0);
   
//TAM 01.03.2012 I-00160084-2
   cmd = RSDCommand( "select rule_id, connstring from usr_route_parm  where rule_id = 10" );
   rs = RSDRecordset(cmd);
   if (rs.movenext)
      ruleId = rs.value("rule_id");
      connstring = rs.value("connstring");
   else
     msgbox("Не определены параметры внешней системы");
   end;
      conn2front(oConnection, connstring);

   rsd = RSADORecordset(ExecuteFrontProcEx("rsb6_get_riskgroup", aInput, oConnection,ruleId));

    result = 0;
   percent = 0;
   text = "";
//   Result = aOutput(0);    // Исх: код ошибки
//   percent = aOutput(1);    // Исх: текст ошибки
 if (rsd.movenext())
   result = rsd.m_value[0];
   percent = rsd.m_value [1];
 end;
   if ((Result == 1) or (Result == 2) or (Result == 3) or (Result == 4))
     text = "Не определено";
   end;
   /* Если осталось открытое соединение, закрываем */
   if (oConnection and (oConnection.State == 1) )
      oConnection.Close();
   end;
  return 0;
END;

private macro datepr(account, rest,reportdate)
var cmd1, rsd1;
/*var cmd =rsdcommand ("select t_sum from darhdoc_dbt where t_Account_receiver = ? and t_chapter = 1 and t_date_carry < ? order by t_date_carry desc");
cmd.addparam("acc", RSDBP_IN, account);
cmd.addparam("date", RSDBP_IN, reportdate);
cmd.execute;
var rsd = rsdrecordset(cmd);
while (rsd.movenext())
rest = rest - rsd.value(0);
end;
*/

  cmd1 =rsdcommand ("select t_sum, t_date_carry from darhdoc_dbt where t_Account_payer = ? and t_chapter = 1 and t_date_carry < ? order by t_date_carry desc");
  cmd1.addparam("acc", RSDBP_IN, account);
  cmd1.addparam("date", RSDBP_IN, reportdate);
  cmd1.execute;
  rsd1 = rsdrecordset(cmd1);
  while (rsd1.movenext())
     rest = rest - rsd1.value(0);
    if (rest <= 0)
       return rsd1.value(1);
    end;
  end;
  return rsd1.value(1);
end;


private macro namef (id)
var sq = "select t_name from ddp_dep_dbt where t_code="+id;
var dat = trsbdataset(sq);
 if (dat.movenext())
   return dat.name;
 else
   return "Субъект не найден";
 end;
end;

private macro name(client)
var sq = "select t_name from dparty_dbt where t_partyid="+client;
var dat = trsbdataset(sq);
 if (dat.movenext())
   return dat.name;
 else
   return "Субъект не найден";
 end;
end;

private macro code1(client)
//var sq =" select t_code from dobjcode_dbt where t_objectid="+client+" and t_codekind=101";
var sq =" select t_code from dobjcode_dbt where t_objectid="+client+" and t_codekind=1 and t_state=0"; //11.07.2012 vihrov C-12122 смена диапазонов кодов
var dat = trsbdataset(sq);
  if (dat.movenext())
   return dat.code;
  else
   return "Код не найден";
  end;
end;

private macro rest45(client, dt)
var sq = "SELECT acc.t_account "+
  " FROM daccount_dbt acc "+
   " WHERE (acc.t_account LIKE '452%' OR acc.t_account LIKE '454%' )"+
   " AND acc.t_client = "+client;
var dat = trsbdataset(sq);
 while (dat.movenext())
   if (resta(dat.account,dt)>0)
     acc45 = dat.account;
     return "Да";
   end;
 end;
return "Нет";
end;


private macro outall
debugbreak;
var total=0;
    if (IsStandAlone()) // Двухзвенка
                 if ((ValType(ex)!=V_UNDEF) and (ex.Visible==False))
                   ex = ActiveX("Excel.Application",NULL,false); 
                 else
                   ex = ActiveX("Excel.Application",NULL,true);
                   
                 end;
     else // Трехзвенка
               ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
               ex = ob.CreateComObject ("Excel.Application",true);
     end; 
               
GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,out);
Fulloutput = FindPath(outputx, out);                    


obBook = ex.Workbooks.open(fulloutput); 
obSheet = obBook.ActiveSheet(); 
//s = "select t_account, t_client from daccount_dbt where t_account LIKE '47423810_300000%'";
initprogress(-1,"Ждите, отбираются счета...","Отбираются счета из проводок");

var sq = " select count(*) as cnt "+
  " from daccount_dbt  "+
 " where (t_account IN (SELECT ARH1.t_account_receiver as acc  "+      // 01.10.2012  I-00261120-2 AAN
 "                      FROM dacctrn_dbt ARH1  "+  // 30.04.2014 DPN Адаптация под 31
 //"                     WHERE ARH1.t_account_receiver LIKE '47423810_30_000_____'  "+
 "                       WHERE ARH1.t_account_receiver LIKE '47423810_30_00______'  " + //30.04.2014 C-28764-6 - Шестизначная нумерация ВУЗ
 "                       AND ARH1.t_date_carry < TO_DATE ('"+reportdate+"', 'DD-MM-YYYY')  "+
 "                       AND ARH1.t_state = 0)  "+
 "   OR t_account IN (SELECT ARH2.t_account_payer as acc  "+
 "                      FROM dacctrn_dbt ARH2  "+  // 30.04.2014 DPN Адаптация под 31
// "                     WHERE ARH2.t_account_payer LIKE '47423810_30_000_____'  "+
 "                       WHERE ARH2.t_account_payer LIKE '47423810_30_00______'  " + //30.04.2014 C-28764-6 - Шестизначная нумерация ВУЗ
 "                       AND ARH2.t_date_carry < TO_DATE ('"+reportdate+"', 'DD-MM-YYYY')  "+
 "                       AND ARH2.t_state = 0 ))  ";           // 01.10.2012  I-00261120-2 AAN
 
useprogress(-1);
var datas=trsbdataset(sq);
datas.movenext();
maxs=datas.cnt;
s=0;

//sq = "select t_account, t_client, t_branch "+                // 01.10.2012  I-00261120-2 AAN
sq = "select t_account, t_client, daccount_dbt.t_branch "+
  "from daccount_dbt, dobjcode_dbt cod  "+
 "where cod.t_objectid=t_client and cod.t_codekind=1 and cod.t_objecttype=3 and cod.t_state=0 and (t_account IN (SELECT  ARH1.t_account_receiver as acc  "+
 "                      FROM dacctrn_dbt ARH1  "+ // 30.04.2014 DPN Адаптация под 31
 //"                     WHERE ARH1.t_account_receiver LIKE '47423810_30_000_____'  "+
 "                     WHERE ARH1.t_account_receiver LIKE '47423810_30_00______'  " + //30.04.2014 C-28764-6 - Шестизначная нумерация ВУЗ
 "                       AND ARH1.t_date_carry < TO_DATE ('"+reportdate+"', 'DD-MM-YYYY')  "+
 "                       AND ARH1.t_state = 0  "+
 "                       AND ARH1.t_chapter = 1    )  "+
 "   OR t_account IN (SELECT ARH2.t_account_payer as acc  "+
 "                      FROM dacctrn_dbt ARH2  "+ // 30.04.2014 DPN Адаптация под 31
 //"                     WHERE ARH2.t_account_payer LIKE '47423810_30_000_____'  "+
 "                       WHERE ARH2.t_account_payer LIKE '47423810_30_00______'  " + //30.04.2014 C-28764-6 - Шестизначная нумерация ВУЗ
 "                       AND ARH2.t_date_carry < TO_DATE ('"+reportdate+"', 'DD-MM-YYYY')  "+
 "                       AND ARH2.t_state = 0  "+
 "                       AND ARH2.t_chapter = 1    ))  "+        // 01.10.2012  I-00261120-2 AAN
// "ORDER BY substr(t_Account, 16, 5) "; //11.07.2012 vihrov не надо сортировать по хвосту. по коду можно, по клиенту и т.д. по хвосту нельзя
"						order by cod.t_code";
i=0;
datas=trsbdataset(sq);
remprogress(-1);
initprogress(maxs,"Ждите, производится расчет...","Производится расчет дебиторской задолженности");
obSheet.Cells(1,1).Value="Отчет по Дебиторской задолженности за РКО на заданную дату";
/*obSheet.Cells(3,1).Value="ОАО АКБ Пробизнесбанк";*/
obSheet.Cells(3,1).Value={Name_Bank};
obSheet.Cells(4,1).Value="По состоянию";
obSheet.Cells(4,3).Value=reportdate;
obSheet.Cells(6,1).Value="№ п/п ";
obSheet.Cells(6,2).Value="Наименование клиента";
obSheet.Cells(6,3).Value="RS-код (1) клиента";
obSheet.Cells(6,4).Value="Лицевой счет по маске 47423810K30?00NNNNNN"; //30.04.2014 C-28764-6 - Шестизначная нумерация ВУЗ
obSheet.Cells(6,5).Value="Подр.";
obSheet.Cells(6,6).Value="Сумма остатка на отчетную дату";
obSheet.Cells(6,7).Value="Дата образования остатка";
obSheet.Cells(6,8).Value="Наличие/отсутствие остатка на 452,454 балю счетах";
obSheet.Cells(6,9).Value="Группа риска по ссуде";

/* EVG Для дочерних банков должно указываться их название */

var fgBank = fg_life_subject( {OurBank} );
/*SDA - использовал общесистемную переменную   
if ( fgBank.is_VUZ )
   obSheet.Cells(3,1).Value = "ОАО \"ВУЗ-банк\"";
elif ( fgBank.is_EXV )
   obSheet.Cells(3,1).Value = "ЗАО АКБ\"ЭКСПРЕСС-ВОЛГА\"";
elif ( fgBank.is_GEB )
   obSheet.Cells(3,1).Value = "ОАО \"ГАЗЭНЕРГОБАНК\"";
end;
*/

 while (datas.movenext())    //acc
useprogress(s);
s=s+1;
datep="0.0.2001";
dater=0;
rest=0;
sp=0;
numb=0;
rest = abs(resta(datas.account, reportdate, null, 1));
datep = datepr(datas.account,rest,reportdate);

 if (rest != 0) 
   total = total + rest;
   i=i+1;
   obSheet.Cells(i+6,1).Value=i;
   obSheet.Cells(i+6,2).Value=name(datas.client);
   obSheet.Cells(i+6,3).Value=code1(datas.client);
   obSheet.Cells(i+6,4).Value=datas.account;
   obSheet.Cells(i+6,5).Value=namef(datas.branch);
   obSheet.Cells(i+6,6).Value=rest;
   obSheet.Cells(i+6,7).Value=datep;
   rst45 = rest45(datas.client, reportdate);
   obSheet.Cells(i+6,8).Value=rst45;
   if (rst45 == "Да")
     CallProcedure({MFO_Bank}, acc45);
     if (not text)
       obSheet.Cells(i+6,9).Value=result+" "+string(percent)+"%";
     else
       obSheet.Cells(i+6,9).Value=text;
     end;
   else
   obSheet.Cells(i+6,9).Value="";
  end;
 end;
end; //acc
obSheet.Cells(i+8,2).Value="ИТОГО ДОКУМЕНТОВ:";
obSheet.Cells(i+8,3).Value=i;
obSheet.Cells(i+8,4).Value="Общая сумма:";
obSheet.Cells(i+8,6).Value=total;
obSheet.Cells(i+10,2).Value="Ответственный исполнитель";
obSheet.Cells(i+10,5).Value=En2;
obSheet.Cells(i+12,2).Value="Начальник Управления Организации Расчетов:";
obSheet.Cells(i+12,5).Value=En4;
obSheet.Range("A6:I"+(i+6)).Borders.Weight=2;
remprogress(s);
Ex.visible = true;
end;


 /*Обработчик диалоговой панели ввода исходных данных для печати*/
MACRO Event (dlg, cmd, id, key) 

   var const_mess = " ~F3~ Выбор даты из календаря ~F2~ Продолжить ~ESC~ Выход ";

   /*Первоначальная инициализация полей*/
   if(cmd == DLG_INIT)
      dlg.rec.reportdate = {curDate};
      UpdateFields(dlg); 
   end;
   
   /*Установка подсказок в строке состояния*/
   if (cmd==DLG_SETFOCUS)
       message(const_mess);
   end;
   
   if (cmd == DLG_REMFOCUS)
     /*Проверка корректности дат отчета*/
      UpdateFields(dlg); 
   end;

   if (cmd == DLG_KEY)
     /*Выход из диалогового окна формирования отчета*/
     if (KEY == KEY_ESC)
       return exit(1);//CM_CANCEL;
     /*Выбор данных из списка*/
     elif ( KEY == KEY_F3)
        /*Выбор даты из календаря*/
        if (FldName(dlg,id) == "ReportDate")
          dlg.rec.ReportDate = GetDateByCalendar ({curDate}-1);
        end;
        
     elif (( KEY == KEY_F2 ) or (KEY == KEY_ENTER))         //Проверки при вводе
         if ( dlg.rec.ReportDate > {curdate} )
                MsgBox("Дата должна быть не больше даты текущего операционного дня");
                return CM_IGNORE;
         end;
        ReportDate  = dlg.rec.ReportDate;
        Return CM_SAVE;
     end;
      else
           Return CM_IGNORE;
   end;
        
END;
         debugbreak;
/*Точка входа в макрос*/
if (RunDialog(dlg, "Event"))                  
  OutAll;
end; 
end;
