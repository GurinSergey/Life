/*******************************************************************************/
/*  RS-Bank 6.0                                          R-Style Software Lab  */
/*                                                                             */
/*  File Name   : CommNoPay.mac                                                */
/*  Created     : 20.04.2012                                                   */
/*  Programmer  : Chesnokov D.                                                 */
/*  Description : Макрос отчета по неоплаченным комиссиям                      */
/*  Заявка      : Tr-117309                                                    */
/*******************************************************************************/

import BankInter, "globals.mac", RSD, "KeyCodes.mac", Календарь, "or_rep_h.mac";

var path, resname = "Pcom.lbr", pathfile;
record Department ("dp_dep.dbt");

  GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,path);
  pathfile = FindPath(resname, path);
  if (not pathfile)
    msgbox("Не найдена LBR");
    exit();
  end;

const p_Period = 1;
const p_Edin   = 3;
const p_Raz    = 6;

var dlg = TRecHandler("p_comiss", pathfile, True);
var FeeType, TypeComiss, CodDp, DateEnd, ComissNumber, Kolvo;
var SelParmArray = Tarray ();
var ParmArray = Tarray ();
var Flag = false;
var col = TArray;
var i = 0;
var select, where;
var Rep:CMakeReport; /* Объект вида CMakeReport */

var HeadTable =
"┌────────────────┬──────────────────────────────┬──────────────────────┬──────────┬────────────────┬────────────────┬──────────┬─────────┬─────┬────────────────┐\n" +
"│ Rs код клиента │     Наименование клиента     │         Счет         │   Дата   │ Сумма комиссии │Оплаченная сумма│№ комиссии│ Узел ТС │Опер.│   Примечание   │\n" +
"├────────────────┼──────────────────────────────┼──────────────────────┼──────────┼────────────────┼────────────────┼──────────┼─────────┼─────┼────────────────┤";


Macro PrintStrLine(select, SelParmArray)

private var rs, cmd, i = 0;
debugbreak;

  cmd = RSdCommand (select);

  while (i < SelParmArray.size)
    cmd.AddParam(SelParmArray(i).name, SelParmArray(i).dir, SelParmArray(i).val);
    i = i + 1;
  end;

  rs = RSDRecordset(cmd);
  
  while (rs.movenext)
  
  Rep.AddPrintCell(rs.value("rscode"), 16, 0, "c");
  Rep.AddPrintCell(rs.value("payername"), 30, 0, "c");
  Rep.AddPrintCell(rs.value("payeraccount"), 22, 0, "r");
  Rep.AddPrintCell(rs.value("datefee"), 10, 0, "c");
  Rep.AddPrintCell(rs.value("totalamount"), 16, 2, "r");
  Rep.AddPrintCell(rs.value("paidamount"), 16, 2, "r");
  Rep.AddPrintCell(rs.value("commname"), 10, 0, "c");
  Rep.AddPrintCell(rs.value("name_do"), 9, 0);
  Rep.AddPrintCell(rs.value("oper_acc"), 5, 0);
  Rep.AddPrintCell(rs.value("flag"), 16, 0, "c");
  Rep.AddStr();

  end;

end;

Macro WhereBranch(sql, Branch, Account)

  if (Account == "Все счета")
    if (Branch != 0)
      sql = sql + " AND sfd.t_sfcontrid IN " +
                  "    (SELECT sf.t_id " +
                  "       FROM dsfcontr_dbt sf " +
                  "      WHERE sf.t_object IN " +
                  "            (SELECT ac.t_account " +
                  "               FROM DACCOUNTS_VIEW ac " +
                  "              WHERE ac.t_oper IN " +
                  "                    (SELECT pers.t_oper " +
                  "                       FROM dperson_dbt pers " +
                  "                      WHERE pers.t_codedepart IN ("+ branch +")" +
                  "                     )" +
                  "            )" + 
                  "    )";
    end;
  else
    sql = sql + " AND contr.t_object = '" + Account + "'";
  end;
  
  return sql;
end;

Macro Count(sql, Kolvo)

  sql = " SELECT t.* FROM (SELECT mass.*, COUNT(1) OVER ( PARTITION BY mass.partyid, " +
        "                                                              mass.payeraccount, " +
        "                                                              mass.commname ) AS CNT " +
        "                    FROM (" + sql +") mass" +
        "                  ) t" +
        " WHERE   t.cnt >= " + Kolvo;
  
  return sql;

end;

Macro Order(sql)

  sql = sql + " ORDER BY   name_do, oper_acc, payeraccount, commname, totalamount";
  return sql;

end;

class TScrollingRecord (_type, _code, _name, _number)
      var type   = _type;
      var code   = _code;
      var name   = _name;
      var number = _number;
end;

class TParamRecord(_name, _dir, _val)
      var name   = _name;
      var dir    = _dir;
      var val    = _val;
end;

macro EvProcAcc (rs, cmd, id, key )

  if (cmd == DLG_KEY) 
    if ((key == KEY_ENTER) or (key == KEY_F2))
      return CM_SELECT;
    elif (key == KEY_ESC)
      msgbox("Вы отказались от выбора счета.");
      return CM_CANCEL;
    end;
  end;
  
end;

macro EvProcCommNumb (rs, cmd, id, key )
   var retVal;
   if (cmd == DLG_INIT)
      if (not AddMultiAction (rs, 316)) 
        msgbox ("!!!");
      end;
   end;
 
   if ((cmd == DLG_KEY) /*and (key == 13)*/)
       If(Flag)
        return CM_Cancel;
       else
        return CM_DEFAULT;
       end;
   end;       
 
   if ((cmd == DLG_MSEL) and (key == 316)) // F2
      ParmArray (ParmArray.Size) = TScrollingRecord (rs.value ("type"), 
                                                     rs.value ("t_code"), 
                                                     rs.value ("t_name"), 
                                                     rs.value ("t_number"));
      retVal= CM_MSEL_CONT_CLEAR;

   end;
     
   if (cmd == DLG_MSELEND)
      Flag = True;
      retVal = CM_CANCEL;
   end;
     

   return retVal;
end;

macro AddCol (ar,ind, fld, head, width, rdonly)
  ar.value (ind * 6)     = fld;
  ar.value (ind * 6 + 1) = head;
  ar.value (ind * 6 + 2) = width;
  ar.value (ind * 6 + 3 ) = 0;   // fldType
  ar.value (ind * 6 + 4 ) = -1;  // decPoint
  ar.value (ind * 6 + 5 ) = 0;   // reserv
end;


macro GetNameParty(PartyID)

var rs, cmd, sql;

    sql = "select pt.t_name from dparty_dbt pt where pt.t_partyid = ? ";

    cmd = RsdCommand(sql);
    cmd.AddParam("p_partyid", RSDBP_IN, PartyID);

    rs = RsdRecordSet(cmd);

    if (rs and rs.movenext)
      return rs.value(0);
    else
      return "Не найдено";
    end;

end;

macro GetInListString (m_array:Tarray)
    var i = 0;
    var retval = "";
    while (i < m_array.size ())
        retVal = retVal + m_array (i).number;
        if (i < (m_array.size () - 1))
            retval = retval + ", ";
        end;
        i = i + 1;
    end;
   
    return retVal;
end;

macro HandleEvent (dlg, cmd, id, key)

var rs, sql, MenuVidComm;
array VidComm;

var const_message = "~F2~ Выполнить ";  

  if (cmd == DLG_INIT)
    dlg.rec.CodDO = 0;
    dlg.rec.NameDO = "Все подразделения";
    dlg.rec.Account = "Все счета";
    dlg.rec.BeginDate = {curdate};
    dlg.rec.EndDate = {curdate};
    dlg.rec.Kolvo = 1;

    UpdateFields(dlg);

  elif (cmd == DLG_SETFOCUS)
    if (FldName(dlg, id) == "CodDO")
      message(const_message + "~F3~ Справочник территориальной структуры ~0~/~Space~ По всем ВСП ");
    elif (FldName(dlg, id) == "Account")
      message(const_message + "~F3~ Выбор счета");
    elif ((FldName(dlg, id) == "BeginDate") or (FldName(dlg, id) == "EndDate"))
      message(const_message + "~F3~ Календарь");
    elif (FldName(dlg, id) == "VidComm")
      message(const_message + "~F3~ Выбор типа комиссии");
    elif (FldName(dlg, id) == "CommNumb")
      message(const_message + "~F3~ Выбор комиссий для отчета");
    else
     message(const_message);
    end;

    UpdateFields(dlg);

  elif (cmd == DLG_REMFOCUS)
    if (FldName(dlg, id) == "CodDO")
      if ((dlg.rec.CodDO != "0") and (strlen(dlg.rec.CodDO ) != 0))
        rs = RsdRecordset("select dep.t_partyid, dep.t_code from ddp_dep_dbt dep where t_name = '" + dlg.rec.CodDO + "'");
        if ( not(rs and rs.MoveNext))
          msgbox("Введенный Вами узел ТС не существует.");
          dlg.rec.CodDO = 0;
          dlg.rec.NameDO = "Все подразделения";
          dlg.rec.Account = "Все счета";
          CodDp = 0;
        else
          dlg.rec.NameDO = GetNameParty(rs.value(0));
          CodDp = rs.value(1);
        end;
      else
        dlg.rec.CodDO = 0;
        dlg.rec.NameDO = "Все подразделения";
        dlg.rec.Account = "Все счета";
        CodDp = 0;
      end;
    elif (FldName(dlg, id) == "Account")
      if (strlen(dlg.rec.Account) < 20)
        dlg.rec.Account = "Все счета";
      end;
    elif (FldName(dlg, id) == "Kolvo")
      if (dlg.rec.Kolvo < 0)
        msgbox("Значение в поле количество не может быть отрицательным.");
        dlg.rec.Kolvo = 1;
      end;
    end;

    UpdateFields(dlg);

  elif (cmd == DLG_KEY)

    if (key == KEY_ESC)
      if (GetTrue(TRUE,"Вы действительно хотите выйти?"))
        exit(1);
        return  CM_CANCEL;
      else
        return  CM_IGNORE;    
      end;
    elif (key == KEY_F3)
      if (FldName(dlg, id) == "CodDO")
        if(ListDepartment(Department))
          dlg.rec.CodDO = department.name;
          dlg.rec.NameDO =  GetNameParty(department.PartyID);
          dlg.rec.Account = "Все счета";
          CodDp = department.Code;
          UpdateFields(dlg);
        else
          msgbox("Вы отказались от выбора узла ТС.");
          return  CM_IGNORE;
        end;

      elif(FldName(dlg, id) == "Account")
        //sql = " SELECT /*+Index(ac daccount_dbt_idx0) INDEX(ac DACCOUNT$_DBT_IDXC) USE_NL(ac contr)*/ "+
        //sql = " SELECT    SUBSTR (ac.t_account, 1, 5) "+
        //      "        || '.' "+
        //      "        || SUBSTR (ac.t_account, 6, 3) "+
        //      "        || '.' "+
        //      "        || SUBSTR (ac.t_account, 10, 1) "+
        //      "        || '.' "+
        //      "        || SUBSTR (ac.t_account, 11, 25) as acc_frmt, "+
        sql = " SELECT ac.t_account AS account, "+
              "        ac.t_balance AS balance, "+
              "        ac.t_kind_account AS AP, "+
              "        (SELECT dp.t_name "+
              "           FROM ddp_dep_dbt dp "+
              "          WHERE dp.t_code = ac.t_department) AS filial, "+
              "        (SELECT dp.t_name "+
              "           FROM ddp_dep_dbt dp "+
              "          WHERE dp.t_code = ac.t_branch) AS podrazdelen, "+
              "        ac.t_oper AS oper, "+
              "        ac.t_nameaccount AS name_acc, "+
              "        (SELECT pt.t_name "+
              "           FROM dparty_dbt pt "+
              "          WHERE t_partyid = ac.t_client) AS name_client "+
              "   FROM daccounts_view ac, dsfcontr_dbt contr "+
              "  WHERE ac.t_chapter = 1 "+
              "    AND INSTR (ac.t_type_account, 'П') = 0 "+
              "    AND ac.t_account = contr.t_object "+
              "    AND ac.t_code_currency = contr.t_fiid "+
              "    AND ac.t_balance BETWEEN '40701' AND '40821' ";
        if (CodDP != 0)
          sql = sql + " AND ac.t_branch = " + CodDP;
        end;

          sql = sql + " ORDER BY account ";
   
        cmd = RSDCommand(sql);
        rs = RSDRecordset( cmd, RSDVAL_CLIENT, RSDVAL_STATIC );
        
        AddCol (col, 0, "account",    "Лицевой",            25, true);
        AddCol (col, 1, "balance",     "Балансовый",          5, true);
        AddCol (col, 2, "AP",          "АП",                  3, true);
        AddCol (col, 3, "filial",      "Филиал",              4, true);
        AddCol (col, 4, "podrazdelen", "Подразделение",       4, true);
        AddCol (col, 5, "oper",        "Операционист",        5, true);
        AddCol (col, 6, "name_acc",    "Наименование счета", 40, true);
        AddCol (col, 7, "name_client", "Клиент",             40, true);

        if (RunScroll (rs, 8, col, "Account", "EvProcAcc", "Список лицевых счетов", ""))
          dlg.rec.Account = rs.value("account");
          UpdateFields(dlg);
        end;

      elif(FldName(dlg, id) == "BeginDate")
        dlg.rec.BeginDate = GetDateByCalendar({curdate});
        UpdateFields(dlg);
      elif(FldName(dlg, id) == "EndDate")
        dlg.rec.EndDate = GetDateByCalendar({curdate});
        UpdateFields(dlg);
      elif(FldName(dlg, id) == "VidComm")
        VidComm(0) = "Периодическая";
        VidComm(1) = "Единовременная";
        VidComm(2) = "Разовая";

        MenuVidComm = Menu(VidComm, "Выберите вид комиссии");
        if(MenuVidComm >= 0)
          FeeType = MenuVidComm;
          dlg.rec.VidComm = VidComm(MenuVidComm);
          dlg.rec.CommNumb = "";
          UpdateFields(dlg);
        else
          msgbox("Необходимо указать вид комиссии");
          return CM_IGNORE;
        end; 

      elif(FldName(dlg, id) == "CommNumb")
        sql = " SELECT case t_feetype " +
              "         WHEN 1 THEN 'Периодическая' " +
              "         WHEN 3 THEN 'Единовременная' " +
              "         WHEN 6 THEN 'Разовая' " +
              "        END as type, " +
              "        t_code, " +
              "        t_name, " +
              "        t_number " +
              "   FROM dsfcomiss_dbt " +
              "  WHERE t_feetype = ? AND t_servicekind = 3 and t_number >= 1000";
        //Отберем только пользовательские комиссии
        cmd = RSDCommand(sql);

        if((ValType(FeeType) != V_Undef) and (FeeType >= 0))
          if(FeeType == 0)
            cmd.AddParam("p_feetype", RSDBP_IN, 1);
          elif(FeeType == 1)
            cmd.AddParam("p_feetype", RSDBP_IN, 3);
          elif(FeeType == 2)
            cmd.AddParam("p_feetype", RSDBP_IN, 6);
          end;
          rs = RSDRecordset( cmd, RSDVAL_CLIENT, RSDVAL_STATIC );
        else
          msgbox("Выберите тип комисии.");
          return CM_IGNORE;
        end;

        AddCol (col, 0, "type",     "Тип взимания", 15, true);
        AddCol (col, 1, "t_code",   "Код",          10, true);
        AddCol (col, 2, "t_name",   "Наименование", 40, true);
        AddCol (col, 3, "t_number", "Номер",         5, true);

        RunScroll (rs, 4, col, "Comission", "EvProcCommNumb", "Выберите комисии", "Нажмите ~Shift~ и отметьте нужные Вам комиссии, потом нажмите ~F2~");
  
        if(ParmArray.Size() > 0) 
          dlg.rec.CommNumb = GetInListString(ParmArray);
          UpdateFields(dlg);
          /*Обнуляем переменные работающие в RunScrolle*/
          Flag = false;
          ParmArray.Size = 0;

        else
          msgbox("Вы отказались от выбора комиссий");
        end;
      end;

    elif (key == KEY_F9)
      return CM_IGNORE;
    elif (key == KEY_F2)
      if (strlen(dlg.rec.CommNumb) == 0)
        msgbox("Не выбраны комиссии");
        return CM_IGNORE;
      end;
      if (dlg.rec.Kolvo < 0) 
        msgbox("Значение в поле количество не может быть отрицательным.");
        dlg.rec.Kolvo = 1;
        return CM_IGNORE;
      end;

      DateEnd = dlg.rec.EndDate;
      ComissNumber = dlg.rec.CommNumb;
      Kolvo = dlg.rec.Kolvo;
      if (FeeType == 0)
        TypeComiss = p_Period;
      elif (FeeType == 1)
        TypeComiss = p_Edin;
      elif(FeeType == 2)
        TypeComiss = p_Raz;
      else
        TypeComiss = -1;
        msgbox("Неверный вид комиссии");
        return CM_IGNORE;
      end;
      return CM_SAVE;
    end;
  End;
end;

/*Документы которые стоят в К2*/
macro GetSelectK2 (Account, DateBegin, DateEnd, CodDp, ComissNumber, TypeComiss, Kolvo, SelParmArray)

  private var cmd, rs, sql;

  sql = " SELECT (SELECT code.t_code "+
        "            FROM dobjcode_dbt code "+
        "           WHERE code.t_objectid = contr.t_partyid "+
        "             AND code.t_codekind = 1 "+
        "             AND code.t_state = 0) AS rscode, "+
        "         prop.t_payername AS payername, "+
        "         pm.t_payeraccount AS payeraccount, "+
//        "         to_char(sfd.t_datefee, 'dd.mm.yyyy') AS datefee, "+
//        "         to_char(srv.t_executiondate, 'dd.mm.yyyy') AS fact_date, "+
        "         to_char(srv.t_executiondate, 'dd.mm.yyyy') AS datefee, "+
        "         contr.t_partyid AS partyid, "+
        "         pm.t_amount AS totalamount, "+
        "         CASE "+
        "           WHEN pm.t_amount = pm.t_futurepayeramount THEN 0 "+
        "           ELSE pm.t_amount - pm.t_futurepayeramount "+
        "         END AS paidamount, "+
        "         (SELECT comm.t_code "+
        "            FROM dsfcomiss_dbt comm "+
        "           WHERE comm.t_feetype = sfd.t_feetype "+
        "             AND comm.t_number = srv.t_commnumber) AS commname, "+
        "         (SELECT dp.t_name "+
        "            FROM ddp_dep_dbt dp "+
        "           WHERE dp.t_code = contr.t_branch) AS name_do, "+
        "         (SELECT acc.t_oper "+
        "            FROM DACCOUNTS_VIEW acc "+
        "           WHERE acc.t_account = pm.t_payeraccount "+
        "             AND INSTR (acc.t_type_account, 'П') = 0) AS oper_acc, "+
        "           'В картотеке 2' AS flag "+
        "    FROM dsfsrvdoc_dbt srv, "+
        "         doprdocs_dbt opr, "+
        "         dsfdef_dbt sfd, "+
        "         dpmpaym_dbt pm, "+
        "         dsfcontr_dbt contr, "+
        "         dpmrmprop_dbt prop "+
        "   WHERE sfd.t_datefee BETWEEN ? "+
        "                           AND ? "+
        "     AND srv.t_commnumber IN ("+ComissNumber+") " +
        "     AND opr.t_servdockind = 3001 "+
        "     AND opr.t_dockind = 3002 "+
        "     AND opr.t_servdocid = srv.t_id "+
        "     AND sfd.t_id = TO_NUMBER (opr.t_documentid) "+
        "     AND sfd.t_feetype = ? "+
        "     AND contr.t_id = sfd.t_sfcontrid "+
        "     AND contr.T_DATECLOSE = TO_DATE ('01.01.0001', 'dd.mm.yyyy') "+
        "     AND pm.t_defcomid = sfd.t_id "+
        "     AND pm.t_feetype = sfd.t_feetype "+
        "     AND pm.t_paymstatus = 2000 "+
        "     AND prop.t_paymentid = pm.t_paymentid ";

  sql = WhereBranch(sql, CodDP, Account);

  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, DateBegin);
  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, DateEnd);
  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, TypeComiss);

  Setparm(7, SelParmArray);

  return sql;
  
end;

/*Рассчитана, есть требование, есть платежный документ, но нет в картотеке и не закрыта*/
macro GetSelectNoProvod(Account, DateBegin, DateEnd, CodDp, ComissNumber, TypeComiss, Kolvo, SelParmArray)

  private var cmd, rs, sql;

  sql = " SELECT (SELECT code.t_code " +
        "            FROM dobjcode_dbt code " +
        "           WHERE code.t_objectid = contr.t_partyid " +
        "              AND code.t_codekind = 1 " +
        "              AND code.t_state = 0) AS rscode, " +
        "         prop.t_payername AS payername, " +
        "         pm.t_payeraccount AS payeraccount, " +
//        "         to_char(sfd.t_datefee, 'dd.mm.yyyy') AS datefee, "+
//        "         to_char(srv.t_executiondate, 'dd.mm.yyyy') AS fact_date, "+
        "         to_char(srv.t_executiondate, 'dd.mm.yyyy') AS datefee, "+
        "         contr.t_partyid AS partyid, " +
        "         pm.t_amount AS totalamount, " +
        "         CASE " +
        "           WHEN pm.t_amount = pm.t_futurepayeramount THEN 0 " +
        "           ELSE pm.t_amount - pm.t_futurepayeramount " +
        "         END AS paidamount, " +
        "         (SELECT comm.t_code " +
        "            FROM dsfcomiss_dbt comm " +
        "           WHERE comm.t_feetype = sfd.t_feetype " +
        "             AND comm.t_number = srv.t_commnumber) AS commname, " +
        "         (SELECT dp.t_name " +
        "            FROM ddp_dep_dbt dp " +
        "           WHERE dp.t_code = contr.t_branch) AS name_do, " +
        "         (SELECT acc.t_oper " +
        "            FROM DACCOUNTS_VIEW acc " +
        "           WHERE acc.t_account = pm.t_payeraccount " +
        "             AND INSTR (acc.t_type_account, 'П') = 0) AS oper_acc, " +
        "         CASE " +
        "           WHEN pm.t_partpaymnumber != 0 " +
        "           THEN " +
        "             'Не оплачена частичная оплата К2' " +
        "           WHEN pm.t_paymstatus = 1000 " +
        "           THEN " +
        "             'Открыт' " +
        "           WHEN pm.t_paymstatus = 0 " +
        "           THEN " +
        "             'Отложен' " +
        "           WHEN pm.t_paymstatus = 100 " +
        "           THEN " +
        "             'Отвергнут' " +
        "           WHEN pm.t_paymstatus = 2100 " +
        "           THEN " +
        "            'В картотеке ОР' " +
        "         END AS flag " +
        "    FROM dsfsrvdoc_dbt srv, " +
        "         doprdocs_dbt opr, " +
        "         dsfdef_dbt sfd, " +
        "         dpmpaym_dbt pm, " +
        "         dsfcontr_dbt contr, " +
        "         dpmrmprop_dbt prop " +
        "   WHERE sfd.t_datefee BETWEEN ? " +
        "                           AND ? " +
        "     AND srv.t_commnumber IN ("+ComissNumber+") " +
        "     AND opr.t_servdockind = 3001 " +
        "     AND opr.t_dockind = 3002 " +
        "     AND opr.t_servdocid = srv.t_id " +
        "     AND sfd.t_id = TO_NUMBER (opr.t_documentid) " +
        "     AND sfd.t_feetype = ? " +
        "     AND contr.t_id = sfd.t_sfcontrid " +
        "     AND contr.T_DATECLOSE = TO_DATE ('01.01.0001', 'dd.mm.yyyy') " +
        "     AND pm.t_defcomid = sfd.t_id " +
        "     AND pm.t_feetype = sfd.t_feetype " +
        "     AND pm.t_paymstatus NOT IN (2000, 32000) " +
        "     AND prop.t_paymentid = pm.t_paymentid ";

  sql = WhereBranch(sql, CodDP, Account);

  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, DateBegin);
  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, DateEnd);
  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, TypeComiss);

  Setparm(7, SelParmArray);

  return sql;
  
end;
/*Рассчитана нулевая сумма*/
macro GetSelectNoCalc(Account, DateBegin, DateEnd, CodDp, ComissNumber, TypeComiss, Kolvo, SelParmArray);

  private var cmd, rs, sql;

  sql = " SELECT (SELECT code.t_code" +
        "           FROM dobjcode_dbt code" +
        "          WHERE code.t_objectid = contr.t_partyid" +
        "            AND code.t_codekind = 1" +
        "            AND code.t_state = 0) AS rscode," +
        "        (SELECT party.t_name" +
        "           FROM dparty_dbt party" +
        "          WHERE party.t_partyid = contr.t_partyid) AS payername," +
        "        contr.t_object AS payeraccount," +
//      "         to_char(sfd.t_datefee, 'dd.mm.yyyy') AS datefee, "+
//      "         to_char(srv.t_executiondate, 'dd.mm.yyyy') AS fact_date, "+
        "        to_char(srv.t_executiondate, 'dd.mm.yyyy') AS datefee, "+
        "        contr.t_partyid AS partyid," +
        "        sfd.t_sum AS totalamount," +
        "        0 AS paidamount," +
        "        (SELECT comm.t_code" +
        "           FROM dsfcomiss_dbt comm" +
        "          WHERE comm.t_feetype = sfd.t_feetype" +
        "            AND comm.t_number = srv.t_commnumber) AS commname," +
        "        (SELECT dp.t_name" +
        "           FROM ddp_dep_dbt dp" +
        "          WHERE dp.t_code = contr.t_branch) AS name_do," +
        "        (SELECT acc.t_oper" +
        "           FROM DACCOUNTS_VIEW acc" +
        "          WHERE acc.t_account = contr.t_object" +
        "            AND INSTR (acc.t_type_account, 'П') = 0) AS oper_acc," +
        "        'Рассчитана нулевая сумма' AS flag" +
        "   FROM dsfdef_dbt sfd," +
        "        dsfcontr_dbt contr," +
        "        dsfsrvdoc_dbt srv," +
        "        doprdocs_dbt opr" +
        "  WHERE sfd.t_feetype = ?" +
        "    AND sfd.t_commnumber IN ("+ComissNumber+") " +
        "    AND sfd.t_sum = 0" +
        "    AND sfd.t_datefee BETWEEN ? " +
        "                          AND ? " +
        "    AND contr.t_id = sfd.t_sfcontrid" +
        "    AND contr.T_DATECLOSE = TO_DATE ('01.01.0001', 'dd.mm.yyyy')" +
        "    AND srv.t_commnumber = sfd.t_commnumber" +
        "    AND opr.t_servdockind = 3001" +
        "    AND opr.t_dockind = 3002" +
        "    AND opr.t_servdocid = srv.t_id" +
        "    AND sfd.t_id = TO_NUMBER (opr.t_documentid)";

  sql = WhereBranch(sql, CodDP, Account);

  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, TypeComiss);
  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, DateBegin);
  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, DateEnd);

  Setparm(7, SelParmArray);

  return sql;

end;

/*В картотеке 2 для единовременных и разовых комиссий*/
macro GetSelectK2ER(Account, DateBegin, DateEnd, CodDp, ComissNumber, TypeComiss, Kolvo, SelParmArray)

  private var cmd, rs, sql;

  sql = " SELECT (SELECT code.t_code" +
        "           FROM dobjcode_dbt code" +
        "          WHERE code.t_objectid = contr.t_partyid" +
        "            AND code.t_codekind = 1" +
        "           AND code.t_state = 0) AS rscode," +
        "       prop.t_payername AS payername," +
        "       pm.t_payeraccount AS payeraccount," +
//        "       sfd.t_datefee AS sfd_fee," +
//        "       pm.t_valuedate AS fact_date," +
        "       to_char(sfd.t_datefee, 'dd.mm.yyyy') AS datefee,"
        "       contr.t_partyid AS partyid," +
        "       pm.t_amount AS totalamount," +
        "       CASE" +
        "         WHEN pm.t_amount = pm.t_futurepayeramount THEN 0" +
        "         ELSE pm.t_amount - pm.t_futurepayeramount" +
        "       END AS paidamount," +
        "       (SELECT comm.t_code" +
        "          FROM dsfcomiss_dbt comm" +
        "         WHERE comm.t_feetype = sfd.t_feetype" +
        "           AND comm.t_number = sfd.t_commnumber) AS commname," +
        "       (SELECT dp.t_name" +
        "          FROM ddp_dep_dbt dp" +
        "         WHERE dp.t_code = contr.t_branch) AS name_do," +
        "       (SELECT acc.t_oper" +
        "          FROM DACCOUNTS_VIEW acc" +
        "         WHERE acc.t_account = pm.t_payeraccount" +
        "           AND INSTR (acc.t_type_account, 'П') = 0) AS oper_acc," +
        "       'В картотеке 2' AS flag" +
        "  FROM dsfdef_dbt sfd," +
        "       dpmpaym_dbt pm," +
        "       dsfcontr_dbt contr," +
        "       dpmrmprop_dbt prop" +
        " WHERE sfd.t_feetype = ? " +
        "   AND sfd.t_commnumber IN ("+ComissNumber+") " +
        "   AND sfd.t_datefee BETWEEN ?" +
        "                         AND ?" +
        "   AND pm.t_feetype = sfd.t_feetype" +
        "   AND pm.t_defcomid = sfd.t_id" +
        "   AND pm.t_paymstatus IN (2000)" +
        "   AND prop.t_paymentid = pm.t_paymentid" +
        "   AND contr.t_id = sfd.t_sfcontrid" +
        "   AND contr.T_DATECLOSE = TO_DATE ('01.01.0001', 'dd.mm.yyyy')";

  sql = WhereBranch(sql, CodDP, Account);

  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, TypeComiss);
  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, DateBegin);
  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, DateEnd);

  Setparm(7, SelParmArray);

  return sql;

end;

/*Есть неоплаченные документы, для единовременных и разовых комисий*/
macro GetSelectNoProvodER(Account, DateBegin, DateEnd, CodDp, ComissNumber, TypeComiss, Kolvo, SelParmArray)

  private var cmd, rs, sql;

  sql = " SELECT (SELECT code.t_code" +
        "           FROM dobjcode_dbt code" +
        "         WHERE code.t_objectid = contr.t_partyid" +
        "           AND code.t_codekind = 1" +
        "           AND code.t_state = 0) AS rscode," +
        "       prop.t_payername AS payername," +
        "       pm.t_payeraccount AS payeraccount," +
//        "       sfd.t_datefee AS sfd_fee," +
//        "       pm.t_valuedate AS fact_date," +
        "       to_char(sfd.t_datefee, 'dd.mm.yyyy') AS datefee,"
        "       contr.t_partyid AS partyid," +
        "       pm.t_amount AS totalamount," +
        "       CASE" +
        "         WHEN pm.t_amount = pm.t_futurepayeramount THEN 0" +
        "          ELSE pm.t_amount - pm.t_futurepayeramount" +
        "       END AS paidamount," +
        "       (SELECT comm.t_code" +
        "          FROM dsfcomiss_dbt comm" +
        "         WHERE comm.t_feetype = sfd.t_feetype" +
        "           AND comm.t_number = sfd.t_commnumber) AS commname," +
        "       (SELECT dp.t_name" +
        "          FROM ddp_dep_dbt dp" +
        "         WHERE dp.t_code = contr.t_branch) AS name_do," +
        "       (SELECT acc.t_oper" +
        "          FROM DACCOUNTS_VIEW acc" +
        "         WHERE acc.t_account = pm.t_payeraccount" +
        "           AND INSTR (acc.t_type_account, 'П') = 0) AS oper_acc," +
        "       CASE " +
        "         WHEN pm.t_partpaymnumber != 0 " +
        "         THEN " +
        "           'Не оплачена частичная оплата К2' " +
        "         WHEN pm.t_paymstatus = 1000 " +
        "         THEN " +
        "           'Открыт' " +
        "         WHEN pm.t_paymstatus = 0 " +
        "         THEN " +
        "           'Отложен' " +
        "         WHEN pm.t_paymstatus = 100 " +
        "         THEN " +
        "           'Отвергнут' " +
        "         WHEN pm.t_paymstatus = 2100 " +
        "         THEN " +
        "          'В картотеке ОР' " +
        "       END AS flag " +
        "  FROM dsfdef_dbt sfd," +
        "       dpmpaym_dbt pm," +
        "       dsfcontr_dbt contr," +
        "       dpmrmprop_dbt prop" +
        " WHERE sfd.t_feetype = ? " +
        "   AND sfd.t_commnumber IN ("+ComissNumber+") " +
        "   AND sfd.t_datefee BETWEEN ?" +
        "                         AND ?" +
        "   AND pm.t_feetype = sfd.t_feetype" +
        "   AND pm.t_defcomid = sfd.t_id" +
        "   AND pm.t_paymstatus NOT IN (2000, 32000)" +
        "   AND prop.t_paymentid = pm.t_paymentid" +
        "   AND contr.t_id = sfd.t_sfcontrid" +
        "   AND contr.T_DATECLOSE = TO_DATE ('01.01.0001', 'dd.mm.yyyy')";
        
  sql = WhereBranch(sql, CodDP, Account);

  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, TypeComiss);
  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, DateBegin);
  SelParmArray(SelParmArray.Size) = TParamRecord("p_" + SelParmArray.Size, RSDBP_IN, DateEnd);

  Setparm(7, SelParmArray);

  return sql;

end;

  /*Точка входа*/
if (RunDialog(dlg,"HandleEvent"))
debugbreak;
  if (TypeComiss == 1)//Периодические
  
    select = GetSelectK2(dlg.rec.Account, dlg.rec.BeginDate, dlg.rec.EndDate, CodDp, ComissNumber, TypeComiss, Kolvo, SelParmArray);
    select = select + " UNION " + GetSelectNoProvod(dlg.rec.Account, dlg.rec.BeginDate, dlg.rec.EndDate, CodDp, ComissNumber, TypeComiss, Kolvo, SelParmArray);
    select = select + " UNION " + GetSelectNoCalc(dlg.rec.Account, dlg.rec.BeginDate, dlg.rec.EndDate, CodDp, ComissNumber, TypeComiss, Kolvo, SelParmArray);
    
  elif ((TypeComiss == 3) or (TypeComiss == 6))//Единовременные и Разовые
  
    select = GetSelectK2ER(dlg.rec.Account, dlg.rec.BeginDate, dlg.rec.EndDate, CodDp, ComissNumber, TypeComiss, Kolvo, SelParmArray);
    select = select + " UNION " + GetSelectNoProvodER(dlg.rec.Account, dlg.rec.BeginDate, dlg.rec.EndDate, CodDp, ComissNumber, TypeComiss, Kolvo, SelParmArray);
    
  end;
  
  if (Kolvo > 1)
    select = Count(select, Kolvo);
  end;
  
  select = Order(select);
  
  Rep = CMakeReport( HeadTable );
  Rep.AddPrintCell("О Т Ч Е Т   П О   Н Е О П Л А Ч Е Н Н Ы М   К О М И С С И Я М", Rep.GetHeaderWidth(), 0, "c:ex_FS(b):ex_FN(Times New Roman):EX_FZ(16)", REP_ELEM_STR);
  Rep.AddStr();
  Rep.AddPrintCell("период формирования с " + dlg.rec.BeginDate + " по " + DateEnd, Rep.GetHeaderWidth(), 0, "c:ex_FS(b):ex_FN(Times New Roman):EX_FZ(16)", REP_ELEM_STR);
  Rep.AddStr();
  
  if (Kolvo > 1)
    Rep.AddPrintCell("c количеством больше либо равно, чем " + Kolvo + " раз(а)", Rep.GetHeaderWidth(), 0, "c:ex_FS(b):ex_FN(Times New Roman):EX_FZ(16)", REP_ELEM_STR);
    Rep.AddStr();
  end;
  
  Rep.AddEmptyStr;
  Rep.AddStr();
  
  if (select)
    PrintStrLine(select, SelParmArray);
  end;

  Rep.PrintRep();
  Rep.PrintWinRep();
  Rep.ShowWinRep();
  
end;