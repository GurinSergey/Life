/************************************************************************************************************************
  Название макроса: nalog_control_report.mac
  Описание        : "Отчет по контролю за уплатой налогов клиентов" - Платежи клиентов на б\с 401 и их % относительно общего количества платежей клиента 
  Номер заявки    : C-32995  от 05.09.2014
  Автор           : DPN
  Изменения       : 18.11.2014 DPN Добавил хинт для быстродействия, изменил отображение индикаторов выполнения
                  : Gurin S. 07.04.2015 R-567384-2
************************************************************************************************************************/


import rcw, rsexts, RSD;
import globals, oralib;
import "fg_Life_parm.mac";
import BankInter;
import  likePy;
import Календарь;
import RsbFormsInter;
import "FNS_lib.mac";

const TEXTDIR_REESTR = "BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR";

var name = "nalog";
var bName = "txtRep";
var lname = "", ob, ex, obSheet, as, sel_range, cnt = 1, argument, totalNalog = 0, totalOborot = 0, totalPercent = 0;

macro SetTypeColumns(aw:tarray);
    var w1=tarray(true);
    var w2=tarray(true);
    var w3=tarray(true);  
    var w4=tarray(true);
    var w5=tarray(true);
    var w6=tarray(true);
    var w7=tarray(true);

    w1(0)=1; w1(1)=2; 
    w2(0)=2; w2(1)=2; 
    w3(0)=3; w3(1)=2; 
    w4(0)=4; w4(1)=1;   
    w5(0)=5; w5(1)=1; 
    w6(0)=6; w6(1)=1; 
    w6(0)=7; w7(1)=1;

    aw(0)=w1;
    aw(1)=w2;
    aw(2)=w3;
    aw(3)=w4;
    aw(4)=w5;
    aw(5)=w6;
    aw(6)=w7;
end;

macro transToExcel(tempFileName)
    private var m_errCode :integer = NULL;
    var aw = tarray(true);
    var obBook, forExcel;
   
    SetTypeColumns(aw); 
    ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
    ex = ob.CreateComObject ("Excel.Application",true);
    ex.visible = false;
    forExcel =name+{oper}+"_"+date+"_"+time;  
    
    forExcel = StrSubst ( forExcel, ".", "_" );
    forExcel = StrSubst ( forExcel, ":", "_" );
    forExcel = StrSubst ( forExcel, " ", "_" );
    forExcel = "$" + ex.defaultFilePath + "\\" + forExcel;
    if (not CopyFile(tempFileName, forExcel,true))
        println ("Error Copy file");
    end;

    forExcel = substr(forExcel, 2);
    obBook = ex.Workbooks.opentext(forExcel, 866, 1, 1,2,true,false,false,false,false,true,"┼",aw,1,"."," ",true,false);
    
end;

class infoObject()
    var bDate = {curdate};
    var eDate = {curdate};
end;

macro chekReestrRead(m_name:string, m_status:integer, m_err:integer)
    if((m_status == V_UNDEF) or (m_err != 0))
       msgbox("Ошибка получения значения настройки реестра " + m_name + " \n Процедура GetRegistryValue вернула код ошибки "+m_err);
       exit(0);
    end;
end;
macro regOption(m_reestrName:string):string
    private var m_errCode :integer = NULL;
    private var m_statusGetRegistry :integer = NULL;
    private var m_zna4enie          :string  = NULL;
    if (m_reestrName == "")
        msgbox("Не задана строка реестра!");
        exit(0)
    end;
    m_statusGetRegistry = GetRegistryValue(m_reestrName, V_STRING, m_zna4enie, m_errCode);
    chekReestrRead(m_reestrName, m_statusGetRegistry, m_errCode);
    return(m_zna4enie);
end;

macro title(object)
    as = ex.worksheets(1);
    
    as.range("B2") = ("Отчет по контролю за уплатой налогов клиентов за период с " + object.bDate + " по "+ object.eDate );

    sel_range = as.range("B2:G3");
    sel_range.WrapText = true;
    sel_range.MergeCells = true;
        
    as.range("B2:H4").Font.Bold= true;
   
    as.range("B4")="Код клиента";
    sel_range = as.range("B4:B5");
    sel_range.MergeCells = true;
    
    as.range("C4") = "Подразделение ТС";
    sel_range = as.range("C4:C5");
    sel_range.MergeCells = true;
    
    as.range("B4:G5").WrapText = true;
    as.range("D4") = "Наименование клиента";
    sel_range = as.range("D4:D5");
    sel_range.MergeCells = true;
    
    as.range("E4") =  "Налоги";
    sel_range = as.range("E4:E5");
    sel_range.MergeCells = true;
    
    as.range("F4") = "Обороты Дт";
    sel_range = as.range("F4:F5");
    sel_range.MergeCells = true;
    
    as.range("G4") = "% к деб. обороту";
    sel_range = as.range("G4:G5");
    sel_range.MergeCells = true;
    
    as.range("H4") = "Дивизион";
    sel_range = as.range("H4:H5");
    sel_range.MergeCells = true;
    
    as.range("B4:H4").Interior.ColorIndex=15;
end;

macro createUniqueFile(BeginName, lastName)
    private var ff:string = BeginName +{oper}+"_"+date+"_"+time;
    private var file_ext:string = ".txt";
    private var tempFileName = regOption(TEXTDIR_REESTR);
    tempFileName = tempFileName + "\\" + ff;
    var tempFileNameBezPuti = ff;
    tempFileName = StrSubst ( tempFileName, ".", "_" );
    tempFileName = StrSubst ( tempFileName, ":", "_" );
    tempFileName = StrSubst ( tempFileName, " ", "_" );
    tempFileName = tempFileName + file_ext;
    tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, ".", "_" );
    tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, ":", "_" );
    tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, " ", "_" );
    tempFileNameBezPuti = tempFileNameBezPuti + file_ext;
    if (substr(tempFileName,1,2) == "__")
        tempFileName=".."+substr(tempFileName,3)
    end;
    lastName = tempFileNameBezPuti;
    setParm(1, lastName);
    SetOutPut(tempFileName, false);
end;

private macro GetAccBranch(id)
   var sql = execSqlSelect ("select t_name from ddp_dep_dbt where t_code = " + id);
   if (sql.movenext()) return string(sql.value("t_name"));
   else                return "000";
   end;
end;

macro maker(object: infoObject)
    var select, query, param;
    
    
    select = " select oborot.client , oborot.ts, oborot.NAME , nvl(nalog.nalog, 0) , " + 
             "  oborot.oborot_Dt \"Обороты Дт\", nvl(round((nalog.nalog/oborot.oborot_Dt)*100,2), 0) perc, nvl(oborot.div, '-') div, oborot.accbr " +
             " from " +
             "  (SELECT distinct ob.* , regexp_replace(listagg(DECODE (cl.t_servicekind, 1001, 'ДКБ', 1002,'ДМСБ'), ', ') " +
             "          WITHIN GROUP (ORDER BY cl.t_partyid) OVER (PARTITION BY cl.t_partyid),'(.{2})(.{2}){2,}\\1', '\\1') div " +
             "  from (SELECT  /*+ PARALLEL(8)*/ cod.t_code client, ddp.t_name ts,  PRT.T_NAME name, PRT.T_PARTYID, sum(TRN.T_SUM_NATCUR) oborot_Dt, DAC.T_BRANCH accbr " + //18.11.2014 DPN Добавил хинт для быстродействия
             "         FROM dpmpaym_dbt paym, daccount_dbt dac, dobjcode_dbt cod, dparty_dbt prt, ddp_dep_dbt ddp, dacctrn_dbt trn, dpmdocs_dbt doc " +
             "         WHERE     paym.t_payeraccount = dac.t_account AND dac.t_client = cod.t_objectid AND cod.t_objectid = prt.t_partyid " +
             "         AND prt.t_partyid = paym.t_payer  AND prt.t_branch = ddp.t_code AND trn.t_acctrnid = doc.t_acctrnid " +
             "         AND doc.t_paymentid = paym.t_paymentid AND trn.t_date_carry BETWEEN to_date('"+ object.bDate +"', 'dd.mm.yyyy') " +
             "         AND to_date('" + object.eDate + "', 'dd.mm.yyyy') AND trn.t_account_payer = paym.t_payeraccount " +
             "         AND cod.t_objecttype = 3 AND paym.t_valuedate BETWEEN to_date('"+ object.bDate +"', 'dd.mm.yyyy') AND to_date('" + object.eDate + "', 'dd.mm.yyyy') " +
             "         AND REGEXP_LIKE (dac.t_account, '^40[5-7]|^4080[2-7]|^40821') " +
             "         AND dac.t_open_date <= to_date('" + object.eDate + "', 'dd.mm.yyyy') AND (dac.t_close_date >= to_date('"+ object.bDate +"', 'dd.mm.yyyy') OR dac.t_close_date = TO_DATE ('01.01.0001', 'dd.mm.yyyy')) " +
             "         AND dac.t_code_currency = 0 AND cod.t_codekind = 1 AND cod.t_state = 0 AND dac.t_chapter = 1 and DAC.T_KIND_ACCOUNT = 'П' AND paym.t_paymstatus = '32000'" +
             "         GROUP BY ddp.t_name, cod.t_code, prt.t_name, PRT.T_PARTYID, DAC.T_BRANCH) ob " +
             " left join dclient_dbt cl " +
             " on ob.t_partyid = cl.t_partyid AND cl.t_servicekind IN (1001, 1002) AND CL.T_STARTDATE <= to_date('"+ object.eDate +"', 'dd.mm.yyyy') " +
             " AND (CL.T_FINISHDATE >= to_date('"+ object.bDate +"', 'dd.mm.yyyy') " +
             " OR cl.t_finishdate = TO_DATE ('01.01.0001', 'dd.mm.yyyy'))) oborot " +
             " left join " +
             "  (SELECT cod.t_code client, ddp.t_name ts, PRT.T_NAME name, sum(TRN.T_SUM_NATCUR) nalog, DAC.T_BRANCH accbr " +
             "   FROM dpmpaym_dbt paym, daccount_dbt dac, dobjcode_dbt cod, dparty_dbt prt, ddp_dep_dbt ddp,  dacctrn_dbt trn, dpmdocs_dbt doc " +
             "   WHERE     paym.t_payeraccount = dac.t_account AND dac.t_client = cod.t_objectid AND cod.t_objectid = prt.t_partyid " +
             "     AND prt.t_partyid = paym.t_payer AND prt.t_branch = ddp.t_code  " +
             "     AND trn.t_acctrnid = doc.t_acctrnid AND doc.t_paymentid = paym.t_paymentid AND trn.t_date_carry BETWEEN to_date('"+ object.bDate +"', 'dd.mm.yyyy') " +
             "     AND to_date('" + object.eDate + "', 'dd.mm.yyyy') " +
             "     AND trn.t_account_payer = paym.t_payeraccount AND SUBSTR (paym.t_receiveraccount, 1, 3) = '401' " +
             "     AND cod.t_objecttype = 3 AND paym.t_valuedate BETWEEN to_date('"+ object.bDate +"', 'dd.mm.yyyy') AND to_date('" + object.eDate + "', 'dd.mm.yyyy') " +
             "     AND REGEXP_LIKE (dac.t_account, '^40[5-7]|^4080[2-7]|^40821') " +
             "     AND dac.t_open_date <= to_date('" + object.eDate + "', 'dd.mm.yyyy') AND (dac.t_close_date >= to_date('"+ object.bDate +"', 'dd.mm.yyyy') OR dac.t_close_date = TO_DATE ('01.01.0001', 'dd.mm.yyyy')) " +
             "     AND dac.t_code_currency = 0 AND cod.t_codekind = 1 AND cod.t_state = 0 AND dac.t_chapter = 1 and DAC.T_KIND_ACCOUNT = 'П' " +
             "     AND paym.t_paymstatus = '32000' " +
             "   GROUP BY ddp.t_name, cod.t_code, prt.t_name, DAC.T_BRANCH) nalog " +
             " on oborot.client = nalog.client ORDER BY oborot.client";
    
    println();
    println();
    println();
    println();
    println();

    query = TRsbdataset(select);
    while (query.movenext)
    var code, ts, name_cl, nalog, oborot, percent, div;
        code = string(query.value(0));
        //Gurin S. 07.04.2015 R-567384-2 Тянем подразделение счета. Не стал делать в запросе, так как уменьшится скорость выполнения запроса
        //ts = string(query.value(1));
        ts = string(GetAccBranch(int(query.value(7))));
        name_cl = string(query.value(2));
        nalog = round(query.value(3),2);
        oborot = round(query.value(4),2);
        percent = round(query.value("perc"),2);
        div = string(query.value("div"));
        
        println("┼"+ code + "┼" + ts + "┼" + name_cl +"┼"+ nalog +"┼"+ oborot +"┼"+ percent +"┼"+ div);
        cnt = cnt + 1;
        totalNalog = totalNalog + nalog;
        totalOborot = totalOborot + oborot;
    end; 
    cnt = cnt  + 3;
    if (totalOborot != 0)
        totalPercent = (totalNalog/totalOborot)*100;
    end;
     println(" ┼ ┼ ┼ " + " ИТОГО: ┼ " + totalNalog + " ┼" + totalOborot + " ┼" + totalPercent);
end;

macro FormatExcel(fileName:String);

    as.Cells.Font.Size = 10;
    as.PageSetup.Orientation = 2;
    as.Columns("B:B").ColumnWidth = 12;
    as.Columns("C:C").ColumnWidth = 12;
    as.Columns("D:D").ColumnWidth = 50;
    as.Columns("E:E").ColumnWidth = 12;
    as.Columns("F:F").ColumnWidth = 12;
    as.Columns("G:G").ColumnWidth = 12;
    as.Columns("H:H").ColumnWidth = 12;
    
    as.Columns("C:C").HorizontalAlignment = 3;
    as.range("B4:G5").HorizontalAlignment = 3;
    as.Columns("B:B").HorizontalAlignment = 3;
    
    as.Columns("E:G").NumberFormat = "###0,00";

    sel_range = as.Range("B4:H"+(cnt+1)); 
    sel_range.Borders.Weight = 2;
    
    as.Range("D"+(cnt+2)+ ":D"+(cnt+2)).HorizontalAlignment = 4;
    sel_range = as.Range("D"+(cnt+2)+ ":G"+(cnt+2)); 
    sel_range.Font.Bold = true;
    sel_range.Borders.Weight = 3;
    
    ex.visible = true;
end;

macro startReport(object:infoObject)
    InitProgress(-1,"","Идёт обработка...");
      createUniqueFile(bName, lName);
      
      maker(object);
      SetOutPut(null,false);
      transToExcel(lName);
    RemProgress();
    
    InitProgress(-1,"","Форматирование файла Excel...");
      title(object);
      FormatExcel(lName);
    RemProgress();
end;

class(TRsbPanel) MainPanel()
    InitTRsbPanel();
    setCaption("Отчет по контролю за уплатой налогов");
    setStatus("Esc - Выход, F2 - Выполнить, F3 - Вызов календаря");
   
    private const FT_DATE = 9;
    private const FT_STRING = 7;
    var dateCarry = {curdate};
    var startVal = "";
    var info: infoObject;
    
    var labelDate: TRsbLabel = TRsbLabel(3, 2, "Дата");   
    var labelDateBegin: TRsbLabel = TRsbLabel(6, 2, "С:");
    var labelDateEnd: TRsbLabel = TRsbLabel(17, 2, "По:");

    var fieldDateBegin: TRsbEditField = TRsbEditField(FT_DATE);
    var fieldDateEnd: TRsbEditField = TRsbEditField(FT_DATE);

    setSize(30,4);
    setPosition(47,18);

    fieldDateBegin.bindValue(this, "dateCarry", 8);
    fieldDateBegin.setPosition(8,2);   
    fieldDateBegin.setSize(8,1);
    fieldDateBegin.onKeyPressed(R2M(this, "callCalendarBegin")); 

    fieldDateEnd.bindValue(this, "dateCarry", 8);
    fieldDateEnd.setPosition(20,2);   
    fieldDateEnd.setSize(8,1);
    fieldDateEnd.onKeyPressed(R2M(this, "callCalendarEnd")); 

    addLabel(labelDate);
    addLabel(labelDateBegin);
    addLabel(labelDateEnd);

    addControl(fieldDateBegin);
    addControl(fieldDateEnd);
   
    macro callCalendarBegin(key:TRsbKeyPressedEvent)
        if(key.keyCode == KEY_F3)
            var d:Date = Date(GetDateByCalendar({curdate}));
            if (d > fieldDateEnd.value)
                fieldDateBegin.value = fieldDateEnd.value;
            else
                fieldDateBegin.value = d; 
            end;
            info.bDate = fieldDateBegin.value;            
        end;        
        if(key.KeyCode == KEY_F2)
            info.bDate = fieldDateBegin.value; 
            info.eDate = fieldDateEnd.value;    
            startReport(info);
            close(0);
            exit(0);
        end;
    end;
   
    macro callCalendarEnd(key:TRsbKeyPressedEvent)
        if(key.keyCode == KEY_F3)
            var d:Date = Date(GetDateByCalendar({curdate}));
            if (d < fieldDateBegin.value)
                fieldDateEnd.value = fieldDateBegin.value;
            else
                fieldDateEnd.value = d; 
            end;           
            info.eDate = fieldDateEnd.value; 
        end;        
        if(key.KeyCode == KEY_F2)
            info.bDate = fieldDateBegin.value; 
            info.eDate = fieldDateEnd.value;   
            startReport(info);
            close(0);
            exit(0);
        end;
    end;
end;

   var panel:TRsbPanel = MainPanel;
    panel.run;    

    exit(0);
