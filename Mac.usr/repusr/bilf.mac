/*Протокол контроля записей книги продаж                     */
/*                                                           */
/*                                                           */
/*Тихомиров А.Н. 01.07.2009              Версия 1.0          */

import RSD, rcw, rslx, Календарь, rsbdataset, bankinter, globals, lib_pm_check;
var sql, ex, ob, obbook, obsheet, dataset, inter, flag, branch, datebegin,dateend,  total:integer, dprt_v, NodeType_v;

private const  KEY_F1      =315;
private const  KEY_F2      =316;
private const  KEY_F3      =317;
private const KEY_ESC      = 27;
private const KEY_SPACE    = 32;
private const KEY_ENTER    = 13;

Time();
record Department ("dp_dep.dbt");
var Fulloutputl, outl, outputl="blif.lbr";                    
var fulloutputt = GetTxtFileName("blif");
var out, output = "bilf.xls", fulloutput;                            

GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
Fulloutputl = FindPath(outputl, outl);
var dlg = TRecHandler("blif", fulloutputl, TRUE); 
private var BilfProtocol = getTxtFileName ( "ControlProtocol" );


/*Найдем имя по Partyid*/
private macro GetClientName(id)

var  sl=" select part.t_name from dparty_dbt part, ddp_dep_dbt dep where dep.t_code="+id+" and dep.t_partyid=part.t_partyid";

var  DataS=TRsbDataSet(sl);

  if( DataS.moveNext())
    return DataS.name;
  else
    if (id !=0)
       msgbox("Субъект не найден в party.dbt");
       return 0;
    else
      return "ОАО АКБ Пробизнесбанк";
    end;
  end;
END;

private macro outall(inter)
var in;
if (flag)
    if (IsStandAlone()) // Двухзвенка
                 if ((ValType(ex)!=V_UNDEF) and (ex.Visible==False))
                   ex = ActiveX("Excel.Application",NULL,false); 
                 else
                   ex = ActiveX("Excel.Application",NULL,true);
                   
                 end;
  
      else // Трехзвенка
               ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
               ex = ob.CreateComObject ("Excel.Application",true);

     end; 
GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,out);
Fulloutput = FindPath(output, out);                    
               
obBook = ex.Workbooks.open(fulloutput); 
obSheet = obBook.ActiveSheet(); 
obSheet.Range("A"+3).Value=string("Протокол ошибок выявленных при формировании книги продаж за период с  ",datebegin," по ",dateend);
obSheet.Range("A"+5).Value="Наименование структурного подразделения";
obSheet.Range("B"+5).Value="№ операции";
obSheet.Range("C"+5).Value="№ и дата документа";
obSheet.Range("D"+5).Value="Счет дебета";
obSheet.Range("E"+5).Value="Счет кредита";
obSheet.Range("F"+5).Value="Сумма НДС";
obSheet.Range("G"+5).Value="Причина отражения в протоколе";
end;

setOutput(BilfProtocol, false );

[                                                      Протокол ошибок
                                        выявленных при формировании книги продаж
                                   за период с  ################ по  ####################
┌───────────────┬─────────────┬────────────┬─────────────────────┬───────────────────────┬──────────────────┬───────────────────────────────┐
│  Наименование │      №      │ № и дата   │Счет дебета          │Счет кредита           │ Сумма НДС        │  Причина отображения          │
│  струкутрного │операциониста│ документа  │                     │                       │                  │   в протоколе                 │
│  подразделения│             │            │                     │                       │                  │                               │]
(date(datebegin), date(dateend));
total=0;
debugbreak;

  if (not ((((branch == 0) or (branch == 1)) and (NodeType_v = 1)) or ((branch == 1) and (NodeType_v = 2)) ))
    SQL = " SELECT   t_name, paym.t_oper, prop.t_number, paym.t_payeraccount, paym.t_receiveraccount, paym.t_amount ";
  else
    SQL = " SELECT  (select t_name from ddp_dep_dbt where t_code = (select t_codedepart from dperson_dbt where t_oper = paym.t_oper)) as t_name, paym.t_oper, prop.t_number, paym.t_payeraccount, paym.t_receiveraccount, paym.t_amount " ;
  end;
  
  SQL = SQL + "   FROM   dpmpaym_dbt paym," +
              "          dpmrmprop_dbt prop," +
              "          dpmdocs_dbt doc," +
              "          dacctrn_dbt trn";
        
//  if (not (((branch == 0) or (branch == 1)) and (NodeType_v = 1)))
  if (not ((((branch == 0) or (branch == 1)) and (NodeType_v = 1)) or ((branch == 1) and (NodeType_v = 2)) ))
    SQL = SQL + "       ,(SELECT   t_oper AS oper, dep.t_name " +
                "           FROM   dperson_dbt, (SELECT  t_code, t_name" +
                "                                  FROM  ddp_dep_dbt" +
                "                                 WHERE  t_code = ? OR t_parentcode = ? ) dep" +
                "          WHERE   t_codedepart = dep.t_code )" +
                "        opers";
  end;
  
  SQL = SQL + "     WHERE    paym.t_valuedate between ? and ?" +
              "          AND paym.t_paymentid = doc.t_paymentid";
              
  if (not ((((branch == 0) or (branch == 1)) and (NodeType_v = 1)) or ((branch == 1) and (NodeType_v = 2)) ))
    SQL = SQL + "          AND paym.t_oper = opers.oper";
  end;
  
  SQL = SQL + "          AND TRN.T_ACCTRNID = DOC.T_ACCTRNID " +
              //"        AND arh.t_applicationkey = doc.t_applicationkey" +
              //"        AND arh.t_iapplicationkind = doc.t_applicationkind" +
              "          AND trn.t_account_receiver LIKE '60309810_0%'" +
              "          AND paym.t_paymentid = prop.t_paymentid" +
              "          AND NOT EXISTS" +
              "                (SELECT   1" +
              "                   FROM   dbilreconcile_dbt con" +
              "                  WHERE   con.t_docid = paym.t_paymentid" +
              "                          AND con.T_DOCKIND = paym.t_dockind)";


var cmd = rsdcommand(sql); 

  if (not ((((branch == 0) or (branch == 1)) and (NodeType_v = 1)) or ((branch == 1) and (NodeType_v = 2)) ))
    cmd.addparam("code", RSDBP_IN, dprt_v);
    cmd.addparam("parentcode", RSDBP_IN, dprt_v);
  end;
    cmd.addparam("date", RSDBP_IN, datebegin);
    cmd.addparam("date1", RSDBP_IN, dateend);
    cmd.execute();
var rsd = rsdrecordset(cmd);
message("Заполняется отсутсвие квитовки записи с документом");
while (rsd.movenext())

      [├───────────────┼─────────────┼────────────┼─────────────────────┼───────────────────────┼──────────────────┼───────────────────────────────┤];
         if (flag)
            obSheet.Range("A"+(5+total)).Value=rsd.value("t_name");
            obSheet.Range("B"+(5+total)).Value=rsd.value("t_oper");
            obSheet.Range("C"+(5+total)).Value=string(rsd.value("t_number"), " ", date(rsd.value("t_date")));
            obSheet.Range("D"+(5+total)).Value=rsd.value("t_payeraccount");
            obSheet.Range("E"+(5+total)).Value=rsd.value("t_receiveraccount");
            obSheet.Range("F"+(5+total)).Value=rsd.value("t_amount");
            obSheet.Range("G"+(5+total)).Value="Отсутсвует квитовка записи с документом";
         end;
[│###############│#############│############│#####################│#######################│##################│###############################│]
(rsd.value("t_name"):w, rsd.value("t_oper"), rsd.value("t_number"):c, rsd.value("t_payeraccount"),rsd.value("t_receiveraccount"),rsd.value("t_amount"), "Отсутсвует квитовка записи с документом":w);

end;


/*cmd = rsdcommand(" SELECT  * "+
"  FROM dpmpaym_dbt paym, "+
"       dpmrmprop_dbt prop, "+
      "  ddp_dep_dbt dep, "+
"       dperson_dbt person, "+
"       dpmdocs_dbt doc, "+
"       darhdoc_dbt arh "+
" WHERE person.t_oper = paym.t_oper "+
"   AND paym.t_paymentid = prop.t_paymentid "+
"   AND paym.t_valuedate between ? and ?"+
"   AND doc.t_paymentid = doc.t_paymentid "+
"   AND doc.t_paymentid = prop.t_paymentid "+
"   AND arh.t_applicationkey = doc.t_applicationkey "+
"   AND arh.t_iapplicationkind = doc.t_applicationkind "+
     branch +
"   AND arh.t_account_receiver LIKE '60309810_0%' "+
     " AND dep.t_code = person.t_codedepart "+
"   AND exists (select 1 from dbilreconcile_dbt con "+
"   where con.t_docid = paym.t_paymentid and con.T_DOCKIND = paym.t_dockind "+
"   ) "+
"   AND not exists (select 1 from dbilbookentry_dbt book, dbilreconcile_dbt con "+
"   where con.t_docid = paym.t_paymentid and con.T_DOCKIND = paym.t_dockind and  "+
"   book.T_BOOKENTRYID = con.T_BOOKENTRYID and book.t_bookid = 3 "+
"   )          ");
cmd.addparam("date", RSDBP_IN, datebegin);
cmd.addparam("date1", RSDBP_IN, dateend);
 cmd.execute();
 rsd = rsdrecordset(cmd);*/
  if (not ((((branch == 0) or (branch == 1)) and (NodeType_v = 1)) or ((branch == 1) and (NodeType_v = 2)) ))
    SQL = " SELECT   t_name, paym.t_oper, prop.t_number, paym.t_payeraccount, paym.t_receiveraccount, paym.t_amount ";
  else
    SQL = " SELECT  (select t_name from ddp_dep_dbt where t_code = (select t_codedepart from dperson_dbt where t_oper = paym.t_oper)) as t_name, paym.t_oper, prop.t_number, paym.t_payeraccount, paym.t_receiveraccount, paym.t_amount " ;
  end;
  
  SQL = SQL + "   FROM   dpmpaym_dbt paym," +
              "          dpmrmprop_dbt prop," +
              "          dpmdocs_dbt doc," +
              "          dacctrn_dbt trn";
        
  if (not ((((branch == 0) or (branch == 1)) and (NodeType_v = 1)) or ((branch == 1) and (NodeType_v = 2)) ))
    SQL = SQL + "       ,(SELECT   t_oper AS oper, dep.t_name " +
                "           FROM   dperson_dbt, (SELECT  t_code, t_name" +
                "                                  FROM  ddp_dep_dbt" +
                "                                 WHERE  t_code = ? OR t_parentcode = ? ) dep" +
                "          WHERE   t_codedepart = dep.t_code )" +
                "        opers";
  end;
  
  SQL = SQL + "     WHERE    paym.t_valuedate between ? and ?" +
              "          AND paym.t_paymentid = doc.t_paymentid";
              
  if (not ((((branch == 0) or (branch == 1)) and (NodeType_v = 1)) or ((branch == 1) and (NodeType_v = 2)) ))
    SQL = SQL + "          AND paym.t_oper = opers.oper";
  end;
  
  SQL = SQL + "          AND TRN.T_ACCTRNID = DOC.T_ACCTRNID " +
              //"        AND arh.t_applicationkey = doc.t_applicationkey" +
              //"        AND arh.t_iapplicationkind = doc.t_applicationkind" +
              "          AND trn.t_account_receiver LIKE '60309810_0%'" +
              "          AND paym.t_paymentid = prop.t_paymentid" +
              "          AND EXISTS" +
              "                (SELECT   1" +
              "                   FROM   dbilreconcile_dbt con" +
              "                  WHERE   con.t_docid = paym.t_paymentid" +
              "                          AND con.T_DOCKIND = paym.t_dockind)" +
              "          AND NOT EXISTS" +
              "                (SELECT   1" +
              "                   FROM   dbilbookentry_dbt book, dbilreconcile_dbt con" +
              "                  WHERE       con.t_docid = paym.t_paymentid" +
              "                          AND con.T_DOCKIND = paym.t_dockind" +
              "                          AND book.T_BOOKENTRYID = con.T_BOOKENTRYID )" ;//+
              // TAM 13.06.12 книга мб любой "                          AND book.t_bookid = 3)";


  cmd = rsdcommand(sql); 

  if (not ((((branch == 0) or (branch == 1)) and (NodeType_v = 1)) or ((branch == 1) and (NodeType_v = 2)) ))
    cmd.addparam("code", RSDBP_IN, dprt_v);
    cmd.addparam("parentcode", RSDBP_IN, dprt_v);
  end;
    cmd.addparam("date", RSDBP_IN, datebegin);
    cmd.addparam("date1", RSDBP_IN, dateend);
    cmd.execute();
  rsd = rsdrecordset(cmd);
message("Счет фактура не внесена в книгу продаж");
 
 
 while (rsd.movenext())
      [├───────────────┼─────────────┼────────────┼─────────────────────┼───────────────────────┼──────────────────┼───────────────────────────────┤];
            if (flag)
            obSheet.Range("A"+(5+total)).Value=rsd.value("t_name");
            obSheet.Range("B"+(5+total)).Value=rsd.value("t_oper");
            obSheet.Range("C"+(5+total)).Value=string(rsd.value("t_number"), " ", date(rsd.value("t_date")));
            obSheet.Range("D"+(5+total)).Value=rsd.value("t_payeraccount");
            obSheet.Range("E"+(5+total)).Value=rsd.value("t_receiveraccount");
            obSheet.Range("F"+(5+total)).Value=rsd.value("t_amount");
            obSheet.Range("G"+(5+total)).Value="Счет фактура не внесена в книгу продаж";
            end;
[│###############│#############│############│#####################│#######################│##################│###############################│]
(rsd.value("t_name"):w, rsd.value("t_oper"), rsd.value("t_number"):c, rsd.value("t_payeraccount"),rsd.value("t_receiveraccount"),rsd.value("t_amount"), "Счет фактура не внесена в книгу продаж":w);
end;
/*
cmd = rsdcommand(" SELECT  * "+
"  FROM dpmpaym_dbt paym, "+
"       dpmrmprop_dbt prop, "+
"       dperson_dbt person, "+
      "  ddp_dep_dbt dep, "+
"       dpmdocs_dbt doc, "+
"       darhdoc_dbt arh "+
" WHERE person.t_oper = paym.t_oper "+
"   AND paym.t_paymentid = prop.t_paymentid "+
"   AND paym.t_valuedate between ? and ?"+
"   AND doc.t_paymentid = doc.t_paymentid "+
"   AND doc.t_paymentid = prop.t_paymentid "+
     branch +
"   AND arh.t_applicationkey = doc.t_applicationkey "+
     " AND dep.t_code = person.t_codedepart "+
"   AND arh.t_account_receiver LIKE '60309810_0%' "+
"   and exists (select 1 from dbilreconcile_dbt con "+
"   where con.t_docid = paym.t_paymentid and con.T_DOCKIND = paym.t_dockind "+
"   ) "+
"   and not exists (select 1 from dbilbookentry_dbt book, dbilreconcile_dbt con "+
"   where con.t_docid = paym.t_paymentid and con.T_DOCKIND = paym.t_dockind and  "+
"   book.T_BOOKENTRYID = con.T_BOOKENTRYID and book.T_ISRECONCILED = chr(88) "+
"   )             ");
cmd.addparam("date", RSDBP_IN, datebegin);
cmd.addparam("date1", RSDBP_IN, dateend);
 cmd.execute();
 rsd = rsdrecordset(cmd);*/
  if (not ((((branch == 0) or (branch == 1)) and (NodeType_v = 1)) or ((branch == 1) and (NodeType_v = 2)) ))
    SQL = " SELECT   t_name, paym.t_oper, prop.t_number, paym.t_payeraccount, paym.t_receiveraccount, paym.t_amount ";
  else
    SQL = " SELECT  (select t_name from ddp_dep_dbt where t_code = (select t_codedepart from dperson_dbt where t_oper = paym.t_oper)) as t_name, paym.t_oper, prop.t_number, paym.t_payeraccount, paym.t_receiveraccount, paym.t_amount " ;
  end;
  
  SQL = SQL + "   FROM   dpmpaym_dbt paym," +
              "          dpmrmprop_dbt prop," +
              "          dpmdocs_dbt doc," +
              "          dacctrn_dbt trn";
        
  if (not ((((branch == 0) or (branch == 1)) and (NodeType_v = 1)) or ((branch == 1) and (NodeType_v = 2)) ))
    SQL = SQL + "       ,(SELECT   t_oper AS oper, dep.t_name " +
                "           FROM   dperson_dbt, (SELECT  t_code, t_name" +
                "                                  FROM  ddp_dep_dbt" +
                "                                 WHERE  t_code = ? OR t_parentcode = ? ) dep" +
                "          WHERE   t_codedepart = dep.t_code )" +
                "        opers";
  end;
  
  SQL = SQL + "     WHERE    paym.t_valuedate between ? and ?" +
              "          AND paym.t_paymentid = doc.t_paymentid";
              
  if (not ((((branch == 0) or (branch == 1)) and (NodeType_v = 1)) or ((branch == 1) and (NodeType_v = 2)) ))
    SQL = SQL + "          AND paym.t_oper = opers.oper";
  end;
  
  SQL = SQL + "          AND TRN.T_ACCTRNID = DOC.T_ACCTRNID " +
              //"        AND arh.t_applicationkey = doc.t_applicationkey" +
              //"        AND arh.t_iapplicationkind = doc.t_applicationkind" +
              "          AND trn.t_account_receiver LIKE '60309810_0%'" +
              "          AND paym.t_paymentid = prop.t_paymentid" +
              "          AND EXISTS" +
              "                (SELECT   1" +
              "                   FROM   dbilreconcile_dbt con" +
              "                  WHERE   con.t_docid = paym.t_paymentid" +
              "                          AND con.T_DOCKIND = paym.t_dockind)" +
              "          AND NOT EXISTS" +
              "                (SELECT   1" +
              "                   FROM   dbilbookentry_dbt book, dbilreconcile_dbt con" +
              "                  WHERE       con.t_docid = paym.t_paymentid" +
              "                          AND con.T_DOCKIND = paym.t_dockind" +
              "                          AND book.T_BOOKENTRYID = con.T_BOOKENTRYID" +
              "                          AND book.T_ISRECONCILED = chr(88))";


  cmd = rsdcommand(sql); 

  if (not ((((branch == 0) or (branch == 1)) and (NodeType_v = 1)) or ((branch == 1) and (NodeType_v = 2)) ))
    cmd.addparam("code", RSDBP_IN, dprt_v);
    cmd.addparam("parentcode", RSDBP_IN, dprt_v);
  end;
    cmd.addparam("date", RSDBP_IN, datebegin);
    cmd.addparam("date1", RSDBP_IN, dateend);
    cmd.execute();
  rsd = rsdrecordset(cmd);
message("Счет фактура не внесена в книгу продаж");
 
while (rsd.movenext())
      [├───────────────┼─────────────┼────────────┼─────────────────────┼───────────────────────┼──────────────────┼───────────────────────────────┤];
            if (flag)
               obSheet.Range("A"+(5+total)).Value=dataset.name;
               obSheet.Range("B"+(5+total)).Value=dataset.oper;
               obSheet.Range("C"+(5+total)).Value=string(dataset.number, " ", date(dataset.date));
               obSheet.Range("D"+(5+total)).Value=dataset.payeraccount;
               obSheet.Range("E"+(5+total)).Value=dataset.receiveraccount;
               obSheet.Range("F"+(5+total)).Value=dataset.amount;
               obSheet.Range("G"+(5+total)).Value="Не внесена в книгу продаж с документом";
            end;

[│###############│#############│############│#####################│#######################│##################│###############################│]
(rsd.value("t_name"):w, rsd.value("t_oper"), rsd.value("t_number"):c, rsd.value("t_payeraccount"),rsd.value("t_receiveraccount"),rsd.value("t_amount"), "Не внесена в книгу продаж с документом":w);
end;
[└───────────────┴─────────────┴────────────┴─────────────────────┴───────────────────────┴──────────────────┴───────────────────────────────┘
Всего документов ###########]
(total);

Time();
setOutput( null, true );    

if ((RSL_IsIdentProgram("У")))
   viewfile(BilfProtocol);
end;

end;

/*20.01.2015 zmp C-24221 ф-я обертка для автоматической генерации СФ*/
macro ControlProtocolRBS1(oProtocol   :@String)                        
debugbreak;
   DateBegin  = {curdate};
   DateEnd    = {curdate};
   branch     = "";
   dprt_v     = "";   
   flag       = false;
   outall();
   SetParm(0, BilfProtocol);
end;


 /*Обработчик диалоговой панели ввода исходных данных для печати*/
MACRO Event (dlg, cmd, id, key) 

   var mn, const_mess = "~F2~ Продолжить ~ESC~ Выход ";
   var const_mess2 = "~F2~ Продолжить ~SPACE~ ~ESC~ Выход ";
   array m;
   m(0) = "Банк";
   m(1) = "Филиал";
   m(2) = "Подразделение";


   /*Первоначальная инициализация полей*/
   if(cmd == DLG_INIT)
      dprt_v = 1;
      dlg.rec.dep = "Подразделение";
      dlg.rec.flag  = "";
      dlg.rec.Datebegin = {curDate};
      dlg.rec.Dateend = {curDate};
      dlg.rec.Branch = "000";
      dlg.rec.branchname = GetClientName({operdprt});
      UpdateFields(dlg); 
   end;
   
   /*Установка подсказок в строке состояния*/
   if (cmd==DLG_SETFOCUS)
     if (FldName(dlg,id)=="Flag") 
       message(const_mess2);
     elif ((FldName(dlg,id)=="DateBegin") or (FldName(dlg,id)=="DateEnd"))
       message(" ~F3~ Выбор даты из календаря "+const_mess);
     elif (FldName(dlg,id)=="Branch")
       message(" ~F3~ Выбор филиала "+const_mess);
    end;
   end;
   
   if (cmd == DLG_REMFOCUS)
     /*Проверка корректности дат отчета*/
     if (FldName(dlg,id) == "DateEND")
       if ( dlg.rec.Dateend > {curdate} )
         MsgBox("Дата конца периода не может быть больше даты текущего операционного дня");
        return CM_CANCEL;
       end;
       if ( dlg.rec.Datebegin > dlg.rec.Datebegin )
         MsgBox("Дата конца периода не может быть больше даты начала операционного дня");
        return CM_CANCEL;
       end;
     end;
     if (FldName(dlg,id) == "DateBegin")
       if ( dlg.rec.Datebegin > dlg.rec.Datebegin )
         MsgBox("Дата начала периода не может быть больше даты текущего операционного дня");
        return CM_CANCEL;
       end;
       if ( dlg.rec.Datebegin > {curdate} )
         MsgBox("Дата начала периода не может быть больше даты конца операционного дня");
        return CM_CANCEL;
       end;
     end;
      UpdateFields(dlg); 
   end;

   if (cmd == DLG_KEY)
     /*Выход из диалогового окна формирования отчета*/
     if (KEY == KEY_ESC)
       return exit(1);//CM_CANCEL;
     /*Выбор данных из списка*/
     elif ( KEY == KEY_F3)
        /*Выбор даты из календаря*/
      if (FldName(dlg,id) == "dep")
          mn = menu(m,"Режим выпуска отчета");
          if (mn == 0)
            dlg.rec.dep = "Банк";
          elif (mn == 1)
            dlg.rec.dep = "Филиал";
          elif (mn == 2)
            dlg.rec.dep = "Подразделение";
          end;
        end;
        if (FldName(dlg,id) == "DateBegin")
          dlg.rec.datebegin = GetDateByCalendar ({curDate});
        end;
        if (FldName(dlg,id) == "DateEnd")
          dlg.rec.dateend = GetDateByCalendar ({curDate});
        end;
        if (FldName(dlg,id) == "Branch")
           if (ListDepartment (Department))
              dprt_v = department.code;
              NodeType_v = department.NodeType;
              dlg.rec.branch = Department.name;
              dlg.rec.branchname = GetClientName(Department.code);
              message(" ~F3~ Список подразделений "+const_mess);
              UpdateFields(dlg);
           end;
        end;

        
     elif (KEY == KEY_SPACE)
          /*Сброс установок в поле офис банка*/
           if (FldName(dlg,id) == "Flag") 
            if (dlg.rec.flag=="")
            dlg.rec.flag="X";
            UpdateFields(dlg);
            else
            dlg.rec.flag="";
             UpdateFields(dlg);
           end;
           end;

     elif (( KEY == KEY_F2 ) or ( KEY == KEY_ENTER ))        //Проверки при вводе
         if ( dlg.rec.datebegin > {curdate} )
                MsgBox("Дата начала периода не может быть больше даты текущего операционного дня");
                return CM_IGNORE;
         end;
         if ( dlg.rec.dateend > {curdate} )
                MsgBox("Дата конца периода не может быть больше даты текущего операционного дня");
                return CM_IGNORE;
         end;
         if ( dlg.rec.datebegin > dlg.rec.dateend )
                MsgBox("Дата начала периода не может быть больше даты текущего операционного дня");
                return CM_IGNORE;
         end;
        Datebegin  = dlg.rec.datebegin;
        if (datebegin == "")
        datebegin = "01.01.0001";
        end;  
        Dateend  = dlg.rec.dateend;
        flag=dlg.rec.flag;
        branch=dprt_v;
          if (dlg.rec.dep == "Банк")
            //branch = "";
            branch = 0;
          elif (dlg.rec.dep == "Филиал")
            //branch = " AND dep.t_code in (select t_code from ddp_dep_dbt where t_parentcode in ( "+
            //         " select t_code from ddp_dep_dbt where t_parentcode = "+dprt_v+") "+
            //         " or t_code = "+dprt_v+" or t_parentcode = "+dprt_v+" )";
            branch = 1;
          elif (dlg.rec.dep == "Подразделение")
           //branch = " AND dep.t_code = "+dprt_v;
           branch = 2;
          end;

         if ((dateend < {curDate}))    
           Return CM_SAVE;
        elif (gettrue(true,"Дата равна текущему опрерационному дню. Продолжить?"))
           Return CM_SAVE;
        end;
      else
           Return CM_IGNORE;
     end;
   end;     
END;

//private macro total
/*13.12.2013 zmp C-24221 сделана проверка на подсистему для использования макроса в безинтерфейсном режиме*/
if (RSL_IsIdentProgram("У"))
   if (RunDialog(dlg, "Event"))                  
      outall(inter);
      SetOutput (Null,True);
      if (flag)
         obSheet.Range("A5:G"+(5+total)).Borders.Weight=2;
         obSheet.Range("A5:G"+5).interior.color=4035000;
         Ex.visible = true;       
      end;
   end;
END;


