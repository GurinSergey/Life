/************************************************************************/
/*         Автоматизированная банковская система RS-Bank                */
/*               Copyright (c) R-Style Software Lab                     */
/*                                                                      */
/*  Имя файла      : mo.mac                                             */
/*                                                                      */
/*  Описание       : Печать сводного мемориального ордера               */
/*                   по мультивалютной проводке                         */
/*                                                                      */
/************************************************************************/

/******************************************************************************/
/* Печать сводного мемориального ордера по мультивалютной проводке            */
/******************************************************************************/

import "globals.mac", FIInter, "mocommon.mac", likepy;

var pr_multycar:TRecHandler = TRecHandler("multycar.dbt", "bank.def");
var prt:TbFile = TbFile("party.dbt", "bank.def");

private var FirstTime :bool    = TRUE;
private var MenuChoice:integer = -1;

/******************************************************************************/
/* Получить наименование клиента счета                                        */
/******************************************************************************/
PRIVATE MACRO GetClientName( accnum:string, chapter:integer, accfi:integer ):string
  var account:TRecHandler = TRecHandler("account.dbt", "bank.def");
  var party  :TRecHandler = TRecHandler("party.dbt",   "bank.def");

  if( MO_GetAccountBuffer( account, accnum, chapter, accfi ) )
    if( MO_GetPartyBuffer( party, CorrectToBeSelfID(account.rec.Client) ) )
      /*10 Nov 06 Fri 14:34:24 Malakhova Irina*/
      if (party.rec.ShortName!="")
        return party.rec.ShortName;
      else
        return party.rec.Name;
      end;
    else
      return "";
    end;
  else
    return string("Не найден счет: ", accnum);
  end;
END;

/******************************************************************************/
/*  Печать сводного мемориального ордера                                      */
/*  по мультивалютной проводке                                                */
/******************************************************************************/
MACRO PrintDocument( ncopy:integer ):bool

  array l_sumS, l_payerS, l_bankS, l_receiverS, l_groundS;
  var Amount        :moneyl = $0,
      AmountRUB_From:moneyl = $0,
      AmountRUB_To  :moneyl = $0,
      l_accplus  :string = "",
      l_accminus :string = "",
      Payer      :string = GetClientName( pr_multycar.rec.Account_From, pr_multycar.rec.Chapter, pr_multycar.rec.FIID_From ),
      Receiver   :string = GetClientName( pr_multycar.rec.Account_To,   pr_multycar.rec.Chapter, pr_multycar.rec.FIID_To   ),
      SPOD_str   :string = IfThenElse( Index( pr_multycar.rec.Type_Document, "З" ), "СПОД", "    " );

  var err,pagebreak,terminator=""; // KS 16.11.2011 Разделитель
  GetRegistryValue("PRBB\\REPORT\\ПЕЧАТЬ\\MEMORDER\\PAGE BREAK",V_BOOL,pagebreak,err);
  if (( err == 0 ) and (pagebreak))
    terminator = "";
  end;

  /* Получить сумму */
  if  ( pr_multycar.rec.FIID_From == 0 )
    Amount = pr_multycar.rec.Amount_From;
  elif( pr_multycar.rec.FIID_To   == 0 )
    Amount = pr_multycar.rec.Amount_To;
  else
    ConvSum( Amount, pr_multycar.rec.Amount_From, pr_multycar.rec.Date, pr_multycar.rec.FIID_From );
  end;

  /* Рублевые суммы по каждой валюте */
  ConvSum( AmountRUB_From, pr_multycar.rec.Amount_From, pr_multycar.rec.Date, pr_multycar.rec.FIID_From );
  ConvSum( AmountRUB_To,   pr_multycar.rec.Amount_To,   pr_multycar.rec.Date, pr_multycar.rec.FIID_To );

  /* Счета курсовых разниц */
  if  ( AmountRUB_From > AmountRUB_To )
    l_accplus  = pr_multycar.rec.Account1;
  elif  ( AmountRUB_From < AmountRUB_To )
    l_accminus = pr_multycar.rec.Account2;
  end;

  StrSplit( RubToStrAlt( Amount ),  l_sumS,       76, 76, 2 );
  StrSplit( Payer,                  l_payerS,     43, 43, 3 );
  StrSplit( Receiver,               l_receiverS,  43, 43, 4 );

  strsplit (GetOurBankName(),       l_bankS,      43, 43, 2 );

  StrSplit( pr_multycar.rec.Ground, l_groundS,    87, 67, 3 );

  while( ncopy > 0 )
    [┌──────────────────────────┬─────────────────┬────────────────────────────────────────────┐
     │    МЕМОРИАЛЬНЫЙ ОРДЕР N  │ ############### │ #######################         ####       │
     │                          └─────────────────┘ ───────────────────────                    │
     │                                                     /Дата/                              │
     ├──────────┬──────────────────────────────────────────────────────────────────────────────┤
     │ Сумма    │ ############################################################################ │
     │ прописью │ ############################################################################ │
     ├──────────┴──────────────────────────────────┬──────────┬────────────────────────────────┤
     │ ########################################### │  Сумма   │ ############################   │
     │ ########################################### ├──────────┼────────────────────────────────┤
     │ Плательщик ################################ │  Сч.N    │ #########################      │
     │                                             │          │ #########################      │
     ├─────────────────────────────────────────────┼──────────┤                                │
     │ ########################################### │  БИК     │ #################              │
     │ ########################################### ├──────────┤                                │
     │ Банк плательщика                            │  Сч.N    │ #########################      │
     ├─────────────────────────────────────────────┼──────────┼────────────────────────────────┤
     │ ########################################### │  БИК     │ #################              │
     │ ########################################### ├──────────┤                                │
     │ Банк получателя                             │  Сч.N    │ #########################      │
     ├─────────────────────────────────────────────┼──────────┤                                │
     │ ########################################### │  Сч.N    │ #########################      │
     │ ########################################### │          │ #########################      │
     │ ########################################### ├──────────┼────────┬──────────┬────────────┤
     │ ########################################### │ Шифр.док.│ ###### │Срок плат.│            │
     │                                             ├──────────┤        ├──────────┤            │
     │ Получатель                                  │Назн.плат.│        │Очер.плат.│            │
     │                                             │   Код    │        │Рез.поле  │            │
     ├─────────────────────────────────────────────┴──────────┴────────┴──────────┴────────────┤
     │ Назначение платежа  ################################################################### │
     │ ####################################################################################### │
     │ ####################################################################################### │
     │                                                                                         │
     │                              Подписи                                                    │
     └─────────────────────────────────────────────────────────────────────────────────────────┘
     #]( trim( pr_multycar.rec.Numb_Document ):c, pr_multycar.rec.Date:m:c, SPOD_str,
         l_sumS(0),
         l_sumS(1),
         l_payerS(0), Amount:l:f,
         l_payerS(1),
         l_payerS(2), pr_multycar.rec.Account_From,
         l_accminus,
         l_bankS(0), {MFO_Bank},
         l_bankS(1), {CORAC_Bank},
         l_bankS(0), {MFO_Bank},
         l_bankS(1), {CORAC_Bank},
         l_receiverS(0), pr_multycar.rec.Account_To,
         l_receiverS(1), l_accplus,
         l_receiverS(2),
         l_receiverS(3), pr_multycar.rec.ShifrOper, 
         l_groundS(0),
         l_groundS(1),
         l_groundS(2),
         terminator // KS 16.11.2011 Разделитель
         );

    ncopy = ncopy - 1;
  end;

  return TRUE;
END;

/*************************************************************************************/
/* Печать формы сводного мемориального ордера по проводке из мультивалютной проводки */
/* Хорошо бы упразднить и использовать PrintDocument                                 */
/*************************************************************************************/
MACRO PutMultyDoc(d, ncopy:integer):bool

  array aMenu;
  var fmultycar:TBFile = TBFile( "multycar.dbt", "R", 1, "multycar.dbt", "bank.def" );

  if( FirstTime )
    aMenu(0) = "   Простой   ";
    aMenu(1) = "   Сводный   ";
    MenuChoice = 0;
    if( GetDialogFlag() )
      MenuChoice = Menu( aMenu, "Выберите форму печати мемордера", "Мемордер" );
    end;
    FirstTime = FALSE;
  end;

  if( MenuChoice < 0 )
    Exit(1);
  elif( MenuChoice == 0 )
    return FALSE;
  end;

  fmultycar.rec.iApplicationKind = d.ConnAppKind;
  fmultycar.rec.ApplicationKey   = d.ConnAppKey;
  if( fmultycar.GetEQ() )
    if( fmultycar.rec.MethodID != 1 ) /* пока только для "Конверсионных операций" */
      return FALSE;
    end;
    Copy( pr_multycar, fmultycar );
    return PrintDocument( ncopy );
  else
    MsgBox( "Нет данных для печати сводного мемориального ордера|Проверьте, выполнены ли все шаги мультивалютной проводки" );
    Exit(1);
  end;

END;

