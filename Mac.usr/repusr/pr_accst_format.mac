/* EVG 14/1/2014 Макрос постобработки (форматирования) для выписок в формате Excel */

/* Changes:

   EVG  5/05/2014 Приём и обработка доп. параметра rubEquivalent (Эквивалент в нац. валюте)
   EVG  6/05/2014 Доработана процедура определдения положения шапки отчёта для случая, когда
        в отчёт попадают и рублёвые, и валютные счета, и установлен признак "Эквивалент в нац. 
        валюте"
   I-00488257-2 23.06.2014 DPN Не весь счет влезал в ячейку
*/




macro FormatExcelBook( printForm, addInfo, noPageBreaks, rubEquivalent )

  /* Константы из pr_accstatement.mac, импортировать не стал.
     Оставил только екселевские, т.к. для текста эта функция не вызывается. */
  const REPTYPE_EXTENDED_XLS      = 2,
        REPTYPE_XLS_BLANK         = 3,
        REPTYPE_DFR               = 4;

  var shitCount, i, rangeValue:string, pageCount, lastColLetter, lastColNumber, lastBreak, lastRow,
      headerPosition, timeStampPosition, address;

  begAction(100, "Форматирование");
  //debugbreak;
  /* !!! Очень важно: позиция шапки отчёта. Для каждого формата выписки она фиксирована, но если 
     в шапку что-то добавится, то придётся поменять позицию тут.                                 */
  headerPosition = 1;
  if( printForm == REPTYPE_EXTENDED_XLS )       // Формат выписки: Расширеная Excel

     headerPosition = 17;
     /* EVG 5/05/2014 Если выписка с эквивалентом, то в шапку добавляются ещё строчки с инфо по экв-ту,
        и заголовок таблички смещается на 2 строчки вниз. */
     if( rubEquivalent )
        headerPosition = 19;
     end;

  elif( printForm == REPTYPE_XLS_BLANK )        // Формат выписки: Excel на бланке

     headerPosition = 11;
     /* EVG 5/05/2014 Если выписка с эквивалентом, то в шапку добавляются ещё строчки с инфо по экв-ту,
        и заголовок таблички смещается на 1 строчку вниз. */
     if( rubEquivalent )
        headerPosition = 12;
     end;

  else
     return     // Остальные выписки не форматируются
  end;


  //debugbreak;
  /* Цикл по вкладкам для случая, когда выписка делается по нескольким счетам */
  shitCount = 1;
  while( shitCount <= iBook.Sheets.Count )

     iSheet = iBook.Sheets( shitCount );

     /* EVG 5/03/2014 Если в первой ячейке стоит конец страницы, то выписка пустая, дальше форматировать не нужно */
     if( index( iSheet.Cells( 1, 1 ).value, strFor(12) ) > 0 )
        break;
        endAction();
     end;


     /* EVG 6/05/2014 Проблема с эквивалентом заключается в том, что выписка может одновременно печататься и по рублёвым счетам,
        по которым эквивалента нет, и по валютным - с эквивалентом. Поэтому просто проверки на установленный флажок для определения
        позиции шапки отчёта в этом случае недостаточно - на разных вкладках шапка будет в разных местах. Поэтому в случае, если 
        вкладок несколько, и установлен флажок "Эквивалент в нац. валюте", нужно дополнительно проверить, что именно эта вкладка
        содержит счёт, по которому выводится эквивалент.
     */
     if( ( iBook.Sheets.Count > 1 ) and rubEquivalent )

        if( printForm == REPTYPE_EXTENDED_XLS )       // Формат выписки: Расширеная Excel
           headerPosition = 17;
        elif( printForm == REPTYPE_XLS_BLANK )        // Формат выписки: Excel на бланке
           headerPosition = 11;
        end;

        i = 1;
        while( i <= 20 )
           if( index( iSheet.Cells( i, 1 ).value, "эквивалент" ) > 0 )
              if( printForm == REPTYPE_EXTENDED_XLS )
                 headerPosition = 19;
              elif( printForm == REPTYPE_XLS_BLANK )
                 headerPosition = 12;
              end;
              break;
           end;
           i = i + 1;
        end;
     end;


     // Определяем последний столбец
     i = 1;
     lastColNumber = 1;
     lastColLetter = "A";
     /* Так конечно красиво, но чревато зависанием в случае, если попадём не в ту строчку.
        Поэтому надо попроще.
     while( i <= iSheet.Columns.Count() )*/
     while( i <= 50 )
        if( index( iSheet.Cells( headerPosition, i ).value, "Основание" ) > 0 )
           lastColNumber = i;
           // Сразу отсекаем из адреса ячейки первый $
           address = subStr( iSheet.Cells( headerPosition, i ).address, 2 );
           // Буква(-ы) колонки - до второго $
           if( index( address, "$" ) > 0 )
              address = subStr( address, 1, index( address, "$" ) -1 );
           end;
           lastColLetter = address;
           break;
        end;
        i = i + 1;
     end;

     if( lastColNumber == 1 )
        msgbox( "Ошибка форматирования: не определён последний столбец таблицы." );
        endAction();
        return
     end;


     // Формат выписки: Расширеная Excel
     if( printForm == REPTYPE_EXTENDED_XLS )

        // Корректировка цвета заливки шапки
        rangeValue = "A"+ headerPosition +":"+ lastColLetter + (headerPosition + 1);
        iSheet.Range( rangeValue ).interior.color=4035000;


     // Формат выписки: Excel на бланке
     elif( printForm == REPTYPE_XLS_BLANK )

        // Корректировка цвета заливки шапки
        rangeValue = "A"+ headerPosition +":"+ lastColLetter + (headerPosition + 1);
        iSheet.Range( rangeValue ).interior.color=4035000;
        iSheet.Range("D:G").shrinktofit = true; //I-00488257-2 23.06.2014 DPN Не весь счет влезал в ячейку

        debugbreak;
        // Сброс значения Вписать / Высота
        iSheet.PageSetup.FitToPagesTall = false;

        // Цикл по записям вкладки
        i = 1;
        lastRow = 1;
        lastBreak = 1;
        pageCount = 1;
        while( i < iSheet.rows.count() ) 

           /* Определим последнюю строчку выписи
              (при формировании отчёта мы специально поместили в неё символ 12 - ). */
           if( index( iSheet.Cells( i, 1 ).value, strFor(12) ) > 0 )
              lastRow = i;
              break;
           end;

           /* Расставим концы страниц. Значение .height > 610 взято из макроса
              старой выписки. 10 - отступ для подвала отчёта. */
           rangeValue = "A" + lastBreak + ":A" + i;
           if( not noPageBreaks and ( iSheet.Range( rangeValue ).height > 610 ) )

              lastBreak = i; // Текущая позиция

              // Вставляем строчку
              iSheet.Rows( lastBreak ).Insert();

              // Разрыв страницы
              iSheet.Cells( lastBreak, 1 ).pagebreak = true;

              // Рисуем номер страницы
              rangeValue = "A" + lastBreak + ":" + lastColLetter + lastBreak;
              iSheet.RANGE( rangeValue ).mergecells = true;
              iSheet.RANGE( rangeValue ).horizontalalignment = 4;
              pageCount = pageCount + 1;
              iSheet.Cells( lastBreak, 1 ).Value = string( "Страница ", pageCount );

           end;

           i = i + 1;
        end;

        // Всего страниц
        if( not noPageBreaks )
           iSheet.Cells( 3, lastColNumber ).value = "Страница 1";
           iSheet.Cells( 4, lastColNumber ).value = "Всего страниц: " + pageCount;
           iSheet.Range( lastColLetter + "3:" + lastColLetter + "4" ).horizontalalignment = 4;
        end;

        timeStampPosition = lastRow + 2;

        /* Единственная разница меджу форматами "Excel на бланке" и 
           "Excel на бланке с дополнительной информацией" - этот прямоугольник на печатной форме.
           Ну и надпись "Выписка изготовлена" чуть ниже. */
        if( addInfo )
           rangeValue = "A" + (lastRow+2) + ":" + lastColLetter + (lastRow+4);

           iSheet.Range( rangeValue ).mergecells = true;
           iSheet.Range( rangeValue ).Borders.Weight = 2;

           timeStampPosition = lastRow + 5;
        end;

        iSheet.Cells( timeStampPosition, lastColNumber ).Value = "Выписка изготовлена " + date + " (" + time + ")";

        //iSheet.PageSetup.PrintGridlines = true;

     end;

     shitCount = shitCount + 1;
  end;

//   iSheet.Range("A24:R26").Borders.Weight=2;
//   iSheet.Range("A15:i16").interior.color=4035000;
  
  endAction();

end;