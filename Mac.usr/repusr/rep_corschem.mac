/*************************************************************************/
/*     Дополнение к автоматизированной банковской системе RS-Bank        */
/*                                                                       */
/*    Имя файла        : rep_corschem.mac                                */
/*                                                                       */
/*    Описание         : I-087390 в процедуру формирования выписки       */
/*                       по коррсчету внести изменения                   */
/*                                                                       */
/*    Программист      : Котов С.С.                                      */
/*                                                                       */
/*    Создан           : 10.12.2010                                      */
/*                                                                       */
/*    Изменен          : 08.11.2011 Жаворонкова Н. (joy)                 */
/*                       I-00112753-2 UNION -> UNION ALL                 */
/*                        1                                              */
// 22.05.2012 vihrov I-00196771-2 
/*************************************************************************/
//zmp 04.12.2012 I-00292274 закомментировал на время условие p.T_FUTUREPAYERAMOUNT = p.T_FUTURERECEIVERAMOUNT

import Globals, RSD;
import oralib, likepy;
import ldmklbr;
import KeyCodes, Календарь;
import activeX, RCW, Rsexts;
var select,SQL:string, qwery;
var params:TArray;
var rs,rs_arh,rs_step:object;     
var dt={curdate},dte={curdate};

private var count, v_mas_schem, v_mas_type, choise;
private var InDoc = true,OutDoc = true, Unload = true;
private var AccMaskDeb = "", AccMaskKred = "";
private var sum = $0.0, sumcurpaym = $0.0, sum47416 = $0.0, i, cnt, err;
private var count_paym = 0,count_arh = 0,sum_paym = $0.0,sum_arh = $0.0;
private var schema_id = -2,
    schema_fiid = -1,
    direct = " ";
private var mess;
private var shemacc,restinA, restinP, debet, kredit, restoutA, restoutP, nameaccount, FINAL_DATE, KIND_ACCOUNT;
array mas_schem,mas_schem_id,mas_schem_fiid,mas_schem_acc, mas_type;

var GroundArray,PayerBankArray,PayerArray,ReceiverArray,Coraccount,Pdebet,Pkredit;
array arhdoc;
FILE f_rep_out() txt;

private macro lpad(s,c)
  return mkstr( " ", c - strlen(string(s)) ) + string(s);
end;

private macro rpad(s,c)
  return string(s) + mkstr( " ", c - strlen(string(s)) );
end;

private macro nvl(s)
  if (StrLen(s) > 0)
     return s;
  else
     return " ";
  end;
end;

private class myExcelReport

  private var myWorkBook;
  private var myWorkExcel;
  private var myWorkSheet;
  var numSheet = 1;

  private var myRecord = null;
 
  var cntRecord = 0;
  var amountRecord = $0.0;

  macro ClearSymble(str, split_char)
      str = StrSubst(str, strfor(13), "" );
      str = StrSubst(str, strfor(10), "" );
      str = StrSubst(str, split_char, " ");
      return string(str);   
  end;

  private macro SetTypeColumns();
      var result_arr = TArray(true), i;
 
      //for(i, 1, 13) EVG 18/8/2015
      for(i, 1, 15)
        var templs_arr = TArray(true);         
        templs_arr(0) = i;
        templs_arr(1) = 2;

        result_arr(i - 1) = templs_arr;
      end; 

      return result_arr;
  end;

  private macro GetWorkDirName() : string
      var DirName:string = "", 
          StrErr :string = "";

      GetRegistryValue( "BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR", V_STRING, DirName, StrErr );        
      if( DirName )     
        if( SubStr(DirName, 1, 1) == "." ) DirName = "$" + GetCurDir(TRUE) + replace (DirName, "..",""); end;     
        if (existFile(DirName))  return DirName;  end;
      end;

      DirName = "$" + GetEnv("TEMP");

      if( NOT DirName ) DirName = "$" + GetEnv("TMP"); end;
      if (existFile(DirName)) return DirName; end;

      msgbox("Ошибка поиска папки для временных файлов на терминале");

      return "";
  end;

  private macro myCopyFile (Name_file)
      var Templs_Dir_Term = GetWorkDirName();

      var TermFileName = toAnsi(Name_file);
      var SPFileName;

      if ( Templs_Dir_Term == "" )  return "";  end;
      SPFileName = "..\\txtfile\\" + Name_file; 

      if (not existFile(SPFileName)) MsgBox(string("Транспортный временный файл не найден: |", SPFileName)); return ""; end;
      if( not CopyFile(SPFileName, Templs_Dir_Term + "\\" + TermFileName) ) RunError("Ошибка при передаче файла на терминал\n" + Templs_Dir_Term + "\\" + TermFileName); end;

      return subStr(Templs_Dir_Term + "\\" + TermFileName, 2);      
  end;

  private macro OpenExcel()
      private var objectXls, WorkExcel;

      objectXls = CreateObject ("rsax", "TRsAxServer", string("RsAxServer", UserNumber()), IsStandAlone());
      WorkExcel = objectXls.CreateComObject ("Excel.Application"); 

      myWorkExcel = WorkExcel;

      return true;

  OnError(er)
      msgbox(er.Message); 
      return false;
  end;

  private macro SetHeaderExcelTable()
      var i; 
      myWorkBook.Sheets(numSheet);
      myWorkSheet = myWorkBook.ActiveSheet();

      myWorkSheet.Cells(1, 1).Value  = "№ п/п";
      myWorkSheet.Cells(1, 2).Value  = "Номер док-та";
      myWorkSheet.Cells(1, 3).Value  = "Вид оп";
      myWorkSheet.Cells(1, 4).Value  = "ДПП/Дата проводки";
      myWorkSheet.Cells(1, 5).Value  = "Сумма платежа/проводки";
      myWorkSheet.Cells(1, 6).Value  = "Очер";
      myWorkSheet.Cells(1, 7).Value  = "БИК банка корресп.";
      myWorkSheet.Cells(1, 8).Value  = "Наименование банка корресп.";
      myWorkSheet.Cells(1, 9).Value  = "Плательщик";
      // EVG 18/8/2015 Добавил вывод ИНН
      myWorkSheet.Cells(1, 10).Value = "ИНН плательщика";
      myWorkSheet.Cells(1, 11).Value = "Счет плательщика/дебета";
      myWorkSheet.Cells(1, 12).Value = "Получатель";
      // EVG 18/8/2015 Добавил вывод ИНН
      myWorkSheet.Cells(1, 13).Value = "ИНН получателя";
      myWorkSheet.Cells(1, 14).Value = "Счет получателя/кредита";
      myWorkSheet.Cells(1, 15).Value = "Назначение платежа";

      myWorkSheet.Cells(cntRecord + 3, 1).Value = "ИТОГО документов";
      myWorkSheet.Cells(cntRecord + 3, 2).Value = (cntRecord - 1);
      myWorkSheet.Cells(cntRecord + 3, 4).Value = "на сумму";
      myWorkSheet.Cells(cntRecord + 3, 5).Value = double(amountRecord); 
      //myWorkSheet.Cells(cntRecord + 3, 5).Font.Bold = true; 

      /* EVG 18/8/2015
      for (i, 1, 13)
        myWorkSheet.Cells(1, i).HorizontalAlignment = 3;
        myWorkSheet.Cells(1, i).Font.Bold = true; 
        myWorkSheet.Columns(i).EntireColumn.AutoFit;
      end; 
      myWorkSheet.Range("A" + (cntRecord + 3) + ":M" + (cntRecord + 3)).Font.Bold = true; 
      myWorkSheet.Range("A1:M" + cntRecord).Borders.Weight = 2;  
      myWorkSheet.Range("A1:M1").Interior.Color = #B5B5B5; */

      for (i, 1, 15)
        myWorkSheet.Cells(1, i).HorizontalAlignment = 3;
        myWorkSheet.Cells(1, i).Font.Bold = true; 
        myWorkSheet.Columns(i).EntireColumn.AutoFit;
      end; 
      myWorkSheet.Range("A" + (cntRecord + 3) + ":O" + (cntRecord + 3)).Font.Bold = true; 
      myWorkSheet.Range("A1:O" + cntRecord).Borders.Weight = 2;  
      myWorkSheet.Range("A1:O1").Interior.Color = #B5B5B5; 
                                                                                         
      return true;

   OnError
       return false;
   end;     

   macro CopyValueToExcel(myFileName)
       initprogress(-1, "", "Подготовка файла Excel");
       myFileName = myCopyFile(myFileName); 

       if ( OpenExcel() and  myFileName != "")      
        
         myWorkExcel.Workbooks.OpenText (myFileName, 866, 1, 1, 2, false, false, false, false, false, true, ";", SetTypeColumns(), 1, "."," ", true, false);
         myWorkBook = myWorkExcel.Workbooks.Application;

         SetHeaderExcelTable();

         remprogress;
         MsgBox("Файл успешно записан");
         myWorkExcel.Visible = true;
       end;                
   OnError(er)
       msgBox(er.Message);
   end;     

end;



/*********************************************************************************************************/
    select = "select t_name,t_number,t_fiid,t_account from dcorschem_dbt c where t_state=0 order by c.t_number,c.t_fiid";
    rs = RSDRecordset( RSDCommand(select));

    count = 0;
        
    while (rs.MoveNext)
      mas_schem     (count) = rs.Value(0);
      mas_schem_id  (count) = rs.Value(1);
      mas_schem_fiid(count) = rs.Value(2);
      mas_schem_acc (count) = rs.Value(3);
      count = count + 1;
    end;
    v_mas_schem = 0;

    mas_type (0) = "Только платежи";
    mas_type (1) = "Платежи и проводки";
    mas_type (2) = "Только ошибочные";
    mas_type (3) = "В документы дня"; 
    mas_type (4) = "Выписка по счету"; 
    v_mas_type = 3;

macro printDocuments ( documents ) 
  
  var nameout = "..\\txtfile\\ReportAccountCorshem" + random(), excel = false; 
  /*VDN 13.08.2015 При вызове из скролинга принудительно переопределяем параметры отчета*/   
  if ( documents != "" )
    if ( gettrue(true, "Записать в Excel?")) excel = true; end;
    InDoc = Unload = false;
    setOutput(nameout);
    /*Определяем период отчета*/
    select = RSDRecordSet("SELECT MIN (p.t_transferdate), MAX (p.t_transferdate) FROM dpmprop_dbt p WHERE (" +documents+ ") AND p.t_debetcredit = 1");
    select.moveNext();
    /*Переприсваиваем даты*/
    dt  = select.value(0);
    dte = select.value(1);

    select = "SELECT rm.t_number, pr.t_transferdate, rm.t_shifroper, rm.t_priority, pr.t_bankcode, rm.t_payerbankname, rm.t_payername, p.t_payeraccount, rm.t_receiverbankname, rm.t_receivername, "+
             "       p.t_receiveraccount, ROUND (p.t_amount, 2) t_amount, pr.t_payfiid, pr.t_corschem, p.t_paymentid, p.t_paymstatus, rm.t_ground, NVL (w.t_direct, CHR (0)) t_direct "+
             // EVG 17/8/2015 Добавил выборку ИНН
             "       , rm.t_payerinn, rm.t_receiverinn "+
             "FROM dpmpaym_dbt p, dpmrmprop_dbt rm, dpmprop_dbt pr, dwlpm_dbt w "+
             "WHERE rm.t_paymentid = p.t_paymentid "+
             "  AND pr.t_paymentid(+) = p.t_paymentid "+
             "  AND w.t_paymentid(+) = p.t_paymentid "+
             /*"  AND w.t_wlpmnum = 0 "+*/
             "  AND pr.t_debetcredit = 1 "+
             "  AND (p.t_receiverbankid != " + {OurBank} + " or p.t_payerbankid != " + {OurBank} + ") "+
             "  AND ( " + documents + " ) "+
             "ORDER BY pr.t_payfiid, "+
             "         pr.t_corschem, "+
             "         NVL (w.t_direct, CHR (0)) DESC, "+
             "         t_amount ";      
    
  else
    if (v_mas_type != 4)
  
      qwery = "-1";
      if (OutDoc)
        qwery = qwery +",1";
      end;
      if (InDoc)
        qwery = qwery + ",0";
      end;

      select = " select rm.t_number,pr.t_transferdate, rm.t_shifroper, rm.T_PRIORITY," 
          +"\n        pr.t_bankcode,rm.t_payerbankname,rm.t_payername,p.t_payeraccount, " 
          +"\n        rm.t_receiverbankname, rm.t_receivername,p.t_receiveraccount,round(p.t_amount,2) t_amount,  " 
          +"\n        pr.t_payfiid,pr.t_corschem,p.t_paymentid,p.t_paymstatus,rm.t_ground, nvl(w.t_direct,chr(0)) t_direct  " 
          +"\n   from dpmpaym_dbt p, dpmrmprop_dbt rm, dpmprop_dbt pr, dwlpm_dbt w " 
          +"\n   where " //p.T_FUTUREPAYERAMOUNT = p.T_FUTURERECEIVERAMOUNT " //22.05.2012 vihrov I-00196771-2 по словам Савченко это условие должно выполняться только для докайн 201 или 16, а для входящиех не обязательно. так что переношу

//          +"\n    AND p.T_ISPLANPAYM <> CHR(88) "
//          +"\n    AND p.T_ISFACTPAYM = CHR(88) "

          +"\n     rm.t_paymentid = p.t_paymentid " 
          +"\n    and pr.t_paymentid(+) = p.t_paymentid " 
          +"\n    and w.t_paymentid(+) = p.t_paymentid ";
          //TAM 24.04.2013 I-00361737-2
          //VDN 14.08.2015 R-614005
          if (not Unload) select = select + " and w.T_WLPMNUM = 0 " end;
 
          select = select
          +"\n    and (pr.t_transferdate between  ? and ? )" 
          +"\n    and pr.t_payfiid = ? " 
          +"\n    and pr.t_corschem = ? " 
          +"\n    and (p.t_receiverbankid != " + {OurBank} + " or p.t_payerbankid != " + {OurBank} + ") " 
          +"\n    and (pr.t_debetcredit in (" + qwery + ")) ";

      if (trim(AccMaskDeb) !="" )
        select = select   + "\n" + " AND (" + ConvertMaskToSQLFormat(AccMaskDeb, "p.t_payeraccount") +")";
      end;


      if (trim(AccMaskKred) != "" )
        select = select   + "\n" + " AND (" + ConvertMaskToSQLFormat(AccMaskKred, "p.t_receiveraccount") +")";
      end;

      /*VDN 14.08.2015 R-614005 Только готовые к выгрузке*/
      if (Unload) 
        select = select + " AND EXISTS (SELECT 1 FROM doprstep_dbt st, doproper_dbt op "+
                          "             WHERE op.t_id_operation = st.t_id_operation "+
                          "               AND LPAD (t_documentid, 34, '0') = p.t_paymentid "+
                          "               AND st.t_symbol = CHR (148) "+
                          "               AND st.t_isexecute = CHR (82) "+
                          "               AND pr.t_propstatus <> 4000) ";
      end;

      select = select +"\n    and ((pr.t_debetcredit = 0 and p.t_dockind in (320, 322)) " 
          +"\n         or " 
          +"\n         (pr.t_debetcredit = 1 and p.t_dockind in (201, 16) and " 
//zmp 04.12.2012 I-00292274 закомментировал на время условие  +"\n                  p.T_FUTUREPAYERAMOUNT = p.T_FUTURERECEIVERAMOUNT and " //22.05.2012 vihrov I-00196771-2 по словам Савченко это условие должно выполняться только для докайн 201 или 16, а для входящиех не обязательно. так что переношу
//          +"\n           p.t_paymstatus not in (1000, 2000) and " 
          +"\n           pr.t_propstatus > 2000 and " 
          +"\n          (p.t_paymstatus >= 3000  " 
          +"\n           or exists " 
          +"\n           (SELECT 1 "  
          +"\n                FROM DPMDOCS_DBT doc, dacctrn_dbt arh "  
          +"\n               WHERE doc.T_PAYMENTID = p.t_paymentid and "
          +"\n                     ARH.T_ACCTRNID = DOC.T_ACCTRNID and "
          +"\n                     arh.T_CHAPTER = 1 and "
          +"\n                     arh.t_account_receiver = ? )))) " 
          +"\n  order by pr.t_payfiid, pr.t_corschem, nvl(w.t_direct,chr(0)) desc, t_amount";

      params = makeArray(SQLParam(":dt"  , dt),
                       SQLParam(":dte"  , dte),
                       SQLParam(":fiid", mas_schem_fiid(v_mas_schem)),
                       SQLParam(":id"  , mas_schem_id  (v_mas_schem)), 
                       SQLParam(":ac"  , shemacc) );

    elif (v_mas_type == 4)

      select =  " SELECT t_account, restina, restinp, debet, kredit, restouta, restoutp, "
           +"\n    t_nameaccount, t_final_date, t_kind_account "
           +"\n  FROM (SELECT t_account, "
           +"\n               CASE "
           +"\n                  WHEN t_kind_account = 'А' "
           +"\n                     THEN ABS "
           +"\n                            (rsb_account.resta (t_account, "
           +"\n                                                  TO_DATE ('" + dt + "', "
           +"\n                                                           'dd.mm.yyyy' "
           +"\n                                                          ) "
           +"\n                                                - 1, "
           +"\n                                                t_chapter, "
           +"\n                                                0 "
           +"\n                                               ) "
           +"\n                            ) "
           +"\n                  ELSE 0 "
           +"\n               END AS restina, "
           +"\n               CASE "
           +"\n                  WHEN t_kind_account = 'А' "
           +"\n                     THEN 0 "
           +"\n                  ELSE ABS "
           +"\n                         (rsb_account.resta (t_account, "
           +"\n                                               TO_DATE ('" + dt + "', "
           +"\n                                                        'dd.mm.yyyy' "
           +"\n                                                       ) "
           +"\n                                             - 1, "
           +"\n                                             t_chapter, "
           +"\n                                             0 "
           +"\n                                            ) "
           +"\n                         ) "
           +"\n               END AS restinp, "
           +"\n               ABS (rsb_account.debeta (t_account, "
           +"\n                                        t_chapter, "
           +"\n                                        TO_DATE ('" + dt + "', 'dd.mm.yyyy'), "
           +"\n                                        TO_DATE ('" + dt + "', 'dd.mm.yyyy') "
           +"\n                                       ) "
           +"\n                   ) debet, "
           +"\n               ABS (rsb_account.kredita (t_account, "
           +"\n                                         t_chapter, "
           +"\n                                         TO_DATE ('" + dt + "', 'dd.mm.yyyy'), "
           +"\n                                         TO_DATE ('" + dt + "', 'dd.mm.yyyy') "
           +"\n                                        ) "
           +"\n                   ) kredit, "
           +"\n               CASE "
           +"\n                  WHEN t_kind_account = 'А' "
           +"\n                     THEN ABS "
           +"\n                            (rsb_account.resta (t_account, "
           +"\n                                                TO_DATE ('" + dt + "', "
           +"\n                                                         'dd.mm.yyyy' "
           +"\n                                                        ), "
           +"\n                                                t_chapter, "
           +"\n                                                0 "
           +"\n                                               ) "
           +"\n                            ) "
           +"\n                  ELSE 0 "
           +"\n               END AS restouta, "
           +"\n               CASE "
           +"\n                  WHEN t_kind_account = 'А' "
           +"\n                     THEN 0 "
           +"\n                  ELSE ABS "
           +"\n                         (rsb_account.resta (t_account, "
           +"\n                                             TO_DATE ('" + dt + "', "
           +"\n                                                      'dd.mm.yyyy' "
           +"\n                                                     ), "
           +"\n                                             t_chapter, "
           +"\n                                             0 "
           +"\n                                            ) "
           +"\n                         ) "
           +"\n               END AS restoutp, "
           +"\n               t_nameaccount, t_final_date, t_kind_account "
           +"\n          FROM daccount_dbt "
           +"\n         WHERE t_chapter = 1 AND t_account = ?) ";

      params = makeArray(SQLParam(":acc",shemacc));
      rs = execSQLselect( select, params, false );

      rs.moveNext();
      restinA = money(rs.value("restinA")); 
      restinP = money(rs.value("restinP"));  
      debet = money(rs.value("debet"));  
      kredit = money(rs.value("kredit"));  
      restoutA = money(rs.value("restoutA"));  
      restoutP = money(rs.value("restoutP"));  
      nameaccount = rs.value("t_nameaccount");  
      FINAL_DATE =sqlDate2date(rs.value("t_FINAL_DATE"));  
      KIND_ACCOUNT = Trim(rs.value("t_KIND_ACCOUNT")); 

      select =    "\n SELECT DISTINCT rm.t_number, rm.t_shifroper, pr.t_transferdate, pr.t_bankcode, "
           +"\n                 rm.t_payerbankname, rm.t_payername, rm.T_PRIORITY, p.t_payeraccount, "
           +"\n                 rm.t_receiverbankname, rm.t_receivername, p.t_receiveraccount, "
           +"\n                 ROUND (p.t_amount, 2) t_amount, pr.t_payfiid, p.t_paymentid, "
           +"\n                 p.t_paymstatus, rm.t_ground, "
           +"\n                 NVL ((SELECT CHR (88) "
           +"\n                         FROM DUAL "
           +"\n                        WHERE arh.t_account_payer = ?), "
           +"\n                      CHR (0) "
           +"\n                     ) t_direct "
           +"\n            FROM dpmpaym_dbt p, "
           +"\n                 dpmrmprop_dbt rm, "
           +"\n                 dpmprop_dbt pr, "
           +"\n                 dpmdocs_dbt doc, "
           +"\n                 dacctrn_dbt arh "
           +"\n           WHERE arh.t_chapter = 1 "
           +"\n             AND arh.t_date_carry = ? "
           +"\n             AND (   arh.t_account_payer = ? "
           +"\n                  OR arh.t_account_receiver = ? "
           +"\n                 ) "
           +"\n             AND doc.t_paymentid = p.t_paymentid "
           +"\n             AND ARH.T_ACCTRNID = DOC.T_ACCTRNID "
           +"\n             AND rm.t_paymentid(+) = p.t_paymentid "
           +"\n             AND pr.t_paymentid(+) = p.t_paymentid "
           +"\n             AND (    pr.t_paymentid(+) = p.t_paymentid "
           +"\n                  AND pr.t_debetcredit = "
           +"\n                         NVL ((SELECT 1 "
           +"\n                                 FROM DUAL "
           +"\n                                WHERE arh.t_account_receiver = ? ),0)"
           +"\n                 ) "
           +"\n        ORDER BY t_direct desc, t_amount ";

      params = makeArray(SQLParam(":acc", shemacc),
                         SQLParam(":dt"  , dt),
                         SQLParam(":accd",shemacc),
                         SQLParam(":acck",shemacc),
                         SQLParam(":accc",shemacc));
    end;
  end;

                                           
  
  initprogress(-1, "Производится подбор документов дня","Производится подбор документов дня" );
  if (documents != "") rs = RsdRecordSet(select); 
  else                 rs = execSQLselect( select, params, false );
  end; 

  if ( excel )
    remprogress;
    var my_report = myExcelReport();

    var separator = ";", i = 1, amount = $0.0;
    println(separator);

    while (rs.MoveNext())
      var payerBank = rs.value("t_receiverbankname");
      if (rs.value("t_direct") == "X") payerBank = rs.value("t_payerbankname"); end;  

      var text = my_report.ClearSymble(string(i), ";")                                + separator +
                 my_report.ClearSymble(string(rs.value("t_number"):r), ";")           + separator +
                 my_report.ClearSymble(string(rs.value("t_shifroper")), ";")          + separator +
                 my_report.ClearSymble(string(date(rs.value("t_transferdate"))), ";") + separator +
                 my_report.ClearSymble(string(money(rs.value("t_amount"))), ";")      + separator +
                 my_report.ClearSymble(string(rs.value("T_PRIORITY")), ";")           + separator +
                 my_report.ClearSymble(string(rs.value("t_bankcode")), ";")           + separator +
                 my_report.ClearSymble(string(payerBank), ";")                        + separator +
                 my_report.ClearSymble(string(rs.value("t_payername")), ";")          + separator +
                 // EVG 18/8/2015 Добавил вывод ИНН
                 my_report.ClearSymble(string(rs.value("t_payerinn")), ";")           + separator +
                 my_report.ClearSymble(string(rs.value("t_payeraccount")), ";")       + separator +
                 my_report.ClearSymble(string(rs.value("t_receivername")), ";")       + separator +
                 // EVG 18/8/2015 Добавил вывод ИНН
                 my_report.ClearSymble(string(rs.value("t_receiverinn")), ";")        + separator +
                 my_report.ClearSymble(string(rs.value("t_receiveraccount")), ";")    + separator +
                 my_report.ClearSymble(string(rs.value("t_ground")), ";")             + separator ; 

      println(text);        
      i = i + 1;      
      amount = amount + money(rs.value("t_amount"));
    end;

    setoutput(null, true);                 
    my_report.cntRecord = i;
    my_report.amountRecord = amount;
    my_report.CopyValueToExcel(nameout); 
  end;

  if ((v_mas_type != 4) and (not excel))
    if (InDoc)
      [  Реестр ответных ЭПД поступивших на корреспондентский счет #################### ###########################################
         за период с  ########## по ##########
       ┌───────┬───────┬──┬──────────┬─────────────┬─┬─────────┬────────────────────────────┬─────────────────────┬────────────────────┬──────────────────────┬────────────────────┬──────────────────────────────────────┐
       │   N   │ Номер │В │   ДПП    │  Сумма      │O│  БИК    │ Наименование               │ Плательщик          │ Счет плательщика   │ Получатель           │ Счет получателя    │        Назначение платежа            │
       │  п/п  │ док-та│и │          │  платежа    │ч│ банка   │ банка корреспондента       │                     │                    │                      │                    │                                      │
       │       ├───────┤д ├──────────┼─────────────┤е│корресп. │                            ├─────────────────────┼────────────────────┼──────────────────────┼────────────────────┼──────────────────────────────────────┤
       │       │       │ о│   Дата   │  Сумма      │р│         │                            │                     │ Счет дебета        │                      │ Счет кредита       │                                      │
       │       │       │ п│ проводки │  проводки   │ │         │                            │                     │                    │                      │                    │                                      │]
       (mas_schem_acc(v_mas_schem),mas_schem(v_mas_schem),date(dt):c:f,date(dte):c:f);   
    else
      [  Реестр начальных ЭПД отправленных с корреспондентского счета #################### ###########################################
         за период с  ########## по ##########
       ┌───────┬───────┬──┬──────────┬─────────────┬─┬─────────┬────────────────────────────┬─────────────────────┬────────────────────┬──────────────────────┬────────────────────┬──────────────────────────────────────┐
       │   N   │ Номер │В │   ДПП    │  Сумма      │О│  БИК    │ Наименование               │ Плательщик          │ Счет плательщика   │ Получатель           │ Счет получателя    │        Назначение платежа            │
       │  п/п  │ док-та│и │          │  платежа    │ч│ банка   │ банка корреспондента       │                     │                    │                      │                    │                                      │
       │       ├───────┤д ├──────────┼─────────────┤е│корресп. │                            ├─────────────────────┼────────────────────┼──────────────────────┼────────────────────┼──────────────────────────────────────┤
       │       │       │ о│   Дата   │  Сумма      │р│         │                            │                     │ Счет дебета        │                      │ Счет кредита       │                                      │
       │       │       │ п│ проводки │  проводки   │ │         │                            │                     │                    │                      │                    │                                      │]
       (mas_schem_acc(v_mas_schem),mas_schem(v_mas_schem),date(dt):c:f,date(dte):c:f);
    end;

  elif (v_mas_type == 4) /* формат выписки */           

        if (KIND_ACCOUNT == "А")        
            KIND_ACCOUNT = "актив";
        else
            KIND_ACCOUNT = "пассив";
        end;

[                            #                                                   

Выписка за : #                                                                                

Лицевой счет: #####################                                                                                
Название: #                                                                                         
                                                                                                  
Дата последней операции по счету: #                                                                                 

Входящий остаток: ###### ###############

 ┌────────┬──────────┬───┬──────────┬──────────────────────────────────────────────────┬─────────────────────────┬───────────────────────────────┐
 │  Номер │   Дата   │Вид│  Номер   │                                                  │           Счет          │                               │
 │ строки │ проводки │оп.│документа │               Содержание операции                │ плательщика/получателя  ├───────────────┬───────────────┤
 │        │          │   │ клиента  │                                                  │                         │      Дебет    │     Кредит    │
 ├────────┼──────────┼───┼──────────┼──────────────────────────────────────────────────┼─────────────────────────┼───────────────┼───────────────┤]

        ({Name_Bank},dt, shemacc, nameaccount,FINAL_DATE,KIND_ACCOUNT,(restinA+restinP):r);

  end;

  count = 0;
  count_paym = 0;
  count_arh = 0;
  sum_paym = $0.0;
  sum_arh = $0.0;

  while( rs and rs.moveNext())

    err = false;

    if (valtype(rs.value(0)) != 26)

      if (v_mas_type != 4)
       if ( ( rs.value("t_direct")   != direct))
         if ( (direct!=" ") )

           [├───────┴───────┴──┴──────────┴─────────────┴─┴─────────┴────────────────────────────┴─────────────────────┴────────────────────┴──────────────────────┴────────────────────┴──────────────────────────────────────┤
            │        ИТОГО документов ########## на сумму ###############                                                                                                                                                      │
            │        ИТОГО проводок   ########## на сумму ###############                                                                                                                                                      │
            └──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
            ]
            (count_paym,sum_paym,count_arh,sum_arh);

           [  Реестр начальных ЭПД отправленных с корреспондентского счета #################### ###########################################
              за период с  ########## по ##########
            ┌───────┬───────┬──┬──────────┬─────────────┬─┬─────────┬────────────────────────────┬─────────────────────┬────────────────────┬──────────────────────┬────────────────────┬──────────────────────────────────────┐
            │   N   │ Номер │В │   ДПП    │  Сумма      │О│  БИК    │ Наименование               │ Плательщик          │ Счет плательщика   │ Получатель           │ Счет получателя    │        Назначение платежа            │
            │  п/п  │ док-та│и │          │  платежа    │ч│ банка   │ банка корреспондента       │                     │                    │                      │                    │                                      │
            │       ├───────┤д ├──────────┼─────────────┤е│корресп. │                            ├─────────────────────┼────────────────────┼──────────────────────┼────────────────────┼──────────────────────────────────────┤
            │       │       │ о│   Дата   │  Сумма      │р│         │                            │                     │ Счет дебета        │                      │ Счет кредита       │                                      │
            │       │       │ п│ проводки │  проводки   │ │         │                            │                     │                    │                      │                    │                                      │
           ](mas_schem_acc(v_mas_schem),mas_schem(v_mas_schem),date(dt):c:f,date(dte):c:f);
           count = 0;
           count_paym = 0;
           count_arh = 0;
           sum_paym = $0.0;
           sum_arh = $0.0;
         end;
         direct      = rs.value("t_direct");
       end;
      else
         direct      = rs.value("t_direct");
      end;

      count = count + 1;
      count_paym = count_paym + 1;
      sumcurpaym = + money(rs.value("t_amount"));
      sum_paym = sum_paym + sumcurpaym;
      if (v_mas_type != 4)
        select = "select * from "
          +"\n (SELECT ad.t_account_payer,ad.t_account_receiver, ad.t_sum_receiver t_sum, ad.t_date_carry " 
          +"\n               FROM DPMDOCS_DBT doc, dacctrn_dbt ad "
          +"\n              WHERE (doc.T_PAYMENTID = ? and "
          +"\n                    ad.T_ACCTRNID = DOC.T_ACCTRNID and "
          +"\n                    ad.T_STATE = 1 and "   
          +"\n                    ad.T_CHAPTER = 1 )) " 

          +"\n ORDER BY t_date_carry "; 


        params = makeArray(SQLParam(":id1"  , rs.value("t_paymentid")),
                           SQLParam(":id2"  , rs.value("t_paymentid")));
                                                                         
        rs_arh = execSQLselect( select, params, false );

        sum = $0.0;
        sum47416 = $0.0;
        cnt = 0;                                           
        while( rs_arh.moveNext())

          if (valtype(rs_arh.value(0)) != 26)
            arhdoc[cnt] = makeArray(date(rs_arh.value("t_date_carry")),
                          money(rs_arh.value("t_sum")),
                          rs_arh.value("t_account_payer"),
                          rs_arh.value("t_account_receiver"));
            cnt = cnt + 1;

            if ( (shemacc == rs_arh.value("t_account_payer")) 
               or
                 (shemacc == rs_arh.value("t_account_receiver"))  
               )
              sum = sum + money(rs_arh.value("t_sum"));
              count_arh = count_arh + 1;
              sum_arh = sum_arh + money(rs_arh.value("t_sum"));
            end;
             /* постановка на картотеку невыясненных  */
             if  ((substr(rs_arh.value("t_account_receiver"),1,5   ) == "47416")  
                or
                 (substr(rs_arh.value("t_account_payer"),1,5) == "47417"))  
                 sum47416 = sum47416 + money(rs_arh.value("t_sum"));
             end;     
          end;
        end;

        err = 0;
        mess = "";
        sum47416 = round(sum47416,2);
        sum = round(sum,2);
        sumcurpaym =round(sumcurpaym,2);

        if (documents == "")
          if ( sum != sumcurpaym ) 
            err = 1;
            mess = mess + 
            "Внимание!!! Сумма проводок не равна сумме платежа ";
          elif ( ( (direct=="X") and (shemacc != rs_arh.value("t_account_payer"))    and (substr(rs_arh.value("t_account_payer"),1,5   ) != "47416" ) ) 
             or
             ( (direct!="X") and (shemacc != rs_arh.value("t_account_receiver")) and (substr(rs_arh.value("t_account_receiver"),1,5) != "47417" ) ) 
             )
            err = 1;                                                                     
            mess = mess + 
            "Внимание!!! Счет проводки не соответствует схеме расчетов";
          end;

          if ((rs.value("t_paymstatus")!=32000) and (sum47416 == $0.0))
            SQL = " SELECT OS.T_NAME "
             + "\n  FROM DOPRSTEP_DBT STEP,  "
             + "\n       DOPRDOCS_DBT DOCS,  "
             + "\n       DOPROPER_DBT OO,  "
             + "\n       DOPROSTEP_DBT OS, "
             + "\n       dpmpaym_dbt pm  "
             + "\n WHERE pm.T_PAYMENTID = ? "
             + "\n   AND OO.T_DOCKIND = pm.t_dockind  "
             + "\n   AND OO.T_DOCUMENTID = LPAD(pm.T_PAYMENTID, 34, 0)  "
             + "\n   AND DOCS.T_DOCKIND      = 1  "
             + "\n   AND DOCS.T_ID_OPERATION = OO.T_ID_OPERATION  "
             + "\n   AND STEP.T_ID_OPERATION = DOCS.T_ID_OPERATION  "
             + "\n   AND STEP.T_ISEXECUTE    = 'R'  "
             + "\n   AND OS.T_BLOCKID = STEP.T_BLOCKID "
             + "\n   AND OS.T_NUMBER_STEP = STEP.T_NUMBER_STEP ";
          
            params = makeArray(SQLParam(":id" , rs.value("t_paymentid")));
            rs_step = execSQLselect( SQL, params, false );
            err = 1;
            mess = mess + 
            "Внимание!!! Документ не закрыт";
            if (rs_step.movenext())
              mess = mess + " и ожидает выполнения шага \"" + rs_step.value("T_NAME") +" \"";
            end;
          end;
        end;
      end; /* (v_mas_type != 4)*/

      if (((err==1) and (v_mas_type == 2)) or (v_mas_type != 2))                   
          GroundArray =rs.value("t_ground");
       if (direct == "X")
          PayerBankArray=rs.value("t_payerbankname");
          Coraccount = rs.value("t_receiveraccount");
          Pdebet = money(rs.value("t_amount"));
          Pkredit =""
       else
          PayerBankArray=rs.value("t_receiverbankname");
          Coraccount = rs.value("t_payeraccount");
          Pdebet = "";
          Pkredit =money(rs.value("t_amount"));
       end;
          PayerArray=rs.value("t_payername");
          ReceiverArray=rs.value("t_receivername");

        if (v_mas_type != 4)        
          [├───────┼───────┼──┼──────────┼─────────────┼─┼─────────┼────────────────────────────┼─────────────────────┼────────────────────┼──────────────────────┼────────────────────┼──────────────────────────────────────┤
           │#######│#######│##│##########│#############│#│#########│############################│#####################│####################│######################│####################│######################################│]
           (count,
            rs.value("t_number"):r,
            rs.value("t_shifroper"),
            date(rs.value("t_transferdate")),
            money(rs.value("t_amount")),
            rs.value("T_PRIORITY"),
            rs.value("t_bankcode"),
            PayerBankArray:w,
            PayerArray:w,
            rs.value("t_payeraccount"),
            ReceiverArray:w,
            rs.value("t_receiveraccount"),
            GroundArray:w);
        elif (v_mas_type == 4)
/*
  ┌────────┬──────────┬───┬──────────┬──────────────────────────────────────────────────┬─────────────────────────┬───────────────────────────────┐
  │  Номер │   Дата   │Вид│  Номер   │                                                  │           Счет          │                               │
  │ строки │ проводки │оп.│документа │               Содержание операции                │ плательщика/получателя  ├───────────────┬───────────────┤
  │        │          │   │ клиента  │                                                  │                         │      Дебет    │     Кредит    │
  ├────────┼──────────┼───┼──────────┼──────────────────────────────────────────────────┼─────────────────────────┼───────────────┼───────────────┤]
*/

[│########│##########│###│##########│##################################################│#########################│###############│###############│]
        (count,dt,rs.value("t_shifroper"),rs.value("t_number"),rs.value("t_ground"):w, Coraccount,Pdebet,Pkredit);
        mess="";
        end; /*  (v_mas_type != 4)*/

        if  (  (v_mas_type == 1) or
             ((v_mas_type == 3) and ((cnt > 1) or (sum47416 != $0))) or 
             ((v_mas_type == 2) and (err == 1))
           ) // По документам и проводкам и Ошибочные

        i = 0;
          while( i < cnt)
              [│       │       │  │##########│#############│ │         │                            │                     │####################│                      │####################│                                      │]
              (arhdoc[i][0],
               arhdoc[i][1],
               arhdoc[i][2],
               arhdoc[i][3]);
              i = i + 1;
          end;
        end;

        if (mess!="")
            [│#                                                                                                                                                                                                            │]
            (mess);
        end;
        useprogress(count);
      end;

    end;
  end;

  if (v_mas_type != 4)
            [├───────┴───────┴──┴──────────┴─────────────┴─┴─────────┴────────────────────────────┴─────────────────────┴────────────────────┴──────────────────────┴────────────────────┴──────────────────────────────────────┤
             │        ИТОГО документов ########## на сумму ###############                                                                                                                                                      │
             │        ИТОГО проводок   ########## на сумму ###############                                                                                                                                                      │
             └──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘]
            (count_paym,sum_paym,count_arh,sum_arh);

  elif (v_mas_type == 4)

[└────────┴──────────┴───┴──────────┴──────────────────────────────────────────────────┴─────────────────────────┴───────────────┴───────────────┘
Всего документов: ########                                                                                                                               
Итого обороты:                                                                                                    ############### ###############
Исходящий остаток: ###### ###############
](count,debet:r, kredit:r,KIND_ACCOUNT,(restoutA+restoutP):r);
  end;
  remprogress;
  if ( (documents != "") and ( not excel) ) setOutput(null, true); ViewFile(nameout); end;
onerror(x);
end;

Class (TRecHandler) TParm(LbrName)

    InitTRecHandler ("date1", (LbrName), true);
    this.("StartDate") = dt;
    this.("EndDate") = dte;
    this.("CorScheme") = mas_schem(v_mas_schem);
    this.("ReportType") = mas_type(v_mas_type);
    this.("InDoc") = "X";
    this.("OutDoc") = "X";
    this.("Unload") = "X";
    this.("AccMaskDeb") = AccMaskDeb;
    this.("AccMaskKred") = AccMaskKred;

    Macro Handler ( dlg, cmd, id, key )

      if ((cmd == DLG_REMFOCUS) and (id == FldIndex ("StartDate")))
       if (dlg.("StartDate")> {curdate})
        MemoryError(5827/*, "сообщение об ошибке"*/);
        DisplayError();
        return CM_CANCEL;
       end;
       dlg.("EndDate") = dlg.("StartDate");
       return CM_DEFAULT;
      elif (cmd == DLG_KEY) 
        if ((key == Key_F2) or (key == Key_F9))
           dt = dlg.("StartDate");
           dte = dlg.("EndDate");
           shemacc = Trim (mas_schem_acc(v_mas_schem));
           AccMaskDeb = dlg.("AccMaskDeb");
           AccMaskKred = dlg.("AccMaskKred");
           printDocuments("");
           //Getstring(select);
           return CM_SAVE;
        elif (key == Key_F3)
         if (id == FldIndex ("StartDate")) 
           dlg.("StartDate") = GetDateByCalendar (dt);
         elif (id == FldIndex ("EndDate"))
           dlg.("EndDate") = GetDateByCalendar (dte);
         elif (id == FldIndex ("CorScheme"))
               choise = menu(mas_schem, "Выберите схему расчетов", "Выберите схему расчетов:");
           if (choise >= 0)
             v_mas_schem = choise;
             dlg.("CorScheme") = mas_schem(v_mas_schem);
           end;
         elif (id == FldIndex ("ReportType"))
               choise = menu(mas_type, "Выберите формат отчета", "Выберите формат отчета:");
           if (choise >= 0)
            v_mas_type = choise;
            dlg.("ReportType")= mas_type(v_mas_type);
           end;
         end;
        elif (key == KEY_SPACE)
         if (id == FldIndex ("InDoc"))
           if (InDoc) dlg.("InDoc") = ""; InDoc = false; else dlg.("InDoc") = "X"; InDoc = true; end;
         elif (id == FldIndex ("OutDoc"))
           if (OutDoc) dlg.("OutDoc") = ""; OutDoc = false; else dlg.("OutDoc") = "X"; OutDoc = true; end;
         elif (id == FldIndex ("Unload"))
           if (Unload) dlg.("Unload") = ""; Unload = false; else dlg.("Unload") = "X"; Unload = true; end;
         end;

        end;
      end;
       return CM_DEFAULT;
    End;

    Macro Run
        return RunDialog (this, R2M (this, "Handler"));
    End;
End;


Macro MkDatePanel( lbr )

Var     rc = lbr.AddPanel( "Date1", 40, 12, 60, 11, lbr.EColour.SHLP, lbr.EFRame.UNARY ),
        elem;

        rc.StatusLine = "ESC Выход F2/F9 Сохранить";

        elem = rc.AddLabel( 3, 2, "Начало периода:");
        elem = rc.AddField( 21, 2, lbr.EFieldType.EDIT, lbr.EFocus.YES, lbr.EDataType.V_DATE, "StartDate",10 ); 

        elem = rc.AddLabel( 3, 3, "Конец периода:");
        elem = rc.AddField( 21, 3, lbr.EFieldType.EDIT, lbr.EFocus.YES, lbr.EDataType.V_DATE, "EndDate",10 );   
        
        elem = rc.AddLabel( 3, 4, "Схема расчетов");
        elem = rc.AddField( 21, 4, lbr.EFieldType.NOEDIT, lbr.EFocus.YES, lbr.EDataType.V_STRING, "CorScheme",35 );     

        elem = rc.AddLabel( 3, 5, "Вид отчета");
        elem = rc.AddField( 21, 5, lbr.EFieldType.NOEDIT, lbr.EFocus.YES, lbr.EDataType.V_STRING, "ReportType",35 );    

        elem = rc.AddLabel( 3, 6, "Начальные  документы");
        elem = rc.AddField( 21, 6, lbr.EFieldType.NOEDIT, lbr.EFocus.YES, lbr.EDataType.V_STRING, "OutDoc",1 ); 

        elem = rc.AddLabel( 3, 7, "Ответные документы");
        elem = rc.AddField( 21, 7, lbr.EFieldType.NOEDIT, lbr.EFocus.YES, lbr.EDataType.V_STRING, "InDoc",1 );  

        elem = rc.AddLabel( 3, 8, "Маска счета плательщика");
        elem = rc.AddField( 21, 8, lbr.EFieldType.EDIT, lbr.EFocus.YES, lbr.EDataType.V_STRING, "AccMaskDeb",35 );      

        elem = rc.AddLabel( 3, 9, "Маска счета получателя");
        elem = rc.AddField( 21, 9, lbr.EFieldType.EDIT, lbr.EFocus.YES, lbr.EDataType.V_STRING, "AccMaskKred",35 );     

        elem = rc.AddLabel( 3, 11, "Только готовые к выгрузке");
        elem = rc.AddField( 21, 11, lbr.EFieldType.NOEDIT, lbr.EFocus.YES, lbr.EDataType.V_STRING, "Unload",1 );        

end;

Macro MkLbrFile

Var  LbrName = "..\\txtfile\\panel"+usernumber()+".lbr",
     lbr = TLbrFile( LbrName, "C" );
     MkDatePanel( lbr );
     lbr.Save();
     lbr = NULL;
     return LbrName;
end;

/*********************************************************************************************/
//Println(select);        

/*Точка входа*/
/*VDN 13.08.2015 Проверка на вызов с массового режима*/
if (not GetDialogFlag())
  var inter_mode = SetDialogFlag(1);  
else
  Var LbrName = MkLbrFile();
  Var Parm = TParm(LbrName);
  if ( not Parm.Run () )
    Exit (1);
  end;
end;


