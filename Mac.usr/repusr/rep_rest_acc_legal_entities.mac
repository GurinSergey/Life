// -------------------------------------------------------------------------------------------------
// @filename: rep_rest_acc_legal_entities.mac
// @author  : Гурин С.
// @desc    : Остатки на расчетных счетах юридических лиц на отчетную дату
// @request : R-643476-2
// @modify  : none 
// -------------------------------------------------------------------------------------------------
import RSD, "ldmklbr.mac", "KeyCodes.mac", globals, activeX, lib_sqltools, RCW, Rsexts;
private var StatusBar = "Enter Выполнить ESC Выход"; 
private var dateReport = {Curdate};
 
private class WorkFile ( cntRecord )

    private var countRecord = cntRecord;
    private var myWorkBook;
    private var myWorkExcel;
    private var myWorkSheet;                   

    /*Определение рабочей директории временных файлов*/
    private macro getWorkDirName() : string
      var DirName:string = "", 
          StrErr :string = "";

      GetRegistryValue( "BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR", V_STRING, DirName, StrErr );        
      if( DirName )     
        if( SubStr(DirName, 1, 1) == "." ) DirName = "$" + GetCurDir(TRUE) + replace (DirName, "..",""); end;     
        if (existFile(DirName))  return DirName;  end;
      end;

      DirName = "$" + GetEnv("TEMP");

      if( NOT DirName ) DirName = "$" + GetEnv("TMP"); end;
      if (existFile(DirName)) return DirName; end;

      msgbox("Ошибка поиска папки для временных файлов на терминале");

      return "";
    end;

    /*Копирование файла на терминал*/
    private macro copyFileToTerminal (Name_file)
      var Templs_Dir_Term = GetWorkDirName();

      var TermFileName = toAnsi(Name_file);
      var SPFileName;

      if ( Templs_Dir_Term == "" )  return "";  end;
      SPFileName = "..\\txtfile\\" + Name_file;

      if (not existFile(SPFileName)) MsgBox(string("Транспортный временный файл не найден: |", SPFileName)); return ""; end;
      if( not CopyFile(SPFileName, Templs_Dir_Term + "\\" + TermFileName) ) RunError("Ошибка при передаче файла на терминал\n" + Templs_Dir_Term + "\\" + TermFileName); end;

      return subStr(Templs_Dir_Term + "\\" + TermFileName, 2);      
    end;

    /*Определение формата загружаемых данных*/
    private macro setTypeColumns();
      var result_arr = TArray(true), i;
 
      for(i, 1, 11)
        var templs_arr = TArray(true);         
        templs_arr(0) = i;                                       
        //if (inList(i,1,2,4))
        if (inList(i,5,6))
           templs_arr(1) = 1;
        else
           templs_arr(1) = 2;
        end;

        result_arr(i - 1) = templs_arr;
      end; 

      return result_arr;
    end;          

    /*Формирование и открытие файла Excel*/
    private macro openExcel()
      private var objectXls, WorkExcel;

      objectXls = CreateObject ("rsax", "TRsAxServer", string("RsAxServer", UserNumber()), IsStandAlone());
      WorkExcel = objectXls.CreateComObject ("Excel.Application"); 

      myWorkExcel = WorkExcel;

      return true;

    OnError(er) 
      return false;
    end;

    /*Заполнение заголовков столбцов, формирование сетки таблицы*/
    private macro setHeaderExcelTable()
      var i; 
      myWorkBook.Sheets(1);
      myWorkSheet = myWorkBook.ActiveSheet();

      myWorkSheet.Cells(1,  1).Value  = "Валюта";
      myWorkSheet.Cells(1,  2).Value  = "Номер балансового счета";
      myWorkSheet.Cells(1,  3).Value  = "Номер лицевого счета";
      myWorkSheet.Cells(1,  4).Value  = "Наименование лицевого счета";
      myWorkSheet.Cells(1,  5).Value  = "Остаток в рублях";
      myWorkSheet.Cells(1,  6).Value  = "Остаток в валюте";
      myWorkSheet.Cells(1,  7).Value  = "Наращенные проценты в рублях";
      myWorkSheet.Cells(1,  8).Value  = "Отрасли";
      myWorkSheet.Cells(1,  9).Value  = "% ставка";
      myWorkSheet.Cells(1, 10).Value  = "Дата окончания по договору";
      myWorkSheet.Cells(1, 11).Value  = "Страна";
     
      for (i, 1, 11)
        myWorkSheet.Cells(1, i).HorizontalAlignment = 3;
        myWorkSheet.Cells(1, i).Font.Bold = true; 
        myWorkSheet.Columns(i).EntireColumn.AutoFit;
      end; 

      myWorkSheet.Range("A1:K" + (countRecord + 1)).Borders.Weight = 2;  
      myWorkSheet.Range("A1:K1").Interior.Color = #B5B5B5;

      return true;

     OnError
       return false;
     end;     

     macro createExcelReport( fileNameReport )
       var fileNameRep = copyFileToTerminal( fileNameReport );

       if ( fileNameRep == "" or (not openExcel()) )
         RunError("Ошибка формирования файла");
       end;

       myWorkExcel.Workbooks.OpenText (fileNameRep, 866, 1, 1, 2, false, false, false, false, false, true, ";", setTypeColumns(), 1, "."," ", true, false);
       myWorkBook = myWorkExcel.Workbooks.Application;

       setHeaderExcelTable();
         
       myWorkExcel.Visible = true;
     end;
end;

private class Report( dateR )
    private var dateReport = dateR;
    private var recordTable;
    private var fileNameReport = "rest_acc_legal_entities" + date();
    private var countRecord = 0;
    private var separator = ";";     

    private macro printExeption( error )
      msgBox(error.Message);
    end;     

    private macro getRsb()
      startQueryCapture ();
      [
          SELECT   DF.T_CCY ccy,
                   ACC.T_BALANCE balance,
                   ACC.T_ACCOUNT acc,
                   ACC.T_NAMEACCOUNT nameacc,
                   nvl(restNat.t_Rest, 0) restn,
                   nvl(restCur.t_Rest, 0) restc,
                   ' ' percent,
                   (SELECT   nvl(max(attr.T_NAMEOBJECT),' ')
                      FROM   dobjatcor_dbt cor, dobjattr_dbt attr
                     WHERE       cor.T_OBJECT = LPAD (acc.t_client, 10, '0')
                             AND cor.T_OBJECTTYPE = 3
                             AND cor.T_GROUPID = 17
                             AND cor.T_GENERAL = 'X'
                             AND cor.T_GROUPID = attr.T_GROUPID
                             AND cor.T_OBJECTTYPE = attr.T_OBJECTTYPE
                             AND cor.T_ATTRID = attr.T_ATTRID
                             AND ROWNUM = 1)
                      sector,
                   ' ' rate,
                   ' ' contract,
                   (SELECT   nvl(max(cntr.t_name),' ')
                      FROM   dparty_dbt dp, dcountry_dbt cntr
                     WHERE       DP.T_PARTYID = ACC.T_CLIENT
                             AND cntr.T_CODELAT3 = DP.T_NRCOUNTRY
                             AND DP.T_NRCOUNTRY != CHR (1))
                      country
            FROM   daccount_dbt acc,
                   dfininstr_dbt df,
                   drestdate_dbt restCur,
                   drestdate_dbt restNat
           WHERE       ACC.T_CODE_CURRENCY = DF.T_FIID
                   AND DF.T_AVOIRKIND = 0
                   AND ACC.T_OPEN_DATE <= ?
                   AND (ACC.T_CLOSE_DATE >= ?
                        OR ACC.T_CLOSE_DATE =
                             TO_DATE ('01.01.0001', 'dd.mm.yyyy'))
                   AND restCur.t_AccountID(+) = acc.t_AccountID
                   AND restCur.t_RestCurrency(+) = acc.t_Code_Currency
                   AND restCur.t_RestDate(+) =
                         RSI_RSB_ACCOUNT.GetAccLastRestDate (acc.t_AccountID,
                                                             acc.t_Code_Currency,
                                                             ?)
                   AND restNat.t_AccountID(+) = acc.t_AccountID
                   AND restNat.t_RestCurrency(+) = 0
                   AND restNat.t_RestDate(+) =
                         RSI_RSB_ACCOUNT.GetAccLastRestDate (acc.t_AccountID,
                                                             0,
                                                             ?)
                   AND REGEXP_LIKE (ACC.T_ACCOUNT, '^401|^402|^403|^404|^405|^406|^407|^40802|^40807|^40821')
        ORDER BY   ACC.T_ACCOUNT
      ];

      var cmd = RsdCommand (endQueryCapture ());
      cmd.AddParam("", RSDBP_IN, dateReport);
      cmd.AddParam("", RSDBP_IN, dateReport);
      cmd.AddParam("", RSDBP_IN, dateReport);
      cmd.AddParam("", RSDBP_IN, dateReport);

      recordTable = RsdREcordset(cmd);

      return true;

    onError( e )
       printExeption ( e );
       return false;
    end;    

    private macro setToFile()      
       setoutput("..\\txtfile\\" + fileNameReport); 

       println(separator);
        
       while ( recordTable.moveNext() )
         var text = "", i;

         for (i, 1, 11) text = text + recordTable.value(i - 1) + separator; end;
         println(text);

         countRecord = countRecord + 1;
         useprogress(countRecord);
       end;
       setoutput(null, true);       

    end;

    macro createReport()
      initProgress(-1, "", "Ожидайте, формируется выборка");
      getRsb();                                             
      remProgress;

      initProgress(-1, "", "Ожидайте, формируется отчет");
      setToFile();      

      var excelFile = WorkFile( countRecord );  
      excelFile.createExcelReport( fileNameReport );    

      remProgress;     
    end; 
end;

if (getDate(dateReport,"Дата отчета"))
   if (dateReport > {Curdate})
      msgbox ("Дата отчета не может быть больше текущей");
      exit();
   end; 
   Report(dateReport).createReport();    
end;
exit();




