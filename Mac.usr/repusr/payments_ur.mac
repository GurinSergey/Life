/**********************************************************************************************************************
  Название макроса: payments_ur.mac
  Описание        : Отчёт по входящим платежам юр.лиц из других банков
                          по исходящим платежам в пользу юр.лиц из других банков  
  Номер заявки    : C-25851 от 19.12.2013
  Автор           : DPN
  Изменения       : - 
**********************************************************************************************************************/

           
import rcw, rsexts, RSD;
import globals, oralib;
import "fg_Life_parm.mac";
import BankInter;
import  likePy;
import Календарь;
import RsbFormsInter;
import "FNS_lib.mac";

const TEXTDIR_REESTR = "BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR";

const BIC_EXV            = "046311808";
const BIC_EXV_fVolgograd = "041806835";
const BIC_EXV_fAngeles   = "046375825";
const BIC_EXV_fVoronez   = "042007755";
const BIC_EXV_fUlianovsk = "047308902";
const BIC_EXV_Stavropol  = "040702756";

var input = "input";
var output = "output";
var bName = "txtRep";
var lname = "";
var  obBook, ex, ob, obSheet, valueReg;

macro SetTypeColumns(aw:tarray);
    var w1=tarray(true);
    var w2=tarray(true);
    var w3=tarray(true);  
    var w4=tarray(true);
    var w5=tarray(true);
    var w6=tarray(true);
    var w7=tarray(true);

    w1(0)=1; w1(1)=2; 
    w2(0)=2; w2(1)=1; 
    w3(0)=3; w3(1)=1; 
    w4(0)=4; w4(1)=1; 
    w5(0)=5; w5(1)=1; 
    w6(0)=6; w6(1)=1; 
    w7(0)=7; w7(1)=1; 

    aw(0)=w1;
    aw(1)=w2;
    aw(2)=w3;
    aw(3)=w4;
    aw(4)=w5;
    aw(5)=w6;
    aw(6)=w7;

end;
MACRO IsDigitNumber( Number )
    var stat = 0, i = 1, ch, DigitString = "0123456789,;'";
    while( (not stat) and (i <= strlen(Number)) )
        ch = SubStr( Number, i, 1 );
        if( not Index( DigitString, ch ))
          stat = 1;
        end;
        i = i + 1;
      end;
  return stat;
END;

private macro checkStr(str) 
  var i:integer = 0;
  var delim = ",";
  var _str = "";
  var f = split(trim(str),delim);
      while (i < f.size(f))
          f(i) = strsubst(f(i),strfor(13),"");
          f(i) = strsubst(f(i),strfor(10),"");
          _str = _str + "'"+trim(f(i))+"'"+",";
          i = i + 1;      
      end; 
  return trim(_str);
end;

class infoObject()
    var bDate = {curdate};
    var eDate = {curdate};
    var type = true; //true-исходящий платёж, false-входящий  платёж
    var bic = "";

    macro BICNormalizer()
        if(bic == "")
            msgbox("Ошибка! Не заданы БИКи банков!");
            exit();
        else
            bic = StrSubst ( bic, ".", "," );
            bic = StrSubst ( bic, ";", "," );
            bic = checkStr(bic);
            if(IsDigitNumber(bic) == 1)
                msgbox("Ошибка! Проверьте корректность БИКов!");
                exit();
            end;
            while ((substr(bic, strlen(bic)) ==",") or (substr(bic, strlen(bic)) ==";") )
                bic = substr(bic, 1,(strlen(bic) - 1));
            end;
        end;
    end;
end;
macro chekReestrRead(m_name:string, m_status:integer, m_err:integer)
    if((m_status == V_UNDEF) or (m_err != 0))
       msgbox("Ошибка получения значения настройки реестра " + m_name + " \n Процедура GetRegistryValue вернула код ошибки "+m_err);
       exit(0);
    end;
end;
macro regOption(m_reestrName:string):string
    private var m_errCode :integer = NULL;
    private var m_statusGetRegistry :integer = NULL;
    private var m_zna4enie          :string  = NULL;
    if (m_reestrName == "")
        msgbox("Не задана строка реестра!");
        exit(0)
    end;
    m_statusGetRegistry = GetRegistryValue(m_reestrName, V_STRING, m_zna4enie, m_errCode);
    chekReestrRead(m_reestrName, m_statusGetRegistry, m_errCode);
    return(m_zna4enie);
end;

macro createUniqueFile(BeginName, lastName)
    private var ff:string = BeginName +{oper}+"_"+date+"_"+time;
    private var file_ext:string = ".txt";
    private var tempFileName = regOption(TEXTDIR_REESTR);
    tempFileName = tempFileName + "\\" + ff;
    var tempFileNameBezPuti = ff;
    tempFileName = StrSubst ( tempFileName, ".", "_" );
    tempFileName = StrSubst ( tempFileName, ":", "_" );
    tempFileName = StrSubst ( tempFileName, " ", "_" );
    tempFileName = tempFileName + file_ext;
    tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, ".", "_" );
    tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, ":", "_" );
    tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, " ", "_" );
    tempFileNameBezPuti = tempFileNameBezPuti + file_ext;
    if (substr(tempFileName,1,2) == "__")
        tempFileName=".."+substr(tempFileName,3)
    end;
    lastName = tempFileNameBezPuti;
    setParm(1, lastName);
    SetOutPut(tempFileName, false);
end;

macro title(object: infoObject)
    if (object.type == false)
        println("Исходящие платежи в пользу юридических лиц из других банков");
        println(""); 
        println("ID платежа┼Счет плательщика┼Счет получателя┼ИНН получателя┼Банк получателя┼Наименование получателя|┼Основание платежа"); 

    elif (object.type == true)
        println("Входящие платежи от юридических лиц из других банков");
        println("");
        println("ID Платежа┼Счет плательщика┼Счет получателя┼ИНН плательщика┼Банк плательщика┼Наименование плательщика┼Основание платежа");        
     end;
end;

macro FormatExcel(fileName:String);
    private var sel_range;
  
    obSheet = ex.Sheets(1);
    obSheet.Cells.Font.Name = "Arial";
    obSheet.Cells.Font.Size = 10;
    obSheet.Cells.NumberFormat = "####################";
     
    obSheet.Columns("A:A").ColumnWidth = 12;
    obSheet.Columns("B:B").ColumnWidth = 22;
    obSheet.Columns("C:C").ColumnWidth = 22;
    obSheet.Columns("D:D").ColumnWidth = 18;
    obSheet.Columns("E:E").ColumnWidth = 50;
    obSheet.Columns("F:F").ColumnWidth = 50;
    obSheet.Columns("G:G").ColumnWidth = 50;

    sel_range = obSheet.Range("A3:G3"); 
    sel_range.HorizontalAlignment = -4108;//xlCenter;
    sel_range.VerticalAlignment = -4108;//xlCenter;
    sel_range.WrapText = True;
    sel_range.Font.Bold = True;//FontStyle = "полужирный";
   
    sel_range = obSheet.Range("A1:G1");
    sel_range.HorizontalAlignment = -4131;//xlLeft;
    sel_range.VerticalAlignment = -4108;//xlCenter;
    sel_range.MergeCells = True;
    sel_range.Font.Bold = True;//FontStyle = "полужирный";
    obSheet.Range("A4").Select;
    ex.ActiveWindow.FreezePanes = True;
    ex.visible = true;
end;

macro transToExcel(tempFileName, type)
    private var m_errCode :integer = NULL;
    var aw = tarray(true);
    var obBook, forExcel;
   
    SetTypeColumns(aw); 
    ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
    ex = ob.CreateComObject ("Excel.Application",true);
    ex.visible = false;
    if (type == true)
        forExcel =input+{oper}+"_"+date+"_"+time; 
    else
        forExcel =output+{oper}+"_"+date+"_"+time;
    end;  
    
    forExcel = StrSubst ( forExcel, ".", "_" );
    forExcel = StrSubst ( forExcel, ":", "_" );
    forExcel = StrSubst ( forExcel, " ", "_" );
    forExcel ="$c:\\rspar\\"+forExcel;
    if (not CopyFile(tempFileName, forExcel))
        println ("Error Copy file");
    end;
    forExcel = substr(forExcel, 2);
    obBook = ex.Workbooks.opentext(forExcel, 866, 1, 1,2,true,false,false,false,false,true,"┼",aw,1,"."," ",true,false);
end;


macro maker(object: infoObject)
    var select, query, param;
    InitProgress(-1,"","Идёт обработка...");
    if(object.type == false)
        select = " SELECT PAYM.T_PAYMENTID id, PAYM.T_PAYERACCOUNT pay_acc, PAYM.T_RECEIVERACCOUNT rec_acc,            " + 
                 "        usr_uf_getinn(prop.t_receiverinn) inn, prop.T_RECEIVERBANKNAME bank,                         " + 
                 "        PROP.T_RECEIVERNAME name, PROP.T_GROUND ground                                               " +
                 "        FROM dpmpaym_dbt paym, dpmrmprop_dbt prop, dpmdocs_dbt docs, dpmprop_dbt ob, dacctrn_dbt trn " +
                 " WHERE ob.t_codekind = 3                                                                             " +
                 " and ob.T_DEbetCREDIT = 1                                                                            " +
                 " and ob.t_propstatus = 32000                                                                         " +
                 " AND OB.T_BANKCODE IN (" + object.bic + ")                                                           " +
                 " AND PAYM.T_PAYMENTID = OB.T_PAYMENTID                                                               " +
                 " AND paym.t_dockind IN (201, 202)                                                              " +
                 " AND (PAYM.T_RECEIVERACCOUNT LIKE '408%'                                                       " +
                 " OR   PAYM.T_RECEIVERACCOUNT LIKE '407%' AND LENGTH (usr_uf_getinn(prop.t_receiverinn)) = 10)  " +
                 " AND PAYM.T_PAYMENTID = DOCS.T_PAYMENTID                                                       " +
                 " AND DOCS.T_ACCTRNID = TRN.T_ACCTRNID                                                          " +
                 " AND TRN.T_DATE_CARRY BETWEEN :1 AND :2                                                        " +
                 " AND paym.T_VALUEDATE <= :3                                                                    " +
                 " AND PAYM.T_PAYMENTID = PROP.T_PAYMENTID                                                       " +
                 " AND PROP.T_PAYERCHARGEOFFDATE BETWEEN :4 and :5                                               " +
                 " AND TRN.T_CHAPTER = 1                                                                         " +
                 " AND TRN.T_ACCOUNT_PAYER = PAYM.T_PAYERACCOUNT                                                 " +
                 " AND PAYM.T_PAYMSTATUS = 32000                                                                 " +
                 " AND PAYM.T_PAYERBANKID != PAYM.T_RECEIVERBANKID                                               " +        
                 " ORDER BY bank                                                                                 " ;
    
        param = makeArray (SQLParam ( "1", object.bDate),
                          SQLParam ( "2", object.eDate),
                          SQLParam ( "3", object.eDate),
                          SQLParam ( "4", object.bDate),
                          SQLParam ( "5", object.eDate));
        query = execSQLSelect(select, param);

    else
   
        select = " SELECT  paym.t_paymentid id, paym.t_payeraccount pay_acc, paym.t_receiveraccount rec_acc,                           " +
                 "         usr_uf_getinn (prop.t_payerinn) inn, prop.t_payerbankname bank, prop.t_payername name, prop.t_ground ground " +
                 " FROM dpmpaym_dbt paym, dpmrmprop_dbt prop, dpmprop_dbt ob, dpmdocs_dbt docs, dacctrn_dbt trn                        " +
                 " WHERE ob.t_codekind = 3                                                                      " +
                 " and ob.T_DEbetCREDIT = 0                                                                     " +
                 " and ob.t_propstatus = 32000                                                                  " +
                 " and ob.T_issender = chr(88)                                                                  " +
                 " and OB.T_bankcode in (" + object.bic + ")                                                    " +
                 " AND PAYM.T_PAYMENTID = ob.t_paymentid                                                        " +
                 " AND (paym.t_dockind LIKE 320 OR paym.t_dockind LIKE 322)                                     " +
                 " AND (paym.t_payeraccount LIKE '408%'                                                         " +
                 "       OR paym.t_payeraccount LIKE '407%'                                                     " +
                 " AND LENGTH (usr_uf_getinn(prop.t_receiverinn)) = 10)                                         " +
                 " AND paym.t_paymentid = docs.t_paymentid                                                      " +
                 " AND DOCS.T_ACCTRNID = TRN.T_ACCTRNID                                                         " +
                 " AND TRN.t_date_carry BETWEEN :1 AND :2                                                       " +
                 " AND paym.t_valuedate <= :3                                                                   " +
                 " AND paym.t_paymentid = prop.t_paymentid                                                      " +
                 " AND prop.t_payerchargeoffdate BETWEEN :4 AND :5                                              " +
                 " AND TRN.t_chapter = 1                                                                        " +
                 " AND TRN.t_account_receiver = paym.t_receiveraccount                                          " +
                 " AND paym.t_paymstatus = 32000                                                                " +
                 " AND PAYM.T_PAYERBANKID != PAYM.T_RECEIVERBANKID                                              " +
                 " ORDER BY bank                                                                                " ;
   
       param = makeArray (SQLParam ( "1", object.bDate),
                          SQLParam ( "2", object.eDate),
                          SQLParam ( "3", object.eDate),
                          SQLParam ( "4", object.bDate),
                          SQLParam ( "5", object.eDate));
        query = execSQLSelect(select, param);
        
    end;
    while (query.movenext)
    UseProgress();
    var id, pay_acc, rec_acc, inn, bank, name, ground;
        id = string(query.value("id"));
        pay_acc = string(query.value("pay_acc"));
        rec_acc = string(query.value("rec_acc"));
        inn = string(query.value("inn"));
        bank = string(query.value("bank"));
        name = string(query.value("name"));
        ground = string(query.value("ground"));
        println(id+"┼"+pay_acc+"┼"+rec_acc+"┼"+inn+"┼"+bank+"┼"+name+"┼"+ground);
    end; 
   
end;
macro startReport(object:infoObject)
    createUniqueFile(bName, lName);
    title(object);
    maker(object);
    SetOutPut(null,false);
    transToExcel(lName, object.type);
    FormatExcel(lName);
    RemProgress();
    exit(1);
    close();
end;
class(TRsbPanel) MainPanel()
    InitTRsbPanel();
    setCaption("Платежи юридических лиц");
    setStatus("Esc - Выход, F2 - Выполнить, F3 - Вызов календаря");
   
    private const FT_DATE = 9;
    private const FT_STRING = 7;
    var dateCarry = {curdate};
    var startVal = "";
    var info: infoObject;
    
    var labelDate: TRsbLabel = TRsbLabel(3, 2, "Дата");   
    var labelDateBegin: TRsbLabel = TRsbLabel(7, 2, "С:");
    var labelDateEnd: TRsbLabel = TRsbLabel(18, 2, "По:");
    var labelType: TRsbLabel = TRsbLabel(3, 4, "Тип:");
    var labelBIC: TRsbLabel = TRsbLabel(3, 6, "БИКи банков (через запятую):");
    
    var fieldDateBegin: TRsbEditField = TRsbEditField(FT_DATE);
    var fieldDateEnd: TRsbEditField = TRsbEditField(FT_DATE);
    var fieldBIC: TRsbEditField = TRsbEditField(FT_STRING);
    
    var boxType: TRsbComboBox = TRsbComboBox();
 //   var boxFormat: TRsbComboBox = TRsbComboBox();
    
    setSize(35,10);
    setPosition(43,18);

    fieldDateBegin.bindValue(this, "dateCarry", 8);
    fieldDateBegin.setPosition(9,2);   
    fieldDateBegin.setSize(8,1);
    fieldDateBegin.onKeyPressed(R2M(this, "callCalendarBegin")); 

    fieldDateEnd.bindValue(this, "dateCarry", 8);
    fieldDateEnd.setPosition(21,2);   
    fieldDateEnd.setSize(8,1);
    fieldDateEnd.onKeyPressed(R2M(this, "callCalendarEnd")); 
    
    fieldBIC.bindValue(this, "startVal", 10000);
    fieldBIC.setPosition(3,7);   
    fieldBIC.setSize(30,1);
    fieldBIC.onKeyPressed(R2M(this, "fieldListener")); 

    boxType.setPosition(7,4);   
    boxType.setSize(10,1);
    boxType.addChoice(1,"Входящие");
    boxType.addChoice(2,"Исходящие");
    boxType.currentChoice = 1;
    boxType.OnItemSelected(R2M(this, "typeSelect"));

  /*  boxFormat.setPosition(7,10);   
    boxFormat.setSize(12,1);
    boxFormat.addChoice(1,"В один файл");
    boxFormat.addChoice(2,"В разные файлы");
    boxFormat.currentChoice = 1;
  */
    addLabel(labelDate);
    addLabel(labelDateBegin);
    addLabel(labelDateEnd);
    addLabel(labelType);
    addLabel(labelBIC);
    addControl(fieldDateBegin);
    addControl(fieldDateEnd);
    addControl(fieldBIC);
    addControl(boxType);
 //   addControl(boxFormat);

    macro fieldListener(key:TRsbKeyPressedEvent)
        if(key.KeyCode == KEY_F2)
            info.bic = fieldBIC.value;
            //Gurin S. 20.05.2015 R-583462-2
            info.bDate = fieldDateBegin.value;            
            info.eDate = fieldDateEnd.value;
            info.BICNormalizer();
            startReport(info);
            close();
            exit(0);
        end;
    end;
    
    macro callCalendarBegin(key:TRsbKeyPressedEvent)
        if(key.keyCode == KEY_F3)
            var d:Date = Date(GetDateByCalendar({curdate}));
            if (d > fieldDateEnd.value)
                fieldDateBegin.value = fieldDateEnd.value;
            else
                fieldDateBegin.value = d; 
            end;
            info.bDate = fieldDateBegin.value;            
        end;        
        if(key.KeyCode == KEY_F2)
            info.bic = fieldBIC.value;
            //Gurin S. 20.05.2015 R-583462-2
            info.bDate = fieldDateBegin.value;            
            info.eDate = fieldDateEnd.value;
            info.BICNormalizer();
            startReport(info);
            close();
            exit(0);
        end;
    end;
   
    macro callCalendarEnd(key:TRsbKeyPressedEvent)
        if(key.keyCode == KEY_F3)
            var d:Date = Date(GetDateByCalendar({curdate}));
            if (d < fieldDateBegin.value)
                fieldDateEnd.value = fieldDateBegin.value;
            else
                fieldDateEnd.value = d; 
            end;           
            info.eDate = fieldDateEnd.value; 
        end;        
        if(key.KeyCode == KEY_F2)
            info.bic = fieldBIC.value;
            //Gurin S. 20.05.2015 R-583462-2
            info.bDate = fieldDateBegin.value;            
            info.eDate = fieldDateEnd.value;
            info.BICNormalizer();
            startReport(info);
            close();
            exit(0);
        end;
    end;
   
    macro typeSelect(RsbEvent:object)
        if (boxType.currentChoice == 1)
                info.type = true; //true- входящий платёж, false-исходящий  платёж
        elif (boxType.currentChoice == 2)
                info.type = false; //true-входящий платёж, false-входящий исходящий платёж
        end;
    end;       
end;


    var panel:TRsbPanel = MainPanel;
    panel.run;    

    exit(0);
end;
