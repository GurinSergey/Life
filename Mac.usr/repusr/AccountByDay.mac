/* Состояние лицевых счетов                                        */
/*                                                                 */
/*                                                                 */
/*Тихомиров А.Н. 27.05.2009               Версия 1.0               */
/* Sokolov R-145922-3 модификация - выпуск отчета в Excel 04.02.13 */
/* 05.03.2014 GSP Адаптация 2031                                   */
/* 17.06.2014 DPN I-00494920-2 Адаптировал под все банки           */
/* 02.07.2014 GSP R-375359-2   Оптимизация выполнения и изменение  */
/*                             логики по отбору рублевых остатков  */
/*                             на валютных счетах                  */
/* 10.01.2015 Teleshova В ПРББ разбивка должна быть строгой        */
/* 13.01.2015 Chesnokov D.S.   исправил за Сашей по R-526825       */
/* 15.01.2015 DPN I-00544627-2 Если стоит галка "выводить покрытия"*/
/*                             -веведутся остатки в руб.экв        */

import rsbdataset, globals, календарь;
var sql, i, pos, sum, fl3, inter, m, /*ints,*/ rest= " ", restf = " ", first, second, data, clos;
var  symbol, symb, balacc, reportdate, flag1, flag3, flag4, flagstr, dprt_v;
var g, val_p, val_a, j, saldo_p, saldo_a, branch, repbal, saldo_aall, saldo_pall, all, branchname, s, maxs;
//Sokolov R-145922-3 
import oralib, bankinter, rsexts, rmcmptl, RSD, "xlc.mac", "getperiodforrep.mac";
import "lib_fg.mac"; //Teleshova 10.01.2015
private var otchet_excel, ob, obSheet, ex, b, e, x, y;
private var all_local_puth:string;
private var fullstr_prn, ch_n; //fullstroka name , счетчик строк внизу по валюте

array menu_vibor;
FILE rep_ac() txt write;
private var str : string, m_path, tempFileName, tempFileNameBezPuti;
private var dd:date, tt:time, ii:integer;
//end R-145922-3
array arr;
const  KEY_F1      =315;
const  KEY_F2      =316;
const  KEY_F3      =317;
const KEY_ESC      = 27;
const KEY_SPACE    = 32;
const KEY_ENTER    = 13;

const TEXTDIR_REESTR = "BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR";

record Department ("dp_dep.dbt");
var Fulloutputl, outl, outputl="account.lbr";                    

GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
Fulloutputl = FindPath(outputl, outl);
var dlg = TRecHandler("accbyday", fulloutputl, TRUE); 
GetTxtFileName("AccountbyDay");

/*Найдем имя по коду*/
private macro GetClientNameID(id)
var  sl=" select dep.t_name from  ddp_dep_dbt dep where dep.t_code="+id;
var  DataS=TRsbDataSet(sl);
  if( DataS.moveNext())
    return DataS.name;
  else
    msgbox("Субъект не найден в party.dbt");
    return 0;
  end;
END;

private macro strprnv(strarr)
var st=1;
private var strfull_arr;
 while (st<asize(strarr))
  [│      │                         │#####################################│                     │                       │             │          │]
  (strarr(st));
   st=st+1;
 end;
end;


private macro strprn(strarr)
var st=1;
private var stroka_arr;
 while (st<asize(strarr))
  [│                    │#####################################│                     │                       │             │          │]
  (strarr(st));
   st=st+1;
 end;
end;



/*Найдем имя по Partyid*/
private macro GetClientName(id)
//var  sl=string(" select t_name from dparty_dbt t where t.t_PartyID=",id);
//17.06.2014 DPN I-00494920-2
var sl = " SELECT pt.t_name FROM ddp_dep_dbt dep, dparty_dbt pt " +
         " WHERE dep.t_code = " + id + " and PT.T_PARTYID = DEP.T_PARTYID";
var  DataS=TRsbDataSet(sl);
  if( DataS.moveNext())
    return DataS.name;
  else
    if (id !=0)
       msgbox("Субъект не найден в party.dbt");
       return 0;
    else
      return "ОАО АКБ Пробизнесбанк";
    end;
  end;
END;

// **************************** Sokolov R-145922-3

private macro Clear(str)        //
   str = STRSUBST(STRSUBST(STRSUBST(str, ";", ","),strfor(13),""),strfor(10), "");
   // надо выкинуть символы 10 и 13 из строки, а также все ; т.к. это разделитель в .csv файлах
   return str;
END;

private macro chekReestrRead(m_name:string, m_status:integer, m_err:integer)  //
	if ((m_status == V_UNDEF) or (m_err != 0))
    	msgbox("Ошибка получения значения настройки реестра " + m_name + " \n Процедура GetRegistryValue вернула код ошибки "+m_err);
   		exit(0);
	end;
end;

private macro dayString(m_reestrName:string):string  //
   var m_errCode:integer = NULL;
   var m_statusGetRegistry :integer = NULL;
   var m_zna4enie:string  = NULL;
   if (m_reestrName == "")
      msgbox("При чтении реестра не задана строка реестра");
      exit(0)
   end;
   m_statusGetRegistry=GetRegistryValue(m_reestrName, V_STRING, m_zna4enie, m_errCode);
   chekReestrRead(m_reestrName, m_statusGetRegistry, m_errCode);
   return(m_zna4enie);
end;

private macro createUniqueFile()      //генерация универсального имени файла
	private var ff:string = "AccByDay_"+{oper}+"_"+date+"_"+time;
	private var file_ext:string = ".txt";
	tempFileName = dayString(TEXTDIR_REESTR);
	tempFileName = tempFileName + "\\" + ff;
	tempFileNameBezPuti = ff;
	tempFileName = StrSubst ( tempFileName, ".", "_" );
	tempFileName = StrSubst ( tempFileName, ":", "_" );
	tempFileName = StrSubst ( tempFileName, " ", "_" );
	tempFileName = tempFileName + file_ext;
	tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, ".", "_" );
	tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, ":", "_" );
	tempFileNameBezPuti = StrSubst ( tempFileNameBezPuti, " ", "_" );
	tempFileNameBezPuti = tempFileNameBezPuti + file_ext;
	if (substr(tempFileName,1,2) == "__")
		tempFileName=".."+substr(tempFileName,3)
	end;
end;

private macro copyToMe()     //копируем файл временных данных с СП на терминал во временную папку(какую именно зависит от лок. настр.)
   private var m_path: string = "";
   m_path = "$" + tempFileNameBezPuti;
   if (not CopyFile(tempFileNameBezPuti, m_path, TRUE))
     println ("НЕ СМОГ скопировать файл с сервера приложений на терминал. исходный файл: "+tempFileNameBezPuti+" файл назначения: " + m_path);
   else 
      println ("УСПЕШНО скопирован файл с сервера приложений на терминал. исходный файл: "+tempFileNameBezPuti+" файл назначения: " + m_path);
      if (not removeFile(tempFileName))
         println("Не смог удалить файл "+tempFileName+" с сервера приложений. ничего сташного, продолжаем работу.");
      else
         println("удален файл "+tempFileName+" с сервера приложений.");
      end;
   end;
end;


// ************************** Sokolov R-145922-3 end

private macro outall();
    repbal=balacc;
    balacc=strsubst(balacc,"*","");
    symb="";

     i=0;
    while (i<strlen(symbol))
        i=i+1;
        if (substr(symbol,i,1)=="A");
          symb=symb+"or acc.t_usertypeaccount like '%А%'";
        elif (substr(symbol,i,1)=="D");
          symb=symb+"or acc.t_usertypeaccount like '%D%'";
        elif (substr(symbol,i,1)=="F");
          symb=symb+"or acc.t_usertypeaccount like '%F%'";
        elif (substr(symbol,i,1)=="G");
          symb=symb+"or acc.t_usertypeaccount like '%G%'";
        elif (substr(symbol,i,1)=="I");
          symb=symb+"or acc.t_usertypeaccount like '%I%'";
        elif (substr(symbol,i,1)=="L");
          symb=symb+"or acc.t_usertypeaccount like '%L%'";
        elif (substr(symbol,i,1)=="N");
          symb=symb+"or acc.t_usertypeaccount like '%N%'";
        elif (substr(symbol,i,1)=="R");
          symb=symb+"or acc.t_usertypeaccount like '%R%'";
        elif (substr(symbol,i,1)=="Q");
          symb=symb+"or acc.t_usertypeaccount like '%Q%'";
        elif (substr(symbol,i,1)=="S");
          symb=symb+"or acc.t_usertypeaccount like '%S%'";
        elif (substr(symbol,i,1)=="U");
          symb=symb+"or acc.t_usertypeaccount like '%U%'";
        elif (substr(symbol,i,1)=="Z");
          symb=symb+"or acc.t_usertypeaccount like '%Z%'";
        elif (substr(symbol,i,1)=="Б");
          symb=symb+"or acc.t_usertypeaccount like '%Б%'";
        elif (substr(symbol,i,1)=="Г");
          symb=symb+"or acc.t_usertypeaccount like '%Г%'";
        elif (substr(symbol,i,1)=="Д");
          symb=symb+"or acc.t_usertypeaccount like '%Д%'";
        elif (substr(symbol,i,1)=="Е");
          symb=symb+"or acc.t_usertypeaccount like '%Е%'";
        elif (substr(symbol,i,1)=="Ё");
          symb=symb+"or acc.t_usertypeaccount like '%Ё%'";
        elif (substr(symbol,i,1)=="Ж");
          symb=symb+"or acc.t_usertypeaccount like '%Ж%'";
        elif (substr(symbol,i,1)=="З");
          symb=symb+"or acc.t_usertypeaccount like '%З%'";
        elif (substr(symbol,i,1)=="Й");
          symb=symb+"or acc.t_usertypeaccount like '%Й%'";
        elif (substr(symbol,i,1)=="К");
          symb=symb+"or acc.t_usertypeaccount like '%К%'";
        elif (substr(symbol,i,1)=="Л");
          symb=symb+"or acc.t_usertypeaccount like '%Л%'";
        elif (substr(symbol,i,1)=="М");
          symb=symb+"or acc.t_usertypeaccount like '%М%'";
        elif (substr(symbol,i,1)=="Н");
          symb=symb+"or acc.t_usertypeaccount like '%Н%'";
        elif (substr(symbol,i,1)=="О");
          symb=symb+"or acc.t_usertypeaccount like '%О%'";
        elif (substr(symbol,i,1)=="П");
          symb=symb+"or acc.t_usertypeaccount like '%П%'";
        elif (substr(symbol,i,1)=="Т");
          symb=symb+"or acc.t_usertypeaccount like '%Т%'";
        elif (substr(symbol,i,1)=="У");
          symb=symb+"or acc.t_usertypeaccount like '%У%'";
        elif (substr(symbol,i,1)=="Ф");
          symb=symb+"or acc.t_usertypeaccount like '%Ф%'";
        elif (substr(symbol,i,1)=="Х");
          symb=symb+"or acc.t_usertypeaccount like '%Х%'";
        elif (substr(symbol,i,1)=="Ц");
          symb=symb+"or acc.t_usertypeaccount like '%Ц%'";
        elif (substr(symbol,i,1)=="Ч");
          symb=symb+"or acc.t_usertypeaccount like '%Ч%'";
        elif (substr(symbol,i,1)=="Ш");
          symb=symb+"or acc.t_usertypeaccount like '%Ш%'";
        elif (substr(symbol,i,1)=="Щ");
          symb=symb+"or acc.t_usertypeaccount like '%Щ%'";
        elif (substr(symbol,i,1)=="Ы");
          symb=symb+"or acc.t_usertypeaccount like '%Ы%'";
        elif (substr(symbol,i,1)=="Ъ");
          symb=symb+"or acc.t_usertypeaccount like '%Ъ%'";
        elif (substr(symbol,i,1)=="Ь");
          symb=symb+"or acc.t_usertypeaccount like '%Ь%'";
        elif (substr(symbol,i,1)=="Ю");
          symb=symb+"or acc.t_usertypeaccount like '%Ю%'";
        elif (substr(symbol,i,1)=="Я");
          symb=symb+"or acc.t_usertypeaccount like '%Я%'";
        else

        end;
    end;

    if (strlen (symb)>0)
      symb=string("AND (",substr(symb,3),")");
    end;

    if (strlen(balacc)>0)
        inter="";
        i=0;
        pos=1;
        while (pos>0)
            m=strlen(balacc);
            while (i<m)
                i=i+1;
                if ((substr(balacc,i,1)!=0) and (substr(balacc,i,1)!=1) and (substr(balacc,i,1)!=2) and (substr(balacc,i,1)!=3)
                  and (substr(balacc,i,1)!=4) and (substr(balacc,i,1)!=5) and (substr(balacc,i,1)!=6) and (substr(balacc,i,1)!=7)
                  and (substr(balacc,i,1)!=8) and (substr(balacc,i,1)!=9))
                  pos =i;
                  if (pos!=1)
                     if (strlen(inter)<1)
                       inter = inter+" (acc.t_balance like '"+substr(balacc,1,pos-1)+"%'"; 
                     else
                       inter=inter+"  or acc.t_balance like '"+substr(balacc,1,pos-1)+"%'";
                     end;
                  end;
                  balacc=substr(balacc, pos+1);
                  i=m+1;
                end;
            end;
            if (i==m)
              pos=0;
            end;
            i=0;
        end;
        if (strlen(inter)>0)
            inter = inter +"  or acc.t_balance like '"+substr(balacc,1)+"%'";; 
        else
            inter = " (acc.t_balance like '"+substr(balacc,1)+"%'"; 
        end;
        inter=inter+")";
     end;
     if (not flag3)
         fl3 = " AND acc.t_type_account NOT LIKE ('%U%') "+
               " AND acc.t_type_account NOT LIKE ('%П%') "+
               " AND acc.t_type_account NOT LIKE ('%Н%')";
     else
         fl3="";
     end;
// 15.01.2015 DPN I-00544627-2
     if (flag1)
        rest = " rsb_account.restac (acc.t_account,acc.t_code_currency, TO_DATE ('"+reportdate+"', 'DD-MM-YYYY'), acc.t_chapter, NULL,0)";
        if (not flag4)
            restf= " AND "+rest+" !=0 ";
        end;
        if(not flag3) 
            restf = restf + "AND substr(acc.t_account,6,3) = '810' ";
        end;
     else
         //Teleshova 10.01.2015
         //if(_bank.is_PRBB)
         if(flag3) // 15.01.2015 DPN I-00544627-2
             rest = "rsb_account.restac (acc.t_account,acc.t_code_currency, TO_DATE ('"+reportdate+"', 'DD-MM-YYYY'), acc.t_chapter, NULL,0)";
         else
             rest = "rsb_account.restac (acc.t_account,acc.t_code_currency, TO_DATE ('"+reportdate+"', 'DD-MM-YYYY'), acc.t_chapter, NULL)";
         end;
         if (not flag4)
            restf="AND "+rest+" !=0 ";
         end;
         restf = restf + " AND acc.t_code_currency <> 0 ";
     end;
     initprogress(-1, "Ждите, отбираются счета", "Ждите, отбираются счета");
     useprogress(-1);
     sql = " select /*+FULL (acc)*/ count(*) as cnt "+
           " FROM daccount_dbt acc,  dfininstr_dbt inst "+
           " WHERE  "+inter+
     branch+ fl3+
           " AND inst.t_fiid=acc.t_code_currency "+symb+
           " AND (acc.t_open_close = chr(0) OR acc.t_close_date > TO_DATE ('"+reportdate+"', 'DD-MM-YYYY')) "+
           " AND acc.t_open_date<=TO_DATE ('"+reportdate+"', 'DD-MM-YYYY') " + // ЭТОГО В ТЗ НЕТ!!! НО ТАК ПРАВИЛЬНО!!!
     restf; 
     first=trsbdataset(sql);
     first.movenext();
     maxs=first.cnt;
     debugbreak;
     sql = " SELECT /*+FULL (acc)*/ inst.t_fi_code , acc.t_balance, acc.t_account, acc.t_nameaccount, "+
             rest+
           "  AS rest, acc.T_KIND_ACCOUNT, "+
           "  acc.t_open_date, acc.t_close_date, acc.t_code_currency "+
           " FROM daccount_dbt acc, dfininstr_dbt inst "+
           " WHERE  "+ inter+ branch+fl3+
           " AND inst.t_fiid=acc.t_code_currency "+symb+
           " AND (acc.t_open_close = chr(0) OR acc.t_close_date > TO_DATE ('"+reportdate+"', 'DD-MM-YYYY')) "+
           " AND acc.t_open_date<=TO_DATE ('"+reportdate+"', 'DD-MM-YYYY') " + // ЭТОГО В ТЗ НЕТ!!! НО ТАК ПРАВИЛЬНО!!!
             restf+                
           " ORDER BY acc.t_balance, acc.t_code_currency ";
         //getstring(sql);
    first=trsbdataset(sql);
    second=trsbdataset(sql);
    debugbreak;
    remprogress(-1);
    initprogress(int(maxs),"Ждите,, производится обработка счетов","Ждите,, производится обработка счетов");
    val_p=0;
    val_a=0;
    j=0;
    saldo_p=0;
    saldo_a=0;
    i=0;
    saldo_pall=0;
    saldo_aall=0;
    all=0;
    s=0;
    if (second.movenext())
    else return 0;
    end;
    s=s+1;
    useprogress(s);
    debugbreak;
     if (flag1)
    [                               Состояние лицевых счетов по подразделению ############################
                                                 на балансовом счете #####, за ##########

    ┌────────────────────┬─────────────────────────────────────┬─────────────────────┬───────────────────────┬─────────────┬──────────┐
    │  Лицевой счет      │    Наименование счета               │     Сальдо А        │      Сальдо П         │   Открыт    │  Закрыт  │]
    (branchname, second.balance, date(reportdate));
    else
    [                               Состояние лицевых счетов по подразделению ############################
                                                 на балансовом счете #####, за ##########

    ┌──────┬─────────────────────────┬─────────────────────────────────────┬─────────────────────┬───────────────────────┬─────────────┬──────────┐
    │ Вал. │       Лицевой счет      │    Наименование счета               │     Сальдо А        │      Сальдо П         │   Открыт    │  Закрыт  │]
    (branchname, second.balance, date(reportdate));
    end;   
       while (second.movenext())
        s=s+1;
        useprogress(s);
         if (first.movenext())
         end;
         asize(arr,0);
        strsplit(string(first.nameaccount), arr, 37);
           if (first.close_date=="");
            clos="00.00.0000";
           else
            clos=date(first.close_date);
           end;

         if (flag1)
          /*РУБЛИ*/
          if(first.balance==second.balance)

           if ((first.kind_account == "П") and (first.rest > 0))
          [├────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤                       
           │####################│#####################################│                     │#######################│#############│##########│]
           (first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_p=saldo_p+first.rest;
           saldo_pall=saldo_pall+first.rest;
           strprn(arr);
           else
            [├────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤                       
             │####################│#####################################│#####################│                       │#############│##########│]
           (first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_a=saldo_a+first.rest;
           saldo_aall=saldo_aall+first.rest;
           strprn(arr);
           end;
            i=i+1;
            all=all+1;
           else
           if ((first.kind_account == "П") and (first.rest > 0))
          [├────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤                       
           │####################│#####################################│                     │#######################│#############│##########│]
           (first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_p=saldo_p+first.rest;
           saldo_pall=saldo_pall+first.rest;
           strprn(arr);
           else
           [├────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤                       
            │####################│#####################################│#####################│                       │#############│##########│]
           (first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_a=saldo_a+first.rest;
           saldo_aall=saldo_aall+first.rest;
           strprn(arr);
           end;
          i=i+1;
            all=all+1;
          [├────────────────────┴─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┴──────────┤                       
           │Итого по БС #####: количество счетов #####                │#####################│#######################│                        │]
           ( first.balance, int(i), money(saldo_a):a,money(saldo_p):a);

          saldo_p=0;
          saldo_a=0;
          i=0;
    [└──────────────────────────────────────────────────────────┴─────────────────────┴───────────────────────┴────────────────────────┘
   
                                        Состояние лицевых счетов по подразделению ############################
                                                 на балансовом счете #####, за ##########

    ┌────────────────────┬─────────────────────────────────────┬─────────────────────┬───────────────────────┬─────────────┬──────────┐
    │  Лицевой счет      │    Наименование счета               │     Сальдо А        │      Сальдо П         │   Открыт    │  Закрыт  │]
    (branchname, second.balance, date(reportdate));

          end;
     
         else
          /*ВАЛЮТА*/
            if(first.balance==second.balance)
             if (first.code_currency==second.code_currency)
           if (first.kind_account == "П") 
            if (not flagstr)
           [├──────┼─────────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤];                       
            else
           [├──────┬─────────────────────────┬─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┬──────────┤];                       
            end;
             flagstr=0;
           [│######│#########################│#####################################│                     │#######################│#############│##########│]
           (first.fi_code, first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_p=saldo_p+first.rest;
           saldo_pall=saldo_pall+first.rest;
           strprnv(arr);
              val_p=val_p+first.rest;
           else
            if (not flagstr)
           [├──────┼─────────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤];                       
            else
           [├──────┬─────────────────────────┬─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┬──────────┤];                       
            end;
             flagstr=0;
           [│######│#########################│#####################################│#####################│                       │#############│##########│]
           (first.fi_code, first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_a=saldo_a+first.rest;
           saldo_aall=saldo_aall+first.rest;
              val_a=val_a+first.rest;
           strprnv(arr);
           end;
              i=i+1;
            all=all+1;
              j=j+1;
              else
        /*Итог по валюте*/
           if (first.kind_account == "П") 
            if (not flagstr)
           [├──────┼─────────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤];                       
            else
           [├──────┬─────────────────────────┬─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┬──────────┤];                       
            end;
             flagstr=0;
            [│######│#########################│#####################################│                     │#######################│#############│##########│]
           (first.fi_code, first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_p=saldo_p+first.rest;
           saldo_pall=saldo_pall+first.rest;
              val_p=val_p+first.rest;
           strprnv(arr);
           else
            if (not flagstr)
           [├──────┼─────────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤];                       
            else
           [├──────┬─────────────────────────┬─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┬──────────┤];                       
            end;
             flagstr=0;
            [│######│#########################│#####################################│#####################│                       │#############│##########│]
           (first.fi_code, first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_a=saldo_a+first.rest;
           saldo_aall=saldo_aall+first.rest;
              val_a=val_a+first.rest;
           strprnv(arr);
           end;
              i=i+1;
            all=all+1;
              j=j+1;
           [├──────┴─────────────────────────┴─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┴──────────┤                       
            │Итого в валюте ###: количество счетов #####                           │#####################│#######################│                        │]
         (first.fi_code, j, money(val_a):a, money(val_p):a);
                val_p=0;
               val_a=0;
               j=0;
               flagstr=1;
               end;
              else
              [############]
              (second.kind_account);
           if (first.kind_account == "П")
            if (not flagstr)
           [├──────┼─────────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤];                       
            else
           [├──────┬─────────────────────────┬─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┬──────────┤];                       
            end;
             flagstr=0;
            [│######│#########################│#####################################│                     │#######################│#############│##########│]
           (first.fi_code, first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_p=saldo_p+first.rest;
           saldo_pall=saldo_pall+first.rest;
              val_p=val_p+first.rest;
           strprnv(arr);
           else
            if (not flagstr)
           [├──────┼─────────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤];                       
            else
           [├──────┬─────────────────────────┬─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┬──────────┤];                       
            end;
             flagstr=0;
            [│######│#########################│#####################################│#####################│                       │#############│##########│]
           (first.fi_code, first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_a=saldo_a+first.rest;
           saldo_aall=saldo_aall+first.rest;
              val_a=val_a+first.rest;
           strprnv(arr);
           end;
               i=i+1;
            all=all+1;
               j=j+1;
           [├──────────────────────────────────────────────────────────────────────┼─────────────────────┼───────────────────────┼────────────────────────┤                       
            │Итого по БС  #####: количество счетов #####                           │#####################│#######################│                        │]
         (first.balance, i, money(saldo_a):a, money(saldo_p):a);
               val_p=0;
               val_a=0;
               j=0;
             saldo_p=0;
            saldo_a=0;
            i=0;
            flagstr=1;
    [└──────────────────────────────────────────────────────────────────────┴─────────────────────┴───────────────────────┴────────────────────────┘];


    [                               Состояние лицевых счетов по подразделению ############################
                                                 на балансовом счете #####, за ##########

    ┌──────┬─────────────────────────┬─────────────────────────────────────┬─────────────────────┬───────────────────────┬─────────────┬──────────┐
    │ Вал. │       Лицевой счет      │    Наименование счета               │     Сальдо А        │      Сальдо П         │   Открыт    │  Закрыт  │]
    (branchname, second.balance, date(reportdate));
 
           end;
       end;
     end;
     remprogress(s);
     initprogress(-1,"Ждите, расчитываются итоги","Ждите, расчитываются итоги");
     useprogress(-1);
     /*Завершение обработки*/
    debugbreak;
     if (first.movenext())
     end;
         asize(arr,0);
        strsplit(string(first.nameaccount), arr, 37);
           if (first.close_date=="");
            clos="00.00.0000";
           else
            clos=date(first.close_date);
           end;

     if (flag1)
           if ((first.kind_account == "П")and (first.rest > 0))
           [├────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤                       
            │####################│#####################################│                     │#######################│#############│##########│]
           (first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_p=saldo_p+first.rest;
           saldo_pall=saldo_pall+first.rest;
           strprn(arr);
           else
            [├────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤                       
             │####################│#####################################│#####################│                       │#############│##########│]
           (first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_a=saldo_a+first.rest;
           saldo_aall=saldo_aall+first.rest;
           strprn(arr);
           end;
        i=i+1;
        all=all+1;
            [├────────────────────┴─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┴──────────┤                       
             │Итого по БС #####: количество счетов #####                │#####################│#######################│                        │]
           ( first.balance, int(i), money(saldo_a):a,money(saldo_p):a);

          saldo_p=0;
          saldo_a=0;
          i=0;
    [└──────────────────────────────────────────────────────────┴─────────────────────┴───────────────────────┴────────────────────────┘];
    saldo_p=0;
    saldo_a=0;
    i=0;
    /*sql = " SELECT   SUM ( "+
             rest+
           ")  AS sum, count(*) as cnt, "+
           "  acc.t_balance "+
        " FROM daccount"+ints+"_dbt acc, daccblnc_dbt bln, dfininstr_dbt inst "+
       " WHERE  acc.t_account = bln.t_account "+
        inter+
        branch+
         fl3+
        " AND inst.t_fiid=acc.t_code_currency "+
        " AND (acc.t_open_close != 'З' OR acc.t_close_date > '"+reportdate+"') "+
        restf+                
       " group BY acc.t_balance ";
        data=trsbdataset(sql);*/
    [                   Состояние лицевых счетов по списку счетов за ##########

    ┌───────────────────────┬─────────────────────┬───────────────────────┬────────────────────────┐
    │    Балансовые счета   │     Сальдо А        │      Сальдо П         │    Количество счетов   │
    ├───────────────────────┼─────────────────────┼───────────────────────┼────────────────────────┤
    │Итого по списку счетов:│                     │                       │                        │
    │#######################│#####################│#######################│########################│
    └───────────────────────┴─────────────────────┴───────────────────────┴────────────────────────┘]
    (reportdate, repbal, money(saldo_aall):a,money(saldo_pall):a,int(all));                       

    /*   while (data.movenext())
 
       [│####################│#####################│#######################│########################│]
       (money(data.sum), int(data.cnt), data.balance);  
       end;*/
     else
    /*ВАЛЮТА*/
           if (first.kind_account == "П")
            if (not flagstr)
           [├──────┼─────────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤];                       
            else
           [├──────┬─────────────────────────┬─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┬──────────┤];                       
            end;
             flagstr=0;
            [│######│#########################│#####################################│                     │#######################│#############│##########│]
           (first.fi_code, first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_p=saldo_p+first.rest;
           saldo_pall=saldo_pall+first.rest;
              val_p=val_p+first.rest;
           strprnv(arr);
           else
            if (not flagstr)
           [├──────┼─────────────────────────┼─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┼──────────┤];                       
            else
           [├──────┬─────────────────────────┬─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┬──────────┤];                       
            end;
             flagstr=0;
            [│######│#########################│#####################################│#####################│                       │#############│##########│]
           (first.fi_code, first.account, arr(0), money(first.rest):a, date(first.open_date), string(clos));
           saldo_a=saldo_a+first.rest;
           saldo_aall=saldo_aall+first.rest;
              val_a=val_a+first.rest;
           strprnv(arr);
           end;
        i=i+1;
            all=all+1;
        j=j+1;
           [├──────┴─────────────────────────┴─────────────────────────────────────┼─────────────────────┼───────────────────────┼─────────────┴──────────┤                       
            │Итого в валюте ###: количество счетов #####                           │#####################│#######################│                        │]
         (first.fi_code, j, money(val_a):a, money(val_p):a);
           [├──────────────────────────────────────────────────────────────────────┼─────────────────────┼───────────────────────┼────────────────────────┤                       
            │Итого по БС  #####: количество счетов #####                           │#####################│#######################│                        │]
         (first.balance, i, money(saldo_a):a, money(saldo_p):a);
        val_p=0;
        val_a=0;
        j=0;
      saldo_p=0;
      saldo_a=0;
      i=0;
    [└──────────────────────────────────────────────────────────────────────┴─────────────────────┴───────────────────────┴────────────────────────┘];

    sql = " SELECT   SUM ( "+rest+
          ")  AS sum, count(*) as cnt, "+
           "  acc.t_balance, inst.t_fi_code "+
          " FROM daccount_dbt acc, daccblnc_dbt bln, dfininstr_dbt inst "+
          " WHERE  acc.t_account = bln.t_account and"+
          inter+branch+fl3+
          " AND inst.t_fiid=acc.t_code_currency "+
          " AND (acc.t_open_close = chr(0) OR acc.t_close_date > TO_DATE ('"+reportdate+"', 'DD-MM-YYYY')) "+
          restf+                
          " group BY acc.t_balance, inst.t_fi_code ";
    data=trsbdataset(sql);
    [                   Состояние лицевых счетов по списку счетов за ##########

    ┌───────────────────────┬──────┬─────────────────────┬───────────────────────┬────────────────────────┐
    │    Балансовые счета   │Валюта│     Сальдо А        │      Сальдо П         │    Количество счетов   │
    ├───────────────────────┼──────┼─────────────────────┼───────────────────────┼────────────────────────┤
    │Итого по списку счетов:│      │                     │                       │                        │]
    (reportdate);                       
    flagstr=0;
     while (data.movenext())
       if (data.sum<0)
          if (flagstr)
             [├───────────────────────┼──────┼─────────────────────┼───────────────────────┼────────────────────────┤];
          end;
          [│#######################│######│#####################│                       │########################│]
          (int(data.balance), int(data.fi_code), money(data.sum):a, int(data.cnt));
       else
          if (flagstr)
          [├───────────────────────┼──────┼─────────────────────┼───────────────────────┼────────────────────────┤];
          end;
          [│#######################│######│                     │#######################│########################│]
          (int(data.balance), int(data.fi_code), money(data.sum):a, int(data.cnt));
       end;
       flagstr=1;
     end;
     if (flagstr)
       [├───────────────────────┴──────┴─────────────────────┴───────────────────────┼────────────────────────┤];
     end;
    [│Итого по списку счетов: ########################                            │########################│
     └────────────────────────────────────────────────────────────────────────────┴────────────────────────┘]
    (repbal, int(all));
     end;
      remprogress(-1);
end;

//Sokolov R-145922-3 выписка в Excel отдельной макрофункцией
private macro outall_excel();
 //debugbreak;
   createUniqueFile();
   open (rep_ac, tempFileName);
// *********************************************************************************************************************************************
   repbal=balacc;
   balacc=strsubst(balacc,"*","");
   symb="";

   i=0;
   while (i<strlen(symbol))
       i=i+1;
       if (substr(symbol,i,1)=="A");
         symb=symb+"or acc.t_usertypeaccount like '%А%'";
       elif (substr(symbol,i,1)=="D");
         symb=symb+"or acc.t_usertypeaccount like '%D%'";
       elif (substr(symbol,i,1)=="F");
         symb=symb+"or acc.t_usertypeaccount like '%F%'";
       elif (substr(symbol,i,1)=="G");
         symb=symb+"or acc.t_usertypeaccount like '%G%'";
       elif (substr(symbol,i,1)=="I");
         symb=symb+"or acc.t_usertypeaccount like '%I%'";
       elif (substr(symbol,i,1)=="L");
         symb=symb+"or acc.t_usertypeaccount like '%L%'";
       elif (substr(symbol,i,1)=="N");
         symb=symb+"or acc.t_usertypeaccount like '%N%'";
       elif (substr(symbol,i,1)=="R");
         symb=symb+"or acc.t_usertypeaccount like '%R%'";
       elif (substr(symbol,i,1)=="Q");
         symb=symb+"or acc.t_usertypeaccount like '%Q%'";
       elif (substr(symbol,i,1)=="S");
         symb=symb+"or acc.t_usertypeaccount like '%S%'";
       elif (substr(symbol,i,1)=="U");
         symb=symb+"or acc.t_usertypeaccount like '%U%'";
       elif (substr(symbol,i,1)=="Z");
         symb=symb+"or acc.t_usertypeaccount like '%Z%'";
       elif (substr(symbol,i,1)=="Б");
         symb=symb+"or acc.t_usertypeaccount like '%Б%'";
       elif (substr(symbol,i,1)=="Г");
         symb=symb+"or acc.t_usertypeaccount like '%Г%'";
       elif (substr(symbol,i,1)=="Д");
         symb=symb+"or acc.t_usertypeaccount like '%Д%'";
       elif (substr(symbol,i,1)=="Е");
         symb=symb+"or acc.t_usertypeaccount like '%Е%'";
       elif (substr(symbol,i,1)=="Ё");
         symb=symb+"or acc.t_usertypeaccount like '%Ё%'";
       elif (substr(symbol,i,1)=="Ж");
         symb=symb+"or acc.t_usertypeaccount like '%Ж%'";
       elif (substr(symbol,i,1)=="З");
         symb=symb+"or acc.t_usertypeaccount like '%З%'";
       elif (substr(symbol,i,1)=="Й");
         symb=symb+"or acc.t_usertypeaccount like '%Й%'";
       elif (substr(symbol,i,1)=="К");
         symb=symb+"or acc.t_usertypeaccount like '%К%'";
       elif (substr(symbol,i,1)=="Л");
         symb=symb+"or acc.t_usertypeaccount like '%Л%'";
       elif (substr(symbol,i,1)=="М");
         symb=symb+"or acc.t_usertypeaccount like '%М%'";
       elif (substr(symbol,i,1)=="Н");
         symb=symb+"or acc.t_usertypeaccount like '%Н%'";
       elif (substr(symbol,i,1)=="О");
         symb=symb+"or acc.t_usertypeaccount like '%О%'";
       elif (substr(symbol,i,1)=="П");
         symb=symb+"or acc.t_usertypeaccount like '%П%'";
       elif (substr(symbol,i,1)=="Т");
         symb=symb+"or acc.t_usertypeaccount like '%Т%'";
       elif (substr(symbol,i,1)=="У");
         symb=symb+"or acc.t_usertypeaccount like '%У%'";
       elif (substr(symbol,i,1)=="Ф");
         symb=symb+"or acc.t_usertypeaccount like '%Ф%'";
       elif (substr(symbol,i,1)=="Х");
         symb=symb+"or acc.t_usertypeaccount like '%Х%'";
       elif (substr(symbol,i,1)=="Ц");
         symb=symb+"or acc.t_usertypeaccount like '%Ц%'";
       elif (substr(symbol,i,1)=="Ч");
         symb=symb+"or acc.t_usertypeaccount like '%Ч%'";
       elif (substr(symbol,i,1)=="Ш");
         symb=symb+"or acc.t_usertypeaccount like '%Ш%'";
       elif (substr(symbol,i,1)=="Щ");
         symb=symb+"or acc.t_usertypeaccount like '%Щ%'";
       elif (substr(symbol,i,1)=="Ы");
         symb=symb+"or acc.t_usertypeaccount like '%Ы%'";
       elif (substr(symbol,i,1)=="Ъ");
         symb=symb+"or acc.t_usertypeaccount like '%Ъ%'";
       elif (substr(symbol,i,1)=="Ь");
         symb=symb+"or acc.t_usertypeaccount like '%Ь%'";
       elif (substr(symbol,i,1)=="Ю");
         symb=symb+"or acc.t_usertypeaccount like '%Ю%'";
       elif (substr(symbol,i,1)=="Я");
         symb=symb+"or acc.t_usertypeaccount like '%Я%'";
       else

       end;
    end;

    if (strlen (symb)>0)
        symb=string("AND (",substr(symb,3),")");
    end;

if (strlen(balacc)>0)
  inter="";
  i=0;
  pos=1;
  while (pos>0)
   m=strlen(balacc);
    while (i<m)
    i=i+1;
     if ((substr(balacc,i,1)!=0) and (substr(balacc,i,1)!=1) and (substr(balacc,i,1)!=2) and (substr(balacc,i,1)!=3)
        and (substr(balacc,i,1)!=4) and (substr(balacc,i,1)!=5) and (substr(balacc,i,1)!=6) and (substr(balacc,i,1)!=7)
        and (substr(balacc,i,1)!=8) and (substr(balacc,i,1)!=9))
        pos =i;
         if (pos!=1)
           if (strlen(inter)<1)
            inter = inter+" (acc.t_balance like '"+substr(balacc,1,pos-1)+"%'"; 
           else
            inter=inter+"  or acc.t_balance like '"+substr(balacc,1,pos-1)+"%'";
           end;
         end;
        balacc=substr(balacc, pos+1);
        i=m+1;
     end;
    end;
    if (i==m)
    pos=0;
    end;
    i=0;
   end;
   if (strlen(inter)>0)
    inter = inter +"  or acc.t_balance like '"+substr(balacc,1)+"%'";; 
   else
    inter = " (acc.t_balance like '"+substr(balacc,1)+"%'"; 
   end;
    inter=inter+")";
 end;
 if (not flag3)
   fl3 = "     AND acc.t_type_account NOT LIKE ('%U%') "+
         " AND acc.t_type_account NOT LIKE ('%П%') "+
         " AND acc.t_type_account NOT LIKE ('%Н%')";
 else
   fl3="";
 end;
// 15.01.2015 DPN I-00544627-2
     if (flag1)
        rest = " rsb_account.restac (acc.t_account,acc.t_code_currency, TO_DATE ('"+reportdate+"', 'DD-MM-YYYY'), acc.t_chapter, NULL,0)";
        if (not flag4)
            restf= " AND "+rest+" !=0 ";
        end;
        if(not flag3) 
            restf = restf + "AND substr(acc.t_account,6,3) = '810' ";
        end;
     else
         //Teleshova 10.01.2015
         //if(_bank.is_PRBB)
         if(flag3) // 15.01.2015 DPN I-00544627-2
             rest = "rsb_account.restac (acc.t_account,acc.t_code_currency, TO_DATE ('"+reportdate+"', 'DD-MM-YYYY'), acc.t_chapter, NULL,0)";
         else
             rest = "rsb_account.restac (acc.t_account,acc.t_code_currency, TO_DATE ('"+reportdate+"', 'DD-MM-YYYY'), acc.t_chapter, NULL)";
         end;
         if (not flag4)
            restf="AND "+rest+" !=0 ";
         end;
         restf = restf + " AND acc.t_code_currency <> 0 ";
     end;
initprogress(-1, "Ждите, отбираются счета", "Ждите, отбираются счета");
useprogress(-1);
sql = " select count(*) as cnt "+
    " FROM daccount_dbt acc,  dfininstr_dbt inst "+
   " WHERE  "+inter+
    branch+
     fl3+
    " AND inst.t_fiid=acc.t_code_currency "+symb+
    " AND (acc.t_open_close = chr(0) OR acc.t_close_date > TO_DATE ('"+reportdate+"', 'DD-MM-YYYY')) "+
    " AND acc.t_open_date<=TO_DATE ('"+reportdate+"', 'DD-MM-YYYY') " + // ЭТОГО В ТЗ НЕТ!!! НО ТАК ПРАВИЛЬНО!!!
    restf; 
first=trsbdataset(sql);
first.movenext();
maxs=first.cnt;
debugbreak;
sql = " SELECT   inst.t_fi_code , acc.t_balance, acc.t_account, acc.t_nameaccount, "+
         rest+
       "  AS rest, acc.T_KIND_ACCOUNT, "+
       "  acc.t_open_date, acc.t_close_date, acc.t_code_currency "+
    " FROM daccount_dbt acc, dfininstr_dbt inst "+
   " WHERE  "+ inter+
    branch+
     fl3+
    " AND inst.t_fiid=acc.t_code_currency "+symb+
    " AND (acc.t_open_close = chr(0) OR acc.t_close_date > TO_DATE ('"+reportdate+"', 'DD-MM-YYYY')) "+
    " AND acc.t_open_date<=TO_DATE ('"+reportdate+"', 'DD-MM-YYYY') " + // ЭТОГО В ТЗ НЕТ!!! НО ТАК ПРАВИЛЬНО!!!
    restf+                
" ORDER BY acc.t_balance, acc.t_code_currency ";
//getstring(sql);
first=trsbdataset(sql);
second=trsbdataset(sql);
remprogress(-1);
initprogress(int(maxs),"Ждите,, производится обработка счетов","Ждите,, производится обработка счетов");
val_p=0;
val_a=0;
j=0;
saldo_p=0;
saldo_a=0;
i=0;
saldo_pall=0;
saldo_aall=0;
all=0;
s=0;
 if (second.movenext())
 else return 0;
end;
s=s+1;
useprogress(s);
 if (flag1)
 debugbreak;
 str = "Состояние лицевых счетов по подразделению " + branchname;
   rep_ac.str = ToAnsi (str, true);
   insert (rep_ac);
 str = "на балансовом счете " + second.balance + " за " + date(reportdate);
   rep_ac.str = ToAnsi (str, true);
   insert (rep_ac);
   str = "Лицевой счет " + ";" "Наименование счета " + ";" + "Сальдо А " + ";" + "Сальдо П" + ";" + "Открыт" + ";" + "Закрыт";
   rep_ac.str = ToAnsi (str, true);
   insert (rep_ac);

else
str = "Состояние лицевых счетов по подразделению " + branchname;
   rep_ac.str = ToAnsi (str, true);
   insert (rep_ac);
 str = "на балансовом счете " + second.balance + " за " + date(reportdate);
   rep_ac.str = ToAnsi (str, true);
   insert (rep_ac);
 
str = "Вал." + ";" + "Лицевой счет " + ";" "Наименование счета " + ";" + "Сальдо А " + ";" + "Сальдо П" + ";" + "Открыт" + ";" + "Закрыт";
   rep_ac.str = ToAnsi (str, true);
   insert (rep_ac);

end;   
   while (second.movenext())
    s=s+1;
    useprogress(s);
     if (first.movenext())
     end;
     asize(arr,0);
    strsplit(string(first.nameaccount), arr, 37);
       if (first.close_date=="");
        clos="00.00.0000";
       else
        clos=date(first.close_date);
       end;
       
     if (flag1)
      /*РУБЛИ*/
      if(first.balance==second.balance)
       if ((first.kind_account == "П") and (first.rest > 0))
         str =  first.account + ";" + first.nameaccount + ";" + ";" + money(first.rest) + ";" + date(first.open_date) + ";" + string(clos);
         rep_ac.str = ToAnsi (str, true);
         insert (rep_ac);
     
       saldo_p=saldo_p+first.rest;
       saldo_pall=saldo_pall+first.rest;
      
       
       else
        str = first.account + ";" + first.nameaccount + ";" + money(first.rest) + ";" + " " + ";" + date(first.open_date) + ";" + string(clos);
        rep_ac.str = ToAnsi (str, true);
        insert (rep_ac);
         
       saldo_a=saldo_a+first.rest;
       saldo_aall=saldo_aall+first.rest;
      
       end;
        i=i+1;
        all=all+1;
       else
       if ((first.kind_account == "П") and (first.rest > 0))
       str = first.account + ";" + first.nameaccount + ";"  + ";" + money(first.rest) + ";" + date(first.open_date) + ";" + string(clos);
       rep_ac.str = ToAnsi (str, true);
       insert (rep_ac);
      
       saldo_p=saldo_p+first.rest;
       saldo_pall=saldo_pall+first.rest;
       
       else
       str = first.account + ";" + first.nameaccount + ";" + money(first.rest) + ";" + ";" + date(first.open_date) + ";" + string(clos);
       rep_ac.str = ToAnsi (str, true);
       insert (rep_ac);
       
       saldo_a=saldo_a+first.rest;
       saldo_aall=saldo_aall+first.rest;
       
       end;
      i=i+1;
        all=all+1;
        str = "Итого по БС " +  first.balance + ";" + "Количество счетов "  +  int(i) + ";" +  money(saldo_a) + ";" + money(saldo_p);
        rep_ac.str = ToAnsi (str, true);
        insert (rep_ac);
      

      saldo_p=0;
      saldo_a=0;
      i=0;
      str = "Состояние лицевых счетов по подразделению" + branchname;
      rep_ac.str = ToAnsi (str, true);
      insert (rep_ac);
      str = "на балансовом счете " + second.balance + ";" + "за " + date(reportdate);
      rep_ac.str = ToAnsi (str, true);
      insert (rep_ac);


      end;
     
     else
      /*ВАЛЮТА*/
        if(first.balance==second.balance)
         if (first.code_currency==second.code_currency)
       if (first.kind_account == "П") 
                
        str = first.fi_code + ";" + first.account + ";" + first.nameaccount + ";" + ";" +  money(first.rest) + ";" +  date(first.open_date) + ";" + string(clos);
        rep_ac.str = ToAnsi (str, true);
        insert (rep_ac);
         flagstr=0;
       
       saldo_p=saldo_p+first.rest;
       saldo_pall=saldo_pall+first.rest;
       
          val_p=val_p+first.rest;
       else
        
        str = first.fi_code + ";" + first.account + ";" + first.nameaccount + ";" + money(first.rest) + ";" + ";" + date(first.open_date) + ";" + string(clos);
        rep_ac.str = ToAnsi (str, true);
        insert (rep_ac);
         flagstr=0;
       
       saldo_a=saldo_a+first.rest;
       saldo_aall=saldo_aall+first.rest;
          val_a=val_a+first.rest;
       end;
          i=i+1;
        all=all+1;
          j=j+1;
          else
    /*Итог по валюте*/
       if (first.kind_account == "П") 
        
         flagstr=0;
         str = first.fi_code + ";" + first.account + ";" + first.nameaccount + ";" + ";" +  money(first.rest) + ";" +  date(first.open_date) + ";" + string(clos);
         rep_ac.str = ToAnsi (str, true);
         insert (rep_ac);
        
       saldo_p=saldo_p+first.rest;
       saldo_pall=saldo_pall+first.rest;
          val_p=val_p+first.rest;
       
       else
       
         flagstr=0;
         str = first.fi_code + ";" + first.account + ";" + first.nameaccount + ";" + money(first.rest) + ";" + ";" +  date(first.open_date) + ";" + string(clos);
         rep_ac.str = ToAnsi (str, true);
         insert (rep_ac);
        
       saldo_a=saldo_a+first.rest;
       saldo_aall=saldo_aall+first.rest;
          val_a=val_a+first.rest;
       
       end;
          i=i+1;
        all=all+1;
          j=j+1;
          str = "Итого в валюте "  + first.fi_code + ": " + ";" + "количество счетов " + j + ";" + ";" + money(val_a) + ";" + money(val_p);
          rep_ac.str = ToAnsi (str, true);
          insert (rep_ac);
           val_p=0;
           val_a=0;
           j=0;
           flagstr=1;
           end;
          else
          debugbreak; //stop
          str = second.kind_account;
          rep_ac.str = ToAnsi (str, true);
          insert (rep_ac);
          
       if (first.kind_account == "П")
        
         flagstr=0;
         str = first.fi_code + ";" + first.account + ";" + first.nameaccount + ";" + ";" + money(first.rest) + ";" + date(first.open_date) + ";" + string(clos);
         rep_ac.str = ToAnsi (str, true);
         insert (rep_ac);
        
       saldo_p=saldo_p+first.rest;
       saldo_pall=saldo_pall+first.rest;
          val_p=val_p+first.rest;
       
       else
       
         flagstr=0;
         str = first.fi_code + ";" +  first.account + ";" + first.nameaccount + ";" +  money(first.rest) + ";" + ";" + date(first.open_date) + ";" + string(clos);
         rep_ac.str = ToAnsi (str, true);
         insert (rep_ac);
        
       saldo_a=saldo_a+first.rest;
       saldo_aall=saldo_aall+first.rest;
          val_a=val_a+first.rest;
       
       end;
           i=i+1;
        all=all+1;
           j=j+1;
           str = "Итого по БС "  + first.balance + ";" + "количество счетов: " + i + ";" + ";" + money(saldo_a) + ";" + money(saldo_p);
           rep_ac.str = ToAnsi (str, true);
           insert (rep_ac);
           val_p=0;
           val_a=0;
           j=0;
         saldo_p=0;
        saldo_a=0;
        i=0;
        flagstr=1;

debugbreak;
       str = "Состояние лицевых счетов по подразделению " + branchname;
       rep_ac.str = ToAnsi (str, true);
       insert (rep_ac);
       str = "на балансовом счете " + second.balance + ", " + "за " + date(reportdate);
       rep_ac.str = ToAnsi (str, true);
       insert (rep_ac);



 
       end;
   end;
 end;
 remprogress(s);
 initprogress(-1,"Ждите, расчитываются итоги","Ждите, расчитываются итоги");
 useprogress(-1);
 /*Завершение обработки*/
debugbreak;
 if (first.movenext())
 end;
     asize(arr,0);
    strsplit(string(first.nameaccount), arr, 37);
       if (first.close_date=="");
        clos="00.00.0000";
       else
        clos=date(first.close_date);
       end;

 if (flag1)
       if ((first.kind_account == "П")and (first.rest > 0))
       str = first.account + ";" + first.nameaccount + ";" + ";" + money(first.rest) + ";" + date(first.open_date) + ";" +  string(clos);
       rep_ac.str = ToAnsi (str, true);
       insert (rep_ac);
       
       saldo_p=saldo_p+first.rest;
       saldo_pall=saldo_pall+first.rest;
       
       else
        str = first.account + ";" + first.nameaccount + ";" + money(first.rest) + ";" + ";" + date(first.open_date) + ";" +  string(clos);
        rep_ac.str = ToAnsi (str, true);
        insert (rep_ac);
        
       saldo_a=saldo_a+first.rest;
       saldo_aall=saldo_aall+first.rest;
       
       end;
    i=i+1;
    all=all+1;
        str = "ИТОГО по БС "  + first.balance + ":" + ";" + "КОЛИЧЕСТВО СЧЕТОВ: " + int(i) + ";" + money(saldo_a) + ";" + money(saldo_p);
        rep_ac.str = ToAnsi (str, true);
        insert (rep_ac);
        
      saldo_p=0;
      saldo_a=0;
      i=0;
[└──────────────────────────────────────────────────────────┴─────────────────────┴───────────────────────┴────────────────────────┘];
saldo_p=0;
saldo_a=0;
i=0;

str = " ";
rep_ac.str = ToAnsi (str, true);
insert (rep_ac);
str = "Состояние лицевых счетов по списку счетов за " + reportdate;
 rep_ac.str = ToAnsi (str, true);
 insert (rep_ac);
 str = "Балансовые счета" + ";" + "Сальдо А" + ";" + "Сальдо П" + ";" + "Количество счетов";
 rep_ac.str = ToAnsi (str, true);
 insert (rep_ac);
 str = "Итого по списку счетов: ";
 rep_ac.str = ToAnsi (str, true);
 insert (rep_ac);
 str = repbal + ";" + money(saldo_aall) + ";" + money(saldo_pall) + ";" + int(all);
 rep_ac.str = ToAnsi (str, true);
 insert (rep_ac);


 else
/*ВАЛЮТА*/
       if (first.kind_account == "П")
         flagstr=0;
         str = first.fi_code + ";" + first.account + ";" + first.nameaccount +";" + ";" + money(first.rest) + ";" + date(first.open_date) + ";" + string(clos);
         rep_ac.str = ToAnsi (str, true);
         insert (rep_ac);
        
       saldo_p=saldo_p+first.rest;
       saldo_pall=saldo_pall+first.rest;
          val_p=val_p+first.rest;
       
       else
        
         flagstr=0;
         str = first.fi_code + ";" +  first.account + ";" + first.nameaccount + ";" + money(first.rest) + ";" + ";" + date(first.open_date)+ ";" + string(clos);
         rep_ac.str = ToAnsi (str, true);
         insert (rep_ac);
        
       saldo_a=saldo_a+first.rest;
       saldo_aall=saldo_aall+first.rest;
          val_a=val_a+first.rest;
       
       end;
    i=i+1;
        all=all+1;
    j=j+1;
        str = "Итого в валюте " + first.fi_code + ";" + "количество счетов " + j + ";" + ";" + money(val_a) + ";" + money(val_p);
        rep_ac.str = ToAnsi (str, true);
        insert (rep_ac);
        str = "Итого по БС " + first.balance + ";" + " количество счетов " + j + ";" + ";" + money(saldo_a) + ";" + money(saldo_p);
        rep_ac.str = ToAnsi (str, true);
        insert (rep_ac);
       
    val_p=0;
    val_a=0;
    j=0;
  saldo_p=0;
  saldo_a=0;
  i=0;
[└──────────────────────────────────────────────────────────────────────┴─────────────────────┴───────────────────────┴────────────────────────┘];

sql = " SELECT   SUM ( "+
         rest+
       ")  AS sum, count(*) as cnt, "+
       "  acc.t_balance, inst.t_fi_code "+
    " FROM daccount_dbt acc, daccblnc_dbt bln, dfininstr_dbt inst "+
   " WHERE  acc.t_account = bln.t_account and"+
    inter+
    branch+
     fl3+
    " AND inst.t_fiid=acc.t_code_currency "+
    " AND (acc.t_open_close = chr(0) OR acc.t_close_date > TO_DATE ('"+reportdate+"', 'DD-MM-YYYY')) "+
    restf+                
" group BY acc.t_balance, inst.t_fi_code ";
data=trsbdataset(sql);
str = " ";
rep_ac.str = ToAnsi (str, true);
insert (rep_ac);
str = "Состояние лицевых счетов по списку счетов за " + reportdate;
rep_ac.str = ToAnsi (str, true);
insert (rep_ac);
str = "Балансовые счета " + ";" + "Валюта " + ";" + "Сальдо А" + ";" + "Сальдо П" + ";" + "Количество счетов";
rep_ac.str = ToAnsi (str, true);
insert (rep_ac);
str = "Итого по списку счетов: ";
rep_ac.str = ToAnsi (str, true);
insert (rep_ac);

                     
flagstr=0;
ch_n = 0;
 while (data.movenext())
 ch_n = ch_n + 1;
   if (data.sum<0)
   debugbreak;
      
      str = int(data.balance) + ";" + int(data.fi_code) + ";" + money(data.sum) + ";"+ ";" + int(data.cnt);
      rep_ac.str = ToAnsi (str, true);
      insert (rep_ac);
      
   else
      
      str = int(data.balance) + ";" + int(data.fi_code) + ";" + ";" + money(data.sum) + ";" + int(data.cnt);
      rep_ac.str = ToAnsi (str, true);
      insert (rep_ac);
      
   end;
   flagstr=1;
 end;
 
 str = "Итого по списку счетов: " + repbal + ";" + ";" + ";" + ";" + int(all);
 rep_ac.str = ToAnsi (str, true);
 insert (rep_ac);

 end;
  remprogress(-1);

   b = 3;
   if (flag1)
    e = int(all) + 4;
    else
    e = int(all) + ch_n + 2;
   end;
   close(rep_ac);
   copyToMe();
   ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
   ex = ob.CreateComObject ("Excel.Application");
   if (not(GetFileInfo("$"+tempFileNameBezPuti,@dd,@tt,@ii,@all_local_puth))); //all_local_puth- то что надо. полный путь абсолютный локальный
      msgbox("не могу найти на локальном диске файл "+tempFileNameBezPuti+"          \n останавливаюсь");
    exit(0);
   end;
  all_local_puth = SUBSTR(all_local_puth, 2);
   
   var aw=tarray;
   var w1=tarray;
   var w2=tarray;
   var w3=tarray;
   var w4=tarray;
   var w5=tarray;
   var w6=tarray;
   var w7=tarray;
   var w8=tarray;
   var w9=tarray;

   w1(0)=1; w1(1)=2; //формат столбца - текст
   w2(0)=2; w2(1)=2; //формат столбца - General
   w3(0)=3; w3(1)=2;//формат столбца - General
   w4(0)=4; w4(1)=1;//формат столбца - General
   w5(0)=5; w5(1)=2;//формат столбца - General
   w6(0)=6; w6(1)=2;//формат столбца - General
   w7(0)=7; w7(1)=1;//формат столбца - General
   w8(0)=8; w8(1)=1;//формат столбца - текст
   w9(0)=9; w9(1)=1;//формат столбца - 
   
   aw(0)=w1;
   aw(1)=w2;
   aw(2)=w3;
   aw(3)=w4;
   aw(4)=w5;
   aw(5)=w6;
   aw(6)=w7;
   aw(7)=w8;
   aw(8)=w8;

	aw.MarshalByVal =true; // работает только так. передача по значению через @aw вызывает ошибку
	w1.MarshalByVal =true;
	w2.MarshalByVal =true;
	w3.MarshalByVal =true;
	w4.MarshalByVal =true;
	w5.MarshalByVal =true;
	w6.MarshalByVal =true;
	w7.MarshalByVal =true;
	w8.MarshalByVal =true;
   w9.MarshalByVal =true;
   
    ex.Workbooks.opentext(all_local_puth,1251,1,1,-4142,false,false,true,false,false,false,";",aw,1,"."," ",true,true);
   //var format_str:string = "# ##0" + ex.International(3) + "00";
   private var m_range:string="a"+b+":h"+e; //выделить границы ячеек
   private var m_range_niz;
   obSheet = ex.Sheets(1);
   ex.Sheets(1).Range("A:A").ColumnWidth=24;
   ex.Sheets(1).Range("B:B").ColumnWidth=36;
   ex.Sheets(1).Range("C:C").ColumnWidth=23;
   ex.Sheets(1).Range("D:D").ColumnWidth=23;
   ex.Sheets(1).Range("E:E").ColumnWidth=23;
   ex.Sheets(1).Range("F:F").ColumnWidth=22;
   ex.Sheets(1).Range("G:G").ColumnWidth=20;
   ex.Sheets(1).Range("1:1").RowHeight=25;
   ex.Sheets(1).Range("2:2").RowHeight=25;
   ex.Sheets(1).Rows("3:3").RowHeight=35;
   ex.Sheets(1).Range("A1:E1").MergeCells=true;
   ex.Sheets(1).Range("A2:E2").MergeCells=true;
   ex.Sheets(1).Range("A:G").WrapText=True;
   ex.Sheets(1).Rows("1:2").VerticalAlignment = 2;
   ex.Sheets(1).Rows("3:3").VerticalAlignment = 2;
   ex.Sheets(1).Range("A:G").HorizontalAlignment = 3;
   if (flag1)
       ex.Sheets(1).Range("A3:F3").interior.color = 4035000;
       m_range = "a"+b+":f"+e; // переделать
       x = e + 3;
       
       m_range_niz = "a" + x + ":d" + (x + 2);
       obSheet.Range(m_range_niz).Borders.Weight = 2;
   else
       x = e + 2;
       y = x + 3;
       m_range = "a" + b + ":g" + (e + 2);
       debugbreak;
       ch_n = y + ch_n + 2;
       m_range_niz = "a" + y + ":e" + ch_n;
       obSheet.Range(m_range_niz).Borders.Weight = 2;
       ex.Sheets(1).Range("A3:G3").interior.color = 4035000;
   end;
   ex.Sheets(1).Range("A:G").Font.Name = "Arial";
   ex.Sheets(1).Range("A:G").Font.Size = 10;
   
   
   private var m_cells:string; //объединение ячеек
   if (flag1)
   x = e + 2;
   y = x + 1;
   m_cells = "a" +x+ ":b" +x;
    ex.Sheets(1).Range(m_cells).MergeCells = true;
    else
     
   end;
   //ex.Sheets(1).Range("D:G").NumberFormat = format_str;
  //if (flag1)
   
   //
   obSheet.Range(m_range).Borders.Weight = 2;
  //end;
 
   ex.Visible = true;
 end; //end R-145922-3  
 /*Обработчик диалоговой панели ввода исходных данных для печати*/
MACRO Event (dlg, cmd, id, key) 

   var const_mess = "~F2~ Продолжить ~ESC~ Выход ";
   var const_mess2 = "~F2~ Продолжить ~SPACE~ ~ESC~ Выход ";
   array symbolname;
   symbolname(0)="A Касса";
   symbolname(1)="D Касса ККО Зареченский";
   symbolname(2)="F Касса ККО Пермский 1";
   symbolname(3)="G Касса ККО Иркутский 1";
   symbolname(4)="I Касса ККО Пермский 2";
   symbolname(5)="L Касса ККО Дворянский";
   symbolname(6)="N Касса ККО Иркутский 2";
   symbolname(7)="R Касса ККО Гагаринский";
   symbolname(8)="Q Касса ККО Сенной";
   symbolname(9)="S Касса ККО Березники 1";
   symbolname(10)="U Касса ККО Березники 2";
   symbolname(11)="Z Касса ККО Фрунзенский";
   symbolname(12)="Б Бухгалтерия";
   symbolname(13)="Г Резерв";
   symbolname(14)="Д Межбанк";
   symbolname(15)="Е Касса ЦМТ";
   symbolname(16)="Ё Интернет банк";
   symbolname(17)="Ж ОВКУ";
   symbolname(18)="З Депозиты юр.лиц";
   symbolname(19)="Й Касса Тверской";
   symbolname(20)="К КЭО";
   symbolname(21)="Л ГМР";
   symbolname(22)="М Касса Садово-Кудринский";
   symbolname(23)="Н Розничные финанс. Услуги";
   symbolname(24)="О Депозиты физ.лиц";
   symbolname(25)="П Вексельный сектор";
   symbolname(26)="Т К-к офис Тульский";
   symbolname(27)="У ДО 'Центральный'";
   symbolname(28)="Ф  Касса Петровский";
   symbolname(29)="Х Касса Д/о 'Автозаводский'";
   symbolname(30)="Ц Ценные бумаги";
   symbolname(31)="Ч Касса ККО Тюменский 1";
   symbolname(32)="Ш Касса ККО Дзержинский";
   symbolname(33)="Щ Неторговые операц  ";
   symbolname(34)="Ы Касса ККО Красноармейский";
   symbolname(35)="Ъ ОКВКУ 4";
   symbolname(36)="Ь Касса Толстовский";
   symbolname(37)="Ю ОКВКУ № 1 (Пудовкина)";
   symbolname(38)="Я Касса Новоданиловский";

   /*Первоначальная инициализация полей*/
   if(cmd == DLG_INIT)
      dprt_v = 0;
      dlg.rec.F1  = "X";
      dlg.rec.F2  = "";
      dlg.rec.F3  = "";
      dlg.rec.F4  = "";
      dlg.rec.balacc="";
      dlg.rec.reportDate = {curDate};
      dlg.rec.Symbol = "";
      dlg.rec.Branch = getclientnameid({operdprt});
      dlg.rec.branchname = GetClientName({operdprt});
      UpdateFields(dlg); 
   end;
   
   /*Установка подсказок в строке состояния*/
   if (cmd==DLG_SETFOCUS)
     if ((FldName(dlg,id)=="F1") or (FldName(dlg,id)=="F2") or (FldName(dlg,id)=="F3") or (FldName(dlg,id)=="F4"))
       message(const_mess2);
     elif (FldName(dlg,id)=="ReportDate")
       message(" ~F3~ Выбор даты из календаря "+const_mess);
     elif (FldName(dlg,id)=="Branch")
       message(" ~F3~ Выбор филиала "+const_mess);
     elif (FldName(dlg,id)=="Balacc")
       message(const_mess);
    end;
   end;
   
   if (cmd == DLG_REMFOCUS)
     /*Проверка корректности дат отчета*/
     if (FldName(dlg,id) == "ReportDate")
       if ( dlg.rec.reportDate > {curdate} )
         MsgBox("Дата начала периода не может быть больше даты текущего операционного дня");
        return CM_CANCEL;
       end;
     end;
      UpdateFields(dlg); 
   end;

   if (cmd == DLG_KEY)
     /*Выход из диалогового окна формирования отчета*/
     if (KEY == KEY_ESC)
       return exit(1);//CM_CANCEL;
     /*Выбор данных из списка*/
     elif ( KEY == KEY_F3)
        /*Выбор даты из календаря*/
        if (FldName(dlg,id) == "ReportDate")
          dlg.rec.reportdate = GetDateByCalendar ({curDate});
        end;
        if (FldName(dlg,id) == "Branch")
           if (ListDepartment (Department))
              dlg.rec.branch = Department.name;
              dprt_v = department.code;
              dlg.rec.branchname = GetClientName(Department.code); //17.06.2014 DPN I-00494920-2
              message(" ~F3~ Список подразделений "+const_mess);
              UpdateFields(dlg);
           end;
        end;

        if (FldName(dlg,id) == "Symbol")
            g=menu(symbolname,"Символ отчетности счета");
            if (g==0)  
              dlg.rec.symbol = string(dlg.rec.symbol,"A");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==1)  
              dlg.rec.symbol = string(dlg.rec.symbol,"D");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==2)  
              dlg.rec.symbol = string(dlg.rec.symbol,"F");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==3)  
              dlg.rec.symbol = string(dlg.rec.symbol,"G");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==4)  
              dlg.rec.symbol = string(dlg.rec.symbol,"I");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==5)  
              dlg.rec.symbol = string(dlg.rec.symbol,"L");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==6)  
              dlg.rec.symbol = string(dlg.rec.symbol,"N");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==7)  
              dlg.rec.symbol = string(dlg.rec.symbol,"R");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==8)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Q");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==9)  
              dlg.rec.symbol = string(dlg.rec.symbol,"S");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==10)  
              dlg.rec.symbol = string(dlg.rec.symbol,"U");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==11)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Z");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==12)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Б");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==13)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Г");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==14)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Д");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==15)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Е");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==16)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ё");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==17)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ж");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==18)  
              dlg.rec.symbol = string(dlg.rec.symbol,"З");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==19)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Й");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==20)  
              dlg.rec.symbol = string(dlg.rec.symbol,"К");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==21)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Л");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==22)  
              dlg.rec.symbol = string(dlg.rec.symbol,"М");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==23)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Н");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==24)  
              dlg.rec.symbol = string(dlg.rec.symbol,"О");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==25)  
              dlg.rec.symbol = string(dlg.rec.symbol,"П");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==26)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Т");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==27)  
              dlg.rec.symbol = string(dlg.rec.symbol,"У");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==28)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ф");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==29)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Х");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==30)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ц");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==31)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ч");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==32)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ш");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==33)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Щ");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==34)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ы");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==35)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ъ");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==36)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ь");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==37)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Ю");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            elif (g==38)  
              dlg.rec.symbol = string(dlg.rec.symbol,"Я");
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);
            else
              message(" ~F3~ Список типов символов счетов "+const_mess);
              UpdateFields(dlg);

            end;
        end;

        
     elif (KEY == KEY_SPACE)
          /*Сброс установок в поле офис банка*/
           if (FldName(dlg,id) == "F1") 
            if (dlg.rec.f1=="")
            dlg.rec.f1="X";
            dlg.rec.f2="";
            UpdateFields(dlg);
            else
            dlg.rec.f1="";
            dlg.rec.f2="X";
             UpdateFields(dlg);
            end;
           elif (FldName(dlg,id) == "Allb") 
            if (dlg.rec.allb=="")
            dlg.rec.allb="X";
            UpdateFields(dlg);
            else
            dlg.rec.allb="";
            UpdateFields(dlg);
            end;
           elif (FldName(dlg,id) == "Symbol")
              dlg.rec.symbol = "";
           elif (FldName(dlg,id) == "F2")
            if (dlg.rec.f2=="")
            dlg.rec.f2="X";
            dlg.rec.f1="";
            UpdateFields(dlg);
            else
            dlg.rec.f2="";
            dlg.rec.f1="X";
            UpdateFields(dlg);
            end;
           elif (FldName(dlg,id) == "f3") 
            if (dlg.rec.f3=="")
            dlg.rec.f3="X";
            UpdateFields(dlg);
            else
            dlg.rec.f3="";
             UpdateFields(dlg);
            end;
           elif (FldName(dlg,id) == "f4")
            if (dlg.rec.f4=="")
            dlg.rec.f4="X";
            UpdateFields(dlg);
            else
            dlg.rec.f4="";
            UpdateFields(dlg);
            end;
           end;

     elif (( KEY == KEY_F2 ) or ( KEY == KEY_ENTER ))        //Проверки при вводе
         //Sokolov  выпуск в формате Excel R-145922-3
          menu_vibor (0) = "Обычный формат";
          menu_vibor (1) = "Excel";
          otchet_excel = Menu (menu_vibor, "Выберите вариант формата выписки");
          //end
         if ( dlg.rec.Reportdate > {curdate} )
                MsgBox("Дата начала периода не может быть больше даты текущего операционного дня");
                return CM_IGNORE;
         end;
        reportDate  = dlg.rec.reportdate;
        flag1=dlg.rec.f1;
        flag3=dlg.rec.f3;
        symbol=dlg.rec.symbol;
        flag4=dlg.rec.f4;
        if (Department.nodetype==1)
//          branch = " AND acc.t_department = "+department.code;
          branch = " AND acc.t_branch = "+dprt_v;
        elif (dprt_v==0)
          branch="";
        else
          branch = " AND acc.t_branch = "+dprt_v;
        end;
        balacc=dlg.rec.balacc;
        branchname=dlg.rec.branchname;
        if ( dlg.rec.allb == "X")
          branch = "";
        branchname="Весь банк";
//          branch = " AND acc.t_department = "+department.code;
        end;
         if (strlen(balacc)>3)    
           Return CM_SAVE;
        else msgbox("Неверно введен балансовый");
           Return CM_IGNORE;
        end;
         if ((reportdate < {curDate}))    
           Return CM_SAVE;
        elif (gettrue(true,"Дата равна текущему опрерационному дню. Продолжить?"))
           Return CM_SAVE;
        end;
      else
           Return CM_IGNORE;
     end;
   end;     
END;

//private macro total


if (RunDialog(dlg, "Event"))                  
if (flag1=="X")
   flag1=1;
   else
   flag1=0;
end;
if (flag3=="X")
   flag3=1;
   else
   flag3=0;
end;
if (flag4=="X")
   flag4=1;
   else
   flag4=0;
end;
//Sokolov R-145922-3
if (otchet_excel == 0)
 outall();
else
 outall_excel();
end;//end R-145922-3
setoutput(null,true);
end;


END;


