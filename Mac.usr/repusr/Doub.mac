/* Процедура контроля задвоенных внешних списаний                */
/*                                                               */
/*                                                               */
/*Тихомиров А.Н. 03.02.2009                    Версия 1.2        */
import "KeyCodes.mac";
import RSD, rsbdataset, globals, Календарь, bankinter, "timestat.mac";
import lib_compare, lib_agents;

private var sl, sql, s, sq, paymentid,amount,number,payeraccount,receiveraccount,receiverinn,receivername,ground, ArchDate, codename, bankcode;
private var resultamount, result:integer, _p;
var Fulloutputl, outl, outputl="double.lbr";                    

GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outl);
Fulloutputl = FindPath(outputl, outl);
var dlg = TRecHandler("double", fulloutputl, TRUE); 

private var nameout = GetTxtFileName("doub");
private var flag = True;

/*
const  KEY_F1      =315;
const  KEY_F2      =316;
const  KEY_F3      =317;
const KEY_ESC      = 27;
const KEY_ENTER    = 13;
*/

/*Ищем существует ли сообщение выгруженое*/
private macro Doub(_id)
   var s = "select dwlmes_dbt.t_sessionid,  dwlsess_dbt.t_BankDate, dwlmes_dbt.t_trn "+ 
           "  from dwlpm_dbt, dpmpaym_dbt, dwlmeslnk_dbt, dwlmes_dbt, dwlsess_dbt  "+
           " where     dwlpm_dbt.t_PaymentID = dpmpaym_dbt.t_PaymentID  "+
           "       and dwlpm_dbt.t_WlPmNum = 0 and dwlpm_dbt.t_Direct = CHR(0) and dwlmeslnk_dbt.t_ObjKind = 501 "+
           "       and dwlmeslnk_dbt.t_ObjID = dwlpm_dbt.t_WlPmID and dwlmes_dbt.t_MesID = dwlmeslnk_dbt.t_MesID "+
           "       and dwlmes_dbt.t_sessionid=dwlsess_dbt.t_sessionid and dwlpm_dbt.t_PaymentID="+_id;

   var data=TRsbDataSet(s);
   if(data.movenext())
      return data.bankdate;
   else
      return "";
   end;
end;

private macro Outalld(id)

   sq = "select count(*) cnt "+
        "  from ((select pmpaym.t_paymentid "+
        "           from dpmprop_dbt pmprop, dpmpaym_dbt pmpaym, dpmrmprop_dbt rmprop, dwlmeslnk_dbt wlmeslnk, dwlpm_dbt wlpm "+
        "          where     pmprop.t_group=1 and pmprop.t_issender=chr(0) and pmpaym.t_fiid =0 and pmpaym.t_paymentid=pmprop.t_paymentid "+
        "                and pmpaym.t_dockind=201  and pmpaym.t_enddepartment="+{operdprt}+" and wlpm.t_direct=chr(0) "+
        "                and wlpm.t_propstatus in (7000,7150,7300,7600,8000,32000) and wlpm.t_WlPmNum=0 and pmpaym.t_paymentid=wlpm.t_paymentid "+
        "                and pmpaym.t_paymentid=rmprop.t_paymentid and wlmeslnk.t_BankDate = to_date('"+ArchDate+"','DD-MM-YYYY') "+
        "                and wlmeslnk.t_ObjID = wlpm.t_WlPmID )"+
        "   union "+
        "       (select pmpaym.t_paymentid "+
        "          from doproper_dbt opr, dpmprop_dbt pmprop, dpmpaym_dbt pmpaym, dpmrmprop_dbt rmprop, doprstep_dbt step "+
        "         where     pmprop.t_group=1 and pmprop.t_issender=chr(0) and pmpaym.t_fiid =0 and pmpaym.t_paymentid=pmprop.t_paymentid "+
        "               and pmpaym.t_dockind=201 and pmpaym.t_enddepartment="+{operdprt}+" and pmpaym.t_PaymStatus=3000 and pmprop.t_PropStatus=3000 "+ 
        "               and pmpaym.t_paymentid=rmprop.t_paymentid and step.t_id_operation=opr.t_id_operation and opr.t_documentid = LPAD(TO_CHAR(pmpaym.t_paymentid), 34,'0') "+
        "               and step.t_symbol='Ф' and step.T_ISEXECUTE='R'))";
   var d = TRsbDataSet(sq);
   d.movenext();

   /*Отбираем счета*/
   sql = "  (select pmprop.t_codename, pmprop.t_bankcode, rmprop.t_receivername, rmprop.t_ground, rmprop.t_receiverinn, pmpaym.t_paymentid, pmpaym.t_amount, rmprop.t_number, pmpaym.t_payeraccount, pmpaym.t_receiveraccount "+
         "     from dpmprop_dbt pmprop, dpmpaym_dbt pmpaym, dpmrmprop_dbt rmprop, dwlmeslnk_dbt wlmeslnk, dwlpm_dbt wlpm  "+
         "    where     pmprop.t_group=1 and pmprop.t_issender=chr(0) and pmpaym.t_fiid =0 and pmpaym.t_paymentid=pmprop.t_paymentid "+
         "          and pmpaym.t_dockind=201  and pmpaym.t_enddepartment="+{operdprt}+" and wlpm.t_direct=chr(0) "+
         "          and wlpm.t_propstatus in (7000,7150,7300,7600,8000,32000) and wlpm.t_WlPmNum=0 and pmpaym.t_paymentid=wlpm.t_paymentid "+
         "          and pmpaym.t_paymentid=rmprop.t_paymentid and wlmeslnk.t_BankDate=to_date('"+ArchDate+"','DD-MM-YYYY') "+
         "          and wlmeslnk.t_ObjID = wlpm.t_WlPmID ) "+
         "    union "+
         "  (select pmprop.t_codename, pmprop.t_bankcode, rmprop.t_receivername, rmprop.t_ground, rmprop.t_receiverinn, "+
         "          pmpaym.t_paymentid, pmpaym.t_amount, rmprop.t_number, pmpaym.t_payeraccount, pmpaym.t_receiveraccount "+
         "     from doproper_dbt opr, dpmprop_dbt pmprop, dpmpaym_dbt pmpaym, dpmrmprop_dbt rmprop, doprstep_dbt step "+
         "    where     pmprop.t_group=1 and pmprop.t_issender=chr(0) and pmpaym.t_fiid =0 and pmpaym.t_paymentid=pmprop.t_paymentid "+
         "          and pmpaym.t_dockind=201 and pmpaym.t_enddepartment="+{operdprt}+" and pmpaym.t_PaymStatus=3000 and pmprop.t_PropStatus=3000 "+ 
         "          and pmpaym.t_paymentid=rmprop.t_paymentid and step.t_id_operation=opr.t_id_operation and opr.t_documentid = LPAD(TO_CHAR(pmpaym.t_paymentid), 34,'0')"+
         "          and step.t_symbol='Ф' and step.T_ISEXECUTE='R') "+
         " order by t_number, t_amount, t_payeraccount, t_receiveraccount ";
 
   var dataset=TRsbDataSet(sql);
   dataset.movenext();

   paymentid       = dataset.paymentid;
   amount          = dataset.amount;
   number          = dataset.number;
   payeraccount    = dataset.payeraccount;
   receiveraccount = dataset.receiveraccount;
   receiverinn     = dataset.receiverinn;
   receivername    = dataset.receivername;
   ground          = dataset.ground;
   codename        = dataset.codename;
   bankcode        = dataset.bankcode;

   s=0;
   result=0;
   resultamount=0;
   SetOutput(nameout,false);

   /*Все задвоенные выводим в файл*/

   [     Задвоенные внешние списания за ########## и ##########
 
   ┌─────┬────────────────────┬────────────┬──────────────────┬────────────────────┬────────────────────┬──────────┬───────────────────────────────────┬─────────┬─────────────────────────────────────────────┐
   │№ п/п│      № докум       │    Дата    │       Сумма      │     Номер счета    │     Номер счета    │    ИНН   │            Получатель             │БИК банка│    Назначене                                │
   │     │                    │  отправки  │                  │     плательщика    │      получателя    │получателя│                                   │  получ. │     платежа                                 │
   ├─────┼────────────────────┼────────────┼──────────────────┼────────────────────┼────────────────────┼──────────┼───────────────────────────────────┼─────────┼─────────────────────────────────────────────┤]
   ({curdate},ArchDate);

   //SaveAmount (d.cnt); //Сохраним количество Здесь количество не надо
   
   if (not flag)
      initprogress(int(d.cnt),"Идет сверка документов... Ждите","Контроль дублирования документов");
   end;

   if (flag) //проставляем раз для первого документа, далее в цикле
      if (not setCtgVal(id, PT_USR_CAT_CHECK_STATE, 3/*Задвоенные*/, {curdate})) end;
   end;

   while (dataset.movenext())
      s=s+1;
      if ((d.cnt!=s) and (number==dataset.number) and (amount==dataset.amount) and (payeraccount==dataset.payeraccount) 
           and (receiveraccount==dataset.receiveraccount))

         if(doub(paymentid)=="")                          //Печатаем только если одно выгружено, другое нет
            if (doub(dataset.paymentid)!="")
               if (result>0)
                  [├─────┼────────────────────┼────────────┼──────────────────┼────────────────────┼────────────────────┼──────────┼───────────────────────────────────┼─────────┼─────────────────────────────────────────────┤];
               end;
               [│#####│####################│############│##################│####################│####################│##########│###################################│#########│#############################################│]
               (result+1:c,number:c,string(string(doub(paymentid)):10):c,amount:c,payeraccount:c,receiveraccount:c,receiverinn:c,receivername,bankcode:c,ground);
               [│     │####################│############│##################│####################│####################│##########│###################################│#########│#############################################│]
               (dataset.number:c,string(string(doub(dataset.paymentid)):10):c,dataset.amount:c,dataset.payeraccount:c,dataset.receiveraccount:c,dataset.receiverinn:c,dataset.receivername,dataset.bankcode:c,dataset.ground);
               if (flag)
                  if (not IsExistsInLog(paymentid,3/*Задвоенные*/))
                     if (getCtgValue(paymentid, PT_USR_CAT_CHECK_STATE/*1017*/,{Curdate}) != 3/*Задвоенные*/)
                        _p = RSBPayment (paymentid);
                        if (not Checks_LogProc(paymentid,"",3/*Задвоенные*/)) end;
                        if (not setCtgVal(paymentid, PT_USR_CAT_CHECK_STATE, 3/*Задвоенные*/, {curdate})) end;
                        if (_p.PaymStatus != 32000)
                           if (not setCtgVal(paymentid, PT_USR_CAT_CHECK_BEFORE_UNLOAD, 7/*Ручная обработка*/, {curdate})) end;
                        end;
                        _p = null;
                     end;
                  end;
                  if (not IsExistsInLog(dataset.paymentid,3/*Задвоенные*/))
                     if (getCtgValue(dataset.paymentid, PT_USR_CAT_CHECK_STATE/*1017*/,{Curdate}) != 3/*Задвоенные*/)
                        _p = RSBPayment (dataset.paymentid);
                        if (not Checks_LogProc(dataset.paymentid,"",3/*Задвоенные*/)) end;
                        if (not setCtgVal(dataset.paymentid, PT_USR_CAT_CHECK_STATE, 3/*Задвоенные*/, {curdate})) end;
                        if (_p.PaymStatus != 32000)
                           if (not setCtgVal(dataset.paymentid, PT_USR_CAT_CHECK_BEFORE_UNLOAD, 7/*Ручная обработка*/, {curdate})) end;
                        end;
                        _p = null;
                     end;
                  end;
               end;
               result=result+1;
               resultamount=resultamount+amount;
            end;
         else 
            if (doub(dataset.paymentid)=="")
               if (s>1)
                  [├─────┼────────────────────┼────────────┼──────────────────┼────────────────────┼────────────────────┼──────────┼───────────────────────────────────┼─────────┼─────────────────────────────────────────────┤];
               end;
               [│#####│####################│############│##################│####################│####################│##########│###################################│#########│#############################################│]
               (result+1:c,number:c,string(string(doub(paymentid)):10):c,amount:c,payeraccount:c,receiveraccount:c,receiverinn:c,receivername,bankcode:c,ground);
               [│     │####################│############│##################│####################│####################│##########│###################################│#########│#############################################│]
               (dataset.number:c,string(string(doub(dataset.paymentid)):10):c,dataset.amount:c,dataset.payeraccount:c,dataset.receiveraccount:c,dataset.receiverinn:c,dataset.receivername,dataset.bankcode:c,dataset.ground);
               if (flag)
                  if (not IsExistsInLog(paymentid,3/*Задвоенные*/))
                     if (getCtgValue(paymentid, PT_USR_CAT_CHECK_STATE/*1017*/,{Curdate}) != 3/*Задвоенные*/)
                        _p = RSBPayment (paymentid);
                        if (not Checks_LogProc(paymentid,"",3/*Задвоенные*/)) end;
                        if (not setCtgVal(paymentid, PT_USR_CAT_CHECK_STATE, 3/*Задвоенные*/, {curdate})) end;
                        if (_p.PaymStatus != 32000)
                           if (not setCtgVal(paymentid, PT_USR_CAT_CHECK_BEFORE_UNLOAD, 7/*Ручная обработка*/, {curdate})) end;
                        end;
                        _p = null;
                     end;
                  end;
                  if (not IsExistsInLog(dataset.paymentid,3/*Задвоенные*/))
                     if (getCtgValue(dataset.paymentid, PT_USR_CAT_CHECK_STATE/*1017*/,{Curdate}) != 3/*Задвоенные*/)
                        _p = RSBPayment (dataset.paymentid);
                        if (not Checks_LogProc(dataset.paymentid,"",3/*Задвоенные*/)) end;
                        if (not setCtgVal(dataset.paymentid, PT_USR_CAT_CHECK_STATE, 3/*Задвоенные*/, {curdate})) end;
                        if (_p.PaymStatus != 32000)
                           if (not setCtgVal(dataset.paymentid, PT_USR_CAT_CHECK_BEFORE_UNLOAD, 7/*Ручная обработка*/, {curdate})) end;
                        end;
                        _p = null;
                     end;
                  end;
               end;
               result=result+1;
               resultamount=resultamount+amount;
            end;
         end;     
      end;

      paymentid       = dataset.paymentid;
      amount          = dataset.amount;
      number          = dataset.number;
      payeraccount    = dataset.payeraccount;
      receiveraccount = dataset.receiveraccount;
      receiverinn     = dataset.receiverinn;
      receivername    = dataset.receivername;
      ground          = dataset.ground;
      codename        = dataset.codename;
      bankcode        = dataset.bankcode;

      if (not flag)
         useprogress(s);
      end;
   end;

   if (not flag)
      remprogress(s);
   end;
   [├─────┴────────────────────┴────────────┴──────────────────┴────────────────────┴────────────────────┴──────────┴───────────────────────────────────┴─────────┴─────────────────────────────────────────────┤];
   if (result!=0)
      [│ Всего совпадений (задвоений) документов #### на сумму ###################                                                                                                                                 │]
      (result, resultamount);
   else
      [│ Совпадений (задвоений) не найдено                                                                                                                                 │];
   end;
   [└───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘];
   SetOutput(null,true);
END;

 /*Обработчик диалоговой панели ввода исходных данных для печати*/
MACRO Event (dlg, cmd, id, key) 

   var const_mess = " ~F3~ Выбор даты из календаря ~F2~ Продолжить ~ESC~ Выход ";

   /*Первоначальная инициализация полей*/
   if(cmd == DLG_INIT)
      dlg.rec.ArchDate = {curDate}-1;
      UpdateFields(dlg); 
   end;
   
   /*Установка подсказок в строке состояния*/
   if (cmd==DLG_SETFOCUS)
      message(const_mess);
   end;
   
   if (cmd == DLG_REMFOCUS)
      /*Проверка корректности дат отчета*/
      if (FldName(dlg,id) == "ArchDate")
         if ( dlg.rec.ArchDate >= {curdate} )
            MsgBox("Архивная дата должна быть меньше даты текущего операционного дня");
            return CM_CANCEL;
         end;
      end;
         UpdateFields(dlg); 
      end;

      if (cmd == DLG_KEY)
         /*Выход из диалогового окна формирования отчета*/
         if (KEY == KEY_ESC)
            return exit(1);//CM_CANCEL;
         /*Выбор данных из списка*/
         elif ( KEY == KEY_F3)
            /*Выбор даты из календаря*/
            if (FldName(dlg,id) == "ArchDate")
               dlg.rec.ArchDate = GetDateByCalendar ({curDate}-1);
               if (dlg.rec.ArchDate>= {curdate} )
                  MsgBox("Архивная дата должна быть меньше даты текущего операционного дня");
                  dlg.rec.ArchDate= {curdate}-1;
                  return CM_IGNORE;
               end;
            end;
        
         elif (( KEY == KEY_F2 ) or (KEY == KEY_ENTER))         //Проверки при вводе
            if ( dlg.rec.ArchDate >= {curdate} )
               MsgBox("Архивная дата должна быть меньше даты текущего операционного дня");
               return CM_IGNORE;
            end;
            ArchDate  = dlg.rec.ArchDate;
            Return CM_SAVE;
         end;
      else
           Return CM_IGNORE;
      end;
END;

/*Точка входа в макрос*/
macro doubl(id)
   if (isNull(id)) flag = False; end;
   if (flag)
      SaveBeginTime();//Старт
      ArchDate = {Curdate} - 1;
      OutAlld(id);
      SaveEndTime(2); //Завершили
   else
      if (RunDialog(dlg, "Event"))                  
         SaveBeginTime();//Старт
         OutAlld;
         ViewFile(nameout);
         SaveEndTime(2); //Завершили
      end; 
   end;
end;

//doubl(40521257);
//doubl();
