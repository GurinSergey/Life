/*************************************************************************/
/*     Дополнение к автоматизированной банковской системе RS-Bank        */
/*                                                                       */
/*    Имя файла        : rep_bal_svod.mac                                */
/*                                                                       */
/*    Описание         : I-075628 ф.101 в формате для программы сводной  */
/*                       отчетности                                      */
/*                                                                       */
/*    Программист      : Котов С.С.                                      */
/*                                                                       */
/*    Создан           : 07.10.2010                                      */
/*                                                                       */
//    31.01.2012 vihrov-kotov   СПОД должен вкючаться
//    28.10.2014 R-481068-2 DPN - Переписал запрос, доадаптировал под 31, убрал мусор 
//    06.11.2014 по заявке Римкович - добавил обработку 99999 и 99998
//    14.01.2014 R-527483-2 DPN Сделал, чтоб в обороты попадали СПОДы
/*************************************************************************/

import Globals, FIInter;
import oralib, likepy, CurrInter;
Import rsexts;

macro ExportBal(dt,ch,p)

var select:string;
var params:TArray; 
var rs:object;                    
var act_in,pas_in,act_out,pas_out,deb,cre;
var act_in_bal,pas_in_bal,act_out_bal,pas_out_bal,deb_bal,cre_bal;
var i=0;
var bal="";
var TextDir,Value_err;
var day,mon,year;
var sqlTextPokr = "instr(account.t_type_account,'П')=0"; // KS 26.11.2010 - условие для исключения счетов покрытий
    sqlTextPokr = strsubst(sqlTextPokr,"'","''");

var form;

// Путь к файлу выгрузки
GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR", V_STRING, TextDir, Value_err);
DateSplit(dt,day,mon,year);
if (day<10)
  day="0"+day;
end;
if (mon<10)
  mon="0"+mon;
end;

TextDir = TextDir+"\\exp_svod_"+ch+"_"+year+mon+day+".txt";
SetOutput(TextDir,false);

// Градусник
  select = "SELECT count(*) cnt " +
           "  from dbalance_dbt acc,dfininstr_dbt fin " +
           " where acc.t_chapter=" + ch +
           "   and acc.t_inumplan=0 " +
           "   and acc.t_type_balance!='1' " +
           "   and acc.t_kind_account in ('А','П','0') " +
           "   and fin.t_fi_kind=1 ";

  rs = execSQLselect( select, null, false );

  rs.moveNext();

  i=int(rs.value(0));

  InitProgress (-1,"Формирование данных для выгрузки","Формирование данных для выгрузки");

// Запрос для выгрузки

   select =         "select \n" +
                    "  case \n" +
                    "   when INSTR(upper(p.t_name),'ЭНГЕЛЬС')>0    then 5 \n" +
                    "   when INSTR(upper(p.t_name),'ВОЛГОГРАД')>0  then 2 \n" +
                    "   when INSTR(upper(p.t_name),'УЛЬЯНОВСК')>0  then 7 \n" +
                    "   when INSTR(upper(p.t_name),'ВОРОНЕЖ')>0    then 8 \n" +
                    "   when INSTR(upper(p.t_name),'СТАВРОПОЛЬ')>0 then 9 \n" +
                    "   else 1 \n" +
                    "  end \n" +
                    "from ddp_dep_dbt t, dparty_dbt p where t.t_partyid = p.t_partyid and t.t_parentcode=0";

  rs = execSQLselect( select ); 
  if ( rs and rs.moveNext())
   [NUM=#](rs.value(0):1:0);
  else
   [NUM=1];
  end;

//28.10.2014 R-481068-2 DPN 
// 4.01.2014 R-527483-2 DPN 
  select =
    "  SELECT   t_balance,                                                                                                                                "+ "\n" +
    "           t_kind_account,                                                                                                                           "+ "\n" +
    "           t_ccy,                                                                                                                                    "+ "\n" +
    "           SUM (restin),                                                                                                                             "+ "\n" +
    "           SUM (debeta),                                                                                                                             "+ "\n" +
    "           SUM (KreditA),                                                                                                                            "+ "\n" +
    "           SUM (restout),                                                                                                                            "+ "\n" +
    "           SUM (restinC),                                                                                                                            "+ "\n" +
    "           SUM (debetaC),                                                                                                                            "+ "\n" +
    "           SUM (KreditAC),                                                                                                                           "+ "\n" +
    "           SUM (restoutC),                                                                                                                           "+ "\n" +
    "           t_fiid                                                                                                                                    "+ "\n" +
    "    FROM   (SELECT   acc.t_balance,                                                                                                                  "+ "\n" +
    "                     acc.t_kind_account,                                                                                                             "+ "\n" +
    "                     case                                                                                                                            "+ "\n" +
    "                         when ( substr(acc.t_balance, 1, 3) in ('706', '707', '708') or acc.t_balance in ('99999', '99998')) then 'RUR'                                                        "+ "\n" +
    "                         else fin.t_ccy                                                                                                              "+ "\n" +
    "                     end t_ccy,                                                                                                                      "+ "\n" +
    "                     rsb_account.RestAC  (account.t_account,account.t_code_currency,:dt - 1,account.t_chapter,NULL,0)                      restin,   "+ "\n" +
    "                     rsi_rsb_account.debetac_full (account.t_account,account.t_chapter,account.t_code_currency,:dt,:dt,0)                           debeta,   "+ "\n" +
    "                     rsi_rsb_account.kreditac_full(account.t_account,account.t_chapter,account.t_code_currency,:dt,:dt,0)                           kreditA,  "+ "\n" +
    "                     rsb_account.RestAC  (account.t_account,account.t_code_currency,:dt,account.t_chapter,NULL,0)                          restout,  "+ "\n" +
    "                     case                                                                                                                            "+ "\n" +
    "                         when ( substr(acc.t_balance, 1, 3) in ('706', '707', '708') or acc.t_balance in ('99999', '99998'))                                                                   "+ "\n" +
    "                         then rsb_account.RestAC  (account.t_account,account.t_code_currency,:dt - 1,account.t_chapter,NULL,0)                       "+ "\n" +
    "                         else rsb_account.RestAC  (account.t_account,account.t_code_currency,:dt - 1,account.t_chapter,NULL,account.t_code_currency) "+ "\n" +
    "                     end                                                                                                                   restinC,  "+ "\n" +
    "                     case                                                                                                                            "+ "\n" +
    "                         when ( substr(acc.t_balance, 1, 3) in ('706', '707', '708') or acc.t_balance in ('99999', '99998'))                                                                   "+ "\n" +
    "                         then rsi_rsb_account.debetac_full (account.t_account,account.t_chapter,account.t_code_currency,:dt,:dt,0)                           "+ "\n" +
    "                         else rsi_rsb_account.debetac_full (account.t_account,account.t_chapter,account.t_code_currency,:dt,:dt,account.t_code_currency)      "+ "\n" +
    "                     end                                                                                                                   debetaC,  "+ "\n" +   
    "                     case                                                                                                                            "+ "\n" +
    "                         when ( substr(acc.t_balance, 1, 3) in ('706', '707', '708') or acc.t_balance in ('99999', '99998'))                                                                   "+ "\n" +
    "                         then rsi_rsb_account.kreditac_full(account.t_account,account.t_chapter,account.t_code_currency,:dt,:dt,0)                            "+ "\n" + 
    "                         else rsi_rsb_account.kreditac_full(account.t_account,account.t_chapter,account.t_code_currency,:dt,:dt,account.t_code_currency)      "+ "\n" + 
    "                     end                                                                                                                   kreditAC, "+ "\n" + 
    "                     case                                                                                                                            "+ "\n" + 
    "                         when ( substr(acc.t_balance, 1, 3) in ('706', '707', '708') or acc.t_balance in ('99999', '99998'))                                                                   "+ "\n" +
    "                         then rsb_account.RestAC  (account.t_account,account.t_code_currency,:dt,account.t_chapter,NULL, 0)                          "+ "\n" +
    "                         else rsb_account.RestAC  (account.t_account,account.t_code_currency,:dt,account.t_chapter,NULL,account.t_code_currency)     "+ "\n" +
    "                     end                                                                                                                   restoutC, "+ "\n" +           
    "                     case                                                                                                                            "+ "\n" +
    "                         when ( substr(acc.t_balance, 1, 3) in ('706', '707', '708') or acc.t_balance in ('99999', '99998')) then 0                  "+ "\n" +
    "                         else  fin.t_fiid                                                                                                            "+ "\n" + 
    "                     end                                                                                                                     t_fiid  "+ "\n" +
    "              FROM   dbalance_dbt acc,                                                                                                               "+ "\n" +
    "                     dfininstr_dbt fin,                                                                                                              "+ "\n" +
    "                     daccblnc_dbt accblnc,                                                                                                           "+ "\n" +
    "                     daccount_dbt account                                                                                                            "+ "\n" +
    "             WHERE       acc.t_chapter = " + ch                                                                                                       + "\n" +
    "                     AND acc.t_inumplan = 0                                                                                                          "+ "\n" +
    "                     AND acc.t_type_balance != '1'                                                                                                   "+ "\n" +
    "                     AND acc.t_kind_account IN ('А', 'П', '0')                                                                                       "+ "\n" +
    "                     AND fin.t_fi_kind = 1                                                                                                           "+ "\n" +
    "                     AND accblnc.t_balance0 = acc.t_balance /*and accblnc.t_balance0='70706' */                                                      "+ "\n" +
    "                     AND accblnc.t_account = account.t_account                                                                                       "+ "\n" +
    "                     AND account.t_code_currency = fin.t_fiid )                                                                                      "+ "\n" +
    " GROUP BY  t_balance,                                                                                                                                "+ "\n" +
    "           t_kind_account,                                                                                                                           "+ "\n" +
    "           t_ccy,                                                                                                                                    "+ "\n" +
    "           t_fiid                                                                                                                                    "+ "\n" +
    " ORDER BY  t_balance, DECODE (t_fiid, 0, 0, 1), t_ccy                                                                                                "+ "\n" ;


//println(select);
//return 0;
  params = makeArray(  SQLParam(":dt", dt));

  rs = execSQLselect( select, params, false ); 

  RemProgress (-1); 
  InitProgress (i,"Выгрузка","Выгрузка");
  i=0;

//  if   (ch==1)
//    [TYPE=0I];
//  elif (ch==3)
//    [TYPE=2I];
//  else
    [TYPE=#I](ch-1);
//  end;

  DateSplit(dt,day,mon,year);
  if (mon<10)
    mon="0"+mon;
  end;
  if (day<10)
    day=" "+day;
  end;
  [DATE=########](""+year+mon+day);

  while( rs and rs.moveNext())
    if (valtype(rs.value(1)) != 26)
      if ((rs.value(3)!=0)or(rs.value(4)!=0)or(rs.value(5)!=0)or(rs.value(6)!=0))
        if (bal!=rs.value(0))
          if (bal!="")
            [##### *** #################### #################### #################### #################### #################### ####################]
            (bal,money(act_in_bal),money(pas_in_bal),money(deb_bal),money(cre_bal),money(act_out_bal),money(pas_out_bal));
          end;
          bal=rs.value(0);
          act_in_bal=$0;
          pas_in_bal=$0;
          act_out_bal=$0;
          pas_out_bal=$0;
          deb_bal=$0;
          cre_bal=$0;
        end;
        if (rs.value(1)=="П")
          act_in =$0;
          pas_in =rs.value(7);
          act_out=$0;
          pas_out=rs.value(10);
        else
          act_in =-rs.value(7);
          pas_in =$0;
          act_out=-rs.value(10);
          pas_out=$0;
        end;
        deb=rs.value(8);
        cre=rs.value(9);
        [##### ### #################### #################### #################### #################### #################### ####################]
        (rs.value(0),rs.value(2),money(act_in),money(pas_in),money(deb),money(cre),money(act_out),money(pas_out));
        if (p)
         if (round(rs.value(3) - rs.value(4) + rs.value(5) - rs.value(6),2) !=0)
           SetOutput();
           println("Расхождение в остатках по счету "+rs.value(0));
           SetOutput(TextDir,true);
         end;
        end;

        if (rs.value(11)!=NATCUR)
          if (rs.value(1)=="П")
            act_in =$0;
            pas_in =rs.value(3);
            act_out=$0;
            pas_out=rs.value(6);
          else
            act_in =-rs.value(3);
            pas_in =$0;
            act_out=-rs.value(6);
            pas_out=$0;
          end;
          deb=rs.value(4);
          cre=rs.value(5);
        end;

        act_in_bal=act_in_bal+act_in;
        pas_in_bal=pas_in_bal+pas_in;
        act_out_bal=act_out_bal+act_out;
        pas_out_bal=pas_out_bal+pas_out;
        deb_bal=deb_bal+deb;
        cre_bal=cre_bal+cre;
        
      end;
    end;
    i = i + 1;       
    UseProgress (i); 
  end;
            [##### *** #################### #################### #################### #################### #################### ####################]
            (bal,act_in_bal:0:2,pas_in_bal:0:2,deb_bal,cre_bal,act_out_bal:0:2,pas_out_bal:0:2);

  RemProgress (i);
  SetOutput();                  
  println("Выгрузка окончена.");
  if (copyfile(TextDir,"$C:\\rspar\\exp_acc_"+form+"_"+year+mon+day+".txt"))
   println("Создан файл C:\\rspar\\exp_acc_"+form+"_"+year+mon+day+".txt");
  else
   println("Создан файл "+TextDir);
  end;
  ViewFile(TextDir);
end;

macro ExportAcc(dt1,dt2,form)

var select:string;
var params:TArray; 
var rs:object;                    
var k,j,i=0;
var bal="";
var TextDir,Value_err;
var day,mon,year;
var pr1,pr2,pr3,pr4,kl;
var dt;
var ExpMask; // Маски счетов для выгрузки

// Путь к файлу выгрузки
GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\TEXTDIR", V_STRING, TextDir, Value_err);
DateSplit(dt2,day,mon,year);
if (day<10)
  day="0"+day;
end;
if (mon<10)
  mon="0"+mon;
end;

TextDir = TextDir+"\\exp_acc_"+form+"_"+year+mon+day+".txt";
SetOutput(TextDir,false);

// Градусник
  select = " SELECT count(*) cnt " +
           "   from daccount_dbt acc " +
           "  where acc.t_chapter = 1 " +
           "    and acc.t_Open_Date BETWEEN to_date('01.01.0001', 'DD.MM.YYYY') AND :dt2 " +
           "    and (acc.t_Close_Date BETWEEN :dt1 AND to_date('31.12.9999', 'DD.MM.YYYY') " +
           "         or " +
           "         acc.t_Close_Date = to_date('01.01.0001', 'DD.MM.YYYY')) ";
  if (form==1)

    GetRegistryValue("PRBB\\REPORT\\EXP_SVOD_ALL", V_STRING, TextDir, Value_err);
    if( Value_err != 0)
      ExpMask = "42304810100100035677,42304810300100066653,42304810500100067025,"+
                "42304810400100074943,42304810900100082671,42304810500100088965,"+
                "30110*3922,30110*7733,30110*6532,"+
                "30232*,32001*,32201*,47423*,47422*,47426*,"+
                "50106*3922,50406*3922,30602*3922,452*2438,50205*912,50406*912,50208*920,50213*920";
    end;                                                                    

  else   

    GetRegistryValue("PRBB\\REPORT\\EXP_SVOD_345", V_STRING, TextDir, Value_err);
    if( Value_err != 0)
      ExpMask = "42304810100100035677,42304810300100066653,42304810500100067025,42304810400100074943,"+
                "42304810900100082671,42304810500100088965";
    end;     
                                                              
  end;   

  ExpMask = " and (" + ConvertMaskToSQLFormat( ExpMask, "acc.t_account" ) + ")";

  select = select + ExpMask;

  params = makeArray(  SQLParam(":dt1", dt1),
                       SQLParam(":dt2", dt2));

  rs = execSQLselect( select, params, false ); 

  rs.moveNext();

  i=int(rs.value(0));

  InitProgress (-1,"Формирование данных для выгрузки","Формирование данных для выгрузки");

// Запрос для выгрузки
  select = " SELECT acc.t_account, " +
           "        case acc.t_type_account when 'А' then -1 else 1 end ttt, " +
           "        acc.t_code_currency " +
           "   from daccount_dbt acc " +
           "  where acc.t_chapter = 1 " +
           "    and acc.t_Open_Date BETWEEN to_date('01.01.0001', 'DD.MM.YYYY') AND :dt2 " +
           "    and (acc.t_Close_Date BETWEEN :dt1 AND to_date('31.12.9999', 'DD.MM.YYYY') " +
           "         or " +
           "         acc.t_Close_Date = to_date('01.01.0001', 'DD.MM.YYYY')) ";

  select = select + ExpMask;

  select = select +
           " order by acc.t_account";

  rs = execSQLselect( select, params, false ); 

  RemProgress (-1); 
  InitProgress (i,"Выгрузка","Выгрузка");
  i=0;

  [##########;##########](dt1:c:f,dt2:c:f);

  while( rs and rs.moveNext())
 
      print(rs.value(0));
      k=rs.value(1);                
      dt=dt1;                   

      while(dt<dt2+1) 
        print(";");
        print(k*DebetA(rs.value(0),dt):0:0);
        print(";");
        print(k*KreditA(rs.value(0),dt):0:0);
        print(";");
        print((-1)*k*ActivA(rs.value(0),dt):0:0);
        print(";");
        print(k*PassivA(rs.value(0),dt):0:0);
        print(";"); j=rs.value(2);
        print(k*DebetAC(rs.value(0),j,dt):0:0);
        print(";");
        print(k*KreditAC(rs.value(0),j,dt):0:0);
        print(";");
        print((-1)*k*ActivAC(rs.value(0),j,dt):0:0);
        print(";");
        print(k*PassivAC(rs.value(0),j,dt):0:0);

        dt=dt+1;
      end;        
    println("");

    i = i + 1;       
    UseProgress (i); 
  end;

  RemProgress (i);
  SetOutput();                  
  println("Выгрузка окончена.");
  if (copyfile(TextDir,"$C:\\rspar\\exp_acc_"+form+"_"+year+mon+day+".txt"))
   println("Создан файл C:\\rspar\\exp_acc_"+form+"_"+year+mon+day+".txt");
  else
   println("Создан файл "+TextDir);
  end;
  ViewFile(TextDir);
end;

var dt1={curdate}-1;    
var dt2=dt1;
var m;
array mn,mn1,mn2;
var p=false;
 
// Выбор формата выгрузки              
  mn(0) = "Ежедневный валютный баланс";
  mn(1) = "Остатки и обороты по лицевым счетам";
  m=menu(mn,null,"Выберите действие");

  mn1(0) = "Ежедневный валютный баланс по балансовым счетам";
  mn1(1) = "Ежедневный валютный баланс по внебалансовым счетам";
  mn1(2) = "Ежедневный валютный баланс по срочным операциям";
  mn2(0) = "Выгрузка полного набора счетов";
  mn2(1) = "Выгрузка для формы 345";
  if (m==0)
    m=menu(mn1,null,"Выберите формат выгрузки");
  else
    m=menu(mn2,null,"Выберите формат выгрузки")+3;
  end;

  // Выполнять ли проверку
  if (m==1)
    if (GetTrue(true,"Выполнить проверку остатков на сходимость?"))
      p=true;
    end;
  end;

  // Диалог
  if (m<3)
    GetDate(dt1, "Введите дату баланса", false);
  else
    GetDate(dt1, "Начальная дата отчета", false);
    GetDate(dt2, "Конечная дата отчета", false);
  end;
  
  if (m==0)
    ExportBal(dt1,1,p);
  elif (m==1)
    ExportBal(dt1,3,p);
  elif (m==2)
    ExportBal(dt1,4,p);
  elif (m==3)
    ExportAcc(dt1,dt2,1);
  elif (m==4)
    ExportAcc(dt1,dt2,2);
  end;