/**********************************************/
/* Реестр внешних платежей new (для "Пойдем") */
/* Создан 10.04.2013                          */
/*Исполнитель: Володина В.Г                   */
/**********************************************/

import RsbDataSet, globals, календарь;
import "KeyCodes.mac";
import "fg_Life_parm.mac"; 
// "fastexcel.mac", output="reestr.xlsx",
var 	exst, i=10, gg=1, i_old, page, flag, ex, ob, out, f, countlist,fulloutput,output, obBook, obsheet, obWind;

private var DecimalSeparator;

var DateBegin, DateEnd,  NumberPack, OperN, Account, data,ac, opr,SumAmount = 0, INN, KPP, INN1, KPP1, cnt = 0;
var OperText, PackText, AccountText, KPPText;

record accountr (Account); 

array    Text;
array    Buttons;

File RepFile() txt;
var dat,mon,year;
datesplit({curdate},dat,mon,year);
var RepFileName = gettxtfilename(string(dat,mon,year,".csv"));

private Var fgBank = fg_life_subject({OurBank});         


countlist = 1;
var _i=0,bal2="",bal="";    

var Fulloutputlbr, outlbr, outputlbr="reestr.lbr";                    
GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,outlbr);
Fulloutputlbr = FindPath(outputlbr, outlbr);
if (not Fulloutputlbr)
	msgbox("Не найдена LBR");
	exit();
end;

var dlg = TRecHandler("reestr", fulloutputlbr, TRUE);

 /*Обработчик диалоговой панели ввода исходных данных для печати*/ 
MACRO reestr (dlg, cmd, id, key)
   var const_mess = " ~F3~ Выбор значения из списка ~F2~ Продолжить ~ESC~ Выход ", SQLQuery, SQLQuery1, rsrec, cmd1;
  
  if(cmd == DLG_INIT)          
      dlg.rec.DateBegin = {curDate};
      DateBegin=dlg.rec.DateBegin;

      dlg.rec.DateEnd = {curDate};
      DateEnd=dlg.rec.DateEnd;

      dlg.rec.Account="";
      UpdateFields(dlg);
   end;

 /*Установка подсказок в строке состояния*/
   if (cmd==DLG_SETFOCUS)
      if (FldName(dlg,id)=="DateBegin")
       message(" ~F3~ Выбор даты из календаря "+const_mess);
      elif (FldName(dlg,id)=="DateEnd")
       message(" ~F3~ Выбор даты из календаря "+const_mess);
      elif (FldName(dlg,id)=="Account")
       message(" ~F3~ Выбор Счета "+const_mess);
      end;
   end;

if (cmd == DLG_REMFOCUS)
     /*Проверка корректности дат отчета*/
    
  if (FldName(dlg,id) == "DateBegin")
        if ( dlg.rec.DateBegin > {curdate} )
          MsgBox("Дата начала периода не может быть больше даты текущего операционного дня");
          return CM_CANCEL;
        elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
          MsgBox("Дата начала периода не может быть больше даты окончания периода");
          return CM_CANCEL;
        end;
  end;

  if (FldName(dlg,id) == "DateEnd")
        if ( dlg.rec.DateEnd > {curdate} )
         MsgBox("Дата не может быть больше даты текущего операционного дня");
         return CM_CANCEL;
        elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
         MsgBox("Дата окончания периода не может быть меньше даты начала периода");
         return CM_CANCEL;
        end;
  end;

   if ((FldName(dlg,id) == "Account") and (strlen(dlg.rec.Account)>0))
       ac =StrSubst ( dlg.rec.Account, "?", "_" );
       ac =StrSubst ( ac, "*", "%" );
       data=trsbdataset(string("select count(*) as cnt from daccount_dbt where t_account like '"+ac+"'"));
        if (data.movenext())
          if (data.cnt==0)
             MsgBox("Счет не найден");
             return CM_CANCEL;
          elif (data.cnt==1)
          end;
        end;
        dlg.rec.Account = ac;
    end;
          
end;

if (cmd == DLG_KEY)
     /*Выход из диалогового окна формирования отчета*/
     if (KEY == KEY_ESC)
       return exit(1);//CM_CANCEL;
     /*Выбор данных из списка*/
     elif ( KEY == KEY_F3)
        /*Выбор даты из календаря*/
        if (FldName(dlg,id) == "DateBegin")
          dlg.rec.DateBegin = GetDateByCalendar ({curDate});
        end;
        if (FldName(dlg,id) == "DateEnd")
          dlg.rec.DateEnd = GetDateByCalendar ({curDate});
        end;
        if (FldName(dlg,id) == "Account")
           if (Listaccount (accountr,gg,0,dlg.rec.Account))
              dlg.rec.Account = accountr.Account;
              message(" ~F3~ Выберете из списка  "+const_mess);
              UpdateFields(dlg);
           end;
          end;
     elif  (KEY == KEY_ENTER)         //Проверки при вводе
         if ( dlg.rec.DateBegin > {curdate} )
                MsgBox("Дата начала периода не может быть больше даты текущего операционного дня");
                return CM_IGNORE;
         elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
                MsgBox("Дата начала периода не может быть больше даты окончания периода");
                return CM_IGNORE;
         end;
         if ( dlg.rec.DateEnd > {curdate} )
                MsgBox("Дата не может быть больше даты текущего операционного дня");
                return CM_IGNORE;
         elif ( dlg.rec.DateBegin > dlg.rec.DateEnd )
                MsgBox("Дата окончания периода не может быть меньше даты начала периода");
                return CM_IGNORE;
         end;
          if (FldName(dlg,id)=="KPP")
                if(strlen(dlg.rec.KPP)>9)
                   msgbox("Длина КПП не должна превышать 9 символов");
                   return CM_IGNORE;
                end;
          end;

        DateBegin=dlg.rec.DateBegin;
        DateEnd=dlg.rec.DateEnd;
        Account=dlg.rec.Account;
     elif ( KEY == KEY_F2 )   Return CM_SAVE;

     elif (KEY==KEY_UP)    Return 0 ;

     elif (KEY==KEY_DOWN)  return 0;
     
     elif (KEY==KEY_LEFT)  return 0;
     
     elif (KEY==KEY_RIGHT)  return 0; 
    
     elif (KEY==KEY_TAB) return 0;     
     
     else
           Return CM_IGNORE;
     end;
   end;
 

end; 

macro calculate(DateBegin, DateEnd, Account, OperN, NumberPack, KPP)
	var query, dat;

 
    query = "SELECT   rm.t_number,"+ 
           " pm.t_valuedate,"+ 
           " rm.t_payerinn,"+ 
           " decode(rm.t_receiverinn, chr(1), ' ', rm.t_receiverinn), "+
           " RM.T_PAYERNAME, "+
           " PM.T_PAYERACCOUNT,"+ 
           " RM.T_RECEIVERNAME, " +
           " PM.T_RECEIVERACCOUNT," +
           " PROP.T_BANKCODE,  "+
           " RM.T_RECEIVERBANKNAME,"+ 
           " decode(RM.T_RECEIVERCORRACCNOSTRO, chr(1), ' ', RM.T_RECEIVERCORRACCNOSTRO), "+
           " pm.t_amount, "+
           " rm.t_ground,  "+
           " decode(RM.T_TAXAUTHORSTATE,chr(1),chr(0),RM.T_TAXAUTHORSTATE),"+  
           " decode(RM.T_TAXPMDATE,chr(1),chr(0),RM.T_TAXPMDATE),  "+
           " decode(RM.T_TAXPMGROUND,chr(1),chr(0),RM.T_TAXPMGROUND), "+ 
            "decode(RM.T_TAXPMNUMBER,chr(1),chr(0),RM.T_TAXPMNUMBER),"+  
           " decode(RM.T_TAXPMPERIOD,chr(1),chr(0),RM.T_TAXPMPERIOD),"+  
           " decode(RM.T_TAXPMTYPE,chr(1),chr(0),RM.T_TAXPMTYPE),"+  
           " decode(RM.T_OKATOCODE,chr(1),chr(0),RM.T_OKATOCODE),"+  
           " decode(RM.T_BTTTICODE,chr(1),chr(0),RM.T_BTTTICODE),  "+
           " ROWNUM  "+
   "  FROM   dacctrn_dbt arh,"+ 
           " dpmdocs_dbt docs,"+ 
           " dpmpaym_dbt pm,  "+
           " dpmprop_dbt prop, "+
            " dpmrmprop_dbt rm  "+
   "  WHERE ARH.T_SHIFR_OPER <> '09' "+
      "  AND ARH.T_KIND_OPER <> ' 6' "+
      //Gurin S. 02.11.2015
      /*"  AND ARH.T_IAPPLICATIONKIND = DOCS.T_APPLICATIONKIND   "+
            " AND ARH.T_APPLICATIONKEY = DOCS.T_APPLICATIONKEY "+*/
           "  AND arh.t_acctrnid = DOCS.T_ACCTRNID"
           "  AND pm.t_paymentid = docs.t_paymentid  "+
           "  AND pm.t_paymentid = prop.t_paymentid"+ 
            " AND rm.t_paymentid = pm.t_paymentid  "+
           "  AND ARH.T_DATE_CARRY BETWEEN TO_DATE ('"+dlg.rec.DateBegin+"', 'dd.mm.yyyy') and TO_DATE ('"+dlg.rec.DateEnd+"', 'dd.mm.yyyy')"+
          "   AND PROP.T_DEBETCREDIT = 1  "+
           "  AND pm.t_fiid = 0  "; 
        
     // msgbox(ac);
If (dlg.rec.OperN!="")
  OperText = " and pm.T_OPER ="+dlg.rec.OperN+"" ;
	query=query+OperText	
 else  OperText = "";
    query=query+OperText;
end;

If (dlg.rec.NumberPack!="")
    PackText = " and PM.T_NUMBERPACK ="+dlg.rec.NumberPack+"";
    query=query+PackText
else  PackText = "";
    query=query+PackText;
end;	

If (dlg.rec.Account!="")
  AccountText = " AND PM.T_PAYERACCOUNT like "+ "'"+ac+"'";
   query=query+AccountText
else  AccountText = "";
    query=query+AccountText;
end;

If (dlg.rec.KPP!="")
  KPPText = " and RM.T_PAYERINN like '%"+dlg.rec.KPP+"'";
   query=query+KPPText
else  KPPText = "";
    query=query+KPPText;
end;



   message("ЖДИТЕ. ПОСТРОЕНИЯ ОТЧЕТА МОЖЕТ ЗАНЯТЬ НЕКОТОРОЕ ВРЕМЯ...");
debugbreak;
  dat = TRsbDataset(query);
   return dat;
end;


  
macro openExcel()      
  if (IsStandAlone()) // 2zvenka
      if ((ValType(ex)!=V_UNDEF) and (ex.Visible==False))
      	ex = ActiveX("Excel.Application",NULL,false); 
      else
      	ex = ActiveX("Excel.Application",NULL,true);        
      end;
   else                // 3zvenka
      ob = CreateObject ("rsax","TRsAxServer","RsAxServer",false);
      ex = ob.CreateComObject ("Excel.Application");
   end; 
//   debugbreak;	

   obBook = ex.Workbooks.add; 
   obSheet = obBook.ActiveSheet();
   obWind =  ex.ActiveWindow();
 //  ex.visible=true;
   	
end; 

macro textout()
 dat= calculate(DateBegin, DateEnd, Account, OperN, NumberPack,KPP);
  [
					Реестр внешних операций бухгалтерии
			       Период	c #################### по ####################                                                                          Номер счета плательщика: ####################
																						 Пачка:                   ##########								
																						 Операционист №           ##########
                                                                                                                                                           Номер КПП плательщика    #########

   ┌───────┬────────────┬──────────────────────────────────────────────────────────────────────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────────────┬───────────────┬───────┐
   │   №   │            │                                Плательщик                            │                                                         Получатель                                                       │             │   Назначение  │       │
   │  Док. │    Дата    ├──────────────┬───────────┬────────────────────┬──────────────────────┼──────────────┬───────────┬────────────────────┬──────────────────────┬───────────┬────────────────┬──────────────────────┤    Сумма    │    платежа    │  п/п  │
   │       │            │      ИНН     │     КПП   │     Нименование    │        Счёт №        │      ИНН     │    КПП    │     Нименование    │        Счёт №        │ БИК Банка │       Банк     │        Корр/Счет     │             │               │       │
   ├───────┼────────────┼──────────────┼───────────┼────────────────────┼──────────────────────┼──────────────┼───────────┼────────────────────┼──────────────────────┼───────────┼────────────────┼──────────────────────┼─────────────┼───────────────┼───────┤
 ]
  	(
		string(dlg.rec.DateBegin:m),
              string(dlg.rec.DateEnd:m),
              string(dlg.rec.Account:f), 
		dlg.rec.NumberPack,
		dlg.rec.OperN,
              dlg.rec.KPP	
	);

	while (dat.movenext())		
		
		cnt = cnt + 1;
		SumAmount = SumAmount + dat.value(11);
	
		splitFullInn(dat.value(2), INN, KPP);
		splitFullInn(dat.value(3), INN1, KPP1);


 [│ ##### │ ########## │ ############ │ ######### │ ################## │ #################### │ ############ │ ######### │ ################## │ #################### │ ######### │ ############## │ #################### │ ########### │ ############# │ ##### │
 ]	
  	(
		dat.value(0),
		date(dat.value(1)),
		INN,
		KPP,
		dat.value(4):w,
		dat.value(5),
		INN1,
		KPP1,		
		dat.value(6):w,
		dat.value(7),
		dat.value(8),
		dat.value(9):w,
		dat.value(10),
		dat.value(11),
		dat.value(12):w,
		int(dat.value(21))
	);

	if ((dat.value(13) != "") AND (dat.value(17) != "") AND (dat.value(15) != "") AND (dat.value(19) != "") AND (dat.value(20) != "") AND (dat.value(16) != "") AND (dat.value(18) != ""))


 [│       │            ├──────────────┴───────────┴────────────────────┴──────────────────────┼──────────────┼───────────┼────────────────────┼──────────────────────┼───────────┼────────────────┼──────────────────────┤             │               │       │
  │       │            │                                   101                                │      107     │    106    │           105      │         104          │    108    │      109       │          110         │             │               │       │
  │       │            ├──────────────────────────────────────────────────────────────────────┼──────────────┼───────────┼────────────────────┼──────────────────────┼───────────┼────────────────┼──────────────────────┤             │               │       │ 
  │       │            │ ######################################################               │ ############ │ ######### │ ################## │ #################### │ ######### │ ############## │ #################### │             │               │       │
  ├───────┼────────────┼──────────────┬───────────┬────────────────────┬──────────────────────┼──────────────┼───────────┼────────────────────┼──────────────────────┼───────────┼────────────────┼──────────────────────┼─────────────┼───────────────┼───────┤
 ]
  	(
		dat.value(13),
		dat.value(17),
		dat.value(15),
		dat.value(19),
		dat.value(20),
		dat.value(16),
		dat.value(14),
		dat.value(18)
	);
	else

 [│       │            ├──────────────┴───────────┴────────────────────┴──────────────────────┼──────────────┼───────────┼────────────────────┼──────────────────────┼───────────┼────────────────┼──────────────────────┤             │               │       │
  │       │            │                                   101                                │      107     │    106    │           105      │         104          │    108    │      109       │          110         │             │               │       │
  │       │            ├──────────────────────────────────────────────────────────────────────┼──────────────┼───────────┼────────────────────┼──────────────────────┼───────────┼────────────────┼──────────────────────┤             │               │       │ 
  │       │            │                                                                      │              │           │                    │                      │           │                │                      │             │               │       │
  ├───────┼────────────┼──────────────┬───────────┬────────────────────┬──────────────────────┼──────────────┼───────────┼────────────────────┼──────────────────────┼───────────┼────────────────┼──────────────────────┼─────────────┼───────────────┼───────┤
 ];
	end;
	


	end;
 [├───────┴────────────┴──────────────┴───────────┴────────────────────┴──────────────────────┴──────────────┴───────────┴────────────────────┴──────────────────────┴───────────┴────────────────┴──────────────────────┴─────────────┴───────────────┴───────┤
  │                                                                                                                                                                                                     Итого:   #######################                       │
  └────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘ 
 ]
	(SumAmount);




 [
                               Общее количество документов ####### шт. на сумму ############# (###############################################################################################################################################################################)

                               Документы подготовлены ________________ (ФИО операциониста)
                                                       
                                                      ___________________________________________

                                                      ___________________________________________
 ]
	(
		int(cnt),
		money(SumAmount),
		RubToStr(sumAmount)
	);

end;     

macro inexcelout(DateBegin,DateEnd,Account,OperN,NumberPack)
dat=calculate(DateBegin,DateEnd,Account,OperN,NumberPack);
  openExcel();
	 obWind.zoom = 70;
	obSheet.Range("D4:F4").Merge;
	obSheet.Cells(4, 4).Value = "Реестр внешних операций бухгалтерии";
	obSheet.Cells(6, 4).Value = "Период с";
	obSheet.Range("E6:F6").Merge;
	obSheet.Cells(6, 5).Value =string(dlg.rec.DateBegin:m);
	obSheet.Cells(6, 7).Value = "по";
	obSheet.Range("H6:I6").Merge;
	obSheet.Cells(6, 8).Value =string(dlg.rec.DateEnd:m);
	obSheet.Range("K6:L6").Merge;
   	obSheet.Range("K7:L7").Merge;
	obSheet.Range("K8:L8").Merge;
	obSheet.Range("K9:L9").Merge;           
   	obSheet.Cells(6,11).Value ="Номер  счета плательщика ";
       obSheet.Cells(6, 13).Value =string(dlg.rec.Account:f);      
	obSheet.Cells(7, 11).Value ="Номер пачки ";
	obSheet.Cells(7, 13).Value =dlg.rec.NumberPack;
	obSheet.Cells(8,11).Value ="Операционист № ";
	obSheet.Cells(8, 13).Value =dlg.rec.OperN;
       obSheet.Cells(9,11).Value ="Номер КПП плательщика";
	obSheet.Cells(9, 13).Value =dlg.rec.KPP;


	ObSheet.Columns("A:A").ColumnWidth				 = 10;
	ObSheet.Columns("B:B").ColumnWidth				 = 10;
	ObSheet.Columns("C:C").ColumnWidth 			 = 13;
	ObSheet.Columns("D:D").ColumnWidth				 = 10;
	ObSheet.Columns("E:E").ColumnWidth 			 = 19;
	ObSheet.Columns("F:F").ColumnWidth				 = 23;
	ObSheet.Columns("G:G").ColumnWidth				 = 13;
	ObSheet.Columns("H:H").ColumnWidth				 = 10;
	ObSheet.Columns("I:I").ColumnWidth				 = 14;
	ObSheet.Columns("J:J").ColumnWidth				 = 20;
	ObSheet.Columns("K:K").ColumnWidth				 = 12;
	ObSheet.Columns("L:L").ColumnWidth				 = 16;
	ObSheet.Columns("M:M").ColumnWidth				 = 23;     
	ObSheet.Columns("N:N").ColumnWidth				 = 12;
	ObSheet.Columns("O:O").ColumnWidth				 = 14;
	ObSheet.Columns("P:P").ColumnWidth				 = 9;
	
	ObSheet.Columns("A:P").VerticalAlignment			 = 2;	// "xlCenter";
	ObSheet.Columns("A:P").HorizontalAlignment		 = 3;	// "xlCenter";
	
	ObSheet.Columns("E:E").WrapText				 = true;
	ObSheet.Columns("I:I").WrapText				 = true;
	ObSheet.Columns("L:L").WrapText				 = true;
	ObSheet.Columns("O:O").WrapText				 = true;
	

	ObSheet.Columns("C:D").numberformat			 = "@";
	ObSheet.Columns("F:F").numberformat			 = "@";
	ObSheet.Columns("G:H").numberformat			 = "@";
	ObSheet.Columns("J:K").numberformat			 = "@";
	ObSheet.Columns("M:M").numberformat			 = "@";  


	ObSheet.Rows("10:11").WrapText = true;
	ObSheet.Range("A10:A11").Merge;
	ObSheet.Cells(10, 1).Value = "№ документа";
	ObSheet.Range("B10:B11").Merge;
	ObSheet.Cells(10, 2).Value = "Дата";
	ObSheet.Range("C10:F10").Merge;
	ObSheet.Cells(10, 3).Value = "Плательщик";
	ObSheet.Cells(11, 3).Value = "ИНН";	
	ObSheet.Cells(11, 4).Value = "КПП";	
	ObSheet.Cells(11, 5).Value = "Наименование";	
	ObSheet.Cells(11, 6).Value = "Счет №";	
	ObSheet.Range("G10:M10").Merge;
	ObSheet.Cells(10, 7).Value = "Получатель";	
	ObSheet.Cells(11, 7).Value = "ИНН";
	ObSheet.Cells(11, 8).Value = "КПП";
	ObSheet.Cells(11, 9).Value = "Наименование";	
	ObSheet.Cells(11, 10).Value = "Счет №";	
	ObSheet.Cells(11, 11).Value = "БИК банка";	
	ObSheet.Cells(11, 12).Value = "Банк";	
	ObSheet.Cells(11, 13).Value = "Корр/счет";	
	ObSheet.Range("N10:N11").Merge;
	ObSheet.Cells(10, 14).Value = "Сумма";		
	ObSheet.Range("O10:O11").Merge;
	ObSheet.Cells(10, 15).Value = "Назначение платежа";		
	ObSheet.Range("P10:P11").Merge;
	ObSheet.Cells(10, 16).Value = "п/п";		
	i = 12;
       cnt = 0;
	while (dat.movenext())
		
		cnt = cnt + 1; 

		ObSheet.Range("A"+i+":A"+(i+2)).Merge;		
		ObSheet.Cells(i, 1).Value = dat.value(0);
		ObSheet.Range("B"+i+":B"+(i+2)).Merge;		
		ObSheet.Cells(i, 2).Value = dat.value(1);

		splitFullInn(dat.value(2), INN, KPP);
		ObSheet.Cells(i, 3).Value = INN;
		ObSheet.Cells(i, 4).Value = KPP;

		ObSheet.Cells(i, 5).Value = dat.value(4);		
		ObSheet.Cells(i, 6).Value = dat.value(5);

		ObSheet.Range("C"+(i+1)+":F"+(i+1)).Merge;
		ObSheet.Cells((i+1), 3).Value = "101";


		INN = 0; KPP = 0;
		splitFullInn(dat.value(3), INN, KPP);
		ObSheet.Cells(i, 7).Value = INN;
		ObSheet.Cells(i, 8).Value = KPP;


		ObSheet.Cells(i, 9).Value = dat.value(6);
		ObSheet.Cells(i, 10).Value = dat.value(7);
		ObSheet.Cells(i, 11).Value = dat.value(8);
		ObSheet.Cells(i, 12).Value = dat.value(9);
		ObSheet.Cells(i, 13).Value = dat.value(10);



		ObSheet.Cells((i+1), 7).Value = "107";
		ObSheet.Cells((i+1), 8).Value = "106";
		ObSheet.Cells((i+1), 9).Value = "105";
		ObSheet.Cells((i+1), 10).Value = "104";
		ObSheet.Cells((i+1), 11).Value = "108";
		ObSheet.Cells((i+1), 12).Value = "109";
		ObSheet.Cells((i+1), 13).Value = "110";

		ObSheet.Range("C"+(i+2)+":F"+(i+2)).Merge;
		
		if ((dat.value(13) != "") AND (dat.value(17) != "") AND (dat.value(15) != "") AND (dat.value(19) != "") AND (dat.value(20) != "") AND (dat.value(16) != "") AND (dat.value(18) != ""))

			ObSheet.Cells((i+2), 3).Value = dat.value(13);
			ObSheet.Cells((i+2), 7).Value = dat.value(17);
			ObSheet.Cells((i+2), 8).Value = dat.value(15);
			ObSheet.Cells((i+2), 9).Value = dat.value(19);
			ObSheet.Cells((i+2), 10).Value = dat.value(20);
			ObSheet.Cells((i+2), 11).Value = dat.value(16);
			ObSheet.Cells((i+2), 12).Value = dat.value(14);
			ObSheet.Cells((i+2), 13).Value = dat.value(18);
		end;


		ObSheet.Range("N"+(i+1)+":N"+(i+2)).Merge;	
		ObSheet.Cells(i, 14).Value = dat.value(11);

		ObSheet.Range("O"+(i+1)+":O"+(i+2)).Merge;	
		ObSheet.Cells(i, 15).Value = dat.value(12);

		ObSheet.Range("P"+i+":P"+(i+2)).Merge;	
		ObSheet.Cells(i, 16).Value = dat.value(21);
		
		SumAmount = SumAmount + dat.value(13);

		i = i + 3;
       end;

	obSheet.Range("A10:P"+i).Borders.Weight = 3;



	i = i + 1;

	ObSheet.Cells(i, 13).Value = "Итого:";
	ObSheet.Cells(i, 14).Value = "=СУММ(N12:N"+(i-1)+")";
	sumAmount = ObSheet.Cells(i, 14).Value;

       i = i + 3;

	ObSheet.Range("C"+i+":E"+i).Merge;	
	ObSheet.Cells(i, 3).Value = "Общее количество документов";
	ObSheet.Cells(i, 6).Value = string(cnt) + "шт.";
	ObSheet.Cells(i, 7).Value = "на сумму";
	ObSheet.Range("H"+i+":P"+i).Merge;	
	ObSheet.Cells(i, 8).Value = money(sumAmount) + " (" + RubToStr(sumAmount) + ")";
	
	i = i + 2;
	ObSheet.Range("C"+i+":J"+i).Merge;	
	obSheet.Cells(i, 3).value="Документы подготовлены ________________ (ФИО операциониста)";

	i = i + 2;	
	ObSheet.Range("C"+i+":J"+i).Merge;	
	obSheet.Cells(i, 3).value="__________________________________________________________";
	i = i + 2;
	ObSheet.Range("C"+i+":J"+i).Merge;	
	obSheet.Cells(i, 3).value="__________________________________________________________";

	
	ex.visible = true;
 end;     


   
if (RunDialog (dlg, "reestr"))
    Text(0) = "Укажите формат вывода";
    Buttons(0) = "Текст - *.csv";
    Buttons(1) = "Excel - *.xls";

   if (ConfWin( Text, Buttons )==0)
    textout();  
   else
     inexcelout(); 
   end;   
end; 
