// ------------------------------------------------------------------------------------------------
// @filename: docreppm.mac
// @author  : Zlenko M.P. 
// @desc    : ëØ‡†¢™†  Æ ·Æ·‚ÆÔ≠®® Ø´†‚•¶•© ¢ Çèë
// @request : C-33127 
// -------------------------------------------------------------------------------------------------

import rsd, RsbFormsInter, globals, keycodes, ™†´•≠§†‡Ï, likepy, Rsexts, lib_registry;


class (TRsbPanel) mainFrame()    
   private var reportCont = Tarray();
   private var connect    = null;
   private var DSN =  RSL_GetRegistryValue("PRBB/RS_PAYMENTS/DSN", false);

   private macro openConnect()
      if(connect == null)
         connect = ActiveX("ADODB.Connection");
         connect.ConnectionString = "DSN="+DSN;
         connect.Open();
      end;
      return true;
   onError
      connect = null;
      return false;      
   end;

   class TStateList()
      class TSate(_value, _count)
          var value = _value;
          var count = _count;
      end;
      var List = Tarray();

      macro add(value)
         var i  = 0;
         var found = false;
         while(i < List.size)
            if(value == List[i].value)
               List[i].count = List[i].count + 1;
               found = true;
            end;
            i = i + 1;
         end;
         if(not found) List[List.size] = TSate(value, 1); end;
      end;

   end;

   private macro closeConnect()
       if(connect != null)
          connect.close;
          connect = null;
       end;
       return true;
   onError
       return false;
   end;

   private class ( TRsbEditField ) EditField( type: integer, x: integer, y: integer, width: integer, height: integer, bindVal, active: bool )  
      var bindString = bindVal;       
      InitTRsbEditField( type );
      SetPosition( x, y );
      SetSize( width, height );        
      if( active == false ) editable = focusable = false; end;                                               
      if  ( type == 7 ) bindValue( this, "bindString", 100 );
      elif( bindVal != null ) value = bindVal;
      end;    
   end;

   InitTRsbPanel();
   SetSize( 36, 4 );    
   setCaption(" è†‡†¨•‚‡Î Æ‚Á•‚† ");
   setStatus ("~F2~ á†Ø„·™ Æ‚Á•‚† ~F3~ ÇÎ°Æ‡ ®ß ·Ø‡†¢ÆÁ≠®™†");

   var eAccNum    = EditField(  7 , 15, 1 , 20, 1, "Ç·•", true ); 
   var ePaymKind  = EditField(  7 , 15, 2 , 20, 1, "Ç·•", true ); 
   var eDateInput = EditField(  9 , 15, 3 , 10, 1, {curdate}, true ); 

   eAccNum.addEventHandler   ( RSB_EV_KEY_PRESSED,  R2M( this, "eAccNumKeyPressed"    ));
   ePaymKind.addEventHandler ( RSB_EV_KEY_PRESSED,  R2M( this, "ePaymKindKeyPressed"  ));
   eDateInput.addEventHandler( RSB_EV_KEY_PRESSED,  R2M( this, "eDateInputKeyPressed" ));
   addEventHandler           ( RSB_EV_KEY_PRESSED,  R2M( this, "onFramedKeyPressed"   ));  
      

   

   addLabel(TRsbLabel( 2,  1 , "çÆ¨•‡ ™Æ‡‡·Á•‚†"));  
   addLabel(TRsbLabel( 2,  2 , "Ç®§ Ø´†‚•¶†    "));
   addLabel(TRsbLabel( 2,  3 , "Ñ†‚† ¢¢Æ§†     "));

   addControl(eAccNum   );
   addControl(eDateInput);
   addControl(ePaymKind );    
  
   private macro setPaymentKind()
      array kind;
      kind[0] = "Ç·•";
      kind[1] = "ç†Á†´Ï≠Î•";
      kind[2] = "é‚¢•‚≠Î•";
      ePaymKind.value = kind[menu(kind,null,null)];
   onError
      ePaymKind.value = kind[0];
   end;
   private macro KorScroll()
      var rs = connect.execute("select AccNum from p_nKSA_dbt group by AccNum");  
      var sql = " " ;
      while ( not RS.EOF ) 
         sql = sql + " select '" + rs.Fields.item(0).value + "' account from dual ";
         RS.MoveNext;                        
         if(not RS.EOF)  sql  = sql + " union "; end;
      end;     

      var rsd = RsdRecordset(sql, RSDVAL_CLIENT, RSDVAL_STATIC);  

      var colums = makeArray("account"   , "äÆ‡. cÁ•‚"      , 25, 0, 0, 0);

      macro EvProc (rs, cmd, id, key )
         if (cmd == DLG_KEY)                            
            if (key == KEY_ESC  ) return cm_cancel; 
          elif (key == KEY_ENTER) return cm_select; 
          end;
         end;
      return CM_DEFAULT;
      end;

   if(RunScroll(rsd, colums.size/6, colums, "", "EvProc", "ëØ®·Æ™ ™Æ‡. ·Á•‚Æ¢", "~Enter~ ÇÎ°Æ‡")) eAccNum.value = rsd.value("account", null, v_string);   
   else                                                                                           eAccNum.value = "Ç·•";
   end;

   end;

   macro getPervasiveDate(d:date)
      var yyyy,mm,dd;
      dateSplit(d, dd,  mm, yyyy);
      return string("{d'",yyyy,"-",mm,"-",strsubst(string(dd:2:o), " ", "0"),"'}");
   end;

   private macro getStateName(id)     
      var sql = "select text from p_sState_dbt where id = " + int(id);
      var rs  = connect.execute(sql);

      if(not rs.EOF) return rs.Fields.item(0).value; 
      else           return "ëÆ·‚ÆÔ≠®• ≠• ≠†©§•≠Æ";
      end;     

   end;
   

   
   MACRO PrintHeader (_date, _corracc, _fiid)
   if(eAccNum.value != "Ç·•") _corracc =  eAccNum.value; end;
   [

                                     ëèêÄÇäÄ é ëéëíéüçàà èãÄíÖÜÖâ Ç Çèë  

    Ñ†‚†      : ##########

    äÆ‡‡·Á•‚  : #########################

    äÆ§ ¢†´Ó‚Î: ###

    ⁄ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
    ≥¸ Ø/Ø ≥ç†ß¢†≠®• ·Æ·‚ÆÔ≠®Ô  ≥ à§•≠‚®‰®™†‚Æ‡ ≥  Ñ†‚†     ≥¸ §Æ™„¨•≠‚†≥ äÆ§  ≥       ë„¨¨†         ≥            èãÄíÖãúôàä                      ≥           èéãìóÄíÖãú                       ≥          ç†ß≠†Á•≠®• Ø´†‚•¶†         ≥
    ≥      ≥                    ≥  Ø´†‚•¶†      ≥           ≥           ≥¢†´Ó‚Î≥                     √ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥                                     ≥
    ≥      ≥                    ≥               ≥           ≥           ≥      ≥                     ≥   Åàä        ≥          ëÁ•‚               ≥     Åàä      ≥           ëÁ•‚              ≥                                     ≥
    √ƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥
   ]   
   (_date, _corracc, _fiid);
   END;

   
   MACRO PrnStateDocCount (ds)
   [≥ ##################################     ≥     ########     ≥
   ]("2");
   END;

    
   MACRO PrintFooter (count, summ, counter)

   [≥      ≥                    ≥               ≥           ≥           ≥      ≥                     ≥              ≥                             ≥              ≥                             ≥                                     ≥
    ¿ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ

    ÇëÖÉé :   #######  Ø´†‚•¶•©
    ëìååÄ :   ##################
    ⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
    ≥             ëéëíéüçàÖ                  ≥äéã-Çé ÑéäìåÖçíéÇ ≥
    √ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥
   ] (count:r, summ:l);
   var i = 0;
   while (i < counter.list.size)
   [≥########################################≥##################≥]
   (getStateName(counter.list[i].value:w), counter.list[i].count);    
     i = i + 1;
   end;

    
   [¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
   ];

   END;
   
   MACRO PrintDocStr (num, CurrState, NodeId, NodePaymentId, DateInput, NumreferDoc, FIID, Amount, PayerBankId, PayerAccount, ReceiverBankId, ReceiverAccount, Ground ) 
      var slash = "/";
    
   [≥######≥ ################## ≥#### # ########≥ ##########≥ ##########≥ ###  ≥ ##################  ≥ ###########  ≥  #########################  ≥ ###########  ≥ #########################   ≥ ####################################≥
   ](num, getStateName(CurrState):w,NodeId, slash ,NodePaymentId:l, DateInput, NumreferDoc:w, FIID, money(Amount), PayerBankId, PayerAccount, ReceiverBankId, ReceiverAccount, Ground:w);
   END; 

   macro getGround(NodePaymentID, NodeID)
     var sql = "select associate  from p_payAss_dbt  where NodePaymentID = " + NodePaymentID + "  and nodeid = " + NodeID;
     var rs =  connect.execute(sql);
     if(not rs.EOF)
         var rss = "select t_ground from dpmrmprop_dbt where t_paymentid = " + int(rs.Fields.item(0).value);
         rss = RsdRecordset(rss);
         if(rss.movenext) return  rss.value(0, null, v_string); end;
     end;
     return " ";
   onError
     return " ";
   end;


   
   macro getAllDocs()
      var sql = " select   p.CurrState,                 "+
                 "         p.NodeId,                    "+
                 "         p.NodePaymentId,             "+
                 "         p.DateInput,                 "+
                 "         p.NumreferDoc,               "+
                 "         p.FIID,                      "+
                 "         p.Amount,                    "+
                 "         p.PayerBankId,               "+
                 "         p.PayerAccount,              "+
                 "         p.ReceiverBankId,            "+
                 "         p.ReceiverAccount,           "+  
                 "         p.AccCurrAmount              "+                               
                 "  from p_Paym_dbt p where p.DateInput = "+ getPervasiveDate(eDateInput.value) ;      
      if(ePaymKind.value == "ç†Á†´Ï≠Î•") sql = sql + " and p.KorrInput  = -1 ";
    elif(ePaymKind.value == "é‚¢•‚≠Î•" ) sql = sql + " and p.KorrInput !=  1 ";
     end;
      if(eAccNum.value   != "Ç·•")       sql = sql + " and p.AccCurrAmount =  '" + eAccNum.value + "'" ; end; 

      var rs =  connect.execute(sql + " order by p.fiid, p.AccCurrAmount");
      var acc   = "empty";
      var count =  0;
      var summ  = $0;
      while(not rs.EOF)                                
             if (acc == "empty")
             var counter = TStateList();
             acc = rs.Fields("AccCurrAmount"  ).Value;            
             PrintHeader(eDateInput.value, 
                         rs.Fields("AccCurrAmount"  ).Value, 
                         rs.Fields("fiid"           ).Value);                                  
             end;
         
             count = count + 1;
             summ  = summ  + RS.Fields("Amount").Value;
             counter.add(RS.Fields("CurrState"      ).Value);

             message("é¶®§†©‚•... à§•‚ ·°Æ‡ ®≠‰Æ‡¨†Ê®® ØÆ ·Á•‚„ " + acc + " é°‡†°Æ‚†≠≠Æ Ø´†‚•¶•© " + count);             
             PrintDocStr(count,                           
                         RS.Fields("CurrState"      ).Value,
                         RS.Fields("NodeId"         ).Value,
                         RS.Fields("NodePaymentId"  ).Value,
                         RS.Fields("DateInput"      ).Value,
                         RS.Fields("NumreferDoc"    ).Value,
                         RS.Fields("FIID"           ).Value,
                         RS.Fields("Amount"         ).Value,
                         RS.Fields("PayerBankId"    ).Value,
                         RS.Fields("PayerAccount"   ).Value,
                         RS.Fields("ReceiverBankId" ).Value,
                         RS.Fields("ReceiverAccount").Value,
                         getGround(RS.Fields("NodePaymentId").Value, RS.Fields("NodeId").Value));            

         rs.moveNext(); 
         if(not rs.EOF)
            if(acc != rs.Fields("AccCurrAmount"  ).Value)              
              acc = "empty";               
              PrintFooter (count, summ, counter);      
              count =  0;
              summ  = $0;
            end;
         else
            PrintFooter (count, summ, counter);      
            count =  0;
            summ  = $0;
         end;            
      end;        
   onError
      closeConnect();
   end;
   

   macro ePaymKindKeyPressed( RsbEvent:object )
      if ( rsbEvent.KeyCode == KEY_F3)   setPaymentKind(); end;    
   end; 

   macro eAccNumKeyPressed( RsbEvent:object )
      if ( rsbEvent.KeyCode == KEY_F3)
          if(not openConnect()) 
             msgBox("ç• „§†´Æ·Ï ØÆ§™´ÓÁ®‚Ï·Ô ™ RS-Payments. è‡Æ¢•‡Ï‚• ≠†·‚‡Æ©™® ODBC.");
             exit(1);
          end;
          KorScroll();
          closeConnect();
      end;
   end;

   macro eDateInputKeyPressed( RsbEvent:object )
      if ( rsbEvent.KeyCode == KEY_F3) eDateInput.value = GetDateByCalendar({curdate}); end;
   end; 
   macro onFramedKeyPressed( RsbEvent:object )     
      if ( rsbEvent.KeyCode == KEY_F2 )         

         if(not openConnect()) 
             msgBox("ç• „§†´Æ·Ï ØÆ§™´ÓÁ®‚Ï·Ô ™ RS-Payments. è‡Æ¢•‡Ï‚• ≠†·‚‡Æ©™® ODBC.");
             exit(1);
         end;

         var palrep = getTxtFileName ("palata_txt");

         SetOutPut(palrep, false);                 
         getAllDocs;       
         SetOutput(null, true);        
         closeConnect();

         viewFile(palrep);
         removeFile(palrep);

      end;
   end;

end;

var panel = MainFrame;
    panel.setPosition(40, 15);
    panel.run;
    exit(1);
    


