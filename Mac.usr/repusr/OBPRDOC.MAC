/************************************************************************/
/*         Автоматизированная банковская система RS-Bank                */
/*               Copyright (c) R-Style Software Lab                     */
/*                                                                      */
/*  Имя файла      : obprdoc.mac                                        */
/*                                                                      */
/*  Описание       : Печать мемориального ордера                        */
/*                   по рублевой проводке по внебалансовым главам       */
/*                   плана счетов ЦБ РФ                                 */
/*                                                                      */
/************************************************************************/

import globals, "mocommon.mac", "bbprncom.mac", "prnlib.mac", likepy;

private var ftc_nd:TBFile = TBFile( "tc_nd.dbt", "R", 1, "tc_nd.dbt", "bank.def" );

private const NumPlan = 0, /* Номер плана счетов */
              Chapt6  = 6; /* Глава налогового учета   */

/* Найти соотв. запись в ТС */
PRIVATE MACRO FindAccountNU( docNU ):string

  MACRO ScanTCNU( FIIDNU, AccountNU ):bool
    ftc_nd.rec.FIIDNU    = FIIDNU;
    ftc_nd.rec.AccountNU = AccountNU;
    return ftc_nd.getGE() AND 
           (ftc_nd.rec.FIIDNU == FIIDNU) AND 
           (ftc_nd.rec.AccountNU == AccountNU);
  END;

  if  ( ScanTCNU( docNU.Code_Currency, docNU.Account_Payer) )
    return docNU.Account_Payer;
  elif( ScanTCNU( docNU.Code_Currency, docNU.Account_Receiver) )
    return docNU.Account_Receiver;
  else
    MsgBox ( "Счета НУ не найдены в таблице соответствия |",
              docNU.Account_Payer,"|",
              docNU.Account_Receiver );
    return "";
  end;

END;


/* ----------------------------------------------------- */
MACRO FindBal ( Acc );
  FILE obal  ( balance );
  FILE balacc( accblnc ) key 12;

  balacc.Account = Acc;
  balacc.Chapter = Chapt6;

  if ( not GetEq ( balacc ))
    msgbox ("Не найден лицевой счет в плане балансовых: ", Acc);
    return "";
  end;

  obal.iNumPlan = NumPlan;
  obal.Chapter = Chapt6;
  obal.balance = balacc( NumPlan + 2 );

  if ( not GetEq (obal) )
    msgbox ("Не найден балансовый счет: ", balacc( NumPlan + 2 ) );
    return "";
  end;

  setparm( 1, obal.Name_Part );

  return obal.balance ;
END;

/*---------------------------------------------------------------------*/
/* Печать рублевой проводки по внебалансовой главе плана счетов ЦБ РФ  */
/* d       - буфер проводки                                            */
/* doc_inf - не используется (оставлено для совместимости)             */
/* ncopy   - число копий                                               */
/*---------------------------------------------------------------------*/
MACRO PutPlatI ( d, doc_inf, ncopy:integer ):bool

  /* Подготовка строк к печати */
  ARRAY SS,SG,SBP,SBR,SP,SR,SCH;

  var Payer   :string = MO_GetClientString( d.Account_Payer,    d.Chapter, 0 );
  var Receiver:string = MO_GetClientString( d.Account_Receiver, d.Chapter, 0 );
  var dateDoc :date   = {curdate};
  var SumStr  :string;
  var outSum  :variant;
  var NameDocument  = "";
  var SPOD_str:string = IfThenElse( Index( d.TypeDocument, "З" ), "СПОД", "    " );

  /* переменные для налогового учета */
  var SGR:string,  SPD:string,
      БсНу:string, Acc_Nu:string, НаименованиеНУ:string,
      NDoc:string, DatAvans:date, DatProv:date,
      account:TRecHandler = TRecHandler("account.dbt", "bank.def"),
      OperName:string;
  var err,pagebreak,terminator=""; // KS 16.11.2011 Разделитель

  GetRegistryValue("PRBB\\REPORT\\ПЕЧАТЬ\\MEMORDER\\PAGE BREAK",V_BOOL,pagebreak,err);
  if (( err == 0 ) and (pagebreak))
    terminator = "";
  end;

  NameDocument  = "МЕМОРИАЛЬНЫЙ";
  if( IsCORRECTING( d.TypeDocument ) )
    NameDocument = "ИСПРАВИТЕЛЬНЫЙ";
  end;

  if( d.Date_Carry != date(0, 0, 0) )
    dateDoc = d.Date_Carry;
  end;

  if( d.Chapter != 5 )
    SumStr = RubToStrAlt( d.Sum );
    outSum = d.Sum;
  else
    SumStr = NumToStr( doublel(d.Sum), "штука", "штуки", "штук", FALSE, 0 );
    outSum = int( doublel(d.Sum) );
  end;

  StrSplit( SumStr,      SS,    76, 76, 2 );
  StrSplit( d.Ground,    SG,    87, 67, 3 );
  StrSplit( GetOurBankName(), SBP,   43, 43, 2 );
  StrSplit( GetOurBankName(), SBR,   43, 43, 2 );
  StrSplit( Payer,       SP,    43, 43, 3 );
  StrSplit( Receiver,    SR,    43, 43, 4 );

  GetNameChapter( d.Chapter, SCH, 23 );

  if ( d.Chapter != 6 )

    while(ncopy > 0)
      [┌──────────────────────────┬─────────────────┬────────────────────────────────────────────┐
       │  ############## ОРДЕР N  │ ############### │ #######################         ####       │
       │    ##################### └─────────────────┘ ───────────────────────                    │
       │    #####################                            /Дата/                              │
       ├──────────┬──────────────────────────────────────────────────────────────────────────────┤
       │ Сумма    │ ############################################################################ │
       │ прописью │ ############################################################################ │
       ├──────────┴──────────────────────────────────┬──────────┬────────────────────────────────┤
       │ ########################################### │  Сумма   │ ############################   │
       │ ########################################### ├──────────┼────────────────────────────────┤
       │ Плательщик ################################ │  Сч.N    │ #########################      │
       ├─────────────────────────────────────────────┼──────────┤                                │
       │ ########################################### │  БИК     │ #################              │
       │ ########################################### ├──────────┤                                │
       │ Банк плательщика                            │  Сч.N    │ #########################      │
       ├─────────────────────────────────────────────┼──────────┼────────────────────────────────┤
       │ ########################################### │  БИК     │ #################              │
       │ ########################################### ├──────────┤                                │
       │ Банк получателя                             │  Сч.N    │ #########################      │
       ├─────────────────────────────────────────────┼──────────┤                                │
       │ ########################################### │  Сч.N    │ #########################      │
       │ ########################################### ├──────────┼────────┬──────────┬────────────┤
       │ ########################################### │ Шифр.док.│ ###### │Срок плат.│            │
       │ ########################################### ├──────────┤        ├──────────┤            │
       │                                             │Назн.плат.│        │Очер.плат.│            │
       │ Получатель                                  │   Код    │        │Рез.поле  │            │
       ├─────────────────────────────────────────────┴──────────┴────────┴──────────┴────────────┤
       │ Назначение платежа  ################################################################### │
       │ ####################################################################################### │
       │ ####################################################################################### │
       │                                                                                         │
       │                              Подписи                                                    │
       └─────────────────────────────────────────────────────────────────────────────────────────┘
       #]( NameDocument:r,
           d.Numb_Document:c,
           dateDoc:m:c:f,
           SPOD_str, 
           SCH(0),SCH(1),
           SS(0), SS(1),
           SP(0), outSum:l:f,
           SP(1),
           SP(2), d.Account_Payer,
           SBP(0), {MFO_Bank},
           SBP(1), {CORAC_Bank},
           SBR(0), {MFO_Bank},
           SBR(1), {CORAC_Bank},
           SR(0),  d.Account_Receiver,
           SR(1), SR(2), d.Shifr_oper,
           SR(3),
           SG(0), SG(1), SG(2),
           terminator // KS 16.11.2011 Разделитель
          );

      ncopy = ncopy - 1;

    end;


  else /* печать мемориальных ордеров НУ */

    SGR = substr( d.Ground, 1, index ( d.Ground, "(Дт" ) - 1 );
    SPD = substr( d.Ground,    index ( d.Ground, "(Дт" )     );

    Acc_NU = FindAccountNU( d );
    if( Acc_NU != "" )

      БсНу = FindBal ( Acc_Nu, НаименованиеНУ );

      if ( d.Nu_Kind == "1" )
        NDoc = "Авансовый платеж:";
        DatAvans = string(d.Date_Value:f)/*putDatePoint( d.Date_Value )*/;
        DatProv = doc_inf.Date;
      elif  ( (d.Result_Carry == 14 ) or
              (d.Result_Carry == 38 )
            )
        NDoc = "Документ покрытия";
        DatAvans = "";
        DatProv = d.Date_Value;
      elif  ( (d.FU_iApplicationKind == 0 ) and
              (d.FU_ApplicationKey == "" )
            )
        NDoc = "Документ введен вручную";
        DatAvans = "";
        DatProv = d.Date_Value;
      else
        NDoc = "";
        DatAvans = "";
        DatProv = d.Date_Value;
      end;

      MO_GetAccountBuffer( account, Acc_Nu, d.Chapter, 0 );
      OperName = GetOperName( d.Oper );

      while(ncopy != 0)
        [┌───────────────────────┬──────────────────────────────────────────────────────────────┐
         │    #######            │ ############################################################ │
         ├───────────────────────┼──────────────────────────────────────────────────────────────┤
         │   Дата операции       │  #######################                                     │
         │                       │                                                              │
         ├───────────────────────┼──────────────────────────────────────────────────────────────┤
         │ Сумма  операции       │ ############################################################ │
         │                       │ ############################################################ │
         ├───────────────────────┼──────────────────────────────────────────────────────────────┤
         │ Лицевой счет          │ ############################                                 │
         │ налогового учета      │ ##################################################           │
         │                       │                                                              │
         ├───────────────────────┼──────────────────────────────────────────────────────────────┤
         │ Наименование операции │ ##################################################           │
         │                       │                                                              │
         ├───────────────────────┼──────────────────────────────────────────────────────────────┤
         │ Первичный документ    │ Проводка по счетам бухгалтерского учета                      │
         │                       │ от ###########                                               │
         │                       │ ##################################################           │
         │                       │ ###########################  #############                   │
         ├───────────────────────┴──────────────────────────────────────────────────────────────┤
         │                                                                                      │
         │                                                                                      │
         │                                                                                      │
         │     Ответственный исполнитель   ───────────────── /################################# │
         └──────────────────────────────────────────────────────────────────────────────────────┘
        ]( БсНУ, НаименованиеНУ:w,
           dateDoc:m:c:f,
           string(d.Sum:0:2),
           SumStr:w,
           Acc_NU,
           account.NameAccount:w,
           SGR:w,
           string(DatProv:f)/*PutDatePoint( DatProv )*/,
           SPD:w,
           NDoc,  DatAvans,
           OperName );

        ncopy = ncopy - 1;
      end;

    end;

  end;

  return TRUE;

END;

MACRO PutPlat( a, ncopy )
  RECORD d( "arhdoc.dbt", "bank.def" );
  setbuff( d, a );
  PutPlatI( d, NULL, ncopy );
END;


MACRO PutPlatInf( a, d_inf )
  RECORD d( "arhdoc.dbt", "bank.def" );
  setbuff( d, a );
  PutPlatI( d, NULL, 1 );
END;
