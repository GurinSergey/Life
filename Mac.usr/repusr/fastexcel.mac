/*
    AAN 05.04.2013 I-00351899-2 Excel не хочет работать с относительными путями типа ..\Templs\Templs.usr
    надо получить полный абсолютный путь к файлу

*/
Import rsexts,globals, rcw;
Import PTInter, BankInter;
import wordintf; // AAN

Private Var _CurNumber = UserNumber();
private var tlg:object, lg:object,ob:object,lgBook:object,lgSheet:object;
private var counter =0,maxcounter=1024;
private var DecimalSeparator,StrParm="";
private Var FullName,FullNametxt,FlagFile;
private Var WorkbookName;
var nmtlg:object,nmob:object;
var nmtlg_name:string = "";

CLASS CFastExcel(p_UseExistActiveX)
  Var nm,nmlg,nmmac, str, FlagShow, OldOutput;
  Var Visible, obValue;
  Var nmTerm,nmServMac,nmTermMac;
  /* ------------------------------------------------------ */
  MACRO Init(p_UseExistActiveX)
    str = "";
    StrParm="";
    obValue   = Null;
  END;
  /* ------------------------------------------------------ */
  MACRO Open(p_FileName)

   p_FileName = RSL_FullPath (p_FileName); // AAN 05.04.2013 I-00351899-2
   
   nmob = CreateObject ("rsax","TRsAxServer",string("RsAxServer", UserNumber()),IsStandAlone());
   nmtlg = nmob.CreateComObject ("Excel.Application",true);

  if (valtype(p_FileName) == v_undef) /*имя файла не передано */
    nmtlg.Workbooks.add;
  else
    nmtlg.Workbooks.add(p_FileName);
  end;
   nmtlg_name =nmtlg.Workbooks.Item(nmtlg.Workbooks.count).Name;
   nmtlg.Visible = false;
   DecimalSeparator = nmtlg.DecimalSeparator;
   WorkbookName = nmtlg.ActiveWorkbook.name;

    Var tm = StrSubSt(String(Time(), ":", ""));
    nmmac = String("xls",tm, _CurNumber,".mac");        
    var RSLtermDir = "C:\\RSPAR"; 
    MakeDir("$"+RSLtermDir);
    nmTermMac = RSLtermDir+string("\\",nmmac);
    nmServMac= "..\\TxtFile\\"+nmmac;
    nmlg =string("lg",_CurNumber);

    OldOutput = SetOutput(nmServMac, False);                           
    var ActivateStr= string("private Var ",nmlg," = ActiveX(\"Excel.Application\",Null,true);");
    var ActivateStr2= string(nmlg," = ", nmlg,".Workbooks.Item(\"", nmtlg_name,"\").ActiveSheet();");
    var QuitExcel = string(nmlg,".Quit;");
[
 #
 #
 macro main(strparm);
 private var _i=0,_e=0,str=""; 
    _e = index(strparm,strfor(7));
    while ( _e > 0)
       str = substr(strparm,1,_e-1);
       strparm = substr(strparm,_e+1);
       _e = index(strparm,strfor(7));               
          if (trim(str) != "")    
             execexp(str);
          end;
    end;
 onerror(x);
 msgbox(str);
 #
 end;
](ActivateStr, ActivateStr2, QuitExcel);
    SetOutput(OldOutput, True);

 if (Not CopyFile(nmServMac, "$" + nmTermMac))
      MsgBox(" Ошибка копирования " + nmServMac + " в " + nmTermMac);
      Runerror;
 end;
   return nmtlg;
  END;
 /* ------------------------------------------------------ */
  MACRO AddLg
    If (Index(Trim(StrUpr(str), nmlg))!=1) str = nmlg + str; End;
  END;
  /* ------------------------------------------------------ */
  MACRO Correct(p_Str)
    Var ss = Trim(p_Str);
    If (SubStr(ss, StrLen(ss))!=";") ss = ss + ";" End;
    Return ss;
  END;
  /* ------------------------------------------------------ */
  MACRO OutStr(p_Str)
    If (p_Str != Null) str = p_Str; End;
    AddLg;
    str = Correct(str);
    StrParm = StrParm + str + strfor(7);
    str = "";
    counter = counter+1;
    obValue = null; 
  END;
  /* ------------------------------------------------------ */
  MACRO ToStr(p_Str)
    Var ss = StrSubSt(p_Str, "\\", "\\\\");
    ss = StrSubSt(ss, StrFor(34), "\\" + StrFor(34));
    Return StrFor(34) + ss + StrFor(34);
  END;
  /* ------------------------------------------------------ */
  MACRO SetValue()               
    Var dd, mm, yy;
    If (ValType(obValue) == V_DATE)
      DateSplit(obValue, dd, mm, yy);
      str = String(str, ".Value = Date(", dd, ", ", mm, ", ", yy, ")"); 
    Else
      str = String(str, ".Value = ", obValue);
      str = StrSubSt(str, StrFor(10), StrFor(34) + "+ StrFor(10) + " + StrFor(34));
    End;
    OutStr(str); 
  END;
  /* ------------------------------------------------------ */
  MACRO Show()

    If (obValue != Null) 
      If (ValType(obValue)==V_STRING) obValue = ToStr(obValue); End; 
      SetValue(); 
    End;


     Message("Подождите, идет вывод данных в MS Excel"); testevent();
     nmtlg.ActiveSheet();   

     CallRemoteRsl(nmTermMac,"main",StrParm);

     StrParm ="";
     Message(""); testevent();

     onerror(x);
     msgbox("Ошибка вывода в Excel");
     nmtlg.Quit;
     exit(1);
  END;
  /* ------------------------------------------------------ */
  MACRO Postpone()
    If (obValue != Null) 
      If (ValType(obValue)==V_STRING) obValue = ToStr(obValue); End; 
      SetValue(); 
    End;
    if (counter >= maxcounter) 
        counter = 0; Show();
    end;
  END;
  /* ------------------------------------------------------ */
  MACRO Range()
    Var i = 1, v, ret = "";
    Postpone();
    While (GetParm(i, v))
      ret = String(ret, v);
      i   = i + 1;
    End;
    str = str + ".Range(" + ToStr(ret) + ")";
    Return this;
  END;
  /* ------------------------------------------------------ */
  MACRO Destructor
      nmtlg.visible = true;
  END;
  /* ------------------------------------------------------ */
  Init();
END;
/* --------------------------------------------------------------------------------------- */
MACRO InsertElement(xls, cCell, cText);
  Private Var 
    type = valtype(cText),
    i  = 1, 
    s  = Trim(String(cText)), 
    sz = StrLen(s);

 if   ((type == v_integer)
   or  (type == v_double)
   or  (type == v_money)
      )
   s  = strsubst(s,".",DecimalSeparator);
 end;
  xls.Range(cCell).obValue = s;
   
END;
/* --------------------------------------------------------------------------------------- */

