/**
 * Выгрузка проводок для аудиторов
 * C-37070
 */

import rsd,RsbFormsInter,Календарь,rcw,RsExts;
import "KeyCodes.mac","globals.mac";

private const	FT_INTEGER = 0;
private const	FT_LONG    = 1;
private const	FT_FLOAT   = 2;
private const	FT_DOUBLE  = 4;
private const	FT_DOUBLEM = 6;
private const	FT_STRING  = 7;
private const	FT_SNR     = 8;
private const	FT_DATE    = 9;
private const	FT_TIME    = 10;
private const	FT_CHR     = 12;
private const	FT_UCHR    = 13;
private const	FT_LDMON   = 14;
private const	FT_LDMONR  = 15;
private const	FT_DOUBLER = 16;
private const	FT_LDOUBLE = 17;
private const	FT_NUMSTR  = 18;

/* Объект нужен для функции выбора папки на рабочей машине */
private var ShellObject = CreateObject("rsax","TRsAxServer","RsAxServer",false).CreateComObject("Shell.Application",true);


/* открытие папки */
private macro openFolder(fldpath)
    ShellObject.Open(fldpath);
end;

/* выбор папки */
macro selectDir(Folder)
    var browseFoldr = ShellObject.BrowseForFolder(0,"Выбор папки",16);

    if(browseFoldr != null)
        Folder = browseFoldr.Self.Path;

        setparm(0,Folder);
        return true;
    else
        return false;
    end;

onerror return false;
end;

macro printProperties(connection)
    var i = 0;
[ ];
[ ];
[ ];
[ ];
    while(i < connection.properties.count) 
        [############################################################ ::           # ](connection.properties(i).name,connection.properties(i).value);
        i = i + 1;
    end;
end;

/* создание dbf шаблона для проводок */
private macro createDBFTurnsFile(auditFolder,tableName)
//debugbreak;
    private var DBFconnector;

    /* Объект создается на СП */
    DBFconnector = CreateObject("rsax","TRsAxServer","RsAxServer",true).CreateComObject("ADODB.Connection",false);
    DBFconnector.Open("Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + auditFolder + ";Extended Properties=dBASE IV;User ID=Admin;Password=;");

//    printProperties(DBFconnector);

    /* таким sql запросом создается файл tableName в папке auditFolder */
    DBFconnector.Execute("CREATE TABLE " + strUpr(tableName) + " ([ACCTRNID]      INTEGER,   " +
                         "                                        [CREATOR]       CHAR(100), " +
                         "                                        [CONFIRMER]     CHAR(100), " +
                         "                                        [DATECARRY]     DATE,      " +
                         "                                        [SYSDATE]       DATE,      " +
                         "                                        [GROUND]        CHAR(210), " +
                         "                                        [ACCOUNT]       CHAR(35),  " +
                         "                                        [ACCNAME]       CHAR(120), " +
                         "                                        [AMOUNT]        NUMBER,    " +
                         "                                        [DBTCRDT]       CHAR(35),  " +
                         "                                        [DEBET]         CHAR(35),  " +
                         "                                        [DEBETNAME]     CHAR(120), " +
                         "                                        [CREDIT]        CHAR(35),  " +
                         "                                        [CREDITNAME]    CHAR(120), " +
                         "                                        [CURRENCY]      CHAR(10),  " +
                         "                                        [AMOUNTCURR]    NUMBER,    " +
                         "                                        [RATE]          NUMBER     " +
                         "                                       );");

    DBFconnector.Close;
end;

/* создание dbf шаблона для плана счетов */
private macro createDBFAccPlanFile(auditFolder,tableName)
//debugbreak;
    private var DBFconnector;

    /* Объект создается на СП */
    DBFconnector = CreateObject("rsax","TRsAxServer","RsAxServer",true).CreateComObject("ADODB.Connection",false);
    DBFconnector.Open("Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + auditFolder + ";Extended Properties=dBASE IV;User ID=Admin;Password=;");

    /* таким sql запросом создается файл tableName в папке auditFolder */
    DBFconnector.Execute("CREATE TABLE " + strUpr(tableName) + " ([ACCOUNT]  CHAR(25),  " +
                         "                                        [ACCNAME]  CHAR(180), " +
                         "                                        [DEBET]    NUMBER,    " +
                         "                                        [CREDIT]   NUMBER,    " +
                         "                                        [ARTICLE]  CHAR(180)  " +
                         "                                       );");

    DBFconnector.Close;
end;

/* создание dbf шаблона для пользователей */
private macro createDBFOpersFile(auditFolder,tableName)
    private var DBFconnector;

    /* Объект создается на СП */
    DBFconnector = CreateObject("rsax","TRsAxServer","RsAxServer",true).CreateComObject("ADODB.Connection",false);
    DBFconnector.Open("Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + auditFolder + ";Extended Properties=dBASE IV;User ID=Admin;Password=;");

    /* таким sql запросом создается файл tableName в папке auditFolder */
    DBFconnector.Execute("CREATE TABLE " + strUpr(tableName) + " ([OPER]     NUMBER,  " +
                         "                                        [OPERNAME] CHAR(35) " +
                         "                                       );");

    DBFconnector.Close;
end;


macro newAcctrnDBF(dbfFile,fld,num)
    if(num == null) num = ""; end;

    var exportFile = fld + "ACCTRN" + num + ".dbf";

    removeFile(exportFile);
    createDBFTurnsFile(fld,"ACCTRN" + num);

    if(not open(dbfFile, exportFile))
        msgBox("не открыт!||" + exportFile);
        return;
    end;
end;

macro newAccPlanDBF(dbfFile,fld)
    var exportFile = fld + "ACCPLAN.dbf";

    removeFile(exportFile);
    createDBFAccPlanFile(fld,"ACCPLAN");

    if(not open(dbfFile, exportFile))
        msgBox("не открыт!||" + exportFile);
        return;
    end;
end;

macro newOperDBF(dbfFile,fld)
    var exportFile = fld + "OPER.dbf";

    removeFile(exportFile);
    createDBFOpersFile(fld,"OPER");

    if(not open(dbfFile, exportFile))
        msgBox("не открыт!||" + exportFile);
        return;
    end;
end;

macro getTurns(dateBegin:date,dateEnd:date,upload:bool,exportPath:string,auditFolder:string)
    file acctrn_tbl() write dbf;
//debugbreak;
    var filesCount = 0;

    var sql = " SELECT   ACCTRN.T_ACCTRNID       ACCTRNID,                       " +
              "          OPER.T_NAME             CREATOR,                        " +
              "          OPER.T_NAME             CONFIRMER,                      " +
              "          ACCTRN.T_DATE_CARRY     DATECARRY,                      " +
              "          ACCTRN.T_SYSTEMDATE     SYSTEMDATE,                     " +
              "          TRANSLATE (ACCTRN.T_GROUND, CHR (10) || CHR (13) || '~', ' ') GROUND, " +
              "          DEBETACC.T_ACCOUNT      ACCOUNT,                        " +
              "          DEBETACC.T_NAMEACCOUNT  ACCNAME,                        " +
              "          ACCTRN.T_SUM_NATCUR     AMOUNT,                         " +
              "          'D'                     DEBETCREDIT,                    " +
              "          DEBETACC.T_ACCOUNT      DEBET,                          " +
              "          DEBETACC.T_NAMEACCOUNT  DEBETNAME,                      " +
              "          CREDITACC.T_ACCOUNT     CREDIT,                         " +
              "          CREDITACC.T_NAMEACCOUNT CREDITNAME,                     " +
              "          '810'                   CURRENCY,                       " +
              "          ACCTRN.T_SUM_NATCUR     AMOUNTCURR,                     " +
              "          1.0                     RATE                            " +
              "   FROM   DACCTRN_DBT  ACCTRN,                                    " +
              "          DACCOUNT_DBT DEBETACC,                                  " +
              "          DACCOUNT_DBT CREDITACC,                                 " +
              "          DPERSON_DBT  OPER                                       " +
              "  WHERE   ACCTRN.T_DATE_CARRY BETWEEN :dateBegin                  " +
              "                                  AND :dateEnd                    " +
              "          AND ACCTRN.T_ACCOUNTID_PAYER    = DEBETACC.T_ACCOUNTID  " +
              "          AND ACCTRN.T_ACCOUNTID_RECEIVER = CREDITACC.T_ACCOUNTID " +
              "          AND ACCTRN.T_OPER               = OPER.T_OPER           " +
              "          AND ACCTRN.T_STATE = 1                                  " +
              "          AND ACCTRN.T_RESULT_CARRY != 14                         " +
              " ORDER BY ACCTRN.T_ACCTRNID                                       ";

    var cmd = rsdCommand(sql);
        cmd.addParam("dateBegin",RSDBP_IN,dateBegin);
        cmd.addParam("dateEnd",  RSDBP_IN,dateEnd  );
    var rs = rsdRecordset(cmd);

    var cmdCount = rsdCommand(" SELECT COUNT(*) FROM ("+sql+")");
        cmdCount.addParam("dateBegin",RSDBP_IN,dateBegin);
        cmdCount.addParam("dateEnd",  RSDBP_IN,dateEnd  );
    var rsCount = rsdRecordset(cmdCount);
        rsCount.movenext;

    var i = 0;

    var currentFileName = "";

    initprogress(int(rsCount.value(0)), "Выгрузка проводок...");

    while(rs.movenext)

        /* через каждые 2 млн. записей создается новый файл */
        if(mod(i,2000000) == 0)
            close(acctrn_tbl);

            if((filesCount>0) and upload)
                if(copyFile(auditFolder + currentFileName, exportPath + currentFileName,true))
                    removeFile(auditFolder + currentFileName);
                else
                    msgBox("Ошибка при копировании файла " + currentFileName + " в каталог " + exportPath + currentFileName);
                end;
            end;

            newAcctrnDBF(acctrn_tbl,auditFolder,filesCount);
            currentFileName = "ACCTRN" + filesCount + ".dbf";
            filesCount = filesCount + 1;
        end;

        clearRecord(acctrn_tbl);

        acctrn_tbl.ACCTRNID   = int(rs.value("ACCTRNID"));
        acctrn_tbl.CREATOR    = ToANSI(rs.value("CREATOR"    ), TRUE);
        acctrn_tbl.CONFIRMER  = ToANSI(rs.value("CONFIRMER"  ), TRUE);
        acctrn_tbl.DATECARRY  = rs.value("DATECARRY" );
        acctrn_tbl.SYSDATE    = rs.value("SYSTEMDATE");
        acctrn_tbl.GROUND     = ToANSI(rs.value("GROUND"     ), TRUE);
        acctrn_tbl.ACCOUNT    = ToANSI(rs.value("ACCOUNT"    ), TRUE);
        acctrn_tbl.ACCNAME    = ToANSI(rs.value("ACCNAME"    ), TRUE);
        acctrn_tbl.AMOUNT     = rs.value("AMOUNT"     );
        acctrn_tbl.DBTCRDT    = ToANSI(rs.value("DEBETCREDIT"), TRUE);
        acctrn_tbl.DEBET      = ToANSI(rs.value("DEBET"      ), TRUE);
        acctrn_tbl.DEBETNAME  = ToANSI(rs.value("DEBETNAME"  ), TRUE);
        acctrn_tbl.CREDIT     = ToANSI(rs.value("CREDIT"     ), TRUE);
        acctrn_tbl.CREDITNAME = ToANSI(rs.value("CREDITNAME" ), TRUE);
        acctrn_tbl.CURRENCY   = ToANSI(rs.value("CURRENCY"   ), TRUE);
        acctrn_tbl.AMOUNTCURR = rs.value("AMOUNTCURR" );
        acctrn_tbl.RATE       = rs.value("RATE"       );

        insert(acctrn_tbl);

        i = i + 1;
        useprogress(i);
    end;

    remprogress;

    close(acctrn_tbl);

    if((filesCount>0) and upload)
        if(copyFile(auditFolder + currentFileName, exportPath + currentFileName,true))
            removeFile(auditFolder + currentFileName);
        else
            msgBox("Ошибка при копировании файла " + currentFileName + " в каталог " + exportPath + currentFileName);
        end;
    end;

end;

macro getAccPlan(dateBegin:date,dateEnd:date,upload:bool,exportPath:string,auditFolder:string)
    file accpln_tbl() write dbf;

    var sql = "   SELECT   t.t_balance   ACCOUNT,                                      " +
              "            t.t_name_part ACCNAME,                                      " +
              "            nvl((SELECT   ROUND(SUM (T_DEBET),2)                        " +
              "                   FROM   drestdate_dbt rest, daccbalance_dbt accblnc   " +
              "                  WHERE       accblnc.t_balance = t.t_balance           " +
              "                          AND accblnc.t_accountid = rest.t_accountid    " +
              "                          AND rest.T_RESTCURRENCY = 0                   " +
              "                          AND rest.t_restdate BETWEEN :dateBegin1       " +
              "                                                  AND :dateEnd1),0)     " +
              "                DEBET,                                                  " +
              "            nvl((SELECT   ROUND(SUM (T_CREDIT),2)                       " +
              "                   FROM   drestdate_dbt rest, daccbalance_dbt accblnc   " +
              "                  WHERE       accblnc.t_balance = t.t_balance           " +
              "                          AND accblnc.t_accountid = rest.t_accountid    " +
              "                          AND rest.T_RESTCURRENCY = 0                   " +
              "                          AND rest.t_restdate BETWEEN :dateBegin2       " +
              "                                                  AND :dateEnd2),0)     " +
              "                CREDIT,                                                 " +
              "            nvl((SELECT   T_NAME_PART                                   " +
              "                   FROM   dbalance_dbt t2                               " +
              "                  WHERE       SUBSTR (t.t_balance, 1, 3) = t2.t_balance " +
              "                          AND t.t_chapter  = t2.t_chapter               " +
              "                          AND t.t_inumplan = t2.t_inumplan              " +
              "                          AND t.t_part     = t2.t_part), ' ')           " +
              "                ARTICLE                                                 " +
              "     FROM   dbalance_dbt t, dpartblnc_dbt part                          " +
              "    WHERE       t.t_chapter     <= 4                                    " +
              "            AND t.t_inumplan     = 0                                    " +
              "            AND t.T_TYPE_BALANCE = CHR (1)                              " +
              "            AND t.t_chapter      = part.t_chapter                       " +
              "            AND t.t_inumplan     = part.t_inumplan                      " +
              "            AND t.t_part         = part.t_part                          " +
              " ORDER BY   t.t_chapter, t.t_inumplan, t.t_balance                      " ;
    var cmd = rsdCommand(sql);
        cmd.addParam("dateBegin1",RSDBP_IN,dateBegin);
        cmd.addParam("dateEnd1",  RSDBP_IN,dateEnd  );
        cmd.addParam("dateBegin2",RSDBP_IN,dateBegin);
        cmd.addParam("dateEnd2",  RSDBP_IN,dateEnd  );
    var rs = rsdRecordset(cmd);

    var cmdCount = rsdCommand(" SELECT COUNT(*) FROM ("+sql+")");
        cmdCount.addParam("dateBegin1",RSDBP_IN,dateBegin);
        cmdCount.addParam("dateEnd1",  RSDBP_IN,dateEnd  );
        cmdCount.addParam("dateBegin2",RSDBP_IN,dateBegin);
        cmdCount.addParam("dateEnd2",  RSDBP_IN,dateEnd  );
    var rsCount = rsdRecordset(cmdCount);
        rsCount.movenext;

    var i = 0;
    initprogress(int(rsCount.value(0)), "Выгрузка плана счетов...");

    newAccPlanDBF(accpln_tbl,auditFolder);

    while(rs.movenext)
        clearRecord(accpln_tbl);

        accpln_tbl.ACCOUNT = ToANSI(rs.value("ACCOUNT" ), TRUE);
        accpln_tbl.ACCNAME = ToANSI(rs.value("ACCNAME" ), TRUE);
        accpln_tbl.DEBET   = rs.value("DEBET"   );
        accpln_tbl.CREDIT  = rs.value("CREDIT"  );
        accpln_tbl.ARTICLE = ToANSI(rs.value("ARTICLE" ), TRUE);

        insert(accpln_tbl);

        i = i + 1;
        useprogress(i);
    end;

    remprogress;

    close(accpln_tbl);

    if(upload)
        if(copyFile(auditFolder + "ACCPLAN.dbf", exportPath + "ACCPLAN.dbf", true))
            removeFile(auditFolder + "ACCPLAN.dbf");
        else
            msgBox("Ошибка при копировании файла ACCPLAN.dbf" + " в каталог " + exportPath + "ACCPLAN.dbf");
        end;
    end;
end;

macro getOpers(dateBegin:date,dateEnd:date,upload:bool,exportPath:string,auditFolder:string)
    file oper_tbl() write dbf;

    var sql = "SELECT T_OPER OPER, T_NAME OPERNAME FROM DPERSON_DBT ORDER BY T_OPER";
    var rs  = rsdRecordset(sql);

    var rsCount = rsdRecordset("SELECT COUNT(*) FROM ("+sql+")");
        rsCount.movenext;

    var i = 0;
    initprogress(int(rsCount.value(0)), "Выгрузка пользователей...");

    newOperDBF(oper_tbl,auditFolder);

    while(rs.movenext)
        clearRecord(oper_tbl);

        oper_tbl.OPER     = int(rs.value("OPER"));
        oper_tbl.OPERNAME = ToANSI(rs.value("OPERNAME"), TRUE);

        insert(oper_tbl);

        i = i + 1;
        useprogress(i);
    end;

    remprogress;

    close(oper_tbl);

    if(upload)
        if(copyFile(auditFolder + "OPER.dbf", exportPath + "OPER.dbf", true))
            removeFile(auditFolder + "OPER.dbf");
        else
            msgBox("Ошибка при копировании файла OPER.dbf" + " в каталог " + exportPath + "OPER.dbf");
        end;
    end;
end;


class(TRsbPanel) accTrnsPanel
    
    InitTRsbPanel();
    SetSize(55,6);    

    class(TRsbEditField) EditField(typeFld:integer,x:integer,y:integer,width:integer,height:integer,bindVal,active:bool,panel)
        var bindString = string(bindVal);
        
        initTRsbEditField(typeFld);
        setPosition(x,y);
        setSize(width,height);
        
        if(active == false) 
            editable = focusable = false;    
        end;

        if(typeFld == FT_STRING) 
            bindValue(this,"bindString",100);
        elif(bindVal != null)     
            value = bindVal;
        end;

        if(panel != null)
            panel.addControl(this);
        end;
    end;

    class(TRsbCheckBox) CheckBox(x:integer,y:integer,state:bool,panel)
        initTRsbCheckBox;
        setPosition(x,y);

        if(state != null) 
            checked = state;
        end;

        if(panel != null) 
            panel.addControl(this);
        end;
    end;

    addLabel(TRsbLabel(2,2,"Начало периода"));
    addLabel(TRsbLabel(2,3,"Конец периода" ));
    addLabel(TRsbLabel(2,4,"Скопировать"   ));

    var period1Field = EditField(FT_DATE,  19,2,11,1,{curdate},true, this); // поля для задания периода
    var period2Field = EditField(FT_DATE,  19,3,11,1,{curdate},true, this);
    var extDirField  = EditField(FT_STRING,24,4,26,1,"",       false,this);

    var sendToTerminalCB = checkBox(19,4,false,this);

    period1Field    .addEventHandler(RSB_EV_KEY_PRESSED,    R2M(this,"onPeriod1FieldKeyPressed"));
    period2Field    .addEventHandler(RSB_EV_KEY_PRESSED,    R2M(this,"onPeriod2FieldKeyPressed"));
    extDirField     .addEventHandler(RSB_EV_KEY_PRESSED,    R2M(this,"onExtDirFieldKeyPressed" ));
    sendToTerminalCB.addEventHandler(RSB_EV_CONTROL_CHECKED,R2M(this,"onSendToTermKeyPressed"  ));

    addEventHandler(RSB_EV_KEY_PRESSED,R2M(this,"onKeyPressed"));

    macro onKeyPressed(RsbEvent:object)
        var expDir = "";

        if(rsbEvent.KeyCode == KEY_F2)

            var auditFolder = GetSysDir(0) + "\\audit\\";

            if(not existfile(auditFolder) and not makeDir(auditFolder))
                msgBox("Не удалось создать папку " + auditFolder);
                return;
            end;

            if(sendToTerminalCB.checked and ((extDirField.value == null) or (strLen(extDirField.value) == 0)))
                msgBox("Не указана директория выгрузки");
                return;
            end;

            if(sendToTerminalCB.checked)
                expDir = extDirField.value;

                /* если это локальный путь, то добавляем символ $ */
                if(not(subStr(expDir,1,1) == "\\") )
                    expDir = "$" + expDir;
                end;

                /* добавляем слэш в конце, если его нет */
                if(subStr(expDir,strLen(expDir),1) != "\\")
                    expDir = expDir + "\\";
                end;
            end;

            getTurns  (Period1Field.value,Period2Field.value,sendToTerminalCB.checked,expDir,auditFolder);
            getAccPlan(Period1Field.value,Period2Field.value,sendToTerminalCB.checked,expDir,auditFolder);
            getOpers  (Period1Field.value,Period2Field.value,sendToTerminalCB.checked,expDir,auditFolder);

            /* открытие папки в которую копировались файлы */
            if(sendToTerminalCB.checked)
                openFolder(extDirField.value);
            end;
        end;
    end;

    macro onExtDirFieldKeyPressed(RsbEvent:object)
        if(rsbEvent.KeyCode == KEY_CTRL_F3)
            selectFolder(extDirField.value,null,null,true);
        elif(rsbEvent.KeyCode == KEY_F3)
            selectDir(extDirField.value);
        end;
    end;

    macro onSendToTermKeyPressed(RsbEvent:object)
        extDirField.editable = extDirField.focusable = sendToTerminalCB.checked;
        redraw();
    end;

    macro onPeriod1FieldKeyPressed(RsbEvent:object)
        if(rsbEvent.keyCode == KEY_F3)
            period1Field.value = getDateByCalendar(period1Field.value);
        end;
    end;

    macro onPeriod2FieldKeyPressed(RsbEvent:object)
        if(rsbEvent.keyCode == KEY_F3)
            period2Field.value = getDateByCalendar(period2Field.value);
        end;
    end;
end;

var panel = accTrnsPanel;
    panel.setPosition(30, 10);
    panel.setCaption("Выгрузка проводок");
    panel.setStatus("~F2~ Запуск процедуры ~F3~ Выбор");
    panel.run;
    exit(1);