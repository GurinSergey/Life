/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Гуцу Е.В.

   Имя файла: importW4.mac

   Создан:    14.06.2014

   Описание:  Импорт проводок по банкоматам и терминалам банка Солидарность

   ChangeLog:
-----------------------------------------------------------------------------------------------------------------------------------------------------
 EVG 15/06/2014 Исправлена ошибка дописывания лишнего нуля в Шифр операции (для 2-значных шифров)
-----------------------------------------------------------------------------------------------------------------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
import BankInter, PTInter, FIInter, PaymInter, OprInter, rsexts, rsd;

/* Символ - разделитель */
const BreakSymbol = ":";

var impfileName, srvFile;

var {Oper},
    {CurDate},
    {OurBank},
    {MFO_BANK},
    {Name_BANK},
    {Corac_BANK};

CLASS tDocRecord()

   var ДАТА,
       ОЧЕРЕДНПЛ,
       ПЛАН,
       ФИЛИАЛ,
       ОБЛАСТЬ,
       ПАЧКА,
       ОПЕРАЦИЯ,
       НОМЕР,
       ВАЛЮТА,
       ДЕБЕТ,
       ВАЛЮТАКРЕ,
       КРЕДИТ,
       СУММА,
       ПРИМ1,
       ПРИМ2,
       ПРИМ3,
       ПРИМ4,
       ПРИМ5,
       ПРИМ6;

END;


MACRO GetPartyByAccount( accNum )

   var cmd, rs;

   cmd = rsdCommand( " Select t_client From daccount_dbt Where t_account = ? " );
   cmd.AddParam( "", RSDBP_IN, accNum );
   rs = rsdRecordSet( cmd );
   if( rs and rs.moveNext() )
      return RsbParty( rs.value( 0, null, V_INTEGER ) );
   end;

   println( " К сожалению, счёт " + accNum + " не найден в списке лицевых счетов." );

END;


MACRO ProcessDate( dtString )

   var dd = int( subStr( dtString, 1, 2 ) ),
       mm = int( subStr( dtString, 4, 2 ) ),
       yy = int( subStr( dtString, 7, 4 ) );

   return( date( dd, mm, yy ) );

END;


MACRO CreateDocument( tDoc )

   println( "Формирование документа: " + tDoc.НОМЕР + " Дт." + tDoc.ДЕБЕТ + " Кт." + tDoc.КРЕДИТ + "  " + tDoc.СУММА );

   var Memorial, Payment, ptPayer, ptReceiver;
   var iShifrOper;

   Memorial   = GenObject( "RsbMemorialOrder", 0 );
   Payment    = Memorial.Payment();
   ptPayer    = GetPartyByAccount( tDoc.ДЕБЕТ  );
   ptReceiver = GetPartyByAccount( tDoc.КРЕДИТ );

   if( not ptPayer )
      println( " К сожалению, не найден клиент по счёту " + tDoc.ДЕБЕТ + "." );
      return false;
   end;
   if( not ptReceiver )
      println( " К сожалению, не найден клиент по счёту " + tDoc.КРЕДИТ + "." );
      return false;
   end;

   iShifrOper = tDoc.ОПЕРАЦИЯ;
   if( strLen( iShifrOper ) == 1 )
      iShifrOper = "0"+iShifrOper;
   end;


   Memorial.State         = 0;                                  // CB_DOC_STATE_DEFERRED
   Memorial.Oper          = {oper};

   Memorial.Chapter       = 1;                                  // CHAPT1
   if( tDoc.ОБЛАСТЬ != "Баланс" )
      Memorial.Chapter    = 3;
   end;

   Memorial.Code_Currency = ПолучитьКодФинИн( tDoc.ВАЛЮТА );
   Memorial.Kind_Oper     = " 6";
   Memorial.Origin        = CB_DOC_ORIGIN_AUTO;                 // Происхождение "Создан автоматически"
   Memorial.Kind_Operation= 24001;                              // "Платёжный документ"


   Payment.SetPayerPI
   ( 
     PAYMENTS_GROUP_UNDEF,
     {OurBank},
     PTCK_BIC,
     {MFO_BANK},
     {Name_BANK},
     {Corac_BANK},
     Memorial.Code_Currency,
     Memorial.Chapter,
     tDoc.ДЕБЕТ,
     ptPayer.PartyID,
     ptPayer.FullName,
     ptPayer.Code( PTCK_INN ),
     PTCK_CONTR,
     ptPayer.Code( PTCK_CONTR )
   );

   Payment.SetReceiverPI
   ( 
     PAYMENTS_GROUP_UNDEF,
     {OurBank},
     PTCK_BIC,
     {MFO_BANK},
     {Name_BANK},
     {Corac_BANK},
     Memorial.Code_Currency,
     Memorial.Chapter,
     tDoc.КРЕДИТ,
     ptReceiver.PartyID,
     ptReceiver.FullName,
     ptReceiver.Code( PTCK_INN ),
     PTCK_CONTR,
     ptReceiver.Code( PTCK_CONTR )
   );

  
   //Payment.CryptoAction( string("Автоматическое_формирование_платежей") ); 
   Payment.DocKind        = DLDOC_MEMORIALORDER;
   Payment.Purpose        = PM_PURP_MEMORDER;
   Payment.ShifrOper      = iShifrOper;
   Payment.BaseFIID       = Memorial.Code_Currency;
   Payment.PayerFIID      = ПолучитьКодФинИн( tDoc.ВАЛЮТА );
   Payment.ReceiverFIID   = ПолучитьКодФинИн( tDoc.ВАЛЮТАКРЕ );
   Payment.PayerAmount    = tDoc.СУММА;
   Payment.ReceiverAmount = tDoc.СУММА;
   Payment.BaseAmount     = tDoc.СУММА;
   Payment.ValueDate      = 
   Payment.Date           = ProcessDate( tDoc.ДАТА );
   Payment.PayerBankEnterDate = 
   Payment.ClientDate         = {curdate};
   Payment.IsPlanPaym     = "X";
   Payment.PaymentKind    = "Э";
   Payment.Priority       = tDoc.ОЧЕРЕДНПЛ;
   Payment.NumberPack     = tDoc.ПАЧКА;
   Payment.Number         = tDoc.НОМЕР;

   //Payment.Ground         = tDoc.ПРИМ1 + " " + tDoc.ПРИМ2 + " " + tDoc.ПРИМ3 + " " + tDoc.ПРИМ4 + " " + tDoc.ПРИМ5 + " " + tDoc.ПРИМ6;
   //Payment.Ground         = tDoc.ПРИМ1 + "\n" + tDoc.ПРИМ2 + "\n" + tDoc.ПРИМ3 + "\n" + tDoc.ПРИМ4 + "\n" + tDoc.ПРИМ5 + "\n" + tDoc.ПРИМ6;
   Payment.Ground         = tDoc.ПРИМ1 + " " + tDoc.ПРИМ2 + " " + tDoc.ПРИМ3 + "\n" + tDoc.ПРИМ4 + "\n" + tDoc.ПРИМ5 + " " + tDoc.ПРИМ6;
   Payment.Ground         = strSubst( Payment.Ground, "  ", " " );

   Memorial.LaunchOper    = false;
   Memorial.Update();

   println( " Выполнено успешно " );
   return true;

END;



MACRO ProcessFile( fName )

   var impFile = TStreamDoc( fName, "R", "rsoem", 0 ),
       iStr    = "";

   var curTag,
       curValue;

   var impDoc;

   var propId;


   //debugbreak;


   // Подсчёт количества документов
   var n = 0;
   BegAction( null, "Считаем документы" );
   while( impFile.ReadLine( iStr ) )
      if( trim( substr( iStr, 1, index( istr, BreakSymbol )-1 ) ) == "%ДОКУМЕНТ" )
         n = n + 1;
      end;
   end;
   EndAction();

   impFile = null;
   impFile = TStreamDoc( fName, "R", "rsoem", 0 );
   initProgress( n, "Обрабатываются документы...", "Загрузка документов" );
   n = 0;
   while( impFile.ReadLine( iStr ) )

      /* В строчках с тегом "%END" почему-то нет разделителя ":", поэтому, чтобы не делать для них
         отдельную обработку, просто добавим его в конец. */
      if( index( istr, BreakSymbol ) == 0 )
         istr = istr + BreakSymbol;
      end;


      curTag   = trim( substr( iStr, 1, index( istr, BreakSymbol )-1 ) );
      curValue = trim( substr( iStr, index( istr, BreakSymbol )+1 ) );


      // Новый документ
      if( curTag == "%ДОКУМЕНТ" )
         impDoc = tDocRecord();
         n = n + 1;
         useProgress( n );

      // Конец документа
      elif( curTag == "%END" )
         CreateDocument( impDoc );

      // Видимо, тоже служебное поле, но не понятно для чего оно
      elif( curTag == "%%FIL" )

      // Поля документа
      else
         /* Запишем информацию из строки файла в свойство объекта tDocRecord() с таким же названием,
            как тег из строки (если такое свойство есть). */
         propId = GenPropId( impDoc, curTag );
         if( propId > -1 )
            impDoc[ propId ] = curValue;
         else
            println( "Обнаружен неподдерживаемый тег \"" + curTag + "\"" );
         end;

         //println(curTag);
      end;

      //println( iStr, "\t\t\t\t\t\t\t\t\t = ", curTag, " - ", curValue );

   end;
   //debugbreak;

   remProgress();


END;








// Выбор файла
if( SelectFile( impfileName, "*.txt", "Пожалуйста, выберите файл для загрузки", 0, true ) )

   // Копируем файл на сервер
   srvFile = impfileName;
   while( index( srvFile, "\\" ) > 0 )
      srvFile = subStr( srvFile, index(srvFile, "\\")+1 );
   end;

   srvFile = "..\\TxtFile\\"+ srvFile;

   if( not CopyFile( "$"+ impfileName, srvFile ) )
      msgbox( "Ошибка копирования файла на сервер приложений" );
      exit(1);
   end;

   ProcessFile( srvFile );
else
   msgbox( "Извините, вы отказались от выбора файла" );
   exit(1);
end;














