/************************************************************************/
/*          Автоматизированная банковская система RS-Bank v6.0          */
/*                                                                      */
/*               Copyright (c) R-Style                                  */
/*                                                                      */
/*  Имя файла        :                                                  */
/*                                                                      */
/*  Описание         : выборка данных для формы 407, экспорт в ПТК ПСД  */
/*                                                                      */
/*  Программист      : Глушин С.П.  (GSP)                               */
/*                                       	                               */
/*  Создан           : 21.05.2013                                       */
/*                                                                      */
/*  21.05.2013 GSP C-16376-6 Переписал построение формы по новому ТЗ,   */
/*                           Изменена логика макроса, убрано все лишнее */
/*  07.06.2013 GSP           Версия без записи данных о документах в БД */
/*  18.06.2013 GSP           Реализован экспорт в ПТК ПСД с сохранением */
/*                           всех рассчитанных периодов в БД            */
/*  18.06.2014 GSP           Адаптация 2031                             */
/*  20.10.2014 GSP C-34227   Реализация экспорта в Клико, изменена панель    */
/*                           запуска для удобства пользования                */
/************************************************************************/

    import globals, FIInter,rsbdataset,OprInter, "VBAconst.mac",rsexts,payminter,pm_note, oralib, "lib_lang.mac", treport,payminter,LikePy,cb_sql,"fg_Life_parm.mac"/*,FilesAndFolders*/,rcw, rsexts;
    var ob,ex,obBook,obSheet, uni_select,ot4_flag_47416,/*ot4_flag_export,*/uni_param, needPrintHead = true;
    var ot4_flag_exportPTK = false,ot4_flag_exportKliko = false,ot4_flag_calculate = false;
    var out, output = "407_predv.xls", fulloutput;                            
    var path = "", pathfile = "",    filen = "407_predv.lbr";

        GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\LBRDIR",2,path);
        pathfile = FindPath(filen,path);

    var MenuChoise;
    array operKind;
    var dlg = TRecHandler("panel",pathfile,True);
    var ot4_data_begin,ot4_data_end;
    private var EXV_filials;
    private var fgBank = fg_life_subject({OurBank});
    const KEY_F2=316;
    const KEY_F3=317;
    const KEY_F9=323;
    const KEY_ESC=27;
    const KEY_ENTER = 13;
    const KEY_SPACE = 32;                                                       
    var exel_begin_stroka:integer=5;
    var exelstroka:integer=exel_begin_stroka;
    var prbb_swift;
    var rabota_date_begin:date;
    var rabota_date_end:date;
    var rabota_time_begin:time;
    var rabota_time_end:time;

    array podrazdel;
    array payerMask;
    array receiverMask;
        /***************************************************************************************************************************************/
          podrazdel(0)    = "211";                               /*                                                                            */
          payerMask(0)    = "^40817810|^423..810|^40912810";     /*                                        в руб. РФ                           */
          receiverMask(0) = "^30111810|^30231810|^30303810";     /*                                      /                                     */
                                                                 /* - Переводы физических лиц резидентов                                       */
          podrazdel(1)    = "211";                               /*                                      \                                     */
          payerMask(1)    = "^40817|^423|^40912";                /*                                        в иностранной валюте                */
    if(fgBank.is_EXV_Voronezh)
          receiverMask(1) = "^30301...........1005$";            /*                                                                            */
    elif(fgBank.is_EXV_Volgograd)
          receiverMask(1) = "^30301...........1001$";            /*                                                                            */
    elif(fgBank.is_EXV_Ulyanovsk)
          receiverMask(1) = "^30301...........1009$";            /*                                                                            */
    elif(fgBank.is_EXV_Stavropol)
          receiverMask(1) = "^30301...........1100$";            /*                                                                            */
    else
          receiverMask(1) = "^30110|^30114";                     /*                                                                            */
    end;
        /***************************************************************************************************************************************/
          podrazdel(2)    = "212";                               /*                                                                            */
          payerMask(2)    = "^30111810|^30231810|^30303810";     /*                                                    в руб. РФ               */
          receiverMask(2) = "^40817810|^423..810";               /*                                                  /                         */
                                                                 /* - Поступления в пользу физических лиц резидентов                           */
          podrazdel(3)    = "212";                               /*                                                  \                         */
    if(fgBank.is_EXV_Voronezh)                                   /*                                                    в иностранной валюте    */
          payerMask(3) = "^30302...........1005$";               /*                                                                            */
    elif(fgBank.is_EXV_Volgograd)
          payerMask(3) = "^30302...........1001$";               /*                                                                            */
    elif(fgBank.is_EXV_Ulyanovsk)
          payerMask(3) = "^30302...........1009$";               /*                                                                            */
    elif(fgBank.is_EXV_Stavropol)
          payerMask(3) = "^30302...........1100$";               /*                                                                            */
    else
          payerMask(3) = "^30110|^30114";                        /*                                                                            */
    end;
          receiverMask(3) = "^40817|^423|^40912";                /*                                                                            */
        /***************************************************************************************************************************************/
          podrazdel(4)    = "221";                               /*                                                                            */
          payerMask(4)    = "^40820810|^426..810|^40913810";     /*                                          в руб. РФ                         */
          receiverMask(4) = "^30111810|^30231810|^30303810";     /*                                        /                                   */
                                                                 /* - Переводы физических лиц нерезидентов                                     */
          podrazdel(5)    = "221";                               /*                                        \                                   */
          payerMask(5)    = "^40820|^426|^40913";                /*                                          в иностранной валюте              */
    if(fgBank.is_EXV_Voronezh)
          receiverMask(5) = "^30301...........1005$";            /*                                                                            */
    elif(fgBank.is_EXV_Volgograd)
          receiverMask(5) = "^30301...........1001$";            /*                                                                            */
    elif(fgBank.is_EXV_Ulyanovsk)
          receiverMask(5) = "^30301...........1009$";            /*                                                                            */
    elif(fgBank.is_EXV_Stavropol)
          receiverMask(5) = "^30301...........1100$";            /*                                                                            */
    else
          receiverMask(5) = "^30110|^30114";                     /*                                                                            */
    end;
        /***************************************************************************************************************************************/
          podrazdel(6)    = "222";                               /*                                                                            */
          payerMask(6)    = "^30111810|^30231810|^30303810";     /*                                                      в руб. РФ             */
          receiverMask(6) = "^40820810|^426..810";               /*                                                    /                       */
                                                                 /* - Поступления в пользу физических лиц нерезидентов                         */
          podrazdel(7)    = "222";                               /*                                                    \                       */
    if(fgBank.is_EXV_Voronezh)                                   /*                                                      в иностранной валюте  */
          payerMask(7) = "^30302...........1005$";               /*                                                                            */
    elif(fgBank.is_EXV_Volgograd)
          payerMask(7) = "^30302...........1001$";               /*                                                                            */
    elif(fgBank.is_EXV_Ulyanovsk)
          payerMask(7) = "^30302...........1009$";               /*                                                                            */
    elif(fgBank.is_EXV_Stavropol)
          payerMask(7) = "^30302...........1100$";               /*                                                                            */
    else
          payerMask(7) = "^30110|^30114";                        /*                                                                            */
    end;
          receiverMask(7) = "^40820|^426|^40913";                /*                                                                            */
        /***************************************************************************************************************************************/
          podrazdel(8)    = "c 47416";
          payerMask(8)    = "^30114...........5240$|^30110.............97$|^30110...........3922$"; //Платежи, прошедшие через счет невыясненных
          receiverMask(8) = "^40817|^423|^426|^40820";

    if((fgBank.is_EXV_Voronezh) or (fgBank.is_EXV_Volgograd) or (fgBank.is_EXV_Ulyanovsk) or (fgBank.is_EXV_Stavropol))
       EXV_filials = true;
    else
       EXV_filials = false;
    end;

    macro format_select;
      if (exel_begin_stroka!=exelstroka) 
        obSheet.Range("A"+exel_begin_stroka+":o"+exelstroka).select;       
        ex.Selection.Borders(xlDiagonalDown).LineStyle = xlNone;           
        ex.Selection.Borders(xlDiagonalUp).LineStyle = xlNone;             
        ex.Selection.Borders(xlEdgeLeft).LineStyle = xlContinuous;         
        ex.Selection.Borders(xlEdgeLeft).Weight = xlThin;                  
        ex.Selection.Borders(xlEdgeLeft).ColorIndex = xlAutomatic;         
        ex.Selection.Borders(xlEdgeTop).LineStyle = xlContinuous;          
        ex.Selection.Borders(xlEdgeTop).Weight = xlThin;                   
        ex.Selection.Borders(xlEdgeTop).ColorIndex = xlAutomatic;          
        ex.Selection.Borders(xlEdgeBottom).LineStyle = xlContinuous;       
        ex.Selection.Borders(xlEdgeBottom).Weight = xlThin;                
        ex.Selection.Borders(xlEdgeBottom).ColorIndex = xlAutomatic;       
        ex.Selection.Borders(xlEdgeRight).LineStyle = xlContinuous;        
        ex.Selection.Borders(xlEdgeRight).Weight = xlThin;                 
        ex.Selection.Borders(xlEdgeRight).ColorIndex = xlAutomatic;        
        ex.Selection.Borders(xlInsideVertical).LineStyle = xlContinuous;   
        ex.Selection.Borders(xlInsideVertical).Weight = xlThin;            
        ex.Selection.Borders(xlInsideVertical).ColorIndex = xlAutomatic;   
        ex.Selection.Borders(xlInsideHorizontal).LineStyle = xlContinuous; 
        ex.Selection.Borders(xlInsideHorizontal).Weight = xlThin;          
        ex.Selection.Borders(xlInsideHorizontal).ColorIndex = xlAutomatic; 
        ex.Selection.wraptext = true;                                      
      end
    END;


    MACRO format_cell_bank(cell)

        obSheet.Range(cell).HorizontalAlignment = xlGeneral;
        obSheet.Range(cell).VerticalAlignment = xlBottom;
        obSheet.Range(cell).WrapText = True;
        obSheet.Range(cell).Orientation = 0;
        obSheet.Range(cell).AddIndent = False;
        obSheet.Range(cell).IndentLevel = 0;
        obSheet.Range(cell).ShrinkToFit = False;
        obSheet.Range(cell).ReadingOrder = xlContext;
        obSheet.Range(cell).MergeCells = False;
    END;

    MACRO format_perenos_po_slowam(cell)

      obSheet.Range(cell).HorizontalAlignment = xlGeneral;
      obSheet.Range(cell).VerticalAlignment = xlBottom;
      obSheet.Range(cell).WrapText = True;
      obSheet.Range(cell).Orientation = 0;
      obSheet.Range(cell).AddIndent = False;
      obSheet.Range(cell).IndentLevel = 0;
      obSheet.Range(cell).ShrinkToFit = False;
      obSheet.Range(cell).ReadingOrder = xlContext;
      obSheet.Range(cell).MergeCells = False;
    END;

    MACRO out_sql(select,parametrs,nomer,period,printWithCalc:bool)
       private var ContrKind = "-",paymentKind = "-",insertDocInfo,insertstring,insertParam;
    IF(printWithCalc)
       if(ot4_flag_47416 != "X")
          if((nomer == 2) or (nomer == 4) or (nomer == 6) or (nomer == 8)) /*для отбора валютных документов*/
             select = select +
             " and (substr(PAYM.T_RECEIVERACCOUNT,6,3) <> '810'                                         "+ "\n" +
             "      or substr(PAYM.T_PAYERACCOUNT,6,3) <> '810')                                        "+ "\n" ;
             if((nomer == 3) or (nomer == 4) or (nomer == 7) or (nomer == 8))
                select = select +
                "    and regexp_like(cors.t_account,:payer_like)                                        "+ "\n" +
                "    and regexp_like(paym.t_receiveraccount,:receiver_like)                             "+ "\n" +
                "    and prop.t_debetcredit = 0                                                         "+ "\n" ;
                if(not(EXV_filials))
                   select = select +
                   "   and not (substr(paym.t_receiveraccount,1,5) = '42301' and substr(paym.t_payeraccount,1,5) = '42301') "+
                   "    and not exists(select 1 from dpmprop_dbt pm, dcorschem_dbt cs                   "+ "\n" +
                   "                    where PM.T_DEBETCREDIT = 1                                      "+ "\n" +
                   "                      and PM.T_PAYMENTID = paym.t_paymentid                         "+ "\n" +
                   "                      and PM.T_CORSCHEM = CS.T_NUMBER                               "+ "\n" +
                   "                      and regexp_like(CS.T_ACCOUNT,'^30301|^30302|^30305|^30306'))  "+ "\n" +
/*        "    and not exists(select 1 from dpmdocs_dbt pm, darhdoc$_dbt arh$                           "+ "\n" +
          "                    where PM.T_APPLICATIONKEY = ARH$.T_APPLICATIONKEY                        "+ "\n" +
          "                      and PM.T_PAYMENTID = paym.t_paymentid                                  "+ "\n" +
          "                      and arh$.t_chapter = 1                                                 "+ "\n" +
          "                      and regexp_like(arh$.T_ACCOUNT_receiver,'^30301|^30302|^30305|^30306') "+ "\n" +
          "                    union                                                                    "+ "\n" +    //GSP адаптация 2031
          "                   select 1 from dpmdocs_dbt pm, darhdoc_dbt arh                             "+ "\n" +
          "                    where PM.T_APPLICATIONKEY = ARH.T_APPLICATIONKEY                         "+ "\n" +
          "                      and PM.T_PAYMENTID = paym.t_paymentid                                  "+ "\n" +
          "                      and arh.t_chapter = 1                                                  "+ "\n" +
          "                      and regexp_like(arh.T_ACCOUNT_receiver,'^30301|^30302|^30305|^30306')) "+ "\n" ;*/
          "    and not exists(select 1 from dpmdocs_dbt pm, dacctrn_dbt arh                             "+ "\n" +
          "                    where PM.T_acctrnid = ARH.T_acctrnid                                     "+ "\n" +
          "                      and PM.T_PAYMENTID = paym.t_paymentid                                  "+ "\n" +
          "                      and arh.t_chapter = 1                                                  "+ "\n" +
          "                      and regexp_like(arh.T_ACCOUNT_receiver,'^30301|^30302|^30305|^30306')) "+ "\n" ;
                end;
             else
                select = select +
                "    and regexp_like(paym.t_payeraccount,:payer_like)                                   "+ "\n" +
                "    and regexp_like(cors.t_account,:receiver_like)                                     "+ "\n" +
                "    and prop.t_debetcredit = 1                                                         "+ "\n" ;      
                if(not(EXV_filials))
                   select = select +
                   "    and not exists(select 1 from dpmprop_dbt pm, dcorschem_dbt cs                   "+ "\n" +
                   "                    where PM.T_DEBETCREDIT = 0                                      "+ "\n" +
                   "                      and PM.T_PAYMENTID = paym.t_paymentid                         "+ "\n" +
                   "                      and PM.T_CORSCHEM = CS.T_NUMBER                               "+ "\n" +
                   "                      and regexp_like(CS.T_ACCOUNT,'^30301|^30302|^30305|^30306'))  "+ "\n" ;
                end;
             end;
          else
             select = select +
             "    and regexp_like(paym.t_payeraccount,:payer_like)                                      "+ "\n" +
             "    and regexp_like(paym.t_receiveraccount,:receiver_like)                                "+ "\n" +
             "    and prop.t_debetcredit = 1                                                            "+ "\n" ;      
          end;
       else
          if(nomer == 9)
             select = select +
             "    and regexp_like(paym.t_payeraccount,:payer_like)                                      "+ "\n" +
             "    and regexp_like(paym.t_receiveraccount,:receiver_like)                                "+ "\n" +
             "    and substr(PAYM.T_RECEIVERACCOUNT,6,3) = '810'                                        "+ "\n" +
             "    and substr(PAYM.T_PAYERACCOUNT,6,3) = '810'                                           "+ "\n" ;
          else
             select = select +                                                                         
             "    and regexp_like(cors.t_account,:payer_like)                                           "+ "\n" +
             "    and regexp_like(paym.t_receiveraccount,:receiver_like)                                "+ "\n" +
             "    and (substr(PAYM.T_RECEIVERACCOUNT,6,3) <> '810'                                      "+ "\n" +
             "         or substr(PAYM.T_PAYERACCOUNT,6,3) <> '810')                                     "+ "\n" ;
          end;
          select = select +
          "    and prop.t_debetcredit = 0                                                               "+ "\n" +      
          "    and exists (select 1                                                                     "+ "\n" +
          "                  From doprstep_dbt s, doproper_dbt o                                        "+ "\n" +
          "                 where s.t_id_operation = o.t_id_operation                                   "+ "\n" +
          "                   and s.t_blockid = 10000154                                                "+ "\n" +
          "                   and s.t_isexecute='X'                                                     "+ "\n" +
          "                   and o.t_documentid= lpad(PAYM.T_PAYMENTID,34,'0'))                        "+ "\n" +
/*        "    and not exists(select 1 from dpmdocs_dbt pm, darhdoc$_dbt arh$                           "+ "\n" +
          "                    where PM.T_APPLICATIONKEY = ARH$.T_APPLICATIONKEY                        "+ "\n" +
          "                      and PM.T_PAYMENTID = paym.t_paymentid                                  "+ "\n" +
          "                      and arh$.t_chapter = 1                                                 "+ "\n" +
          "                      and regexp_like(arh$.T_ACCOUNT_receiver,'^30301|^30302|^30305|^30306') "+ "\n" +
          "                    union                                                                    "+ "\n" +
          "                   select 1 from dpmdocs_dbt pm, darhdoc_dbt arh                             "+ "\n" +   //GSP адаптация 2031
          "                    where PM.T_APPLICATIONKEY = ARH.T_APPLICATIONKEY                         "+ "\n" +
          "                      and PM.T_PAYMENTID = paym.t_paymentid                                  "+ "\n" +
          "                      and arh.t_chapter = 1                                                  "+ "\n" +
          "                      and regexp_like(arh.T_ACCOUNT_receiver,'^30301|^30302|^30305|^30306')) "+ "\n" ;*/
          "    and not exists(select 1 from dpmdocs_dbt pm, dacctrn_dbt arh                             "+ "\n" +
          "                    where PM.T_acctrnid = ARH.T_acctrnid                                     "+ "\n" +
          "                      and PM.T_PAYMENTID = paym.t_paymentid                                  "+ "\n" +
          "                      and arh.t_chapter = 1                                                  "+ "\n" +
          "                      and regexp_like(arh.T_ACCOUNT_receiver,'^30301|^30302|^30305|^30306')) "+ "\n" ;
       end;
    END;
       private var ds;
       Ds = ExecSQLselect(Select,parametrs);
debugbreak;
debugbreak;
       while (ds.movenext)
          obSheet.Range("a"+exelstroka).numberformat="@";
          obSheet.Range("a"+exelstroka).Value=ds.value("podrazdel");
          obSheet.Range("b"+exelstroka).Value=ds.value("ndoc");
          obSheet.Range("c"+exelstroka).Value=ds.value("ddoc");
          obSheet.Range("d"+exelstroka).Value=ds.value("summa");
          obSheet.Range("e"+exelstroka).Value=ds.value("valuta");
          obSheet.Range("f"+exelstroka).Value=ds.value("plat");
          obSheet.Range("g"+exelstroka).numberformat="@";
          obSheet.Range("g"+exelstroka).Value=ds.value("c4_plat");
          obSheet.Range("h"+exelstroka).Value=ds.value("b_plat");
          obSheet.Range("i"+exelstroka).Value=ds.value("polu4");
          obSheet.Range("j"+exelstroka).numberformat="@";
          obSheet.Range("j"+exelstroka).Value=ds.value("c4_polu4");
          obSheet.Range("k"+exelstroka).Value=ds.value("b_polu4");
          obSheet.Range("l"+exelstroka).Value=ds.value("osnov");
          if((printWithCalc) or (ot4_flag_47416 == "X"))
             if((ReadNoteForPayment(ds.value("npp"),137)) and (ReadNoteForPayment(ds.value("npp"),137) != "Х" ))
                paymentKind = ReadNoteForPayment(ds.value("npp"),137);
             else
                paymentKind = "0";
             end;
          else
             paymentKind = ds.value("paymentKind");
          end;
          obSheet.Range("m"+exelstroka).Value= paymentKind;
          obSheet.Range("n"+exelstroka).Value= ds.value("kat117");
          if((printWithCalc) or (ot4_flag_47416 == "X"))
             if(ReadNoteForPayment(ds.value("npp"),139))
                ContrKind = ReadNoteForPayment(ds.value("npp"),139);
             else
                ContrKind = "3";
             end;
          else
             ContrKind = ds.value("ContrKind");
          end;
          obSheet.Range("o"+exelstroka).Value=ContrKind;
          exelstroka=exelstroka+1;
          if((printWithCalc) and (ot4_flag_47416 != "X"))
             insertstring = "insert into DDOCINFO_F407_DBT values(:period,      " +
                                                                 ":npp,         " +  
                                                                 ":podrazdel,   " +
                                                                 ":ndoc,        " +
                                                                 ":ddoc,        " +
                                                                 ":summa,       " +
                                                                 ":valuta,      " +
                                                                 ":plat,        " +
                                                                 ":c4_plat,     " +
                                                                 ":b_plat,      " +
                                                                 ":polu4,       " +
                                                                 ":c4_polu4,    " +
                                                                 ":b_polu4,     " +
                                                                 ":osnov,       " +
                                                                 ":paymentKind, " +
                                                                 ":kat117,      " +
                                                                 ":ContrKind)   " ;

             insertParam = makeArray (SQLParam ("period",            period),
                                      SQLParam ("npp",               ds.value("npp")),
                                      SQLParam ("podrazdel",  string(ds.value("podrazdel"))),
                                      SQLParam ("ndoc",       string(ds.value("ndoc"))),
                                      SQLParam ("ddoc",         date(ds.value("ddoc"))),
                                      SQLParam ("summa",             ds.value("summa")),
                                      SQLParam ("valuta",     string(ds.value("valuta"))),
                                      SQLParam ("plat",       string(ds.value("plat"))),
                                      SQLParam ("c4_plat",    string(ds.value("c4_plat"))),
                                      SQLParam ("b_plat",     string(ds.value("b_plat"))),
                                      SQLParam ("polu4",      string(ds.value("polu4"))),
                                      SQLParam ("c4_polu4",   string(ds.value("c4_polu4"))),
                                      SQLParam ("b_polu4",    string(ds.value("b_polu4"))),
                                      SQLParam ("osnov",      string(ds.value("osnov"))),
                                      SQLParam ("paymentKind",string(paymentKind)),
                                      SQLParam ("kat117",     string(ds.value("kat117"))),
                                      SQLParam ("ContrKind",  string(ContrKind)));
             execSQL(insertstring,insertParam)
          end;
       end;/*while*/

    END;

    MACRO outputinexcel(printWithCalc:bool,ID_period:integer)
      initprogress(9,"подготовка к расчету","Идет расчет строк отчета");
        macro copyToMe(full_absolut_path)
           private var m_path: string = "";
           private var tempFileNameBezPuti = output;
           m_path = "$"  + tempFileNameBezPuti;
          if (not CopyFile(full_absolut_path, m_path, TRUE))
             println ("ошибка копирования шаблона с сервера приложений на терминал.\n исходный файл: "+full_absolut_path+" \nфайл назначения: " + m_path);
             println(" процесс остановлен. Обратитесь в техподдержку. код ошибки 238 ");
             exit(1);
          end;
        end;
   
      private var ds;
      private var dd:date, tt:time, ii:integer, ss:string;  // это переменные для использования FileInfo

      ob = CreateObject ("rsax","TRsAxServer","RsAxServer",IsStandAlone());
      ex = ob.CreateComObject ("Excel.Application", True);
      GetRegistryValue("BANK_INI\\ОБЩИЕ ПАРАМЕТРЫ\\ДИРЕКТОРИИ\\USERTEMPLSDIR",2,out);

      Fulloutput = FindPath(output, out);                    

      copyToMe(Fulloutput);

       if (not(GetFileInfo("$"+output,@dd,@tt,@ii,@ss))); 
           msgbox(" на локальном диске отсутствует файл "+output+"          \n процесс остановлен");
           exit(1);
       end;

      ss = substr(ss,2); // откусили первый знак бакса
      obBook = ex.Workbooks.open(ss); 
      obSheet = obBook.ActiveSheet(); 
      obSheet.Range("a2").Value="Начало периода  "+ot4_data_begin+"   конец периода  "+ot4_data_end;

      message("------------------------------- идет построение отчета --------------------------------");
      private var i = 1;  

      if(printWithCalc)
         uni_select = 
         " select distinct paym.t_paymentid npp,                                                                            "+ "\n" +
         "        :podrazdel podrazdel,                                                                                     "+ "\n" +
         "        pmrmprop.t_number ndoc,                                                                                   "+ "\n" +                          
         "        trunc(pmrmprop.t_date) ddoc,                                                                              "+ "\n" +
         "        paym.t_baseamount summa,                                                                                  "+ "\n" +
         "        fin.t_fi_code valuta,                                                                                     "+ "\n" +                          
         "        pmrmprop.t_payername plat,                                                                                "+ "\n" +                          
         "        paym.t_payeraccount c4_plat,                                                                              "+ "\n" +
         "        pmrmprop.t_payerbankname b_plat,                                                                          "+ "\n" +                          
         "        pmrmprop.t_receivername polu4,                                                                            "+ "\n" +                          
         "        paym.t_receiveraccount c4_polu4,                                                                          "+ "\n" +
         "        pmrmprop.t_receiverbankname b_polu4,                                                                      "+ "\n" +                          
         "        pmrmprop.t_ground osnov,                                                                                  "+ "\n" +
         "        nvl(zn_kat.t_nameobject,'999') kat117                                                                     "+ "\n" +
         "   from dpmpaym_dbt paym,                                                                                         "+ "\n" +
         "        dpmprop_dbt prop,                                                                                         "+ "\n" +
         "        dpmrmprop_dbt pmrmprop,                                                                                   "+ "\n" +
         "        dfininstr_dbt fin,                                                                                        "+ "\n" +
         "        dobjatcor_dbt kateg,                                                                                      "+ "\n" +
         "        dobjattr_dbt zn_kat,                                                                                      "+ "\n" +
         "        dcorschem_dbt cors                                                                                        "+ "\n" +
         "  where paym.t_paymentid = pmrmprop.t_paymentid                                                                   "+ "\n" +
         "    and paym.t_paymentid = prop.t_paymentid                                                                       "+ "\n" +
         "    and paym.t_fiid = fin.t_fiid                                                                                  "+ "\n" +
         "    and kateg.t_object(+) = lpad(paym.t_paymentid,10,0)                                                           "+ "\n" +
         "    and zn_kat.t_attrid(+) = kateg.t_attrid                                                                       "+ "\n" +
         "    and prop.t_corschem = cors.t_number(+)                                                                        "+ "\n" +
         "    and kateg.t_objecttype(+) = 501                                                                               "+ "\n" +
         "    and kateg.t_groupid(+) = 117                                                                                  "+ "\n" +
         "    and kateg.t_validtodate(+) >= to_date ( :date_end1, 'DD.MM.RRRR' )                                            "+ "\n" +
         "    and zn_kat.t_objecttype(+) = 501                                                                              "+ "\n" +
         "    and zn_kat.t_groupid(+) = 117                                                                                 "+ "\n" +
         "    and paym.t_valuedate between to_date ( :date_beg1, 'DD.MM.RRRR' ) and to_date ( :date_end2, 'DD.MM.RRRR' )    "+ "\n" +
         "    and paym.t_paymstatus >= 2990                                                                                 "+ "\n" +
         "    and paym.t_chapter = 1                                                                                        "+ "\n" +
         "    and not (substr(paym.t_receiveraccount,1,3) = '423' and substr(paym.t_payeraccount,1,5) = '423')              "+ "\n" +
         "    and not (substr(paym.t_receiveraccount,1,5) = '42601' and substr(paym.t_payeraccount,1,5) = '42601')          "+ "\n" +
         "    and not (substr(paym.t_receiveraccount,1,5) = '40807' or  substr(paym.t_payeraccount,1,5) = '40807')          "+ "\n" +
         "    and not (substr(paym.t_receiveraccount,1,5) = '40802' or  substr(paym.t_payeraccount,1,5) = '40802')          "+ "\n" ;
    if(not(fgBank.is_SLD))
         uni_select = uni_select + 
         "    and not (substr(paym.t_receiveraccount,1,5) = '40817' or  substr(paym.t_payeraccount,1,5) = '40817')          "+ "\n" ;
    end;
         useprogress(1);
         if(ot4_flag_47416 == "X")
            uni_param = makeArray (SQLParam ("podrazdel",     string(podrazdel(8))),
                                   SQLParam ("date_end1",     string(ot4_data_end)),
                                   SQLParam ("date_beg1",     string(ot4_data_begin)),
                                   SQLParam ("date_end2",     string(ot4_data_end)),
                                   SQLParam ("payer_like",    string(payerMask(8))),
                                   SQLParam ("receiver_like", string(receiverMask(8))));
            out_sql(uni_select,uni_param,9,ID_period,true);
            out_sql(uni_select,uni_param,10,ID_period,true);
         else
            while(i <= 8)
               uni_param = makeArray (SQLParam ("podrazdel",     string(podrazdel(i-1))),
                                      SQLParam ("date_end1",     string(ot4_data_end)),
                                      SQLParam ("date_beg1",     string(ot4_data_begin)),
                                      SQLParam ("date_end2",     string(ot4_data_end)),
                                      SQLParam ("payer_like",    string(payerMask(i-1))),
                                      SQLParam ("receiver_like", string(receiverMask(i-1))));
              out_sql(uni_select,uni_param,i,ID_period,true);
              message("   == Выведено: "+ i +" подпункт из 8 =====");
              i = i + 1;
              useprogress(i);
            end;
         end;
      else
         uni_select = 
         " Select T_PODRAZDEL podrazdel,                           "+ 
         "        T_NUMB_DOC ndoc,                                 "+
         "        T_DATE_DOC ddoc,                                 "+
         "        T_AMOUNT summa,                                  "+
         "        T_FI_CODE valuta,                                "+
         "        T_PAYERNAME plat,                                "+
         "        T_PAYERACCOUNT c4_plat,                          "+ 
         "        T_PAYERBANKNAME b_plat,                          "+
         "        T_RECEIVERNAME polu4,                            "+ 
         "        T_RECEIVERACCOUNT c4_polu4,                      "+ 
         "        T_RECEIVERBANKNAME b_polu4,                      "+ 
         "        T_GROUND osnov,                                  "+ 
         "        T_PAYMENTKIND paymentKind,                       "+ 
         "        T_COUNTRYCODE kat117,                            "+
         "        T_CONTR_KIND ContrKind                           "+
         "   from DDOCINFO_F407_DBT where T_PERIOD_ID = :period_id ";
         uni_param = makeArray (SQLParam ("period_id", ID_period));
         out_sql(uni_select,uni_param,1,ID_period,false);
      end;
      format_select;
      ex.visible=true;
    END;
 

    MACRO insert_row_date(dateBeg: Date, dateEnd: Date)
debugbreak;
debugbreak;
        var insertDate,selectDate,period_ID,DeleteDate;
        var param = makeArray(SQLParam ("db",ot4_data_begin),
                              SQLParam ("de",ot4_data_end));
        selectDate = ExecSQLselect("select T_PERIOD_ID from DPERIOD_F407_DBT where T_DATE_BEGIN = :db and T_DATE_END = :de",param);
        if(selectDate.movenext())
           period_ID = selectDate.value("T_PERIOD_ID");
           if(ot4_flag_47416 != "X")
              if( gettrue(true,"Данный период уже рассчитан, пересчитать?"))
                 DeleteDate = rsdcommand("Delete from DDOCINFO_F407_DBT where T_PERIOD_ID = " + period_ID);
                 DeleteDate.execute;               
                 outputinexcel(true,period_ID);  
              else
                 outputinexcel(false,period_ID); 
              end;
           else
              outputinexcel(true,period_ID);  
           end;
        else
           insertDate = rsdcommand("insert into DPERIOD_F407_DBT values(0,'" + dateBeg + "','" + dateEnd + "')");
           insertDate.execute;
           selectDate = ExecSQLselect("select T_PERIOD_ID from DPERIOD_F407_DBT where T_DATE_BEGIN = :db and T_DATE_END = :de",param);
           selectDate.movenext();
           period_ID = selectDate.value("T_PERIOD_ID");
           outputinexcel(true,period_ID); 
        end;


    END;    

    MACRO selectDir( Folder )

       var ShellObject = CreateObject( "rsax", "TRsAxServer", "RsAxServer", false ).CreateComObject( "Shell.Application", true );
       var browseFoldr = ShellObject.BrowseForFolder( 0, "Выбор папки", 529 );

       if( browseFoldr != null )
           Folder = browseFoldr.Self.Path;
           if( SubStr( Folder, 1, 1 ) == "\\" )
               setparm( 0, Folder );
           else
               setparm( 0, "$" + Folder );
           end;
           return true;
       else
           return false;
       end;
       onerror return false;
    END;


    MACRO Export_PTK_407(d_begin:date,d_end:date)
       private var nameFileToExport,select_data,Export_data,parametrs,BIK_Bank,date_end,date_begin,ex_date_end,i;
       nameFileToExport = GetTxtFileName("F407_PtkExportFile");
       setOutput(nameFileToExport);
       SetDefPrec (0);
       array columnCode;
       columnCode(0) = {mfo_bank};  columnCode(3) = "Kod2";     columnCode(6) = "Kod_op";
       columnCode(1) = "str_code";  columnCode(4) = "Kod3";     columnCode(7) = "Kod_v";
       columnCode(2) = "Kod1";      columnCode(5) = "country";  columnCode(8) = "kol";
                                                             columnCode(9) = "Sum";
       select_data =
       " select to_char(:de1+1,'dd.mm.yyyy') exp_date,                                                                                      "+
       "        substr(T_PODRAZDEL,1,2)||'0'||substr(T_PODRAZDEL,3,1)||decode(T_CONTR_KIND,'ФЛ','1','ЮЛ','2','3')||T_COUNTRYCODE||T_PAYMENTKIND||decode(T_FI_CODE,'810','643',T_FI_CODE) Kod_Str, "+
       "        substr(T_PODRAZDEL,1,2) Kod1,                                                                                               "+
       "        substr(T_PODRAZDEL,3,1) Kod2,                                                                                               "+
       "        decode(T_CONTR_KIND,'ФЛ','1','ЮЛ','2','3') Kod3,                                                                            "+
       "        T_COUNTRYCODE country,                                                                                                      "+
       "        T_PAYMENTKIND Kod_op,                                                                                                       "+
       "        decode(T_FI_CODE,'810','643',T_FI_CODE) Kod_v,                                                                              "+
       "        count(1) kol,                                                                                                               "+
       "        trunc(sum(T_AMOUNT)) sum                                                                                                    "+
       "   from DDOCINFO_F407_DBT dd,DPERIOD_F407_DBT dp                                                                                    "+
       "  where DD.T_PERIOD_ID = DP.T_PERIOD_ID                                                                                             "+
       "    and DP.T_DATE_BEGIN = :db                                                                                                       "+
       "    and DP.T_DATE_END = :de                                                                                                         "+
       "  group by T_PODRAZDEL,T_CONTR_KIND,T_COUNTRYCODE,T_PAYMENTKIND,T_FI_CODE                                                           ";

       parametrs = makeArray(SQLParam ("de1",date(d_end)),
                             SQLParam ("db", date(d_begin)),
                             SQLParam ("de", date(d_end)));
       Export_data = ExecSQLselect(Select_data,parametrs);


       while(Export_data.movenext())
          columnCode(1) = Export_data.value("Kod_Str");
          i = 2;
          while(i<=9)
             println(columnCode(0) + "\t" + Export_data.value("exp_date") + "\t" + "F407" + "\t" + columnCode(1) + "\t" + columnCode(i) + "\t" + Export_data.value(i) + "\t" + "$empty$");
             i = i + 1;
          end;
       end;
       SetOutput ( NULL, TRUE);
       var filefolder;
       selectDir(filefolder);
       var m_path = filefolder + "\\F407_PtkExportFile.407";

       if( not CopyFile(nameFileToExport, m_path, TRUE));
          msgbox("CopyFileError");
       end;

       println();
       println("          Файл экспорта в ПТК ПСД сформирован");
       println();
       println("          расположен по адресу:");
       println();
       println("          " + nameFileToExport);
       println();
       println("          копия расположена в выбранную Вами папку:");
       println();
       println("         " + m_path);
    END;

    MACRO Export_Kliko_407(d_begin:date,d_end:date)
       private var nameFileToExport,select_data,Export_data,parametrs,BIK_Bank,date_end,date_begin,ex_date_end,i;
       nameFileToExport = GetTxtFileName("F407_KlikoExportFile");
       setOutput(nameFileToExport);
       SetDefPrec (0);

       select_data =
    "   SELECT   SUBSTR (T_PODRAZDEL, 1, 2) field0,                             "+ "\n" +
    "            DECODE (SUBSTR (T_PODRAZDEL, 3, 1),                            "+ "\n" +
    "                    '1', 'переводы из РФ',                                 "+ "\n" +
    "                    '2', 'переводы в РФ',                                  "+ "\n" +
    "                    ' - ') field1,                                         "+ "\n" +
    "            DECODE (T_CONTR_KIND, '3', ' ', T_CONTR_KIND) T_CONTR_KIND,    "+ "\n" +
    "            T_COUNTRYCODE country,                                         "+ "\n" +
    "            T_PAYMENTKIND Kod_op,                                          "+ "\n" +
    "            DECODE (T_FI_CODE, '810', '643', T_FI_CODE) Kod_v,             "+ "\n" +
    "            COUNT (1) kol,                                                 "+ "\n" +
    "            TRUNC (SUM (T_AMOUNT)) SUM                                     "+ "\n" +
    "     FROM   DDOCINFO_F407_DBT dd, DPERIOD_F407_DBT dp                      "+ "\n" +
    "    WHERE       DD.T_PERIOD_ID = DP.T_PERIOD_ID                            "+ "\n" +
    "            AND DP.T_DATE_BEGIN = :db                                      "+ "\n" +
    "            AND DP.T_DATE_END = :de                                        "+ "\n" +
    " GROUP BY   T_PODRAZDEL,                                                   "+ "\n" +
    "            T_CONTR_KIND,                                                  "+ "\n" +
    "            T_COUNTRYCODE,                                                 "+ "\n" +
    "            T_PAYMENTKIND,                                                 "+ "\n" +
    "            T_FI_CODE                                                      "+ "\n" +
    " ORDER BY   field0,                                                        "+ "\n" +
    "            field1,                                                        "+ "\n" +
    "            T_CONTR_KIND,                                                  "+ "\n" +
    "            country                                                        "+ "\n" ;
       parametrs = makeArray(SQLParam ("db", date(d_begin)),
                             SQLParam ("de", date(d_end)));
       Export_data = ExecSQLselect(Select_data,parametrs);

       println("<F407_2_1>");
       while(Export_data.movenext())
          if(Export_data.value("field0") == "22") 
            if(needPrintHead)
               println("<F407_2_2>");
               needPrintHead = false;
            end;
            println("\""+ Export_data.value("field1")      +"\",\""+ 
                          Export_data.value("T_CONTR_KIND") +"\",\""+ 
                          Export_data.value("country")      +"\",\""+ 
                          Export_data.value("Kod_v")        +"\",\""+ 
                          Export_data.value("kol")          +"\",\""+ 
                          Export_data.value("SUM")          +"\"");
          else
            println("\""+ Export_data.value("field1")      +"\",\""+ 
                          Export_data.value("T_CONTR_KIND") +"\",\""+ 
                          Export_data.value("country")      +"\",\""+ 
                          Export_data.value("Kod_op")       +"\",\""+ 
                          Export_data.value("Kod_v")        +"\",\""+ 
                          Export_data.value("kol")          +"\",\""+ 
                          Export_data.value("SUM")          +"\"");
          end;
       end;
       SetOutput ( NULL, TRUE);
       var filefolder;
       selectDir(filefolder);
       var m_path = filefolder + "\\F407_KlikoExportFile.407";

       if( not CopyFile(nameFileToExport, m_path, TRUE));
          msgbox("CopyFileError");
       end;

       println();
       println("          Файл экспорта в Kliko сформирован");
       println();
       println("          расположен по адресу:");
       println();
       println("          " + nameFileToExport);
       println();
       println("          копия расположена в выбранную Вами папку:");
       println();
       println("         " + m_path);
    END;


    MACRO EvMacro (dlg, cmd, id, key)

       if(cmd==DLG_INIT)
          message("~F2~ продолжить,  ~ESC~ выход");
          dlg.rec.Date_begin = {curdate};
          dlg.rec.Date_end = {curdate};
          UpdateFields(dlg); 
       end;
 
       if(cmd == DLG_REMFOCUS)
          if(FldName(dlg,id)=="date_begin")
             if( dlg.rec.Date_begin > {curdate} )
                MsgBox("Дата начала больше даты текущего операционного дня"); 
                return CM_CANCEL;
             end;
          end;
          if(FldName(dlg,id)=="date_end")
             if( dlg.rec.Date_end > {curdate} )
                MsgBox("Дата конца больше даты текущего операционного дня"); 
                return CM_CANCEL;
             end;
          end;
          UpdateFields(dlg); 
       end;    
 
       if(cmd==DLG_KEY)
          if(KEY==KEY_F9)
             return CM_ignore;
          end; //if F9
 
          if(KEY==KEY_ENTER)
             return CM_ignore;
          end; //if F9
 
          if(KEY==KEY_F3)
          if (FldName(dlg,id) == "operKind")
             operKind(0) = "Расчет формы 407  ";
             operKind(1) = "Экспорт в ПТК ПСД ";
             operKind(2) = "Экспорт в Kliko   ";
             MenuChoise = Menu(operKind, "Меню");
	     if (MenuChoise >= 0)
               dlg.rec.operKind = operKind(MenuChoise);                       
             end;
          UpdateFields(dlg); 
          end;
             return CM_ignore;
          end; //if F3
 
          if((key == KEY_SPACE) and (trim(fldname(dlg, id)) == "flag_47416"))      
             dlg.rec.flag_47416 = strfor (88 - codefor (dlg.rec.flag_47416));              
             return CM_DEFAULT;                                                 
          end;                                                                   

          if((key == KEY_SPACE) and (trim(fldname(dlg, id)) == "Flag_export"))      
             dlg.rec.Flag_export = strfor (88 - codefor (dlg.rec.Flag_export));              
             return CM_DEFAULT;                                                 
          end;                                                                   

          if(KEY==KEY_F2)
             ot4_data_begin=dlg.rec.Date_begin;
             ot4_data_end=dlg.rec.Date_end;
             ot4_flag_47416 = dlg.rec.flag_47416;
             if(dlg.rec.operKind == "Экспорт в ПТК ПСД ")
                ot4_flag_exportPTK = true;
             elif(dlg.rec.operKind == "Экспорт в Kliko   ")
                ot4_flag_exportKliko = true;
             else
                ot4_flag_calculate = true;
             end;
             if((ot4_data_begin>{curdate}) or (ot4_data_end>{curdate})) 
                msgbox("значение даты больше текущего опердня"); return CM_ignore;
             else     
                rabota_time_begin=time();
                return CM_SAVE;
             end;
          end; //if F2
 
          if(KEY==KEY_ESC)
             exit(1);
             return CM_CANCEL;
          end; //if esc
 
       end; //if DLG_KEY
    END; //evmacro


    if(rundialog(dlg,"evmacro")) 
       if(ot4_flag_exportPTK == true)
          Export_PTK_407(ot4_data_begin,ot4_data_end);
       elif(ot4_flag_exportKliko == true)
          Export_Kliko_407(ot4_data_begin,ot4_data_end);
       else
          insert_row_date(ot4_data_begin,ot4_data_end);
          println();
          println("                                       ОТЧЕТ СФОРМИРОВАН В EXCEL");
          println();
          println("                                 для продолжения работы нажмите ESC");
          println("                                                                 ");
          println("                                                                   ");
          println("                              время формирования отчета:       ",Time()-rabota_time_begin);
       end;   
    end;



                            